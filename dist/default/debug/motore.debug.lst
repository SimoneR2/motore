

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Feb 01 18:41:14 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataCOMRAM
    42  002682                     __pidataCOMRAM:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _dir
    46  002682  0001               	dw	1
    47                           
    48                           ;initializer for _duty_set
    49  002684  00C8               	dw	200
    50                           
    51                           ;initializer for _previousPwm
    52  002686  00C8               	dw	200
    53                           
    54                           ;initializer for _currentSpeed
    55  002688  01                 	db	1
    56                           
    57                           ;initializer for _delay_quartz_frequency_value
    58  002689  10                 	db	16
    59  0000                     _RXB1CON	set	3920
    60  0000                     _RXB1CONbits	set	3920
    61  0000                     _RXB1D0	set	3926
    62  0000                     _RXB1D1	set	3927
    63  0000                     _RXB1D2	set	3928
    64  0000                     _RXB1D3	set	3929
    65  0000                     _RXB1D4	set	3930
    66  0000                     _RXB1D5	set	3931
    67  0000                     _RXB1D6	set	3932
    68  0000                     _RXB1D7	set	3933
    69  0000                     _RXB1DLC	set	3925
    70  0000                     _RXB1DLCbits	set	3925
    71  0000                     _RXB1EIDH	set	3923
    72  0000                     _RXB1EIDL	set	3924
    73  0000                     _RXB1SIDH	set	3921
    74  0000                     _RXB1SIDL	set	3922
    75  0000                     _RXB1SIDLbits	set	3922
    76  0000                     _RXF0EIDH	set	3842
    77  0000                     _RXF0EIDL	set	3843
    78  0000                     _RXF0SIDH	set	3840
    79  0000                     _RXF0SIDL	set	3841
    80  0000                     _RXF0SIDLbits	set	3841
    81  0000                     _RXF1EIDH	set	3846
    82  0000                     _RXF1EIDL	set	3847
    83  0000                     _RXF1SIDH	set	3844
    84  0000                     _RXF1SIDL	set	3845
    85  0000                     _RXF1SIDLbits	set	3845
    86  0000                     _RXF2EIDH	set	3850
    87  0000                     _RXF2EIDL	set	3851
    88  0000                     _RXF2SIDH	set	3848
    89  0000                     _RXF2SIDL	set	3849
    90  0000                     _RXF2SIDLbits	set	3849
    91  0000                     _RXF3EIDH	set	3854
    92  0000                     _RXF3EIDL	set	3855
    93  0000                     _RXF3SIDH	set	3852
    94  0000                     _RXF3SIDL	set	3853
    95  0000                     _RXF3SIDLbits	set	3853
    96  0000                     _RXF4EIDH	set	3858
    97  0000                     _RXF4EIDL	set	3859
    98  0000                     _RXF4SIDH	set	3856
    99  0000                     _RXF4SIDL	set	3857
   100  0000                     _RXF4SIDLbits	set	3857
   101  0000                     _RXF5EIDH	set	3862
   102  0000                     _RXF5EIDL	set	3863
   103  0000                     _RXF5SIDH	set	3860
   104  0000                     _RXF5SIDL	set	3861
   105  0000                     _RXF5SIDLbits	set	3861
   106  0000                     _RXM0EIDH	set	3866
   107  0000                     _RXM0EIDL	set	3867
   108  0000                     _RXM0SIDH	set	3864
   109  0000                     _RXM0SIDL	set	3865
   110  0000                     _RXM0SIDLbits	set	3865
   111  0000                     _RXM1EIDH	set	3870
   112  0000                     _RXM1EIDL	set	3871
   113  0000                     _RXM1SIDH	set	3868
   114  0000                     _RXM1SIDL	set	3869
   115  0000                     _RXM1SIDLbits	set	3869
   116  0000                     _TXB0CONbits	set	3904
   117  0000                     _TXB0D0	set	3910
   118  0000                     _TXB0D1	set	3911
   119  0000                     _TXB0D2	set	3912
   120  0000                     _TXB0D3	set	3913
   121  0000                     _TXB0D4	set	3914
   122  0000                     _TXB0D5	set	3915
   123  0000                     _TXB0D6	set	3916
   124  0000                     _TXB0D7	set	3917
   125  0000                     _TXB0DLC	set	3909
   126  0000                     _TXB0DLCbits	set	3909
   127  0000                     _TXB0EIDH	set	3907
   128  0000                     _TXB0EIDL	set	3908
   129  0000                     _TXB0SIDH	set	3905
   130  0000                     _TXB0SIDL	set	3906
   131  0000                     _TXB0SIDLbits	set	3906
   132  0000                     _TXB1CONbits	set	3888
   133  0000                     _TXB1D0	set	3894
   134  0000                     _TXB1D1	set	3895
   135  0000                     _TXB1D2	set	3896
   136  0000                     _TXB1D3	set	3897
   137  0000                     _TXB1D4	set	3898
   138  0000                     _TXB1D5	set	3899
   139  0000                     _TXB1D6	set	3900
   140  0000                     _TXB1D7	set	3901
   141  0000                     _TXB1DLC	set	3893
   142  0000                     _TXB1DLCbits	set	3893
   143  0000                     _TXB1EIDH	set	3891
   144  0000                     _TXB1EIDL	set	3892
   145  0000                     _TXB1SIDH	set	3889
   146  0000                     _TXB1SIDL	set	3890
   147  0000                     _TXB1SIDLbits	set	3890
   148  0000                     _TXB2CONbits	set	3872
   149  0000                     _TXB2D0	set	3878
   150  0000                     _TXB2D1	set	3879
   151  0000                     _TXB2D2	set	3880
   152  0000                     _TXB2D3	set	3881
   153  0000                     _TXB2D4	set	3882
   154  0000                     _TXB2D5	set	3883
   155  0000                     _TXB2D6	set	3884
   156  0000                     _TXB2D7	set	3885
   157  0000                     _TXB2DLC	set	3877
   158  0000                     _TXB2DLCbits	set	3877
   159  0000                     _TXB2EIDH	set	3875
   160  0000                     _TXB2EIDL	set	3876
   161  0000                     _TXB2SIDH	set	3873
   162  0000                     _TXB2SIDL	set	3874
   163  0000                     _TXB2SIDLbits	set	3874
   164  0000                     _ADCON0bits	set	4034
   165  0000                     _ADCON1bits	set	4033
   166  0000                     _ADCON2bits	set	4032
   167  0000                     _ADRESH	set	4036
   168  0000                     _BRGCON1	set	3952
   169  0000                     _BRGCON2	set	3953
   170  0000                     _BRGCON2bits	set	3953
   171  0000                     _BRGCON3	set	3954
   172  0000                     _BRGCON3bits	set	3954
   173  0000                     _CANCON	set	3951
   174  0000                     _CANCONbits	set	3951
   175  0000                     _CANSTAT	set	3950
   176  0000                     _COMSTATbits	set	3956
   177  0000                     _ECCP1CON	set	4026
   178  0000                     _ECCPR1L	set	4027
   179  0000                     _INTCONbits	set	4082
   180  0000                     _IPR2bits	set	4002
   181  0000                     _IPR3bits	set	4005
   182  0000                     _LATA	set	3977
   183  0000                     _LATB	set	3978
   184  0000                     _LATC	set	3979
   185  0000                     _LATD	set	3980
   186  0000                     _LATE	set	3981
   187  0000                     _PIE1bits	set	3997
   188  0000                     _PIE2bits	set	4000
   189  0000                     _PIE3bits	set	4003
   190  0000                     _PIR1bits	set	3998
   191  0000                     _PIR2bits	set	4001
   192  0000                     _PIR3bits	set	4004
   193  0000                     _PORTAbits	set	3968
   194  0000                     _PORTCbits	set	3970
   195  0000                     _PR2	set	4043
   196  0000                     _RCONbits	set	4048
   197  0000                     _RXB0CON	set	3936
   198  0000                     _RXB0CONbits	set	3936
   199  0000                     _RXB0D0	set	3942
   200  0000                     _RXB0D1	set	3943
   201  0000                     _RXB0D2	set	3944
   202  0000                     _RXB0D3	set	3945
   203  0000                     _RXB0D4	set	3946
   204  0000                     _RXB0D5	set	3947
   205  0000                     _RXB0D6	set	3948
   206  0000                     _RXB0D7	set	3949
   207  0000                     _RXB0DLC	set	3941
   208  0000                     _RXB0DLCbits	set	3941
   209  0000                     _RXB0EIDH	set	3939
   210  0000                     _RXB0EIDL	set	3940
   211  0000                     _RXB0SIDH	set	3937
   212  0000                     _RXB0SIDL	set	3938
   213  0000                     _RXB0SIDLbits	set	3938
   214  0000                     _RXERRCNT	set	3957
   215  0000                     _T2CON	set	4042
   216  0000                     _T2CONbits	set	4042
   217  0000                     _T3CON	set	4017
   218  0000                     _TMR2	set	4044
   219  0000                     _TMR3H	set	4019
   220  0000                     _TMR3L	set	4018
   221  0000                     _TRISA	set	3986
   222  0000                     _TRISB	set	3987
   223  0000                     _TRISC	set	3988
   224  0000                     _TRISD	set	3989
   225  0000                     _TRISDbits	set	3989
   226  0000                     _TRISE	set	3990
   227  0000                     _TXERRCNT	set	3958
   228                           
   229                           ; #config settings
   230  0000                     
   231                           	psect	cinit
   232  00245A                     __pcinit:
   233                           	opt stack 0
   234  00245A                     start_initialization:
   235                           	opt stack 0
   236  00245A                     __initialization:
   237                           	opt stack 0
   238                           
   239                           ; Clear objects allocated to BANK0 (77 bytes)
   240  00245A  EE00  F060         	lfsr	0,__pbssBANK0
   241  00245E  0E4D               	movlw	77
   242  002460                     clear_0:
   243  002460  6AEE               	clrf	postinc0,c
   244  002462  06E8               	decf	wreg,f,c
   245  002464  E1FD               	bnz	clear_0
   246                           
   247                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   248  002466  6A39               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   249  002468  6A38               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   250                           
   251                           ; Clear objects allocated to COMRAM (19 bytes)
   252  00246A  EE00  F025         	lfsr	0,__pbssCOMRAM
   253  00246E  0E13               	movlw	19
   254  002470                     clear_1:
   255  002470  6AEE               	clrf	postinc0,c
   256  002472  06E8               	decf	wreg,f,c
   257  002474  E1FD               	bnz	clear_1
   258                           
   259                           ; Initialize objects allocated to COMRAM (8 bytes)
   260                           ; load TBLPTR registers with __pidataCOMRAM
   261  002476  0E82               	movlw	low __pidataCOMRAM
   262  002478  6EF6               	movwf	tblptrl,c
   263  00247A  0E26               	movlw	high __pidataCOMRAM
   264  00247C  6EF7               	movwf	tblptrh,c
   265  00247E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   266  002480  6EF8               	movwf	tblptru,c
   267  002482  EE00  F03A         	lfsr	0,__pdataCOMRAM
   268  002486  EE10 F008          	lfsr	1,8
   269  00248A                     copy_data0:
   270  00248A  0009               	tblrd		*+
   271  00248C  CFF5 FFEE          	movff	tablat,postinc0
   272  002490  50E5               	movf	postdec1,w,c
   273  002492  50E1               	movf	fsr1l,w,c
   274  002494  E1FA               	bnz	copy_data0
   275  002496                     end_of_initialization:
   276                           	opt stack 0
   277  002496                     __end_of__initialization:
   278                           	opt stack 0
   279  002496  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   280  002498  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   281  00249A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   282  00249C  6EF8               	movwf	tblptru,c
   283  00249E  0100               	movlb	0
   284  0024A0  EF31  F00C         	goto	_main	;jump to C main() function
   285                           tblptru	equ	0xFF8
   286                           tblptrh	equ	0xFF7
   287                           tblptrl	equ	0xFF6
   288                           tablat	equ	0xFF5
   289                           postinc0	equ	0xFEE
   290                           wreg	equ	0xFE8
   291                           postdec1	equ	0xFE5
   292                           fsr1l	equ	0xFE1
   293                           
   294                           	psect	bitbssCOMRAM
   295  0001C0                     __pbitbssCOMRAM:
   296                           	opt stack 0
   297  0001C0                     _can_retry:
   298                           	opt stack 0
   299  0001C0                     	ds	1
   300  0001C1                     _centralina_abs:
   301                           	opt stack 0
   302  0001C1                     	ds	1
   303  0001C2                     _centralina_comando:
   304                           	opt stack 0
   305  0001C2                     	ds	1
   306  0001C3                     _centralina_sterzo:
   307                           	opt stack 0
   308  0001C3                     	ds	1
   309  0001C4                     _message_sent:
   310                           	opt stack 0
   311  0001C4                     	ds	1
   312  0001C5                     _remote_frame:
   313                           	opt stack 0
   314  0001C5                     	ds	1
   315  0001C6                     _remote_frame1:
   316                           	opt stack 0
   317  0001C6                     	ds	1
   318  0001C7                     _request_sent:
   319                           	opt stack 0
   320  0001C7                     	ds	1
   321  0001C8                     _speed_fetched:
   322                           	opt stack 0
   323  0001C8                     	ds	1
   324                           tblptru	equ	0xFF8
   325                           tblptrh	equ	0xFF7
   326                           tblptrl	equ	0xFF6
   327                           tablat	equ	0xFF5
   328                           postinc0	equ	0xFEE
   329                           wreg	equ	0xFE8
   330                           postdec1	equ	0xFE5
   331                           fsr1l	equ	0xFE1
   332                           
   333                           	psect	bssCOMRAM
   334  000025                     __pbssCOMRAM:
   335                           	opt stack 0
   336  000025                     _id:
   337                           	opt stack 0
   338  000025                     	ds	4
   339  000029                     _timeCounter:
   340                           	opt stack 0
   341  000029                     	ds	4
   342  00002D                     _clock_counter_reference:
   343                           	opt stack 0
   344  00002D                     	ds	2
   345  00002F                     _correzione:
   346                           	opt stack 0
   347  00002F                     	ds	2
   348  000031                     _errore:
   349                           	opt stack 0
   350  000031                     	ds	2
   351  000033                     _vBatt:
   352                           	opt stack 0
   353  000033                     	ds	2
   354  000035                     _left_speed:
   355                           	opt stack 0
   356  000035                     	ds	1
   357  000036                     _requestSpeed:
   358                           	opt stack 0
   359  000036                     	ds	1
   360  000037                     _right_speed:
   361                           	opt stack 0
   362  000037                     	ds	1
   363                           tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           postdec1	equ	0xFE5
   370                           fsr1l	equ	0xFE1
   371                           
   372                           	psect	dataCOMRAM
   373  00003A                     __pdataCOMRAM:
   374                           	opt stack 0
   375  00003A                     _dir:
   376                           	opt stack 0
   377  00003A                     	ds	2
   378  00003C                     _duty_set:
   379                           	opt stack 0
   380  00003C                     	ds	2
   381  00003E                     _previousPwm:
   382                           	opt stack 0
   383  00003E                     	ds	2
   384  000040                     _currentSpeed:
   385                           	opt stack 0
   386  000040                     	ds	1
   387  000041                     _delay_quartz_frequency_value:
   388                           	opt stack 0
   389  000041                     	ds	1
   390                           tblptru	equ	0xFF8
   391                           tblptrh	equ	0xFF7
   392                           tblptrl	equ	0xFF6
   393                           tablat	equ	0xFF5
   394                           postinc0	equ	0xFEE
   395                           wreg	equ	0xFE8
   396                           postdec1	equ	0xFE5
   397                           fsr1l	equ	0xFE1
   398                           
   399                           	psect	bssBANK0
   400  000060                     __pbssBANK0:
   401                           	opt stack 0
   402  000060                     _counter_array:
   403                           	opt stack 0
   404  000060                     	ds	8
   405  000068                     _currentSpeed_array:
   406                           	opt stack 0
   407  000068                     	ds	8
   408  000070                     _counter:
   409                           	opt stack 0
   410  000070                     	ds	4
   411  000074                     _id1:
   412                           	opt stack 0
   413  000074                     	ds	4
   414  000078                     _previousTimeCounter:
   415                           	opt stack 0
   416  000078                     	ds	4
   417  00007C                     _previousTimeCounter1:
   418                           	opt stack 0
   419  00007C                     	ds	4
   420  000080                     _previousTimeCounter2:
   421                           	opt stack 0
   422  000080                     	ds	4
   423  000084                     _duty_cycle:
   424                           	opt stack 0
   425  000084                     	ds	2
   426  000086                     _msg:
   427                           	opt stack 0
   428  000086                     	ds	15
   429  000095                     _data_array:
   430                           	opt stack 0
   431  000095                     	ds	8
   432  00009D                     _data_array1:
   433                           	opt stack 0
   434  00009D                     	ds	8
   435  0000A5                     _data_array_debug:
   436                           	opt stack 0
   437  0000A5                     	ds	8
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           postdec1	equ	0xFE5
   445                           fsr1l	equ	0xFE1
   446                           
   447                           	psect	cstackBANK0
   448  0000AD                     __pcstackBANK0:
   449                           	opt stack 0
   450  0000AD                     ??_CANSetMask:
   451  0000AD                     ??_CANSetFilter:
   452  0000AD                     ___awdiv@counter:
   453                           	opt stack 0
   454  0000AD                     CANsendMessage@identifier:
   455                           	opt stack 0
   456                           
   457                           ; 4 bytes @ 0x0
   458  0000AD                     	ds	1
   459  0000AE                     ___awdiv@sign:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0x1
   463  0000AE                     	ds	1
   464  0000AF                     ___awdiv@quotient:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x2
   468  0000AF                     	ds	2
   469  0000B1                     ?___wmul:
   470                           	opt stack 0
   471  0000B1                     CANSetMask@numBuffer:
   472                           	opt stack 0
   473  0000B1                     CANSetFilter@numBuffer:
   474                           	opt stack 0
   475  0000B1                     CANsendMessage@data:
   476                           	opt stack 0
   477  0000B1                     ___wmul@multiplier:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x4
   481  0000B1                     	ds	1
   482  0000B2                     CANSetMask@tamp:
   483                           	opt stack 0
   484  0000B2                     CANSetFilter@tamp:
   485                           	opt stack 0
   486                           
   487                           ; 4 bytes @ 0x5
   488  0000B2                     	ds	1
   489  0000B3                     CANsendMessage@dataLength:
   490                           	opt stack 0
   491  0000B3                     ___wmul@multiplicand:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x6
   495  0000B3                     	ds	1
   496  0000B4                     CANsendMessage@flags:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x7
   500  0000B4                     	ds	1
   501  0000B5                     ?_abs:
   502                           	opt stack 0
   503  0000B5                     delay_ms@value_ms:
   504                           	opt stack 0
   505  0000B5                     abs@a:
   506                           	opt stack 0
   507  0000B5                     CANsendMessage@tamp:
   508                           	opt stack 0
   509                           
   510                           ; 4 bytes @ 0x8
   511  0000B5                     	ds	1
   512  0000B6                     CANInitialize@phaseSeg1:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x9
   516  0000B6                     	ds	1
   517  0000B7                     ??_abs:
   518  0000B7                     CANInitialize@phaseSeg2:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0xA
   522  0000B7                     	ds	1
   523  0000B8                     CANInitialize@SJW:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0xB
   527  0000B8                     	ds	1
   528  0000B9                     CANInitialize@BRP:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0xC
   532  0000B9                     	ds	1
   533  0000BA                     CANInitialize@flags:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0xD
   537  0000BA                     	ds	1
   538  0000BB                     ??_CANInitialize:
   539                           
   540                           ; 0 bytes @ 0xE
   541  0000BB                     	ds	4
   542  0000BF                     CANInitialize@propSeg:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x12
   546  0000BF                     	ds	1
   547  0000C0                     CANInitialize@FilterConfig1:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x13
   551  0000C0                     	ds	1
   552  0000C1                     CANInitialize@FilterConfig2:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x14
   556  0000C1                     	ds	1
   557  0000C2                     ??_main:
   558                           
   559                           ; 0 bytes @ 0x15
   560  0000C2                     	ds	8
   561                           tblptru	equ	0xFF8
   562                           tblptrh	equ	0xFF7
   563                           tblptrl	equ	0xFF6
   564                           tablat	equ	0xFF5
   565                           postinc0	equ	0xFEE
   566                           wreg	equ	0xFE8
   567                           postdec1	equ	0xFE5
   568                           fsr1l	equ	0xFE1
   569                           
   570                           	psect	cstackCOMRAM
   571  000001                     __pcstackCOMRAM:
   572                           	opt stack 0
   573  000001                     _CANisRxReady$2995:
   574                           	opt stack 0
   575  000001                     i1SetOutputEPWM1@outputmode:
   576                           	opt stack 0
   577  000001                     CANreceiveMessage@msg:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x0
   581  000001                     	ds	1
   582  000002                     i1SetOutputEPWM1@outputconfig:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x1
   586  000002                     	ds	1
   587  000003                     ??_CANreceiveMessage:
   588                           
   589                           ; 0 bytes @ 0x2
   590  000003                     	ds	8
   591  00000B                     CANreceiveMessage@error:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0xA
   595  00000B                     	ds	1
   596  00000C                     CANreceiveMessage@tamp:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0xB
   600  00000C                     	ds	1
   601  00000D                     ??_ISR_bassa:
   602                           
   603                           ; 0 bytes @ 0xC
   604  00000D                     	ds	17
   605  00001E                     ??_CANsendMessage:
   606  00001E                     ?___awdiv:
   607                           	opt stack 0
   608  00001E                     CANOperationMode@mode:
   609                           	opt stack 0
   610  00001E                     _CANisTxReady$2993:
   611                           	opt stack 0
   612  00001E                     OpenEPWM1@period:
   613                           	opt stack 0
   614  00001E                     SetOutputEPWM1@outputmode:
   615                           	opt stack 0
   616  00001E                     OpenTimer2@config:
   617                           	opt stack 0
   618  00001E                     SetDCEPWM1@dutycycle:
   619                           	opt stack 0
   620  00001E                     ___awdiv@dividend:
   621                           	opt stack 0
   622  00001E                     CANSetMask@mask:
   623                           	opt stack 0
   624  00001E                     CANSetFilter@filter:
   625                           	opt stack 0
   626                           
   627                           ; 4 bytes @ 0x1D
   628  00001E                     	ds	1
   629  00001F                     SetOutputEPWM1@outputconfig:
   630                           	opt stack 0
   631                           
   632                           ; 1 bytes @ 0x1E
   633  00001F                     	ds	1
   634  000020                     ??_SetDCEPWM1:
   635  000020                     ___awdiv@divisor:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x1F
   639  000020                     	ds	2
   640  000022                     CANSetMask@type:
   641                           	opt stack 0
   642  000022                     CANSetFilter@type:
   643                           	opt stack 0
   644  000022                     send_data@i:
   645                           	opt stack 0
   646  000022                     SetDCEPWM1@DCycle:
   647                           	opt stack 0
   648  000022                     ___wmul@product:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x21
   652  000022                     	ds	2
   653  000024                     main@period:
   654                           	opt stack 0
   655                           
   656                           ; 1 bytes @ 0x23
   657  000024                     	ds	1
   658                           tblptru	equ	0xFF8
   659                           tblptrh	equ	0xFF7
   660                           tblptrl	equ	0xFF6
   661                           tablat	equ	0xFF5
   662                           postinc0	equ	0xFEE
   663                           wreg	equ	0xFE8
   664                           postdec1	equ	0xFE5
   665                           fsr1l	equ	0xFE1
   666                           
   667 ;;
   668 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   669 ;;
   670 ;; *************** function _main *****************
   671 ;; Defined at:
   672 ;;		line 143 in file "motore.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;  period          1   35[COMRAM] unsigned char 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  2  668[None  ] int 
   679 ;; Registers used:
   680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   686 ;;      Params:         0       0       0       0
   687 ;;      Locals:         1       0       0       0
   688 ;;      Temps:          0       8       0       0
   689 ;;      Totals:         1       8       0       0
   690 ;;Total ram usage:        9 bytes
   691 ;; Hardware stack levels required when called:    5
   692 ;; This function calls:
   693 ;;		_CANisRXwarningON
   694 ;;		_CANisTXwarningON
   695 ;;		_CANsendMessage
   696 ;;		_OpenEPWM1
   697 ;;		_OpenTimer2
   698 ;;		_SetDCEPWM1
   699 ;;		_SetOutputEPWM1
   700 ;;		___awdiv
   701 ;;		___wmul
   702 ;;		_abs
   703 ;;		_battery_measure
   704 ;;		_configurazione_iniziale
   705 ;;		_delay_ms
   706 ;;		_send_data
   707 ;; This function is called by:
   708 ;;		Startup code after reset
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text0
   713  001862                     __ptext0:
   714                           	opt stack 0
   715  001862                     _main:
   716                           	opt stack 26
   717                           
   718                           ;motore.c: 144: unsigned char period;
   719                           ;motore.c: 145: configurazione_iniziale();
   720                           
   721                           ;incstack = 0
   722  001862  EC42  F011         	call	_configurazione_iniziale	;wreg free
   723                           
   724                           ;motore.c: 146: PORTAbits.RA1 = 1;
   725  001866  8280               	bsf	3968,1,c	;volatile
   726                           
   727                           ;motore.c: 147: PORTCbits.RC1 = 1;
   728  001868  8282               	bsf	3970,1,c	;volatile
   729                           
   730                           ;motore.c: 148: delay_ms(500);
   731  00186A  0E01               	movlw	1
   732  00186C  0100               	movlb	0	; () banked
   733  00186E  6FB6               	movwf	(delay_ms@value_ms+1)& (0+255),b
   734  001870  0EF4               	movlw	244
   735  001872  6FB5               	movwf	delay_ms@value_ms& (0+255),b
   736  001874  ECB3  F012         	call	_delay_ms	;wreg free
   737                           
   738                           ;motore.c: 149: PORTAbits.RA1 = 0;
   739  001878  9280               	bcf	3968,1,c	;volatile
   740                           
   741                           ;motore.c: 150: PORTCbits.RC1 = 0;
   742  00187A  9282               	bcf	3970,1,c	;volatile
   743                           
   744                           ;motore.c: 151: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
   745  00187C  0E06               	movlw	6
   746  00187E  EC0B  F013         	call	_OpenTimer2
   747                           
   748                           ;motore.c: 152: period = 0xFE;
   749  001882  0EFE               	movlw	254
   750  001884  6E24               	movwf	main@period,c
   751                           
   752                           ;motore.c: 153: OpenEPWM1(period);
   753  001886  5024               	movf	main@period,w,c
   754  001888  EC2D  F013         	call	_OpenEPWM1
   755                           
   756                           ;motore.c: 154: speed_fetched = 1;
   757  00188C  8039               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   758                           
   759                           ;motore.c: 155: SetOutputEPWM1(0b01111111, 0b11111100);
   760  00188E  0EFC               	movlw	252
   761  001890  6E1E               	movwf	SetOutputEPWM1@outputmode,c
   762  001892  0E7F               	movlw	127
   763  001894  EC52  F012         	call	_SetOutputEPWM1
   764                           
   765                           ;motore.c: 156: SetDCEPWM1(300);
   766  001898  0E01               	movlw	1
   767  00189A  6E1F               	movwf	SetDCEPWM1@dutycycle+1,c
   768  00189C  0E2C               	movlw	44
   769  00189E  6E1E               	movwf	SetDCEPWM1@dutycycle,c
   770  0018A0  EC96  F012         	call	_SetDCEPWM1	;wreg free
   771                           
   772                           ;motore.c: 157: delay_ms(500);
   773  0018A4  0E01               	movlw	1
   774  0018A6  0100               	movlb	0	; () banked
   775  0018A8  6FB6               	movwf	(delay_ms@value_ms+1)& (0+255),b
   776  0018AA  0EF4               	movlw	244
   777  0018AC  6FB5               	movwf	delay_ms@value_ms& (0+255),b
   778  0018AE  ECB3  F012         	call	_delay_ms	;wreg free
   779  0018B2                     l669:
   780                           
   781                           ;motore.c: 161: if ((timeCounter - previousTimeCounter1 >= 15)) {
   782  0018B2  C07C  F0C2         	movff	_previousTimeCounter1,??_main
   783  0018B6  C07D  F0C3         	movff	_previousTimeCounter1+1,??_main+1
   784  0018BA  C07E  F0C4         	movff	_previousTimeCounter1+2,??_main+2
   785  0018BE  C07F  F0C5         	movff	_previousTimeCounter1+3,??_main+3
   786  0018C2  0100               	movlb	0	; () banked
   787  0018C4  1FC2               	comf	??_main& (0+255),f,b
   788  0018C6  1FC3               	comf	(??_main+1)& (0+255),f,b
   789  0018C8  1FC4               	comf	(??_main+2)& (0+255),f,b
   790  0018CA  1FC5               	comf	(??_main+3)& (0+255),f,b
   791  0018CC  2BC2               	incf	??_main& (0+255),f,b
   792  0018CE  0E00               	movlw	0
   793  0018D0  23C3               	addwfc	(??_main+1)& (0+255),f,b
   794  0018D2  23C4               	addwfc	(??_main+2)& (0+255),f,b
   795  0018D4  23C5               	addwfc	(??_main+3)& (0+255),f,b
   796  0018D6  5029               	movf	_timeCounter,w,c
   797  0018D8  0100               	movlb	0	; () banked
   798  0018DA  25C2               	addwf	??_main& (0+255),w,b
   799  0018DC  0100               	movlb	0	; () banked
   800  0018DE  6FC6               	movwf	(??_main+4)& (0+255),b
   801  0018E0  502A               	movf	_timeCounter+1,w,c
   802  0018E2  0100               	movlb	0	; () banked
   803  0018E4  21C3               	addwfc	(??_main+1)& (0+255),w,b
   804  0018E6  0100               	movlb	0	; () banked
   805  0018E8  6FC7               	movwf	(??_main+5)& (0+255),b
   806  0018EA  502B               	movf	_timeCounter+2,w,c
   807  0018EC  0100               	movlb	0	; () banked
   808  0018EE  21C4               	addwfc	(??_main+2)& (0+255),w,b
   809  0018F0  0100               	movlb	0	; () banked
   810  0018F2  6FC8               	movwf	(??_main+6)& (0+255),b
   811  0018F4  502C               	movf	_timeCounter+3,w,c
   812  0018F6  0100               	movlb	0	; () banked
   813  0018F8  21C5               	addwfc	(??_main+3)& (0+255),w,b
   814  0018FA  0100               	movlb	0	; () banked
   815  0018FC  6FC9               	movwf	(??_main+7)& (0+255),b
   816  0018FE  0100               	movlb	0	; () banked
   817  001900  51C9               	movf	(??_main+7)& (0+255),w,b
   818  001902  0100               	movlb	0	; () banked
   819  001904  11C8               	iorwf	(??_main+6)& (0+255),w,b
   820  001906  0100               	movlb	0	; () banked
   821  001908  11C7               	iorwf	(??_main+5)& (0+255),w,b
   822  00190A  E105               	bnz	u6310
   823  00190C  0E0F               	movlw	15
   824  00190E  0100               	movlb	0	; () banked
   825  001910  5DC6               	subwf	(??_main+4)& (0+255),w,b
   826  001912  A0D8               	btfss	status,0,c
   827  001914  D0E6               	goto	l4934
   828  001916                     u6310:
   829                           
   830                           ; BSR set to: 0
   831                           ;motore.c: 162: CANsendMessage(0b00000000000000000000000000110, data_array_debug, 8, CAN
      +                          _CONFIG_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   832  001916  0E06               	movlw	6
   833  001918  0100               	movlb	0	; () banked
   834  00191A  6FAD               	movwf	CANsendMessage@identifier& (0+255),b
   835  00191C  0E00               	movlw	0
   836  00191E  6FAE               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   837  001920  0E00               	movlw	0
   838  001922  6FAF               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   839  001924  0E00               	movlw	0
   840  001926  6FB0               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   841  001928  0EA5               	movlw	low _data_array_debug
   842  00192A  0100               	movlb	0	; () banked
   843  00192C  6FB1               	movwf	CANsendMessage@data& (0+255),b
   844  00192E  0E00               	movlw	high _data_array_debug
   845  001930  0100               	movlb	0	; () banked
   846  001932  6FB2               	movwf	(CANsendMessage@data+1)& (0+255),b
   847  001934  0E08               	movlw	8
   848  001936  0100               	movlb	0	; () banked
   849  001938  6FB3               	movwf	CANsendMessage@dataLength& (0+255),b
   850  00193A  0EFC               	movlw	252
   851  00193C  0100               	movlb	0	; () banked
   852  00193E  6FB4               	movwf	CANsendMessage@flags& (0+255),b
   853  001940  ECF1  F005         	call	_CANsendMessage	;wreg free
   854                           
   855                           ;motore.c: 163: if (speed_fetched == 1) {
   856  001944  A039               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   857  001946  D0BF               	goto	l671
   858                           
   859                           ;motore.c: 164: PORTCbits.RC1 = ~PORTCbits.RC1;
   860  001948  A282               	btfss	3970,1,c	;volatile
   861  00194A  D002               	goto	u6330
   862  00194C  0E01               	movlw	1
   863  00194E  D001               	goto	u6336
   864  001950                     u6330:
   865  001950  0E00               	movlw	0
   866  001952                     u6336:
   867  001952  0AFF               	xorlw	255
   868  001954  0100               	movlb	0	; () banked
   869  001956  6FC2               	movwf	??_main& (0+255),b
   870  001958  0100               	movlb	0	; () banked
   871  00195A  47C2               	rlncf	??_main& (0+255),f,b
   872  00195C  5082               	movf	3970,w,c	;volatile
   873  00195E  0100               	movlb	0	; () banked
   874  001960  19C2               	xorwf	??_main& (0+255),w,b
   875  001962  0BFD               	andlw	-3
   876  001964  19C2               	xorwf	??_main& (0+255),w,b
   877  001966  6E82               	movwf	3970,c	;volatile
   878                           
   879                           ; BSR set to: 0
   880                           ;motore.c: 165: speed_fetched = 0;
   881  001968  9039               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   882                           
   883                           ; BSR set to: 0
   884                           ;motore.c: 166: currentSpeed = ((left_speed + right_speed) / 2);
   885  00196A  5035               	movf	_left_speed,w,c
   886  00196C  2437               	addwf	_right_speed,w,c
   887  00196E  6E1E               	movwf	___awdiv@dividend,c
   888  001970  6A1F               	clrf	___awdiv@dividend+1,c
   889  001972  361F               	rlcf	___awdiv@dividend+1,f,c
   890  001974  0E00               	movlw	0
   891  001976  6E21               	movwf	___awdiv@divisor+1,c
   892  001978  0E02               	movlw	2
   893  00197A  6E20               	movwf	___awdiv@divisor,c
   894  00197C  EC99  F011         	call	___awdiv	;wreg free
   895  001980  501E               	movf	?___awdiv,w,c
   896  001982  6E40               	movwf	_currentSpeed,c	;volatile
   897                           
   898                           ;motore.c: 167: requestSpeed = 25;
   899  001984  0E19               	movlw	25
   900  001986  6E36               	movwf	_requestSpeed,c	;volatile
   901                           
   902                           ;motore.c: 168: errore = abs((currentSpeed - requestSpeed)*10);
   903  001988  5036               	movf	_requestSpeed,w,c	;volatile
   904  00198A  0100               	movlb	0	; () banked
   905  00198C  6FC2               	movwf	??_main& (0+255),b
   906  00198E  6BC3               	clrf	(??_main+1)& (0+255),b
   907  001990  0100               	movlb	0	; () banked
   908  001992  1FC2               	comf	??_main& (0+255),f,b
   909  001994  1FC3               	comf	(??_main+1)& (0+255),f,b
   910  001996  4BC2               	infsnz	??_main& (0+255),f,b
   911  001998  2BC3               	incf	(??_main+1)& (0+255),f,b
   912  00199A  5040               	movf	_currentSpeed,w,c	;volatile
   913  00199C  0100               	movlb	0	; () banked
   914  00199E  25C2               	addwf	??_main& (0+255),w,b
   915  0019A0  0100               	movlb	0	; () banked
   916  0019A2  6FB1               	movwf	___wmul@multiplier& (0+255),b
   917  0019A4  0E00               	movlw	0
   918  0019A6  0100               	movlb	0	; () banked
   919  0019A8  21C3               	addwfc	(??_main+1)& (0+255),w,b
   920  0019AA  0100               	movlb	0	; () banked
   921  0019AC  6FB2               	movwf	(___wmul@multiplier+1)& (0+255),b
   922  0019AE  0E00               	movlw	0
   923  0019B0  0100               	movlb	0	; () banked
   924  0019B2  6FB4               	movwf	(___wmul@multiplicand+1)& (0+255),b
   925  0019B4  0E0A               	movlw	10
   926  0019B6  6FB3               	movwf	___wmul@multiplicand& (0+255),b
   927  0019B8  ECCD  F012         	call	___wmul	;wreg free
   928  0019BC  C0B1  F0B5         	movff	?___wmul,abs@a
   929  0019C0  C0B2  F0B6         	movff	?___wmul+1,abs@a+1
   930  0019C4  ECE6  F012         	call	_abs	;wreg free
   931  0019C8  C0B5  F031         	movff	?_abs,_errore
   932  0019CC  C0B6  F032         	movff	?_abs+1,_errore+1
   933                           
   934                           ;motore.c: 169: correzione = ((errore / 17)*(errore / 17))*2;
   935  0019D0  0E00               	movlw	0
   936  0019D2  6E21               	movwf	___awdiv@divisor+1,c
   937  0019D4  0E11               	movlw	17
   938  0019D6  6E20               	movwf	___awdiv@divisor,c
   939  0019D8  C031  F01E         	movff	_errore,___awdiv@dividend
   940  0019DC  C032  F01F         	movff	_errore+1,___awdiv@dividend+1
   941  0019E0  EC99  F011         	call	___awdiv	;wreg free
   942  0019E4  C01E  F0B1         	movff	?___awdiv,___wmul@multiplier
   943  0019E8  C01F  F0B2         	movff	?___awdiv+1,___wmul@multiplier+1
   944  0019EC  0E00               	movlw	0
   945  0019EE  6E21               	movwf	___awdiv@divisor+1,c
   946  0019F0  0E11               	movlw	17
   947  0019F2  6E20               	movwf	___awdiv@divisor,c
   948  0019F4  C031  F01E         	movff	_errore,___awdiv@dividend
   949  0019F8  C032  F01F         	movff	_errore+1,___awdiv@dividend+1
   950  0019FC  EC99  F011         	call	___awdiv	;wreg free
   951  001A00  C01E  F0B3         	movff	?___awdiv,___wmul@multiplicand
   952  001A04  C01F  F0B4         	movff	?___awdiv+1,___wmul@multiplicand+1
   953  001A08  ECCD  F012         	call	___wmul	;wreg free
   954  001A0C  90D8               	bcf	status,0,c
   955  001A0E  0100               	movlb	0	; () banked
   956  001A10  35B1               	rlcf	?___wmul& (0+255),w,b
   957  001A12  6E2F               	movwf	_correzione,c
   958  001A14  0100               	movlb	0	; () banked
   959  001A16  35B2               	rlcf	(?___wmul+1)& (0+255),w,b
   960  001A18  6E30               	movwf	_correzione+1,c
   961                           
   962                           ; BSR set to: 0
   963                           ;motore.c: 170: if (correzione > 3) {
   964  001A1A  5030               	movf	_correzione+1,w,c
   965  001A1C  E104               	bnz	u6340
   966  001A1E  0E04               	movlw	4
   967  001A20  5C2F               	subwf	_correzione,w,c
   968  001A22  A0D8               	btfss	status,0,c
   969  001A24  D048               	goto	l672
   970  001A26                     u6340:
   971                           
   972                           ; BSR set to: 0
   973                           ;motore.c: 172: if ((currentSpeed - requestSpeed) > 0) {
   974  001A26  5036               	movf	_requestSpeed,w,c	;volatile
   975  001A28  0100               	movlb	0	; () banked
   976  001A2A  6FC2               	movwf	??_main& (0+255),b
   977  001A2C  6BC3               	clrf	(??_main+1)& (0+255),b
   978  001A2E  0100               	movlb	0	; () banked
   979  001A30  1FC2               	comf	??_main& (0+255),f,b
   980  001A32  1FC3               	comf	(??_main+1)& (0+255),f,b
   981  001A34  4BC2               	infsnz	??_main& (0+255),f,b
   982  001A36  2BC3               	incf	(??_main+1)& (0+255),f,b
   983  001A38  5040               	movf	_currentSpeed,w,c	;volatile
   984  001A3A  0100               	movlb	0	; () banked
   985  001A3C  6FC4               	movwf	(??_main+2)& (0+255),b
   986  001A3E  6BC5               	clrf	(??_main+3)& (0+255),b
   987  001A40  0100               	movlb	0	; () banked
   988  001A42  51C2               	movf	??_main& (0+255),w,b
   989  001A44  0100               	movlb	0	; () banked
   990  001A46  27C4               	addwf	(??_main+2)& (0+255),f,b
   991  001A48  0100               	movlb	0	; () banked
   992  001A4A  51C3               	movf	(??_main+1)& (0+255),w,b
   993  001A4C  0100               	movlb	0	; () banked
   994  001A4E  23C5               	addwfc	(??_main+3)& (0+255),f,b
   995  001A50  0100               	movlb	0	; () banked
   996  001A52  BFC5               	btfsc	(??_main+3)& (0+255),7,b
   997  001A54  D01F               	goto	l4928
   998  001A56  0100               	movlb	0	; () banked
   999  001A58  51C5               	movf	(??_main+3)& (0+255),w,b
  1000  001A5A  E104               	bnz	u6350
  1001  001A5C  0100               	movlb	0	; () banked
  1002  001A5E  05C4               	decf	(??_main+2)& (0+255),w,b
  1003  001A60  A0D8               	btfss	status,0,c
  1004  001A62  D018               	goto	l4928
  1005  001A64                     u6350:
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;motore.c: 173: duty_set = previousPwm - correzione;
  1009  001A64  C02F  F0C2         	movff	_correzione,??_main
  1010  001A68  C030  F0C3         	movff	_correzione+1,??_main+1
  1011  001A6C  0100               	movlb	0	; () banked
  1012  001A6E  1FC2               	comf	??_main& (0+255),f,b
  1013  001A70  1FC3               	comf	(??_main+1)& (0+255),f,b
  1014  001A72  4BC2               	infsnz	??_main& (0+255),f,b
  1015  001A74  2BC3               	incf	(??_main+1)& (0+255),f,b
  1016  001A76  503E               	movf	_previousPwm,w,c
  1017  001A78  0100               	movlb	0	; () banked
  1018  001A7A  25C2               	addwf	??_main& (0+255),w,b
  1019  001A7C  6E3C               	movwf	_duty_set,c
  1020  001A7E  503F               	movf	_previousPwm+1,w,c
  1021  001A80  0100               	movlb	0	; () banked
  1022  001A82  21C3               	addwfc	(??_main+1)& (0+255),w,b
  1023  001A84  6E3D               	movwf	_duty_set+1,c
  1024                           
  1025                           ;motore.c: 174: if (duty_set < 0) {
  1026  001A86  AE3D               	btfss	_duty_set+1,7,c
  1027  001A88  D01A               	goto	l677
  1028                           
  1029                           ; BSR set to: 0
  1030                           ;motore.c: 175: duty_set = 0;
  1031  001A8A  0E00               	movlw	0
  1032  001A8C  6E3D               	movwf	_duty_set+1,c
  1033  001A8E  0E00               	movlw	0
  1034  001A90  6E3C               	movwf	_duty_set,c
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;motore.c: 176: }
  1038                           ;motore.c: 177: } else {
  1039  001A92  D015               	goto	l677
  1040  001A94                     l4928:
  1041                           
  1042                           ; BSR set to: 0
  1043                           ;motore.c: 178: duty_set = previousPwm + correzione;
  1044  001A94  502F               	movf	_correzione,w,c
  1045  001A96  243E               	addwf	_previousPwm,w,c
  1046  001A98  6E3C               	movwf	_duty_set,c
  1047  001A9A  5030               	movf	_correzione+1,w,c
  1048  001A9C  203F               	addwfc	_previousPwm+1,w,c
  1049  001A9E  6E3D               	movwf	_duty_set+1,c
  1050                           
  1051                           ;motore.c: 179: if (duty_set > 1024) {
  1052  001AA0  BE3D               	btfsc	_duty_set+1,7,c
  1053  001AA2  D00D               	goto	l677
  1054  001AA4  043C               	decf	_duty_set,w,c
  1055  001AA6  0E04               	movlw	4
  1056  001AA8  583D               	subwfb	_duty_set+1,w,c
  1057  001AAA  A0D8               	btfss	status,0,c
  1058  001AAC  D008               	goto	l677
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;motore.c: 180: duty_set = 1023;
  1062  001AAE  0E03               	movlw	3
  1063  001AB0  6E3D               	movwf	_duty_set+1,c
  1064  001AB2  683C               	setf	_duty_set,c
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;motore.c: 181: }
  1068                           ;motore.c: 182: }
  1069                           ;motore.c: 183: } else {
  1070                           
  1071                           ; BSR set to: 0
  1072  001AB4  D004               	goto	l677
  1073  001AB6                     l672:
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;motore.c: 184: duty_set = previousPwm;
  1077  001AB6  C03E  F03C         	movff	_previousPwm,_duty_set
  1078  001ABA  C03F  F03D         	movff	_previousPwm+1,_duty_set+1
  1079  001ABE                     l677:
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;motore.c: 185: }
  1083                           ;motore.c: 186: previousPwm = duty_set;
  1084  001ABE  C03C  F03E         	movff	_duty_set,_previousPwm
  1085  001AC2  C03D  F03F         	movff	_duty_set+1,_previousPwm+1
  1086  001AC6                     l671:
  1087                           
  1088                           ;motore.c: 187: }
  1089                           ;motore.c: 188: previousTimeCounter1 = timeCounter;
  1090  001AC6  C029  F07C         	movff	_timeCounter,_previousTimeCounter1
  1091  001ACA  C02A  F07D         	movff	_timeCounter+1,_previousTimeCounter1+1
  1092  001ACE  C02B  F07E         	movff	_timeCounter+2,_previousTimeCounter1+2
  1093  001AD2  C02C  F07F         	movff	_timeCounter+3,_previousTimeCounter1+3
  1094                           
  1095                           ;motore.c: 189: SetDCEPWM1(duty_set);
  1096  001AD6  C03C  F01E         	movff	_duty_set,SetDCEPWM1@dutycycle
  1097  001ADA  C03D  F01F         	movff	_duty_set+1,SetDCEPWM1@dutycycle+1
  1098  001ADE  EC96  F012         	call	_SetDCEPWM1	;wreg free
  1099  001AE2                     l4934:
  1100                           
  1101                           ;motore.c: 190: }
  1102                           ;motore.c: 192: if ((remote_frame == 1) || (can_retry == 1)) {
  1103  001AE2  AA38               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1104  001AE4  B038               	btfsc	_can_retry/(0+8),_can_retry& (0+7),c
  1105  001AE6  D001               	goto	l4938
  1106  001AE8  D002               	goto	l4940
  1107  001AEA                     l4938:
  1108                           
  1109                           ;motore.c: 193: send_data();
  1110  001AEA  ECC4  F010         	call	_send_data	;wreg free
  1111  001AEE                     l4940:
  1112                           
  1113                           ;motore.c: 194: }
  1114                           ;motore.c: 195: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
  1115  001AEE  EC35  F013         	call	_CANisTXwarningON	;wreg free
  1116  001AF2  06E8               	decf	wreg,f,c
  1117  001AF4  B4D8               	btfsc	status,2,c
  1118  001AF6  D005               	goto	l683
  1119  001AF8  EC3B  F013         	call	_CANisRXwarningON	;wreg free
  1120  001AFC  06E8               	decf	wreg,f,c
  1121  001AFE  A4D8               	btfss	status,2,c
  1122  001B00  D014               	goto	l681
  1123  001B02                     l683:
  1124                           
  1125                           ;motore.c: 197: PORTAbits.RA1 = 1;
  1126  001B02  8280               	bsf	3968,1,c	;volatile
  1127                           
  1128                           ;motore.c: 198: delay_ms(200);
  1129  001B04  0E00               	movlw	0
  1130  001B06  0100               	movlb	0	; () banked
  1131  001B08  6FB6               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1132  001B0A  0EC8               	movlw	200
  1133  001B0C  6FB5               	movwf	delay_ms@value_ms& (0+255),b
  1134  001B0E  ECB3  F012         	call	_delay_ms	;wreg free
  1135                           
  1136                           ;motore.c: 199: PORTAbits.RA1 = 0;
  1137  001B12  9280               	bcf	3968,1,c	;volatile
  1138                           
  1139                           ;motore.c: 200: delay_ms(200);
  1140  001B14  0E00               	movlw	0
  1141  001B16  0100               	movlb	0	; () banked
  1142  001B18  6FB6               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1143  001B1A  0EC8               	movlw	200
  1144  001B1C  6FB5               	movwf	delay_ms@value_ms& (0+255),b
  1145  001B1E  ECB3  F012         	call	_delay_ms	;wreg free
  1146                           
  1147                           ;motore.c: 201: PORTAbits.RA1 = 1;
  1148  001B22  8280               	bsf	3968,1,c	;volatile
  1149                           
  1150                           ;motore.c: 202: COMSTATbits.TXWARN = 0;
  1151  001B24  9474               	bcf	3956,2,c	;volatile
  1152                           
  1153                           ;motore.c: 203: COMSTATbits.RXWARN = 0;
  1154  001B26  9274               	bcf	3956,1,c	;volatile
  1155                           
  1156                           ;motore.c: 204: } else {
  1157  001B28  D001               	goto	l4954
  1158  001B2A                     l681:
  1159                           
  1160                           ;motore.c: 205: PORTAbits.RA1 = 0;
  1161  001B2A  9280               	bcf	3968,1,c	;volatile
  1162  001B2C                     l4954:
  1163                           
  1164                           ;motore.c: 206: }
  1165                           ;motore.c: 209: if ((timeCounter - previousTimeCounter) > 500) {
  1166  001B2C  C078  F0C2         	movff	_previousTimeCounter,??_main
  1167  001B30  C079  F0C3         	movff	_previousTimeCounter+1,??_main+1
  1168  001B34  C07A  F0C4         	movff	_previousTimeCounter+2,??_main+2
  1169  001B38  C07B  F0C5         	movff	_previousTimeCounter+3,??_main+3
  1170  001B3C  0100               	movlb	0	; () banked
  1171  001B3E  1FC2               	comf	??_main& (0+255),f,b
  1172  001B40  1FC3               	comf	(??_main+1)& (0+255),f,b
  1173  001B42  1FC4               	comf	(??_main+2)& (0+255),f,b
  1174  001B44  1FC5               	comf	(??_main+3)& (0+255),f,b
  1175  001B46  2BC2               	incf	??_main& (0+255),f,b
  1176  001B48  0E00               	movlw	0
  1177  001B4A  23C3               	addwfc	(??_main+1)& (0+255),f,b
  1178  001B4C  23C4               	addwfc	(??_main+2)& (0+255),f,b
  1179  001B4E  23C5               	addwfc	(??_main+3)& (0+255),f,b
  1180  001B50  5029               	movf	_timeCounter,w,c
  1181  001B52  0100               	movlb	0	; () banked
  1182  001B54  25C2               	addwf	??_main& (0+255),w,b
  1183  001B56  0100               	movlb	0	; () banked
  1184  001B58  6FC6               	movwf	(??_main+4)& (0+255),b
  1185  001B5A  502A               	movf	_timeCounter+1,w,c
  1186  001B5C  0100               	movlb	0	; () banked
  1187  001B5E  21C3               	addwfc	(??_main+1)& (0+255),w,b
  1188  001B60  0100               	movlb	0	; () banked
  1189  001B62  6FC7               	movwf	(??_main+5)& (0+255),b
  1190  001B64  502B               	movf	_timeCounter+2,w,c
  1191  001B66  0100               	movlb	0	; () banked
  1192  001B68  21C4               	addwfc	(??_main+2)& (0+255),w,b
  1193  001B6A  0100               	movlb	0	; () banked
  1194  001B6C  6FC8               	movwf	(??_main+6)& (0+255),b
  1195  001B6E  502C               	movf	_timeCounter+3,w,c
  1196  001B70  0100               	movlb	0	; () banked
  1197  001B72  21C5               	addwfc	(??_main+3)& (0+255),w,b
  1198  001B74  0100               	movlb	0	; () banked
  1199  001B76  6FC9               	movwf	(??_main+7)& (0+255),b
  1200  001B78  0100               	movlb	0	; () banked
  1201  001B7A  51C9               	movf	(??_main+7)& (0+255),w,b
  1202  001B7C  0100               	movlb	0	; () banked
  1203  001B7E  11C8               	iorwf	(??_main+6)& (0+255),w,b
  1204  001B80  E108               	bnz	u6420
  1205  001B82  0EF5               	movlw	245
  1206  001B84  0100               	movlb	0	; () banked
  1207  001B86  5DC6               	subwf	(??_main+4)& (0+255),w,b
  1208  001B88  0E01               	movlw	1
  1209  001B8A  0100               	movlb	0	; () banked
  1210  001B8C  59C7               	subwfb	(??_main+5)& (0+255),w,b
  1211  001B8E  A0D8               	btfss	status,0,c
  1212  001B90  D036               	goto	l4976
  1213  001B92                     u6420:
  1214                           
  1215                           ; BSR set to: 0
  1216                           ;motore.c: 210: if (request_sent == 0) {
  1217  001B92  BE38               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c
  1218  001B94  D018               	goto	l4962
  1219                           
  1220                           ; BSR set to: 0
  1221                           ;motore.c: 211: CANsendMessage(0b00000000000000000000000000010, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1222  001B96  0E02               	movlw	2
  1223  001B98  0100               	movlb	0	; () banked
  1224  001B9A  6FAD               	movwf	CANsendMessage@identifier& (0+255),b
  1225  001B9C  0E00               	movlw	0
  1226  001B9E  6FAE               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1227  001BA0  0E00               	movlw	0
  1228  001BA2  6FAF               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1229  001BA4  0E00               	movlw	0
  1230  001BA6  6FB0               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1231  001BA8  0E95               	movlw	low _data_array
  1232  001BAA  0100               	movlb	0	; () banked
  1233  001BAC  6FB1               	movwf	CANsendMessage@data& (0+255),b
  1234  001BAE  0E00               	movlw	high _data_array
  1235  001BB0  0100               	movlb	0	; () banked
  1236  001BB2  6FB2               	movwf	(CANsendMessage@data+1)& (0+255),b
  1237  001BB4  0E08               	movlw	8
  1238  001BB6  0100               	movlb	0	; () banked
  1239  001BB8  6FB3               	movwf	CANsendMessage@dataLength& (0+255),b
  1240  001BBA  0EFC               	movlw	252
  1241  001BBC  0100               	movlb	0	; () banked
  1242  001BBE  6FB4               	movwf	CANsendMessage@flags& (0+255),b
  1243  001BC0  ECF1  F005         	call	_CANsendMessage	;wreg free
  1244                           
  1245                           ;motore.c: 212: request_sent = 1;
  1246  001BC4  8E38               	bsf	_request_sent/(0+8),_request_sent& (0+7),c
  1247  001BC6                     l4962:
  1248                           
  1249                           ;motore.c: 213: }
  1250                           ;motore.c: 214: if (request_sent == 1) {
  1251  001BC6  AE38               	btfss	_request_sent/(0+8),_request_sent& (0+7),c
  1252  001BC8  D012               	goto	l4974
  1253                           
  1254                           ;motore.c: 216: if ((centralina_abs == 1)&&(centralina_sterzo == 1)&&(centralina_comando
      +                           == 1)) {
  1255  001BCA  B238               	btfsc	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1256  001BCC  A638               	btfss	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1257  001BCE  D007               	goto	l688
  1258  001BD0  A438               	btfss	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1259  001BD2  D005               	goto	l688
  1260                           
  1261                           ;motore.c: 217: centralina_abs = 0;
  1262  001BD4  9238               	bcf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1263                           
  1264                           ;motore.c: 218: centralina_sterzo = 0;
  1265  001BD6  9638               	bcf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1266                           
  1267                           ;motore.c: 219: centralina_comando = 0;
  1268  001BD8  9438               	bcf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1269                           
  1270                           ;motore.c: 220: PORTAbits.RA1 = 0;
  1271  001BDA  9280               	bcf	3968,1,c	;volatile
  1272                           
  1273                           ;motore.c: 221: } else {
  1274  001BDC  D008               	goto	l4974
  1275  001BDE                     l688:
  1276                           
  1277                           ;motore.c: 223: PORTAbits.RA1 = 1;
  1278  001BDE  8280               	bsf	3968,1,c	;volatile
  1279                           
  1280                           ;motore.c: 224: delay_ms(200);
  1281  001BE0  0E00               	movlw	0
  1282  001BE2  0100               	movlb	0	; () banked
  1283  001BE4  6FB6               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1284  001BE6  0EC8               	movlw	200
  1285  001BE8  6FB5               	movwf	delay_ms@value_ms& (0+255),b
  1286  001BEA  ECB3  F012         	call	_delay_ms	;wreg free
  1287  001BEE                     l4974:
  1288                           
  1289                           ;motore.c: 225: }
  1290                           ;motore.c: 226: }
  1291                           ;motore.c: 227: previousTimeCounter = timeCounter;
  1292  001BEE  C029  F078         	movff	_timeCounter,_previousTimeCounter
  1293  001BF2  C02A  F079         	movff	_timeCounter+1,_previousTimeCounter+1
  1294  001BF6  C02B  F07A         	movff	_timeCounter+2,_previousTimeCounter+2
  1295  001BFA  C02C  F07B         	movff	_timeCounter+3,_previousTimeCounter+3
  1296  001BFE                     l4976:
  1297                           
  1298                           ;motore.c: 228: }
  1299                           ;motore.c: 229: if ((timeCounter - previousTimeCounter2 >= 100)) {
  1300  001BFE  C080  F0C2         	movff	_previousTimeCounter2,??_main
  1301  001C02  C081  F0C3         	movff	_previousTimeCounter2+1,??_main+1
  1302  001C06  C082  F0C4         	movff	_previousTimeCounter2+2,??_main+2
  1303  001C0A  C083  F0C5         	movff	_previousTimeCounter2+3,??_main+3
  1304  001C0E  0100               	movlb	0	; () banked
  1305  001C10  1FC2               	comf	??_main& (0+255),f,b
  1306  001C12  1FC3               	comf	(??_main+1)& (0+255),f,b
  1307  001C14  1FC4               	comf	(??_main+2)& (0+255),f,b
  1308  001C16  1FC5               	comf	(??_main+3)& (0+255),f,b
  1309  001C18  2BC2               	incf	??_main& (0+255),f,b
  1310  001C1A  0E00               	movlw	0
  1311  001C1C  23C3               	addwfc	(??_main+1)& (0+255),f,b
  1312  001C1E  23C4               	addwfc	(??_main+2)& (0+255),f,b
  1313  001C20  23C5               	addwfc	(??_main+3)& (0+255),f,b
  1314  001C22  5029               	movf	_timeCounter,w,c
  1315  001C24  0100               	movlb	0	; () banked
  1316  001C26  25C2               	addwf	??_main& (0+255),w,b
  1317  001C28  0100               	movlb	0	; () banked
  1318  001C2A  6FC6               	movwf	(??_main+4)& (0+255),b
  1319  001C2C  502A               	movf	_timeCounter+1,w,c
  1320  001C2E  0100               	movlb	0	; () banked
  1321  001C30  21C3               	addwfc	(??_main+1)& (0+255),w,b
  1322  001C32  0100               	movlb	0	; () banked
  1323  001C34  6FC7               	movwf	(??_main+5)& (0+255),b
  1324  001C36  502B               	movf	_timeCounter+2,w,c
  1325  001C38  0100               	movlb	0	; () banked
  1326  001C3A  21C4               	addwfc	(??_main+2)& (0+255),w,b
  1327  001C3C  0100               	movlb	0	; () banked
  1328  001C3E  6FC8               	movwf	(??_main+6)& (0+255),b
  1329  001C40  502C               	movf	_timeCounter+3,w,c
  1330  001C42  0100               	movlb	0	; () banked
  1331  001C44  21C5               	addwfc	(??_main+3)& (0+255),w,b
  1332  001C46  0100               	movlb	0	; () banked
  1333  001C48  6FC9               	movwf	(??_main+7)& (0+255),b
  1334  001C4A  0100               	movlb	0	; () banked
  1335  001C4C  51C9               	movf	(??_main+7)& (0+255),w,b
  1336  001C4E  0100               	movlb	0	; () banked
  1337  001C50  11C8               	iorwf	(??_main+6)& (0+255),w,b
  1338  001C52  0100               	movlb	0	; () banked
  1339  001C54  11C7               	iorwf	(??_main+5)& (0+255),w,b
  1340  001C56  E105               	bnz	u6480
  1341  001C58  0E64               	movlw	100
  1342  001C5A  0100               	movlb	0	; () banked
  1343  001C5C  5DC6               	subwf	(??_main+4)& (0+255),w,b
  1344  001C5E  A0D8               	btfss	status,0,c
  1345  001C60  D628               	goto	l669
  1346  001C62                     u6480:
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;motore.c: 231: battery_measure();
  1350  001C62  ECE7  F011         	call	_battery_measure	;wreg free
  1351                           
  1352                           ;motore.c: 232: previousTimeCounter2 = timeCounter;
  1353  001C66  C029  F080         	movff	_timeCounter,_previousTimeCounter2
  1354  001C6A  C02A  F081         	movff	_timeCounter+1,_previousTimeCounter2+1
  1355  001C6E  C02B  F082         	movff	_timeCounter+2,_previousTimeCounter2+2
  1356  001C72  C02C  F083         	movff	_timeCounter+3,_previousTimeCounter2+3
  1357  001C76  D61D               	goto	l669
  1358  001C78                     __end_of_main:
  1359                           	opt stack 0
  1360                           tblptru	equ	0xFF8
  1361                           tblptrh	equ	0xFF7
  1362                           tblptrl	equ	0xFF6
  1363                           tablat	equ	0xFF5
  1364                           postinc0	equ	0xFEE
  1365                           wreg	equ	0xFE8
  1366                           postdec1	equ	0xFE5
  1367                           fsr1l	equ	0xFE1
  1368                           status	equ	0xFD8
  1369                           
  1370 ;; *************** function _send_data *****************
  1371 ;; Defined at:
  1372 ;;		line 237 in file "motore.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;  i               1   33[COMRAM] unsigned char 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;		None               void
  1379 ;; Registers used:
  1380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1386 ;;      Params:         0       0       0       0
  1387 ;;      Locals:         1       0       0       0
  1388 ;;      Temps:          0       0       0       0
  1389 ;;      Totals:         1       0       0       0
  1390 ;;Total ram usage:        1 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:    3
  1393 ;; This function calls:
  1394 ;;		_CANisTxReady
  1395 ;;		_CANsendMessage
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text1
  1402  002188                     __ptext1:
  1403                           	opt stack 0
  1404  002188                     _send_data:
  1405                           	opt stack 27
  1406                           
  1407                           ;motore.c: 238: if (CANisTxReady()) {
  1408                           
  1409                           ;incstack = 0
  1410  002188  ECFC  F012         	call	_CANisTxReady	;wreg free
  1411  00218C  0900               	iorlw	0
  1412  00218E  B4D8               	btfsc	status,2,c
  1413  002190  D031               	goto	l4836
  1414                           
  1415                           ;motore.c: 239: if (remote_frame == 1) {
  1416  002192  AA38               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1417  002194  D017               	goto	l4832
  1418                           
  1419                           ;motore.c: 240: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1420  002196  C025  F0AD         	movff	_id,CANsendMessage@identifier
  1421  00219A  C026  F0AE         	movff	_id+1,CANsendMessage@identifier+1
  1422  00219E  C027  F0AF         	movff	_id+2,CANsendMessage@identifier+2
  1423  0021A2  C028  F0B0         	movff	_id+3,CANsendMessage@identifier+3
  1424  0021A6  0E95               	movlw	low _data_array
  1425  0021A8  0100               	movlb	0	; () banked
  1426  0021AA  6FB1               	movwf	CANsendMessage@data& (0+255),b
  1427  0021AC  0E00               	movlw	high _data_array
  1428  0021AE  0100               	movlb	0	; () banked
  1429  0021B0  6FB2               	movwf	(CANsendMessage@data+1)& (0+255),b
  1430  0021B2  0E08               	movlw	8
  1431  0021B4  0100               	movlb	0	; () banked
  1432  0021B6  6FB3               	movwf	CANsendMessage@dataLength& (0+255),b
  1433  0021B8  0EBC               	movlw	188
  1434  0021BA  0100               	movlb	0	; () banked
  1435  0021BC  6FB4               	movwf	CANsendMessage@flags& (0+255),b
  1436  0021BE  ECF1  F005         	call	_CANsendMessage	;wreg free
  1437                           
  1438                           ;motore.c: 241: remote_frame = 0;
  1439  0021C2  9A38               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1440  0021C4                     l4832:
  1441                           
  1442                           ;motore.c: 242: }
  1443                           ;motore.c: 243: if (can_retry == 1) {
  1444  0021C4  A038               	btfss	_can_retry/(0+8),_can_retry& (0+7),c
  1445  0021C6  D016               	goto	l4836
  1446                           
  1447                           ;motore.c: 244: CANsendMessage(id1, data_array1, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_F
      +                          RAME & CAN_TX_PRIORITY_0);
  1448  0021C8  C074  F0AD         	movff	_id1,CANsendMessage@identifier
  1449  0021CC  C075  F0AE         	movff	_id1+1,CANsendMessage@identifier+1
  1450  0021D0  C076  F0AF         	movff	_id1+2,CANsendMessage@identifier+2
  1451  0021D4  C077  F0B0         	movff	_id1+3,CANsendMessage@identifier+3
  1452  0021D8  0E9D               	movlw	low _data_array1
  1453  0021DA  0100               	movlb	0	; () banked
  1454  0021DC  6FB1               	movwf	CANsendMessage@data& (0+255),b
  1455  0021DE  0E00               	movlw	high _data_array1
  1456  0021E0  0100               	movlb	0	; () banked
  1457  0021E2  6FB2               	movwf	(CANsendMessage@data+1)& (0+255),b
  1458  0021E4  0E08               	movlw	8
  1459  0021E6  0100               	movlb	0	; () banked
  1460  0021E8  6FB3               	movwf	CANsendMessage@dataLength& (0+255),b
  1461  0021EA  0EBC               	movlw	188
  1462  0021EC  0100               	movlb	0	; () banked
  1463  0021EE  6FB4               	movwf	CANsendMessage@flags& (0+255),b
  1464  0021F0  ECF1  F005         	call	_CANsendMessage	;wreg free
  1465  0021F4                     l4836:
  1466                           
  1467                           ;motore.c: 245: }
  1468                           ;motore.c: 246: }
  1469                           ;motore.c: 247: if ((TXB0CONbits.TXABT) || (TXB1CONbits.TXABT)) {
  1470  0021F4  010F               	movlb	15	; () banked
  1471  0021F6  BD40               	btfsc	64,6,b	;volatile
  1472  0021F8  D003               	goto	l701
  1473                           
  1474                           ; BSR set to: 15
  1475  0021FA  010F               	movlb	15	; () banked
  1476  0021FC  AD30               	btfss	48,6,b	;volatile
  1477  0021FE  D02C               	goto	l699
  1478  002200                     l701:
  1479                           
  1480                           ; BSR set to: 15
  1481                           ;motore.c: 248: can_retry = 1;
  1482  002200  8038               	bsf	_can_retry/(0+8),_can_retry& (0+7),c
  1483                           
  1484                           ;motore.c: 249: id1 = id;
  1485  002202  C025  F074         	movff	_id,_id1
  1486  002206  C026  F075         	movff	_id+1,_id1+1
  1487  00220A  C027  F076         	movff	_id+2,_id1+2
  1488  00220E  C028  F077         	movff	_id+3,_id1+3
  1489                           
  1490                           ;motore.c: 250: remote_frame1 = remote_frame;
  1491  002212  AA38               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1492  002214  D002               	goto	u6200
  1493  002216  8C38               	bsf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1494  002218  D001               	goto	l4840
  1495  00221A                     u6200:
  1496  00221A  9C38               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1497  00221C                     l4840:
  1498                           
  1499                           ;motore.c: 251: for (char i = 0; i < 8; i++) {
  1500  00221C  0E00               	movlw	0
  1501  00221E  6E22               	movwf	send_data@i,c
  1502  002220                     l4842:
  1503  002220  0E07               	movlw	7
  1504  002222  6422               	cpfsgt	send_data@i,c
  1505  002224  D001               	goto	l4846
  1506  002226  D02C               	goto	l704
  1507  002228                     l4846:
  1508                           
  1509                           ;motore.c: 252: data_array1[i] = data_array[i];
  1510  002228  5022               	movf	send_data@i,w,c
  1511  00222A  0D01               	mullw	1
  1512  00222C  0E95               	movlw	low _data_array
  1513  00222E  24F3               	addwf	prodl,w,c
  1514  002230  6ED9               	movwf	fsr2l,c
  1515  002232  0E00               	movlw	high _data_array
  1516  002234  20F4               	addwfc	prodh,w,c
  1517  002236  6EDA               	movwf	fsr2h,c
  1518  002238  5022               	movf	send_data@i,w,c
  1519  00223A  0D01               	mullw	1
  1520  00223C  0E9D               	movlw	low _data_array1
  1521  00223E  24F3               	addwf	prodl,w,c
  1522  002240  6EE1               	movwf	fsr1l,c
  1523  002242  0E00               	movlw	high _data_array1
  1524  002244  20F4               	addwfc	prodh,w,c
  1525  002246  6EE2               	movwf	fsr1h,c
  1526  002248  CFDF FFE7          	movff	indf2,indf1
  1527                           
  1528                           ;motore.c: 253: TXB0CONbits.TXABT = 0;
  1529  00224C  010F               	movlb	15	; () banked
  1530  00224E  9D40               	bcf	64,6,b	;volatile
  1531                           
  1532                           ; BSR set to: 15
  1533                           ;motore.c: 254: TXB1CONbits.TXABT = 0;
  1534  002250  010F               	movlb	15	; () banked
  1535  002252  9D30               	bcf	48,6,b	;volatile
  1536                           
  1537                           ; BSR set to: 15
  1538  002254  2A22               	incf	send_data@i,f,c
  1539  002256  D7E4               	goto	l4842
  1540  002258                     l699:
  1541                           
  1542                           ; BSR set to: 15
  1543                           ;motore.c: 257: can_retry = 0;
  1544  002258  9038               	bcf	_can_retry/(0+8),_can_retry& (0+7),c
  1545                           
  1546                           ;motore.c: 258: if (remote_frame1 != 0) {
  1547  00225A  AC38               	btfss	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1548  00225C  D010               	goto	l705
  1549                           
  1550                           ; BSR set to: 15
  1551                           ;motore.c: 259: remote_frame = remote_frame1;
  1552  00225E  AC38               	btfss	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1553  002260  D002               	goto	u6250
  1554  002262  8A38               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1555  002264  D001               	goto	u6265
  1556  002266                     u6250:
  1557  002266  9A38               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1558  002268                     u6265:
  1559                           
  1560                           ;motore.c: 260: id = id1;
  1561  002268  C074  F025         	movff	_id1,_id
  1562  00226C  C075  F026         	movff	_id1+1,_id+1
  1563  002270  C076  F027         	movff	_id1+2,_id+2
  1564  002274  C077  F028         	movff	_id1+3,_id+3
  1565                           
  1566                           ;motore.c: 261: message_sent = 1;
  1567  002278  8838               	bsf	_message_sent/(0+8),_message_sent& (0+7),c
  1568                           
  1569                           ;motore.c: 262: remote_frame1 = 0;
  1570  00227A  9C38               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1571                           
  1572                           ;motore.c: 263: } else {
  1573  00227C  D001               	goto	l704
  1574  00227E                     l705:
  1575                           
  1576                           ; BSR set to: 15
  1577                           ;motore.c: 265: message_sent = 0;
  1578  00227E  9838               	bcf	_message_sent/(0+8),_message_sent& (0+7),c
  1579  002280                     l704:
  1580                           
  1581                           ;motore.c: 266: }
  1582                           ;motore.c: 267: }
  1583                           ;motore.c: 268: remote_frame = 0;
  1584  002280  9A38               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1585  002282  0012               	return		;funcret
  1586  002284                     __end_of_send_data:
  1587                           	opt stack 0
  1588                           tblptru	equ	0xFF8
  1589                           tblptrh	equ	0xFF7
  1590                           tblptrl	equ	0xFF6
  1591                           tablat	equ	0xFF5
  1592                           prodh	equ	0xFF4
  1593                           prodl	equ	0xFF3
  1594                           postinc0	equ	0xFEE
  1595                           wreg	equ	0xFE8
  1596                           indf1	equ	0xFE7
  1597                           postdec1	equ	0xFE5
  1598                           fsr1h	equ	0xFE2
  1599                           fsr1l	equ	0xFE1
  1600                           indf2	equ	0xFDF
  1601                           fsr2h	equ	0xFDA
  1602                           fsr2l	equ	0xFD9
  1603                           status	equ	0xFD8
  1604                           
  1605 ;; *************** function _configurazione_iniziale *****************
  1606 ;; Defined at:
  1607 ;;		line 286 in file "motore.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;		None
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;		None
  1612 ;; Return value:  Size  Location     Type
  1613 ;;		None               void
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1621 ;;      Params:         0       0       0       0
  1622 ;;      Locals:         0       0       0       0
  1623 ;;      Temps:          0       0       0       0
  1624 ;;      Totals:         0       0       0       0
  1625 ;;Total ram usage:        0 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; Hardware stack levels required when called:    4
  1628 ;; This function calls:
  1629 ;;		_CANInitialize
  1630 ;;		_SetOutputEPWM1
  1631 ;;		_delay_ms
  1632 ;; This function is called by:
  1633 ;;		_main
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text2
  1638  002284                     __ptext2:
  1639                           	opt stack 0
  1640  002284                     _configurazione_iniziale:
  1641                           	opt stack 26
  1642                           
  1643                           ;motore.c: 289: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1644                           
  1645                           ;incstack = 0
  1646  002284  0E06               	movlw	6
  1647  002286  0100               	movlb	0	; () banked
  1648  002288  6FB6               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1649  00228A  0E05               	movlw	5
  1650  00228C  0100               	movlb	0	; () banked
  1651  00228E  6FB7               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1652  002290  0E01               	movlw	1
  1653  002292  0100               	movlb	0	; () banked
  1654  002294  6FB8               	movwf	CANInitialize@SJW& (0+255),b
  1655  002296  0E03               	movlw	3
  1656  002298  0100               	movlb	0	; () banked
  1657  00229A  6FB9               	movwf	CANInitialize@BRP& (0+255),b
  1658  00229C  0E9D               	movlw	157
  1659  00229E  0100               	movlb	0	; () banked
  1660  0022A0  6FBA               	movwf	CANInitialize@flags& (0+255),b
  1661  0022A2  0E04               	movlw	4
  1662  0022A4  ECEB  F00F         	call	_CANInitialize
  1663                           
  1664                           ;motore.c: 290: RCONbits.IPEN = 1;
  1665  0022A8  8ED0               	bsf	4048,7,c	;volatile
  1666                           
  1667                           ;motore.c: 291: INTCONbits.INT0IF = 0;
  1668  0022AA  92F2               	bcf	intcon,1,c	;volatile
  1669                           
  1670                           ;motore.c: 292: PIR3bits.RXB1IF = 0;
  1671  0022AC  92A4               	bcf	4004,1,c	;volatile
  1672                           
  1673                           ;motore.c: 293: PIR3bits.RXB0IF = 0;
  1674  0022AE  90A4               	bcf	4004,0,c	;volatile
  1675                           
  1676                           ;motore.c: 295: IPR3bits.RXB1IP = 0;
  1677  0022B0  92A5               	bcf	4005,1,c	;volatile
  1678                           
  1679                           ;motore.c: 296: IPR3bits.RXB0IP = 0;
  1680  0022B2  90A5               	bcf	4005,0,c	;volatile
  1681                           
  1682                           ;motore.c: 297: INTCONbits.GIEH = 1;
  1683  0022B4  8EF2               	bsf	intcon,7,c	;volatile
  1684                           
  1685                           ;motore.c: 298: INTCONbits.GIEL = 1;
  1686  0022B6  8CF2               	bsf	intcon,6,c	;volatile
  1687                           
  1688                           ;motore.c: 301: T3CON = 0x01;
  1689  0022B8  0E01               	movlw	1
  1690  0022BA  6EB1               	movwf	4017,c	;volatile
  1691                           
  1692                           ;motore.c: 302: PIR2bits.TMR3IF = 0;
  1693  0022BC  92A1               	bcf	4001,1,c	;volatile
  1694                           
  1695                           ;motore.c: 303: IPR2bits.TMR3IP = 0;
  1696  0022BE  92A2               	bcf	4002,1,c	;volatile
  1697                           
  1698                           ;motore.c: 304: TMR3H = 0x63;
  1699  0022C0  0E63               	movlw	99
  1700  0022C2  6EB3               	movwf	4019,c	;volatile
  1701                           
  1702                           ;motore.c: 305: TMR3L = 0xC0;
  1703  0022C4  0EC0               	movlw	192
  1704  0022C6  6EB2               	movwf	4018,c	;volatile
  1705                           
  1706                           ;motore.c: 310: ADCON0bits.ADON = 1;
  1707  0022C8  80C2               	bsf	4034,0,c	;volatile
  1708                           
  1709                           ;motore.c: 311: ADCON0bits.CHS0 = 0;
  1710  0022CA  94C2               	bcf	4034,2,c	;volatile
  1711                           
  1712                           ;motore.c: 312: ADCON0bits.CHS1 = 0;
  1713  0022CC  96C2               	bcf	4034,3,c	;volatile
  1714                           
  1715                           ;motore.c: 313: ADCON0bits.CHS2 = 0;
  1716  0022CE  98C2               	bcf	4034,4,c	;volatile
  1717                           
  1718                           ;motore.c: 314: ADCON0bits.CHS3 = 0;
  1719  0022D0  9AC2               	bcf	4034,5,c	;volatile
  1720                           
  1721                           ;motore.c: 315: ADCON1bits.PCFG0 = 0;
  1722  0022D2  90C1               	bcf	4033,0,c	;volatile
  1723                           
  1724                           ;motore.c: 316: ADCON1bits.PCFG1 = 1;
  1725  0022D4  82C1               	bsf	4033,1,c	;volatile
  1726                           
  1727                           ;motore.c: 317: ADCON1bits.PCFG2 = 1;
  1728  0022D6  84C1               	bsf	4033,2,c	;volatile
  1729                           
  1730                           ;motore.c: 318: ADCON1bits.PCFG3 = 1;
  1731  0022D8  86C1               	bsf	4033,3,c	;volatile
  1732                           
  1733                           ;motore.c: 319: ADCON1bits.VCFG0 = 0;
  1734  0022DA  98C1               	bcf	4033,4,c	;volatile
  1735                           
  1736                           ;motore.c: 320: ADCON1bits.VCFG1 = 0;
  1737  0022DC  9AC1               	bcf	4033,5,c	;volatile
  1738                           
  1739                           ;motore.c: 321: ADCON2bits.ADCS0 = 1;
  1740  0022DE  80C0               	bsf	4032,0,c	;volatile
  1741                           
  1742                           ;motore.c: 322: ADCON2bits.ADCS1 = 0;
  1743  0022E0  92C0               	bcf	4032,1,c	;volatile
  1744                           
  1745                           ;motore.c: 323: ADCON2bits.ADCS2 = 1;
  1746  0022E2  84C0               	bsf	4032,2,c	;volatile
  1747                           
  1748                           ;motore.c: 324: ADCON2bits.ACQT0 = 0;
  1749  0022E4  96C0               	bcf	4032,3,c	;volatile
  1750                           
  1751                           ;motore.c: 325: ADCON2bits.ACQT1 = 1;
  1752  0022E6  88C0               	bsf	4032,4,c	;volatile
  1753                           
  1754                           ;motore.c: 326: ADCON2bits.ACQT2 = 1;
  1755  0022E8  8AC0               	bsf	4032,5,c	;volatile
  1756                           
  1757                           ;motore.c: 327: ADCON2bits.ADFM = 0;
  1758  0022EA  9EC0               	bcf	4032,7,c	;volatile
  1759                           
  1760                           ;motore.c: 330: PIE3bits.RXB1IE = 1;
  1761  0022EC  82A3               	bsf	4003,1,c	;volatile
  1762                           
  1763                           ;motore.c: 331: PIE3bits.RXB0IE = 1;
  1764  0022EE  80A3               	bsf	4003,0,c	;volatile
  1765                           
  1766                           ;motore.c: 332: PIE2bits.TMR3IE = 1;
  1767  0022F0  82A0               	bsf	4000,1,c	;volatile
  1768                           
  1769                           ;motore.c: 334: LATA = 0x00;
  1770  0022F2  0E00               	movlw	0
  1771  0022F4  6E89               	movwf	3977,c	;volatile
  1772                           
  1773                           ;motore.c: 335: TRISA = 0b01111101;
  1774  0022F6  0E7D               	movlw	125
  1775  0022F8  6E92               	movwf	3986,c	;volatile
  1776                           
  1777                           ;motore.c: 337: LATB = 0x00;
  1778  0022FA  0E00               	movlw	0
  1779  0022FC  6E8A               	movwf	3978,c	;volatile
  1780                           
  1781                           ;motore.c: 338: TRISB = 0b11111011;
  1782  0022FE  0EFB               	movlw	251
  1783  002300  6E93               	movwf	3987,c	;volatile
  1784                           
  1785                           ;motore.c: 340: LATC = 0x00;
  1786  002302  0E00               	movlw	0
  1787  002304  6E8B               	movwf	3979,c	;volatile
  1788                           
  1789                           ;motore.c: 341: TRISC = 0x00;
  1790  002306  0E00               	movlw	0
  1791  002308  6E94               	movwf	3988,c	;volatile
  1792                           
  1793                           ;motore.c: 343: LATD = 0x00;
  1794  00230A  0E00               	movlw	0
  1795  00230C  6E8C               	movwf	3980,c	;volatile
  1796                           
  1797                           ;motore.c: 344: TRISD = 0x00;
  1798  00230E  0E00               	movlw	0
  1799  002310  6E95               	movwf	3989,c	;volatile
  1800                           
  1801                           ;motore.c: 346: LATE = 0x00;
  1802  002312  0E00               	movlw	0
  1803  002314  6E8D               	movwf	3981,c	;volatile
  1804                           
  1805                           ;motore.c: 347: TRISE = 0xFF;
  1806  002316  6896               	setf	3990,c	;volatile
  1807                           
  1808                           ;motore.c: 348: delay_ms(2);
  1809  002318  0E00               	movlw	0
  1810  00231A  0100               	movlb	0	; () banked
  1811  00231C  6FB6               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1812  00231E  0E02               	movlw	2
  1813  002320  6FB5               	movwf	delay_ms@value_ms& (0+255),b
  1814  002322  ECB3  F012         	call	_delay_ms	;wreg free
  1815                           
  1816                           ;motore.c: 349: SetOutputEPWM1(0b01111111, 0b11111100);
  1817  002326  0EFC               	movlw	252
  1818  002328  6E1E               	movwf	SetOutputEPWM1@outputmode,c
  1819  00232A  0E7F               	movlw	127
  1820  00232C  EC52  F012         	call	_SetOutputEPWM1
  1821  002330  0012               	return		;funcret
  1822  002332                     __end_of_configurazione_iniziale:
  1823                           	opt stack 0
  1824                           tblptru	equ	0xFF8
  1825                           tblptrh	equ	0xFF7
  1826                           tblptrl	equ	0xFF6
  1827                           tablat	equ	0xFF5
  1828                           prodh	equ	0xFF4
  1829                           prodl	equ	0xFF3
  1830                           intcon	equ	0xFF2
  1831                           postinc0	equ	0xFEE
  1832                           wreg	equ	0xFE8
  1833                           indf1	equ	0xFE7
  1834                           postdec1	equ	0xFE5
  1835                           fsr1h	equ	0xFE2
  1836                           fsr1l	equ	0xFE1
  1837                           indf2	equ	0xFDF
  1838                           fsr2h	equ	0xFDA
  1839                           fsr2l	equ	0xFD9
  1840                           status	equ	0xFD8
  1841                           
  1842 ;; *************** function _delay_ms *****************
  1843 ;; Defined at:
  1844 ;;		line 61 in file "delay.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  value_ms        2    8[BANK0 ] unsigned int 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;		None
  1849 ;; Return value:  Size  Location     Type
  1850 ;;		None               void
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1858 ;;      Params:         0       2       0       0
  1859 ;;      Locals:         0       0       0       0
  1860 ;;      Temps:          0       0       0       0
  1861 ;;      Totals:         0       2       0       0
  1862 ;;Total ram usage:        2 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    3
  1865 ;; This function calls:
  1866 ;;		___wmul
  1867 ;; This function is called by:
  1868 ;;		_main
  1869 ;;		_configurazione_iniziale
  1870 ;;		_delay_s
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text3
  1875  002566                     __ptext3:
  1876                           	opt stack 0
  1877  002566                     _delay_ms:
  1878                           	opt stack 27
  1879                           
  1880                           ;delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  1881                           
  1882                           ;incstack = 0
  1883  002566  C041  F0B1         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  1884  00256A  0100               	movlb	0	; () banked
  1885  00256C  6BB2               	clrf	(___wmul@multiplier+1)& (0+255),b
  1886  00256E  C0B5  F0B3         	movff	delay_ms@value_ms,___wmul@multiplicand
  1887  002572  C0B6  F0B4         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  1888  002576  ECCD  F012         	call	___wmul	;wreg free
  1889  00257A  C0B1  F02D         	movff	?___wmul,_clock_counter_reference	;volatile
  1890  00257E  C0B2  F02E         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  1891                           
  1892                           ;delay.c: 75: while (clock_counter_reference) {
  1893  002582  D006               	goto	l569
  1894  002584                     l4678:
  1895                           
  1896                           ;delay.c: 85: _delay(240);
  1897  002584  0E50               	movlw	80
  1898  002586                     u6497:
  1899  002586  2EE8               	decfsz	wreg,f,c
  1900  002588  D7FE               	goto	u6497
  1901                           
  1902                           ;delay.c: 88: clock_counter_reference--;
  1903  00258A  062D               	decf	_clock_counter_reference,f,c	;volatile
  1904  00258C  A0D8               	btfss	status,0,c
  1905  00258E  062E               	decf	_clock_counter_reference+1,f,c	;volatile
  1906  002590                     l569:
  1907  002590  502D               	movf	_clock_counter_reference,w,c	;volatile
  1908  002592  102E               	iorwf	_clock_counter_reference+1,w,c	;volatile
  1909  002594  B4D8               	btfsc	status,2,c
  1910  002596  0012               	return	
  1911  002598  D7F5               	goto	l4678
  1912  00259A                     __end_of_delay_ms:
  1913                           	opt stack 0
  1914                           tblptru	equ	0xFF8
  1915                           tblptrh	equ	0xFF7
  1916                           tblptrl	equ	0xFF6
  1917                           tablat	equ	0xFF5
  1918                           prodh	equ	0xFF4
  1919                           prodl	equ	0xFF3
  1920                           intcon	equ	0xFF2
  1921                           postinc0	equ	0xFEE
  1922                           wreg	equ	0xFE8
  1923                           indf1	equ	0xFE7
  1924                           postdec1	equ	0xFE5
  1925                           fsr1h	equ	0xFE2
  1926                           fsr1l	equ	0xFE1
  1927                           indf2	equ	0xFDF
  1928                           fsr2h	equ	0xFDA
  1929                           fsr2l	equ	0xFD9
  1930                           status	equ	0xFD8
  1931                           
  1932 ;; *************** function _SetOutputEPWM1 *****************
  1933 ;; Defined at:
  1934 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  outputconfig    1    wreg     unsigned char 
  1937 ;;  outputmode      1   29[COMRAM] unsigned char 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  outputconfig    1   30[COMRAM] unsigned char 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;		None               void
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1949 ;;      Params:         1       0       0       0
  1950 ;;      Locals:         1       0       0       0
  1951 ;;      Temps:          0       0       0       0
  1952 ;;      Totals:         2       0       0       0
  1953 ;;Total ram usage:        2 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    2
  1956 ;; This function calls:
  1957 ;;		Nothing
  1958 ;; This function is called by:
  1959 ;;		_main
  1960 ;;		_configurazione_iniziale
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text4
  1965  0024A4                     __ptext4:
  1966                           	opt stack 0
  1967  0024A4                     _SetOutputEPWM1:
  1968                           	opt stack 27
  1969                           
  1970                           ;incstack = 0
  1971                           ;SetOutputEPWM1@outputconfig stored from wreg
  1972  0024A4  6E1F               	movwf	SetOutputEPWM1@outputconfig,c
  1973  0024A6  50BA               	movf	4026,w,c	;volatile
  1974  0024A8  09C0               	iorlw	192
  1975  0024AA  141F               	andwf	SetOutputEPWM1@outputconfig,w,c
  1976  0024AC  6EBA               	movwf	4026,c	;volatile
  1977  0024AE  50BA               	movf	4026,w,c	;volatile
  1978  0024B0  090F               	iorlw	15
  1979  0024B2  141E               	andwf	SetOutputEPWM1@outputmode,w,c
  1980  0024B4  6EBA               	movwf	4026,c	;volatile
  1981  0024B6  0E3F               	movlw	63
  1982  0024B8  181F               	xorwf	SetOutputEPWM1@outputconfig,w,c
  1983  0024BA  A4D8               	btfss	status,2,c
  1984  0024BC  D002               	goto	l3414
  1985  0024BE  9895               	bcf	3989,4,c	;volatile
  1986  0024C0  0012               	return	
  1987  0024C2                     l3414:
  1988  0024C2  0EBF               	movlw	191
  1989  0024C4  181F               	xorwf	SetOutputEPWM1@outputconfig,w,c
  1990  0024C6  A4D8               	btfss	status,2,c
  1991  0024C8  D003               	goto	l3418
  1992  0024CA  9895               	bcf	3989,4,c	;volatile
  1993  0024CC  9A95               	bcf	3989,5,c	;volatile
  1994  0024CE  0012               	return	
  1995  0024D0                     l3418:
  1996  0024D0  0E7F               	movlw	127
  1997  0024D2  181F               	xorwf	SetOutputEPWM1@outputconfig,w,c
  1998  0024D4  B4D8               	btfsc	status,2,c
  1999  0024D6  D003               	goto	l750
  2000  0024D8  281F               	incf	SetOutputEPWM1@outputconfig,w,c
  2001  0024DA  A4D8               	btfss	status,2,c
  2002  0024DC  0012               	return	
  2003  0024DE                     l750:
  2004  0024DE  9895               	bcf	3989,4,c	;volatile
  2005  0024E0  9A95               	bcf	3989,5,c	;volatile
  2006  0024E2  9C95               	bcf	3989,6,c	;volatile
  2007  0024E4  9E95               	bcf	3989,7,c	;volatile
  2008  0024E6  0012               	return	
  2009  0024E8                     __end_of_SetOutputEPWM1:
  2010                           	opt stack 0
  2011                           tblptru	equ	0xFF8
  2012                           tblptrh	equ	0xFF7
  2013                           tblptrl	equ	0xFF6
  2014                           tablat	equ	0xFF5
  2015                           prodh	equ	0xFF4
  2016                           prodl	equ	0xFF3
  2017                           intcon	equ	0xFF2
  2018                           postinc0	equ	0xFEE
  2019                           wreg	equ	0xFE8
  2020                           indf1	equ	0xFE7
  2021                           postdec1	equ	0xFE5
  2022                           fsr1h	equ	0xFE2
  2023                           fsr1l	equ	0xFE1
  2024                           indf2	equ	0xFDF
  2025                           fsr2h	equ	0xFDA
  2026                           fsr2l	equ	0xFD9
  2027                           status	equ	0xFD8
  2028                           
  2029 ;; *************** function _CANInitialize *****************
  2030 ;; Defined at:
  2031 ;;		line 218 in file "CANlib.h"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  propSeg         1    wreg     unsigned char 
  2034 ;;  phaseSeg1       1    9[BANK0 ] unsigned char 
  2035 ;;  phaseSeg2       1   10[BANK0 ] unsigned char 
  2036 ;;  SJW             1   11[BANK0 ] unsigned char 
  2037 ;;  BRP             1   12[BANK0 ] unsigned char 
  2038 ;;  flags           1   13[BANK0 ] enum E16844
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  propSeg         1   18[BANK0 ] unsigned char 
  2041 ;;  FilterConfig    1   20[BANK0 ] unsigned char 
  2042 ;;  FilterConfig    1   19[BANK0 ] unsigned char 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;		None               void
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, status,0, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2052 ;;      Params:         0       5       0       0
  2053 ;;      Locals:         0       3       0       0
  2054 ;;      Temps:          0       4       0       0
  2055 ;;      Totals:         0      12       0       0
  2056 ;;Total ram usage:       12 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:    3
  2059 ;; This function calls:
  2060 ;;		_CANOperationMode
  2061 ;;		_CANSetFilter
  2062 ;;		_CANSetMask
  2063 ;; This function is called by:
  2064 ;;		_configurazione_iniziale
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text5
  2069  001FD6                     __ptext5:
  2070                           	opt stack 0
  2071  001FD6                     _CANInitialize:
  2072                           	opt stack 26
  2073                           
  2074                           ;incstack = 0
  2075                           ;CANInitialize@propSeg stored from wreg
  2076  001FD6  0100               	movlb	0	; () banked
  2077  001FD8  6FBF               	movwf	CANInitialize@propSeg& (0+255),b
  2078                           
  2079                           ;CANlib.h: 220: BYTE FilterConfig1;
  2080                           ;CANlib.h: 221: BYTE FilterConfig2;
  2081                           ;CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2082  001FDA  0E80               	movlw	128
  2083  001FDC  EC24  F013         	call	_CANOperationMode
  2084                           
  2085                           ;CANlib.h: 225: BRGCON1 = 0x00;
  2086  001FE0  0E00               	movlw	0
  2087  001FE2  6E70               	movwf	3952,c	;volatile
  2088                           
  2089                           ;CANlib.h: 226: BRGCON2 = 0x00;
  2090  001FE4  0E00               	movlw	0
  2091  001FE6  6E71               	movwf	3953,c	;volatile
  2092                           
  2093                           ;CANlib.h: 227: BRGCON3 = 0x00;
  2094  001FE8  0E00               	movlw	0
  2095  001FEA  6E72               	movwf	3954,c	;volatile
  2096                           
  2097                           ;CANlib.h: 229: SJW= SJW << 6;
  2098  001FEC  0100               	movlb	0	; () banked
  2099  001FEE  41B8               	rrncf	CANInitialize@SJW& (0+255),w,b
  2100  001FF0  42E8               	rrncf	wreg,f,c
  2101  001FF2  0BC0               	andlw	192
  2102  001FF4  0100               	movlb	0	; () banked
  2103  001FF6  6FB8               	movwf	CANInitialize@SJW& (0+255),b
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;CANlib.h: 230: BRGCON1 |= SJW;
  2107  001FF8  0100               	movlb	0	; () banked
  2108  001FFA  51B8               	movf	CANInitialize@SJW& (0+255),w,b
  2109  001FFC  1270               	iorwf	3952,f,c	;volatile
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;CANlib.h: 231: BRGCON1 |= BRP;
  2113  001FFE  0100               	movlb	0	; () banked
  2114  002000  51B9               	movf	CANInitialize@BRP& (0+255),w,b
  2115  002002  1270               	iorwf	3952,f,c	;volatile
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;CANlib.h: 233: BRGCON2 |= propSeg;
  2119  002004  0100               	movlb	0	; () banked
  2120  002006  51BF               	movf	CANInitialize@propSeg& (0+255),w,b
  2121  002008  1271               	iorwf	3953,f,c	;volatile
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2125  00200A  0100               	movlb	0	; () banked
  2126  00200C  39B6               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2127  00200E  42E8               	rrncf	wreg,f,c
  2128  002010  0BF8               	andlw	248
  2129  002012  0100               	movlb	0	; () banked
  2130  002014  6FB6               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2134  002016  0100               	movlb	0	; () banked
  2135  002018  51B6               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2136  00201A  1271               	iorwf	3953,f,c	;volatile
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2140  00201C  0100               	movlb	0	; () banked
  2141  00201E  A5BA               	btfss	CANInitialize@flags& (0+255),2,b
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;CANlib.h: 238: BRGCON2bits.SAM= 1;
  2145  002020  8C71               	bsf	3953,6,c	;volatile
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2149  002022  0100               	movlb	0	; () banked
  2150  002024  B1BA               	btfsc	CANInitialize@flags& (0+255),0,b
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2154  002026  8E71               	bsf	3953,7,c	;volatile
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2158                           
  2159                           ; BSR set to: 0
  2160  002028  0100               	movlb	0	; () banked
  2161  00202A  51B7               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2162  00202C  1272               	iorwf	3954,f,c	;volatile
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2166  00202E  0100               	movlb	0	; () banked
  2167  002030  B3BA               	btfsc	CANInitialize@flags& (0+255),1,b
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2171  002032  8C72               	bsf	3954,6,c	;volatile
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2175                           
  2176                           ; BSR set to: 0
  2177  002034  0100               	movlb	0	; () banked
  2178  002036  51BA               	movf	CANInitialize@flags& (0+255),w,b
  2179  002038  0B60               	andlw	96
  2180  00203A  6E60               	movwf	3936,c	;volatile
  2181                           
  2182                           ;CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON )
  2183  00203C  0100               	movlb	0	; () banked
  2184  00203E  51BA               	movf	CANInitialize@flags& (0+255),w,b
  2185  002040  0B10               	andlw	16
  2186  002042  0AFF               	xorlw	255
  2187  002044  B4D8               	btfsc	status,2,c
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2191  002046  8460               	bsf	3936,2,c	;volatile
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;CANlib.h: 255: RXB1CON = RXB0CON;
  2195  002048  CF60 FF50          	movff	3936,3920	;volatile
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2199  00204C  0E00               	movlw	0
  2200  00204E  6E1E               	movwf	CANSetMask@mask,c
  2201  002050  0E00               	movlw	0
  2202  002052  6E1F               	movwf	CANSetMask@mask+1,c
  2203  002054  0E00               	movlw	0
  2204  002056  6E20               	movwf	CANSetMask@mask+2,c
  2205  002058  0E00               	movlw	0
  2206  00205A  6E21               	movwf	CANSetMask@mask+3,c
  2207  00205C  0EF7               	movlw	247
  2208  00205E  6E22               	movwf	CANSetMask@type,c
  2209  002060  0E01               	movlw	1
  2210  002062  EC3C  F00E         	call	_CANSetMask
  2211                           
  2212                           ;CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2213  002066  0E00               	movlw	0
  2214  002068  6E1E               	movwf	CANSetMask@mask,c
  2215  00206A  0E00               	movlw	0
  2216  00206C  6E1F               	movwf	CANSetMask@mask+1,c
  2217  00206E  0E00               	movlw	0
  2218  002070  6E20               	movwf	CANSetMask@mask+2,c
  2219  002072  0E00               	movlw	0
  2220  002074  6E21               	movwf	CANSetMask@mask+3,c
  2221  002076  0EF7               	movlw	247
  2222  002078  6E22               	movwf	CANSetMask@type,c
  2223  00207A  0E02               	movlw	2
  2224  00207C  EC3C  F00E         	call	_CANSetMask
  2225                           
  2226                           ;CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2227  002080  D00F               	goto	l4438
  2228  002082                     l4432:
  2229                           
  2230                           ;CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2231  002082  0EF7               	movlw	247
  2232  002084  0100               	movlb	0	; () banked
  2233  002086  6FC0               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2234  002088  D007               	goto	l4434
  2235  00208A                     l358:
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2239  00208A  0100               	movlb	0	; () banked
  2240  00208C  69C0               	setf	CANInitialize@FilterConfig1& (0+255),b
  2241                           
  2242                           ;CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2243  00208E  0100               	movlb	0	; () banked
  2244  002090  69C1               	setf	CANInitialize@FilterConfig2& (0+255),b
  2245                           
  2246                           ;CANlib.h: 273: break;
  2247  002092  D028               	goto	l4440
  2248  002094                     l359:
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2252  002094  0100               	movlb	0	; () banked
  2253  002096  69C0               	setf	CANInitialize@FilterConfig1& (0+255),b
  2254  002098                     l4434:
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2258  002098  0EF7               	movlw	247
  2259  00209A  0100               	movlb	0	; () banked
  2260  00209C  6FC1               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;CANlib.h: 278: }
  2264                           
  2265                           ;CANlib.h: 277: break;
  2266  00209E  D022               	goto	l4440
  2267  0020A0                     l4438:
  2268  0020A0  0E9F               	movlw	159
  2269  0020A2  0100               	movlb	0	; () banked
  2270  0020A4  6FBB               	movwf	??_CANInitialize& (0+255),b
  2271  0020A6  0EFF               	movlw	255
  2272  0020A8  0100               	movlb	0	; () banked
  2273  0020AA  6FBC               	movwf	(??_CANInitialize+1)& (0+255),b
  2274  0020AC  0100               	movlb	0	; () banked
  2275  0020AE  51BA               	movf	CANInitialize@flags& (0+255),w,b
  2276  0020B0  0B60               	andlw	96
  2277  0020B2  0100               	movlb	0	; () banked
  2278  0020B4  6FBD               	movwf	(??_CANInitialize+2)& (0+255),b
  2279  0020B6  6BBE               	clrf	(??_CANInitialize+3)& (0+255),b
  2280  0020B8  0100               	movlb	0	; () banked
  2281  0020BA  51BB               	movf	??_CANInitialize& (0+255),w,b
  2282  0020BC  0100               	movlb	0	; () banked
  2283  0020BE  13BD               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2284  0020C0  0100               	movlb	0	; () banked
  2285  0020C2  51BC               	movf	(??_CANInitialize+1)& (0+255),w,b
  2286  0020C4  0100               	movlb	0	; () banked
  2287  0020C6  13BE               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2288                           
  2289                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2290                           ; Switch size 1, requested type "space"
  2291                           ; Number of cases is 1, Range of values is 0 to 0
  2292                           ; switch strategies available:
  2293                           ; Name         Instructions Cycles
  2294                           ; simple_byte            4     3 (average)
  2295                           ;	Chosen strategy is simple_byte
  2296  0020C8  0100               	movlb	0	; () banked
  2297  0020CA  51BE               	movf	(??_CANInitialize+3)& (0+255),w,b
  2298  0020CC  0A00               	xorlw	0	; case 0
  2299  0020CE  A4D8               	btfss	status,2,c
  2300  0020D0  D7E1               	goto	l359
  2301                           
  2302                           ; BSR set to: 0
  2303                           ; Switch size 1, requested type "space"
  2304                           ; Number of cases is 2, Range of values is 191 to 223
  2305                           ; switch strategies available:
  2306                           ; Name         Instructions Cycles
  2307                           ; simple_byte            7     4 (average)
  2308                           ;	Chosen strategy is simple_byte
  2309  0020D2  0100               	movlb	0	; () banked
  2310  0020D4  51BD               	movf	(??_CANInitialize+2)& (0+255),w,b
  2311  0020D6  0ABF               	xorlw	191	; case 191
  2312  0020D8  B4D8               	btfsc	status,2,c
  2313  0020DA  D7D7               	goto	l358
  2314  0020DC  0A60               	xorlw	96	; case 223
  2315  0020DE  B4D8               	btfsc	status,2,c
  2316  0020E0  D7D0               	goto	l4432
  2317  0020E2  D7D8               	goto	l359
  2318  0020E4                     l4440:
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2322  0020E4  0E00               	movlw	0
  2323  0020E6  6E1E               	movwf	CANSetFilter@filter,c
  2324  0020E8  0E00               	movlw	0
  2325  0020EA  6E1F               	movwf	CANSetFilter@filter+1,c
  2326  0020EC  0E00               	movlw	0
  2327  0020EE  6E20               	movwf	CANSetFilter@filter+2,c
  2328  0020F0  0E00               	movlw	0
  2329  0020F2  6E21               	movwf	CANSetFilter@filter+3,c
  2330  0020F4  C0C0  F022         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2331  0020F8  0E00               	movlw	0
  2332  0020FA  ECCE  F000         	call	_CANSetFilter
  2333                           
  2334                           ;CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2335  0020FE  0E00               	movlw	0
  2336  002100  6E1E               	movwf	CANSetFilter@filter,c
  2337  002102  0E00               	movlw	0
  2338  002104  6E1F               	movwf	CANSetFilter@filter+1,c
  2339  002106  0E00               	movlw	0
  2340  002108  6E20               	movwf	CANSetFilter@filter+2,c
  2341  00210A  0E00               	movlw	0
  2342  00210C  6E21               	movwf	CANSetFilter@filter+3,c
  2343  00210E  C0C0  F022         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2344  002112  0E01               	movlw	1
  2345  002114  ECCE  F000         	call	_CANSetFilter
  2346                           
  2347                           ;CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2348  002118  0E00               	movlw	0
  2349  00211A  6E1E               	movwf	CANSetFilter@filter,c
  2350  00211C  0E00               	movlw	0
  2351  00211E  6E1F               	movwf	CANSetFilter@filter+1,c
  2352  002120  0E00               	movlw	0
  2353  002122  6E20               	movwf	CANSetFilter@filter+2,c
  2354  002124  0E00               	movlw	0
  2355  002126  6E21               	movwf	CANSetFilter@filter+3,c
  2356  002128  C0C1  F022         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2357  00212C  0E02               	movlw	2
  2358  00212E  ECCE  F000         	call	_CANSetFilter
  2359                           
  2360                           ;CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2361  002132  0E00               	movlw	0
  2362  002134  6E1E               	movwf	CANSetFilter@filter,c
  2363  002136  0E00               	movlw	0
  2364  002138  6E1F               	movwf	CANSetFilter@filter+1,c
  2365  00213A  0E00               	movlw	0
  2366  00213C  6E20               	movwf	CANSetFilter@filter+2,c
  2367  00213E  0E00               	movlw	0
  2368  002140  6E21               	movwf	CANSetFilter@filter+3,c
  2369  002142  C0C1  F022         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2370  002146  0E03               	movlw	3
  2371  002148  ECCE  F000         	call	_CANSetFilter
  2372                           
  2373                           ;CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2374  00214C  0E00               	movlw	0
  2375  00214E  6E1E               	movwf	CANSetFilter@filter,c
  2376  002150  0E00               	movlw	0
  2377  002152  6E1F               	movwf	CANSetFilter@filter+1,c
  2378  002154  0E00               	movlw	0
  2379  002156  6E20               	movwf	CANSetFilter@filter+2,c
  2380  002158  0E00               	movlw	0
  2381  00215A  6E21               	movwf	CANSetFilter@filter+3,c
  2382  00215C  C0C1  F022         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2383  002160  0E04               	movlw	4
  2384  002162  ECCE  F000         	call	_CANSetFilter
  2385                           
  2386                           ;CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2387  002166  0E00               	movlw	0
  2388  002168  6E1E               	movwf	CANSetFilter@filter,c
  2389  00216A  0E00               	movlw	0
  2390  00216C  6E1F               	movwf	CANSetFilter@filter+1,c
  2391  00216E  0E00               	movlw	0
  2392  002170  6E20               	movwf	CANSetFilter@filter+2,c
  2393  002172  0E00               	movlw	0
  2394  002174  6E21               	movwf	CANSetFilter@filter+3,c
  2395  002176  C0C1  F022         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2396  00217A  0E05               	movlw	5
  2397  00217C  ECCE  F000         	call	_CANSetFilter
  2398                           
  2399                           ;CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2400  002180  0E00               	movlw	0
  2401  002182  EC24  F013         	call	_CANOperationMode
  2402  002186  0012               	return		;funcret
  2403  002188                     __end_of_CANInitialize:
  2404                           	opt stack 0
  2405                           tblptru	equ	0xFF8
  2406                           tblptrh	equ	0xFF7
  2407                           tblptrl	equ	0xFF6
  2408                           tablat	equ	0xFF5
  2409                           prodh	equ	0xFF4
  2410                           prodl	equ	0xFF3
  2411                           intcon	equ	0xFF2
  2412                           postinc0	equ	0xFEE
  2413                           wreg	equ	0xFE8
  2414                           indf1	equ	0xFE7
  2415                           postdec1	equ	0xFE5
  2416                           fsr1h	equ	0xFE2
  2417                           fsr1l	equ	0xFE1
  2418                           indf2	equ	0xFDF
  2419                           fsr2h	equ	0xFDA
  2420                           fsr2l	equ	0xFD9
  2421                           status	equ	0xFD8
  2422                           
  2423 ;; *************** function _CANSetMask *****************
  2424 ;; Defined at:
  2425 ;;		line 640 in file "CANlib.h"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  numBuffer       1    wreg     enum E16878
  2428 ;;  mask            4   29[COMRAM] unsigned long 
  2429 ;;  type            1   33[COMRAM] enum E16844
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  numBuffer       1    4[BANK0 ] enum E16878
  2432 ;;  tamp            4    5[BANK0 ] unsigned long 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;		None               void
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2442 ;;      Params:         5       0       0       0
  2443 ;;      Locals:         0       5       0       0
  2444 ;;      Temps:          0       4       0       0
  2445 ;;      Totals:         5       9       0       0
  2446 ;;Total ram usage:       14 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    2
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_CANInitialize
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text6
  2457  001C78                     __ptext6:
  2458                           	opt stack 0
  2459  001C78                     _CANSetMask:
  2460                           	opt stack 26
  2461                           
  2462                           ;incstack = 0
  2463                           ;CANSetMask@numBuffer stored from wreg
  2464  001C78  0100               	movlb	0	; () banked
  2465  001C7A  6FB1               	movwf	CANSetMask@numBuffer& (0+255),b
  2466                           
  2467                           ;CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2468  001C7C  0100               	movlb	0	; () banked
  2469  001C7E  05B1               	decf	CANSetMask@numBuffer& (0+255),w,b
  2470  001C80  A4D8               	btfss	status,2,c
  2471  001C82  D051               	goto	l3996
  2472                           
  2473                           ; BSR set to: 0
  2474  001C84  2822               	incf	CANSetMask@type,w,c
  2475  001C86  A4D8               	btfss	status,2,c
  2476  001C88  D04E               	goto	l3996
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;CANlib.h: 644: {
  2480                           ;CANlib.h: 645: tamp = (mask >> 3);
  2481  001C8A  C01E  F0AD         	movff	CANSetMask@mask,??_CANSetMask
  2482  001C8E  C01F  F0AE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2483  001C92  C020  F0AF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2484  001C96  C021  F0B0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2485  001C9A  0E04               	movlw	4
  2486  001C9C  D006               	goto	u4700
  2487  001C9E                     u4705:
  2488  001C9E  0100               	movlb	0	; () banked
  2489  001CA0  90D8               	bcf	status,0,c
  2490  001CA2  33B0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2491  001CA4  33AF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2492  001CA6  33AE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2493  001CA8  33AD               	rrcf	??_CANSetMask& (0+255),f,b
  2494  001CAA                     u4700:
  2495  001CAA  2EE8               	decfsz	wreg,f,c
  2496  001CAC  D7F8               	goto	u4705
  2497  001CAE  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2498  001CB2  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2499  001CB6  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2500  001CBA  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;CANlib.h: 646: tamp = tamp & 0x000000FF;
  2504  001CBE  0100               	movlb	0	; () banked
  2505  001CC0  51B2               	movf	CANSetMask@tamp& (0+255),w,b
  2506  001CC2  0100               	movlb	0	; () banked
  2507  001CC4  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2508  001CC6  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2509  001CC8  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2510  001CCA  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  2514  001CCC  C0B2  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;CANlib.h: 649: tamp = mask & 0x00000007;
  2518  001CD0  0E07               	movlw	7
  2519  001CD2  141E               	andwf	CANSetMask@mask,w,c
  2520  001CD4  0100               	movlb	0	; () banked
  2521  001CD6  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2522  001CD8  0E00               	movlw	0
  2523  001CDA  141F               	andwf	CANSetMask@mask+1,w,c
  2524  001CDC  0100               	movlb	0	; () banked
  2525  001CDE  6FB3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2526  001CE0  0E00               	movlw	0
  2527  001CE2  1420               	andwf	CANSetMask@mask+2,w,c
  2528  001CE4  0100               	movlb	0	; () banked
  2529  001CE6  6FB4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2530  001CE8  0E00               	movlw	0
  2531  001CEA  1421               	andwf	CANSetMask@mask+3,w,c
  2532  001CEC  0100               	movlb	0	; () banked
  2533  001CEE  6FB5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;CANlib.h: 650: tamp = tamp << 5;
  2537  001CF0  C0B2  F0AD         	movff	CANSetMask@tamp,??_CANSetMask
  2538  001CF4  C0B3  F0AE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2539  001CF8  C0B4  F0AF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2540  001CFC  C0B5  F0B0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2541  001D00  0E05               	movlw	5
  2542  001D02                     u4715:
  2543  001D02  90D8               	bcf	status,0,c
  2544  001D04  0100               	movlb	0	; () banked
  2545  001D06  37AD               	rlcf	??_CANSetMask& (0+255),f,b
  2546  001D08  37AE               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2547  001D0A  37AF               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2548  001D0C  37B0               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2549  001D0E  2EE8               	decfsz	wreg,f,c
  2550  001D10  D7F8               	goto	u4715
  2551  001D12  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2552  001D16  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2553  001D1A  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2554  001D1E  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  2558  001D22  C0B2  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2559  001D26                     l3996:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;CANlib.h: 652: }
  2563                           ;CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2564  001D26  0E02               	movlw	2
  2565  001D28  0100               	movlb	0	; () banked
  2566  001D2A  19B1               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2567  001D2C  A4D8               	btfss	status,2,c
  2568  001D2E  D051               	goto	l4012
  2569                           
  2570                           ; BSR set to: 0
  2571  001D30  2822               	incf	CANSetMask@type,w,c
  2572  001D32  A4D8               	btfss	status,2,c
  2573  001D34  D04E               	goto	l4012
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;CANlib.h: 655: {
  2577                           ;CANlib.h: 656: tamp = (mask >> 3);
  2578  001D36  C01E  F0AD         	movff	CANSetMask@mask,??_CANSetMask
  2579  001D3A  C01F  F0AE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2580  001D3E  C020  F0AF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2581  001D42  C021  F0B0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2582  001D46  0E04               	movlw	4
  2583  001D48  D006               	goto	u4740
  2584  001D4A                     u4745:
  2585  001D4A  0100               	movlb	0	; () banked
  2586  001D4C  90D8               	bcf	status,0,c
  2587  001D4E  33B0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2588  001D50  33AF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2589  001D52  33AE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2590  001D54  33AD               	rrcf	??_CANSetMask& (0+255),f,b
  2591  001D56                     u4740:
  2592  001D56  2EE8               	decfsz	wreg,f,c
  2593  001D58  D7F8               	goto	u4745
  2594  001D5A  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2595  001D5E  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2596  001D62  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2597  001D66  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;CANlib.h: 657: tamp = tamp & 0x000000FF;
  2601  001D6A  0100               	movlb	0	; () banked
  2602  001D6C  51B2               	movf	CANSetMask@tamp& (0+255),w,b
  2603  001D6E  0100               	movlb	0	; () banked
  2604  001D70  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2605  001D72  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2606  001D74  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2607  001D76  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  2611  001D78  C0B2  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;CANlib.h: 660: tamp = mask & 0x00000007;
  2615  001D7C  0E07               	movlw	7
  2616  001D7E  141E               	andwf	CANSetMask@mask,w,c
  2617  001D80  0100               	movlb	0	; () banked
  2618  001D82  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2619  001D84  0E00               	movlw	0
  2620  001D86  141F               	andwf	CANSetMask@mask+1,w,c
  2621  001D88  0100               	movlb	0	; () banked
  2622  001D8A  6FB3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2623  001D8C  0E00               	movlw	0
  2624  001D8E  1420               	andwf	CANSetMask@mask+2,w,c
  2625  001D90  0100               	movlb	0	; () banked
  2626  001D92  6FB4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2627  001D94  0E00               	movlw	0
  2628  001D96  1421               	andwf	CANSetMask@mask+3,w,c
  2629  001D98  0100               	movlb	0	; () banked
  2630  001D9A  6FB5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;CANlib.h: 661: tamp = tamp << 5;
  2634  001D9C  C0B2  F0AD         	movff	CANSetMask@tamp,??_CANSetMask
  2635  001DA0  C0B3  F0AE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2636  001DA4  C0B4  F0AF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2637  001DA8  C0B5  F0B0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2638  001DAC  0E05               	movlw	5
  2639  001DAE                     u4755:
  2640  001DAE  90D8               	bcf	status,0,c
  2641  001DB0  0100               	movlb	0	; () banked
  2642  001DB2  37AD               	rlcf	??_CANSetMask& (0+255),f,b
  2643  001DB4  37AE               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2644  001DB6  37AF               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2645  001DB8  37B0               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2646  001DBA  2EE8               	decfsz	wreg,f,c
  2647  001DBC  D7F8               	goto	u4755
  2648  001DBE  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2649  001DC2  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2650  001DC6  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2651  001DCA  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  2655  001DCE  C0B2  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2656  001DD2                     l4012:
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;CANlib.h: 663: }
  2660                           ;CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2661  001DD2  0100               	movlb	0	; () banked
  2662  001DD4  05B1               	decf	CANSetMask@numBuffer& (0+255),w,b
  2663  001DD6  A4D8               	btfss	status,2,c
  2664  001DD8  D07C               	goto	l4044
  2665                           
  2666                           ; BSR set to: 0
  2667  001DDA  0EF7               	movlw	247
  2668  001DDC  1822               	xorwf	CANSetMask@type,w,c
  2669  001DDE  A4D8               	btfss	status,2,c
  2670  001DE0  D078               	goto	l4044
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;CANlib.h: 666: {
  2674                           ;CANlib.h: 667: tamp = mask & 0x000000FF;
  2675  001DE2  501E               	movf	CANSetMask@mask,w,c
  2676  001DE4  0100               	movlb	0	; () banked
  2677  001DE6  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2678  001DE8  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2679  001DEA  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2680  001DEC  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  2684  001DEE  C0B2  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;CANlib.h: 670: tamp = mask & 0x0000FF00;
  2688  001DF2  0E00               	movlw	0
  2689  001DF4  141E               	andwf	CANSetMask@mask,w,c
  2690  001DF6  0100               	movlb	0	; () banked
  2691  001DF8  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2692  001DFA  0EFF               	movlw	255
  2693  001DFC  141F               	andwf	CANSetMask@mask+1,w,c
  2694  001DFE  0100               	movlb	0	; () banked
  2695  001E00  6FB3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2696  001E02  0E00               	movlw	0
  2697  001E04  1420               	andwf	CANSetMask@mask+2,w,c
  2698  001E06  0100               	movlb	0	; () banked
  2699  001E08  6FB4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2700  001E0A  0E00               	movlw	0
  2701  001E0C  1421               	andwf	CANSetMask@mask+3,w,c
  2702  001E0E  0100               	movlb	0	; () banked
  2703  001E10  6FB5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;CANlib.h: 671: tamp = tamp >> 8;
  2707  001E12  C0B2  F0AD         	movff	CANSetMask@tamp,??_CANSetMask
  2708  001E16  C0B3  F0AE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2709  001E1A  C0B4  F0AF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2710  001E1E  C0B5  F0B0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2711  001E22  C0AE  F0AD         	movff	??_CANSetMask+1,??_CANSetMask
  2712  001E26  C0AF  F0AE         	movff	??_CANSetMask+2,??_CANSetMask+1
  2713  001E2A  C0B0  F0AF         	movff	??_CANSetMask+3,??_CANSetMask+2
  2714  001E2E  0100               	movlb	0	; () banked
  2715  001E30  6BB0               	clrf	(??_CANSetMask+3)& (0+255),b
  2716  001E32  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2717  001E36  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2718  001E3A  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2719  001E3E  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  2723  001E42  C0B2  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;CANlib.h: 674: if (mask & 0x00010000)
  2727  001E46  A020               	btfss	CANSetMask@mask+2,0,c
  2728  001E48  D003               	goto	l432
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  2732  001E4A  010F               	movlb	15	; () banked
  2733  001E4C  8119               	bsf	25,0,b	;volatile
  2734  001E4E  D002               	goto	l433
  2735  001E50                     l432:
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;CANlib.h: 676: else
  2739                           ;CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  2740  001E50  010F               	movlb	15	; () banked
  2741  001E52  9119               	bcf	25,0,b	;volatile
  2742  001E54                     l433:
  2743                           
  2744                           ; BSR set to: 15
  2745                           ;CANlib.h: 679: if (mask & 0x00020000)
  2746  001E54  A220               	btfss	CANSetMask@mask+2,1,c
  2747  001E56  D003               	goto	l434
  2748                           
  2749                           ; BSR set to: 15
  2750                           ;CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  2751  001E58  010F               	movlb	15	; () banked
  2752  001E5A  8319               	bsf	25,1,b	;volatile
  2753  001E5C  D002               	goto	l435
  2754  001E5E                     l434:
  2755                           
  2756                           ; BSR set to: 15
  2757                           ;CANlib.h: 681: else
  2758                           ;CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  2759  001E5E  010F               	movlb	15	; () banked
  2760  001E60  9319               	bcf	25,1,b	;volatile
  2761  001E62                     l435:
  2762                           
  2763                           ; BSR set to: 15
  2764                           ;CANlib.h: 684: if (mask & 0x00040000)
  2765  001E62  A420               	btfss	CANSetMask@mask+2,2,c
  2766  001E64  D003               	goto	l436
  2767                           
  2768                           ; BSR set to: 15
  2769                           ;CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  2770  001E66  010F               	movlb	15	; () banked
  2771  001E68  8B19               	bsf	25,5,b	;volatile
  2772  001E6A  D002               	goto	l437
  2773  001E6C                     l436:
  2774                           
  2775                           ; BSR set to: 15
  2776                           ;CANlib.h: 686: else
  2777                           ;CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  2778  001E6C  010F               	movlb	15	; () banked
  2779  001E6E  9B19               	bcf	25,5,b	;volatile
  2780  001E70                     l437:
  2781                           
  2782                           ; BSR set to: 15
  2783                           ;CANlib.h: 689: if (mask & 0x00080000)
  2784  001E70  A620               	btfss	CANSetMask@mask+2,3,c
  2785  001E72  D003               	goto	l438
  2786                           
  2787                           ; BSR set to: 15
  2788                           ;CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  2789  001E74  010F               	movlb	15	; () banked
  2790  001E76  8D19               	bsf	25,6,b	;volatile
  2791  001E78  D002               	goto	l439
  2792  001E7A                     l438:
  2793                           
  2794                           ; BSR set to: 15
  2795                           ;CANlib.h: 691: else
  2796                           ;CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  2797  001E7A  010F               	movlb	15	; () banked
  2798  001E7C  9D19               	bcf	25,6,b	;volatile
  2799  001E7E                     l439:
  2800                           
  2801                           ; BSR set to: 15
  2802                           ;CANlib.h: 694: if (mask & 0x00100000)
  2803  001E7E  A820               	btfss	CANSetMask@mask+2,4,c
  2804  001E80  D003               	goto	l440
  2805                           
  2806                           ; BSR set to: 15
  2807                           ;CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  2808  001E82  010F               	movlb	15	; () banked
  2809  001E84  8F19               	bsf	25,7,b	;volatile
  2810  001E86  D002               	goto	l4038
  2811  001E88                     l440:
  2812                           
  2813                           ; BSR set to: 15
  2814                           ;CANlib.h: 696: else
  2815                           ;CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  2816  001E88  010F               	movlb	15	; () banked
  2817  001E8A  9F19               	bcf	25,7,b	;volatile
  2818  001E8C                     l4038:
  2819                           
  2820                           ; BSR set to: 15
  2821                           ;CANlib.h: 699: tamp = (mask >> 21);
  2822  001E8C  C01E  F0AD         	movff	CANSetMask@mask,??_CANSetMask
  2823  001E90  C01F  F0AE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2824  001E94  C020  F0AF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2825  001E98  C021  F0B0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2826  001E9C  0E16               	movlw	22
  2827  001E9E  D006               	goto	u4830
  2828  001EA0                     u4835:
  2829  001EA0  0100               	movlb	0	; () banked
  2830  001EA2  90D8               	bcf	status,0,c
  2831  001EA4  33B0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2832  001EA6  33AF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2833  001EA8  33AE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2834  001EAA  33AD               	rrcf	??_CANSetMask& (0+255),f,b
  2835  001EAC                     u4830:
  2836  001EAC  2EE8               	decfsz	wreg,f,c
  2837  001EAE  D7F8               	goto	u4835
  2838  001EB0  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2839  001EB4  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2840  001EB8  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2841  001EBC  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;CANlib.h: 700: tamp = tamp & 0x000000FF;
  2845  001EC0  0100               	movlb	0	; () banked
  2846  001EC2  51B2               	movf	CANSetMask@tamp& (0+255),w,b
  2847  001EC4  0100               	movlb	0	; () banked
  2848  001EC6  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2849  001EC8  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2850  001ECA  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2851  001ECC  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  2855  001ECE  C0B2  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2856  001ED2                     l4044:
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;CANlib.h: 702: }
  2860                           ;CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2861  001ED2  0E02               	movlw	2
  2862  001ED4  0100               	movlb	0	; () banked
  2863  001ED6  19B1               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2864  001ED8  A4D8               	btfss	status,2,c
  2865  001EDA  0012               	return	
  2866                           
  2867                           ; BSR set to: 0
  2868  001EDC  0EF7               	movlw	247
  2869  001EDE  1822               	xorwf	CANSetMask@type,w,c
  2870  001EE0  A4D8               	btfss	status,2,c
  2871  001EE2  0012               	return	
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;CANlib.h: 705: {
  2875                           ;CANlib.h: 706: tamp = mask & 0x000000FF;
  2876  001EE4  501E               	movf	CANSetMask@mask,w,c
  2877  001EE6  0100               	movlb	0	; () banked
  2878  001EE8  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2879  001EEA  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2880  001EEC  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2881  001EEE  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  2885  001EF0  C0B2  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;CANlib.h: 709: tamp = mask & 0x0000FF00;
  2889  001EF4  0E00               	movlw	0
  2890  001EF6  141E               	andwf	CANSetMask@mask,w,c
  2891  001EF8  0100               	movlb	0	; () banked
  2892  001EFA  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2893  001EFC  0EFF               	movlw	255
  2894  001EFE  141F               	andwf	CANSetMask@mask+1,w,c
  2895  001F00  0100               	movlb	0	; () banked
  2896  001F02  6FB3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2897  001F04  0E00               	movlw	0
  2898  001F06  1420               	andwf	CANSetMask@mask+2,w,c
  2899  001F08  0100               	movlb	0	; () banked
  2900  001F0A  6FB4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2901  001F0C  0E00               	movlw	0
  2902  001F0E  1421               	andwf	CANSetMask@mask+3,w,c
  2903  001F10  0100               	movlb	0	; () banked
  2904  001F12  6FB5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;CANlib.h: 710: tamp = tamp >> 8;
  2908  001F14  C0B2  F0AD         	movff	CANSetMask@tamp,??_CANSetMask
  2909  001F18  C0B3  F0AE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2910  001F1C  C0B4  F0AF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2911  001F20  C0B5  F0B0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2912  001F24  C0AE  F0AD         	movff	??_CANSetMask+1,??_CANSetMask
  2913  001F28  C0AF  F0AE         	movff	??_CANSetMask+2,??_CANSetMask+1
  2914  001F2C  C0B0  F0AF         	movff	??_CANSetMask+3,??_CANSetMask+2
  2915  001F30  0100               	movlb	0	; () banked
  2916  001F32  6BB0               	clrf	(??_CANSetMask+3)& (0+255),b
  2917  001F34  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2918  001F38  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2919  001F3C  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2920  001F40  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  2924  001F44  C0B2  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;CANlib.h: 713: if (mask & 0x00010000)
  2928  001F48  A020               	btfss	CANSetMask@mask+2,0,c
  2929  001F4A  D003               	goto	l443
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  2933  001F4C  010F               	movlb	15	; () banked
  2934  001F4E  811D               	bsf	29,0,b	;volatile
  2935  001F50  D002               	goto	l444
  2936  001F52                     l443:
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;CANlib.h: 715: else
  2940                           ;CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  2941  001F52  010F               	movlb	15	; () banked
  2942  001F54  911D               	bcf	29,0,b	;volatile
  2943  001F56                     l444:
  2944                           
  2945                           ; BSR set to: 15
  2946                           ;CANlib.h: 718: if (mask & 0x00020000)
  2947  001F56  A220               	btfss	CANSetMask@mask+2,1,c
  2948  001F58  D003               	goto	l445
  2949                           
  2950                           ; BSR set to: 15
  2951                           ;CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  2952  001F5A  010F               	movlb	15	; () banked
  2953  001F5C  831D               	bsf	29,1,b	;volatile
  2954  001F5E  D002               	goto	l446
  2955  001F60                     l445:
  2956                           
  2957                           ; BSR set to: 15
  2958                           ;CANlib.h: 720: else
  2959                           ;CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  2960  001F60  010F               	movlb	15	; () banked
  2961  001F62  931D               	bcf	29,1,b	;volatile
  2962  001F64                     l446:
  2963                           
  2964                           ; BSR set to: 15
  2965                           ;CANlib.h: 723: if (mask & 0x00040000)
  2966  001F64  A420               	btfss	CANSetMask@mask+2,2,c
  2967  001F66  D003               	goto	l447
  2968                           
  2969                           ; BSR set to: 15
  2970                           ;CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  2971  001F68  010F               	movlb	15	; () banked
  2972  001F6A  8B1D               	bsf	29,5,b	;volatile
  2973  001F6C  D002               	goto	l448
  2974  001F6E                     l447:
  2975                           
  2976                           ; BSR set to: 15
  2977                           ;CANlib.h: 725: else
  2978                           ;CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  2979  001F6E  010F               	movlb	15	; () banked
  2980  001F70  9B1D               	bcf	29,5,b	;volatile
  2981  001F72                     l448:
  2982                           
  2983                           ; BSR set to: 15
  2984                           ;CANlib.h: 728: if (mask & 0x00080000)
  2985  001F72  A620               	btfss	CANSetMask@mask+2,3,c
  2986  001F74  D003               	goto	l449
  2987                           
  2988                           ; BSR set to: 15
  2989                           ;CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  2990  001F76  010F               	movlb	15	; () banked
  2991  001F78  8D1D               	bsf	29,6,b	;volatile
  2992  001F7A  D002               	goto	l450
  2993  001F7C                     l449:
  2994                           
  2995                           ; BSR set to: 15
  2996                           ;CANlib.h: 730: else
  2997                           ;CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  2998  001F7C  010F               	movlb	15	; () banked
  2999  001F7E  9D1D               	bcf	29,6,b	;volatile
  3000  001F80                     l450:
  3001                           
  3002                           ; BSR set to: 15
  3003                           ;CANlib.h: 733: if (mask & 0x00100000)
  3004  001F80  A820               	btfss	CANSetMask@mask+2,4,c
  3005  001F82  D003               	goto	l451
  3006                           
  3007                           ; BSR set to: 15
  3008                           ;CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3009  001F84  010F               	movlb	15	; () banked
  3010  001F86  8F1D               	bsf	29,7,b	;volatile
  3011  001F88  D002               	goto	l4070
  3012  001F8A                     l451:
  3013                           
  3014                           ; BSR set to: 15
  3015                           ;CANlib.h: 735: else
  3016                           ;CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3017  001F8A  010F               	movlb	15	; () banked
  3018  001F8C  9F1D               	bcf	29,7,b	;volatile
  3019  001F8E                     l4070:
  3020                           
  3021                           ; BSR set to: 15
  3022                           ;CANlib.h: 738: tamp = (mask >> 21);
  3023  001F8E  C01E  F0AD         	movff	CANSetMask@mask,??_CANSetMask
  3024  001F92  C01F  F0AE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3025  001F96  C020  F0AF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3026  001F9A  C021  F0B0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3027  001F9E  0E16               	movlw	22
  3028  001FA0  D006               	goto	u4910
  3029  001FA2                     u4915:
  3030  001FA2  0100               	movlb	0	; () banked
  3031  001FA4  90D8               	bcf	status,0,c
  3032  001FA6  33B0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3033  001FA8  33AF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3034  001FAA  33AE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3035  001FAC  33AD               	rrcf	??_CANSetMask& (0+255),f,b
  3036  001FAE                     u4910:
  3037  001FAE  2EE8               	decfsz	wreg,f,c
  3038  001FB0  D7F8               	goto	u4915
  3039  001FB2  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  3040  001FB6  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3041  001FBA  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3042  001FBE  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;CANlib.h: 739: tamp = tamp & 0x000000FF;
  3046  001FC2  0100               	movlb	0	; () banked
  3047  001FC4  51B2               	movf	CANSetMask@tamp& (0+255),w,b
  3048  001FC6  0100               	movlb	0	; () banked
  3049  001FC8  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  3050  001FCA  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3051  001FCC  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3052  001FCE  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3056  001FD0  C0B2  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3057  001FD4  0012               	return	
  3058  001FD6                     __end_of_CANSetMask:
  3059                           	opt stack 0
  3060                           tblptru	equ	0xFF8
  3061                           tblptrh	equ	0xFF7
  3062                           tblptrl	equ	0xFF6
  3063                           tablat	equ	0xFF5
  3064                           prodh	equ	0xFF4
  3065                           prodl	equ	0xFF3
  3066                           intcon	equ	0xFF2
  3067                           postinc0	equ	0xFEE
  3068                           wreg	equ	0xFE8
  3069                           indf1	equ	0xFE7
  3070                           postdec1	equ	0xFE5
  3071                           fsr1h	equ	0xFE2
  3072                           fsr1l	equ	0xFE1
  3073                           indf2	equ	0xFDF
  3074                           fsr2h	equ	0xFDA
  3075                           fsr2l	equ	0xFD9
  3076                           status	equ	0xFD8
  3077                           
  3078 ;; *************** function _CANSetFilter *****************
  3079 ;; Defined at:
  3080 ;;		line 748 in file "CANlib.h"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  numBuffer       1    wreg     enum E16881
  3083 ;;  filter          4   29[COMRAM] unsigned long 
  3084 ;;  type            1   33[COMRAM] enum E16844
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  numBuffer       1    4[BANK0 ] enum E16881
  3087 ;;  tamp            4    5[BANK0 ] unsigned long 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;		None               void
  3090 ;; Registers used:
  3091 ;;		wreg, status,2, status,0
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3097 ;;      Params:         5       0       0       0
  3098 ;;      Locals:         0       5       0       0
  3099 ;;      Temps:          0       4       0       0
  3100 ;;      Totals:         5       9       0       0
  3101 ;;Total ram usage:       14 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; Hardware stack levels required when called:    2
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_CANInitialize
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           	psect	text7
  3112  00019C                     __ptext7:
  3113                           	opt stack 0
  3114  00019C                     _CANSetFilter:
  3115                           	opt stack 26
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;incstack = 0
  3119                           ;CANSetFilter@numBuffer stored from wreg
  3120  00019C  0100               	movlb	0	; () banked
  3121  00019E  6FB1               	movwf	CANSetFilter@numBuffer& (0+255),b
  3122                           
  3123                           ;CANlib.h: 750: unsigned long tamp;
  3124                           ;CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3125  0001A0  0100               	movlb	0	; () banked
  3126  0001A2  51B1               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3127  0001A4  0100               	movlb	0	; () banked
  3128  0001A6  A4D8               	btfss	status,2,c
  3129  0001A8  D053               	goto	l4094
  3130                           
  3131                           ; BSR set to: 0
  3132  0001AA  2822               	incf	CANSetFilter@type,w,c
  3133  0001AC  A4D8               	btfss	status,2,c
  3134  0001AE  D050               	goto	l4094
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;CANlib.h: 753: {
  3138                           ;CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3139  0001B0  010F               	movlb	15	; () banked
  3140  0001B2  9701               	bcf	1,3,b	;volatile
  3141                           
  3142                           ; BSR set to: 15
  3143                           ;CANlib.h: 756: tamp = (filter >> 3);
  3144  0001B4  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3145  0001B8  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3146  0001BC  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3147  0001C0  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3148  0001C4  0E04               	movlw	4
  3149  0001C6  D006               	goto	u4940
  3150  0001C8                     u4945:
  3151  0001C8  0100               	movlb	0	; () banked
  3152  0001CA  90D8               	bcf	status,0,c
  3153  0001CC  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3154  0001CE  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3155  0001D0  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3156  0001D2  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3157  0001D4                     u4940:
  3158  0001D4  2EE8               	decfsz	wreg,f,c
  3159  0001D6  D7F8               	goto	u4945
  3160  0001D8  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3161  0001DC  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3162  0001E0  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3163  0001E4  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;CANlib.h: 757: tamp = tamp & 0x000000FF;
  3167  0001E8  0100               	movlb	0	; () banked
  3168  0001EA  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3169  0001EC  0100               	movlb	0	; () banked
  3170  0001EE  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3171  0001F0  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3172  0001F2  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3173  0001F4  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3177  0001F6  C0B2  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;CANlib.h: 760: tamp = filter & 0x00000007;
  3181  0001FA  0E07               	movlw	7
  3182  0001FC  141E               	andwf	CANSetFilter@filter,w,c
  3183  0001FE  0100               	movlb	0	; () banked
  3184  000200  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3185  000202  0E00               	movlw	0
  3186  000204  141F               	andwf	CANSetFilter@filter+1,w,c
  3187  000206  0100               	movlb	0	; () banked
  3188  000208  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3189  00020A  0E00               	movlw	0
  3190  00020C  1420               	andwf	CANSetFilter@filter+2,w,c
  3191  00020E  0100               	movlb	0	; () banked
  3192  000210  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3193  000212  0E00               	movlw	0
  3194  000214  1421               	andwf	CANSetFilter@filter+3,w,c
  3195  000216  0100               	movlb	0	; () banked
  3196  000218  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;CANlib.h: 761: tamp = tamp << 5;
  3200  00021A  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3201  00021E  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3202  000222  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3203  000226  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3204  00022A  0E05               	movlw	5
  3205  00022C                     u4955:
  3206  00022C  90D8               	bcf	status,0,c
  3207  00022E  0100               	movlb	0	; () banked
  3208  000230  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3209  000232  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3210  000234  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3211  000236  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3212  000238  2EE8               	decfsz	wreg,f,c
  3213  00023A  D7F8               	goto	u4955
  3214  00023C  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3215  000240  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3216  000244  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3217  000248  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3221  00024C  C0B2  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3222  000250                     l4094:
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;CANlib.h: 763: }
  3226                           ;CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3227  000250  0100               	movlb	0	; () banked
  3228  000252  05B1               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3229  000254  A4D8               	btfss	status,2,c
  3230  000256  D053               	goto	l4112
  3231                           
  3232                           ; BSR set to: 0
  3233  000258  2822               	incf	CANSetFilter@type,w,c
  3234  00025A  A4D8               	btfss	status,2,c
  3235  00025C  D050               	goto	l4112
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;CANlib.h: 766: {
  3239                           ;CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3240  00025E  010F               	movlb	15	; () banked
  3241  000260  9705               	bcf	5,3,b	;volatile
  3242                           
  3243                           ; BSR set to: 15
  3244                           ;CANlib.h: 769: tamp = (filter >> 3);
  3245  000262  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3246  000266  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3247  00026A  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3248  00026E  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3249  000272  0E04               	movlw	4
  3250  000274  D006               	goto	u4980
  3251  000276                     u4985:
  3252  000276  0100               	movlb	0	; () banked
  3253  000278  90D8               	bcf	status,0,c
  3254  00027A  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3255  00027C  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3256  00027E  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3257  000280  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3258  000282                     u4980:
  3259  000282  2EE8               	decfsz	wreg,f,c
  3260  000284  D7F8               	goto	u4985
  3261  000286  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3262  00028A  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3263  00028E  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3264  000292  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;CANlib.h: 770: tamp = tamp & 0x000000FF;
  3268  000296  0100               	movlb	0	; () banked
  3269  000298  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3270  00029A  0100               	movlb	0	; () banked
  3271  00029C  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3272  00029E  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3273  0002A0  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3274  0002A2  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3278  0002A4  C0B2  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;CANlib.h: 773: tamp = filter & 0x00000007;
  3282  0002A8  0E07               	movlw	7
  3283  0002AA  141E               	andwf	CANSetFilter@filter,w,c
  3284  0002AC  0100               	movlb	0	; () banked
  3285  0002AE  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3286  0002B0  0E00               	movlw	0
  3287  0002B2  141F               	andwf	CANSetFilter@filter+1,w,c
  3288  0002B4  0100               	movlb	0	; () banked
  3289  0002B6  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3290  0002B8  0E00               	movlw	0
  3291  0002BA  1420               	andwf	CANSetFilter@filter+2,w,c
  3292  0002BC  0100               	movlb	0	; () banked
  3293  0002BE  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3294  0002C0  0E00               	movlw	0
  3295  0002C2  1421               	andwf	CANSetFilter@filter+3,w,c
  3296  0002C4  0100               	movlb	0	; () banked
  3297  0002C6  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;CANlib.h: 774: tamp = tamp << 5;
  3301  0002C8  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3302  0002CC  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3303  0002D0  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3304  0002D4  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3305  0002D8  0E05               	movlw	5
  3306  0002DA                     u4995:
  3307  0002DA  90D8               	bcf	status,0,c
  3308  0002DC  0100               	movlb	0	; () banked
  3309  0002DE  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3310  0002E0  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3311  0002E2  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3312  0002E4  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3313  0002E6  2EE8               	decfsz	wreg,f,c
  3314  0002E8  D7F8               	goto	u4995
  3315  0002EA  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3316  0002EE  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3317  0002F2  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3318  0002F6  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3322  0002FA  C0B2  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3323  0002FE                     l4112:
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;CANlib.h: 776: }
  3327                           ;CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3328  0002FE  0E02               	movlw	2
  3329  000300  0100               	movlb	0	; () banked
  3330  000302  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3331  000304  A4D8               	btfss	status,2,c
  3332  000306  D053               	goto	l4130
  3333                           
  3334                           ; BSR set to: 0
  3335  000308  2822               	incf	CANSetFilter@type,w,c
  3336  00030A  A4D8               	btfss	status,2,c
  3337  00030C  D050               	goto	l4130
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;CANlib.h: 779: {
  3341                           ;CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3342  00030E  010F               	movlb	15	; () banked
  3343  000310  9709               	bcf	9,3,b	;volatile
  3344                           
  3345                           ; BSR set to: 15
  3346                           ;CANlib.h: 782: tamp = (filter >> 3);
  3347  000312  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3348  000316  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3349  00031A  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3350  00031E  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3351  000322  0E04               	movlw	4
  3352  000324  D006               	goto	u5020
  3353  000326                     u5025:
  3354  000326  0100               	movlb	0	; () banked
  3355  000328  90D8               	bcf	status,0,c
  3356  00032A  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3357  00032C  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3358  00032E  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3359  000330  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3360  000332                     u5020:
  3361  000332  2EE8               	decfsz	wreg,f,c
  3362  000334  D7F8               	goto	u5025
  3363  000336  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3364  00033A  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3365  00033E  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3366  000342  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;CANlib.h: 783: tamp = tamp & 0x000000FF;
  3370  000346  0100               	movlb	0	; () banked
  3371  000348  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3372  00034A  0100               	movlb	0	; () banked
  3373  00034C  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3374  00034E  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3375  000350  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3376  000352  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3380  000354  C0B2  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;CANlib.h: 786: tamp = filter & 0x00000007;
  3384  000358  0E07               	movlw	7
  3385  00035A  141E               	andwf	CANSetFilter@filter,w,c
  3386  00035C  0100               	movlb	0	; () banked
  3387  00035E  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3388  000360  0E00               	movlw	0
  3389  000362  141F               	andwf	CANSetFilter@filter+1,w,c
  3390  000364  0100               	movlb	0	; () banked
  3391  000366  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3392  000368  0E00               	movlw	0
  3393  00036A  1420               	andwf	CANSetFilter@filter+2,w,c
  3394  00036C  0100               	movlb	0	; () banked
  3395  00036E  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3396  000370  0E00               	movlw	0
  3397  000372  1421               	andwf	CANSetFilter@filter+3,w,c
  3398  000374  0100               	movlb	0	; () banked
  3399  000376  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;CANlib.h: 787: tamp = tamp << 5;
  3403  000378  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3404  00037C  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3405  000380  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3406  000384  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3407  000388  0E05               	movlw	5
  3408  00038A                     u5035:
  3409  00038A  90D8               	bcf	status,0,c
  3410  00038C  0100               	movlb	0	; () banked
  3411  00038E  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3412  000390  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3413  000392  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3414  000394  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3415  000396  2EE8               	decfsz	wreg,f,c
  3416  000398  D7F8               	goto	u5035
  3417  00039A  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3418  00039E  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3419  0003A2  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3420  0003A6  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  3424  0003AA  C0B2  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3425  0003AE                     l4130:
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;CANlib.h: 789: }
  3429                           ;CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3430  0003AE  0E03               	movlw	3
  3431  0003B0  0100               	movlb	0	; () banked
  3432  0003B2  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3433  0003B4  A4D8               	btfss	status,2,c
  3434  0003B6  D053               	goto	l4148
  3435                           
  3436                           ; BSR set to: 0
  3437  0003B8  2822               	incf	CANSetFilter@type,w,c
  3438  0003BA  A4D8               	btfss	status,2,c
  3439  0003BC  D050               	goto	l4148
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;CANlib.h: 792: {
  3443                           ;CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  3444  0003BE  010F               	movlb	15	; () banked
  3445  0003C0  970D               	bcf	13,3,b	;volatile
  3446                           
  3447                           ; BSR set to: 15
  3448                           ;CANlib.h: 795: tamp = (filter >> 3);
  3449  0003C2  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3450  0003C6  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3451  0003CA  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3452  0003CE  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3453  0003D2  0E04               	movlw	4
  3454  0003D4  D006               	goto	u5060
  3455  0003D6                     u5065:
  3456  0003D6  0100               	movlb	0	; () banked
  3457  0003D8  90D8               	bcf	status,0,c
  3458  0003DA  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3459  0003DC  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3460  0003DE  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3461  0003E0  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3462  0003E2                     u5060:
  3463  0003E2  2EE8               	decfsz	wreg,f,c
  3464  0003E4  D7F8               	goto	u5065
  3465  0003E6  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3466  0003EA  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3467  0003EE  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3468  0003F2  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;CANlib.h: 796: tamp = tamp & 0x000000FF;
  3472  0003F6  0100               	movlb	0	; () banked
  3473  0003F8  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3474  0003FA  0100               	movlb	0	; () banked
  3475  0003FC  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3476  0003FE  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3477  000400  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3478  000402  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  3482  000404  C0B2  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;CANlib.h: 799: tamp = filter & 0x00000007;
  3486  000408  0E07               	movlw	7
  3487  00040A  141E               	andwf	CANSetFilter@filter,w,c
  3488  00040C  0100               	movlb	0	; () banked
  3489  00040E  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3490  000410  0E00               	movlw	0
  3491  000412  141F               	andwf	CANSetFilter@filter+1,w,c
  3492  000414  0100               	movlb	0	; () banked
  3493  000416  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3494  000418  0E00               	movlw	0
  3495  00041A  1420               	andwf	CANSetFilter@filter+2,w,c
  3496  00041C  0100               	movlb	0	; () banked
  3497  00041E  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3498  000420  0E00               	movlw	0
  3499  000422  1421               	andwf	CANSetFilter@filter+3,w,c
  3500  000424  0100               	movlb	0	; () banked
  3501  000426  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;CANlib.h: 800: tamp = tamp << 5;
  3505  000428  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3506  00042C  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3507  000430  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3508  000434  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3509  000438  0E05               	movlw	5
  3510  00043A                     u5075:
  3511  00043A  90D8               	bcf	status,0,c
  3512  00043C  0100               	movlb	0	; () banked
  3513  00043E  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3514  000440  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3515  000442  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3516  000444  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3517  000446  2EE8               	decfsz	wreg,f,c
  3518  000448  D7F8               	goto	u5075
  3519  00044A  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3520  00044E  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3521  000452  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3522  000456  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  3526  00045A  C0B2  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3527  00045E                     l4148:
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;CANlib.h: 802: }
  3531                           ;CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3532  00045E  0E04               	movlw	4
  3533  000460  0100               	movlb	0	; () banked
  3534  000462  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3535  000464  A4D8               	btfss	status,2,c
  3536  000466  D053               	goto	l4166
  3537                           
  3538                           ; BSR set to: 0
  3539  000468  2822               	incf	CANSetFilter@type,w,c
  3540  00046A  A4D8               	btfss	status,2,c
  3541  00046C  D050               	goto	l4166
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;CANlib.h: 805: {
  3545                           ;CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  3546  00046E  010F               	movlb	15	; () banked
  3547  000470  9711               	bcf	17,3,b	;volatile
  3548                           
  3549                           ; BSR set to: 15
  3550                           ;CANlib.h: 808: tamp = (filter >> 3);
  3551  000472  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3552  000476  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3553  00047A  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3554  00047E  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3555  000482  0E04               	movlw	4
  3556  000484  D006               	goto	u5100
  3557  000486                     u5105:
  3558  000486  0100               	movlb	0	; () banked
  3559  000488  90D8               	bcf	status,0,c
  3560  00048A  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3561  00048C  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3562  00048E  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3563  000490  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3564  000492                     u5100:
  3565  000492  2EE8               	decfsz	wreg,f,c
  3566  000494  D7F8               	goto	u5105
  3567  000496  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3568  00049A  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3569  00049E  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3570  0004A2  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;CANlib.h: 809: tamp = tamp & 0x000000FF;
  3574  0004A6  0100               	movlb	0	; () banked
  3575  0004A8  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3576  0004AA  0100               	movlb	0	; () banked
  3577  0004AC  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3578  0004AE  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3579  0004B0  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3580  0004B2  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  3584  0004B4  C0B2  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;CANlib.h: 812: tamp = filter & 0x00000007;
  3588  0004B8  0E07               	movlw	7
  3589  0004BA  141E               	andwf	CANSetFilter@filter,w,c
  3590  0004BC  0100               	movlb	0	; () banked
  3591  0004BE  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3592  0004C0  0E00               	movlw	0
  3593  0004C2  141F               	andwf	CANSetFilter@filter+1,w,c
  3594  0004C4  0100               	movlb	0	; () banked
  3595  0004C6  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3596  0004C8  0E00               	movlw	0
  3597  0004CA  1420               	andwf	CANSetFilter@filter+2,w,c
  3598  0004CC  0100               	movlb	0	; () banked
  3599  0004CE  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3600  0004D0  0E00               	movlw	0
  3601  0004D2  1421               	andwf	CANSetFilter@filter+3,w,c
  3602  0004D4  0100               	movlb	0	; () banked
  3603  0004D6  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;CANlib.h: 813: tamp = tamp << 5;
  3607  0004D8  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3608  0004DC  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3609  0004E0  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3610  0004E4  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3611  0004E8  0E05               	movlw	5
  3612  0004EA                     u5115:
  3613  0004EA  90D8               	bcf	status,0,c
  3614  0004EC  0100               	movlb	0	; () banked
  3615  0004EE  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3616  0004F0  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3617  0004F2  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3618  0004F4  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3619  0004F6  2EE8               	decfsz	wreg,f,c
  3620  0004F8  D7F8               	goto	u5115
  3621  0004FA  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3622  0004FE  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3623  000502  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3624  000506  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  3628  00050A  C0B2  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3629  00050E                     l4166:
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;CANlib.h: 815: }
  3633                           ;CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3634  00050E  0E05               	movlw	5
  3635  000510  0100               	movlb	0	; () banked
  3636  000512  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3637  000514  A4D8               	btfss	status,2,c
  3638  000516  D053               	goto	l4184
  3639                           
  3640                           ; BSR set to: 0
  3641  000518  2822               	incf	CANSetFilter@type,w,c
  3642  00051A  A4D8               	btfss	status,2,c
  3643  00051C  D050               	goto	l4184
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;CANlib.h: 818: {
  3647                           ;CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  3648  00051E  010F               	movlb	15	; () banked
  3649  000520  9715               	bcf	21,3,b	;volatile
  3650                           
  3651                           ; BSR set to: 15
  3652                           ;CANlib.h: 821: tamp = (filter >> 3);
  3653  000522  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3654  000526  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3655  00052A  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3656  00052E  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3657  000532  0E04               	movlw	4
  3658  000534  D006               	goto	u5140
  3659  000536                     u5145:
  3660  000536  0100               	movlb	0	; () banked
  3661  000538  90D8               	bcf	status,0,c
  3662  00053A  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3663  00053C  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3664  00053E  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3665  000540  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3666  000542                     u5140:
  3667  000542  2EE8               	decfsz	wreg,f,c
  3668  000544  D7F8               	goto	u5145
  3669  000546  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3670  00054A  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3671  00054E  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3672  000552  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;CANlib.h: 822: tamp = tamp & 0x000000FF;
  3676  000556  0100               	movlb	0	; () banked
  3677  000558  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3678  00055A  0100               	movlb	0	; () banked
  3679  00055C  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3680  00055E  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3681  000560  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3682  000562  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  3686  000564  C0B2  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;CANlib.h: 825: tamp = filter & 0x00000007;
  3690  000568  0E07               	movlw	7
  3691  00056A  141E               	andwf	CANSetFilter@filter,w,c
  3692  00056C  0100               	movlb	0	; () banked
  3693  00056E  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3694  000570  0E00               	movlw	0
  3695  000572  141F               	andwf	CANSetFilter@filter+1,w,c
  3696  000574  0100               	movlb	0	; () banked
  3697  000576  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3698  000578  0E00               	movlw	0
  3699  00057A  1420               	andwf	CANSetFilter@filter+2,w,c
  3700  00057C  0100               	movlb	0	; () banked
  3701  00057E  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3702  000580  0E00               	movlw	0
  3703  000582  1421               	andwf	CANSetFilter@filter+3,w,c
  3704  000584  0100               	movlb	0	; () banked
  3705  000586  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;CANlib.h: 826: tamp = tamp << 5;
  3709  000588  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3710  00058C  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3711  000590  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3712  000594  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3713  000598  0E05               	movlw	5
  3714  00059A                     u5155:
  3715  00059A  90D8               	bcf	status,0,c
  3716  00059C  0100               	movlb	0	; () banked
  3717  00059E  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3718  0005A0  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3719  0005A2  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3720  0005A4  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3721  0005A6  2EE8               	decfsz	wreg,f,c
  3722  0005A8  D7F8               	goto	u5155
  3723  0005AA  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3724  0005AE  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3725  0005B2  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3726  0005B6  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  3730  0005BA  C0B2  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3731  0005BE                     l4184:
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;CANlib.h: 828: }
  3735                           ;CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3736  0005BE  0100               	movlb	0	; () banked
  3737  0005C0  51B1               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3738  0005C2  0100               	movlb	0	; () banked
  3739  0005C4  A4D8               	btfss	status,2,c
  3740  0005C6  D07E               	goto	l4218
  3741                           
  3742                           ; BSR set to: 0
  3743  0005C8  0EF7               	movlw	247
  3744  0005CA  1822               	xorwf	CANSetFilter@type,w,c
  3745  0005CC  A4D8               	btfss	status,2,c
  3746  0005CE  D07A               	goto	l4218
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;CANlib.h: 832: {
  3750                           ;CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  3751  0005D0  010F               	movlb	15	; () banked
  3752  0005D2  8701               	bsf	1,3,b	;volatile
  3753                           
  3754                           ; BSR set to: 15
  3755                           ;CANlib.h: 835: tamp = filter & 0x000000FF;
  3756  0005D4  501E               	movf	CANSetFilter@filter,w,c
  3757  0005D6  0100               	movlb	0	; () banked
  3758  0005D8  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3759  0005DA  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3760  0005DC  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3761  0005DE  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  3765  0005E0  C0B2  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;CANlib.h: 838: tamp = filter & 0x0000FF00;
  3769  0005E4  0E00               	movlw	0
  3770  0005E6  141E               	andwf	CANSetFilter@filter,w,c
  3771  0005E8  0100               	movlb	0	; () banked
  3772  0005EA  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3773  0005EC  0EFF               	movlw	255
  3774  0005EE  141F               	andwf	CANSetFilter@filter+1,w,c
  3775  0005F0  0100               	movlb	0	; () banked
  3776  0005F2  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3777  0005F4  0E00               	movlw	0
  3778  0005F6  1420               	andwf	CANSetFilter@filter+2,w,c
  3779  0005F8  0100               	movlb	0	; () banked
  3780  0005FA  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3781  0005FC  0E00               	movlw	0
  3782  0005FE  1421               	andwf	CANSetFilter@filter+3,w,c
  3783  000600  0100               	movlb	0	; () banked
  3784  000602  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;CANlib.h: 839: tamp = tamp >> 8;
  3788  000604  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3789  000608  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3790  00060C  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3791  000610  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3792  000614  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  3793  000618  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3794  00061C  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3795  000620  0100               	movlb	0	; () banked
  3796  000622  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  3797  000624  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3798  000628  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3799  00062C  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3800  000630  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  3804  000634  C0B2  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;CANlib.h: 842: if (filter & 0x00010000)
  3808  000638  A020               	btfss	CANSetFilter@filter+2,0,c
  3809  00063A  D003               	goto	l463
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  3813  00063C  010F               	movlb	15	; () banked
  3814  00063E  8101               	bsf	1,0,b	;volatile
  3815  000640  D002               	goto	l464
  3816  000642                     l463:
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;CANlib.h: 844: else
  3820                           ;CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  3821  000642  010F               	movlb	15	; () banked
  3822  000644  9101               	bcf	1,0,b	;volatile
  3823  000646                     l464:
  3824                           
  3825                           ; BSR set to: 15
  3826                           ;CANlib.h: 847: if (filter & 0x00020000)
  3827  000646  A220               	btfss	CANSetFilter@filter+2,1,c
  3828  000648  D003               	goto	l465
  3829                           
  3830                           ; BSR set to: 15
  3831                           ;CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  3832  00064A  010F               	movlb	15	; () banked
  3833  00064C  8301               	bsf	1,1,b	;volatile
  3834  00064E  D002               	goto	l466
  3835  000650                     l465:
  3836                           
  3837                           ; BSR set to: 15
  3838                           ;CANlib.h: 849: else
  3839                           ;CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  3840  000650  010F               	movlb	15	; () banked
  3841  000652  9301               	bcf	1,1,b	;volatile
  3842  000654                     l466:
  3843                           
  3844                           ; BSR set to: 15
  3845                           ;CANlib.h: 852: if (filter & 0x00040000)
  3846  000654  A420               	btfss	CANSetFilter@filter+2,2,c
  3847  000656  D003               	goto	l467
  3848                           
  3849                           ; BSR set to: 15
  3850                           ;CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  3851  000658  010F               	movlb	15	; () banked
  3852  00065A  8B01               	bsf	1,5,b	;volatile
  3853  00065C  D002               	goto	l468
  3854  00065E                     l467:
  3855                           
  3856                           ; BSR set to: 15
  3857                           ;CANlib.h: 854: else
  3858                           ;CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  3859  00065E  010F               	movlb	15	; () banked
  3860  000660  9B01               	bcf	1,5,b	;volatile
  3861  000662                     l468:
  3862                           
  3863                           ; BSR set to: 15
  3864                           ;CANlib.h: 857: if (filter & 0x00080000)
  3865  000662  A620               	btfss	CANSetFilter@filter+2,3,c
  3866  000664  D003               	goto	l469
  3867                           
  3868                           ; BSR set to: 15
  3869                           ;CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  3870  000666  010F               	movlb	15	; () banked
  3871  000668  8D01               	bsf	1,6,b	;volatile
  3872  00066A  D002               	goto	l470
  3873  00066C                     l469:
  3874                           
  3875                           ; BSR set to: 15
  3876                           ;CANlib.h: 859: else
  3877                           ;CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  3878  00066C  010F               	movlb	15	; () banked
  3879  00066E  9D01               	bcf	1,6,b	;volatile
  3880  000670                     l470:
  3881                           
  3882                           ; BSR set to: 15
  3883                           ;CANlib.h: 862: if (filter & 0x00100000)
  3884  000670  A820               	btfss	CANSetFilter@filter+2,4,c
  3885  000672  D003               	goto	l471
  3886                           
  3887                           ; BSR set to: 15
  3888                           ;CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  3889  000674  010F               	movlb	15	; () banked
  3890  000676  8F01               	bsf	1,7,b	;volatile
  3891  000678  D002               	goto	l4212
  3892  00067A                     l471:
  3893                           
  3894                           ; BSR set to: 15
  3895                           ;CANlib.h: 864: else
  3896                           ;CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  3897  00067A  010F               	movlb	15	; () banked
  3898  00067C  9F01               	bcf	1,7,b	;volatile
  3899  00067E                     l4212:
  3900                           
  3901                           ; BSR set to: 15
  3902                           ;CANlib.h: 867: tamp = (filter >> 21);
  3903  00067E  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3904  000682  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3905  000686  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3906  00068A  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3907  00068E  0E16               	movlw	22
  3908  000690  D006               	goto	u5230
  3909  000692                     u5235:
  3910  000692  0100               	movlb	0	; () banked
  3911  000694  90D8               	bcf	status,0,c
  3912  000696  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3913  000698  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3914  00069A  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3915  00069C  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3916  00069E                     u5230:
  3917  00069E  2EE8               	decfsz	wreg,f,c
  3918  0006A0  D7F8               	goto	u5235
  3919  0006A2  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3920  0006A6  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3921  0006AA  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3922  0006AE  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;CANlib.h: 868: tamp = tamp & 0x000000FF;
  3926  0006B2  0100               	movlb	0	; () banked
  3927  0006B4  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3928  0006B6  0100               	movlb	0	; () banked
  3929  0006B8  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3930  0006BA  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3931  0006BC  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3932  0006BE  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  3936  0006C0  C0B2  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3937  0006C4                     l4218:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;CANlib.h: 870: }
  3941                           ;CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  3942  0006C4  0100               	movlb	0	; () banked
  3943  0006C6  05B1               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3944  0006C8  A4D8               	btfss	status,2,c
  3945  0006CA  D07E               	goto	l4252
  3946                           
  3947                           ; BSR set to: 0
  3948  0006CC  0EF7               	movlw	247
  3949  0006CE  1822               	xorwf	CANSetFilter@type,w,c
  3950  0006D0  A4D8               	btfss	status,2,c
  3951  0006D2  D07A               	goto	l4252
  3952                           
  3953                           ; BSR set to: 0
  3954                           ;CANlib.h: 873: {
  3955                           ;CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  3956  0006D4  010F               	movlb	15	; () banked
  3957  0006D6  8705               	bsf	5,3,b	;volatile
  3958                           
  3959                           ; BSR set to: 15
  3960                           ;CANlib.h: 876: tamp = filter & 0x000000FF;
  3961  0006D8  501E               	movf	CANSetFilter@filter,w,c
  3962  0006DA  0100               	movlb	0	; () banked
  3963  0006DC  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3964  0006DE  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3965  0006E0  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3966  0006E2  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  3970  0006E4  C0B2  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;CANlib.h: 879: tamp = filter & 0x0000FF00;
  3974  0006E8  0E00               	movlw	0
  3975  0006EA  141E               	andwf	CANSetFilter@filter,w,c
  3976  0006EC  0100               	movlb	0	; () banked
  3977  0006EE  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3978  0006F0  0EFF               	movlw	255
  3979  0006F2  141F               	andwf	CANSetFilter@filter+1,w,c
  3980  0006F4  0100               	movlb	0	; () banked
  3981  0006F6  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3982  0006F8  0E00               	movlw	0
  3983  0006FA  1420               	andwf	CANSetFilter@filter+2,w,c
  3984  0006FC  0100               	movlb	0	; () banked
  3985  0006FE  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3986  000700  0E00               	movlw	0
  3987  000702  1421               	andwf	CANSetFilter@filter+3,w,c
  3988  000704  0100               	movlb	0	; () banked
  3989  000706  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;CANlib.h: 880: tamp = tamp >> 8;
  3993  000708  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3994  00070C  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3995  000710  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3996  000714  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3997  000718  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  3998  00071C  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3999  000720  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4000  000724  0100               	movlb	0	; () banked
  4001  000726  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  4002  000728  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4003  00072C  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4004  000730  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4005  000734  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4009  000738  C0B2  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;CANlib.h: 883: if (filter & 0x00010000)
  4013  00073C  A020               	btfss	CANSetFilter@filter+2,0,c
  4014  00073E  D003               	goto	l474
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4018  000740  010F               	movlb	15	; () banked
  4019  000742  8105               	bsf	5,0,b	;volatile
  4020  000744  D002               	goto	l475
  4021  000746                     l474:
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;CANlib.h: 885: else
  4025                           ;CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4026  000746  010F               	movlb	15	; () banked
  4027  000748  9105               	bcf	5,0,b	;volatile
  4028  00074A                     l475:
  4029                           
  4030                           ; BSR set to: 15
  4031                           ;CANlib.h: 888: if (filter & 0x00020000)
  4032  00074A  A220               	btfss	CANSetFilter@filter+2,1,c
  4033  00074C  D003               	goto	l476
  4034                           
  4035                           ; BSR set to: 15
  4036                           ;CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4037  00074E  010F               	movlb	15	; () banked
  4038  000750  8305               	bsf	5,1,b	;volatile
  4039  000752  D002               	goto	l477
  4040  000754                     l476:
  4041                           
  4042                           ; BSR set to: 15
  4043                           ;CANlib.h: 890: else
  4044                           ;CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4045  000754  010F               	movlb	15	; () banked
  4046  000756  9305               	bcf	5,1,b	;volatile
  4047  000758                     l477:
  4048                           
  4049                           ; BSR set to: 15
  4050                           ;CANlib.h: 893: if (filter & 0x00040000)
  4051  000758  A420               	btfss	CANSetFilter@filter+2,2,c
  4052  00075A  D003               	goto	l478
  4053                           
  4054                           ; BSR set to: 15
  4055                           ;CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4056  00075C  010F               	movlb	15	; () banked
  4057  00075E  8B05               	bsf	5,5,b	;volatile
  4058  000760  D002               	goto	l479
  4059  000762                     l478:
  4060                           
  4061                           ; BSR set to: 15
  4062                           ;CANlib.h: 895: else
  4063                           ;CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4064  000762  010F               	movlb	15	; () banked
  4065  000764  9B05               	bcf	5,5,b	;volatile
  4066  000766                     l479:
  4067                           
  4068                           ; BSR set to: 15
  4069                           ;CANlib.h: 898: if (filter & 0x00080000)
  4070  000766  A620               	btfss	CANSetFilter@filter+2,3,c
  4071  000768  D003               	goto	l480
  4072                           
  4073                           ; BSR set to: 15
  4074                           ;CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4075  00076A  010F               	movlb	15	; () banked
  4076  00076C  8D05               	bsf	5,6,b	;volatile
  4077  00076E  D002               	goto	l481
  4078  000770                     l480:
  4079                           
  4080                           ; BSR set to: 15
  4081                           ;CANlib.h: 900: else
  4082                           ;CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4083  000770  010F               	movlb	15	; () banked
  4084  000772  9D05               	bcf	5,6,b	;volatile
  4085  000774                     l481:
  4086                           
  4087                           ; BSR set to: 15
  4088                           ;CANlib.h: 903: if (filter & 0x00100000)
  4089  000774  A820               	btfss	CANSetFilter@filter+2,4,c
  4090  000776  D003               	goto	l482
  4091                           
  4092                           ; BSR set to: 15
  4093                           ;CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4094  000778  010F               	movlb	15	; () banked
  4095  00077A  8F05               	bsf	5,7,b	;volatile
  4096  00077C  D002               	goto	l4246
  4097  00077E                     l482:
  4098                           
  4099                           ; BSR set to: 15
  4100                           ;CANlib.h: 905: else
  4101                           ;CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4102  00077E  010F               	movlb	15	; () banked
  4103  000780  9F05               	bcf	5,7,b	;volatile
  4104  000782                     l4246:
  4105                           
  4106                           ; BSR set to: 15
  4107                           ;CANlib.h: 908: tamp = (filter >> 21);
  4108  000782  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  4109  000786  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4110  00078A  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4111  00078E  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4112  000792  0E16               	movlw	22
  4113  000794  D006               	goto	u5310
  4114  000796                     u5315:
  4115  000796  0100               	movlb	0	; () banked
  4116  000798  90D8               	bcf	status,0,c
  4117  00079A  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4118  00079C  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4119  00079E  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4120  0007A0  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  4121  0007A2                     u5310:
  4122  0007A2  2EE8               	decfsz	wreg,f,c
  4123  0007A4  D7F8               	goto	u5315
  4124  0007A6  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4125  0007AA  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4126  0007AE  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4127  0007B2  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;CANlib.h: 909: tamp = tamp & 0x000000FF;
  4131  0007B6  0100               	movlb	0	; () banked
  4132  0007B8  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  4133  0007BA  0100               	movlb	0	; () banked
  4134  0007BC  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4135  0007BE  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4136  0007C0  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4137  0007C2  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4141  0007C4  C0B2  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4142  0007C8                     l4252:
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;CANlib.h: 911: }
  4146                           ;CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4147  0007C8  0E02               	movlw	2
  4148  0007CA  0100               	movlb	0	; () banked
  4149  0007CC  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4150  0007CE  A4D8               	btfss	status,2,c
  4151  0007D0  D07E               	goto	l4286
  4152                           
  4153                           ; BSR set to: 0
  4154  0007D2  0EF7               	movlw	247
  4155  0007D4  1822               	xorwf	CANSetFilter@type,w,c
  4156  0007D6  A4D8               	btfss	status,2,c
  4157  0007D8  D07A               	goto	l4286
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;CANlib.h: 915: {
  4161                           ;CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4162  0007DA  010F               	movlb	15	; () banked
  4163  0007DC  8709               	bsf	9,3,b	;volatile
  4164                           
  4165                           ; BSR set to: 15
  4166                           ;CANlib.h: 918: tamp = filter & 0x000000FF;
  4167  0007DE  501E               	movf	CANSetFilter@filter,w,c
  4168  0007E0  0100               	movlb	0	; () banked
  4169  0007E2  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4170  0007E4  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4171  0007E6  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4172  0007E8  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4176  0007EA  C0B2  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;CANlib.h: 921: tamp = filter & 0x0000FF00;
  4180  0007EE  0E00               	movlw	0
  4181  0007F0  141E               	andwf	CANSetFilter@filter,w,c
  4182  0007F2  0100               	movlb	0	; () banked
  4183  0007F4  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4184  0007F6  0EFF               	movlw	255
  4185  0007F8  141F               	andwf	CANSetFilter@filter+1,w,c
  4186  0007FA  0100               	movlb	0	; () banked
  4187  0007FC  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4188  0007FE  0E00               	movlw	0
  4189  000800  1420               	andwf	CANSetFilter@filter+2,w,c
  4190  000802  0100               	movlb	0	; () banked
  4191  000804  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4192  000806  0E00               	movlw	0
  4193  000808  1421               	andwf	CANSetFilter@filter+3,w,c
  4194  00080A  0100               	movlb	0	; () banked
  4195  00080C  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;CANlib.h: 922: tamp = tamp >> 8;
  4199  00080E  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4200  000812  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4201  000816  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4202  00081A  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4203  00081E  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  4204  000822  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4205  000826  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4206  00082A  0100               	movlb	0	; () banked
  4207  00082C  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  4208  00082E  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4209  000832  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4210  000836  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4211  00083A  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4215  00083E  C0B2  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;CANlib.h: 925: if (filter & 0x00010000)
  4219  000842  A020               	btfss	CANSetFilter@filter+2,0,c
  4220  000844  D003               	goto	l485
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4224  000846  010F               	movlb	15	; () banked
  4225  000848  8109               	bsf	9,0,b	;volatile
  4226  00084A  D002               	goto	l486
  4227  00084C                     l485:
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;CANlib.h: 927: else
  4231                           ;CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4232  00084C  010F               	movlb	15	; () banked
  4233  00084E  9109               	bcf	9,0,b	;volatile
  4234  000850                     l486:
  4235                           
  4236                           ; BSR set to: 15
  4237                           ;CANlib.h: 930: if (filter & 0x00020000)
  4238  000850  A220               	btfss	CANSetFilter@filter+2,1,c
  4239  000852  D003               	goto	l487
  4240                           
  4241                           ; BSR set to: 15
  4242                           ;CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4243  000854  010F               	movlb	15	; () banked
  4244  000856  8309               	bsf	9,1,b	;volatile
  4245  000858  D002               	goto	l488
  4246  00085A                     l487:
  4247                           
  4248                           ; BSR set to: 15
  4249                           ;CANlib.h: 932: else
  4250                           ;CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4251  00085A  010F               	movlb	15	; () banked
  4252  00085C  9309               	bcf	9,1,b	;volatile
  4253  00085E                     l488:
  4254                           
  4255                           ; BSR set to: 15
  4256                           ;CANlib.h: 935: if (filter & 0x00040000)
  4257  00085E  A420               	btfss	CANSetFilter@filter+2,2,c
  4258  000860  D003               	goto	l489
  4259                           
  4260                           ; BSR set to: 15
  4261                           ;CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4262  000862  010F               	movlb	15	; () banked
  4263  000864  8B09               	bsf	9,5,b	;volatile
  4264  000866  D002               	goto	l490
  4265  000868                     l489:
  4266                           
  4267                           ; BSR set to: 15
  4268                           ;CANlib.h: 937: else
  4269                           ;CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4270  000868  010F               	movlb	15	; () banked
  4271  00086A  9B09               	bcf	9,5,b	;volatile
  4272  00086C                     l490:
  4273                           
  4274                           ; BSR set to: 15
  4275                           ;CANlib.h: 940: if (filter & 0x00080000)
  4276  00086C  A620               	btfss	CANSetFilter@filter+2,3,c
  4277  00086E  D003               	goto	l491
  4278                           
  4279                           ; BSR set to: 15
  4280                           ;CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4281  000870  010F               	movlb	15	; () banked
  4282  000872  8D09               	bsf	9,6,b	;volatile
  4283  000874  D002               	goto	l492
  4284  000876                     l491:
  4285                           
  4286                           ; BSR set to: 15
  4287                           ;CANlib.h: 942: else
  4288                           ;CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4289  000876  010F               	movlb	15	; () banked
  4290  000878  9D09               	bcf	9,6,b	;volatile
  4291  00087A                     l492:
  4292                           
  4293                           ; BSR set to: 15
  4294                           ;CANlib.h: 945: if (filter & 0x00100000)
  4295  00087A  A820               	btfss	CANSetFilter@filter+2,4,c
  4296  00087C  D003               	goto	l493
  4297                           
  4298                           ; BSR set to: 15
  4299                           ;CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4300  00087E  010F               	movlb	15	; () banked
  4301  000880  8F09               	bsf	9,7,b	;volatile
  4302  000882  D002               	goto	l4280
  4303  000884                     l493:
  4304                           
  4305                           ; BSR set to: 15
  4306                           ;CANlib.h: 947: else
  4307                           ;CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4308  000884  010F               	movlb	15	; () banked
  4309  000886  9F09               	bcf	9,7,b	;volatile
  4310  000888                     l4280:
  4311                           
  4312                           ; BSR set to: 15
  4313                           ;CANlib.h: 950: tamp = (filter >> 21);
  4314  000888  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  4315  00088C  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4316  000890  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4317  000894  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4318  000898  0E16               	movlw	22
  4319  00089A  D006               	goto	u5390
  4320  00089C                     u5395:
  4321  00089C  0100               	movlb	0	; () banked
  4322  00089E  90D8               	bcf	status,0,c
  4323  0008A0  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4324  0008A2  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4325  0008A4  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4326  0008A6  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  4327  0008A8                     u5390:
  4328  0008A8  2EE8               	decfsz	wreg,f,c
  4329  0008AA  D7F8               	goto	u5395
  4330  0008AC  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4331  0008B0  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4332  0008B4  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4333  0008B8  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;CANlib.h: 951: tamp = tamp & 0x000000FF;
  4337  0008BC  0100               	movlb	0	; () banked
  4338  0008BE  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  4339  0008C0  0100               	movlb	0	; () banked
  4340  0008C2  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4341  0008C4  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4342  0008C6  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4343  0008C8  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4347  0008CA  C0B2  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4348  0008CE                     l4286:
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;CANlib.h: 953: }
  4352                           ;CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4353  0008CE  0E03               	movlw	3
  4354  0008D0  0100               	movlb	0	; () banked
  4355  0008D2  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4356  0008D4  A4D8               	btfss	status,2,c
  4357  0008D6  D07E               	goto	l4320
  4358                           
  4359                           ; BSR set to: 0
  4360  0008D8  0EF7               	movlw	247
  4361  0008DA  1822               	xorwf	CANSetFilter@type,w,c
  4362  0008DC  A4D8               	btfss	status,2,c
  4363  0008DE  D07A               	goto	l4320
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;CANlib.h: 956: {
  4367                           ;CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  4368  0008E0  010F               	movlb	15	; () banked
  4369  0008E2  870D               	bsf	13,3,b	;volatile
  4370                           
  4371                           ; BSR set to: 15
  4372                           ;CANlib.h: 959: tamp = filter & 0x000000FF;
  4373  0008E4  501E               	movf	CANSetFilter@filter,w,c
  4374  0008E6  0100               	movlb	0	; () banked
  4375  0008E8  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4376  0008EA  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4377  0008EC  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4378  0008EE  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  4382  0008F0  C0B2  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;CANlib.h: 962: tamp = filter & 0x0000FF00;
  4386  0008F4  0E00               	movlw	0
  4387  0008F6  141E               	andwf	CANSetFilter@filter,w,c
  4388  0008F8  0100               	movlb	0	; () banked
  4389  0008FA  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4390  0008FC  0EFF               	movlw	255
  4391  0008FE  141F               	andwf	CANSetFilter@filter+1,w,c
  4392  000900  0100               	movlb	0	; () banked
  4393  000902  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4394  000904  0E00               	movlw	0
  4395  000906  1420               	andwf	CANSetFilter@filter+2,w,c
  4396  000908  0100               	movlb	0	; () banked
  4397  00090A  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4398  00090C  0E00               	movlw	0
  4399  00090E  1421               	andwf	CANSetFilter@filter+3,w,c
  4400  000910  0100               	movlb	0	; () banked
  4401  000912  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;CANlib.h: 963: tamp = tamp >> 8;
  4405  000914  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4406  000918  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4407  00091C  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4408  000920  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4409  000924  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  4410  000928  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4411  00092C  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4412  000930  0100               	movlb	0	; () banked
  4413  000932  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  4414  000934  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4415  000938  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4416  00093C  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4417  000940  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  4421  000944  C0B2  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;CANlib.h: 966: if (filter & 0x00010000)
  4425  000948  A020               	btfss	CANSetFilter@filter+2,0,c
  4426  00094A  D003               	goto	l496
  4427                           
  4428                           ; BSR set to: 0
  4429                           ;CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  4430  00094C  010F               	movlb	15	; () banked
  4431  00094E  810D               	bsf	13,0,b	;volatile
  4432  000950  D002               	goto	l497
  4433  000952                     l496:
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;CANlib.h: 968: else
  4437                           ;CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  4438  000952  010F               	movlb	15	; () banked
  4439  000954  910D               	bcf	13,0,b	;volatile
  4440  000956                     l497:
  4441                           
  4442                           ; BSR set to: 15
  4443                           ;CANlib.h: 971: if (filter & 0x00020000)
  4444  000956  A220               	btfss	CANSetFilter@filter+2,1,c
  4445  000958  D003               	goto	l498
  4446                           
  4447                           ; BSR set to: 15
  4448                           ;CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  4449  00095A  010F               	movlb	15	; () banked
  4450  00095C  830D               	bsf	13,1,b	;volatile
  4451  00095E  D002               	goto	l499
  4452  000960                     l498:
  4453                           
  4454                           ; BSR set to: 15
  4455                           ;CANlib.h: 973: else
  4456                           ;CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  4457  000960  010F               	movlb	15	; () banked
  4458  000962  930D               	bcf	13,1,b	;volatile
  4459  000964                     l499:
  4460                           
  4461                           ; BSR set to: 15
  4462                           ;CANlib.h: 976: if (filter & 0x00040000)
  4463  000964  A420               	btfss	CANSetFilter@filter+2,2,c
  4464  000966  D003               	goto	l500
  4465                           
  4466                           ; BSR set to: 15
  4467                           ;CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  4468  000968  010F               	movlb	15	; () banked
  4469  00096A  8B0D               	bsf	13,5,b	;volatile
  4470  00096C  D002               	goto	l501
  4471  00096E                     l500:
  4472                           
  4473                           ; BSR set to: 15
  4474                           ;CANlib.h: 978: else
  4475                           ;CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  4476  00096E  010F               	movlb	15	; () banked
  4477  000970  9B0D               	bcf	13,5,b	;volatile
  4478  000972                     l501:
  4479                           
  4480                           ; BSR set to: 15
  4481                           ;CANlib.h: 981: if (filter & 0x00080000)
  4482  000972  A620               	btfss	CANSetFilter@filter+2,3,c
  4483  000974  D003               	goto	l502
  4484                           
  4485                           ; BSR set to: 15
  4486                           ;CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  4487  000976  010F               	movlb	15	; () banked
  4488  000978  8D0D               	bsf	13,6,b	;volatile
  4489  00097A  D002               	goto	l503
  4490  00097C                     l502:
  4491                           
  4492                           ; BSR set to: 15
  4493                           ;CANlib.h: 983: else
  4494                           ;CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  4495  00097C  010F               	movlb	15	; () banked
  4496  00097E  9D0D               	bcf	13,6,b	;volatile
  4497  000980                     l503:
  4498                           
  4499                           ; BSR set to: 15
  4500                           ;CANlib.h: 986: if (filter & 0x00100000)
  4501  000980  A820               	btfss	CANSetFilter@filter+2,4,c
  4502  000982  D003               	goto	l504
  4503                           
  4504                           ; BSR set to: 15
  4505                           ;CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  4506  000984  010F               	movlb	15	; () banked
  4507  000986  8F0D               	bsf	13,7,b	;volatile
  4508  000988  D002               	goto	l4314
  4509  00098A                     l504:
  4510                           
  4511                           ; BSR set to: 15
  4512                           ;CANlib.h: 988: else
  4513                           ;CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  4514  00098A  010F               	movlb	15	; () banked
  4515  00098C  9F0D               	bcf	13,7,b	;volatile
  4516  00098E                     l4314:
  4517                           
  4518                           ; BSR set to: 15
  4519                           ;CANlib.h: 991: tamp = (filter >> 21);
  4520  00098E  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  4521  000992  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4522  000996  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4523  00099A  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4524  00099E  0E16               	movlw	22
  4525  0009A0  D006               	goto	u5470
  4526  0009A2                     u5475:
  4527  0009A2  0100               	movlb	0	; () banked
  4528  0009A4  90D8               	bcf	status,0,c
  4529  0009A6  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4530  0009A8  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4531  0009AA  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4532  0009AC  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  4533  0009AE                     u5470:
  4534  0009AE  2EE8               	decfsz	wreg,f,c
  4535  0009B0  D7F8               	goto	u5475
  4536  0009B2  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4537  0009B6  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4538  0009BA  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4539  0009BE  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;CANlib.h: 992: tamp = tamp & 0x000000FF;
  4543  0009C2  0100               	movlb	0	; () banked
  4544  0009C4  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  4545  0009C6  0100               	movlb	0	; () banked
  4546  0009C8  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4547  0009CA  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4548  0009CC  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4549  0009CE  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  4553  0009D0  C0B2  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4554  0009D4                     l4320:
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;CANlib.h: 994: }
  4558                           ;CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4559  0009D4  0E04               	movlw	4
  4560  0009D6  0100               	movlb	0	; () banked
  4561  0009D8  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4562  0009DA  A4D8               	btfss	status,2,c
  4563  0009DC  D07E               	goto	l4354
  4564                           
  4565                           ; BSR set to: 0
  4566  0009DE  0EF7               	movlw	247
  4567  0009E0  1822               	xorwf	CANSetFilter@type,w,c
  4568  0009E2  A4D8               	btfss	status,2,c
  4569  0009E4  D07A               	goto	l4354
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;CANlib.h: 997: {
  4573                           ;CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  4574  0009E6  010F               	movlb	15	; () banked
  4575  0009E8  8711               	bsf	17,3,b	;volatile
  4576                           
  4577                           ; BSR set to: 15
  4578                           ;CANlib.h: 1000: tamp = filter & 0x000000FF;
  4579  0009EA  501E               	movf	CANSetFilter@filter,w,c
  4580  0009EC  0100               	movlb	0	; () banked
  4581  0009EE  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4582  0009F0  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4583  0009F2  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4584  0009F4  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  4588  0009F6  C0B2  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;CANlib.h: 1003: tamp = filter & 0x0000FF00;
  4592  0009FA  0E00               	movlw	0
  4593  0009FC  141E               	andwf	CANSetFilter@filter,w,c
  4594  0009FE  0100               	movlb	0	; () banked
  4595  000A00  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4596  000A02  0EFF               	movlw	255
  4597  000A04  141F               	andwf	CANSetFilter@filter+1,w,c
  4598  000A06  0100               	movlb	0	; () banked
  4599  000A08  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4600  000A0A  0E00               	movlw	0
  4601  000A0C  1420               	andwf	CANSetFilter@filter+2,w,c
  4602  000A0E  0100               	movlb	0	; () banked
  4603  000A10  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4604  000A12  0E00               	movlw	0
  4605  000A14  1421               	andwf	CANSetFilter@filter+3,w,c
  4606  000A16  0100               	movlb	0	; () banked
  4607  000A18  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;CANlib.h: 1004: tamp = tamp >> 8;
  4611  000A1A  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4612  000A1E  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4613  000A22  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4614  000A26  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4615  000A2A  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  4616  000A2E  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4617  000A32  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4618  000A36  0100               	movlb	0	; () banked
  4619  000A38  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  4620  000A3A  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4621  000A3E  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4622  000A42  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4623  000A46  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  4627  000A4A  C0B2  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;CANlib.h: 1007: if (filter & 0x00010000)
  4631  000A4E  A020               	btfss	CANSetFilter@filter+2,0,c
  4632  000A50  D003               	goto	l507
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  4636  000A52  010F               	movlb	15	; () banked
  4637  000A54  8111               	bsf	17,0,b	;volatile
  4638  000A56  D002               	goto	l508
  4639  000A58                     l507:
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;CANlib.h: 1009: else
  4643                           ;CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  4644  000A58  010F               	movlb	15	; () banked
  4645  000A5A  9111               	bcf	17,0,b	;volatile
  4646  000A5C                     l508:
  4647                           
  4648                           ; BSR set to: 15
  4649                           ;CANlib.h: 1012: if (filter & 0x00020000)
  4650  000A5C  A220               	btfss	CANSetFilter@filter+2,1,c
  4651  000A5E  D003               	goto	l509
  4652                           
  4653                           ; BSR set to: 15
  4654                           ;CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  4655  000A60  010F               	movlb	15	; () banked
  4656  000A62  8311               	bsf	17,1,b	;volatile
  4657  000A64  D002               	goto	l510
  4658  000A66                     l509:
  4659                           
  4660                           ; BSR set to: 15
  4661                           ;CANlib.h: 1014: else
  4662                           ;CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  4663  000A66  010F               	movlb	15	; () banked
  4664  000A68  9311               	bcf	17,1,b	;volatile
  4665  000A6A                     l510:
  4666                           
  4667                           ; BSR set to: 15
  4668                           ;CANlib.h: 1017: if (filter & 0x00040000)
  4669  000A6A  A420               	btfss	CANSetFilter@filter+2,2,c
  4670  000A6C  D003               	goto	l511
  4671                           
  4672                           ; BSR set to: 15
  4673                           ;CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  4674  000A6E  010F               	movlb	15	; () banked
  4675  000A70  8B11               	bsf	17,5,b	;volatile
  4676  000A72  D002               	goto	l512
  4677  000A74                     l511:
  4678                           
  4679                           ; BSR set to: 15
  4680                           ;CANlib.h: 1019: else
  4681                           ;CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  4682  000A74  010F               	movlb	15	; () banked
  4683  000A76  9B11               	bcf	17,5,b	;volatile
  4684  000A78                     l512:
  4685                           
  4686                           ; BSR set to: 15
  4687                           ;CANlib.h: 1022: if (filter & 0x00080000)
  4688  000A78  A620               	btfss	CANSetFilter@filter+2,3,c
  4689  000A7A  D003               	goto	l513
  4690                           
  4691                           ; BSR set to: 15
  4692                           ;CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  4693  000A7C  010F               	movlb	15	; () banked
  4694  000A7E  8D11               	bsf	17,6,b	;volatile
  4695  000A80  D002               	goto	l514
  4696  000A82                     l513:
  4697                           
  4698                           ; BSR set to: 15
  4699                           ;CANlib.h: 1024: else
  4700                           ;CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  4701  000A82  010F               	movlb	15	; () banked
  4702  000A84  9D11               	bcf	17,6,b	;volatile
  4703  000A86                     l514:
  4704                           
  4705                           ; BSR set to: 15
  4706                           ;CANlib.h: 1027: if (filter & 0x00100000)
  4707  000A86  A820               	btfss	CANSetFilter@filter+2,4,c
  4708  000A88  D003               	goto	l515
  4709                           
  4710                           ; BSR set to: 15
  4711                           ;CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  4712  000A8A  010F               	movlb	15	; () banked
  4713  000A8C  8F11               	bsf	17,7,b	;volatile
  4714  000A8E  D002               	goto	l4348
  4715  000A90                     l515:
  4716                           
  4717                           ; BSR set to: 15
  4718                           ;CANlib.h: 1029: else
  4719                           ;CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  4720  000A90  010F               	movlb	15	; () banked
  4721  000A92  9F11               	bcf	17,7,b	;volatile
  4722  000A94                     l4348:
  4723                           
  4724                           ; BSR set to: 15
  4725                           ;CANlib.h: 1032: tamp = (filter >> 21);
  4726  000A94  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  4727  000A98  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4728  000A9C  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4729  000AA0  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4730  000AA4  0E16               	movlw	22
  4731  000AA6  D006               	goto	u5550
  4732  000AA8                     u5555:
  4733  000AA8  0100               	movlb	0	; () banked
  4734  000AAA  90D8               	bcf	status,0,c
  4735  000AAC  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4736  000AAE  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4737  000AB0  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4738  000AB2  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  4739  000AB4                     u5550:
  4740  000AB4  2EE8               	decfsz	wreg,f,c
  4741  000AB6  D7F8               	goto	u5555
  4742  000AB8  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4743  000ABC  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4744  000AC0  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4745  000AC4  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;CANlib.h: 1033: tamp = tamp & 0x000000FF;
  4749  000AC8  0100               	movlb	0	; () banked
  4750  000ACA  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  4751  000ACC  0100               	movlb	0	; () banked
  4752  000ACE  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4753  000AD0  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4754  000AD2  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4755  000AD4  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  4759  000AD6  C0B2  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4760  000ADA                     l4354:
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;CANlib.h: 1035: }
  4764                           ;CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4765  000ADA  0E05               	movlw	5
  4766  000ADC  0100               	movlb	0	; () banked
  4767  000ADE  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4768  000AE0  A4D8               	btfss	status,2,c
  4769  000AE2  0012               	return	
  4770                           
  4771                           ; BSR set to: 0
  4772  000AE4  0EF7               	movlw	247
  4773  000AE6  1822               	xorwf	CANSetFilter@type,w,c
  4774  000AE8  A4D8               	btfss	status,2,c
  4775  000AEA  0012               	return	
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;CANlib.h: 1038: {
  4779                           ;CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  4780  000AEC  010F               	movlb	15	; () banked
  4781  000AEE  8715               	bsf	21,3,b	;volatile
  4782                           
  4783                           ; BSR set to: 15
  4784                           ;CANlib.h: 1041: tamp = filter & 0x000000FF;
  4785  000AF0  501E               	movf	CANSetFilter@filter,w,c
  4786  000AF2  0100               	movlb	0	; () banked
  4787  000AF4  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4788  000AF6  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4789  000AF8  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4790  000AFA  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  4794  000AFC  C0B2  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;CANlib.h: 1044: tamp = filter & 0x0000FF00;
  4798  000B00  0E00               	movlw	0
  4799  000B02  141E               	andwf	CANSetFilter@filter,w,c
  4800  000B04  0100               	movlb	0	; () banked
  4801  000B06  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4802  000B08  0EFF               	movlw	255
  4803  000B0A  141F               	andwf	CANSetFilter@filter+1,w,c
  4804  000B0C  0100               	movlb	0	; () banked
  4805  000B0E  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4806  000B10  0E00               	movlw	0
  4807  000B12  1420               	andwf	CANSetFilter@filter+2,w,c
  4808  000B14  0100               	movlb	0	; () banked
  4809  000B16  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4810  000B18  0E00               	movlw	0
  4811  000B1A  1421               	andwf	CANSetFilter@filter+3,w,c
  4812  000B1C  0100               	movlb	0	; () banked
  4813  000B1E  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;CANlib.h: 1045: tamp = tamp >> 8;
  4817  000B20  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4818  000B24  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4819  000B28  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4820  000B2C  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4821  000B30  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  4822  000B34  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4823  000B38  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4824  000B3C  0100               	movlb	0	; () banked
  4825  000B3E  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  4826  000B40  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4827  000B44  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4828  000B48  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4829  000B4C  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  4833  000B50  C0B2  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;CANlib.h: 1048: if (filter & 0x00010000)
  4837  000B54  A020               	btfss	CANSetFilter@filter+2,0,c
  4838  000B56  D003               	goto	l518
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  4842  000B58  010F               	movlb	15	; () banked
  4843  000B5A  8115               	bsf	21,0,b	;volatile
  4844  000B5C  D002               	goto	l519
  4845  000B5E                     l518:
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;CANlib.h: 1050: else
  4849                           ;CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  4850  000B5E  010F               	movlb	15	; () banked
  4851  000B60  9115               	bcf	21,0,b	;volatile
  4852  000B62                     l519:
  4853                           
  4854                           ; BSR set to: 15
  4855                           ;CANlib.h: 1053: if (filter & 0x00020000)
  4856  000B62  A220               	btfss	CANSetFilter@filter+2,1,c
  4857  000B64  D003               	goto	l520
  4858                           
  4859                           ; BSR set to: 15
  4860                           ;CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  4861  000B66  010F               	movlb	15	; () banked
  4862  000B68  8315               	bsf	21,1,b	;volatile
  4863  000B6A  D002               	goto	l521
  4864  000B6C                     l520:
  4865                           
  4866                           ; BSR set to: 15
  4867                           ;CANlib.h: 1055: else
  4868                           ;CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  4869  000B6C  010F               	movlb	15	; () banked
  4870  000B6E  9315               	bcf	21,1,b	;volatile
  4871  000B70                     l521:
  4872                           
  4873                           ; BSR set to: 15
  4874                           ;CANlib.h: 1058: if (filter & 0x00040000)
  4875  000B70  A420               	btfss	CANSetFilter@filter+2,2,c
  4876  000B72  D003               	goto	l522
  4877                           
  4878                           ; BSR set to: 15
  4879                           ;CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  4880  000B74  010F               	movlb	15	; () banked
  4881  000B76  8B15               	bsf	21,5,b	;volatile
  4882  000B78  D002               	goto	l523
  4883  000B7A                     l522:
  4884                           
  4885                           ; BSR set to: 15
  4886                           ;CANlib.h: 1060: else
  4887                           ;CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  4888  000B7A  010F               	movlb	15	; () banked
  4889  000B7C  9B15               	bcf	21,5,b	;volatile
  4890  000B7E                     l523:
  4891                           
  4892                           ; BSR set to: 15
  4893                           ;CANlib.h: 1063: if (filter & 0x00080000)
  4894  000B7E  A620               	btfss	CANSetFilter@filter+2,3,c
  4895  000B80  D003               	goto	l524
  4896                           
  4897                           ; BSR set to: 15
  4898                           ;CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  4899  000B82  010F               	movlb	15	; () banked
  4900  000B84  8D15               	bsf	21,6,b	;volatile
  4901  000B86  D002               	goto	l525
  4902  000B88                     l524:
  4903                           
  4904                           ; BSR set to: 15
  4905                           ;CANlib.h: 1065: else
  4906                           ;CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  4907  000B88  010F               	movlb	15	; () banked
  4908  000B8A  9D15               	bcf	21,6,b	;volatile
  4909  000B8C                     l525:
  4910                           
  4911                           ; BSR set to: 15
  4912                           ;CANlib.h: 1068: if (filter & 0x00100000)
  4913  000B8C  A820               	btfss	CANSetFilter@filter+2,4,c
  4914  000B8E  D003               	goto	l526
  4915                           
  4916                           ; BSR set to: 15
  4917                           ;CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  4918  000B90  010F               	movlb	15	; () banked
  4919  000B92  8F15               	bsf	21,7,b	;volatile
  4920  000B94  D002               	goto	l4382
  4921  000B96                     l526:
  4922                           
  4923                           ; BSR set to: 15
  4924                           ;CANlib.h: 1070: else
  4925                           ;CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  4926  000B96  010F               	movlb	15	; () banked
  4927  000B98  9F15               	bcf	21,7,b	;volatile
  4928  000B9A                     l4382:
  4929                           
  4930                           ; BSR set to: 15
  4931                           ;CANlib.h: 1073: tamp = (filter >> 21);
  4932  000B9A  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  4933  000B9E  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4934  000BA2  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4935  000BA6  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4936  000BAA  0E16               	movlw	22
  4937  000BAC  D006               	goto	u5630
  4938  000BAE                     u5635:
  4939  000BAE  0100               	movlb	0	; () banked
  4940  000BB0  90D8               	bcf	status,0,c
  4941  000BB2  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4942  000BB4  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4943  000BB6  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4944  000BB8  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  4945  000BBA                     u5630:
  4946  000BBA  2EE8               	decfsz	wreg,f,c
  4947  000BBC  D7F8               	goto	u5635
  4948  000BBE  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4949  000BC2  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4950  000BC6  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4951  000BCA  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;CANlib.h: 1074: tamp = tamp & 0x000000FF;
  4955  000BCE  0100               	movlb	0	; () banked
  4956  000BD0  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  4957  000BD2  0100               	movlb	0	; () banked
  4958  000BD4  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4959  000BD6  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4960  000BD8  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4961  000BDA  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  4965  000BDC  C0B2  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4966  000BE0  0012               	return	
  4967  000BE2                     __end_of_CANSetFilter:
  4968                           	opt stack 0
  4969                           tblptru	equ	0xFF8
  4970                           tblptrh	equ	0xFF7
  4971                           tblptrl	equ	0xFF6
  4972                           tablat	equ	0xFF5
  4973                           prodh	equ	0xFF4
  4974                           prodl	equ	0xFF3
  4975                           intcon	equ	0xFF2
  4976                           postinc0	equ	0xFEE
  4977                           wreg	equ	0xFE8
  4978                           indf1	equ	0xFE7
  4979                           postdec1	equ	0xFE5
  4980                           fsr1h	equ	0xFE2
  4981                           fsr1l	equ	0xFE1
  4982                           indf2	equ	0xFDF
  4983                           fsr2h	equ	0xFDA
  4984                           fsr2l	equ	0xFD9
  4985                           status	equ	0xFD8
  4986                           
  4987 ;; *************** function _CANOperationMode *****************
  4988 ;; Defined at:
  4989 ;;		line 206 in file "CANlib.h"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  mode            1    wreg     enum E16838
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;  mode            1   29[COMRAM] enum E16838
  4994 ;; Return value:  Size  Location     Type
  4995 ;;		None               void
  4996 ;; Registers used:
  4997 ;;		wreg, status,2, status,0
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5003 ;;      Params:         0       0       0       0
  5004 ;;      Locals:         1       0       0       0
  5005 ;;      Temps:          0       0       0       0
  5006 ;;      Totals:         1       0       0       0
  5007 ;;Total ram usage:        1 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:    2
  5010 ;; This function calls:
  5011 ;;		Nothing
  5012 ;; This function is called by:
  5013 ;;		_CANInitialize
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           	psect	text8
  5018  002648                     __ptext8:
  5019                           	opt stack 0
  5020  002648                     _CANOperationMode:
  5021                           	opt stack 26
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;incstack = 0
  5025                           ;CANOperationMode@mode stored from wreg
  5026  002648  6E1E               	movwf	CANOperationMode@mode,c
  5027                           
  5028                           ;CANlib.h: 208: CANCON = mode;
  5029  00264A  C01E  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5030  00264E                     l3978:
  5031  00264E  506E               	movf	3950,w,c	;volatile
  5032  002650  0BE0               	andlw	224
  5033  002652  181E               	xorwf	CANOperationMode@mode,w,c
  5034  002654  B4D8               	btfsc	status,2,c
  5035  002656  0012               	return	
  5036  002658  D7FA               	goto	l3978
  5037  00265A                     __end_of_CANOperationMode:
  5038                           	opt stack 0
  5039                           tblptru	equ	0xFF8
  5040                           tblptrh	equ	0xFF7
  5041                           tblptrl	equ	0xFF6
  5042                           tablat	equ	0xFF5
  5043                           prodh	equ	0xFF4
  5044                           prodl	equ	0xFF3
  5045                           intcon	equ	0xFF2
  5046                           postinc0	equ	0xFEE
  5047                           wreg	equ	0xFE8
  5048                           indf1	equ	0xFE7
  5049                           postdec1	equ	0xFE5
  5050                           fsr1h	equ	0xFE2
  5051                           fsr1l	equ	0xFE1
  5052                           indf2	equ	0xFDF
  5053                           fsr2h	equ	0xFDA
  5054                           fsr2l	equ	0xFD9
  5055                           status	equ	0xFD8
  5056                           
  5057 ;; *************** function _battery_measure *****************
  5058 ;; Defined at:
  5059 ;;		line 271 in file "motore.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;		None
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;		None               void
  5066 ;; Registers used:
  5067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5073 ;;      Params:         0       0       0       0
  5074 ;;      Locals:         0       0       0       0
  5075 ;;      Temps:          0       0       0       0
  5076 ;;      Totals:         0       0       0       0
  5077 ;;Total ram usage:        0 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    3
  5080 ;; This function calls:
  5081 ;;		_CANisTxReady
  5082 ;;		_CANsendMessage
  5083 ;;		___awdiv
  5084 ;;		___wmul
  5085 ;; This function is called by:
  5086 ;;		_main
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text9
  5091  0023CE                     __ptext9:
  5092                           	opt stack 0
  5093  0023CE                     _battery_measure:
  5094                           	opt stack 27
  5095                           
  5096                           ;motore.c: 272: ADCON0bits.GO = 1;
  5097                           
  5098                           ;incstack = 0
  5099  0023CE  82C2               	bsf	4034,1,c	;volatile
  5100  0023D0                     l710:
  5101  0023D0  B2C2               	btfsc	4034,1,c	;volatile
  5102  0023D2  D7FE               	goto	l710
  5103                           
  5104                           ;motore.c: 274: vBatt = ADRESH;
  5105  0023D4  CFC4 F033          	movff	4036,_vBatt	;volatile
  5106  0023D8  6A34               	clrf	_vBatt+1,c
  5107                           
  5108                           ;motore.c: 275: vBatt = (vBatt * 14) / 255;
  5109  0023DA  C033  F0B1         	movff	_vBatt,___wmul@multiplier
  5110  0023DE  C034  F0B2         	movff	_vBatt+1,___wmul@multiplier+1
  5111  0023E2  0E00               	movlw	0
  5112  0023E4  0100               	movlb	0	; () banked
  5113  0023E6  6FB4               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5114  0023E8  0E0E               	movlw	14
  5115  0023EA  6FB3               	movwf	___wmul@multiplicand& (0+255),b
  5116  0023EC  ECCD  F012         	call	___wmul	;wreg free
  5117  0023F0  C0B1  F01E         	movff	?___wmul,___awdiv@dividend
  5118  0023F4  C0B2  F01F         	movff	?___wmul+1,___awdiv@dividend+1
  5119  0023F8  0E00               	movlw	0
  5120  0023FA  6E21               	movwf	___awdiv@divisor+1,c
  5121  0023FC  6820               	setf	___awdiv@divisor,c
  5122  0023FE  EC99  F011         	call	___awdiv	;wreg free
  5123  002402  C01E  F033         	movff	?___awdiv,_vBatt
  5124  002406  C01F  F034         	movff	?___awdiv+1,_vBatt+1
  5125                           
  5126                           ;motore.c: 276: if (vBatt < 8) {
  5127  00240A  BE34               	btfsc	_vBatt+1,7,c
  5128  00240C  D006               	goto	l4866
  5129  00240E  5034               	movf	_vBatt+1,w,c
  5130  002410  E122               	bnz	l713
  5131  002412  0E08               	movlw	8
  5132  002414  5C33               	subwf	_vBatt,w,c
  5133  002416  B0D8               	btfsc	status,0,c
  5134  002418  D01E               	goto	l713
  5135  00241A                     l4866:
  5136  00241A  ECFC  F012         	call	_CANisTxReady	;wreg free
  5137  00241E  0900               	iorlw	0
  5138  002420  B4D8               	btfsc	status,2,c
  5139  002422  D7FB               	goto	l4866
  5140                           
  5141                           ;motore.c: 278: CANsendMessage(0b00000000000000000000000001001, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5142  002424  0E09               	movlw	9
  5143  002426  0100               	movlb	0	; () banked
  5144  002428  6FAD               	movwf	CANsendMessage@identifier& (0+255),b
  5145  00242A  0E00               	movlw	0
  5146  00242C  6FAE               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5147  00242E  0E00               	movlw	0
  5148  002430  6FAF               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5149  002432  0E00               	movlw	0
  5150  002434  6FB0               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5151  002436  0E95               	movlw	low _data_array
  5152  002438  0100               	movlb	0	; () banked
  5153  00243A  6FB1               	movwf	CANsendMessage@data& (0+255),b
  5154  00243C  0E00               	movlw	high _data_array
  5155  00243E  0100               	movlb	0	; () banked
  5156  002440  6FB2               	movwf	(CANsendMessage@data+1)& (0+255),b
  5157  002442  0E08               	movlw	8
  5158  002444  0100               	movlb	0	; () banked
  5159  002446  6FB3               	movwf	CANsendMessage@dataLength& (0+255),b
  5160  002448  0EFC               	movlw	252
  5161  00244A  0100               	movlb	0	; () banked
  5162  00244C  6FB4               	movwf	CANsendMessage@flags& (0+255),b
  5163  00244E  ECF1  F005         	call	_CANsendMessage	;wreg free
  5164                           
  5165                           ;motore.c: 279: PORTCbits.RC1 = 1;
  5166  002452  8282               	bsf	3970,1,c	;volatile
  5167                           
  5168                           ;motore.c: 280: } else {
  5169  002454  0012               	return	
  5170  002456                     l713:
  5171                           
  5172                           ;motore.c: 281: PORTCbits.RC1 = 0;
  5173  002456  9282               	bcf	3970,1,c	;volatile
  5174  002458  0012               	return	
  5175  00245A                     __end_of_battery_measure:
  5176                           	opt stack 0
  5177                           tblptru	equ	0xFF8
  5178                           tblptrh	equ	0xFF7
  5179                           tblptrl	equ	0xFF6
  5180                           tablat	equ	0xFF5
  5181                           prodh	equ	0xFF4
  5182                           prodl	equ	0xFF3
  5183                           intcon	equ	0xFF2
  5184                           postinc0	equ	0xFEE
  5185                           wreg	equ	0xFE8
  5186                           indf1	equ	0xFE7
  5187                           postdec1	equ	0xFE5
  5188                           fsr1h	equ	0xFE2
  5189                           fsr1l	equ	0xFE1
  5190                           indf2	equ	0xFDF
  5191                           fsr2h	equ	0xFDA
  5192                           fsr2l	equ	0xFD9
  5193                           status	equ	0xFD8
  5194                           
  5195 ;; *************** function ___wmul *****************
  5196 ;; Defined at:
  5197 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;  multiplier      2    4[BANK0 ] unsigned int 
  5200 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;  product         2   33[COMRAM] unsigned int 
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  2    4[BANK0 ] unsigned int 
  5205 ;; Registers used:
  5206 ;;		wreg, status,2, status,0, prodl, prodh
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5212 ;;      Params:         0       4       0       0
  5213 ;;      Locals:         2       0       0       0
  5214 ;;      Temps:          0       0       0       0
  5215 ;;      Totals:         2       4       0       0
  5216 ;;Total ram usage:        6 bytes
  5217 ;; Hardware stack levels used:    1
  5218 ;; Hardware stack levels required when called:    2
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		_delay_ms
  5223 ;;		_main
  5224 ;;		_battery_measure
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text10
  5229  00259A                     __ptext10:
  5230                           	opt stack 0
  5231  00259A                     ___wmul:
  5232                           	opt stack 27
  5233                           
  5234                           ;incstack = 0
  5235  00259A  0100               	movlb	0	; () banked
  5236  00259C  51B1               	movf	___wmul@multiplier& (0+255),w,b
  5237  00259E  0100               	movlb	0	; () banked
  5238  0025A0  03B3               	mulwf	___wmul@multiplicand& (0+255),b
  5239  0025A2  CFF3 F022          	movff	prodl,___wmul@product
  5240  0025A6  CFF4 F023          	movff	prodh,___wmul@product+1
  5241  0025AA  0100               	movlb	0	; () banked
  5242  0025AC  51B1               	movf	___wmul@multiplier& (0+255),w,b
  5243  0025AE  0100               	movlb	0	; () banked
  5244  0025B0  03B4               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5245  0025B2  50F3               	movf	prodl,w,c
  5246  0025B4  2623               	addwf	___wmul@product+1,f,c
  5247  0025B6  0100               	movlb	0	; () banked
  5248  0025B8  51B2               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5249  0025BA  0100               	movlb	0	; () banked
  5250  0025BC  03B3               	mulwf	___wmul@multiplicand& (0+255),b
  5251  0025BE  50F3               	movf	prodl,w,c
  5252  0025C0  2623               	addwf	___wmul@product+1,f,c
  5253                           
  5254                           ; BSR set to: 0
  5255  0025C2  C022  F0B1         	movff	___wmul@product,?___wmul
  5256  0025C6  C023  F0B2         	movff	___wmul@product+1,?___wmul+1
  5257  0025CA  0012               	return	
  5258  0025CC                     __end_of___wmul:
  5259                           	opt stack 0
  5260                           tblptru	equ	0xFF8
  5261                           tblptrh	equ	0xFF7
  5262                           tblptrl	equ	0xFF6
  5263                           tablat	equ	0xFF5
  5264                           prodh	equ	0xFF4
  5265                           prodl	equ	0xFF3
  5266                           intcon	equ	0xFF2
  5267                           postinc0	equ	0xFEE
  5268                           wreg	equ	0xFE8
  5269                           indf1	equ	0xFE7
  5270                           postdec1	equ	0xFE5
  5271                           fsr1h	equ	0xFE2
  5272                           fsr1l	equ	0xFE1
  5273                           indf2	equ	0xFDF
  5274                           fsr2h	equ	0xFDA
  5275                           fsr2l	equ	0xFD9
  5276                           status	equ	0xFD8
  5277                           
  5278 ;; *************** function ___awdiv *****************
  5279 ;; Defined at:
  5280 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;  dividend        2   29[COMRAM] int 
  5283 ;;  divisor         2   31[COMRAM] int 
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;  quotient        2    2[BANK0 ] int 
  5286 ;;  sign            1    1[BANK0 ] unsigned char 
  5287 ;;  counter         1    0[BANK0 ] unsigned char 
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  2   29[COMRAM] int 
  5290 ;; Registers used:
  5291 ;;		wreg, status,2, status,0
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5297 ;;      Params:         4       0       0       0
  5298 ;;      Locals:         0       4       0       0
  5299 ;;      Temps:          0       0       0       0
  5300 ;;      Totals:         4       4       0       0
  5301 ;;Total ram usage:        8 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; Hardware stack levels required when called:    2
  5304 ;; This function calls:
  5305 ;;		Nothing
  5306 ;; This function is called by:
  5307 ;;		_main
  5308 ;;		_battery_measure
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           	psect	text11
  5313  002332                     __ptext11:
  5314                           	opt stack 0
  5315  002332                     ___awdiv:
  5316                           	opt stack 27
  5317                           
  5318                           ; BSR set to: 0
  5319                           ;incstack = 0
  5320  002332  0E00               	movlw	0
  5321  002334  0100               	movlb	0	; () banked
  5322  002336  6FAE               	movwf	___awdiv@sign& (0+255),b
  5323                           
  5324                           ; BSR set to: 0
  5325  002338  AE21               	btfss	___awdiv@divisor+1,7,c
  5326  00233A  D007               	goto	l4690
  5327                           
  5328                           ; BSR set to: 0
  5329  00233C  6C20               	negf	___awdiv@divisor,c
  5330  00233E  1E21               	comf	___awdiv@divisor+1,f,c
  5331  002340  B0D8               	btfsc	status,0,c
  5332  002342  2A21               	incf	___awdiv@divisor+1,f,c
  5333                           
  5334                           ; BSR set to: 0
  5335  002344  0E01               	movlw	1
  5336  002346  0100               	movlb	0	; () banked
  5337  002348  6FAE               	movwf	___awdiv@sign& (0+255),b
  5338  00234A                     l4690:
  5339                           
  5340                           ; BSR set to: 0
  5341  00234A  AE1F               	btfss	___awdiv@dividend+1,7,c
  5342  00234C  D007               	goto	l4696
  5343                           
  5344                           ; BSR set to: 0
  5345  00234E  6C1E               	negf	___awdiv@dividend,c
  5346  002350  1E1F               	comf	___awdiv@dividend+1,f,c
  5347  002352  B0D8               	btfsc	status,0,c
  5348  002354  2A1F               	incf	___awdiv@dividend+1,f,c
  5349                           
  5350                           ; BSR set to: 0
  5351  002356  0E01               	movlw	1
  5352  002358  0100               	movlb	0	; () banked
  5353  00235A  1BAE               	xorwf	___awdiv@sign& (0+255),f,b
  5354  00235C                     l4696:
  5355                           
  5356                           ; BSR set to: 0
  5357  00235C  0E00               	movlw	0
  5358  00235E  0100               	movlb	0	; () banked
  5359  002360  6FB0               	movwf	(___awdiv@quotient+1)& (0+255),b
  5360  002362  0E00               	movlw	0
  5361  002364  6FAF               	movwf	___awdiv@quotient& (0+255),b
  5362                           
  5363                           ; BSR set to: 0
  5364  002366  5020               	movf	___awdiv@divisor,w,c
  5365  002368  1021               	iorwf	___awdiv@divisor+1,w,c
  5366  00236A  B4D8               	btfsc	status,2,c
  5367  00236C  D021               	goto	l4718
  5368                           
  5369                           ; BSR set to: 0
  5370  00236E  0E01               	movlw	1
  5371  002370  0100               	movlb	0	; () banked
  5372  002372  6FAD               	movwf	___awdiv@counter& (0+255),b
  5373  002374  D005               	goto	l4704
  5374  002376                     l4702:
  5375                           
  5376                           ; BSR set to: 0
  5377  002376  90D8               	bcf	status,0,c
  5378  002378  3620               	rlcf	___awdiv@divisor,f,c
  5379  00237A  3621               	rlcf	___awdiv@divisor+1,f,c
  5380  00237C  0100               	movlb	0	; () banked
  5381  00237E  2BAD               	incf	___awdiv@counter& (0+255),f,b
  5382  002380                     l4704:
  5383                           
  5384                           ; BSR set to: 0
  5385  002380  AE21               	btfss	___awdiv@divisor+1,7,c
  5386  002382  D7F9               	goto	l4702
  5387  002384                     l4706:
  5388                           
  5389                           ; BSR set to: 0
  5390  002384  0100               	movlb	0	; () banked
  5391  002386  90D8               	bcf	status,0,c
  5392  002388  37AF               	rlcf	___awdiv@quotient& (0+255),f,b
  5393  00238A  37B0               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5394                           
  5395                           ; BSR set to: 0
  5396  00238C  5020               	movf	___awdiv@divisor,w,c
  5397  00238E  5C1E               	subwf	___awdiv@dividend,w,c
  5398  002390  5021               	movf	___awdiv@divisor+1,w,c
  5399  002392  581F               	subwfb	___awdiv@dividend+1,w,c
  5400  002394  A0D8               	btfss	status,0,c
  5401  002396  D006               	goto	l4714
  5402                           
  5403                           ; BSR set to: 0
  5404  002398  5020               	movf	___awdiv@divisor,w,c
  5405  00239A  5E1E               	subwf	___awdiv@dividend,f,c
  5406  00239C  5021               	movf	___awdiv@divisor+1,w,c
  5407  00239E  5A1F               	subwfb	___awdiv@dividend+1,f,c
  5408                           
  5409                           ; BSR set to: 0
  5410  0023A0  0100               	movlb	0	; () banked
  5411  0023A2  81AF               	bsf	___awdiv@quotient& (0+255),0,b
  5412  0023A4                     l4714:
  5413                           
  5414                           ; BSR set to: 0
  5415  0023A4  90D8               	bcf	status,0,c
  5416  0023A6  3221               	rrcf	___awdiv@divisor+1,f,c
  5417  0023A8  3220               	rrcf	___awdiv@divisor,f,c
  5418                           
  5419                           ; BSR set to: 0
  5420  0023AA  0100               	movlb	0	; () banked
  5421  0023AC  2FAD               	decfsz	___awdiv@counter& (0+255),f,b
  5422  0023AE  D7EA               	goto	l4706
  5423  0023B0                     l4718:
  5424                           
  5425                           ; BSR set to: 0
  5426  0023B0  0100               	movlb	0	; () banked
  5427  0023B2  51AE               	movf	___awdiv@sign& (0+255),w,b
  5428  0023B4  0100               	movlb	0	; () banked
  5429  0023B6  B4D8               	btfsc	status,2,c
  5430  0023B8  D005               	goto	l4722
  5431                           
  5432                           ; BSR set to: 0
  5433  0023BA  0100               	movlb	0	; () banked
  5434  0023BC  6DAF               	negf	___awdiv@quotient& (0+255),b
  5435  0023BE  1FB0               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5436  0023C0  B0D8               	btfsc	status,0,c
  5437  0023C2  2BB0               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5438  0023C4                     l4722:
  5439                           
  5440                           ; BSR set to: 0
  5441  0023C4  C0AF  F01E         	movff	___awdiv@quotient,?___awdiv
  5442  0023C8  C0B0  F01F         	movff	___awdiv@quotient+1,?___awdiv+1
  5443  0023CC  0012               	return	
  5444  0023CE                     __end_of___awdiv:
  5445                           	opt stack 0
  5446                           tblptru	equ	0xFF8
  5447                           tblptrh	equ	0xFF7
  5448                           tblptrl	equ	0xFF6
  5449                           tablat	equ	0xFF5
  5450                           prodh	equ	0xFF4
  5451                           prodl	equ	0xFF3
  5452                           intcon	equ	0xFF2
  5453                           postinc0	equ	0xFEE
  5454                           wreg	equ	0xFE8
  5455                           indf1	equ	0xFE7
  5456                           postdec1	equ	0xFE5
  5457                           fsr1h	equ	0xFE2
  5458                           fsr1l	equ	0xFE1
  5459                           indf2	equ	0xFDF
  5460                           fsr2h	equ	0xFDA
  5461                           fsr2l	equ	0xFD9
  5462                           status	equ	0xFD8
  5463                           
  5464 ;; *************** function _CANsendMessage *****************
  5465 ;; Defined at:
  5466 ;;		line 294 in file "CANlib.h"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  identifier      4    0[BANK0 ] unsigned long 
  5469 ;;  data            2    4[BANK0 ] PTR unsigned char 
  5470 ;;		 -> data_array1(8), data_array(8), data_array_debug(8), 
  5471 ;;  dataLength      1    6[BANK0 ] unsigned char 
  5472 ;;  flags           1    7[BANK0 ] enum E16866
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;  tamp            4    8[BANK0 ] unsigned long 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;		None               void
  5477 ;; Registers used:
  5478 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5484 ;;      Params:         0       8       0       0
  5485 ;;      Locals:         0       4       0       0
  5486 ;;      Temps:          4       0       0       0
  5487 ;;      Totals:         4      12       0       0
  5488 ;;Total ram usage:       16 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    2
  5491 ;; This function calls:
  5492 ;;		Nothing
  5493 ;; This function is called by:
  5494 ;;		_main
  5495 ;;		_send_data
  5496 ;;		_battery_measure
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           	psect	text12
  5501  000BE2                     __ptext12:
  5502                           	opt stack 0
  5503  000BE2                     _CANsendMessage:
  5504                           	opt stack 27
  5505                           
  5506                           ;CANlib.h: 296: unsigned long tamp;
  5507                           ;CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;incstack = 0
  5511  000BE2  010F               	movlb	15	; () banked
  5512  000BE4  B740               	btfsc	64,3,b	;volatile
  5513  000BE6  D13B               	goto	l363
  5514                           
  5515                           ; BSR set to: 15
  5516                           ;CANlib.h: 299: { TXB0DLC = dataLength;
  5517  000BE8  C0B3  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  5518                           
  5519                           ;CANlib.h: 300: if (0b01000000 & flags)
  5520  000BEC  0100               	movlb	0	; () banked
  5521  000BEE  ADB4               	btfss	CANsendMessage@flags& (0+255),6,b
  5522  000BF0  D003               	goto	l364
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  5526  000BF2  010F               	movlb	15	; () banked
  5527  000BF4  8D45               	bsf	69,6,b	;volatile
  5528  000BF6  D002               	goto	l365
  5529  000BF8                     l364:
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;CANlib.h: 302: else
  5533                           ;CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  5534  000BF8  010F               	movlb	15	; () banked
  5535  000BFA  9D45               	bcf	69,6,b	;volatile
  5536  000BFC                     l365:
  5537                           
  5538                           ; BSR set to: 15
  5539                           ;CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  5540  000BFC  0100               	movlb	0	; () banked
  5541  000BFE  A7B4               	btfss	CANsendMessage@flags& (0+255),3,b
  5542  000C00  D077               	goto	l366
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;CANlib.h: 306: {
  5546                           ;CANlib.h: 308: tamp = identifier & 0x000000FF;
  5547  000C02  0100               	movlb	0	; () banked
  5548  000C04  51AD               	movf	CANsendMessage@identifier& (0+255),w,b
  5549  000C06  0100               	movlb	0	; () banked
  5550  000C08  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  5551  000C0A  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5552  000C0C  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5553  000C0E  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  5557  000C10  C0B5  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;CANlib.h: 311: tamp = identifier & 0x0000FF00;
  5561  000C14  0E00               	movlw	0
  5562  000C16  0100               	movlb	0	; () banked
  5563  000C18  15AD               	andwf	CANsendMessage@identifier& (0+255),w,b
  5564  000C1A  0100               	movlb	0	; () banked
  5565  000C1C  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  5566  000C1E  0EFF               	movlw	255
  5567  000C20  0100               	movlb	0	; () banked
  5568  000C22  15AE               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5569  000C24  0100               	movlb	0	; () banked
  5570  000C26  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5571  000C28  0E00               	movlw	0
  5572  000C2A  0100               	movlb	0	; () banked
  5573  000C2C  15AF               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5574  000C2E  0100               	movlb	0	; () banked
  5575  000C30  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5576  000C32  0E00               	movlw	0
  5577  000C34  0100               	movlb	0	; () banked
  5578  000C36  15B0               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5579  000C38  0100               	movlb	0	; () banked
  5580  000C3A  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5581                           
  5582                           ; BSR set to: 0
  5583                           ;CANlib.h: 312: tamp = tamp >> 8;
  5584  000C3C  C0B5  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  5585  000C40  C0B6  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5586  000C44  C0B7  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5587  000C48  C0B8  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5588  000C4C  C01F  F01E         	movff	??_CANsendMessage+1,??_CANsendMessage
  5589  000C50  C020  F01F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5590  000C54  C021  F020         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5591  000C58  6A21               	clrf	??_CANsendMessage+3,c
  5592  000C5A  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  5593  000C5E  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5594  000C62  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5595  000C66  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  5599  000C6A  C0B5  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;CANlib.h: 315: TXB0SIDL = 0x00;
  5603  000C6E  0E00               	movlw	0
  5604  000C70  010F               	movlb	15	; () banked
  5605  000C72  6F42               	movwf	66,b	;volatile
  5606                           
  5607                           ; BSR set to: 15
  5608                           ;CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  5609  000C74  010F               	movlb	15	; () banked
  5610  000C76  8742               	bsf	66,3,b	;volatile
  5611                           
  5612                           ; BSR set to: 15
  5613                           ;CANlib.h: 318: if (identifier & 0x00010000)
  5614  000C78  0100               	movlb	0	; () banked
  5615  000C7A  A1AF               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5616  000C7C  D002               	goto	l367
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  5620  000C7E  010F               	movlb	15	; () banked
  5621  000C80  8142               	bsf	66,0,b	;volatile
  5622  000C82                     l367:
  5623                           
  5624                           ;CANlib.h: 320: if (identifier & 0x00020000)
  5625  000C82  0100               	movlb	0	; () banked
  5626  000C84  A3AF               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5627  000C86  D002               	goto	l368
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  5631  000C88  010F               	movlb	15	; () banked
  5632  000C8A  8342               	bsf	66,1,b	;volatile
  5633  000C8C                     l368:
  5634                           
  5635                           ;CANlib.h: 322: if (identifier & 0x00040000)
  5636  000C8C  0100               	movlb	0	; () banked
  5637  000C8E  A5AF               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5638  000C90  D002               	goto	l369
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  5642  000C92  010F               	movlb	15	; () banked
  5643  000C94  8B42               	bsf	66,5,b	;volatile
  5644  000C96                     l369:
  5645                           
  5646                           ;CANlib.h: 324: if (identifier & 0x00080000)
  5647  000C96  0100               	movlb	0	; () banked
  5648  000C98  A7AF               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5649  000C9A  D002               	goto	l370
  5650                           
  5651                           ; BSR set to: 0
  5652                           ;CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  5653  000C9C  010F               	movlb	15	; () banked
  5654  000C9E  8D42               	bsf	66,6,b	;volatile
  5655  000CA0                     l370:
  5656                           
  5657                           ;CANlib.h: 326: if (identifier & 0x00100000)
  5658  000CA0  0100               	movlb	0	; () banked
  5659  000CA2  A9AF               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5660  000CA4  D002               	goto	l4478
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  5664  000CA6  010F               	movlb	15	; () banked
  5665  000CA8  8F42               	bsf	66,7,b	;volatile
  5666  000CAA                     l4478:
  5667                           
  5668                           ;CANlib.h: 329: tamp = (identifier >> 21);
  5669  000CAA  C0AD  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  5670  000CAE  C0AE  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5671  000CB2  C0AF  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5672  000CB6  C0B0  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5673  000CBA  0E16               	movlw	22
  5674  000CBC  D005               	goto	u5760
  5675  000CBE                     u5765:
  5676  000CBE  90D8               	bcf	status,0,c
  5677  000CC0  3221               	rrcf	??_CANsendMessage+3,f,c
  5678  000CC2  3220               	rrcf	??_CANsendMessage+2,f,c
  5679  000CC4  321F               	rrcf	??_CANsendMessage+1,f,c
  5680  000CC6  321E               	rrcf	??_CANsendMessage,f,c
  5681  000CC8                     u5760:
  5682  000CC8  2EE8               	decfsz	wreg,f,c
  5683  000CCA  D7F9               	goto	u5765
  5684  000CCC  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  5685  000CD0  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5686  000CD4  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5687  000CD8  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5688                           
  5689                           ;CANlib.h: 330: tamp = tamp & 0x000000FF;
  5690  000CDC  0100               	movlb	0	; () banked
  5691  000CDE  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  5692  000CE0  0100               	movlb	0	; () banked
  5693  000CE2  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  5694  000CE4  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5695  000CE6  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5696  000CE8  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  5700  000CEA  C0B5  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5701                           
  5702                           ;CANlib.h: 332: }
  5703  000CEE  D057               	goto	l4498
  5704  000CF0                     l366:
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;CANlib.h: 334: else
  5708                           ;CANlib.h: 336: {
  5709                           ;CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  5710  000CF0  010F               	movlb	15	; () banked
  5711  000CF2  9742               	bcf	66,3,b	;volatile
  5712                           
  5713                           ; BSR set to: 15
  5714                           ;CANlib.h: 339: tamp = (identifier >> 3);
  5715  000CF4  C0AD  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  5716  000CF8  C0AE  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5717  000CFC  C0AF  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5718  000D00  C0B0  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5719  000D04  0E04               	movlw	4
  5720  000D06  D005               	goto	u5770
  5721  000D08                     u5775:
  5722  000D08  90D8               	bcf	status,0,c
  5723  000D0A  3221               	rrcf	??_CANsendMessage+3,f,c
  5724  000D0C  3220               	rrcf	??_CANsendMessage+2,f,c
  5725  000D0E  321F               	rrcf	??_CANsendMessage+1,f,c
  5726  000D10  321E               	rrcf	??_CANsendMessage,f,c
  5727  000D12                     u5770:
  5728  000D12  2EE8               	decfsz	wreg,f,c
  5729  000D14  D7F9               	goto	u5775
  5730  000D16  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  5731  000D1A  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5732  000D1E  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5733  000D22  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5734                           
  5735                           ; BSR set to: 15
  5736                           ;CANlib.h: 340: tamp = tamp & 0x000000FF;
  5737  000D26  0100               	movlb	0	; () banked
  5738  000D28  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  5739  000D2A  0100               	movlb	0	; () banked
  5740  000D2C  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  5741  000D2E  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5742  000D30  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5743  000D32  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  5747  000D34  C0B5  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;CANlib.h: 343: tamp = identifier & 0x00000007;
  5751  000D38  0E07               	movlw	7
  5752  000D3A  0100               	movlb	0	; () banked
  5753  000D3C  15AD               	andwf	CANsendMessage@identifier& (0+255),w,b
  5754  000D3E  0100               	movlb	0	; () banked
  5755  000D40  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  5756  000D42  0E00               	movlw	0
  5757  000D44  0100               	movlb	0	; () banked
  5758  000D46  15AE               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5759  000D48  0100               	movlb	0	; () banked
  5760  000D4A  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5761  000D4C  0E00               	movlw	0
  5762  000D4E  0100               	movlb	0	; () banked
  5763  000D50  15AF               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5764  000D52  0100               	movlb	0	; () banked
  5765  000D54  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5766  000D56  0E00               	movlw	0
  5767  000D58  0100               	movlb	0	; () banked
  5768  000D5A  15B0               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5769  000D5C  0100               	movlb	0	; () banked
  5770  000D5E  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5771                           
  5772                           ; BSR set to: 0
  5773                           ;CANlib.h: 344: tamp = tamp << 5;
  5774  000D60  C0B5  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  5775  000D64  C0B6  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5776  000D68  C0B7  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5777  000D6C  C0B8  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5778  000D70  0E05               	movlw	5
  5779  000D72                     u5785:
  5780  000D72  90D8               	bcf	status,0,c
  5781  000D74  361E               	rlcf	??_CANsendMessage,f,c
  5782  000D76  361F               	rlcf	??_CANsendMessage+1,f,c
  5783  000D78  3620               	rlcf	??_CANsendMessage+2,f,c
  5784  000D7A  3621               	rlcf	??_CANsendMessage+3,f,c
  5785  000D7C  2EE8               	decfsz	wreg,f,c
  5786  000D7E  D7F9               	goto	u5785
  5787  000D80  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  5788  000D84  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5789  000D88  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5790  000D8C  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  5794  000D90  010F               	movlb	15	; () banked
  5795  000D92  5142               	movf	66,w,b	;volatile
  5796  000D94  0B1F               	andlw	31
  5797  000D96  010F               	movlb	15	; () banked
  5798  000D98  6F42               	movwf	66,b	;volatile
  5799                           
  5800                           ; BSR set to: 15
  5801                           ;CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  5802  000D9A  C0B5  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  5803  000D9E                     l4498:
  5804                           
  5805                           ;CANlib.h: 347: }
  5806                           ;CANlib.h: 349: if (0b00000001 & flags)
  5807  000D9E  0100               	movlb	0	; () banked
  5808  000DA0  A1B4               	btfss	CANsendMessage@flags& (0+255),0,b
  5809  000DA2  D003               	goto	l373
  5810                           
  5811                           ; BSR set to: 0
  5812                           ;CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  5813  000DA4  010F               	movlb	15	; () banked
  5814  000DA6  8140               	bsf	64,0,b	;volatile
  5815  000DA8  D002               	goto	l374
  5816  000DAA                     l373:
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;CANlib.h: 351: else
  5820                           ;CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  5821  000DAA  010F               	movlb	15	; () banked
  5822  000DAC  9140               	bcf	64,0,b	;volatile
  5823  000DAE                     l374:
  5824                           
  5825                           ; BSR set to: 15
  5826                           ;CANlib.h: 353: if (0b00000010 & flags)
  5827  000DAE  0100               	movlb	0	; () banked
  5828  000DB0  A3B4               	btfss	CANsendMessage@flags& (0+255),1,b
  5829  000DB2  D003               	goto	l375
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  5833  000DB4  010F               	movlb	15	; () banked
  5834  000DB6  8340               	bsf	64,1,b	;volatile
  5835  000DB8  D002               	goto	l4504
  5836  000DBA                     l375:
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;CANlib.h: 355: else
  5840                           ;CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  5841  000DBA  010F               	movlb	15	; () banked
  5842  000DBC  9340               	bcf	64,1,b	;volatile
  5843  000DBE                     l4504:
  5844                           
  5845                           ; BSR set to: 15
  5846                           ;CANlib.h: 358: TXB0D0 = data[0];
  5847  000DBE  C0B1  FFD9         	movff	CANsendMessage@data,fsr2l
  5848  000DC2  C0B2  FFDA         	movff	CANsendMessage@data+1,fsr2h
  5849  000DC6  50DF               	movf	indf2,w,c
  5850  000DC8  010F               	movlb	15	; () banked
  5851  000DCA  6F46               	movwf	70,b	;volatile
  5852                           
  5853                           ; BSR set to: 15
  5854                           ;CANlib.h: 359: TXB0D1 = data[1];
  5855  000DCC  0100               	movlb	0	; () banked
  5856  000DCE  EE20 F001          	lfsr	2,1
  5857  000DD2  51B1               	movf	CANsendMessage@data& (0+255),w,b
  5858  000DD4  26D9               	addwf	fsr2l,f,c
  5859  000DD6  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5860  000DD8  22DA               	addwfc	fsr2h,f,c
  5861  000DDA  50DF               	movf	indf2,w,c
  5862  000DDC  010F               	movlb	15	; () banked
  5863  000DDE  6F47               	movwf	71,b	;volatile
  5864                           
  5865                           ; BSR set to: 15
  5866                           ;CANlib.h: 360: TXB0D2 = data[2];
  5867  000DE0  0100               	movlb	0	; () banked
  5868  000DE2  EE20 F002          	lfsr	2,2
  5869  000DE6  51B1               	movf	CANsendMessage@data& (0+255),w,b
  5870  000DE8  26D9               	addwf	fsr2l,f,c
  5871  000DEA  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5872  000DEC  22DA               	addwfc	fsr2h,f,c
  5873  000DEE  50DF               	movf	indf2,w,c
  5874  000DF0  010F               	movlb	15	; () banked
  5875  000DF2  6F48               	movwf	72,b	;volatile
  5876                           
  5877                           ; BSR set to: 15
  5878                           ;CANlib.h: 361: TXB0D3 = data[3];
  5879  000DF4  0100               	movlb	0	; () banked
  5880  000DF6  EE20 F003          	lfsr	2,3
  5881  000DFA  51B1               	movf	CANsendMessage@data& (0+255),w,b
  5882  000DFC  26D9               	addwf	fsr2l,f,c
  5883  000DFE  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5884  000E00  22DA               	addwfc	fsr2h,f,c
  5885  000E02  50DF               	movf	indf2,w,c
  5886  000E04  010F               	movlb	15	; () banked
  5887  000E06  6F49               	movwf	73,b	;volatile
  5888                           
  5889                           ; BSR set to: 15
  5890                           ;CANlib.h: 362: TXB0D4 = data[4];
  5891  000E08  0100               	movlb	0	; () banked
  5892  000E0A  EE20 F004          	lfsr	2,4
  5893  000E0E  51B1               	movf	CANsendMessage@data& (0+255),w,b
  5894  000E10  26D9               	addwf	fsr2l,f,c
  5895  000E12  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5896  000E14  22DA               	addwfc	fsr2h,f,c
  5897  000E16  50DF               	movf	indf2,w,c
  5898  000E18  010F               	movlb	15	; () banked
  5899  000E1A  6F4A               	movwf	74,b	;volatile
  5900                           
  5901                           ; BSR set to: 15
  5902                           ;CANlib.h: 363: TXB0D5 = data[5];
  5903  000E1C  0100               	movlb	0	; () banked
  5904  000E1E  EE20 F005          	lfsr	2,5
  5905  000E22  51B1               	movf	CANsendMessage@data& (0+255),w,b
  5906  000E24  26D9               	addwf	fsr2l,f,c
  5907  000E26  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5908  000E28  22DA               	addwfc	fsr2h,f,c
  5909  000E2A  50DF               	movf	indf2,w,c
  5910  000E2C  010F               	movlb	15	; () banked
  5911  000E2E  6F4B               	movwf	75,b	;volatile
  5912                           
  5913                           ; BSR set to: 15
  5914                           ;CANlib.h: 364: TXB0D6 = data[6];
  5915  000E30  0100               	movlb	0	; () banked
  5916  000E32  EE20 F006          	lfsr	2,6
  5917  000E36  51B1               	movf	CANsendMessage@data& (0+255),w,b
  5918  000E38  26D9               	addwf	fsr2l,f,c
  5919  000E3A  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5920  000E3C  22DA               	addwfc	fsr2h,f,c
  5921  000E3E  50DF               	movf	indf2,w,c
  5922  000E40  010F               	movlb	15	; () banked
  5923  000E42  6F4C               	movwf	76,b	;volatile
  5924                           
  5925                           ; BSR set to: 15
  5926                           ;CANlib.h: 365: TXB0D7 = data[7];
  5927  000E44  0100               	movlb	0	; () banked
  5928  000E46  EE20 F007          	lfsr	2,7
  5929  000E4A  51B1               	movf	CANsendMessage@data& (0+255),w,b
  5930  000E4C  26D9               	addwf	fsr2l,f,c
  5931  000E4E  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5932  000E50  22DA               	addwfc	fsr2h,f,c
  5933  000E52  50DF               	movf	indf2,w,c
  5934  000E54  010F               	movlb	15	; () banked
  5935  000E56  6F4D               	movwf	77,b	;volatile
  5936                           
  5937                           ; BSR set to: 15
  5938                           ;CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  5939  000E58  010F               	movlb	15	; () banked
  5940  000E5A  8740               	bsf	64,3,b	;volatile
  5941                           
  5942                           ; BSR set to: 15
  5943                           ;CANlib.h: 368: return;
  5944  000E5C  0012               	return	
  5945  000E5E                     l363:
  5946                           
  5947                           ; BSR set to: 15
  5948                           ;CANlib.h: 369: }
  5949                           ;CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  5950  000E5E  010F               	movlb	15	; () banked
  5951  000E60  B730               	btfsc	48,3,b	;volatile
  5952  000E62  D13B               	goto	l378
  5953                           
  5954                           ; BSR set to: 15
  5955                           ;CANlib.h: 374: { TXB1DLC = dataLength;
  5956  000E64  C0B3  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  5957                           
  5958                           ;CANlib.h: 376: if (0b01000000 & flags)
  5959  000E68  0100               	movlb	0	; () banked
  5960  000E6A  ADB4               	btfss	CANsendMessage@flags& (0+255),6,b
  5961  000E6C  D003               	goto	l379
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  5965  000E6E  010F               	movlb	15	; () banked
  5966  000E70  8D35               	bsf	53,6,b	;volatile
  5967  000E72  D002               	goto	l380
  5968  000E74                     l379:
  5969                           
  5970                           ; BSR set to: 0
  5971                           ;CANlib.h: 378: else
  5972                           ;CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  5973  000E74  010F               	movlb	15	; () banked
  5974  000E76  9D35               	bcf	53,6,b	;volatile
  5975  000E78                     l380:
  5976                           
  5977                           ; BSR set to: 15
  5978                           ;CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  5979  000E78  0100               	movlb	0	; () banked
  5980  000E7A  A7B4               	btfss	CANsendMessage@flags& (0+255),3,b
  5981  000E7C  D077               	goto	l381
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;CANlib.h: 382: {
  5985                           ;CANlib.h: 383: tamp = identifier & 0x000000FF;
  5986  000E7E  0100               	movlb	0	; () banked
  5987  000E80  51AD               	movf	CANsendMessage@identifier& (0+255),w,b
  5988  000E82  0100               	movlb	0	; () banked
  5989  000E84  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  5990  000E86  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5991  000E88  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5992  000E8A  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  5996  000E8C  C0B5  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;CANlib.h: 386: tamp = identifier & 0x0000FF00;
  6000  000E90  0E00               	movlw	0
  6001  000E92  0100               	movlb	0	; () banked
  6002  000E94  15AD               	andwf	CANsendMessage@identifier& (0+255),w,b
  6003  000E96  0100               	movlb	0	; () banked
  6004  000E98  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6005  000E9A  0EFF               	movlw	255
  6006  000E9C  0100               	movlb	0	; () banked
  6007  000E9E  15AE               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6008  000EA0  0100               	movlb	0	; () banked
  6009  000EA2  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6010  000EA4  0E00               	movlw	0
  6011  000EA6  0100               	movlb	0	; () banked
  6012  000EA8  15AF               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6013  000EAA  0100               	movlb	0	; () banked
  6014  000EAC  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6015  000EAE  0E00               	movlw	0
  6016  000EB0  0100               	movlb	0	; () banked
  6017  000EB2  15B0               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6018  000EB4  0100               	movlb	0	; () banked
  6019  000EB6  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;CANlib.h: 387: tamp = tamp >> 8;
  6023  000EB8  C0B5  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  6024  000EBC  C0B6  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6025  000EC0  C0B7  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6026  000EC4  C0B8  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6027  000EC8  C01F  F01E         	movff	??_CANsendMessage+1,??_CANsendMessage
  6028  000ECC  C020  F01F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6029  000ED0  C021  F020         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6030  000ED4  6A21               	clrf	??_CANsendMessage+3,c
  6031  000ED6  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6032  000EDA  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6033  000EDE  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6034  000EE2  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  6038  000EE6  C0B5  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;CANlib.h: 390: TXB1SIDL = 0x00;
  6042  000EEA  0E00               	movlw	0
  6043  000EEC  010F               	movlb	15	; () banked
  6044  000EEE  6F32               	movwf	50,b	;volatile
  6045                           
  6046                           ; BSR set to: 15
  6047                           ;CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  6048  000EF0  010F               	movlb	15	; () banked
  6049  000EF2  8732               	bsf	50,3,b	;volatile
  6050                           
  6051                           ; BSR set to: 15
  6052                           ;CANlib.h: 393: if (identifier & 0x00010000)
  6053  000EF4  0100               	movlb	0	; () banked
  6054  000EF6  A1AF               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6055  000EF8  D002               	goto	l382
  6056                           
  6057                           ; BSR set to: 0
  6058                           ;CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  6059  000EFA  010F               	movlb	15	; () banked
  6060  000EFC  8132               	bsf	50,0,b	;volatile
  6061  000EFE                     l382:
  6062                           
  6063                           ;CANlib.h: 395: if (identifier & 0x00020000)
  6064  000EFE  0100               	movlb	0	; () banked
  6065  000F00  A3AF               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6066  000F02  D002               	goto	l383
  6067                           
  6068                           ; BSR set to: 0
  6069                           ;CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  6070  000F04  010F               	movlb	15	; () banked
  6071  000F06  8332               	bsf	50,1,b	;volatile
  6072  000F08                     l383:
  6073                           
  6074                           ;CANlib.h: 397: if (identifier & 0x00040000)
  6075  000F08  0100               	movlb	0	; () banked
  6076  000F0A  A5AF               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6077  000F0C  D002               	goto	l384
  6078                           
  6079                           ; BSR set to: 0
  6080                           ;CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  6081  000F0E  010F               	movlb	15	; () banked
  6082  000F10  8B32               	bsf	50,5,b	;volatile
  6083  000F12                     l384:
  6084                           
  6085                           ;CANlib.h: 399: if (identifier & 0x00080000)
  6086  000F12  0100               	movlb	0	; () banked
  6087  000F14  A7AF               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6088  000F16  D002               	goto	l385
  6089                           
  6090                           ; BSR set to: 0
  6091                           ;CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  6092  000F18  010F               	movlb	15	; () banked
  6093  000F1A  8D32               	bsf	50,6,b	;volatile
  6094  000F1C                     l385:
  6095                           
  6096                           ;CANlib.h: 401: if (identifier & 0x00100000)
  6097  000F1C  0100               	movlb	0	; () banked
  6098  000F1E  A9AF               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6099  000F20  D002               	goto	l4554
  6100                           
  6101                           ; BSR set to: 0
  6102                           ;CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  6103  000F22  010F               	movlb	15	; () banked
  6104  000F24  8F32               	bsf	50,7,b	;volatile
  6105  000F26                     l4554:
  6106                           
  6107                           ;CANlib.h: 404: tamp = (identifier >> 21);
  6108  000F26  C0AD  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  6109  000F2A  C0AE  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6110  000F2E  C0AF  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6111  000F32  C0B0  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6112  000F36  0E16               	movlw	22
  6113  000F38  D005               	goto	u5890
  6114  000F3A                     u5895:
  6115  000F3A  90D8               	bcf	status,0,c
  6116  000F3C  3221               	rrcf	??_CANsendMessage+3,f,c
  6117  000F3E  3220               	rrcf	??_CANsendMessage+2,f,c
  6118  000F40  321F               	rrcf	??_CANsendMessage+1,f,c
  6119  000F42  321E               	rrcf	??_CANsendMessage,f,c
  6120  000F44                     u5890:
  6121  000F44  2EE8               	decfsz	wreg,f,c
  6122  000F46  D7F9               	goto	u5895
  6123  000F48  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6124  000F4C  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6125  000F50  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6126  000F54  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6127                           
  6128                           ;CANlib.h: 405: tamp = tamp & 0x000000FF;
  6129  000F58  0100               	movlb	0	; () banked
  6130  000F5A  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  6131  000F5C  0100               	movlb	0	; () banked
  6132  000F5E  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6133  000F60  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6134  000F62  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6135  000F64  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  6139  000F66  C0B5  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6140                           
  6141                           ;CANlib.h: 407: }
  6142  000F6A  D057               	goto	l4574
  6143  000F6C                     l381:
  6144                           
  6145                           ; BSR set to: 0
  6146                           ;CANlib.h: 409: else
  6147                           ;CANlib.h: 411: {
  6148                           ;CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  6149  000F6C  010F               	movlb	15	; () banked
  6150  000F6E  9732               	bcf	50,3,b	;volatile
  6151                           
  6152                           ; BSR set to: 15
  6153                           ;CANlib.h: 414: tamp = (identifier >> 3);
  6154  000F70  C0AD  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  6155  000F74  C0AE  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6156  000F78  C0AF  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6157  000F7C  C0B0  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6158  000F80  0E04               	movlw	4
  6159  000F82  D005               	goto	u5900
  6160  000F84                     u5905:
  6161  000F84  90D8               	bcf	status,0,c
  6162  000F86  3221               	rrcf	??_CANsendMessage+3,f,c
  6163  000F88  3220               	rrcf	??_CANsendMessage+2,f,c
  6164  000F8A  321F               	rrcf	??_CANsendMessage+1,f,c
  6165  000F8C  321E               	rrcf	??_CANsendMessage,f,c
  6166  000F8E                     u5900:
  6167  000F8E  2EE8               	decfsz	wreg,f,c
  6168  000F90  D7F9               	goto	u5905
  6169  000F92  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6170  000F96  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6171  000F9A  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6172  000F9E  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6173                           
  6174                           ; BSR set to: 15
  6175                           ;CANlib.h: 415: tamp = tamp & 0x000000FF;
  6176  000FA2  0100               	movlb	0	; () banked
  6177  000FA4  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  6178  000FA6  0100               	movlb	0	; () banked
  6179  000FA8  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6180  000FAA  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6181  000FAC  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6182  000FAE  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  6186  000FB0  C0B5  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;CANlib.h: 418: tamp = identifier & 0x00000007;
  6190  000FB4  0E07               	movlw	7
  6191  000FB6  0100               	movlb	0	; () banked
  6192  000FB8  15AD               	andwf	CANsendMessage@identifier& (0+255),w,b
  6193  000FBA  0100               	movlb	0	; () banked
  6194  000FBC  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6195  000FBE  0E00               	movlw	0
  6196  000FC0  0100               	movlb	0	; () banked
  6197  000FC2  15AE               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6198  000FC4  0100               	movlb	0	; () banked
  6199  000FC6  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6200  000FC8  0E00               	movlw	0
  6201  000FCA  0100               	movlb	0	; () banked
  6202  000FCC  15AF               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6203  000FCE  0100               	movlb	0	; () banked
  6204  000FD0  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6205  000FD2  0E00               	movlw	0
  6206  000FD4  0100               	movlb	0	; () banked
  6207  000FD6  15B0               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6208  000FD8  0100               	movlb	0	; () banked
  6209  000FDA  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;CANlib.h: 419: tamp = tamp << 5;
  6213  000FDC  C0B5  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  6214  000FE0  C0B6  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6215  000FE4  C0B7  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6216  000FE8  C0B8  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6217  000FEC  0E05               	movlw	5
  6218  000FEE                     u5915:
  6219  000FEE  90D8               	bcf	status,0,c
  6220  000FF0  361E               	rlcf	??_CANsendMessage,f,c
  6221  000FF2  361F               	rlcf	??_CANsendMessage+1,f,c
  6222  000FF4  3620               	rlcf	??_CANsendMessage+2,f,c
  6223  000FF6  3621               	rlcf	??_CANsendMessage+3,f,c
  6224  000FF8  2EE8               	decfsz	wreg,f,c
  6225  000FFA  D7F9               	goto	u5915
  6226  000FFC  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6227  001000  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6228  001004  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6229  001008  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  6233  00100C  010F               	movlb	15	; () banked
  6234  00100E  5132               	movf	50,w,b	;volatile
  6235  001010  0B1F               	andlw	31
  6236  001012  010F               	movlb	15	; () banked
  6237  001014  6F32               	movwf	50,b	;volatile
  6238                           
  6239                           ; BSR set to: 15
  6240                           ;CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  6241  001016  C0B5  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6242  00101A                     l4574:
  6243                           
  6244                           ;CANlib.h: 422: }
  6245                           ;CANlib.h: 424: if (0b00000001 & flags)
  6246  00101A  0100               	movlb	0	; () banked
  6247  00101C  A1B4               	btfss	CANsendMessage@flags& (0+255),0,b
  6248  00101E  D003               	goto	l388
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  6252  001020  010F               	movlb	15	; () banked
  6253  001022  8130               	bsf	48,0,b	;volatile
  6254  001024  D002               	goto	l389
  6255  001026                     l388:
  6256                           
  6257                           ; BSR set to: 0
  6258                           ;CANlib.h: 426: else
  6259                           ;CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  6260  001026  010F               	movlb	15	; () banked
  6261  001028  9130               	bcf	48,0,b	;volatile
  6262  00102A                     l389:
  6263                           
  6264                           ; BSR set to: 15
  6265                           ;CANlib.h: 428: if (0b00000010 & flags)
  6266  00102A  0100               	movlb	0	; () banked
  6267  00102C  A3B4               	btfss	CANsendMessage@flags& (0+255),1,b
  6268  00102E  D003               	goto	l390
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  6272  001030  010F               	movlb	15	; () banked
  6273  001032  8330               	bsf	48,1,b	;volatile
  6274  001034  D002               	goto	l4580
  6275  001036                     l390:
  6276                           
  6277                           ; BSR set to: 0
  6278                           ;CANlib.h: 430: else
  6279                           ;CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  6280  001036  010F               	movlb	15	; () banked
  6281  001038  9330               	bcf	48,1,b	;volatile
  6282  00103A                     l4580:
  6283                           
  6284                           ; BSR set to: 15
  6285                           ;CANlib.h: 433: TXB1D0 = data[0];
  6286  00103A  C0B1  FFD9         	movff	CANsendMessage@data,fsr2l
  6287  00103E  C0B2  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6288  001042  50DF               	movf	indf2,w,c
  6289  001044  010F               	movlb	15	; () banked
  6290  001046  6F36               	movwf	54,b	;volatile
  6291                           
  6292                           ; BSR set to: 15
  6293                           ;CANlib.h: 434: TXB1D1 = data[1];
  6294  001048  0100               	movlb	0	; () banked
  6295  00104A  EE20 F001          	lfsr	2,1
  6296  00104E  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6297  001050  26D9               	addwf	fsr2l,f,c
  6298  001052  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6299  001054  22DA               	addwfc	fsr2h,f,c
  6300  001056  50DF               	movf	indf2,w,c
  6301  001058  010F               	movlb	15	; () banked
  6302  00105A  6F37               	movwf	55,b	;volatile
  6303                           
  6304                           ; BSR set to: 15
  6305                           ;CANlib.h: 435: TXB1D2 = data[2];
  6306  00105C  0100               	movlb	0	; () banked
  6307  00105E  EE20 F002          	lfsr	2,2
  6308  001062  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6309  001064  26D9               	addwf	fsr2l,f,c
  6310  001066  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6311  001068  22DA               	addwfc	fsr2h,f,c
  6312  00106A  50DF               	movf	indf2,w,c
  6313  00106C  010F               	movlb	15	; () banked
  6314  00106E  6F38               	movwf	56,b	;volatile
  6315                           
  6316                           ; BSR set to: 15
  6317                           ;CANlib.h: 436: TXB1D3 = data[3];
  6318  001070  0100               	movlb	0	; () banked
  6319  001072  EE20 F003          	lfsr	2,3
  6320  001076  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6321  001078  26D9               	addwf	fsr2l,f,c
  6322  00107A  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6323  00107C  22DA               	addwfc	fsr2h,f,c
  6324  00107E  50DF               	movf	indf2,w,c
  6325  001080  010F               	movlb	15	; () banked
  6326  001082  6F39               	movwf	57,b	;volatile
  6327                           
  6328                           ; BSR set to: 15
  6329                           ;CANlib.h: 437: TXB1D4 = data[4];
  6330  001084  0100               	movlb	0	; () banked
  6331  001086  EE20 F004          	lfsr	2,4
  6332  00108A  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6333  00108C  26D9               	addwf	fsr2l,f,c
  6334  00108E  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6335  001090  22DA               	addwfc	fsr2h,f,c
  6336  001092  50DF               	movf	indf2,w,c
  6337  001094  010F               	movlb	15	; () banked
  6338  001096  6F3A               	movwf	58,b	;volatile
  6339                           
  6340                           ; BSR set to: 15
  6341                           ;CANlib.h: 438: TXB1D5 = data[5];
  6342  001098  0100               	movlb	0	; () banked
  6343  00109A  EE20 F005          	lfsr	2,5
  6344  00109E  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6345  0010A0  26D9               	addwf	fsr2l,f,c
  6346  0010A2  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6347  0010A4  22DA               	addwfc	fsr2h,f,c
  6348  0010A6  50DF               	movf	indf2,w,c
  6349  0010A8  010F               	movlb	15	; () banked
  6350  0010AA  6F3B               	movwf	59,b	;volatile
  6351                           
  6352                           ; BSR set to: 15
  6353                           ;CANlib.h: 439: TXB1D6 = data[6];
  6354  0010AC  0100               	movlb	0	; () banked
  6355  0010AE  EE20 F006          	lfsr	2,6
  6356  0010B2  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6357  0010B4  26D9               	addwf	fsr2l,f,c
  6358  0010B6  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6359  0010B8  22DA               	addwfc	fsr2h,f,c
  6360  0010BA  50DF               	movf	indf2,w,c
  6361  0010BC  010F               	movlb	15	; () banked
  6362  0010BE  6F3C               	movwf	60,b	;volatile
  6363                           
  6364                           ; BSR set to: 15
  6365                           ;CANlib.h: 440: TXB1D7 = data[7];
  6366  0010C0  0100               	movlb	0	; () banked
  6367  0010C2  EE20 F007          	lfsr	2,7
  6368  0010C6  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6369  0010C8  26D9               	addwf	fsr2l,f,c
  6370  0010CA  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6371  0010CC  22DA               	addwfc	fsr2h,f,c
  6372  0010CE  50DF               	movf	indf2,w,c
  6373  0010D0  010F               	movlb	15	; () banked
  6374  0010D2  6F3D               	movwf	61,b	;volatile
  6375                           
  6376                           ; BSR set to: 15
  6377                           ;CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  6378  0010D4  010F               	movlb	15	; () banked
  6379  0010D6  8730               	bsf	48,3,b	;volatile
  6380                           
  6381                           ; BSR set to: 15
  6382                           ;CANlib.h: 444: return;
  6383  0010D8  0012               	return	
  6384  0010DA                     l378:
  6385                           
  6386                           ; BSR set to: 15
  6387                           ;CANlib.h: 445: }
  6388                           ;CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  6389  0010DA  010F               	movlb	15	; () banked
  6390  0010DC  B720               	btfsc	32,3,b	;volatile
  6391  0010DE  0012               	return	
  6392                           
  6393                           ; BSR set to: 15
  6394                           ;CANlib.h: 450: { TXB2DLC = dataLength;
  6395  0010E0  C0B3  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6396                           
  6397                           ;CANlib.h: 452: if (0b01000000 & flags)
  6398  0010E4  0100               	movlb	0	; () banked
  6399  0010E6  ADB4               	btfss	CANsendMessage@flags& (0+255),6,b
  6400  0010E8  D003               	goto	l393
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  6404  0010EA  010F               	movlb	15	; () banked
  6405  0010EC  8D25               	bsf	37,6,b	;volatile
  6406  0010EE  D002               	goto	l394
  6407  0010F0                     l393:
  6408                           
  6409                           ; BSR set to: 0
  6410                           ;CANlib.h: 454: else
  6411                           ;CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  6412  0010F0  010F               	movlb	15	; () banked
  6413  0010F2  9D25               	bcf	37,6,b	;volatile
  6414  0010F4                     l394:
  6415                           
  6416                           ; BSR set to: 15
  6417                           ;CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  6418  0010F4  0100               	movlb	0	; () banked
  6419  0010F6  A7B4               	btfss	CANsendMessage@flags& (0+255),3,b
  6420  0010F8  D077               	goto	l395
  6421                           
  6422                           ; BSR set to: 0
  6423                           ;CANlib.h: 458: {
  6424                           ;CANlib.h: 459: tamp = identifier & 0x000000FF;
  6425  0010FA  0100               	movlb	0	; () banked
  6426  0010FC  51AD               	movf	CANsendMessage@identifier& (0+255),w,b
  6427  0010FE  0100               	movlb	0	; () banked
  6428  001100  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6429  001102  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6430  001104  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6431  001106  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  6435  001108  C0B5  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;CANlib.h: 462: tamp = identifier & 0x0000FF00;
  6439  00110C  0E00               	movlw	0
  6440  00110E  0100               	movlb	0	; () banked
  6441  001110  15AD               	andwf	CANsendMessage@identifier& (0+255),w,b
  6442  001112  0100               	movlb	0	; () banked
  6443  001114  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6444  001116  0EFF               	movlw	255
  6445  001118  0100               	movlb	0	; () banked
  6446  00111A  15AE               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6447  00111C  0100               	movlb	0	; () banked
  6448  00111E  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6449  001120  0E00               	movlw	0
  6450  001122  0100               	movlb	0	; () banked
  6451  001124  15AF               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6452  001126  0100               	movlb	0	; () banked
  6453  001128  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6454  00112A  0E00               	movlw	0
  6455  00112C  0100               	movlb	0	; () banked
  6456  00112E  15B0               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6457  001130  0100               	movlb	0	; () banked
  6458  001132  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;CANlib.h: 463: tamp = tamp >> 8;
  6462  001134  C0B5  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  6463  001138  C0B6  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6464  00113C  C0B7  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6465  001140  C0B8  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6466  001144  C01F  F01E         	movff	??_CANsendMessage+1,??_CANsendMessage
  6467  001148  C020  F01F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6468  00114C  C021  F020         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6469  001150  6A21               	clrf	??_CANsendMessage+3,c
  6470  001152  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6471  001156  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6472  00115A  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6473  00115E  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6474                           
  6475                           ; BSR set to: 0
  6476                           ;CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  6477  001162  C0B5  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;CANlib.h: 466: TXB2SIDL = 0x00;
  6481  001166  0E00               	movlw	0
  6482  001168  010F               	movlb	15	; () banked
  6483  00116A  6F22               	movwf	34,b	;volatile
  6484                           
  6485                           ; BSR set to: 15
  6486                           ;CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  6487  00116C  010F               	movlb	15	; () banked
  6488  00116E  8722               	bsf	34,3,b	;volatile
  6489                           
  6490                           ; BSR set to: 15
  6491                           ;CANlib.h: 469: if (identifier & 0x00010000)
  6492  001170  0100               	movlb	0	; () banked
  6493  001172  A1AF               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6494  001174  D002               	goto	l396
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  6498  001176  010F               	movlb	15	; () banked
  6499  001178  8122               	bsf	34,0,b	;volatile
  6500  00117A                     l396:
  6501                           
  6502                           ;CANlib.h: 471: if (identifier & 0x00020000)
  6503  00117A  0100               	movlb	0	; () banked
  6504  00117C  A3AF               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6505  00117E  D002               	goto	l397
  6506                           
  6507                           ; BSR set to: 0
  6508                           ;CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  6509  001180  010F               	movlb	15	; () banked
  6510  001182  8322               	bsf	34,1,b	;volatile
  6511  001184                     l397:
  6512                           
  6513                           ;CANlib.h: 473: if (identifier & 0x00040000)
  6514  001184  0100               	movlb	0	; () banked
  6515  001186  A5AF               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6516  001188  D002               	goto	l398
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  6520  00118A  010F               	movlb	15	; () banked
  6521  00118C  8B22               	bsf	34,5,b	;volatile
  6522  00118E                     l398:
  6523                           
  6524                           ;CANlib.h: 475: if (identifier & 0x00080000)
  6525  00118E  0100               	movlb	0	; () banked
  6526  001190  A7AF               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6527  001192  D002               	goto	l399
  6528                           
  6529                           ; BSR set to: 0
  6530                           ;CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  6531  001194  010F               	movlb	15	; () banked
  6532  001196  8D22               	bsf	34,6,b	;volatile
  6533  001198                     l399:
  6534                           
  6535                           ;CANlib.h: 477: if (identifier & 0x00100000)
  6536  001198  0100               	movlb	0	; () banked
  6537  00119A  A9AF               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6538  00119C  D002               	goto	l4630
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  6542  00119E  010F               	movlb	15	; () banked
  6543  0011A0  8F22               	bsf	34,7,b	;volatile
  6544  0011A2                     l4630:
  6545                           
  6546                           ;CANlib.h: 480: tamp = (identifier >> 21);
  6547  0011A2  C0AD  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  6548  0011A6  C0AE  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6549  0011AA  C0AF  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6550  0011AE  C0B0  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6551  0011B2  0E16               	movlw	22
  6552  0011B4  D005               	goto	u6020
  6553  0011B6                     u6025:
  6554  0011B6  90D8               	bcf	status,0,c
  6555  0011B8  3221               	rrcf	??_CANsendMessage+3,f,c
  6556  0011BA  3220               	rrcf	??_CANsendMessage+2,f,c
  6557  0011BC  321F               	rrcf	??_CANsendMessage+1,f,c
  6558  0011BE  321E               	rrcf	??_CANsendMessage,f,c
  6559  0011C0                     u6020:
  6560  0011C0  2EE8               	decfsz	wreg,f,c
  6561  0011C2  D7F9               	goto	u6025
  6562  0011C4  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6563  0011C8  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6564  0011CC  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6565  0011D0  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6566                           
  6567                           ;CANlib.h: 481: tamp = tamp & 0x000000FF;
  6568  0011D4  0100               	movlb	0	; () banked
  6569  0011D6  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  6570  0011D8  0100               	movlb	0	; () banked
  6571  0011DA  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6572  0011DC  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6573  0011DE  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6574  0011E0  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  6578  0011E2  C0B5  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6579                           
  6580                           ;CANlib.h: 483: }
  6581  0011E6  D057               	goto	l4650
  6582  0011E8                     l395:
  6583                           
  6584                           ; BSR set to: 0
  6585                           ;CANlib.h: 485: else
  6586                           ;CANlib.h: 487: {
  6587                           ;CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  6588  0011E8  010F               	movlb	15	; () banked
  6589  0011EA  9722               	bcf	34,3,b	;volatile
  6590                           
  6591                           ; BSR set to: 15
  6592                           ;CANlib.h: 490: tamp = (identifier >> 3);
  6593  0011EC  C0AD  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  6594  0011F0  C0AE  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6595  0011F4  C0AF  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6596  0011F8  C0B0  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6597  0011FC  0E04               	movlw	4
  6598  0011FE  D005               	goto	u6030
  6599  001200                     u6035:
  6600  001200  90D8               	bcf	status,0,c
  6601  001202  3221               	rrcf	??_CANsendMessage+3,f,c
  6602  001204  3220               	rrcf	??_CANsendMessage+2,f,c
  6603  001206  321F               	rrcf	??_CANsendMessage+1,f,c
  6604  001208  321E               	rrcf	??_CANsendMessage,f,c
  6605  00120A                     u6030:
  6606  00120A  2EE8               	decfsz	wreg,f,c
  6607  00120C  D7F9               	goto	u6035
  6608  00120E  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6609  001212  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6610  001216  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6611  00121A  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6612                           
  6613                           ; BSR set to: 15
  6614                           ;CANlib.h: 491: tamp = tamp & 0x000000FF;
  6615  00121E  0100               	movlb	0	; () banked
  6616  001220  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  6617  001222  0100               	movlb	0	; () banked
  6618  001224  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6619  001226  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6620  001228  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6621  00122A  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6622                           
  6623                           ; BSR set to: 0
  6624                           ;CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  6625  00122C  C0B5  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;CANlib.h: 494: tamp = identifier & 0x00000007;
  6629  001230  0E07               	movlw	7
  6630  001232  0100               	movlb	0	; () banked
  6631  001234  15AD               	andwf	CANsendMessage@identifier& (0+255),w,b
  6632  001236  0100               	movlb	0	; () banked
  6633  001238  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6634  00123A  0E00               	movlw	0
  6635  00123C  0100               	movlb	0	; () banked
  6636  00123E  15AE               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6637  001240  0100               	movlb	0	; () banked
  6638  001242  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6639  001244  0E00               	movlw	0
  6640  001246  0100               	movlb	0	; () banked
  6641  001248  15AF               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6642  00124A  0100               	movlb	0	; () banked
  6643  00124C  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6644  00124E  0E00               	movlw	0
  6645  001250  0100               	movlb	0	; () banked
  6646  001252  15B0               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6647  001254  0100               	movlb	0	; () banked
  6648  001256  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;CANlib.h: 495: tamp = tamp << 5;
  6652  001258  C0B5  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  6653  00125C  C0B6  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6654  001260  C0B7  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6655  001264  C0B8  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6656  001268  0E05               	movlw	5
  6657  00126A                     u6045:
  6658  00126A  90D8               	bcf	status,0,c
  6659  00126C  361E               	rlcf	??_CANsendMessage,f,c
  6660  00126E  361F               	rlcf	??_CANsendMessage+1,f,c
  6661  001270  3620               	rlcf	??_CANsendMessage+2,f,c
  6662  001272  3621               	rlcf	??_CANsendMessage+3,f,c
  6663  001274  2EE8               	decfsz	wreg,f,c
  6664  001276  D7F9               	goto	u6045
  6665  001278  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6666  00127C  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6667  001280  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6668  001284  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  6672  001288  010F               	movlb	15	; () banked
  6673  00128A  5122               	movf	34,w,b	;volatile
  6674  00128C  0B1F               	andlw	31
  6675  00128E  010F               	movlb	15	; () banked
  6676  001290  6F22               	movwf	34,b	;volatile
  6677                           
  6678                           ; BSR set to: 15
  6679                           ;CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  6680  001292  C0B5  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  6681  001296                     l4650:
  6682                           
  6683                           ;CANlib.h: 498: }
  6684                           ;CANlib.h: 500: if (0b00000001 & flags)
  6685  001296  0100               	movlb	0	; () banked
  6686  001298  A1B4               	btfss	CANsendMessage@flags& (0+255),0,b
  6687  00129A  D003               	goto	l402
  6688                           
  6689                           ; BSR set to: 0
  6690                           ;CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  6691  00129C  010F               	movlb	15	; () banked
  6692  00129E  8120               	bsf	32,0,b	;volatile
  6693  0012A0  D002               	goto	l403
  6694  0012A2                     l402:
  6695                           
  6696                           ; BSR set to: 0
  6697                           ;CANlib.h: 502: else
  6698                           ;CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  6699  0012A2  010F               	movlb	15	; () banked
  6700  0012A4  9120               	bcf	32,0,b	;volatile
  6701  0012A6                     l403:
  6702                           
  6703                           ; BSR set to: 15
  6704                           ;CANlib.h: 504: if (0b00000010 & flags)
  6705  0012A6  0100               	movlb	0	; () banked
  6706  0012A8  A3B4               	btfss	CANsendMessage@flags& (0+255),1,b
  6707  0012AA  D003               	goto	l404
  6708                           
  6709                           ; BSR set to: 0
  6710                           ;CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  6711  0012AC  010F               	movlb	15	; () banked
  6712  0012AE  8320               	bsf	32,1,b	;volatile
  6713  0012B0  D002               	goto	l4656
  6714  0012B2                     l404:
  6715                           
  6716                           ; BSR set to: 0
  6717                           ;CANlib.h: 506: else
  6718                           ;CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  6719  0012B2  010F               	movlb	15	; () banked
  6720  0012B4  9320               	bcf	32,1,b	;volatile
  6721  0012B6                     l4656:
  6722                           
  6723                           ; BSR set to: 15
  6724                           ;CANlib.h: 509: TXB2D0 = data[0];
  6725  0012B6  C0B1  FFD9         	movff	CANsendMessage@data,fsr2l
  6726  0012BA  C0B2  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6727  0012BE  50DF               	movf	indf2,w,c
  6728  0012C0  010F               	movlb	15	; () banked
  6729  0012C2  6F26               	movwf	38,b	;volatile
  6730                           
  6731                           ; BSR set to: 15
  6732                           ;CANlib.h: 510: TXB2D1 = data[1];
  6733  0012C4  0100               	movlb	0	; () banked
  6734  0012C6  EE20 F001          	lfsr	2,1
  6735  0012CA  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6736  0012CC  26D9               	addwf	fsr2l,f,c
  6737  0012CE  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6738  0012D0  22DA               	addwfc	fsr2h,f,c
  6739  0012D2  50DF               	movf	indf2,w,c
  6740  0012D4  010F               	movlb	15	; () banked
  6741  0012D6  6F27               	movwf	39,b	;volatile
  6742                           
  6743                           ; BSR set to: 15
  6744                           ;CANlib.h: 511: TXB2D2 = data[2];
  6745  0012D8  0100               	movlb	0	; () banked
  6746  0012DA  EE20 F002          	lfsr	2,2
  6747  0012DE  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6748  0012E0  26D9               	addwf	fsr2l,f,c
  6749  0012E2  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6750  0012E4  22DA               	addwfc	fsr2h,f,c
  6751  0012E6  50DF               	movf	indf2,w,c
  6752  0012E8  010F               	movlb	15	; () banked
  6753  0012EA  6F28               	movwf	40,b	;volatile
  6754                           
  6755                           ; BSR set to: 15
  6756                           ;CANlib.h: 512: TXB2D3 = data[3];
  6757  0012EC  0100               	movlb	0	; () banked
  6758  0012EE  EE20 F003          	lfsr	2,3
  6759  0012F2  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6760  0012F4  26D9               	addwf	fsr2l,f,c
  6761  0012F6  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6762  0012F8  22DA               	addwfc	fsr2h,f,c
  6763  0012FA  50DF               	movf	indf2,w,c
  6764  0012FC  010F               	movlb	15	; () banked
  6765  0012FE  6F29               	movwf	41,b	;volatile
  6766                           
  6767                           ; BSR set to: 15
  6768                           ;CANlib.h: 513: TXB2D4 = data[4];
  6769  001300  0100               	movlb	0	; () banked
  6770  001302  EE20 F004          	lfsr	2,4
  6771  001306  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6772  001308  26D9               	addwf	fsr2l,f,c
  6773  00130A  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6774  00130C  22DA               	addwfc	fsr2h,f,c
  6775  00130E  50DF               	movf	indf2,w,c
  6776  001310  010F               	movlb	15	; () banked
  6777  001312  6F2A               	movwf	42,b	;volatile
  6778                           
  6779                           ; BSR set to: 15
  6780                           ;CANlib.h: 514: TXB2D5 = data[5];
  6781  001314  0100               	movlb	0	; () banked
  6782  001316  EE20 F005          	lfsr	2,5
  6783  00131A  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6784  00131C  26D9               	addwf	fsr2l,f,c
  6785  00131E  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6786  001320  22DA               	addwfc	fsr2h,f,c
  6787  001322  50DF               	movf	indf2,w,c
  6788  001324  010F               	movlb	15	; () banked
  6789  001326  6F2B               	movwf	43,b	;volatile
  6790                           
  6791                           ; BSR set to: 15
  6792                           ;CANlib.h: 515: TXB2D6 = data[6];
  6793  001328  0100               	movlb	0	; () banked
  6794  00132A  EE20 F006          	lfsr	2,6
  6795  00132E  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6796  001330  26D9               	addwf	fsr2l,f,c
  6797  001332  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6798  001334  22DA               	addwfc	fsr2h,f,c
  6799  001336  50DF               	movf	indf2,w,c
  6800  001338  010F               	movlb	15	; () banked
  6801  00133A  6F2C               	movwf	44,b	;volatile
  6802                           
  6803                           ; BSR set to: 15
  6804                           ;CANlib.h: 516: TXB2D7 = data[7];
  6805  00133C  0100               	movlb	0	; () banked
  6806  00133E  EE20 F007          	lfsr	2,7
  6807  001342  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6808  001344  26D9               	addwf	fsr2l,f,c
  6809  001346  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6810  001348  22DA               	addwfc	fsr2h,f,c
  6811  00134A  50DF               	movf	indf2,w,c
  6812  00134C  010F               	movlb	15	; () banked
  6813  00134E  6F2D               	movwf	45,b	;volatile
  6814                           
  6815                           ; BSR set to: 15
  6816                           ;CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  6817  001350  010F               	movlb	15	; () banked
  6818  001352  8720               	bsf	32,3,b	;volatile
  6819                           
  6820                           ; BSR set to: 15
  6821                           ;CANlib.h: 520: return;
  6822  001354  0012               	return	
  6823  001356                     __end_of_CANsendMessage:
  6824                           	opt stack 0
  6825                           tblptru	equ	0xFF8
  6826                           tblptrh	equ	0xFF7
  6827                           tblptrl	equ	0xFF6
  6828                           tablat	equ	0xFF5
  6829                           prodh	equ	0xFF4
  6830                           prodl	equ	0xFF3
  6831                           intcon	equ	0xFF2
  6832                           postinc0	equ	0xFEE
  6833                           wreg	equ	0xFE8
  6834                           indf1	equ	0xFE7
  6835                           postdec1	equ	0xFE5
  6836                           fsr1h	equ	0xFE2
  6837                           fsr1l	equ	0xFE1
  6838                           indf2	equ	0xFDF
  6839                           fsr2h	equ	0xFDA
  6840                           fsr2l	equ	0xFD9
  6841                           status	equ	0xFD8
  6842                           
  6843 ;; *************** function _CANisTxReady *****************
  6844 ;; Defined at:
  6845 ;;		line 1154 in file "CANlib.h"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;		None
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;		None
  6850 ;; Return value:  Size  Location     Type
  6851 ;;                  1    wreg      unsigned char 
  6852 ;; Registers used:
  6853 ;;		wreg, status,2
  6854 ;; Tracked objects:
  6855 ;;		On entry : 0/0
  6856 ;;		On exit  : 0/0
  6857 ;;		Unchanged: 0/0
  6858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6859 ;;      Params:         0       0       0       0
  6860 ;;      Locals:         1       0       0       0
  6861 ;;      Temps:          0       0       0       0
  6862 ;;      Totals:         1       0       0       0
  6863 ;;Total ram usage:        1 bytes
  6864 ;; Hardware stack levels used:    1
  6865 ;; Hardware stack levels required when called:    2
  6866 ;; This function calls:
  6867 ;;		Nothing
  6868 ;; This function is called by:
  6869 ;;		_send_data
  6870 ;;		_battery_measure
  6871 ;; This function uses a non-reentrant model
  6872 ;;
  6873                           
  6874                           	psect	text13
  6875  0025F8                     __ptext13:
  6876                           	opt stack 0
  6877  0025F8                     _CANisTxReady:
  6878                           	opt stack 27
  6879                           
  6880                           ;CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TXREQ)
      +                          ;
  6881                           
  6882                           ; BSR set to: 15
  6883                           ;incstack = 0
  6884  0025F8  0E01               	movlw	1
  6885  0025FA  6E1E               	movwf	_CANisTxReady$2993,c
  6886  0025FC  010F               	movlb	15	; () banked
  6887  0025FE  A740               	btfss	64,3,b	;volatile
  6888  002600  D008               	goto	l556
  6889                           
  6890                           ; BSR set to: 15
  6891  002602  010F               	movlb	15	; () banked
  6892  002604  A730               	btfss	48,3,b	;volatile
  6893  002606  D005               	goto	l556
  6894                           
  6895                           ; BSR set to: 15
  6896  002608  010F               	movlb	15	; () banked
  6897  00260A  A720               	btfss	32,3,b	;volatile
  6898  00260C  D002               	goto	l556
  6899                           
  6900                           ; BSR set to: 15
  6901  00260E  0E00               	movlw	0
  6902  002610  6E1E               	movwf	_CANisTxReady$2993,c
  6903  002612                     l556:
  6904                           
  6905                           ; BSR set to: 15
  6906  002612  501E               	movf	_CANisTxReady$2993,w,c
  6907  002614  0012               	return	
  6908  002616                     __end_of_CANisTxReady:
  6909                           	opt stack 0
  6910                           tblptru	equ	0xFF8
  6911                           tblptrh	equ	0xFF7
  6912                           tblptrl	equ	0xFF6
  6913                           tablat	equ	0xFF5
  6914                           prodh	equ	0xFF4
  6915                           prodl	equ	0xFF3
  6916                           intcon	equ	0xFF2
  6917                           postinc0	equ	0xFEE
  6918                           wreg	equ	0xFE8
  6919                           indf1	equ	0xFE7
  6920                           postdec1	equ	0xFE5
  6921                           fsr1h	equ	0xFE2
  6922                           fsr1l	equ	0xFE1
  6923                           indf2	equ	0xFDF
  6924                           fsr2h	equ	0xFDA
  6925                           fsr2l	equ	0xFD9
  6926                           status	equ	0xFD8
  6927                           
  6928 ;; *************** function _abs *****************
  6929 ;; Defined at:
  6930 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  6931 ;; Parameters:    Size  Location     Type
  6932 ;;  a               2    8[BANK0 ] int 
  6933 ;; Auto vars:     Size  Location     Type
  6934 ;;		None
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  2    8[BANK0 ] int 
  6937 ;; Registers used:
  6938 ;;		wreg, status,2, status,0
  6939 ;; Tracked objects:
  6940 ;;		On entry : 0/0
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6944 ;;      Params:         0       2       0       0
  6945 ;;      Locals:         0       0       0       0
  6946 ;;      Temps:          0       2       0       0
  6947 ;;      Totals:         0       4       0       0
  6948 ;;Total ram usage:        4 bytes
  6949 ;; Hardware stack levels used:    1
  6950 ;; Hardware stack levels required when called:    2
  6951 ;; This function calls:
  6952 ;;		Nothing
  6953 ;; This function is called by:
  6954 ;;		_main
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           	psect	text14
  6959  0025CC                     __ptext14:
  6960                           	opt stack 0
  6961  0025CC                     _abs:
  6962                           	opt stack 28
  6963                           
  6964                           ; BSR set to: 15
  6965                           ;incstack = 0
  6966  0025CC  0100               	movlb	0	; () banked
  6967  0025CE  AFB6               	btfss	(abs@a+1)& (0+255),7,b
  6968  0025D0  D00E               	goto	l816
  6969                           
  6970                           ; BSR set to: 0
  6971  0025D2  C0B5  F0B7         	movff	abs@a,??_abs
  6972  0025D6  C0B6  F0B8         	movff	abs@a+1,??_abs+1
  6973  0025DA  0100               	movlb	0	; () banked
  6974  0025DC  1FB7               	comf	??_abs& (0+255),f,b
  6975  0025DE  1FB8               	comf	(??_abs+1)& (0+255),f,b
  6976  0025E0  4BB7               	infsnz	??_abs& (0+255),f,b
  6977  0025E2  2BB8               	incf	(??_abs+1)& (0+255),f,b
  6978  0025E4  C0B7  F0B5         	movff	??_abs,?_abs
  6979  0025E8  C0B8  F0B6         	movff	??_abs+1,?_abs+1
  6980  0025EC  0012               	return	
  6981  0025EE                     l816:
  6982                           
  6983                           ; BSR set to: 0
  6984  0025EE  C0B5  F0B5         	movff	abs@a,?_abs
  6985  0025F2  C0B6  F0B6         	movff	abs@a+1,?_abs+1
  6986                           
  6987                           ; BSR set to: 0
  6988  0025F6  0012               	return		;funcret
  6989  0025F8                     __end_of_abs:
  6990                           	opt stack 0
  6991                           tblptru	equ	0xFF8
  6992                           tblptrh	equ	0xFF7
  6993                           tblptrl	equ	0xFF6
  6994                           tablat	equ	0xFF5
  6995                           prodh	equ	0xFF4
  6996                           prodl	equ	0xFF3
  6997                           intcon	equ	0xFF2
  6998                           postinc0	equ	0xFEE
  6999                           wreg	equ	0xFE8
  7000                           indf1	equ	0xFE7
  7001                           postdec1	equ	0xFE5
  7002                           fsr1h	equ	0xFE2
  7003                           fsr1l	equ	0xFE1
  7004                           indf2	equ	0xFDF
  7005                           fsr2h	equ	0xFDA
  7006                           fsr2l	equ	0xFD9
  7007                           status	equ	0xFD8
  7008                           
  7009 ;; *************** function _SetDCEPWM1 *****************
  7010 ;; Defined at:
  7011 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;  dutycycle       2   29[COMRAM] unsigned int 
  7014 ;; Auto vars:     Size  Location     Type
  7015 ;;  DCycle          2   33[COMRAM] struct PWMDC
  7016 ;; Return value:  Size  Location     Type
  7017 ;;		None               void
  7018 ;; Registers used:
  7019 ;;		wreg, status,2, status,0
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7025 ;;      Params:         2       0       0       0
  7026 ;;      Locals:         2       0       0       0
  7027 ;;      Temps:          2       0       0       0
  7028 ;;      Totals:         6       0       0       0
  7029 ;;Total ram usage:        6 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:    2
  7032 ;; This function calls:
  7033 ;;		Nothing
  7034 ;; This function is called by:
  7035 ;;		_main
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           	psect	text15
  7040  00252C                     __ptext15:
  7041                           	opt stack 0
  7042  00252C                     _SetDCEPWM1:
  7043                           	opt stack 28
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;incstack = 0
  7047  00252C  C01E  F020         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  7048  002530  C01F  F021         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  7049  002534  0E06               	movlw	6
  7050  002536                     u4175:
  7051  002536  90D8               	bcf	status,0,c
  7052  002538  3620               	rlcf	??_SetDCEPWM1,f,c
  7053  00253A  3621               	rlcf	??_SetDCEPWM1+1,f,c
  7054  00253C  2EE8               	decfsz	wreg,f,c
  7055  00253E  D7FB               	goto	u4175
  7056  002540  C020  F022         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  7057  002544  C021  F023         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  7058  002548  C023  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  7059  00254C  C022  F020         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  7060  002550  90D8               	bcf	status,0,c
  7061  002552  3220               	rrcf	??_SetDCEPWM1,f,c
  7062  002554  90D8               	bcf	status,0,c
  7063  002556  3220               	rrcf	??_SetDCEPWM1,f,c
  7064  002558  0E30               	movlw	48
  7065  00255A  1620               	andwf	??_SetDCEPWM1,f,c
  7066  00255C  50BA               	movf	4026,w,c	;volatile
  7067  00255E  0BCF               	andlw	207
  7068  002560  1020               	iorwf	??_SetDCEPWM1,w,c
  7069  002562  6EBA               	movwf	4026,c	;volatile
  7070  002564  0012               	return		;funcret
  7071  002566                     __end_of_SetDCEPWM1:
  7072                           	opt stack 0
  7073                           tblptru	equ	0xFF8
  7074                           tblptrh	equ	0xFF7
  7075                           tblptrl	equ	0xFF6
  7076                           tablat	equ	0xFF5
  7077                           prodh	equ	0xFF4
  7078                           prodl	equ	0xFF3
  7079                           intcon	equ	0xFF2
  7080                           postinc0	equ	0xFEE
  7081                           wreg	equ	0xFE8
  7082                           indf1	equ	0xFE7
  7083                           postdec1	equ	0xFE5
  7084                           fsr1h	equ	0xFE2
  7085                           fsr1l	equ	0xFE1
  7086                           indf2	equ	0xFDF
  7087                           fsr2h	equ	0xFDA
  7088                           fsr2l	equ	0xFD9
  7089                           status	equ	0xFD8
  7090                           
  7091 ;; *************** function _OpenTimer2 *****************
  7092 ;; Defined at:
  7093 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;  config          1    wreg     unsigned char 
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  config          1   29[COMRAM] unsigned char 
  7098 ;; Return value:  Size  Location     Type
  7099 ;;		None               void
  7100 ;; Registers used:
  7101 ;;		wreg, status,2, status,0
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : 0/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7107 ;;      Params:         0       0       0       0
  7108 ;;      Locals:         1       0       0       0
  7109 ;;      Temps:          0       0       0       0
  7110 ;;      Totals:         1       0       0       0
  7111 ;;Total ram usage:        1 bytes
  7112 ;; Hardware stack levels used:    1
  7113 ;; Hardware stack levels required when called:    2
  7114 ;; This function calls:
  7115 ;;		Nothing
  7116 ;; This function is called by:
  7117 ;;		_main
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121                           	psect	text16
  7122  002616                     __ptext16:
  7123                           	opt stack 0
  7124  002616                     _OpenTimer2:
  7125                           	opt stack 28
  7126                           
  7127                           ;incstack = 0
  7128                           ;OpenTimer2@config stored from wreg
  7129  002616  6E1E               	movwf	OpenTimer2@config,c
  7130  002618  501E               	movf	OpenTimer2@config,w,c
  7131  00261A  0BFB               	andlw	251
  7132  00261C  6ECA               	movwf	4042,c	;volatile
  7133  00261E  0E00               	movlw	0
  7134  002620  6ECC               	movwf	4044,c	;volatile
  7135  002622  929E               	bcf	3998,1,c	;volatile
  7136  002624  AE1E               	btfss	OpenTimer2@config,7,c
  7137  002626  D002               	goto	l764
  7138  002628  829D               	bsf	3997,1,c	;volatile
  7139  00262A  D001               	goto	l765
  7140  00262C                     l764:
  7141  00262C  929D               	bcf	3997,1,c	;volatile
  7142  00262E                     l765:
  7143  00262E  84CA               	bsf	4042,2,c	;volatile
  7144  002630  0012               	return		;funcret
  7145  002632                     __end_of_OpenTimer2:
  7146                           	opt stack 0
  7147                           tblptru	equ	0xFF8
  7148                           tblptrh	equ	0xFF7
  7149                           tblptrl	equ	0xFF6
  7150                           tablat	equ	0xFF5
  7151                           prodh	equ	0xFF4
  7152                           prodl	equ	0xFF3
  7153                           intcon	equ	0xFF2
  7154                           postinc0	equ	0xFEE
  7155                           wreg	equ	0xFE8
  7156                           indf1	equ	0xFE7
  7157                           postdec1	equ	0xFE5
  7158                           fsr1h	equ	0xFE2
  7159                           fsr1l	equ	0xFE1
  7160                           indf2	equ	0xFDF
  7161                           fsr2h	equ	0xFDA
  7162                           fsr2l	equ	0xFD9
  7163                           status	equ	0xFD8
  7164                           
  7165 ;; *************** function _OpenEPWM1 *****************
  7166 ;; Defined at:
  7167 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  period          1    wreg     unsigned char 
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;  period          1   29[COMRAM] unsigned char 
  7172 ;; Return value:  Size  Location     Type
  7173 ;;		None               void
  7174 ;; Registers used:
  7175 ;;		wreg, status,2
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7181 ;;      Params:         0       0       0       0
  7182 ;;      Locals:         1       0       0       0
  7183 ;;      Temps:          0       0       0       0
  7184 ;;      Totals:         1       0       0       0
  7185 ;;Total ram usage:        1 bytes
  7186 ;; Hardware stack levels used:    1
  7187 ;; Hardware stack levels required when called:    2
  7188 ;; This function calls:
  7189 ;;		Nothing
  7190 ;; This function is called by:
  7191 ;;		_main
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           	psect	text17
  7196  00265A                     __ptext17:
  7197                           	opt stack 0
  7198  00265A                     _OpenEPWM1:
  7199                           	opt stack 28
  7200                           
  7201                           ;incstack = 0
  7202                           ;OpenEPWM1@period stored from wreg
  7203  00265A  6E1E               	movwf	OpenEPWM1@period,c
  7204  00265C  0E0C               	movlw	12
  7205  00265E  6EBA               	movwf	4026,c	;volatile
  7206  002660  94CA               	bcf	4042,2,c	;volatile
  7207  002662  C01E  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  7208  002666  84CA               	bsf	4042,2,c	;volatile
  7209  002668  0012               	return		;funcret
  7210  00266A                     __end_of_OpenEPWM1:
  7211                           	opt stack 0
  7212                           tblptru	equ	0xFF8
  7213                           tblptrh	equ	0xFF7
  7214                           tblptrl	equ	0xFF6
  7215                           tablat	equ	0xFF5
  7216                           prodh	equ	0xFF4
  7217                           prodl	equ	0xFF3
  7218                           intcon	equ	0xFF2
  7219                           postinc0	equ	0xFEE
  7220                           wreg	equ	0xFE8
  7221                           indf1	equ	0xFE7
  7222                           postdec1	equ	0xFE5
  7223                           fsr1h	equ	0xFE2
  7224                           fsr1l	equ	0xFE1
  7225                           indf2	equ	0xFDF
  7226                           fsr2h	equ	0xFDA
  7227                           fsr2l	equ	0xFD9
  7228                           status	equ	0xFD8
  7229                           
  7230 ;; *************** function _CANisTXwarningON *****************
  7231 ;; Defined at:
  7232 ;;		line 1119 in file "CANlib.h"
  7233 ;; Parameters:    Size  Location     Type
  7234 ;;		None
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;		None
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  1    wreg      unsigned char 
  7239 ;; Registers used:
  7240 ;;		wreg
  7241 ;; Tracked objects:
  7242 ;;		On entry : 0/0
  7243 ;;		On exit  : 0/0
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7246 ;;      Params:         0       0       0       0
  7247 ;;      Locals:         0       0       0       0
  7248 ;;      Temps:          0       0       0       0
  7249 ;;      Totals:         0       0       0       0
  7250 ;;Total ram usage:        0 bytes
  7251 ;; Hardware stack levels used:    1
  7252 ;; Hardware stack levels required when called:    2
  7253 ;; This function calls:
  7254 ;;		Nothing
  7255 ;; This function is called by:
  7256 ;;		_main
  7257 ;; This function uses a non-reentrant model
  7258 ;;
  7259                           
  7260                           	psect	text18
  7261  00266A                     __ptext18:
  7262                           	opt stack 0
  7263  00266A                     _CANisTXwarningON:
  7264                           	opt stack 28
  7265                           
  7266                           ;CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7267                           
  7268                           ;incstack = 0
  7269  00266A  A474               	btfss	3956,2,c	;volatile
  7270  00266C  D002               	goto	u4120
  7271  00266E  0E01               	movlw	1
  7272  002670  0012               	return	
  7273  002672                     u4120:
  7274  002672  0E00               	movlw	0
  7275  002674  0012               	return	
  7276  002676                     __end_of_CANisTXwarningON:
  7277                           	opt stack 0
  7278                           tblptru	equ	0xFF8
  7279                           tblptrh	equ	0xFF7
  7280                           tblptrl	equ	0xFF6
  7281                           tablat	equ	0xFF5
  7282                           prodh	equ	0xFF4
  7283                           prodl	equ	0xFF3
  7284                           intcon	equ	0xFF2
  7285                           postinc0	equ	0xFEE
  7286                           wreg	equ	0xFE8
  7287                           indf1	equ	0xFE7
  7288                           postdec1	equ	0xFE5
  7289                           fsr1h	equ	0xFE2
  7290                           fsr1l	equ	0xFE1
  7291                           indf2	equ	0xFDF
  7292                           fsr2h	equ	0xFDA
  7293                           fsr2l	equ	0xFD9
  7294                           status	equ	0xFD8
  7295                           
  7296 ;; *************** function _CANisRXwarningON *****************
  7297 ;; Defined at:
  7298 ;;		line 1127 in file "CANlib.h"
  7299 ;; Parameters:    Size  Location     Type
  7300 ;;		None
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;		None
  7303 ;; Return value:  Size  Location     Type
  7304 ;;                  1    wreg      unsigned char 
  7305 ;; Registers used:
  7306 ;;		wreg
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7312 ;;      Params:         0       0       0       0
  7313 ;;      Locals:         0       0       0       0
  7314 ;;      Temps:          0       0       0       0
  7315 ;;      Totals:         0       0       0       0
  7316 ;;Total ram usage:        0 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; Hardware stack levels required when called:    2
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_main
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text19
  7327  002676                     __ptext19:
  7328                           	opt stack 0
  7329  002676                     _CANisRXwarningON:
  7330                           	opt stack 28
  7331                           
  7332                           ;CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7333                           
  7334                           ;incstack = 0
  7335  002676  A274               	btfss	3956,1,c	;volatile
  7336  002678  D002               	goto	u4130
  7337  00267A  0E01               	movlw	1
  7338  00267C  0012               	return	
  7339  00267E                     u4130:
  7340  00267E  0E00               	movlw	0
  7341  002680  0012               	return	
  7342  002682                     __end_of_CANisRXwarningON:
  7343                           	opt stack 0
  7344                           tblptru	equ	0xFF8
  7345                           tblptrh	equ	0xFF7
  7346                           tblptrl	equ	0xFF6
  7347                           tablat	equ	0xFF5
  7348                           prodh	equ	0xFF4
  7349                           prodl	equ	0xFF3
  7350                           intcon	equ	0xFF2
  7351                           postinc0	equ	0xFEE
  7352                           wreg	equ	0xFE8
  7353                           indf1	equ	0xFE7
  7354                           postdec1	equ	0xFE5
  7355                           fsr1h	equ	0xFE2
  7356                           fsr1l	equ	0xFE1
  7357                           indf2	equ	0xFDF
  7358                           fsr2h	equ	0xFDA
  7359                           fsr2l	equ	0xFD9
  7360                           status	equ	0xFD8
  7361                           
  7362 ;; *************** function _ISR_bassa *****************
  7363 ;; Defined at:
  7364 ;;		line 90 in file "motore.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;		None
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;		None
  7369 ;; Return value:  Size  Location     Type
  7370 ;;		None               void
  7371 ;; Registers used:
  7372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7378 ;;      Params:         0       0       0       0
  7379 ;;      Locals:         0       0       0       0
  7380 ;;      Temps:         17       0       0       0
  7381 ;;      Totals:        17       0       0       0
  7382 ;;Total ram usage:       17 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; Hardware stack levels required when called:    1
  7385 ;; This function calls:
  7386 ;;		_CANisRxReady
  7387 ;;		_CANreceiveMessage
  7388 ;;		i1_SetOutputEPWM1
  7389 ;; This function is called by:
  7390 ;;		Interrupt level 1
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394                           	psect	intcodelo
  7395  000018                     __pintcodelo:
  7396                           	opt stack 0
  7397  000018                     _ISR_bassa:
  7398                           	opt stack 26
  7399                           
  7400                           ;incstack = 0
  7401  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7402  00001A  CFD8 F00D          	movff	status,??_ISR_bassa
  7403  00001E  CFE8 F00E          	movff	wreg,??_ISR_bassa+1
  7404  000022  CFE0 F00F          	movff	bsr,??_ISR_bassa+2
  7405  000026  CFFA F010          	movff	pclath,??_ISR_bassa+3
  7406  00002A  CFFB F011          	movff	pclatu,??_ISR_bassa+4
  7407  00002E  CFE9 F012          	movff	fsr0l,??_ISR_bassa+5
  7408  000032  CFEA F013          	movff	fsr0h,??_ISR_bassa+6
  7409  000036  CFE1 F014          	movff	fsr1l,??_ISR_bassa+7
  7410  00003A  CFE2 F015          	movff	fsr1h,??_ISR_bassa+8
  7411  00003E  CFD9 F016          	movff	fsr2l,??_ISR_bassa+9
  7412  000042  CFDA F017          	movff	fsr2h,??_ISR_bassa+10
  7413  000046  CFF3 F018          	movff	prodl,??_ISR_bassa+11
  7414  00004A  CFF4 F019          	movff	prodh,??_ISR_bassa+12
  7415  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_bassa+13
  7416  000052  CFF7 F01B          	movff	tblptrh,??_ISR_bassa+14
  7417  000056  CFF8 F01C          	movff	tblptru,??_ISR_bassa+15
  7418  00005A  CFF5 F01D          	movff	tablat,??_ISR_bassa+16
  7419                           
  7420                           ;motore.c: 91: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7421  00005E  A0A4               	btfss	4004,0,c	;volatile
  7422  000060  B2A4               	btfsc	4004,1,c	;volatile
  7423  000062  D001               	goto	i1l3812
  7424  000064  D068               	goto	i1l650
  7425  000066                     i1l3812:
  7426                           
  7427                           ;motore.c: 92: if (CANisRxReady()) {
  7428  000066  EC19  F013         	call	_CANisRxReady	;wreg free
  7429  00006A  0900               	iorlw	0
  7430  00006C  B4D8               	btfsc	status,2,c
  7431  00006E  D061               	goto	i1l653
  7432                           
  7433                           ;motore.c: 93: CANreceiveMessage(&msg);
  7434  000070  0E86               	movlw	low _msg
  7435  000072  6E01               	movwf	CANreceiveMessage@msg,c
  7436  000074  0E00               	movlw	high _msg
  7437  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  7438  000078  ECAB  F009         	call	_CANreceiveMessage	;wreg free
  7439                           
  7440                           ;motore.c: 94: if (msg.identifier == 0b00000000000000000000000000011) {
  7441  00007C  0E03               	movlw	3
  7442  00007E  0100               	movlb	0	; () banked
  7443  000080  1986               	xorwf	_msg& (0+255),w,b
  7444  000082  0100               	movlb	0	; () banked
  7445  000084  1187               	iorwf	(_msg+1)& (0+255),w,b
  7446  000086  0100               	movlb	0	; () banked
  7447  000088  1188               	iorwf	(_msg+2)& (0+255),w,b
  7448  00008A  0100               	movlb	0	; () banked
  7449  00008C  1189               	iorwf	(_msg+3)& (0+255),w,b
  7450  00008E  A4D8               	btfss	status,2,c
  7451  000090  D017               	goto	i1l3828
  7452                           
  7453                           ; BSR set to: 0
  7454                           ;motore.c: 96: requestSpeed = msg.data[0];
  7455  000092  C08A  F036         	movff	_msg+4,_requestSpeed	;volatile
  7456                           
  7457                           ;motore.c: 97: dir = msg.data[1];
  7458  000096  C08B  F03A         	movff	_msg+5,_dir	;volatile
  7459  00009A  6A3B               	clrf	_dir+1,c	;volatile
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;motore.c: 98: if (dir == 1) {
  7463  00009C  043A               	decf	_dir,w,c	;volatile
  7464  00009E  103B               	iorwf	_dir+1,w,c	;volatile
  7465  0000A0  A4D8               	btfss	status,2,c
  7466  0000A2  D005               	goto	i1l3824
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;motore.c: 99: SetOutputEPWM1(0b01111111, 0b11111100);
  7470  0000A4  0EFC               	movlw	252
  7471  0000A6  6E01               	movwf	i1SetOutputEPWM1@outputmode,c
  7472  0000A8  0E7F               	movlw	127
  7473  0000AA  EC74  F012         	call	i1_SetOutputEPWM1
  7474  0000AE                     i1l3824:
  7475                           
  7476                           ;motore.c: 100: }
  7477                           ;motore.c: 101: if (dir == 0) {
  7478  0000AE  503A               	movf	_dir,w,c	;volatile
  7479  0000B0  103B               	iorwf	_dir+1,w,c	;volatile
  7480  0000B2  A4D8               	btfss	status,2,c
  7481  0000B4  D005               	goto	i1l3828
  7482                           
  7483                           ;motore.c: 102: SetOutputEPWM1(0b11111111, 0b11111100);
  7484  0000B6  0EFC               	movlw	252
  7485  0000B8  6E01               	movwf	i1SetOutputEPWM1@outputmode,c
  7486  0000BA  0EFF               	movlw	255
  7487  0000BC  EC74  F012         	call	i1_SetOutputEPWM1
  7488  0000C0                     i1l3828:
  7489                           
  7490                           ;motore.c: 103: }
  7491                           ;motore.c: 107: }
  7492                           ;motore.c: 108: if (msg.identifier == 0b00000000000000000000000000001) {
  7493  0000C0  0100               	movlb	0	; () banked
  7494  0000C2  0586               	decf	_msg& (0+255),w,b
  7495  0000C4  0100               	movlb	0	; () banked
  7496  0000C6  1187               	iorwf	(_msg+1)& (0+255),w,b
  7497  0000C8  0100               	movlb	0	; () banked
  7498  0000CA  1188               	iorwf	(_msg+2)& (0+255),w,b
  7499  0000CC  0100               	movlb	0	; () banked
  7500  0000CE  1189               	iorwf	(_msg+3)& (0+255),w,b
  7501  0000D0  A4D8               	btfss	status,2,c
  7502  0000D2  D003               	goto	i1l3834
  7503                           
  7504                           ; BSR set to: 0
  7505                           ;motore.c: 109: requestSpeed = 0;
  7506  0000D4  0E00               	movlw	0
  7507  0000D6  6E36               	movwf	_requestSpeed,c	;volatile
  7508                           
  7509                           ; BSR set to: 0
  7510                           ;motore.c: 110: PORTAbits.RA1 = 1;
  7511  0000D8  8280               	bsf	3968,1,c	;volatile
  7512  0000DA                     i1l3834:
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;motore.c: 111: }
  7516                           ;motore.c: 112: if (msg.identifier == 0b00000000000000000000000000110) {
  7517  0000DA  0E06               	movlw	6
  7518  0000DC  0100               	movlb	0	; () banked
  7519  0000DE  1986               	xorwf	_msg& (0+255),w,b
  7520  0000E0  0100               	movlb	0	; () banked
  7521  0000E2  1187               	iorwf	(_msg+1)& (0+255),w,b
  7522  0000E4  0100               	movlb	0	; () banked
  7523  0000E6  1188               	iorwf	(_msg+2)& (0+255),w,b
  7524  0000E8  0100               	movlb	0	; () banked
  7525  0000EA  1189               	iorwf	(_msg+3)& (0+255),w,b
  7526  0000EC  A4D8               	btfss	status,2,c
  7527  0000EE  D005               	goto	i1l3838
  7528                           
  7529                           ; BSR set to: 0
  7530                           ;motore.c: 114: left_speed = msg.data[0];
  7531  0000F0  C08A  F035         	movff	_msg+4,_left_speed
  7532                           
  7533                           ;motore.c: 115: right_speed = msg.data[1];
  7534  0000F4  C08B  F037         	movff	_msg+5,_right_speed
  7535                           
  7536                           ;motore.c: 116: speed_fetched = 1;
  7537  0000F8  8039               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
  7538  0000FA                     i1l3838:
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;motore.c: 118: }
  7542                           ;motore.c: 119: if (msg.identifier == 0b00000000000000000000000000010) {
  7543  0000FA  0E02               	movlw	2
  7544  0000FC  0100               	movlb	0	; () banked
  7545  0000FE  1986               	xorwf	_msg& (0+255),w,b
  7546  000100  0100               	movlb	0	; () banked
  7547  000102  1187               	iorwf	(_msg+1)& (0+255),w,b
  7548  000104  0100               	movlb	0	; () banked
  7549  000106  1188               	iorwf	(_msg+2)& (0+255),w,b
  7550  000108  0100               	movlb	0	; () banked
  7551  00010A  1189               	iorwf	(_msg+3)& (0+255),w,b
  7552  00010C  B4D8               	btfsc	status,2,c
  7553  00010E  D006               	goto	i1l3844
  7554  000110  D010               	goto	i1l653
  7555  000112                     i1l661:
  7556                           
  7557                           ; BSR set to: 0
  7558  000112  8238               	bsf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  7559                           
  7560                           ;motore.c: 122: break;
  7561  000114  D00E               	goto	i1l653
  7562  000116                     i1l663:
  7563                           
  7564                           ; BSR set to: 0
  7565  000116  8638               	bsf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  7566  000118                     i1l664:
  7567                           
  7568                           ; BSR set to: 0
  7569  000118  8438               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  7570                           
  7571                           ; BSR set to: 0
  7572                           ;motore.c: 128: }
  7573                           
  7574                           ;motore.c: 127: break;
  7575  00011A  D00B               	goto	i1l653
  7576  00011C                     i1l3844:
  7577                           
  7578                           ; BSR set to: 0
  7579  00011C  0100               	movlb	0	; () banked
  7580  00011E  518A               	movf	(_msg+4)& (0+255),w,b
  7581                           
  7582                           ; Switch size 1, requested type "space"
  7583                           ; Number of cases is 3, Range of values is 1 to 3
  7584                           ; switch strategies available:
  7585                           ; Name         Instructions Cycles
  7586                           ; simple_byte           10     6 (average)
  7587                           ;	Chosen strategy is simple_byte
  7588  000120  0A01               	xorlw	1	; case 1
  7589  000122  B4D8               	btfsc	status,2,c
  7590  000124  D7F6               	goto	i1l661
  7591  000126  0A03               	xorlw	3	; case 2
  7592  000128  B4D8               	btfsc	status,2,c
  7593  00012A  D7F5               	goto	i1l663
  7594  00012C  0A01               	xorlw	1	; case 3
  7595  00012E  B4D8               	btfsc	status,2,c
  7596  000130  D7F3               	goto	i1l664
  7597  000132                     i1l653:
  7598                           
  7599                           ;motore.c: 130: }
  7600                           ;motore.c: 131: }
  7601                           ;motore.c: 132: PIR3bits.RXB0IF = 0;
  7602  000132  90A4               	bcf	4004,0,c	;volatile
  7603                           
  7604                           ;motore.c: 133: PIR3bits.RXB1IF = 0;
  7605  000134  92A4               	bcf	4004,1,c	;volatile
  7606  000136                     i1l650:
  7607                           
  7608                           ;motore.c: 134: }
  7609                           ;motore.c: 135: if (PIR2bits.TMR3IF) {
  7610  000136  A2A1               	btfss	4001,1,c	;volatile
  7611  000138  D00B               	goto	i1l666
  7612                           
  7613                           ;motore.c: 136: timeCounter++;
  7614  00013A  0E01               	movlw	1
  7615  00013C  2629               	addwf	_timeCounter,f,c
  7616  00013E  0E00               	movlw	0
  7617  000140  222A               	addwfc	_timeCounter+1,f,c
  7618  000142  222B               	addwfc	_timeCounter+2,f,c
  7619  000144  222C               	addwfc	_timeCounter+3,f,c
  7620                           
  7621                           ;motore.c: 137: TMR3H = 0x63;
  7622  000146  0E63               	movlw	99
  7623  000148  6EB3               	movwf	4019,c	;volatile
  7624                           
  7625                           ;motore.c: 138: TMR3L = 0xC0;
  7626  00014A  0EC0               	movlw	192
  7627  00014C  6EB2               	movwf	4018,c	;volatile
  7628                           
  7629                           ;motore.c: 139: PIR2bits.TMR3IF = 0;
  7630  00014E  92A1               	bcf	4001,1,c	;volatile
  7631  000150                     i1l666:
  7632  000150  C01D  FFF5         	movff	??_ISR_bassa+16,tablat
  7633  000154  C01C  FFF8         	movff	??_ISR_bassa+15,tblptru
  7634  000158  C01B  FFF7         	movff	??_ISR_bassa+14,tblptrh
  7635  00015C  C01A  FFF6         	movff	??_ISR_bassa+13,tblptrl
  7636  000160  C019  FFF4         	movff	??_ISR_bassa+12,prodh
  7637  000164  C018  FFF3         	movff	??_ISR_bassa+11,prodl
  7638  000168  C017  FFDA         	movff	??_ISR_bassa+10,fsr2h
  7639  00016C  C016  FFD9         	movff	??_ISR_bassa+9,fsr2l
  7640  000170  C015  FFE2         	movff	??_ISR_bassa+8,fsr1h
  7641  000174  C014  FFE1         	movff	??_ISR_bassa+7,fsr1l
  7642  000178  C013  FFEA         	movff	??_ISR_bassa+6,fsr0h
  7643  00017C  C012  FFE9         	movff	??_ISR_bassa+5,fsr0l
  7644  000180  C011  FFFB         	movff	??_ISR_bassa+4,pclatu
  7645  000184  C010  FFFA         	movff	??_ISR_bassa+3,pclath
  7646  000188  C00F  FFE0         	movff	??_ISR_bassa+2,bsr
  7647  00018C  C00E  FFE8         	movff	??_ISR_bassa+1,wreg
  7648  000190  C00D  FFD8         	movff	??_ISR_bassa,status
  7649  000194  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7650  000196  0010               	retfie	
  7651  000198                     __end_of_ISR_bassa:
  7652                           	opt stack 0
  7653                           pclatu	equ	0xFFB
  7654                           pclath	equ	0xFFA
  7655                           tblptru	equ	0xFF8
  7656                           tblptrh	equ	0xFF7
  7657                           tblptrl	equ	0xFF6
  7658                           tablat	equ	0xFF5
  7659                           prodh	equ	0xFF4
  7660                           prodl	equ	0xFF3
  7661                           intcon	equ	0xFF2
  7662                           postinc0	equ	0xFEE
  7663                           fsr0h	equ	0xFEA
  7664                           fsr0l	equ	0xFE9
  7665                           wreg	equ	0xFE8
  7666                           indf1	equ	0xFE7
  7667                           postdec1	equ	0xFE5
  7668                           fsr1h	equ	0xFE2
  7669                           fsr1l	equ	0xFE1
  7670                           bsr	equ	0xFE0
  7671                           indf2	equ	0xFDF
  7672                           fsr2h	equ	0xFDA
  7673                           fsr2l	equ	0xFD9
  7674                           status	equ	0xFD8
  7675                           
  7676 ;; *************** function i1_SetOutputEPWM1 *****************
  7677 ;; Defined at:
  7678 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;  outputconfig    1    wreg     unsigned char 
  7681 ;;  outputmode      1    0[COMRAM] unsigned char 
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;  outputconfig    1    1[COMRAM] unsigned char 
  7684 ;; Return value:  Size  Location     Type
  7685 ;;		None               void
  7686 ;; Registers used:
  7687 ;;		wreg, status,2, status,0
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7693 ;;      Params:         1       0       0       0
  7694 ;;      Locals:         1       0       0       0
  7695 ;;      Temps:          0       0       0       0
  7696 ;;      Totals:         2       0       0       0
  7697 ;;Total ram usage:        2 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; This function calls:
  7700 ;;		Nothing
  7701 ;; This function is called by:
  7702 ;;		_ISR_bassa
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text21
  7707  0024E8                     __ptext21:
  7708                           	opt stack 0
  7709  0024E8                     i1_SetOutputEPWM1:
  7710                           	opt stack 26
  7711                           
  7712                           ;incstack = 0
  7713                           ;i1SetOutputEPWM1@outputconfig stored from wreg
  7714  0024E8  6E02               	movwf	i1SetOutputEPWM1@outputconfig,c
  7715  0024EA  50BA               	movf	4026,w,c	;volatile
  7716  0024EC  09C0               	iorlw	192
  7717  0024EE  1402               	andwf	i1SetOutputEPWM1@outputconfig,w,c
  7718  0024F0  6EBA               	movwf	4026,c	;volatile
  7719  0024F2  50BA               	movf	4026,w,c	;volatile
  7720  0024F4  090F               	iorlw	15
  7721  0024F6  1401               	andwf	i1SetOutputEPWM1@outputmode,w,c
  7722  0024F8  6EBA               	movwf	4026,c	;volatile
  7723  0024FA  0E3F               	movlw	63
  7724  0024FC  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  7725  0024FE  A4D8               	btfss	status,2,c
  7726  002500  D002               	goto	i1l3792
  7727  002502  9895               	bcf	3989,4,c	;volatile
  7728  002504  0012               	return	
  7729  002506                     i1l3792:
  7730  002506  0EBF               	movlw	191
  7731  002508  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  7732  00250A  A4D8               	btfss	status,2,c
  7733  00250C  D003               	goto	i1l3796
  7734  00250E  9895               	bcf	3989,4,c	;volatile
  7735  002510  9A95               	bcf	3989,5,c	;volatile
  7736  002512  0012               	return	
  7737  002514                     i1l3796:
  7738  002514  0E7F               	movlw	127
  7739  002516  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  7740  002518  B4D8               	btfsc	status,2,c
  7741  00251A  D003               	goto	i1l750
  7742  00251C  2802               	incf	i1SetOutputEPWM1@outputconfig,w,c
  7743  00251E  A4D8               	btfss	status,2,c
  7744  002520  0012               	return	
  7745  002522                     i1l750:
  7746  002522  9895               	bcf	3989,4,c	;volatile
  7747  002524  9A95               	bcf	3989,5,c	;volatile
  7748  002526  9C95               	bcf	3989,6,c	;volatile
  7749  002528  9E95               	bcf	3989,7,c	;volatile
  7750  00252A  0012               	return	
  7751  00252C                     __end_ofi1_SetOutputEPWM1:
  7752                           	opt stack 0
  7753                           pclatu	equ	0xFFB
  7754                           pclath	equ	0xFFA
  7755                           tblptru	equ	0xFF8
  7756                           tblptrh	equ	0xFF7
  7757                           tblptrl	equ	0xFF6
  7758                           tablat	equ	0xFF5
  7759                           prodh	equ	0xFF4
  7760                           prodl	equ	0xFF3
  7761                           intcon	equ	0xFF2
  7762                           postinc0	equ	0xFEE
  7763                           fsr0h	equ	0xFEA
  7764                           fsr0l	equ	0xFE9
  7765                           wreg	equ	0xFE8
  7766                           indf1	equ	0xFE7
  7767                           postdec1	equ	0xFE5
  7768                           fsr1h	equ	0xFE2
  7769                           fsr1l	equ	0xFE1
  7770                           bsr	equ	0xFE0
  7771                           indf2	equ	0xFDF
  7772                           fsr2h	equ	0xFDA
  7773                           fsr2l	equ	0xFD9
  7774                           status	equ	0xFD8
  7775                           
  7776 ;; *************** function _CANreceiveMessage *****************
  7777 ;; Defined at:
  7778 ;;		line 528 in file "CANlib.h"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;  msg             2    0[COMRAM] PTR struct .
  7781 ;;		 -> msg(15), 
  7782 ;; Auto vars:     Size  Location     Type
  7783 ;;  tamp            1   11[COMRAM] unsigned char 
  7784 ;;  error           1   10[COMRAM] unsigned char 
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  1    wreg      unsigned char 
  7787 ;; Registers used:
  7788 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7789 ;; Tracked objects:
  7790 ;;		On entry : 0/0
  7791 ;;		On exit  : 0/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7794 ;;      Params:         2       0       0       0
  7795 ;;      Locals:         2       0       0       0
  7796 ;;      Temps:          8       0       0       0
  7797 ;;      Totals:        12       0       0       0
  7798 ;;Total ram usage:       12 bytes
  7799 ;; Hardware stack levels used:    1
  7800 ;; This function calls:
  7801 ;;		Nothing
  7802 ;; This function is called by:
  7803 ;;		_ISR_bassa
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           	psect	text22
  7808  001356                     __ptext22:
  7809                           	opt stack 0
  7810  001356                     _CANreceiveMessage:
  7811                           	opt stack 26
  7812                           
  7813                           ;CANlib.h: 530: BYTE tamp;
  7814                           ;CANlib.h: 531: BYTE error = 0;
  7815                           
  7816                           ;incstack = 0
  7817  001356  0E00               	movlw	0
  7818  001358  6E0B               	movwf	CANreceiveMessage@error,c
  7819                           
  7820                           ;CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7821  00135A  BE74               	btfsc	3956,7,c	;volatile
  7822                           
  7823                           ;CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7824  00135C  800B               	bsf	CANreceiveMessage@error,0,c
  7825                           
  7826                           ;CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7827  00135E  BC74               	btfsc	3956,6,c	;volatile
  7828                           
  7829                           ;CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7830  001360  820B               	bsf	CANreceiveMessage@error,1,c
  7831                           
  7832                           ;CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7833  001362  010F               	movlb	15	; () banked
  7834  001364  AF50               	btfss	80,7,b	;volatile
  7835  001366  D143               	goto	i1l410
  7836                           
  7837                           ; BSR set to: 15
  7838                           ;CANlib.h: 541: {
  7839                           ;CANlib.h: 542: msg->identifier = 0;
  7840  001368  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7841  00136C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7842  001370  6ADE               	clrf	postinc2,c
  7843  001372  6ADE               	clrf	postinc2,c
  7844  001374  6ADE               	clrf	postinc2,c
  7845  001376  6ADD               	clrf	postdec2,c
  7846                           
  7847                           ; BSR set to: 15
  7848                           ;CANlib.h: 543: msg->data[0] =RXB1D0;
  7849  001378  EE20 F004          	lfsr	2,4
  7850  00137C  5001               	movf	CANreceiveMessage@msg,w,c
  7851  00137E  26D9               	addwf	fsr2l,f,c
  7852  001380  5002               	movf	CANreceiveMessage@msg+1,w,c
  7853  001382  22DA               	addwfc	fsr2h,f,c
  7854  001384  CF56 FFDF          	movff	3926,indf2	;volatile
  7855                           
  7856                           ; BSR set to: 15
  7857                           ;CANlib.h: 544: msg->data[1] =RXB1D1;
  7858  001388  EE20 F005          	lfsr	2,5
  7859  00138C  5001               	movf	CANreceiveMessage@msg,w,c
  7860  00138E  26D9               	addwf	fsr2l,f,c
  7861  001390  5002               	movf	CANreceiveMessage@msg+1,w,c
  7862  001392  22DA               	addwfc	fsr2h,f,c
  7863  001394  CF57 FFDF          	movff	3927,indf2	;volatile
  7864                           
  7865                           ; BSR set to: 15
  7866                           ;CANlib.h: 545: msg->data[2] =RXB1D2;
  7867  001398  EE20 F006          	lfsr	2,6
  7868  00139C  5001               	movf	CANreceiveMessage@msg,w,c
  7869  00139E  26D9               	addwf	fsr2l,f,c
  7870  0013A0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7871  0013A2  22DA               	addwfc	fsr2h,f,c
  7872  0013A4  CF58 FFDF          	movff	3928,indf2	;volatile
  7873                           
  7874                           ; BSR set to: 15
  7875                           ;CANlib.h: 546: msg->data[3] =RXB1D3;
  7876  0013A8  EE20 F007          	lfsr	2,7
  7877  0013AC  5001               	movf	CANreceiveMessage@msg,w,c
  7878  0013AE  26D9               	addwf	fsr2l,f,c
  7879  0013B0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7880  0013B2  22DA               	addwfc	fsr2h,f,c
  7881  0013B4  CF59 FFDF          	movff	3929,indf2	;volatile
  7882                           
  7883                           ; BSR set to: 15
  7884                           ;CANlib.h: 547: msg->data[4] =RXB1D4;
  7885  0013B8  EE20 F008          	lfsr	2,8
  7886  0013BC  5001               	movf	CANreceiveMessage@msg,w,c
  7887  0013BE  26D9               	addwf	fsr2l,f,c
  7888  0013C0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7889  0013C2  22DA               	addwfc	fsr2h,f,c
  7890  0013C4  CF5A FFDF          	movff	3930,indf2	;volatile
  7891                           
  7892                           ; BSR set to: 15
  7893                           ;CANlib.h: 548: msg->data[5] =RXB1D5;
  7894  0013C8  EE20 F009          	lfsr	2,9
  7895  0013CC  5001               	movf	CANreceiveMessage@msg,w,c
  7896  0013CE  26D9               	addwf	fsr2l,f,c
  7897  0013D0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7898  0013D2  22DA               	addwfc	fsr2h,f,c
  7899  0013D4  CF5B FFDF          	movff	3931,indf2	;volatile
  7900                           
  7901                           ; BSR set to: 15
  7902                           ;CANlib.h: 549: msg->data[6] =RXB1D6;
  7903  0013D8  EE20 F00A          	lfsr	2,10
  7904  0013DC  5001               	movf	CANreceiveMessage@msg,w,c
  7905  0013DE  26D9               	addwf	fsr2l,f,c
  7906  0013E0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7907  0013E2  22DA               	addwfc	fsr2h,f,c
  7908  0013E4  CF5C FFDF          	movff	3932,indf2	;volatile
  7909                           
  7910                           ; BSR set to: 15
  7911                           ;CANlib.h: 550: msg->data[7] =RXB1D7;
  7912  0013E8  EE20 F00B          	lfsr	2,11
  7913  0013EC  5001               	movf	CANreceiveMessage@msg,w,c
  7914  0013EE  26D9               	addwf	fsr2l,f,c
  7915  0013F0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7916  0013F2  22DA               	addwfc	fsr2h,f,c
  7917  0013F4  CF5D FFDF          	movff	3933,indf2	;volatile
  7918                           
  7919                           ; BSR set to: 15
  7920                           ;CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7921  0013F8  EE20 F00E          	lfsr	2,14
  7922  0013FC  5001               	movf	CANreceiveMessage@msg,w,c
  7923  0013FE  26D9               	addwf	fsr2l,f,c
  7924  001400  5002               	movf	CANreceiveMessage@msg+1,w,c
  7925  001402  22DA               	addwfc	fsr2h,f,c
  7926  001404  010F               	movlb	15	; () banked
  7927  001406  AD55               	btfss	85,6,b	;volatile
  7928  001408  D002               	goto	i1u391_20
  7929  00140A  0E01               	movlw	1
  7930  00140C  D001               	goto	i1u391_26
  7931  00140E                     i1u391_20:
  7932  00140E  0E00               	movlw	0
  7933  001410                     i1u391_26:
  7934  001410  6EDF               	movwf	indf2,c
  7935                           
  7936                           ; BSR set to: 15
  7937                           ;CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7938  001412  EE20 F00D          	lfsr	2,13
  7939  001416  5001               	movf	CANreceiveMessage@msg,w,c
  7940  001418  26D9               	addwf	fsr2l,f,c
  7941  00141A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7942  00141C  22DA               	addwfc	fsr2h,f,c
  7943  00141E  010F               	movlb	15	; () banked
  7944  001420  5155               	movf	85,w,b	;volatile
  7945  001422  0B0F               	andlw	15
  7946  001424  6EDF               	movwf	indf2,c
  7947                           
  7948                           ; BSR set to: 15
  7949                           ;CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7950  001426  EE20 F00C          	lfsr	2,12
  7951  00142A  5001               	movf	CANreceiveMessage@msg,w,c
  7952  00142C  26D9               	addwf	fsr2l,f,c
  7953  00142E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7954  001430  22DA               	addwfc	fsr2h,f,c
  7955  001432  010F               	movlb	15	; () banked
  7956  001434  A752               	btfss	82,3,b	;volatile
  7957  001436  D002               	goto	i1u392_20
  7958  001438  0E01               	movlw	1
  7959  00143A  D001               	goto	i1u392_26
  7960  00143C                     i1u392_20:
  7961  00143C  0E00               	movlw	0
  7962  00143E                     i1u392_26:
  7963  00143E  6EDF               	movwf	indf2,c
  7964                           
  7965                           ; BSR set to: 15
  7966                           ;CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7967  001440  010F               	movlb	15	; () banked
  7968  001442  B752               	btfsc	82,3,b	;volatile
  7969  001444  D044               	goto	i1l3510
  7970                           
  7971                           ; BSR set to: 15
  7972                           ;CANlib.h: 559: {
  7973                           ;CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7974  001446  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7975  00144A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7976  00144C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7977  00144E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7978  001450  0E03               	movlw	3
  7979  001452                     i1u394_25:
  7980  001452  90D8               	bcf	status,0,c
  7981  001454  3603               	rlcf	??_CANreceiveMessage,f,c
  7982  001456  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7983  001458  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7984  00145A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7985  00145C  2EE8               	decfsz	wreg,f,c
  7986  00145E  D7F9               	goto	i1u394_25
  7987  001460  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7988  001464  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7989  001468  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7990  00146C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7991  001470  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7992  001474  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7993                           
  7994                           ; BSR set to: 15
  7995                           ;CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7996  001478  010F               	movlb	15	; () banked
  7997  00147A  3952               	swapf	82,w,b	;volatile
  7998  00147C  42E8               	rrncf	wreg,f,c
  7999  00147E  0B07               	andlw	7
  8000  001480  0B07               	andlw	7
  8001  001482  6E0C               	movwf	CANreceiveMessage@tamp,c
  8002                           
  8003                           ; BSR set to: 15
  8004                           ;CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  8005  001484  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8006  001488  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8007  00148C  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8008  001490  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8009  001494  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8010  001498  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8011  00149C  500C               	movf	CANreceiveMessage@tamp,w,c
  8012  00149E  2403               	addwf	??_CANreceiveMessage,w,c
  8013  0014A0  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8014  0014A2  0E00               	movlw	0
  8015  0014A4  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8016  0014A6  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8017  0014A8  0E00               	movlw	0
  8018  0014AA  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8019  0014AC  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8020  0014AE  0E00               	movlw	0
  8021  0014B0  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8022  0014B2  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8023  0014B4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8024  0014B8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8025  0014BC  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8026  0014C0  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8027  0014C4  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8028  0014C8  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8029                           
  8030                           ;CANlib.h: 563: }
  8031  0014CC  D08D               	goto	i1l3536
  8032  0014CE                     i1l3510:
  8033                           
  8034                           ; BSR set to: 15
  8035                           ;CANlib.h: 564: else
  8036                           ;CANlib.h: 565: {
  8037                           ;CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  8038  0014CE  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  8039  0014D2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8040  0014D4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8041  0014D6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8042  0014D8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8043  0014DC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8044  0014E0  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8045  0014E4  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8046  0014E8  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8047  0014EC  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8048                           
  8049                           ; BSR set to: 15
  8050                           ;CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  8051  0014F0  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  8052  0014F4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8053  0014F6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8054  0014F8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8055  0014FA  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8056  0014FE  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8057  001502  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8058  001506  6A03               	clrf	??_CANreceiveMessage,c
  8059  001508  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8060  00150C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8061  001510  5003               	movf	??_CANreceiveMessage,w,c
  8062  001512  26DE               	addwf	postinc2,f,c
  8063  001514  5004               	movf	??_CANreceiveMessage+1,w,c
  8064  001516  22DE               	addwfc	postinc2,f,c
  8065  001518  5005               	movf	??_CANreceiveMessage+2,w,c
  8066  00151A  22DE               	addwfc	postinc2,f,c
  8067  00151C  5006               	movf	??_CANreceiveMessage+3,w,c
  8068  00151E  22DE               	addwfc	postinc2,f,c
  8069                           
  8070                           ; BSR set to: 15
  8071                           ;CANlib.h: 569: if (RXB1SIDLbits.EID16)
  8072  001520  010F               	movlb	15	; () banked
  8073  001522  A152               	btfss	82,0,b	;volatile
  8074  001524  D00C               	goto	i1l3518
  8075                           
  8076                           ; BSR set to: 15
  8077                           ;CANlib.h: 570: msg->identifier |= 0x00010000;
  8078  001526  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8079  00152A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8080  00152E  0E00               	movlw	0
  8081  001530  12DE               	iorwf	postinc2,f,c
  8082  001532  0E00               	movlw	0
  8083  001534  12DE               	iorwf	postinc2,f,c
  8084  001536  0E01               	movlw	1
  8085  001538  12DE               	iorwf	postinc2,f,c
  8086  00153A  0E00               	movlw	0
  8087  00153C  12DE               	iorwf	postinc2,f,c
  8088  00153E                     i1l3518:
  8089                           
  8090                           ; BSR set to: 15
  8091                           ;CANlib.h: 571: if (RXB1SIDLbits.EID17)
  8092  00153E  010F               	movlb	15	; () banked
  8093  001540  A352               	btfss	82,1,b	;volatile
  8094  001542  D00C               	goto	i1l3522
  8095                           
  8096                           ; BSR set to: 15
  8097                           ;CANlib.h: 572: msg->identifier |= 0x00020000;
  8098  001544  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8099  001548  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8100  00154C  0E00               	movlw	0
  8101  00154E  12DE               	iorwf	postinc2,f,c
  8102  001550  0E00               	movlw	0
  8103  001552  12DE               	iorwf	postinc2,f,c
  8104  001554  0E02               	movlw	2
  8105  001556  12DE               	iorwf	postinc2,f,c
  8106  001558  0E00               	movlw	0
  8107  00155A  12DE               	iorwf	postinc2,f,c
  8108  00155C                     i1l3522:
  8109                           
  8110                           ; BSR set to: 15
  8111                           ;CANlib.h: 573: if (RXB1SIDLbits.SID0)
  8112  00155C  010F               	movlb	15	; () banked
  8113  00155E  AB52               	btfss	82,5,b	;volatile
  8114  001560  D00C               	goto	i1l3526
  8115                           
  8116                           ; BSR set to: 15
  8117                           ;CANlib.h: 574: msg->identifier |= 0x00040000;
  8118  001562  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8119  001566  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8120  00156A  0E00               	movlw	0
  8121  00156C  12DE               	iorwf	postinc2,f,c
  8122  00156E  0E00               	movlw	0
  8123  001570  12DE               	iorwf	postinc2,f,c
  8124  001572  0E04               	movlw	4
  8125  001574  12DE               	iorwf	postinc2,f,c
  8126  001576  0E00               	movlw	0
  8127  001578  12DE               	iorwf	postinc2,f,c
  8128  00157A                     i1l3526:
  8129                           
  8130                           ; BSR set to: 15
  8131                           ;CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8132  00157A  010F               	movlb	15	; () banked
  8133  00157C  AD52               	btfss	82,6,b	;volatile
  8134  00157E  D00C               	goto	i1l3530
  8135                           
  8136                           ; BSR set to: 15
  8137                           ;CANlib.h: 576: msg->identifier |= 0x00080000;
  8138  001580  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8139  001584  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8140  001588  0E00               	movlw	0
  8141  00158A  12DE               	iorwf	postinc2,f,c
  8142  00158C  0E00               	movlw	0
  8143  00158E  12DE               	iorwf	postinc2,f,c
  8144  001590  0E08               	movlw	8
  8145  001592  12DE               	iorwf	postinc2,f,c
  8146  001594  0E00               	movlw	0
  8147  001596  12DE               	iorwf	postinc2,f,c
  8148  001598                     i1l3530:
  8149                           
  8150                           ; BSR set to: 15
  8151                           ;CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8152  001598  010F               	movlb	15	; () banked
  8153  00159A  AF52               	btfss	82,7,b	;volatile
  8154  00159C  D00C               	goto	i1l3534
  8155                           
  8156                           ; BSR set to: 15
  8157                           ;CANlib.h: 578: msg->identifier |= 0x00100000;
  8158  00159E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8159  0015A2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8160  0015A6  0E00               	movlw	0
  8161  0015A8  12DE               	iorwf	postinc2,f,c
  8162  0015AA  0E00               	movlw	0
  8163  0015AC  12DE               	iorwf	postinc2,f,c
  8164  0015AE  0E10               	movlw	16
  8165  0015B0  12DE               	iorwf	postinc2,f,c
  8166  0015B2  0E00               	movlw	0
  8167  0015B4  12DE               	iorwf	postinc2,f,c
  8168  0015B6                     i1l3534:
  8169                           
  8170                           ; BSR set to: 15
  8171                           ;CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8172  0015B6  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8173  0015BA  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8174  0015BC  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8175  0015BE  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8176  0015C0  0E15               	movlw	21
  8177  0015C2                     i1u400_25:
  8178  0015C2  90D8               	bcf	status,0,c
  8179  0015C4  3603               	rlcf	??_CANreceiveMessage,f,c
  8180  0015C6  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8181  0015C8  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8182  0015CA  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8183  0015CC  2EE8               	decfsz	wreg,f,c
  8184  0015CE  D7F9               	goto	i1u400_25
  8185  0015D0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8186  0015D4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8187  0015D8  5003               	movf	??_CANreceiveMessage,w,c
  8188  0015DA  12DE               	iorwf	postinc2,f,c
  8189  0015DC  5004               	movf	??_CANreceiveMessage+1,w,c
  8190  0015DE  12DE               	iorwf	postinc2,f,c
  8191  0015E0  5005               	movf	??_CANreceiveMessage+2,w,c
  8192  0015E2  12DE               	iorwf	postinc2,f,c
  8193  0015E4  5006               	movf	??_CANreceiveMessage+3,w,c
  8194  0015E6  12DE               	iorwf	postinc2,f,c
  8195  0015E8                     i1l3536:
  8196                           
  8197                           ; BSR set to: 15
  8198                           ;CANlib.h: 581: }
  8199                           ;CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8200  0015E8  010F               	movlb	15	; () banked
  8201  0015EA  9F50               	bcf	80,7,b	;volatile
  8202                           
  8203                           ; BSR set to: 15
  8204                           ;CANlib.h: 584: return (error);
  8205                           ;	Return value of _CANreceiveMessage is never used
  8206  0015EC  0012               	return	
  8207  0015EE                     i1l410:
  8208                           
  8209                           ; BSR set to: 15
  8210                           ;CANlib.h: 585: }
  8211                           ;CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8212  0015EE  AE60               	btfss	3936,7,c	;volatile
  8213  0015F0  0012               	return	
  8214                           
  8215                           ; BSR set to: 15
  8216                           ;CANlib.h: 588: {
  8217                           ;CANlib.h: 589: msg->identifier = 0;
  8218  0015F2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8219  0015F6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8220  0015FA  6ADE               	clrf	postinc2,c
  8221  0015FC  6ADE               	clrf	postinc2,c
  8222  0015FE  6ADE               	clrf	postinc2,c
  8223  001600  6ADD               	clrf	postdec2,c
  8224                           
  8225                           ; BSR set to: 15
  8226                           ;CANlib.h: 590: msg->data[0] =RXB0D0;
  8227  001602  EE20 F004          	lfsr	2,4
  8228  001606  5001               	movf	CANreceiveMessage@msg,w,c
  8229  001608  26D9               	addwf	fsr2l,f,c
  8230  00160A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8231  00160C  22DA               	addwfc	fsr2h,f,c
  8232  00160E  CF66 FFDF          	movff	3942,indf2	;volatile
  8233                           
  8234                           ; BSR set to: 15
  8235                           ;CANlib.h: 591: msg->data[1] =RXB0D1;
  8236  001612  EE20 F005          	lfsr	2,5
  8237  001616  5001               	movf	CANreceiveMessage@msg,w,c
  8238  001618  26D9               	addwf	fsr2l,f,c
  8239  00161A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8240  00161C  22DA               	addwfc	fsr2h,f,c
  8241  00161E  CF67 FFDF          	movff	3943,indf2	;volatile
  8242                           
  8243                           ; BSR set to: 15
  8244                           ;CANlib.h: 592: msg->data[2] =RXB0D2;
  8245  001622  EE20 F006          	lfsr	2,6
  8246  001626  5001               	movf	CANreceiveMessage@msg,w,c
  8247  001628  26D9               	addwf	fsr2l,f,c
  8248  00162A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8249  00162C  22DA               	addwfc	fsr2h,f,c
  8250  00162E  CF68 FFDF          	movff	3944,indf2	;volatile
  8251                           
  8252                           ; BSR set to: 15
  8253                           ;CANlib.h: 593: msg->data[3] =RXB0D3;
  8254  001632  EE20 F007          	lfsr	2,7
  8255  001636  5001               	movf	CANreceiveMessage@msg,w,c
  8256  001638  26D9               	addwf	fsr2l,f,c
  8257  00163A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8258  00163C  22DA               	addwfc	fsr2h,f,c
  8259  00163E  CF69 FFDF          	movff	3945,indf2	;volatile
  8260                           
  8261                           ; BSR set to: 15
  8262                           ;CANlib.h: 594: msg->data[4] =RXB0D4;
  8263  001642  EE20 F008          	lfsr	2,8
  8264  001646  5001               	movf	CANreceiveMessage@msg,w,c
  8265  001648  26D9               	addwf	fsr2l,f,c
  8266  00164A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8267  00164C  22DA               	addwfc	fsr2h,f,c
  8268  00164E  CF6A FFDF          	movff	3946,indf2	;volatile
  8269                           
  8270                           ; BSR set to: 15
  8271                           ;CANlib.h: 595: msg->data[5] =RXB0D5;
  8272  001652  EE20 F009          	lfsr	2,9
  8273  001656  5001               	movf	CANreceiveMessage@msg,w,c
  8274  001658  26D9               	addwf	fsr2l,f,c
  8275  00165A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8276  00165C  22DA               	addwfc	fsr2h,f,c
  8277  00165E  CF6B FFDF          	movff	3947,indf2	;volatile
  8278                           
  8279                           ; BSR set to: 15
  8280                           ;CANlib.h: 596: msg->data[6] =RXB0D6;
  8281  001662  EE20 F00A          	lfsr	2,10
  8282  001666  5001               	movf	CANreceiveMessage@msg,w,c
  8283  001668  26D9               	addwf	fsr2l,f,c
  8284  00166A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8285  00166C  22DA               	addwfc	fsr2h,f,c
  8286  00166E  CF6C FFDF          	movff	3948,indf2	;volatile
  8287                           
  8288                           ; BSR set to: 15
  8289                           ;CANlib.h: 597: msg->data[7] =RXB0D7;
  8290  001672  EE20 F00B          	lfsr	2,11
  8291  001676  5001               	movf	CANreceiveMessage@msg,w,c
  8292  001678  26D9               	addwf	fsr2l,f,c
  8293  00167A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8294  00167C  22DA               	addwfc	fsr2h,f,c
  8295  00167E  CF6D FFDF          	movff	3949,indf2	;volatile
  8296                           
  8297                           ; BSR set to: 15
  8298                           ;CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8299  001682  EE20 F00E          	lfsr	2,14
  8300  001686  5001               	movf	CANreceiveMessage@msg,w,c
  8301  001688  26D9               	addwf	fsr2l,f,c
  8302  00168A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8303  00168C  22DA               	addwfc	fsr2h,f,c
  8304  00168E  AC65               	btfss	3941,6,c	;volatile
  8305  001690  D002               	goto	i1u402_20
  8306  001692  0E01               	movlw	1
  8307  001694  D001               	goto	i1u402_26
  8308  001696                     i1u402_20:
  8309  001696  0E00               	movlw	0
  8310  001698                     i1u402_26:
  8311  001698  6EDF               	movwf	indf2,c
  8312                           
  8313                           ; BSR set to: 15
  8314                           ;CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8315  00169A  EE20 F00D          	lfsr	2,13
  8316  00169E  5001               	movf	CANreceiveMessage@msg,w,c
  8317  0016A0  26D9               	addwf	fsr2l,f,c
  8318  0016A2  5002               	movf	CANreceiveMessage@msg+1,w,c
  8319  0016A4  22DA               	addwfc	fsr2h,f,c
  8320  0016A6  5065               	movf	3941,w,c	;volatile
  8321  0016A8  0B0F               	andlw	15
  8322  0016AA  6EDF               	movwf	indf2,c
  8323                           
  8324                           ; BSR set to: 15
  8325                           ;CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8326  0016AC  EE20 F00C          	lfsr	2,12
  8327  0016B0  5001               	movf	CANreceiveMessage@msg,w,c
  8328  0016B2  26D9               	addwf	fsr2l,f,c
  8329  0016B4  5002               	movf	CANreceiveMessage@msg+1,w,c
  8330  0016B6  22DA               	addwfc	fsr2h,f,c
  8331  0016B8  A662               	btfss	3938,3,c	;volatile
  8332  0016BA  D002               	goto	i1u403_20
  8333  0016BC  0E01               	movlw	1
  8334  0016BE  D001               	goto	i1u403_26
  8335  0016C0                     i1u403_20:
  8336  0016C0  0E00               	movlw	0
  8337  0016C2                     i1u403_26:
  8338  0016C2  6EDF               	movwf	indf2,c
  8339                           
  8340                           ; BSR set to: 15
  8341                           ;CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8342  0016C4  B662               	btfsc	3938,3,c	;volatile
  8343  0016C6  D043               	goto	i1l3572
  8344                           
  8345                           ; BSR set to: 15
  8346                           ;CANlib.h: 606: {
  8347                           ;CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8348  0016C8  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8349  0016CC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8350  0016CE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8351  0016D0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8352  0016D2  0E03               	movlw	3
  8353  0016D4                     i1u405_25:
  8354  0016D4  90D8               	bcf	status,0,c
  8355  0016D6  3603               	rlcf	??_CANreceiveMessage,f,c
  8356  0016D8  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8357  0016DA  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8358  0016DC  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8359  0016DE  2EE8               	decfsz	wreg,f,c
  8360  0016E0  D7F9               	goto	i1u405_25
  8361  0016E2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8362  0016E6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8363  0016EA  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8364  0016EE  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8365  0016F2  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8366  0016F6  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8367                           
  8368                           ; BSR set to: 15
  8369                           ;CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8370  0016FA  3862               	swapf	3938,w,c	;volatile
  8371  0016FC  42E8               	rrncf	wreg,f,c
  8372  0016FE  0B07               	andlw	7
  8373  001700  0B07               	andlw	7
  8374  001702  6E0C               	movwf	CANreceiveMessage@tamp,c
  8375                           
  8376                           ; BSR set to: 15
  8377                           ;CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8378  001704  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8379  001708  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8380  00170C  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8381  001710  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8382  001714  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8383  001718  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8384  00171C  500C               	movf	CANreceiveMessage@tamp,w,c
  8385  00171E  2403               	addwf	??_CANreceiveMessage,w,c
  8386  001720  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8387  001722  0E00               	movlw	0
  8388  001724  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8389  001726  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8390  001728  0E00               	movlw	0
  8391  00172A  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8392  00172C  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8393  00172E  0E00               	movlw	0
  8394  001730  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8395  001732  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8396  001734  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8397  001738  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8398  00173C  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8399  001740  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8400  001744  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8401  001748  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8402                           
  8403                           ;CANlib.h: 610: }
  8404  00174C  D088               	goto	i1l3598
  8405  00174E                     i1l3572:
  8406                           
  8407                           ; BSR set to: 15
  8408                           ;CANlib.h: 611: else
  8409                           ;CANlib.h: 612: {
  8410                           ;CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8411  00174E  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8412  001752  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8413  001754  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8414  001756  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8415  001758  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8416  00175C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8417  001760  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8418  001764  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8419  001768  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8420  00176C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8421                           
  8422                           ; BSR set to: 15
  8423                           ;CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8424  001770  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8425  001774  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8426  001776  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8427  001778  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8428  00177A  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8429  00177E  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8430  001782  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8431  001786  6A03               	clrf	??_CANreceiveMessage,c
  8432  001788  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8433  00178C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8434  001790  5003               	movf	??_CANreceiveMessage,w,c
  8435  001792  26DE               	addwf	postinc2,f,c
  8436  001794  5004               	movf	??_CANreceiveMessage+1,w,c
  8437  001796  22DE               	addwfc	postinc2,f,c
  8438  001798  5005               	movf	??_CANreceiveMessage+2,w,c
  8439  00179A  22DE               	addwfc	postinc2,f,c
  8440  00179C  5006               	movf	??_CANreceiveMessage+3,w,c
  8441  00179E  22DE               	addwfc	postinc2,f,c
  8442                           
  8443                           ; BSR set to: 15
  8444                           ;CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8445  0017A0  A062               	btfss	3938,0,c	;volatile
  8446  0017A2  D00C               	goto	i1l3580
  8447                           
  8448                           ; BSR set to: 15
  8449                           ;CANlib.h: 617: msg->identifier |= 0x00010000;
  8450  0017A4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8451  0017A8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8452  0017AC  0E00               	movlw	0
  8453  0017AE  12DE               	iorwf	postinc2,f,c
  8454  0017B0  0E00               	movlw	0
  8455  0017B2  12DE               	iorwf	postinc2,f,c
  8456  0017B4  0E01               	movlw	1
  8457  0017B6  12DE               	iorwf	postinc2,f,c
  8458  0017B8  0E00               	movlw	0
  8459  0017BA  12DE               	iorwf	postinc2,f,c
  8460  0017BC                     i1l3580:
  8461                           
  8462                           ; BSR set to: 15
  8463                           ;CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8464  0017BC  A262               	btfss	3938,1,c	;volatile
  8465  0017BE  D00C               	goto	i1l3584
  8466                           
  8467                           ; BSR set to: 15
  8468                           ;CANlib.h: 619: msg->identifier |= 0x00020000;
  8469  0017C0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8470  0017C4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8471  0017C8  0E00               	movlw	0
  8472  0017CA  12DE               	iorwf	postinc2,f,c
  8473  0017CC  0E00               	movlw	0
  8474  0017CE  12DE               	iorwf	postinc2,f,c
  8475  0017D0  0E02               	movlw	2
  8476  0017D2  12DE               	iorwf	postinc2,f,c
  8477  0017D4  0E00               	movlw	0
  8478  0017D6  12DE               	iorwf	postinc2,f,c
  8479  0017D8                     i1l3584:
  8480                           
  8481                           ; BSR set to: 15
  8482                           ;CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8483  0017D8  AA62               	btfss	3938,5,c	;volatile
  8484  0017DA  D00C               	goto	i1l3588
  8485                           
  8486                           ; BSR set to: 15
  8487                           ;CANlib.h: 621: msg->identifier |= 0x00040000;
  8488  0017DC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8489  0017E0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8490  0017E4  0E00               	movlw	0
  8491  0017E6  12DE               	iorwf	postinc2,f,c
  8492  0017E8  0E00               	movlw	0
  8493  0017EA  12DE               	iorwf	postinc2,f,c
  8494  0017EC  0E04               	movlw	4
  8495  0017EE  12DE               	iorwf	postinc2,f,c
  8496  0017F0  0E00               	movlw	0
  8497  0017F2  12DE               	iorwf	postinc2,f,c
  8498  0017F4                     i1l3588:
  8499                           
  8500                           ; BSR set to: 15
  8501                           ;CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8502  0017F4  AC62               	btfss	3938,6,c	;volatile
  8503  0017F6  D00C               	goto	i1l3592
  8504                           
  8505                           ; BSR set to: 15
  8506                           ;CANlib.h: 623: msg->identifier |= 0x00080000;
  8507  0017F8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8508  0017FC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8509  001800  0E00               	movlw	0
  8510  001802  12DE               	iorwf	postinc2,f,c
  8511  001804  0E00               	movlw	0
  8512  001806  12DE               	iorwf	postinc2,f,c
  8513  001808  0E08               	movlw	8
  8514  00180A  12DE               	iorwf	postinc2,f,c
  8515  00180C  0E00               	movlw	0
  8516  00180E  12DE               	iorwf	postinc2,f,c
  8517  001810                     i1l3592:
  8518                           
  8519                           ; BSR set to: 15
  8520                           ;CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8521  001810  AE62               	btfss	3938,7,c	;volatile
  8522  001812  D00C               	goto	i1l3596
  8523                           
  8524                           ; BSR set to: 15
  8525                           ;CANlib.h: 625: msg->identifier |= 0x00100000;
  8526  001814  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8527  001818  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8528  00181C  0E00               	movlw	0
  8529  00181E  12DE               	iorwf	postinc2,f,c
  8530  001820  0E00               	movlw	0
  8531  001822  12DE               	iorwf	postinc2,f,c
  8532  001824  0E10               	movlw	16
  8533  001826  12DE               	iorwf	postinc2,f,c
  8534  001828  0E00               	movlw	0
  8535  00182A  12DE               	iorwf	postinc2,f,c
  8536  00182C                     i1l3596:
  8537                           
  8538                           ; BSR set to: 15
  8539                           ;CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8540  00182C  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8541  001830  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8542  001832  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8543  001834  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8544  001836  0E15               	movlw	21
  8545  001838                     i1u411_25:
  8546  001838  90D8               	bcf	status,0,c
  8547  00183A  3603               	rlcf	??_CANreceiveMessage,f,c
  8548  00183C  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8549  00183E  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8550  001840  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8551  001842  2EE8               	decfsz	wreg,f,c
  8552  001844  D7F9               	goto	i1u411_25
  8553  001846  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8554  00184A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8555  00184E  5003               	movf	??_CANreceiveMessage,w,c
  8556  001850  12DE               	iorwf	postinc2,f,c
  8557  001852  5004               	movf	??_CANreceiveMessage+1,w,c
  8558  001854  12DE               	iorwf	postinc2,f,c
  8559  001856  5005               	movf	??_CANreceiveMessage+2,w,c
  8560  001858  12DE               	iorwf	postinc2,f,c
  8561  00185A  5006               	movf	??_CANreceiveMessage+3,w,c
  8562  00185C  12DE               	iorwf	postinc2,f,c
  8563  00185E                     i1l3598:
  8564                           
  8565                           ; BSR set to: 15
  8566                           ;CANlib.h: 629: }
  8567                           ;CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8568  00185E  9E60               	bcf	3936,7,c	;volatile
  8569                           
  8570                           ; BSR set to: 15
  8571                           ;CANlib.h: 632: return (error);
  8572                           ;	Return value of _CANreceiveMessage is never used
  8573  001860  0012               	return	
  8574  001862                     __end_of_CANreceiveMessage:
  8575                           	opt stack 0
  8576                           pclatu	equ	0xFFB
  8577                           pclath	equ	0xFFA
  8578                           tblptru	equ	0xFF8
  8579                           tblptrh	equ	0xFF7
  8580                           tblptrl	equ	0xFF6
  8581                           tablat	equ	0xFF5
  8582                           prodh	equ	0xFF4
  8583                           prodl	equ	0xFF3
  8584                           intcon	equ	0xFF2
  8585                           postinc0	equ	0xFEE
  8586                           fsr0h	equ	0xFEA
  8587                           fsr0l	equ	0xFE9
  8588                           wreg	equ	0xFE8
  8589                           indf1	equ	0xFE7
  8590                           postdec1	equ	0xFE5
  8591                           fsr1h	equ	0xFE2
  8592                           fsr1l	equ	0xFE1
  8593                           bsr	equ	0xFE0
  8594                           indf2	equ	0xFDF
  8595                           postinc2	equ	0xFDE
  8596                           postdec2	equ	0xFDD
  8597                           fsr2h	equ	0xFDA
  8598                           fsr2l	equ	0xFD9
  8599                           status	equ	0xFD8
  8600                           
  8601 ;; *************** function _CANisRxReady *****************
  8602 ;; Defined at:
  8603 ;;		line 1163 in file "CANlib.h"
  8604 ;; Parameters:    Size  Location     Type
  8605 ;;		None
  8606 ;; Auto vars:     Size  Location     Type
  8607 ;;		None
  8608 ;; Return value:  Size  Location     Type
  8609 ;;                  1    wreg      unsigned char 
  8610 ;; Registers used:
  8611 ;;		wreg, status,2
  8612 ;; Tracked objects:
  8613 ;;		On entry : 0/0
  8614 ;;		On exit  : 0/0
  8615 ;;		Unchanged: 0/0
  8616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8617 ;;      Params:         0       0       0       0
  8618 ;;      Locals:         1       0       0       0
  8619 ;;      Temps:          0       0       0       0
  8620 ;;      Totals:         1       0       0       0
  8621 ;;Total ram usage:        1 bytes
  8622 ;; Hardware stack levels used:    1
  8623 ;; This function calls:
  8624 ;;		Nothing
  8625 ;; This function is called by:
  8626 ;;		_ISR_bassa
  8627 ;; This function uses a non-reentrant model
  8628 ;;
  8629                           
  8630                           	psect	text23
  8631  002632                     __ptext23:
  8632                           	opt stack 0
  8633  002632                     _CANisRxReady:
  8634                           	opt stack 26
  8635                           
  8636                           ;CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8637                           
  8638                           ; BSR set to: 15
  8639                           ;incstack = 0
  8640  002632  0E01               	movlw	1
  8641  002634  6E01               	movwf	_CANisRxReady$2995,c
  8642  002636  BE60               	btfsc	3936,7,c	;volatile
  8643  002638  D005               	goto	i1l561
  8644  00263A  010F               	movlb	15	; () banked
  8645  00263C  BF50               	btfsc	80,7,b	;volatile
  8646  00263E  D002               	goto	i1l561
  8647                           
  8648                           ; BSR set to: 15
  8649  002640  0E00               	movlw	0
  8650  002642  6E01               	movwf	_CANisRxReady$2995,c
  8651  002644                     i1l561:
  8652  002644  5001               	movf	_CANisRxReady$2995,w,c
  8653  002646  0012               	return	
  8654  002648                     __end_of_CANisRxReady:
  8655                           	opt stack 0
  8656  0000                     pclatu	equ	0xFFB
  8657                           pclath	equ	0xFFA
  8658                           tblptru	equ	0xFF8
  8659                           tblptrh	equ	0xFF7
  8660                           tblptrl	equ	0xFF6
  8661                           tablat	equ	0xFF5
  8662                           prodh	equ	0xFF4
  8663                           prodl	equ	0xFF3
  8664                           intcon	equ	0xFF2
  8665                           postinc0	equ	0xFEE
  8666                           fsr0h	equ	0xFEA
  8667                           fsr0l	equ	0xFE9
  8668                           wreg	equ	0xFE8
  8669                           indf1	equ	0xFE7
  8670                           postdec1	equ	0xFE5
  8671                           fsr1h	equ	0xFE2
  8672                           fsr1l	equ	0xFE1
  8673                           bsr	equ	0xFE0
  8674                           indf2	equ	0xFDF
  8675                           postinc2	equ	0xFDE
  8676                           postdec2	equ	0xFDD
  8677                           fsr2h	equ	0xFDA
  8678                           fsr2l	equ	0xFD9
  8679                           status	equ	0xFD8
  8680                           pclatu	equ	0xFFB
  8681                           pclath	equ	0xFFA
  8682                           tblptru	equ	0xFF8
  8683                           tblptrh	equ	0xFF7
  8684                           tblptrl	equ	0xFF6
  8685                           tablat	equ	0xFF5
  8686                           prodh	equ	0xFF4
  8687                           prodl	equ	0xFF3
  8688                           intcon	equ	0xFF2
  8689                           postinc0	equ	0xFEE
  8690                           fsr0h	equ	0xFEA
  8691                           fsr0l	equ	0xFE9
  8692                           wreg	equ	0xFE8
  8693                           indf1	equ	0xFE7
  8694                           postdec1	equ	0xFE5
  8695                           fsr1h	equ	0xFE2
  8696                           fsr1l	equ	0xFE1
  8697                           bsr	equ	0xFE0
  8698                           indf2	equ	0xFDF
  8699                           postinc2	equ	0xFDE
  8700                           postdec2	equ	0xFDD
  8701                           fsr2h	equ	0xFDA
  8702                           fsr2l	equ	0xFD9
  8703                           status	equ	0xFD8
  8704                           
  8705                           	psect	rparam
  8706  0000                     pclatu	equ	0xFFB
  8707                           pclath	equ	0xFFA
  8708                           tblptru	equ	0xFF8
  8709                           tblptrh	equ	0xFF7
  8710                           tblptrl	equ	0xFF6
  8711                           tablat	equ	0xFF5
  8712                           prodh	equ	0xFF4
  8713                           prodl	equ	0xFF3
  8714                           intcon	equ	0xFF2
  8715                           postinc0	equ	0xFEE
  8716                           fsr0h	equ	0xFEA
  8717                           fsr0l	equ	0xFE9
  8718                           wreg	equ	0xFE8
  8719                           indf1	equ	0xFE7
  8720                           postdec1	equ	0xFE5
  8721                           fsr1h	equ	0xFE2
  8722                           fsr1l	equ	0xFE1
  8723                           bsr	equ	0xFE0
  8724                           indf2	equ	0xFDF
  8725                           postinc2	equ	0xFDE
  8726                           postdec2	equ	0xFDD
  8727                           fsr2h	equ	0xFDA
  8728                           fsr2l	equ	0xFD9
  8729                           status	equ	0xFD8
  8730                           
  8731                           	psect	temp
  8732  000042                     btemp:
  8733                           	opt stack 0
  8734  000042                     	ds	1
  8735  0000                     int$flags	set	btemp
  8736                           pclatu	equ	0xFFB
  8737                           pclath	equ	0xFFA
  8738                           tblptru	equ	0xFF8
  8739                           tblptrh	equ	0xFF7
  8740                           tblptrl	equ	0xFF6
  8741                           tablat	equ	0xFF5
  8742                           prodh	equ	0xFF4
  8743                           prodl	equ	0xFF3
  8744                           intcon	equ	0xFF2
  8745                           postinc0	equ	0xFEE
  8746                           fsr0h	equ	0xFEA
  8747                           fsr0l	equ	0xFE9
  8748                           wreg	equ	0xFE8
  8749                           indf1	equ	0xFE7
  8750                           postdec1	equ	0xFE5
  8751                           fsr1h	equ	0xFE2
  8752                           fsr1l	equ	0xFE1
  8753                           bsr	equ	0xFE0
  8754                           indf2	equ	0xFDF
  8755                           postinc2	equ	0xFDE
  8756                           postdec2	equ	0xFDD
  8757                           fsr2h	equ	0xFDA
  8758                           fsr2l	equ	0xFD9
  8759                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      65
    BANK0           160     29     106
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array1(BANK0[8]), data_array(BANK0[8]), data_array_debug(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_SetDCEPWM1
    _main->___wmul
    _send_data->_CANsendMessage
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->___wmul
    ___wmul->___awdiv
    _abs->___wmul

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _configurazione_iniziale->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->_CANsendMessage
    ___wmul->___awdiv
    _abs->___wmul

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   29973
                                             35 COMRAM     1     1      0
                                             21 BANK0      8     8      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___awdiv
                             ___wmul
                                _abs
                    _battery_measure
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            1     1      0    4751
                                             33 COMRAM     1     1      0
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    9966
                      _CANInitialize
                     _SetOutputEPWM1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1418
                                              8 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _SetOutputEPWM1                                       2     1      1     336
                                             29 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                              9 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             29 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             29 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0    6530
                       _CANisTxReady
                     _CANsendMessage
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     848
                                             33 COMRAM     2     2      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1061
                                             29 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4597
                                             29 COMRAM     4     4      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     170
                                              8 BANK0      4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SetDCEPWM1                                           6     4      2     196
                                             29 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      44
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      22
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           17    17      0    1345
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
                   i1_SetOutputEPWM1
 ---------------------------------------------------------------------------------
 (5) i1_SetOutputEPWM1                                     2     1      1     184
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   ___awdiv
   ___wmul
     ___awdiv (ARG)
   _abs
     ___wmul (ARG)
       ___awdiv (ARG)
   _battery_measure
     _CANisTxReady
     _CANsendMessage
     ___awdiv
     ___wmul
       ___awdiv (ARG)
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _SetOutputEPWM1
     _delay_ms
       ___wmul
         ___awdiv (ARG)
   _delay_ms
     ___wmul
       ___awdiv (ARG)
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i1_SetOutputEPWM1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1D      6A       4       66.3%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     24      41       1       69.1%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AB       9        0.0%
DATA                 0      0      AB      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Feb 01 18:41:14 2016

              ??_CANisTXwarningON 001E              __end_of_CANSetFilter 0BE2  
                    ___awdiv@sign 00AE                                _id 0025  
                              bsr 000FE0               ___wmul@multiplicand 00B3  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 24A4  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000                       __CFG_LVP$ON 000000  
            _previousTimeCounter1 007C              _previousTimeCounter2 0080  
                             l402 12A2                               l403 12A6  
                             l404 12B2                               l500 096E  
                             l501 0972                               l510 0A6A  
                             l502 097C                               l511 0A74  
                             l503 0980                               l520 0B6C  
                             l512 0A78                               l504 098A  
                             l440 1E88                               l432 1E50  
                             l521 0B70                               l513 0A82  
                             l433 1E54                               l370 0CA0  
                             l522 0B7A                               l514 0A86  
                             l450 1F80                               l434 1E5E  
                             l363 0E5E                               l523 0B7E  
                             l515 0A90                               l507 0A58  
                             l451 1F8A                               l443 1F52  
                             l435 1E62                               l380 0E78  
                             l364 0BF8                               l524 0B88  
                             l508 0A5C                               l444 1F56  
                             l436 1E6C                               l381 0F6C  
                             l373 0DAA                               l365 0BFC  
                             l525 0B8C                               l509 0A66  
                             l445 1F60                               l437 1E70  
                             l701 2200                               l390 1036  
                             l382 0EFE                               l374 0DAE  
                             l366 0CF0                               l710 23D0  
                             l526 0B96                               l518 0B5E  
                             l470 0670                               l446 1F64  
                             l438 1E7A                               l358 208A  
                             l383 0F08                               l375 0DBA  
                             l367 0C82                               l519 0B62  
                             l471 067A                               l463 0642  
                             l447 1F6E                               l439 1E7E  
                             l359 2094                               l384 0F12  
                             l368 0C8C                               l480 0770  
                             l464 0646                               l448 1F72  
                             l704 2280                               l393 10F0  
                             l385 0F1C                               l369 0C96  
                             l713 2456                               l481 0774  
                             l465 0650                               l449 1F7C  
                             l705 227E                               l394 10F4  
                             l378 10DA                               l490 086C  
                             l482 077E                               l474 0746  
                             l466 0654                               l395 11E8  
                             l379 0E74                               l491 0876  
                             l475 074A                               l467 065E  
                             l556 2612                               l396 117A  
                             l388 1026                               l492 087A  
                             l476 0754                               l468 0662  
                             l397 1184                               l389 102A  
                             l493 0884                               l485 084C  
                             l477 0758                               l469 066C  
                             l398 118E                               l486 0850  
                             l478 0762                               l750 24DE  
                             l399 1198                               l487 085A  
                             l479 0766                               l671 1AC6  
                             l816 25EE                               l496 0952  
                             l488 085E                               l672 1AB6  
                             l497 0956                               l489 0868  
                             l569 2590                               l681 1B2A  
                             l498 0960                               l499 0964  
                             l683 1B02                               l764 262C  
                             l765 262E                               l677 1ABE  
                             l669 18B2                               l688 1BDE  
                             l699 2258                      __CFG_CPB$OFF 000000  
                             _PR2 000FCB                      __CFG_CPD$OFF 000000  
                             _id1 0074                               _abs 25CC  
                             _dir 003A                               _msg 0086  
                             prod 000FF3                               wreg 000FE8  
                    __CFG_WDT$OFF 000000                              ?_abs 00B5  
                            l4012 1DD2                              l4112 02FE  
                            l4130 03AE                              l4212 067E  
                            l4044 1ED2                              l4070 1F8E  
                            l4038 1E8C                              l3414 24C2  
                            l4320 09D4                              l4314 098E  
                            l4218 06C4                              l3418 24D0  
                            l4252 07C8                              l4148 045E  
                            l4246 0782                              l4166 050E  
                            l4094 0250                              l4504 0DBE  
                            l4280 0888                              l4184 05BE  
                            l4440 20E4                              l4432 2082  
                            l4354 0ADA                              l4434 2098  
                            l4348 0A94                              l4630 11A2  
                            l4702 2376                              l4382 0B9A  
                            l4286 08CE                              l4438 20A0  
                            l4704 2380                              l4650 1296  
                            l4554 0F26                              l4722 23C4  
                            l4714 23A4                              l4706 2384  
                            l4580 103A                              l4574 101A  
                            l4478 0CAA                              l4718 23B0  
                            l4656 12B6                              l4840 221C  
                            l4832 21C4                              l4498 0D9E  
                            l4690 234A                              l4842 2220  
                            l4836 21F4                              l4940 1AEE  
                            l4678 2584                              l4846 2228  
                            l4934 1AE2                              l4696 235C  
                            l4928 1A94                              l4866 241A  
                            l3978 264E                              l4962 1BC6  
                            l4954 1B2C                              l4938 1AEA  
                            l3996 1D26                              l4974 1BEE  
                            l4976 1BFE                              _LATA 000F89  
                            _LATB 000F8A                              _LATC 000F8B  
                            _LATD 000F8C                              _LATE 000F8D  
                            u4120 2672                              u4130 267E  
                            u5100 0492                              u5020 0332  
                            u5105 0486                              u5025 0326  
                            u5115 04EA                              u5035 038A  
                            u6020 11C0                              u5140 0542  
                            u5060 03E2                              u6030 120A  
                            u5310 07A2                              u5230 069E  
                            u4175 2536                              u6200 221A  
                            u6025 11B6                              u5145 0536  
                            u5065 03D6                              u6035 1200  
                            u5315 0796                              u5235 0692  
                            u5155 059A                              u5075 043A  
                            u4700 1CAA                              u6045 126A  
                            u6310 1916                              u4705 1C9E  
                            u6250 2266                              u6330 1950  
                            u4715 1D02                              u4740 1D56  
                            u6420 1B92                              u6340 1A26  
                            u5630 0BBA                              u5550 0AB4  
                            u5470 09AE                              u5390 08A8  
                            u4910 1FAE                              u4830 1EAC  
                            u6350 1A64                              u6336 1952  
                            u4745 1D4A                              u6265 2268  
                            u5635 0BAE                              u5555 0AA8  
                            u5475 09A2                              u5395 089C  
                            u4915 1FA2                              u4835 1EA0  
                            u4755 1DAE                              u5900 0F8E  
                            u4940 01D4                              u5760 0CC8  
                            u6480 1C62                              u5905 0F84  
                            u4945 01C8                              u5770 0D12  
                            u5915 0FEE                              u4955 022C  
                            u4980 0282                              u5765 0CBE  
                            u5775 0D08                              u5785 0D72  
                            u4985 0276                              u6497 2586  
                            u5890 0F44                              u4995 02DA  
                            u5895 0F3A                              _TMR2 000FCC  
             __size_of_CANSetMask 035E                              abs@a 00B5  
                            _main 1862                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 0042  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 0198  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000010                  _CANOperationMode 2648  
          __end_of_SetOutputEPWM1 24E8                             ??_abs 00B7  
      __size_of_CANreceiveMessage 050C                             ?_main 0001  
                 __end_of___awdiv 23CE                   ___awdiv@divisor 0020  
                           _T2CON 000FCA                             _T3CON 000FB1  
                           i1l410 15EE                             i1l561 2644  
                           i1l650 0136                             i1l661 0112  
                           i1l653 0132                             i1l750 2522  
                           i1l663 0116                             i1l664 0118  
                           i1l666 0150                   ___awdiv@counter 00AD  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                 _CANisRxReady$2995 0001  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                __size_of_ISR_bassa 0180  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                CANInitialize@flags 00BA  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           _vBatt 0033                    __pbitbssCOMRAM 01C0  
            __end_of_CANisRxReady 2648         __size_ofi1_SetOutputEPWM1 0044  
                           tablat 000FF5              __end_of_CANisTxReady 2616  
                           status 000FD8                    __CFG_PBADEN$ON 000000  
                      _SetDCEPWM1 252C                   __initialization 245A  
        __size_of_battery_measure 008C                      __end_of_main 1C78  
                 ?_SetOutputEPWM1 001E                            ??_main 00C2  
                   __activetblptr 000002                 _CANisTxReady$2993 001E  
                   _counter_array 0060                            _CANCON 000F6F  
                          _ADRESH 000FC4                  ___awdiv@dividend 001E  
                 __CFG_BBSIZ$1024 000000                            i1l3510 14CE  
                          i1l3530 1598                            i1l3522 155C  
                          i1l3534 15B6                            i1l3526 157A  
                          i1l3518 153E                            i1l3536 15E8  
                          i1l3580 17BC                            i1l3572 174E  
                          i1l3812 0066                            i1l3592 1810  
                          i1l3584 17D8                            i1l3824 00AE  
                          i1l3834 00DA                            i1l3596 182C  
                          i1l3588 17F4                            i1l3844 011C  
                          i1l3828 00C0                            i1l3598 185E  
                          i1l3838 00FA                            i1l3792 2506  
                      _OpenTimer2 2616                            i1l3796 2514  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 00B1                CANsendMessage@tamp 00B5  
                __end_of_delay_ms 259A             __size_of_CANSetFilter 0A46  
                  __CFG_XINST$OFF 000000                __size_of_OpenEPWM1 0010  
               __end_of_ISR_bassa 0198                            ___wmul 259A  
                       ??___awdiv 0022                    __CFG_STVREN$ON 000000  
                    ??_CANSetMask 00AD                            _errore 0031  
                OpenTimer2@config 001E                            clear_0 2460  
                          clear_1 2470                  ___awdiv@quotient 00AF  
        ?_configurazione_iniziale 0001                   __CFG_BOREN$BOHW 000000  
                    __pdataCOMRAM 003A                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                    _CANSetFilter 019C                        __accesstop 0060  
         __end_of__initialization 2496                __end_of_CANSetMask 1FD6  
                   ___rparam_used 000001         __size_of_CANisRXwarningON 000C  
                     ?_SetDCEPWM1 001E                    __pcstackCOMRAM 0001  
               ??_battery_measure 0024             CANSetFilter@numBuffer 00B1  
                 OpenEPWM1@period 001E         __size_of_CANisTXwarningON 000C  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 001E  
               __end_of_OpenEPWM1 266A          __end_of_CANOperationMode 265A  
                i1_SetOutputEPWM1 24E8                        __pbssBANK0 0060  
                     ?_OpenTimer2 0001                        _data_array 0095  
         __size_of_CANsendMessage 0774                           ?___wmul 00B1  
              __size_of_send_data 00FC                      _CANisRxReady 2632  
                         _ECCPR1L 000FBB                           _CANSTAT 000F6E  
                    _CANisTxReady 25F8                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01B2                         ?_delay_ms 00B5  
                         _RXB0DLC 000F65                           _RXB1DLC 000F55  
                         _RXB0CON 000F60               __size_of_SetDCEPWM1 003A  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 00B4                  _data_array_debug 00A5  
        SetOutputEPWM1@outputmode 001E                        _correzione 002F  
                ??_SetOutputEPWM1 001F                           __Hparam 0000  
                      _left_speed 0035                           __Lparam 0000  
                delay_ms@value_ms 00B5                           ___awdiv 2332  
                 __size_of___wmul 0032              CANInitialize@propSeg 00BF  
                         __pcinit 245A                           __ramtop 0300  
             __size_of_OpenTimer2 001C                           __ptext0 1862  
                         __ptext1 2188                           __ptext2 2284  
                         __ptext3 2566                           __ptext4 24A4  
                         __ptext5 1FD6                           __ptext6 1C78  
                         __ptext7 019C                           __ptext8 2648  
                         __ptext9 23CE                           _counter 0070  
                       _T2CONbits 000FCA                      __size_of_abs 002C  
      i1SetOutputEPWM1@outputmode 0001                        _duty_cycle 0084  
                      ??_delay_ms 0024            CANreceiveMessage@error 000B  
            end_of_initialization 2496                 __end_of_send_data 2284  
                   __Lmediumconst 0000                  _CANisRXwarningON 2676  
                   _CANInitialize 1FD6                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE      i1SetOutputEPWM1@outputconfig 0002  
                       _ISR_bassa 0018                         _PORTAbits 000F80  
                  CANSetMask@mask 001E                         _PORTCbits 000F82  
                  CANSetMask@tamp 00B2                    _centralina_abs 01C1  
                  CANSetMask@type 0022                  _CANisTXwarningON 266A  
                       _TRISDbits 000F95  __size_of_configurazione_iniziale 00AE  
             _previousTimeCounter 0078           _clock_counter_reference 002D  
                  _CANsendMessage 0BE2                  CANInitialize@BRP 00B9  
                CANInitialize@SJW 00B8                    ?_CANInitialize 00B6  
                      main@period 0024                      ??_SetDCEPWM1 0020  
                 _battery_measure 23CE                        ?_ISR_bassa 0001  
        __end_ofi1_SetOutputEPWM1 252C                    __end_of___wmul 25CC  
                   __pidataCOMRAM 2682               start_initialization 245A  
                     __end_of_abs 25F8                __end_of_SetDCEPWM1 2566  
             CANSetMask@numBuffer 00B1            __end_of_CANsendMessage 1356  
               ?_CANOperationMode 0001                      ??_OpenTimer2 001E  
                       _OpenEPWM1 265A                ??_CANOperationMode 001E  
      CANInitialize@FilterConfig1 00C0        CANInitialize@FilterConfig2 00C1  
                        ??___wmul 0022                  __CFG_LPT1OSC$OFF 000000  
              __end_of_OpenTimer2 2632            CANInitialize@phaseSeg1 00B6  
          CANInitialize@phaseSeg2 00B7                       __pbssCOMRAM 0025  
                   __pcstackBANK0 00AD                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72                       _data_array1 009D  
             SetDCEPWM1@dutycycle 001E                 __size_of_delay_ms 0034  
                 ?_CANsendMessage 00AD                        ?_OpenEPWM1 0001  
         __end_of_battery_measure 245A                   ??_CANInitialize 00BB  
                       _can_retry 01C0                      _currentSpeed 0040  
              CANSetFilter@filter 001E                          ?___awdiv 001E  
                     ??_ISR_bassa 000D                       __pintcodelo 0018  
                      send_data@i 0022                          _ECCP1CON 000FBA  
        __end_of_CANisRXwarningON 2682                       _COMSTATbits 000F74  
      SetOutputEPWM1@outputconfig 001F                     _remote_frame1 01C6  
         _configurazione_iniziale 2284                      _message_sent 01C4  
           CANreceiveMessage@tamp 000C                    ___wmul@product 0022  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 0041  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                         _send_data 2188  
                        _PIE3bits 000FA3          __end_of_CANisTXwarningON 2676  
                        i1u400_25 15C2                          i1u402_20 1696  
                        i1u402_26 1698                          i1u403_20 16C0  
                        i1u411_25 1838                          i1u403_26 16C2  
                        i1u405_25 16D4                          i1u391_20 140E  
                        i1u391_26 1410                          i1u392_20 143C  
                        i1u392_26 143E                          i1u394_25 1452  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
                        _TXERRCNT 000F76                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                        _ADCON2bits 000FC0  
               ___wmul@multiplier 00B1                     ?_CANSetFilter 001E  
                       copy_data0 248A                        _CANCONbits 000F6F  
                     ??_OpenEPWM1 001E                  ?_battery_measure 0001  
                      ?_send_data 0001                          __Hrparam 0000  
                    _RXB0SIDLbits 000F62                  SetDCEPWM1@DCycle 0022  
                        __Lrparam 0000                      _RXB1SIDLbits 000F52  
              _centralina_comando 01C2                        _CANSetMask 1C78  
                __size_of___awdiv 009C                 ?i1_SetOutputEPWM1 0001  
         __size_of_SetOutputEPWM1 0044                ??i1_SetOutputEPWM1 0002  
              _currentSpeed_array 0068         ??_configurazione_iniziale 0024  
                    _RXF0SIDLbits 000F01                          _delay_ms 2566  
                    _RXF1SIDLbits 000F05                    ??_CANSetFilter 00AD  
                        __ptext10 259A                          __ptext11 2332  
                        __ptext12 0BE2                          __ptext21 24E8  
                        __ptext13 25F8                          __ptext22 1356  
                        __ptext14 25CC                          __ptext23 2632  
                        __ptext15 252C                          __ptext16 2616  
                        __ptext17 265A                          __ptext18 266A  
                        __ptext19 2676                      _RXF2SIDLbits 000F09  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                   _speed_fetched 01C8                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 00B3                      _remote_frame 01C5  
                   __size_of_main 0416                          _duty_set 003C  
            CANreceiveMessage@msg 0001                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 0042         __size_of_CANOperationMode 0012  
                   ?_CANisRxReady 0001                     ?_CANisTxReady 0001  
                     _RXB0DLCbits 000F65                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 1356  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                ??_CANsendMessage 001E                      _requestSpeed 0036  
              ?_CANreceiveMessage 0001                      _request_sent 01C7  
        CANsendMessage@identifier 00AD                          intlevel1 0000  
               _centralina_sterzo 01C3                  CANSetFilter@tamp 00B2  
                CANSetFilter@type 0022               ??_CANreceiveMessage 0003  
                     _TXB0DLCbits 000F45                       _right_speed 0037  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     ??_send_data 0022                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 2332                       _TXB1CONbits 000F30  
                     _TXB2CONbits 000F20                       _timeCounter 0029  
            CANOperationMode@mode 001E                    ??_CANisRxReady 0001  
                     ?_CANSetMask 001E                    ??_CANisTxReady 001E  
       __end_of_CANreceiveMessage 1862                 ?_CANisRXwarningON 0001  
              ??_CANisRXwarningON 001E                       _previousPwm 003E  
           __end_of_CANInitialize 2188                 ?_CANisTXwarningON 0001  
