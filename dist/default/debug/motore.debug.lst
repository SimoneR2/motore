

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Jan 25 12:14:16 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	param0,global,class=BANK0,space=1,delta=1
    40  0000                     
    41                           	psect	idataBANK0
    42  002BDC                     __pidataBANK0:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _currentSpeed
    46  002BDC  01                 	db	1
    47                           
    48                           ;initializer for _delay_quartz_frequency_value
    49  002BDD  08                 	db	8
    50  0000                     _ADCON0bits	set	4034
    51  0000                     _ADCON1bits	set	4033
    52  0000                     _ADCON2bits	set	4032
    53  0000                     _ADRESH	set	4036
    54  0000                     _BRGCON1	set	3952
    55  0000                     _BRGCON2	set	3953
    56  0000                     _BRGCON2bits	set	3953
    57  0000                     _BRGCON3	set	3954
    58  0000                     _BRGCON3bits	set	3954
    59  0000                     _CANCON	set	3951
    60  0000                     _CANCONbits	set	3951
    61  0000                     _CANSTAT	set	3950
    62  0000                     _COMSTATbits	set	3956
    63  0000                     _ECCP1CON	set	4026
    64  0000                     _ECCPR1L	set	4027
    65  0000                     _INTCON2bits	set	4081
    66  0000                     _INTCONbits	set	4082
    67  0000                     _IPR2bits	set	4002
    68  0000                     _IPR3bits	set	4005
    69  0000                     _LATA	set	3977
    70  0000                     _LATB	set	3978
    71  0000                     _LATC	set	3979
    72  0000                     _LATD	set	3980
    73  0000                     _LATE	set	3981
    74  0000                     _PIE1bits	set	3997
    75  0000                     _PIE2bits	set	4000
    76  0000                     _PIE3bits	set	4003
    77  0000                     _PIR1bits	set	3998
    78  0000                     _PIR2bits	set	4001
    79  0000                     _PIR3bits	set	4004
    80  0000                     _PORTAbits	set	3968
    81  0000                     _PORTCbits	set	3970
    82  0000                     _PORTD	set	3971
    83  0000                     _PR2	set	4043
    84  0000                     _RCONbits	set	4048
    85  0000                     _RXB0CON	set	3936
    86  0000                     _RXB0CONbits	set	3936
    87  0000                     _RXB0D0	set	3942
    88  0000                     _RXB0D1	set	3943
    89  0000                     _RXB0D2	set	3944
    90  0000                     _RXB0D3	set	3945
    91  0000                     _RXB0D4	set	3946
    92  0000                     _RXB0D5	set	3947
    93  0000                     _RXB0D6	set	3948
    94  0000                     _RXB0D7	set	3949
    95  0000                     _RXB0DLC	set	3941
    96  0000                     _RXB0DLCbits	set	3941
    97  0000                     _RXB0EIDH	set	3939
    98  0000                     _RXB0EIDL	set	3940
    99  0000                     _RXB0SIDH	set	3937
   100  0000                     _RXB0SIDL	set	3938
   101  0000                     _RXB0SIDLbits	set	3938
   102  0000                     _RXB1CON	set	3920
   103  0000                     _RXB1CONbits	set	3920
   104  0000                     _RXB1D0	set	3926
   105  0000                     _RXB1D1	set	3927
   106  0000                     _RXB1D2	set	3928
   107  0000                     _RXB1D3	set	3929
   108  0000                     _RXB1D4	set	3930
   109  0000                     _RXB1D5	set	3931
   110  0000                     _RXB1D6	set	3932
   111  0000                     _RXB1D7	set	3933
   112  0000                     _RXB1DLC	set	3925
   113  0000                     _RXB1DLCbits	set	3925
   114  0000                     _RXB1EIDH	set	3923
   115  0000                     _RXB1EIDL	set	3924
   116  0000                     _RXB1SIDH	set	3921
   117  0000                     _RXB1SIDL	set	3922
   118  0000                     _RXB1SIDLbits	set	3922
   119  0000                     _RXERRCNT	set	3957
   120  0000                     _RXF0EIDH	set	3842
   121  0000                     _RXF0EIDL	set	3843
   122  0000                     _RXF0SIDH	set	3840
   123  0000                     _RXF0SIDL	set	3841
   124  0000                     _RXF0SIDLbits	set	3841
   125  0000                     _RXF1EIDH	set	3846
   126  0000                     _RXF1EIDL	set	3847
   127  0000                     _RXF1SIDH	set	3844
   128  0000                     _RXF1SIDL	set	3845
   129  0000                     _RXF1SIDLbits	set	3845
   130  0000                     _RXF2EIDH	set	3850
   131  0000                     _RXF2EIDL	set	3851
   132  0000                     _RXF2SIDH	set	3848
   133  0000                     _RXF2SIDL	set	3849
   134  0000                     _RXF2SIDLbits	set	3849
   135  0000                     _RXF3EIDH	set	3854
   136  0000                     _RXF3EIDL	set	3855
   137  0000                     _RXF3SIDH	set	3852
   138  0000                     _RXF3SIDL	set	3853
   139  0000                     _RXF3SIDLbits	set	3853
   140  0000                     _RXF4EIDH	set	3858
   141  0000                     _RXF4EIDL	set	3859
   142  0000                     _RXF4SIDH	set	3856
   143  0000                     _RXF4SIDL	set	3857
   144  0000                     _RXF4SIDLbits	set	3857
   145  0000                     _RXF5EIDH	set	3862
   146  0000                     _RXF5EIDL	set	3863
   147  0000                     _RXF5SIDH	set	3860
   148  0000                     _RXF5SIDL	set	3861
   149  0000                     _RXF5SIDLbits	set	3861
   150  0000                     _RXM0EIDH	set	3866
   151  0000                     _RXM0EIDL	set	3867
   152  0000                     _RXM0SIDH	set	3864
   153  0000                     _RXM0SIDL	set	3865
   154  0000                     _RXM0SIDLbits	set	3865
   155  0000                     _RXM1EIDH	set	3870
   156  0000                     _RXM1EIDL	set	3871
   157  0000                     _RXM1SIDH	set	3868
   158  0000                     _RXM1SIDL	set	3869
   159  0000                     _RXM1SIDLbits	set	3869
   160  0000                     _T2CON	set	4042
   161  0000                     _T2CONbits	set	4042
   162  0000                     _T3CON	set	4017
   163  0000                     _TMR2	set	4044
   164  0000                     _TMR3H	set	4019
   165  0000                     _TMR3L	set	4018
   166  0000                     _TRISA	set	3986
   167  0000                     _TRISB	set	3987
   168  0000                     _TRISC	set	3988
   169  0000                     _TRISD	set	3989
   170  0000                     _TRISDbits	set	3989
   171  0000                     _TRISE	set	3990
   172  0000                     _TXB0CONbits	set	3904
   173  0000                     _TXB0D0	set	3910
   174  0000                     _TXB0D1	set	3911
   175  0000                     _TXB0D2	set	3912
   176  0000                     _TXB0D3	set	3913
   177  0000                     _TXB0D4	set	3914
   178  0000                     _TXB0D5	set	3915
   179  0000                     _TXB0D6	set	3916
   180  0000                     _TXB0D7	set	3917
   181  0000                     _TXB0DLC	set	3909
   182  0000                     _TXB0DLCbits	set	3909
   183  0000                     _TXB0EIDH	set	3907
   184  0000                     _TXB0EIDL	set	3908
   185  0000                     _TXB0SIDH	set	3905
   186  0000                     _TXB0SIDL	set	3906
   187  0000                     _TXB0SIDLbits	set	3906
   188  0000                     _TXB1CONbits	set	3888
   189  0000                     _TXB1D0	set	3894
   190  0000                     _TXB1D1	set	3895
   191  0000                     _TXB1D2	set	3896
   192  0000                     _TXB1D3	set	3897
   193  0000                     _TXB1D4	set	3898
   194  0000                     _TXB1D5	set	3899
   195  0000                     _TXB1D6	set	3900
   196  0000                     _TXB1D7	set	3901
   197  0000                     _TXB1DLC	set	3893
   198  0000                     _TXB1DLCbits	set	3893
   199  0000                     _TXB1EIDH	set	3891
   200  0000                     _TXB1EIDL	set	3892
   201  0000                     _TXB1SIDH	set	3889
   202  0000                     _TXB1SIDL	set	3890
   203  0000                     _TXB1SIDLbits	set	3890
   204  0000                     _TXB2CONbits	set	3872
   205  0000                     _TXB2D0	set	3878
   206  0000                     _TXB2D1	set	3879
   207  0000                     _TXB2D2	set	3880
   208  0000                     _TXB2D3	set	3881
   209  0000                     _TXB2D4	set	3882
   210  0000                     _TXB2D5	set	3883
   211  0000                     _TXB2D6	set	3884
   212  0000                     _TXB2D7	set	3885
   213  0000                     _TXB2DLC	set	3877
   214  0000                     _TXB2DLCbits	set	3877
   215  0000                     _TXB2EIDH	set	3875
   216  0000                     _TXB2EIDL	set	3876
   217  0000                     _TXB2SIDH	set	3873
   218  0000                     _TXB2SIDL	set	3874
   219  0000                     _TXB2SIDLbits	set	3874
   220  0000                     _TXERRCNT	set	3958
   221                           
   222                           ; #config settings
   223  0000                     
   224                           	psect	cinit
   225  002A8E                     __pcinit:
   226                           	opt stack 0
   227  002A8E                     start_initialization:
   228                           	opt stack 0
   229  002A8E                     __initialization:
   230                           	opt stack 0
   231                           
   232                           ; Clear objects allocated to BANK0 (51 bytes)
   233  002A8E  EE00  F060         	lfsr	0,__pbssBANK0
   234  002A92  0E33               	movlw	51
   235  002A94                     clear_0:
   236  002A94  6AEE               	clrf	postinc0,c
   237  002A96  06E8               	decf	wreg,f,c
   238  002A98  E1FD               	bnz	clear_0
   239                           
   240                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   241  002A9A  6A48               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   242  002A9C  6A47               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   243                           
   244                           ; Clear objects allocated to COMRAM (41 bytes)
   245  002A9E  EE00  F001         	lfsr	0,__pbssCOMRAM
   246  002AA2  0E29               	movlw	41
   247  002AA4                     clear_1:
   248  002AA4  6AEE               	clrf	postinc0,c
   249  002AA6  06E8               	decf	wreg,f,c
   250  002AA8  E1FD               	bnz	clear_1
   251                           
   252                           ; Initialize objects allocated to BANK0 (2 bytes)
   253                           ; load TBLPTR registers with __pidataBANK0
   254  002AAA  0EDC               	movlw	low __pidataBANK0
   255  002AAC  6EF6               	movwf	tblptrl,c
   256  002AAE  0E2B               	movlw	high __pidataBANK0
   257  002AB0  6EF7               	movwf	tblptrh,c
   258  002AB2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   259  002AB4  6EF8               	movwf	tblptru,c
   260  002AB6  0009               	tblrd		*+	;fetch initializer
   261  002AB8  CFF5 F0C4          	movff	tablat,__pdataBANK0
   262  002ABC  0009               	tblrd		*+	;fetch initializer
   263  002ABE  CFF5 F0C5          	movff	tablat,__pdataBANK0+1
   264  002AC2                     end_of_initialization:
   265                           	opt stack 0
   266  002AC2                     __end_of__initialization:
   267                           	opt stack 0
   268  002AC2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   269  002AC4  6EF8               	movwf	tblptru,c
   270  002AC6  0100               	movlb	0
   271  002AC8  EF18  F00B         	goto	_main	;jump to C main() function
   272                           tblptru	equ	0xFF8
   273                           tblptrh	equ	0xFF7
   274                           tblptrl	equ	0xFF6
   275                           tablat	equ	0xFF5
   276                           postinc0	equ	0xFEE
   277                           wreg	equ	0xFE8
   278                           
   279                           	psect	bitbssCOMRAM
   280  000238                     __pbitbssCOMRAM:
   281                           	opt stack 0
   282  000238                     _can_retry:
   283                           	opt stack 0
   284  000238                     	ds	1
   285  000239                     _centralina_abs:
   286                           	opt stack 0
   287  000239                     	ds	1
   288  00023A                     _centralina_comando:
   289                           	opt stack 0
   290  00023A                     	ds	1
   291  00023B                     _centralina_sterzo:
   292                           	opt stack 0
   293  00023B                     	ds	1
   294  00023C                     _message_sent:
   295                           	opt stack 0
   296  00023C                     	ds	1
   297  00023D                     _remote_frame:
   298                           	opt stack 0
   299  00023D                     	ds	1
   300  00023E                     _remote_frame1:
   301                           	opt stack 0
   302  00023E                     	ds	1
   303  00023F                     _request_sent:
   304                           	opt stack 0
   305  00023F                     	ds	1
   306  000240                     _speed_fetched:
   307                           	opt stack 0
   308  000240                     	ds	1
   309                           tblptru	equ	0xFF8
   310                           tblptrh	equ	0xFF7
   311                           tblptrl	equ	0xFF6
   312                           tablat	equ	0xFF5
   313                           postinc0	equ	0xFEE
   314                           wreg	equ	0xFE8
   315                           
   316                           	psect	bssCOMRAM
   317  000001                     __pbssCOMRAM:
   318                           	opt stack 0
   319  000001                     _counter:
   320                           	opt stack 0
   321  000001                     	ds	4
   322  000005                     _id:
   323                           	opt stack 0
   324  000005                     	ds	4
   325  000009                     _id1:
   326                           	opt stack 0
   327  000009                     	ds	4
   328  00000D                     _timeCounter:
   329                           	opt stack 0
   330  00000D                     	ds	4
   331  000011                     _duty_cycle:
   332                           	opt stack 0
   333  000011                     	ds	2
   334  000013                     _msg:
   335                           	opt stack 0
   336  000013                     	ds	15
   337  000022                     _data_array1:
   338                           	opt stack 0
   339  000022                     	ds	8
   340                           tblptru	equ	0xFF8
   341                           tblptrh	equ	0xFF7
   342                           tblptrl	equ	0xFF6
   343                           tablat	equ	0xFF5
   344                           postinc0	equ	0xFEE
   345                           wreg	equ	0xFE8
   346                           
   347                           	psect	bssBANK0
   348  000060                     __pbssBANK0:
   349                           	opt stack 0
   350  000060                     _counter_array:
   351                           	opt stack 0
   352  000060                     	ds	8
   353  000068                     _currentSpeed_array:
   354                           	opt stack 0
   355  000068                     	ds	8
   356  000070                     _previousTimeCounter:
   357                           	opt stack 0
   358  000070                     	ds	4
   359  000074                     _previousTimeCounter1:
   360                           	opt stack 0
   361  000074                     	ds	4
   362  000078                     _previousTimeCounter2:
   363                           	opt stack 0
   364  000078                     	ds	4
   365  00007C                     _clock_counter_reference:
   366                           	opt stack 0
   367  00007C                     	ds	2
   368  00007E                     _correzione:
   369                           	opt stack 0
   370  00007E                     	ds	2
   371  000080                     _dir:
   372                           	opt stack 0
   373  000080                     	ds	2
   374  000082                     _errore:
   375                           	opt stack 0
   376  000082                     	ds	2
   377  000084                     _vBatt:
   378                           	opt stack 0
   379  000084                     	ds	2
   380  000086                     _duty_set:
   381                           	opt stack 0
   382  000086                     	ds	1
   383  000087                     _left_speed:
   384                           	opt stack 0
   385  000087                     	ds	1
   386  000088                     _previousPwm:
   387                           	opt stack 0
   388  000088                     	ds	1
   389  000089                     _requestSpeed:
   390                           	opt stack 0
   391  000089                     	ds	1
   392  00008A                     _right_speed:
   393                           	opt stack 0
   394  00008A                     	ds	1
   395  00008B                     _data_array:
   396                           	opt stack 0
   397  00008B                     	ds	8
   398                           tblptru	equ	0xFF8
   399                           tblptrh	equ	0xFF7
   400                           tblptrl	equ	0xFF6
   401                           tablat	equ	0xFF5
   402                           postinc0	equ	0xFEE
   403                           wreg	equ	0xFE8
   404                           
   405                           	psect	dataBANK0
   406  0000C4                     __pdataBANK0:
   407                           	opt stack 0
   408  0000C4                     _currentSpeed:
   409                           	opt stack 0
   410  0000C4                     	ds	1
   411  0000C5                     _delay_quartz_frequency_value:
   412                           	opt stack 0
   413  0000C5                     	ds	1
   414                           tblptru	equ	0xFF8
   415                           tblptrh	equ	0xFF7
   416                           tblptrl	equ	0xFF6
   417                           tablat	equ	0xFF5
   418                           postinc0	equ	0xFEE
   419                           wreg	equ	0xFE8
   420                           
   421                           	psect	cstackBANK0
   422  000093                     __pcstackBANK0:
   423                           	opt stack 0
   424  000093                     ??_ISR_alta:
   425                           
   426                           ; 0 bytes @ 0x0
   427  000093                     	ds	14
   428  0000A1                     ?_abs:
   429                           	opt stack 0
   430  0000A1                     ?___awdiv:
   431                           	opt stack 0
   432  0000A1                     CANOperationMode@mode:
   433                           	opt stack 0
   434  0000A1                     _CANisTxReady$3033:
   435                           	opt stack 0
   436  0000A1                     OpenEPWM1@period:
   437                           	opt stack 0
   438  0000A1                     SetOutputEPWM1@outputmode:
   439                           	opt stack 0
   440  0000A1                     OpenTimer2@config:
   441                           	opt stack 0
   442  0000A1                     SetDCEPWM1@dutycycle:
   443                           	opt stack 0
   444  0000A1                     abs@a:
   445                           	opt stack 0
   446  0000A1                     ___awdiv@dividend:
   447                           	opt stack 0
   448  0000A1                     CANsendMessage@identifier:
   449                           	opt stack 0
   450  0000A1                     CANSetMask@mask:
   451                           	opt stack 0
   452  0000A1                     CANSetFilter@filter:
   453                           	opt stack 0
   454                           
   455                           ; 4 bytes @ 0xE
   456  0000A1                     	ds	1
   457  0000A2                     SetOutputEPWM1@outputconfig:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0xF
   461  0000A2                     	ds	1
   462  0000A3                     ??_abs:
   463  0000A3                     ??_SetDCEPWM1:
   464  0000A3                     ___awdiv@divisor:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x10
   468  0000A3                     	ds	2
   469  0000A5                     CANSetMask@type:
   470                           	opt stack 0
   471  0000A5                     CANSetFilter@type:
   472                           	opt stack 0
   473  0000A5                     ___awdiv@counter:
   474                           	opt stack 0
   475  0000A5                     CANsendMessage@data:
   476                           	opt stack 0
   477  0000A5                     SetDCEPWM1@DCycle:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x12
   481  0000A5                     	ds	1
   482  0000A6                     ??_CANSetMask:
   483  0000A6                     ??_CANSetFilter:
   484  0000A6                     ___awdiv@sign:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x13
   488  0000A6                     	ds	1
   489  0000A7                     CANsendMessage@dataLength:
   490                           	opt stack 0
   491  0000A7                     ___awdiv@quotient:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x14
   495  0000A7                     	ds	1
   496  0000A8                     CANsendMessage@flags:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x15
   500  0000A8                     	ds	1
   501  0000A9                     ??_CANsendMessage:
   502  0000A9                     ?___wmul:
   503                           	opt stack 0
   504  0000A9                     ___wmul@multiplier:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x16
   508  0000A9                     	ds	1
   509  0000AA                     CANSetMask@numBuffer:
   510                           	opt stack 0
   511  0000AA                     CANSetFilter@numBuffer:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x17
   515  0000AA                     	ds	1
   516  0000AB                     ___wmul@multiplicand:
   517                           	opt stack 0
   518  0000AB                     CANSetMask@tamp:
   519                           	opt stack 0
   520  0000AB                     CANSetFilter@tamp:
   521                           	opt stack 0
   522                           
   523                           ; 4 bytes @ 0x18
   524  0000AB                     	ds	2
   525  0000AD                     ___wmul@product:
   526                           	opt stack 0
   527  0000AD                     CANsendMessage@tamp:
   528                           	opt stack 0
   529                           
   530                           ; 4 bytes @ 0x1A
   531  0000AD                     	ds	2
   532  0000AF                     CANInitialize@phaseSeg1:
   533                           	opt stack 0
   534  0000AF                     delay_ms@value_ms:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x1C
   538  0000AF                     	ds	1
   539  0000B0                     CANInitialize@phaseSeg2:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x1D
   543  0000B0                     	ds	1
   544  0000B1                     CANInitialize@SJW:
   545                           	opt stack 0
   546  0000B1                     send_data@i:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x1E
   550  0000B1                     	ds	1
   551  0000B2                     CANInitialize@BRP:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x1F
   555  0000B2                     	ds	1
   556  0000B3                     CANInitialize@flags:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x20
   560  0000B3                     	ds	1
   561  0000B4                     ??_CANInitialize:
   562                           
   563                           ; 0 bytes @ 0x21
   564  0000B4                     	ds	4
   565  0000B8                     CANInitialize@propSeg:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x25
   569  0000B8                     	ds	1
   570  0000B9                     CANInitialize@FilterConfig1:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x26
   574  0000B9                     	ds	1
   575  0000BA                     CANInitialize@FilterConfig2:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x27
   579  0000BA                     	ds	1
   580  0000BB                     ??_main:
   581                           
   582                           ; 0 bytes @ 0x28
   583  0000BB                     	ds	8
   584  0000C3                     main@period:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x30
   588  0000C3                     	ds	1
   589                           tblptru	equ	0xFF8
   590                           tblptrh	equ	0xFF7
   591                           tblptrl	equ	0xFF6
   592                           tablat	equ	0xFF5
   593                           postinc0	equ	0xFEE
   594                           wreg	equ	0xFE8
   595                           
   596                           	psect	cstackCOMRAM
   597  00002A                     __pcstackCOMRAM:
   598                           	opt stack 0
   599  00002A                     _CANisRxReady$3035:
   600                           	opt stack 0
   601  00002A                     CANreceiveMessage@msg:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x0
   605  00002A                     	ds	2
   606  00002C                     ??_CANreceiveMessage:
   607                           
   608                           ; 0 bytes @ 0x2
   609  00002C                     	ds	8
   610  000034                     CANreceiveMessage@error:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0xA
   614  000034                     	ds	1
   615  000035                     CANreceiveMessage@tamp:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0xB
   619  000035                     	ds	1
   620  000036                     ??_ISR_bassa:
   621                           
   622                           ; 0 bytes @ 0xC
   623  000036                     	ds	17
   624                           tblptru	equ	0xFF8
   625                           tblptrh	equ	0xFF7
   626                           tblptrl	equ	0xFF6
   627                           tablat	equ	0xFF5
   628                           postinc0	equ	0xFEE
   629                           wreg	equ	0xFE8
   630                           
   631 ;;
   632 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   633 ;;
   634 ;; *************** function _main *****************
   635 ;; Defined at:
   636 ;;		line 138 in file "motore.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  period          1   48[BANK0 ] unsigned char 
   641 ;; Return value:  Size  Location     Type
   642 ;;                  2  672[COMRAM] int 
   643 ;; Registers used:
   644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   650 ;;      Params:         0       0       0       0
   651 ;;      Locals:         0       1       0       0
   652 ;;      Temps:          0       8       0       0
   653 ;;      Totals:         0       9       0       0
   654 ;;Total ram usage:        9 bytes
   655 ;; Hardware stack levels required when called:    6
   656 ;; This function calls:
   657 ;;		_CANisRXwarningON
   658 ;;		_CANisTXwarningON
   659 ;;		_CANsendMessage
   660 ;;		_OpenEPWM1
   661 ;;		_OpenTimer2
   662 ;;		_SetDCEPWM1
   663 ;;		_SetOutputEPWM1
   664 ;;		___awdiv
   665 ;;		___wmul
   666 ;;		_abs
   667 ;;		_battery_measure
   668 ;;		_configurazione_iniziale
   669 ;;		_delay_ms
   670 ;;		_send_data
   671 ;; This function is called by:
   672 ;;		Startup code after reset
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text0
   677  001630                     __ptext0:
   678                           	opt stack 0
   679  001630                     _main:
   680                           	opt stack 25
   681                           
   682                           ;motore.c: 139: unsigned char period;
   683                           ;motore.c: 140: configurazione_iniziale();
   684                           
   685                           ;incstack = 0
   686  001630  EC59  F014         	call	_configurazione_iniziale	;wreg free
   687                           
   688                           ;motore.c: 141: OpenTimer2(0b01111111 & 0b11111100 & 0b10000111);
   689  001634  0E04               	movlw	4
   690  001636  ECB2  F015         	call	_OpenTimer2
   691                           
   692                           ;motore.c: 142: period = 249;
   693  00163A  0EF9               	movlw	249
   694  00163C  0100               	movlb	0	; () banked
   695  00163E  6FC3               	movwf	main@period& (0+255),b
   696                           
   697                           ; BSR set to: 0
   698                           ;motore.c: 143: OpenEPWM1(period);
   699  001640  0100               	movlb	0	; () banked
   700  001642  51C3               	movf	main@period& (0+255),w,b
   701  001644  ECD9  F015         	call	_OpenEPWM1
   702                           
   703                           ;motore.c: 146: PORTD = 0xFF;
   704  001648  6883               	setf	3971,c	;volatile
   705                           
   706                           ;motore.c: 147: delay_ms(500);
   707  00164A  0E01               	movlw	1
   708  00164C  0100               	movlb	0	; () banked
   709  00164E  6FB0               	movwf	(delay_ms@value_ms+1)& (0+255),b
   710  001650  0EF4               	movlw	244
   711  001652  0100               	movlb	0	; () banked
   712  001654  6FAF               	movwf	delay_ms@value_ms& (0+255),b
   713  001656  EC66  F015         	call	_delay_ms	;wreg free
   714                           
   715                           ;motore.c: 148: PORTD = 0x00;
   716  00165A  0E00               	movlw	0
   717  00165C  6E83               	movwf	3971,c	;volatile
   718                           
   719                           ;motore.c: 149: delay_ms(500);
   720  00165E  0E01               	movlw	1
   721  001660  0100               	movlb	0	; () banked
   722  001662  6FB0               	movwf	(delay_ms@value_ms+1)& (0+255),b
   723  001664  0EF4               	movlw	244
   724  001666  0100               	movlb	0	; () banked
   725  001668  6FAF               	movwf	delay_ms@value_ms& (0+255),b
   726  00166A  EC66  F015         	call	_delay_ms	;wreg free
   727                           
   728                           ;motore.c: 150: PORTD = 0xFF;
   729  00166E  6883               	setf	3971,c	;volatile
   730                           
   731                           ;motore.c: 151: delay_ms(500);
   732  001670  0E01               	movlw	1
   733  001672  0100               	movlb	0	; () banked
   734  001674  6FB0               	movwf	(delay_ms@value_ms+1)& (0+255),b
   735  001676  0EF4               	movlw	244
   736  001678  0100               	movlb	0	; () banked
   737  00167A  6FAF               	movwf	delay_ms@value_ms& (0+255),b
   738  00167C  EC66  F015         	call	_delay_ms	;wreg free
   739                           
   740                           ;motore.c: 152: PORTD = 0x00;
   741  001680  0E00               	movlw	0
   742  001682  6E83               	movwf	3971,c	;volatile
   743                           
   744                           ;motore.c: 153: delay_ms(500);
   745  001684  0E01               	movlw	1
   746  001686  0100               	movlb	0	; () banked
   747  001688  6FB0               	movwf	(delay_ms@value_ms+1)& (0+255),b
   748  00168A  0EF4               	movlw	244
   749  00168C  0100               	movlb	0	; () banked
   750  00168E  6FAF               	movwf	delay_ms@value_ms& (0+255),b
   751  001690  EC66  F015         	call	_delay_ms	;wreg free
   752  001694                     l4917:
   753                           
   754                           ;motore.c: 157: if (PORTAbits.RA7 == 0) {
   755  001694  BE80               	btfsc	3968,7,c	;volatile
   756  001696  D172               	goto	l4973
   757                           
   758                           ;motore.c: 158: if (dir == 1) {
   759  001698  0100               	movlb	0	; () banked
   760  00169A  0580               	decf	_dir& (0+255),w,b
   761  00169C  1181               	iorwf	(_dir+1)& (0+255),w,b
   762  00169E  A4D8               	btfss	status,2,c
   763  0016A0  D008               	goto	l4927
   764                           
   765                           ; BSR set to: 0
   766                           ;motore.c: 159: SetOutputEPWM1(0b01111111, 0b11111111);
   767  0016A2  0EFF               	movlw	255
   768  0016A4  0100               	movlb	0	; () banked
   769  0016A6  6FA1               	movwf	SetOutputEPWM1@outputmode& (0+255),b
   770  0016A8  0E7F               	movlw	127
   771  0016AA  ECDA  F014         	call	_SetOutputEPWM1
   772                           
   773                           ;motore.c: 160: PORTCbits.RC0 = 1;
   774  0016AE  8082               	bsf	3970,0,c	;volatile
   775                           
   776                           ;motore.c: 161: PORTCbits.RC1 = 0;
   777  0016B0  9282               	bcf	3970,1,c	;volatile
   778  0016B2                     l4927:
   779                           
   780                           ;motore.c: 162: }
   781                           ;motore.c: 163: if (dir == 0) {
   782  0016B2  0100               	movlb	0	; () banked
   783  0016B4  5181               	movf	(_dir+1)& (0+255),w,b
   784  0016B6  1180               	iorwf	_dir& (0+255),w,b
   785  0016B8  A4D8               	btfss	status,2,c
   786  0016BA  D008               	goto	l4935
   787                           
   788                           ; BSR set to: 0
   789                           ;motore.c: 164: SetOutputEPWM1(0b11111111, 0b11111111);
   790  0016BC  0EFF               	movlw	255
   791  0016BE  0100               	movlb	0	; () banked
   792  0016C0  6FA1               	movwf	SetOutputEPWM1@outputmode& (0+255),b
   793  0016C2  0EFF               	movlw	255
   794  0016C4  ECDA  F014         	call	_SetOutputEPWM1
   795                           
   796                           ;motore.c: 165: PORTCbits.RC0 = 0;
   797  0016C8  9082               	bcf	3970,0,c	;volatile
   798                           
   799                           ;motore.c: 166: PORTCbits.RC1 = 1;
   800  0016CA  8282               	bsf	3970,1,c	;volatile
   801  0016CC                     l4935:
   802                           
   803                           ;motore.c: 167: }
   804                           ;motore.c: 168: if (duty_set == 0) {
   805  0016CC  0100               	movlb	0	; () banked
   806  0016CE  6786               	tstfsz	_duty_set& (0+255),b
   807  0016D0  D002               	goto	l4939
   808                           
   809                           ; BSR set to: 0
   810                           ;motore.c: 169: PORTCbits.RC0 = 0;
   811  0016D2  9082               	bcf	3970,0,c	;volatile
   812                           
   813                           ;motore.c: 170: PORTCbits.RC1 = 0;
   814  0016D4  9282               	bcf	3970,1,c	;volatile
   815  0016D6                     l4939:
   816                           
   817                           ; BSR set to: 0
   818                           ;motore.c: 171: }
   819                           ;motore.c: 172: if ((timeCounter - previousTimeCounter1 >= 10)) {
   820  0016D6  0100               	movlb	0	; () banked
   821  0016D8  C074  F0BB         	movff	_previousTimeCounter1,??_main
   822  0016DC  0100               	movlb	0	; () banked
   823  0016DE  C075  F0BC         	movff	_previousTimeCounter1+1,??_main+1
   824  0016E2  0100               	movlb	0	; () banked
   825  0016E4  C076  F0BD         	movff	_previousTimeCounter1+2,??_main+2
   826  0016E8  0100               	movlb	0	; () banked
   827  0016EA  C077  F0BE         	movff	_previousTimeCounter1+3,??_main+3
   828  0016EE  0100               	movlb	0	; () banked
   829  0016F0  1FBB               	comf	??_main& (0+255),f,b
   830  0016F2  1FBC               	comf	(??_main+1)& (0+255),f,b
   831  0016F4  1FBD               	comf	(??_main+2)& (0+255),f,b
   832  0016F6  1FBE               	comf	(??_main+3)& (0+255),f,b
   833  0016F8  2BBB               	incf	??_main& (0+255),f,b
   834  0016FA  0E00               	movlw	0
   835  0016FC  23BC               	addwfc	(??_main+1)& (0+255),f,b
   836  0016FE  23BD               	addwfc	(??_main+2)& (0+255),f,b
   837  001700  23BE               	addwfc	(??_main+3)& (0+255),f,b
   838  001702  500D               	movf	_timeCounter,w,c
   839  001704  0100               	movlb	0	; () banked
   840  001706  25BB               	addwf	??_main& (0+255),w,b
   841  001708  0100               	movlb	0	; () banked
   842  00170A  6FBF               	movwf	(??_main+4)& (0+255),b
   843  00170C  500E               	movf	_timeCounter+1,w,c
   844  00170E  0100               	movlb	0	; () banked
   845  001710  21BC               	addwfc	(??_main+1)& (0+255),w,b
   846  001712  0100               	movlb	0	; () banked
   847  001714  6FC0               	movwf	(??_main+5)& (0+255),b
   848  001716  500F               	movf	_timeCounter+2,w,c
   849  001718  0100               	movlb	0	; () banked
   850  00171A  21BD               	addwfc	(??_main+2)& (0+255),w,b
   851  00171C  0100               	movlb	0	; () banked
   852  00171E  6FC1               	movwf	(??_main+6)& (0+255),b
   853  001720  5010               	movf	_timeCounter+3,w,c
   854  001722  0100               	movlb	0	; () banked
   855  001724  21BE               	addwfc	(??_main+3)& (0+255),w,b
   856  001726  0100               	movlb	0	; () banked
   857  001728  6FC2               	movwf	(??_main+7)& (0+255),b
   858  00172A  0E0A               	movlw	10
   859  00172C  0100               	movlb	0	; () banked
   860  00172E  5DBF               	subwf	(??_main+4)& (0+255),w,b
   861  001730  0E00               	movlw	0
   862  001732  59C0               	subwfb	(??_main+5)& (0+255),w,b
   863  001734  0E00               	movlw	0
   864  001736  59C1               	subwfb	(??_main+6)& (0+255),w,b
   865  001738  0E00               	movlw	0
   866  00173A  0100               	movlb	0	; () banked
   867  00173C  59C2               	subwfb	(??_main+7)& (0+255),w,b
   868  00173E  A0D8               	btfss	status,0,c
   869  001740  D11D               	goto	l4973
   870                           
   871                           ; BSR set to: 0
   872                           ;motore.c: 173: CANsendMessage(0b00000000000000000000000000110, 0, 0, CAN_CONFIG_STD_MSG
      +                           & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   873  001742  0E06               	movlw	6
   874  001744  0100               	movlb	0	; () banked
   875  001746  6FA1               	movwf	CANsendMessage@identifier& (0+255),b
   876  001748  0E00               	movlw	0
   877  00174A  0100               	movlb	0	; () banked
   878  00174C  6FA2               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   879  00174E  0E00               	movlw	0
   880  001750  0100               	movlb	0	; () banked
   881  001752  6FA3               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   882  001754  0E00               	movlw	0
   883  001756  0100               	movlb	0	; () banked
   884  001758  6FA4               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   885  00175A  0E00               	movlw	0
   886  00175C  0100               	movlb	0	; () banked
   887  00175E  6FA6               	movwf	(CANsendMessage@data+1)& (0+255),b
   888  001760  0E00               	movlw	0
   889  001762  0100               	movlb	0	; () banked
   890  001764  6FA5               	movwf	CANsendMessage@data& (0+255),b
   891  001766  0E00               	movlw	0
   892  001768  0100               	movlb	0	; () banked
   893  00176A  6FA7               	movwf	CANsendMessage@dataLength& (0+255),b
   894  00176C  0EFC               	movlw	252
   895  00176E  0100               	movlb	0	; () banked
   896  001770  6FA8               	movwf	CANsendMessage@flags& (0+255),b
   897  001772  ECDD  F006         	call	_CANsendMessage	;wreg free
   898                           
   899                           ;motore.c: 174: if (speed_fetched == 1) {
   900  001776  0100               	movlb	(_speed_fetched/(0+8)) shr (0+8)
   901  001778  A048               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   902  00177A  D100               	goto	l4973
   903                           
   904                           ;motore.c: 175: speed_fetched = 0;
   905  00177C  0100               	movlb	(_speed_fetched/(0+8)) shr (0+8)
   906  00177E  9048               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   907                           
   908                           ;motore.c: 176: currentSpeed = ((left_speed + right_speed) / 2);
   909  001780  0100               	movlb	0	; () banked
   910  001782  5187               	movf	_left_speed& (0+255),w,b
   911  001784  0100               	movlb	0	; () banked
   912  001786  258A               	addwf	_right_speed& (0+255),w,b
   913  001788  0100               	movlb	0	; () banked
   914  00178A  6FA1               	movwf	___awdiv@dividend& (0+255),b
   915  00178C  0100               	movlb	0	; () banked
   916  00178E  6BA2               	clrf	(___awdiv@dividend+1)& (0+255),b
   917  001790  0100               	movlb	0	; () banked
   918  001792  37A2               	rlcf	(___awdiv@dividend+1)& (0+255),f,b
   919  001794  0E00               	movlw	0
   920  001796  0100               	movlb	0	; () banked
   921  001798  6FA4               	movwf	(___awdiv@divisor+1)& (0+255),b
   922  00179A  0E02               	movlw	2
   923  00179C  0100               	movlb	0	; () banked
   924  00179E  6FA3               	movwf	___awdiv@divisor& (0+255),b
   925  0017A0  EC93  F013         	call	___awdiv	;wreg free
   926  0017A4  0100               	movlb	0	; () banked
   927  0017A6  51A1               	movf	?___awdiv& (0+255),w,b
   928  0017A8  0100               	movlb	0	; () banked
   929  0017AA  6FC4               	movwf	_currentSpeed& (0+255),b
   930                           
   931                           ; BSR set to: 0
   932                           ;motore.c: 177: if (currentSpeed - requestSpeed > 0) {
   933  0017AC  0100               	movlb	0	; () banked
   934  0017AE  5189               	movf	_requestSpeed& (0+255),w,b
   935  0017B0  0100               	movlb	0	; () banked
   936  0017B2  6FBB               	movwf	??_main& (0+255),b
   937  0017B4  6BBC               	clrf	(??_main+1)& (0+255),b
   938  0017B6  0100               	movlb	0	; () banked
   939  0017B8  1FBB               	comf	??_main& (0+255),f,b
   940  0017BA  1FBC               	comf	(??_main+1)& (0+255),f,b
   941  0017BC  4BBB               	infsnz	??_main& (0+255),f,b
   942  0017BE  2BBC               	incf	(??_main+1)& (0+255),f,b
   943  0017C0  0100               	movlb	0	; () banked
   944  0017C2  51C4               	movf	_currentSpeed& (0+255),w,b
   945  0017C4  0100               	movlb	0	; () banked
   946  0017C6  6FBD               	movwf	(??_main+2)& (0+255),b
   947  0017C8  6BBE               	clrf	(??_main+3)& (0+255),b
   948  0017CA  0100               	movlb	0	; () banked
   949  0017CC  51BB               	movf	??_main& (0+255),w,b
   950  0017CE  0100               	movlb	0	; () banked
   951  0017D0  27BD               	addwf	(??_main+2)& (0+255),f,b
   952  0017D2  0100               	movlb	0	; () banked
   953  0017D4  51BC               	movf	(??_main+1)& (0+255),w,b
   954  0017D6  0100               	movlb	0	; () banked
   955  0017D8  23BE               	addwfc	(??_main+3)& (0+255),f,b
   956  0017DA  0100               	movlb	0	; () banked
   957  0017DC  51BE               	movf	(??_main+3)& (0+255),w,b
   958  0017DE  0A80               	xorlw	128
   959  0017E0  0F80               	addlw	-128
   960  0017E2  0E01               	movlw	1
   961  0017E4  B4D8               	btfsc	status,2,c
   962  0017E6  5DBD               	subwf	(??_main+2)& (0+255),w,b
   963  0017E8  A0D8               	btfss	status,0,c
   964  0017EA  D0C0               	goto	l4971
   965                           
   966                           ; BSR set to: 0
   967                           ;motore.c: 178: errore = abs(currentSpeed - requestSpeed);
   968  0017EC  0100               	movlb	0	; () banked
   969  0017EE  5189               	movf	_requestSpeed& (0+255),w,b
   970  0017F0  0100               	movlb	0	; () banked
   971  0017F2  6FBB               	movwf	??_main& (0+255),b
   972  0017F4  6BBC               	clrf	(??_main+1)& (0+255),b
   973  0017F6  0100               	movlb	0	; () banked
   974  0017F8  1FBB               	comf	??_main& (0+255),f,b
   975  0017FA  1FBC               	comf	(??_main+1)& (0+255),f,b
   976  0017FC  4BBB               	infsnz	??_main& (0+255),f,b
   977  0017FE  2BBC               	incf	(??_main+1)& (0+255),f,b
   978  001800  0100               	movlb	0	; () banked
   979  001802  51C4               	movf	_currentSpeed& (0+255),w,b
   980  001804  0100               	movlb	0	; () banked
   981  001806  25BB               	addwf	??_main& (0+255),w,b
   982  001808  0100               	movlb	0	; () banked
   983  00180A  6FA1               	movwf	abs@a& (0+255),b
   984  00180C  0E00               	movlw	0
   985  00180E  0100               	movlb	0	; () banked
   986  001810  21BC               	addwfc	(??_main+1)& (0+255),w,b
   987  001812  0100               	movlb	0	; () banked
   988  001814  6FA2               	movwf	(abs@a+1)& (0+255),b
   989  001816  EC27  F015         	call	_abs	;wreg free
   990  00181A  0100               	movlb	0	; () banked
   991  00181C  C0A1  F082         	movff	?_abs,_errore
   992  001820  0100               	movlb	0	; () banked
   993  001822  C0A2  F083         	movff	?_abs+1,_errore+1
   994                           
   995                           ; BSR set to: 0
   996                           ;motore.c: 179: correzione = ((errore / 17)*(errore / 17))*4;
   997  001826  0E00               	movlw	0
   998  001828  0100               	movlb	0	; () banked
   999  00182A  6FA4               	movwf	(___awdiv@divisor+1)& (0+255),b
  1000  00182C  0E11               	movlw	17
  1001  00182E  0100               	movlb	0	; () banked
  1002  001830  6FA3               	movwf	___awdiv@divisor& (0+255),b
  1003  001832  C082  F0A1         	movff	_errore,___awdiv@dividend
  1004  001836  C083  F0A2         	movff	_errore+1,___awdiv@dividend+1
  1005  00183A  EC93  F013         	call	___awdiv	;wreg free
  1006  00183E  0100               	movlb	0	; () banked
  1007  001840  C0A1  F0A9         	movff	?___awdiv,___wmul@multiplier
  1008  001844  0100               	movlb	0	; () banked
  1009  001846  C0A2  F0AA         	movff	?___awdiv+1,___wmul@multiplier+1
  1010  00184A  0E00               	movlw	0
  1011  00184C  0100               	movlb	0	; () banked
  1012  00184E  6FA4               	movwf	(___awdiv@divisor+1)& (0+255),b
  1013  001850  0E11               	movlw	17
  1014  001852  0100               	movlb	0	; () banked
  1015  001854  6FA3               	movwf	___awdiv@divisor& (0+255),b
  1016  001856  C082  F0A1         	movff	_errore,___awdiv@dividend
  1017  00185A  C083  F0A2         	movff	_errore+1,___awdiv@dividend+1
  1018  00185E  EC93  F013         	call	___awdiv	;wreg free
  1019  001862  0100               	movlb	0	; () banked
  1020  001864  C0A1  F0AB         	movff	?___awdiv,___wmul@multiplicand
  1021  001868  0100               	movlb	0	; () banked
  1022  00186A  C0A2  F0AC         	movff	?___awdiv+1,___wmul@multiplicand+1
  1023  00186E  EC85  F015         	call	___wmul	;wreg free
  1024  001872  0100               	movlb	0	; () banked
  1025  001874  90D8               	bcf	status,0,c
  1026  001876  37A9               	rlcf	?___wmul& (0+255),f,b
  1027  001878  37AA               	rlcf	(?___wmul+1)& (0+255),f,b
  1028  00187A  0100               	movlb	0	; () banked
  1029  00187C  90D8               	bcf	status,0,c
  1030  00187E  37A9               	rlcf	?___wmul& (0+255),f,b
  1031  001880  37AA               	rlcf	(?___wmul+1)& (0+255),f,b
  1032  001882  0100               	movlb	0	; () banked
  1033  001884  C0A9  F07E         	movff	?___wmul,_correzione
  1034  001888  0100               	movlb	0	; () banked
  1035  00188A  C0AA  F07F         	movff	?___wmul+1,_correzione+1
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;motore.c: 180: if (correzione > 1) {
  1039  00188E  0E02               	movlw	2
  1040  001890  0100               	movlb	0	; () banked
  1041  001892  5D7E               	subwf	_correzione& (0+255),w,b
  1042  001894  0E00               	movlw	0
  1043  001896  0100               	movlb	0	; () banked
  1044  001898  597F               	subwfb	(_correzione+1)& (0+255),w,b
  1045  00189A  A0D8               	btfss	status,0,c
  1046  00189C  D05E               	goto	l681
  1047                           
  1048                           ; BSR set to: 0
  1049                           ;motore.c: 181: if ((currentSpeed - requestSpeed) > 0) {
  1050  00189E  0100               	movlb	0	; () banked
  1051  0018A0  5189               	movf	_requestSpeed& (0+255),w,b
  1052  0018A2  0100               	movlb	0	; () banked
  1053  0018A4  6FBB               	movwf	??_main& (0+255),b
  1054  0018A6  6BBC               	clrf	(??_main+1)& (0+255),b
  1055  0018A8  0100               	movlb	0	; () banked
  1056  0018AA  1FBB               	comf	??_main& (0+255),f,b
  1057  0018AC  1FBC               	comf	(??_main+1)& (0+255),f,b
  1058  0018AE  4BBB               	infsnz	??_main& (0+255),f,b
  1059  0018B0  2BBC               	incf	(??_main+1)& (0+255),f,b
  1060  0018B2  0100               	movlb	0	; () banked
  1061  0018B4  51C4               	movf	_currentSpeed& (0+255),w,b
  1062  0018B6  0100               	movlb	0	; () banked
  1063  0018B8  6FBD               	movwf	(??_main+2)& (0+255),b
  1064  0018BA  6BBE               	clrf	(??_main+3)& (0+255),b
  1065  0018BC  0100               	movlb	0	; () banked
  1066  0018BE  51BB               	movf	??_main& (0+255),w,b
  1067  0018C0  0100               	movlb	0	; () banked
  1068  0018C2  27BD               	addwf	(??_main+2)& (0+255),f,b
  1069  0018C4  0100               	movlb	0	; () banked
  1070  0018C6  51BC               	movf	(??_main+1)& (0+255),w,b
  1071  0018C8  0100               	movlb	0	; () banked
  1072  0018CA  23BE               	addwfc	(??_main+3)& (0+255),f,b
  1073  0018CC  0100               	movlb	0	; () banked
  1074  0018CE  51BE               	movf	(??_main+3)& (0+255),w,b
  1075  0018D0  0A80               	xorlw	128
  1076  0018D2  0F80               	addlw	-128
  1077  0018D4  0E01               	movlw	1
  1078  0018D6  B4D8               	btfsc	status,2,c
  1079  0018D8  5DBD               	subwf	(??_main+2)& (0+255),w,b
  1080  0018DA  A0D8               	btfss	status,0,c
  1081  0018DC  D038               	goto	l682
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;motore.c: 182: if (previousPwm > correzione) {
  1085  0018DE  0100               	movlb	0	; () banked
  1086  0018E0  5188               	movf	_previousPwm& (0+255),w,b
  1087  0018E2  0100               	movlb	0	; () banked
  1088  0018E4  5D7E               	subwf	_correzione& (0+255),w,b
  1089  0018E6  0E00               	movlw	0
  1090  0018E8  0100               	movlb	0	; () banked
  1091  0018EA  597F               	subwfb	(_correzione+1)& (0+255),w,b
  1092  0018EC  B0D8               	btfsc	status,0,c
  1093  0018EE  D007               	goto	l4963
  1094                           
  1095                           ; BSR set to: 0
  1096                           ;motore.c: 183: duty_set = previousPwm - correzione;
  1097  0018F0  0100               	movlb	0	; () banked
  1098  0018F2  517E               	movf	_correzione& (0+255),w,b
  1099  0018F4  0800               	sublw	0
  1100  0018F6  0100               	movlb	0	; () banked
  1101  0018F8  2588               	addwf	_previousPwm& (0+255),w,b
  1102  0018FA  0100               	movlb	0	; () banked
  1103  0018FC  6F86               	movwf	_duty_set& (0+255),b
  1104  0018FE                     l4963:
  1105                           
  1106                           ; BSR set to: 0
  1107                           ;motore.c: 184: }
  1108                           ;motore.c: 185: if ((currentSpeed - requestSpeed) < 0) {
  1109  0018FE  0100               	movlb	0	; () banked
  1110  001900  5189               	movf	_requestSpeed& (0+255),w,b
  1111  001902  0100               	movlb	0	; () banked
  1112  001904  6FBB               	movwf	??_main& (0+255),b
  1113  001906  6BBC               	clrf	(??_main+1)& (0+255),b
  1114  001908  0100               	movlb	0	; () banked
  1115  00190A  1FBB               	comf	??_main& (0+255),f,b
  1116  00190C  1FBC               	comf	(??_main+1)& (0+255),f,b
  1117  00190E  4BBB               	infsnz	??_main& (0+255),f,b
  1118  001910  2BBC               	incf	(??_main+1)& (0+255),f,b
  1119  001912  0100               	movlb	0	; () banked
  1120  001914  51C4               	movf	_currentSpeed& (0+255),w,b
  1121  001916  0100               	movlb	0	; () banked
  1122  001918  6FBD               	movwf	(??_main+2)& (0+255),b
  1123  00191A  6BBE               	clrf	(??_main+3)& (0+255),b
  1124  00191C  0100               	movlb	0	; () banked
  1125  00191E  51BB               	movf	??_main& (0+255),w,b
  1126  001920  0100               	movlb	0	; () banked
  1127  001922  27BD               	addwf	(??_main+2)& (0+255),f,b
  1128  001924  0100               	movlb	0	; () banked
  1129  001926  51BC               	movf	(??_main+1)& (0+255),w,b
  1130  001928  0100               	movlb	0	; () banked
  1131  00192A  23BE               	addwfc	(??_main+3)& (0+255),f,b
  1132  00192C  0100               	movlb	0	; () banked
  1133  00192E  51BE               	movf	(??_main+3)& (0+255),w,b
  1134  001930  0A80               	xorlw	128
  1135  001932  6EF3               	movwf	prodl,c
  1136  001934  0E80               	movlw	128
  1137  001936  5CF3               	subwf	prodl,w,c
  1138  001938  0E00               	movlw	0
  1139  00193A  B4D8               	btfsc	status,2,c
  1140  00193C  5DBD               	subwf	(??_main+2)& (0+255),w,b
  1141  00193E  B0D8               	btfsc	status,0,c
  1142  001940  D006               	goto	l682
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;motore.c: 186: duty_set = previousPwm + correzione;
  1146  001942  0100               	movlb	0	; () banked
  1147  001944  5188               	movf	_previousPwm& (0+255),w,b
  1148  001946  0100               	movlb	0	; () banked
  1149  001948  257E               	addwf	_correzione& (0+255),w,b
  1150  00194A  0100               	movlb	0	; () banked
  1151  00194C  6F86               	movwf	_duty_set& (0+255),b
  1152  00194E                     l682:
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;motore.c: 187: }
  1156                           ;motore.c: 188: }
  1157                           ;motore.c: 189: if (correzione < 1) {
  1158  00194E  0100               	movlb	0	; () banked
  1159  001950  517F               	movf	(_correzione+1)& (0+255),w,b
  1160  001952  117E               	iorwf	_correzione& (0+255),w,b
  1161  001954  B4D8               	btfsc	status,2,c
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;motore.c: 190: duty_set = previousPwm;
  1165  001956  C088  F086         	movff	_previousPwm,_duty_set
  1166  00195A                     l681:
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;motore.c: 191: }
  1170                           ;motore.c: 192: }
  1171                           ;motore.c: 193: previousPwm = duty_set;
  1172  00195A  C086  F088         	movff	_duty_set,_previousPwm
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;motore.c: 194: SetDCEPWM1(duty_set);
  1176  00195E  0100               	movlb	0	; () banked
  1177  001960  C086  F0A1         	movff	_duty_set,SetDCEPWM1@dutycycle
  1178  001964  0100               	movlb	0	; () banked
  1179  001966  6BA2               	clrf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1180  001968  EC03  F015         	call	_SetDCEPWM1	;wreg free
  1181  00196C                     l4971:
  1182                           
  1183                           ;motore.c: 195: }
  1184                           ;motore.c: 196: previousTimeCounter1 = timeCounter;
  1185  00196C  C00D  F074         	movff	_timeCounter,_previousTimeCounter1
  1186  001970  C00E  F075         	movff	_timeCounter+1,_previousTimeCounter1+1
  1187  001974  C00F  F076         	movff	_timeCounter+2,_previousTimeCounter1+2
  1188  001978  C010  F077         	movff	_timeCounter+3,_previousTimeCounter1+3
  1189  00197C                     l4973:
  1190                           
  1191                           ;motore.c: 197: }
  1192                           ;motore.c: 198: }
  1193                           ;motore.c: 199: }
  1194                           ;motore.c: 200: if ((remote_frame == 1) || (can_retry == 1)) {
  1195  00197C  0100               	movlb	(_remote_frame/(0+8)) shr (0+8)
  1196  00197E  BA47               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c
  1197  001980  D002               	goto	l4977
  1198  001982  0100               	movlb	(_can_retry/(0+8)) shr (0+8)
  1199  001984  B047               	btfsc	_can_retry/(0+8),_can_retry& (0+7),c
  1200  001986                     l4977:
  1201                           
  1202                           ;motore.c: 201: send_data();
  1203  001986  EC06  F013         	call	_send_data	;wreg free
  1204                           
  1205                           ;motore.c: 202: }
  1206                           ;motore.c: 203: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
  1207  00198A  ECE2  F015         	call	_CANisTXwarningON	;wreg free
  1208  00198E  0100               	movlb	0	; () banked
  1209  001990  6FBB               	movwf	??_main& (0+255),b
  1210  001992  0100               	movlb	0	; () banked
  1211  001994  05BB               	decf	??_main& (0+255),w,b
  1212  001996  B4D8               	btfsc	status,2,c
  1213  001998  D008               	goto	l4983
  1214                           
  1215                           ; BSR set to: 0
  1216  00199A  ECE8  F015         	call	_CANisRXwarningON	;wreg free
  1217  00199E  0100               	movlb	0	; () banked
  1218  0019A0  6FBB               	movwf	??_main& (0+255),b
  1219  0019A2  0100               	movlb	0	; () banked
  1220  0019A4  05BB               	decf	??_main& (0+255),w,b
  1221  0019A6  A4D8               	btfss	status,2,c
  1222  0019A8  D00A               	goto	l689
  1223  0019AA                     l4983:
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;motore.c: 204: SetDCEPWM1(0);
  1227  0019AA  0E00               	movlw	0
  1228  0019AC  0100               	movlb	0	; () banked
  1229  0019AE  6FA2               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1230  0019B0  0E00               	movlw	0
  1231  0019B2  0100               	movlb	0	; () banked
  1232  0019B4  6FA1               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  1233  0019B6  EC03  F015         	call	_SetDCEPWM1	;wreg free
  1234                           
  1235                           ;motore.c: 205: PORTAbits.RA7 = 1;
  1236  0019BA  8E80               	bsf	3968,7,c	;volatile
  1237                           
  1238                           ;motore.c: 206: } else {
  1239  0019BC  D001               	goto	l4987
  1240  0019BE                     l689:
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;motore.c: 207: PORTAbits.RA7 = 0;
  1244  0019BE  9E80               	bcf	3968,7,c	;volatile
  1245  0019C0                     l4987:
  1246                           
  1247                           ;motore.c: 208: }
  1248                           ;motore.c: 211: if ((timeCounter - previousTimeCounter) > 100) {
  1249  0019C0  0100               	movlb	0	; () banked
  1250  0019C2  C070  F0BB         	movff	_previousTimeCounter,??_main
  1251  0019C6  0100               	movlb	0	; () banked
  1252  0019C8  C071  F0BC         	movff	_previousTimeCounter+1,??_main+1
  1253  0019CC  0100               	movlb	0	; () banked
  1254  0019CE  C072  F0BD         	movff	_previousTimeCounter+2,??_main+2
  1255  0019D2  0100               	movlb	0	; () banked
  1256  0019D4  C073  F0BE         	movff	_previousTimeCounter+3,??_main+3
  1257  0019D8  0100               	movlb	0	; () banked
  1258  0019DA  1FBB               	comf	??_main& (0+255),f,b
  1259  0019DC  1FBC               	comf	(??_main+1)& (0+255),f,b
  1260  0019DE  1FBD               	comf	(??_main+2)& (0+255),f,b
  1261  0019E0  1FBE               	comf	(??_main+3)& (0+255),f,b
  1262  0019E2  2BBB               	incf	??_main& (0+255),f,b
  1263  0019E4  0E00               	movlw	0
  1264  0019E6  23BC               	addwfc	(??_main+1)& (0+255),f,b
  1265  0019E8  23BD               	addwfc	(??_main+2)& (0+255),f,b
  1266  0019EA  23BE               	addwfc	(??_main+3)& (0+255),f,b
  1267  0019EC  500D               	movf	_timeCounter,w,c
  1268  0019EE  0100               	movlb	0	; () banked
  1269  0019F0  25BB               	addwf	??_main& (0+255),w,b
  1270  0019F2  0100               	movlb	0	; () banked
  1271  0019F4  6FBF               	movwf	(??_main+4)& (0+255),b
  1272  0019F6  500E               	movf	_timeCounter+1,w,c
  1273  0019F8  0100               	movlb	0	; () banked
  1274  0019FA  21BC               	addwfc	(??_main+1)& (0+255),w,b
  1275  0019FC  0100               	movlb	0	; () banked
  1276  0019FE  6FC0               	movwf	(??_main+5)& (0+255),b
  1277  001A00  500F               	movf	_timeCounter+2,w,c
  1278  001A02  0100               	movlb	0	; () banked
  1279  001A04  21BD               	addwfc	(??_main+2)& (0+255),w,b
  1280  001A06  0100               	movlb	0	; () banked
  1281  001A08  6FC1               	movwf	(??_main+6)& (0+255),b
  1282  001A0A  5010               	movf	_timeCounter+3,w,c
  1283  001A0C  0100               	movlb	0	; () banked
  1284  001A0E  21BE               	addwfc	(??_main+3)& (0+255),w,b
  1285  001A10  0100               	movlb	0	; () banked
  1286  001A12  6FC2               	movwf	(??_main+7)& (0+255),b
  1287  001A14  0E65               	movlw	101
  1288  001A16  0100               	movlb	0	; () banked
  1289  001A18  5DBF               	subwf	(??_main+4)& (0+255),w,b
  1290  001A1A  0E00               	movlw	0
  1291  001A1C  59C0               	subwfb	(??_main+5)& (0+255),w,b
  1292  001A1E  0E00               	movlw	0
  1293  001A20  59C1               	subwfb	(??_main+6)& (0+255),w,b
  1294  001A22  0E00               	movlw	0
  1295  001A24  0100               	movlb	0	; () banked
  1296  001A26  59C2               	subwfb	(??_main+7)& (0+255),w,b
  1297  001A28  A0D8               	btfss	status,0,c
  1298  001A2A  D046               	goto	l5011
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;motore.c: 212: if (request_sent == 0) {
  1302  001A2C  0100               	movlb	(_request_sent/(0+8)) shr (0+8)
  1303  001A2E  BE47               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c
  1304  001A30  D01E               	goto	l4995
  1305                           
  1306                           ;motore.c: 213: CANsendMessage(0b00000000000000000000000000010, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1307  001A32  0E02               	movlw	2
  1308  001A34  0100               	movlb	0	; () banked
  1309  001A36  6FA1               	movwf	CANsendMessage@identifier& (0+255),b
  1310  001A38  0E00               	movlw	0
  1311  001A3A  0100               	movlb	0	; () banked
  1312  001A3C  6FA2               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1313  001A3E  0E00               	movlw	0
  1314  001A40  0100               	movlb	0	; () banked
  1315  001A42  6FA3               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1316  001A44  0E00               	movlw	0
  1317  001A46  0100               	movlb	0	; () banked
  1318  001A48  6FA4               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1319  001A4A  0100               	movlb	0	; () banked
  1320  001A4C  0E00               	movlw	high _data_array
  1321  001A4E  0100               	movlb	0	; () banked
  1322  001A50  6FA6               	movwf	(CANsendMessage@data+1)& (0+255),b
  1323  001A52  0100               	movlb	0	; () banked
  1324  001A54  0E8B               	movlw	low _data_array
  1325  001A56  0100               	movlb	0	; () banked
  1326  001A58  6FA5               	movwf	CANsendMessage@data& (0+255),b
  1327  001A5A  0E08               	movlw	8
  1328  001A5C  0100               	movlb	0	; () banked
  1329  001A5E  6FA7               	movwf	CANsendMessage@dataLength& (0+255),b
  1330  001A60  0EFC               	movlw	252
  1331  001A62  0100               	movlb	0	; () banked
  1332  001A64  6FA8               	movwf	CANsendMessage@flags& (0+255),b
  1333  001A66  ECDD  F006         	call	_CANsendMessage	;wreg free
  1334                           
  1335                           ;motore.c: 214: request_sent = 1;
  1336  001A6A  0100               	movlb	(_request_sent/(0+8)) shr (0+8)
  1337  001A6C  8E47               	bsf	_request_sent/(0+8),_request_sent& (0+7),c
  1338  001A6E                     l4995:
  1339                           
  1340                           ;motore.c: 215: }
  1341                           ;motore.c: 216: if (request_sent == 1) {
  1342  001A6E  0100               	movlb	(_request_sent/(0+8)) shr (0+8)
  1343  001A70  AE47               	btfss	_request_sent/(0+8),_request_sent& (0+7),c
  1344  001A72  D01A               	goto	l5009
  1345                           
  1346                           ;motore.c: 218: if ((centralina_abs == 1)&&(centralina_sterzo == 1)&&(centralina_comando
      +                           == 1)) {
  1347  001A74  0100               	movlb	(_centralina_abs/(0+8)) shr (0+8)
  1348  001A76  A247               	btfss	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1349  001A78  D00E               	goto	l5005
  1350  001A7A  0100               	movlb	(_centralina_sterzo/(0+8)) shr (0+8)
  1351  001A7C  A647               	btfss	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1352  001A7E  D00B               	goto	l5005
  1353  001A80  0100               	movlb	(_centralina_comando/(0+8)) shr (0+8)
  1354  001A82  A447               	btfss	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1355  001A84  D008               	goto	l5005
  1356                           
  1357                           ;motore.c: 219: centralina_abs = 0;
  1358  001A86  0100               	movlb	(_centralina_abs/(0+8)) shr (0+8)
  1359  001A88  9247               	bcf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1360                           
  1361                           ;motore.c: 220: centralina_sterzo = 0;
  1362  001A8A  0100               	movlb	(_centralina_sterzo/(0+8)) shr (0+8)
  1363  001A8C  9647               	bcf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1364                           
  1365                           ;motore.c: 221: centralina_comando = 0;
  1366  001A8E  0100               	movlb	(_centralina_comando/(0+8)) shr (0+8)
  1367  001A90  9447               	bcf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1368                           
  1369                           ;motore.c: 222: PORTAbits.RA7 = 0;
  1370  001A92  9E80               	bcf	3968,7,c	;volatile
  1371                           
  1372                           ;motore.c: 223: } else {
  1373  001A94  D009               	goto	l5009
  1374  001A96                     l5005:
  1375                           
  1376                           ;motore.c: 224: SetDCEPWM1(0);
  1377  001A96  0E00               	movlw	0
  1378  001A98  0100               	movlb	0	; () banked
  1379  001A9A  6FA2               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1380  001A9C  0E00               	movlw	0
  1381  001A9E  0100               	movlb	0	; () banked
  1382  001AA0  6FA1               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  1383  001AA2  EC03  F015         	call	_SetDCEPWM1	;wreg free
  1384                           
  1385                           ;motore.c: 225: PORTAbits.RA7 = 1;
  1386  001AA6  8E80               	bsf	3968,7,c	;volatile
  1387  001AA8                     l5009:
  1388                           
  1389                           ;motore.c: 226: }
  1390                           ;motore.c: 227: }
  1391                           ;motore.c: 228: previousTimeCounter = timeCounter;
  1392  001AA8  C00D  F070         	movff	_timeCounter,_previousTimeCounter
  1393  001AAC  C00E  F071         	movff	_timeCounter+1,_previousTimeCounter+1
  1394  001AB0  C00F  F072         	movff	_timeCounter+2,_previousTimeCounter+2
  1395  001AB4  C010  F073         	movff	_timeCounter+3,_previousTimeCounter+3
  1396  001AB8                     l5011:
  1397                           
  1398                           ;motore.c: 229: }
  1399                           ;motore.c: 230: if ((timeCounter - previousTimeCounter2 >= 100)) {
  1400  001AB8  0100               	movlb	0	; () banked
  1401  001ABA  C078  F0BB         	movff	_previousTimeCounter2,??_main
  1402  001ABE  0100               	movlb	0	; () banked
  1403  001AC0  C079  F0BC         	movff	_previousTimeCounter2+1,??_main+1
  1404  001AC4  0100               	movlb	0	; () banked
  1405  001AC6  C07A  F0BD         	movff	_previousTimeCounter2+2,??_main+2
  1406  001ACA  0100               	movlb	0	; () banked
  1407  001ACC  C07B  F0BE         	movff	_previousTimeCounter2+3,??_main+3
  1408  001AD0  0100               	movlb	0	; () banked
  1409  001AD2  1FBB               	comf	??_main& (0+255),f,b
  1410  001AD4  1FBC               	comf	(??_main+1)& (0+255),f,b
  1411  001AD6  1FBD               	comf	(??_main+2)& (0+255),f,b
  1412  001AD8  1FBE               	comf	(??_main+3)& (0+255),f,b
  1413  001ADA  2BBB               	incf	??_main& (0+255),f,b
  1414  001ADC  0E00               	movlw	0
  1415  001ADE  23BC               	addwfc	(??_main+1)& (0+255),f,b
  1416  001AE0  23BD               	addwfc	(??_main+2)& (0+255),f,b
  1417  001AE2  23BE               	addwfc	(??_main+3)& (0+255),f,b
  1418  001AE4  500D               	movf	_timeCounter,w,c
  1419  001AE6  0100               	movlb	0	; () banked
  1420  001AE8  25BB               	addwf	??_main& (0+255),w,b
  1421  001AEA  0100               	movlb	0	; () banked
  1422  001AEC  6FBF               	movwf	(??_main+4)& (0+255),b
  1423  001AEE  500E               	movf	_timeCounter+1,w,c
  1424  001AF0  0100               	movlb	0	; () banked
  1425  001AF2  21BC               	addwfc	(??_main+1)& (0+255),w,b
  1426  001AF4  0100               	movlb	0	; () banked
  1427  001AF6  6FC0               	movwf	(??_main+5)& (0+255),b
  1428  001AF8  500F               	movf	_timeCounter+2,w,c
  1429  001AFA  0100               	movlb	0	; () banked
  1430  001AFC  21BD               	addwfc	(??_main+2)& (0+255),w,b
  1431  001AFE  0100               	movlb	0	; () banked
  1432  001B00  6FC1               	movwf	(??_main+6)& (0+255),b
  1433  001B02  5010               	movf	_timeCounter+3,w,c
  1434  001B04  0100               	movlb	0	; () banked
  1435  001B06  21BE               	addwfc	(??_main+3)& (0+255),w,b
  1436  001B08  0100               	movlb	0	; () banked
  1437  001B0A  6FC2               	movwf	(??_main+7)& (0+255),b
  1438  001B0C  0E64               	movlw	100
  1439  001B0E  0100               	movlb	0	; () banked
  1440  001B10  5DBF               	subwf	(??_main+4)& (0+255),w,b
  1441  001B12  0E00               	movlw	0
  1442  001B14  59C0               	subwfb	(??_main+5)& (0+255),w,b
  1443  001B16  0E00               	movlw	0
  1444  001B18  59C1               	subwfb	(??_main+6)& (0+255),w,b
  1445  001B1A  0E00               	movlw	0
  1446  001B1C  0100               	movlb	0	; () banked
  1447  001B1E  59C2               	subwfb	(??_main+7)& (0+255),w,b
  1448  001B20  A0D8               	btfss	status,0,c
  1449  001B22  D5B8               	goto	l4917
  1450                           
  1451                           ; BSR set to: 0
  1452                           ;motore.c: 232: battery_measure();
  1453  001B24  EC04  F014         	call	_battery_measure	;wreg free
  1454                           
  1455                           ;motore.c: 233: previousTimeCounter2 = timeCounter;
  1456  001B28  C00D  F078         	movff	_timeCounter,_previousTimeCounter2
  1457  001B2C  C00E  F079         	movff	_timeCounter+1,_previousTimeCounter2+1
  1458  001B30  C00F  F07A         	movff	_timeCounter+2,_previousTimeCounter2+2
  1459  001B34  C010  F07B         	movff	_timeCounter+3,_previousTimeCounter2+3
  1460  001B38  D5AD               	goto	l4917
  1461  001B3A                     __end_of_main:
  1462                           	opt stack 0
  1463                           tblptru	equ	0xFF8
  1464                           tblptrh	equ	0xFF7
  1465                           tblptrl	equ	0xFF6
  1466                           tablat	equ	0xFF5
  1467                           prodl	equ	0xFF3
  1468                           postinc0	equ	0xFEE
  1469                           wreg	equ	0xFE8
  1470                           status	equ	0xFD8
  1471                           
  1472 ;; *************** function _send_data *****************
  1473 ;; Defined at:
  1474 ;;		line 238 in file "motore.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  i               1   30[BANK0 ] unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;		None               void
  1481 ;; Registers used:
  1482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1488 ;;      Params:         0       0       0       0
  1489 ;;      Locals:         0       1       0       0
  1490 ;;      Temps:          0       0       0       0
  1491 ;;      Totals:         0       1       0       0
  1492 ;;Total ram usage:        1 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    4
  1495 ;; This function calls:
  1496 ;;		_CANisTxReady
  1497 ;;		_CANsendMessage
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text1
  1504  00260C                     __ptext1:
  1505                           	opt stack 0
  1506  00260C                     _send_data:
  1507                           	opt stack 26
  1508                           
  1509                           ;motore.c: 239: if (CANisTxReady()) {
  1510                           
  1511                           ;incstack = 0
  1512  00260C  ECA0  F015         	call	_CANisTxReady	;wreg free
  1513  002610  0900               	iorlw	0
  1514  002612  B4D8               	btfsc	status,2,c
  1515  002614  D036               	goto	l4857
  1516                           
  1517                           ;motore.c: 240: if (remote_frame == 1) {
  1518  002616  0100               	movlb	(_remote_frame/(0+8)) shr (0+8)
  1519  002618  AA47               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1520  00261A  D01A               	goto	l4853
  1521                           
  1522                           ;motore.c: 241: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1523  00261C  C005  F0A1         	movff	_id,CANsendMessage@identifier
  1524  002620  C006  F0A2         	movff	_id+1,CANsendMessage@identifier+1
  1525  002624  C007  F0A3         	movff	_id+2,CANsendMessage@identifier+2
  1526  002628  C008  F0A4         	movff	_id+3,CANsendMessage@identifier+3
  1527  00262C  0100               	movlb	0	; () banked
  1528  00262E  0E00               	movlw	high _data_array
  1529  002630  0100               	movlb	0	; () banked
  1530  002632  6FA6               	movwf	(CANsendMessage@data+1)& (0+255),b
  1531  002634  0100               	movlb	0	; () banked
  1532  002636  0E8B               	movlw	low _data_array
  1533  002638  0100               	movlb	0	; () banked
  1534  00263A  6FA5               	movwf	CANsendMessage@data& (0+255),b
  1535  00263C  0E08               	movlw	8
  1536  00263E  0100               	movlb	0	; () banked
  1537  002640  6FA7               	movwf	CANsendMessage@dataLength& (0+255),b
  1538  002642  0EBC               	movlw	188
  1539  002644  0100               	movlb	0	; () banked
  1540  002646  6FA8               	movwf	CANsendMessage@flags& (0+255),b
  1541  002648  ECDD  F006         	call	_CANsendMessage	;wreg free
  1542                           
  1543                           ;motore.c: 242: remote_frame = 0;
  1544  00264C  0100               	movlb	(_remote_frame/(0+8)) shr (0+8)
  1545  00264E  9A47               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1546  002650                     l4853:
  1547                           
  1548                           ;motore.c: 243: }
  1549                           ;motore.c: 244: if (can_retry ==1){
  1550  002650  0100               	movlb	(_can_retry/(0+8)) shr (0+8)
  1551  002652  A047               	btfss	_can_retry/(0+8),_can_retry& (0+7),c
  1552  002654  D016               	goto	l4857
  1553                           
  1554                           ;motore.c: 245: CANsendMessage(id1, data_array1, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_F
      +                          RAME & CAN_TX_PRIORITY_0);
  1555  002656  C009  F0A1         	movff	_id1,CANsendMessage@identifier
  1556  00265A  C00A  F0A2         	movff	_id1+1,CANsendMessage@identifier+1
  1557  00265E  C00B  F0A3         	movff	_id1+2,CANsendMessage@identifier+2
  1558  002662  C00C  F0A4         	movff	_id1+3,CANsendMessage@identifier+3
  1559  002666  0E00               	movlw	high _data_array1
  1560  002668  0100               	movlb	0	; () banked
  1561  00266A  6FA6               	movwf	(CANsendMessage@data+1)& (0+255),b
  1562  00266C  0E22               	movlw	low _data_array1
  1563  00266E  0100               	movlb	0	; () banked
  1564  002670  6FA5               	movwf	CANsendMessage@data& (0+255),b
  1565  002672  0E08               	movlw	8
  1566  002674  0100               	movlb	0	; () banked
  1567  002676  6FA7               	movwf	CANsendMessage@dataLength& (0+255),b
  1568  002678  0EBC               	movlw	188
  1569  00267A  0100               	movlb	0	; () banked
  1570  00267C  6FA8               	movwf	CANsendMessage@flags& (0+255),b
  1571  00267E  ECDD  F006         	call	_CANsendMessage	;wreg free
  1572  002682                     l4857:
  1573                           
  1574                           ;motore.c: 246: }
  1575                           ;motore.c: 247: }
  1576                           ;motore.c: 248: if ((TXB0CONbits.TXABT) || (TXB1CONbits.TXABT)) {
  1577  002682  010F               	movlb	15	; () banked
  1578  002684  BD40               	btfsc	64,6,b	;volatile
  1579  002686  D003               	goto	l709
  1580                           
  1581                           ; BSR set to: 15
  1582  002688  010F               	movlb	15	; () banked
  1583  00268A  AD30               	btfss	48,6,b	;volatile
  1584  00268C  D030               	goto	l707
  1585  00268E                     l709:
  1586                           
  1587                           ; BSR set to: 15
  1588                           ;motore.c: 249: can_retry = 1;
  1589  00268E  0100               	movlb	(_can_retry/(0+8)) shr (0+8)
  1590  002690  8047               	bsf	_can_retry/(0+8),_can_retry& (0+7),c
  1591                           
  1592                           ;motore.c: 250: id1 = id;
  1593  002692  C005  F009         	movff	_id,_id1
  1594  002696  C006  F00A         	movff	_id+1,_id1+1
  1595  00269A  C007  F00B         	movff	_id+2,_id1+2
  1596  00269E  C008  F00C         	movff	_id+3,_id1+3
  1597                           
  1598                           ;motore.c: 251: remote_frame1 = remote_frame;
  1599  0026A2  0100               	movlb	(_remote_frame/(0+8)) shr (0+8)
  1600  0026A4  0100               	movlb	(_remote_frame1/(0+8)) shr (0+8)
  1601  0026A6  9C47               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1602  0026A8  BA47               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c
  1603  0026AA  8C47               	bsf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1604                           
  1605                           ;motore.c: 252: for (char i=0;i<8;i++){
  1606  0026AC  0E00               	movlw	0
  1607  0026AE  0100               	movlb	0	; () banked
  1608  0026B0  6FB1               	movwf	send_data@i& (0+255),b
  1609  0026B2  D018               	goto	L2
  1610  0026B4                     l4867:
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;motore.c: 253: data_array1[i]= data_array[i];
  1614  0026B4  0100               	movlb	0	; () banked
  1615  0026B6  51B1               	movf	send_data@i& (0+255),w,b
  1616  0026B8  0D01               	mullw	1
  1617  0026BA  0100               	movlb	0	; () banked
  1618  0026BC  0E8B               	movlw	low _data_array
  1619  0026BE  24F3               	addwf	prodl,w,c
  1620  0026C0  6ED9               	movwf	fsr2l,c
  1621  0026C2  0100               	movlb	0	; () banked
  1622  0026C4  0E00               	movlw	high _data_array
  1623  0026C6  20F4               	addwfc	prodh,w,c
  1624  0026C8  6EDA               	movwf	fsr2h,c
  1625  0026CA  0100               	movlb	0	; () banked
  1626  0026CC  51B1               	movf	send_data@i& (0+255),w,b
  1627  0026CE  0D01               	mullw	1
  1628  0026D0  0E22               	movlw	low _data_array1
  1629  0026D2  24F3               	addwf	prodl,w,c
  1630  0026D4  6EE1               	movwf	fsr1l,c
  1631  0026D6  0E00               	movlw	high _data_array1
  1632  0026D8  20F4               	addwfc	prodh,w,c
  1633  0026DA  6EE2               	movwf	fsr1h,c
  1634  0026DC  CFDF FFE7          	movff	indf2,indf1
  1635                           
  1636                           ; BSR set to: 0
  1637  0026E0  0100               	movlb	0	; () banked
  1638  0026E2  2BB1               	incf	send_data@i& (0+255),f,b
  1639  0026E4                     L2:
  1640                           
  1641                           ; BSR set to: 0
  1642  0026E4  0E07               	movlw	7
  1643  0026E6  0100               	movlb	0	; () banked
  1644  0026E8  65B1               	cpfsgt	send_data@i& (0+255),b
  1645  0026EA  D7E4               	goto	l4867
  1646  0026EC  D019               	goto	l712
  1647  0026EE                     l707:
  1648                           
  1649                           ; BSR set to: 15
  1650                           ;motore.c: 256: can_retry = 0;
  1651  0026EE  0100               	movlb	(_can_retry/(0+8)) shr (0+8)
  1652  0026F0  9047               	bcf	_can_retry/(0+8),_can_retry& (0+7),c
  1653                           
  1654                           ;motore.c: 257: if (remote_frame1 != 0) {
  1655  0026F2  0100               	movlb	(_remote_frame1/(0+8)) shr (0+8)
  1656  0026F4  AC47               	btfss	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1657  0026F6  D012               	goto	l713
  1658                           
  1659                           ;motore.c: 258: remote_frame = remote_frame1;
  1660  0026F8  0100               	movlb	(_remote_frame1/(0+8)) shr (0+8)
  1661  0026FA  0100               	movlb	(_remote_frame/(0+8)) shr (0+8)
  1662  0026FC  9A47               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1663  0026FE  BC47               	btfsc	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1664  002700  8A47               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1665                           
  1666                           ;motore.c: 259: id = id1;
  1667  002702  C009  F005         	movff	_id1,_id
  1668  002706  C00A  F006         	movff	_id1+1,_id+1
  1669  00270A  C00B  F007         	movff	_id1+2,_id+2
  1670  00270E  C00C  F008         	movff	_id1+3,_id+3
  1671                           
  1672                           ;motore.c: 260: message_sent = 1;
  1673  002712  0100               	movlb	(_message_sent/(0+8)) shr (0+8)
  1674  002714  8847               	bsf	_message_sent/(0+8),_message_sent& (0+7),c
  1675                           
  1676                           ;motore.c: 261: remote_frame1 = 0;
  1677  002716  0100               	movlb	(_remote_frame1/(0+8)) shr (0+8)
  1678  002718  9C47               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1679                           
  1680                           ;motore.c: 262: } else {
  1681  00271A  D002               	goto	l712
  1682  00271C                     l713:
  1683                           
  1684                           ;motore.c: 264: message_sent = 0;
  1685  00271C  0100               	movlb	(_message_sent/(0+8)) shr (0+8)
  1686  00271E  9847               	bcf	_message_sent/(0+8),_message_sent& (0+7),c
  1687  002720                     l712:
  1688                           
  1689                           ;motore.c: 265: }
  1690                           ;motore.c: 266: }
  1691                           ;motore.c: 267: remote_frame = 0;
  1692  002720  0100               	movlb	(_remote_frame/(0+8)) shr (0+8)
  1693  002722  9A47               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1694  002724  0012               	return	
  1695  002726                     __end_of_send_data:
  1696                           	opt stack 0
  1697                           tblptru	equ	0xFF8
  1698                           tblptrh	equ	0xFF7
  1699                           tblptrl	equ	0xFF6
  1700                           tablat	equ	0xFF5
  1701                           prodh	equ	0xFF4
  1702                           prodl	equ	0xFF3
  1703                           postinc0	equ	0xFEE
  1704                           wreg	equ	0xFE8
  1705                           indf1	equ	0xFE7
  1706                           fsr1h	equ	0xFE2
  1707                           fsr1l	equ	0xFE1
  1708                           indf2	equ	0xFDF
  1709                           fsr2h	equ	0xFDA
  1710                           fsr2l	equ	0xFD9
  1711                           status	equ	0xFD8
  1712                           
  1713 ;; *************** function _delay_ms *****************
  1714 ;; Defined at:
  1715 ;;		line 61 in file "delay.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  value_ms        2   28[BANK0 ] unsigned int 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;		None               void
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1729 ;;      Params:         0       2       0       0
  1730 ;;      Locals:         0       0       0       0
  1731 ;;      Temps:          0       0       0       0
  1732 ;;      Totals:         0       2       0       0
  1733 ;;Total ram usage:        2 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    4
  1736 ;; This function calls:
  1737 ;;		___wmul
  1738 ;; This function is called by:
  1739 ;;		_main
  1740 ;;		_delay_s
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text2
  1745  002ACC                     __ptext2:
  1746                           	opt stack 0
  1747  002ACC                     _delay_ms:
  1748                           	opt stack 26
  1749                           
  1750                           ;delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  1751                           
  1752                           ;incstack = 0
  1753  002ACC  0100               	movlb	0	; () banked
  1754  002ACE  C0C5  F0A9         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  1755  002AD2  0100               	movlb	0	; () banked
  1756  002AD4  6BAA               	clrf	(___wmul@multiplier+1)& (0+255),b
  1757  002AD6  C0AF  F0AB         	movff	delay_ms@value_ms,___wmul@multiplicand
  1758  002ADA  C0B0  F0AC         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  1759  002ADE  EC85  F015         	call	___wmul	;wreg free
  1760  002AE2  0100               	movlb	0	; () banked
  1761  002AE4  C0A9  F07C         	movff	?___wmul,_clock_counter_reference	;volatile
  1762  002AE8  0100               	movlb	0	; () banked
  1763  002AEA  C0AA  F07D         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  1764                           
  1765                           ;delay.c: 75: while (clock_counter_reference) {
  1766  002AEE  D007               	goto	l573
  1767  002AF0                     l4709:
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;delay.c: 85: _delay(240);
  1771  002AF0  0E50               	movlw	80
  1772  002AF2                     u6617:
  1773  002AF2  2EE8               	decfsz	wreg,f,c
  1774  002AF4  D7FE               	goto	u6617
  1775                           
  1776                           ;delay.c: 88: clock_counter_reference--;
  1777  002AF6  0100               	movlb	0	; () banked
  1778  002AF8  077C               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  1779  002AFA  A0D8               	btfss	status,0,c
  1780  002AFC  077D               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  1781  002AFE                     l573:
  1782                           
  1783                           ; BSR set to: 0
  1784  002AFE  0100               	movlb	0	; () banked
  1785  002B00  517D               	movf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  1786  002B02  117C               	iorwf	_clock_counter_reference& (0+255),w,b	;volatile
  1787  002B04  B4D8               	btfsc	status,2,c
  1788                           
  1789                           ; BSR set to: 0
  1790                           
  1791                           ; BSR set to: 0
  1792  002B06  0012               	return	
  1793  002B08  D7F3               	goto	l4709
  1794  002B0A                     __end_of_delay_ms:
  1795                           	opt stack 0
  1796                           tblptru	equ	0xFF8
  1797                           tblptrh	equ	0xFF7
  1798                           tblptrl	equ	0xFF6
  1799                           tablat	equ	0xFF5
  1800                           prodh	equ	0xFF4
  1801                           prodl	equ	0xFF3
  1802                           postinc0	equ	0xFEE
  1803                           wreg	equ	0xFE8
  1804                           indf1	equ	0xFE7
  1805                           fsr1h	equ	0xFE2
  1806                           fsr1l	equ	0xFE1
  1807                           indf2	equ	0xFDF
  1808                           fsr2h	equ	0xFDA
  1809                           fsr2l	equ	0xFD9
  1810                           status	equ	0xFD8
  1811                           
  1812 ;; *************** function _configurazione_iniziale *****************
  1813 ;; Defined at:
  1814 ;;		line 282 in file "motore.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;		None
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;		None
  1819 ;; Return value:  Size  Location     Type
  1820 ;;		None               void
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1828 ;;      Params:         0       0       0       0
  1829 ;;      Locals:         0       0       0       0
  1830 ;;      Temps:          0       0       0       0
  1831 ;;      Totals:         0       0       0       0
  1832 ;;Total ram usage:        0 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    5
  1835 ;; This function calls:
  1836 ;;		_CANInitialize
  1837 ;; This function is called by:
  1838 ;;		_main
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text3
  1843  0028B2                     __ptext3:
  1844                           	opt stack 0
  1845  0028B2                     _configurazione_iniziale:
  1846                           	opt stack 25
  1847                           
  1848                           ;motore.c: 285: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1849                           
  1850                           ; BSR set to: 0
  1851                           ;incstack = 0
  1852  0028B2  0E06               	movlw	6
  1853  0028B4  0100               	movlb	0	; () banked
  1854  0028B6  6FAF               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1855  0028B8  0E05               	movlw	5
  1856  0028BA  0100               	movlb	0	; () banked
  1857  0028BC  6FB0               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1858  0028BE  0E01               	movlw	1
  1859  0028C0  0100               	movlb	0	; () banked
  1860  0028C2  6FB1               	movwf	CANInitialize@SJW& (0+255),b
  1861  0028C4  0E03               	movlw	3
  1862  0028C6  0100               	movlb	0	; () banked
  1863  0028C8  6FB2               	movwf	CANInitialize@BRP& (0+255),b
  1864  0028CA  0E9D               	movlw	157
  1865  0028CC  0100               	movlb	0	; () banked
  1866  0028CE  6FB3               	movwf	CANInitialize@flags& (0+255),b
  1867  0028D0  0E04               	movlw	4
  1868  0028D2  EC08  F012         	call	_CANInitialize
  1869                           
  1870                           ;motore.c: 286: RCONbits.IPEN = 1;
  1871  0028D6  8ED0               	bsf	4048,7,c	;volatile
  1872                           
  1873                           ;motore.c: 287: INTCONbits.INT0IF = 0;
  1874  0028D8  92F2               	bcf	intcon,1,c	;volatile
  1875                           
  1876                           ;motore.c: 288: INTCONbits.INT0IE = 1;
  1877  0028DA  88F2               	bsf	intcon,4,c	;volatile
  1878                           
  1879                           ;motore.c: 289: PIR3bits.RXB1IF = 0;
  1880  0028DC  92A4               	bcf	4004,1,c	;volatile
  1881                           
  1882                           ;motore.c: 290: PIR3bits.RXB0IF = 0;
  1883  0028DE  90A4               	bcf	4004,0,c	;volatile
  1884                           
  1885                           ;motore.c: 291: PIE3bits.RXB1IE = 1;
  1886  0028E0  82A3               	bsf	4003,1,c	;volatile
  1887                           
  1888                           ;motore.c: 292: PIE3bits.RXB0IE = 1;
  1889  0028E2  80A3               	bsf	4003,0,c	;volatile
  1890                           
  1891                           ;motore.c: 293: IPR3bits.RXB1IP = 0;
  1892  0028E4  92A5               	bcf	4005,1,c	;volatile
  1893                           
  1894                           ;motore.c: 294: IPR3bits.RXB0IP = 0;
  1895  0028E6  90A5               	bcf	4005,0,c	;volatile
  1896                           
  1897                           ;motore.c: 295: INTCONbits.GIEH = 1;
  1898  0028E8  8EF2               	bsf	intcon,7,c	;volatile
  1899                           
  1900                           ;motore.c: 296: INTCONbits.GIEL = 1;
  1901  0028EA  8CF2               	bsf	intcon,6,c	;volatile
  1902                           
  1903                           ;motore.c: 297: INTCON2bits.INTEDG0 = 1;
  1904  0028EC  8CF1               	bsf	intcon2,6,c	;volatile
  1905                           
  1906                           ;motore.c: 300: T3CON = 0x01;
  1907  0028EE  0E01               	movlw	1
  1908  0028F0  6EB1               	movwf	4017,c	;volatile
  1909                           
  1910                           ;motore.c: 301: PIR2bits.TMR3IF = 0;
  1911  0028F2  92A1               	bcf	4001,1,c	;volatile
  1912                           
  1913                           ;motore.c: 302: IPR2bits.TMR3IP = 0;
  1914  0028F4  92A2               	bcf	4002,1,c	;volatile
  1915                           
  1916                           ;motore.c: 303: TMR3H = 0x63;
  1917  0028F6  0E63               	movlw	99
  1918  0028F8  6EB3               	movwf	4019,c	;volatile
  1919                           
  1920                           ;motore.c: 304: TMR3L = 0xC0;
  1921  0028FA  0EC0               	movlw	192
  1922  0028FC  6EB2               	movwf	4018,c	;volatile
  1923                           
  1924                           ;motore.c: 305: PIE2bits.TMR3IE = 1;
  1925  0028FE  82A0               	bsf	4000,1,c	;volatile
  1926                           
  1927                           ;motore.c: 309: ADCON0bits.ADON = 1;
  1928  002900  80C2               	bsf	4034,0,c	;volatile
  1929                           
  1930                           ;motore.c: 310: ADCON0bits.CHS0 = 0;
  1931  002902  94C2               	bcf	4034,2,c	;volatile
  1932                           
  1933                           ;motore.c: 311: ADCON0bits.CHS1 = 0;
  1934  002904  96C2               	bcf	4034,3,c	;volatile
  1935                           
  1936                           ;motore.c: 312: ADCON0bits.CHS2 = 0;
  1937  002906  98C2               	bcf	4034,4,c	;volatile
  1938                           
  1939                           ;motore.c: 313: ADCON0bits.CHS3 = 0;
  1940  002908  9AC2               	bcf	4034,5,c	;volatile
  1941                           
  1942                           ;motore.c: 314: ADCON1bits.PCFG0 = 0;
  1943  00290A  90C1               	bcf	4033,0,c	;volatile
  1944                           
  1945                           ;motore.c: 315: ADCON1bits.PCFG1 = 1;
  1946  00290C  82C1               	bsf	4033,1,c	;volatile
  1947                           
  1948                           ;motore.c: 316: ADCON1bits.PCFG2 = 1;
  1949  00290E  84C1               	bsf	4033,2,c	;volatile
  1950                           
  1951                           ;motore.c: 317: ADCON1bits.PCFG3 = 1;
  1952  002910  86C1               	bsf	4033,3,c	;volatile
  1953                           
  1954                           ;motore.c: 318: ADCON1bits.VCFG0 = 0;
  1955  002912  98C1               	bcf	4033,4,c	;volatile
  1956                           
  1957                           ;motore.c: 319: ADCON1bits.VCFG1 = 0;
  1958  002914  9AC1               	bcf	4033,5,c	;volatile
  1959                           
  1960                           ;motore.c: 320: ADCON2bits.ADCS0 = 1;
  1961  002916  80C0               	bsf	4032,0,c	;volatile
  1962                           
  1963                           ;motore.c: 321: ADCON2bits.ADCS1 = 0;
  1964  002918  92C0               	bcf	4032,1,c	;volatile
  1965                           
  1966                           ;motore.c: 322: ADCON2bits.ADCS2 = 1;
  1967  00291A  84C0               	bsf	4032,2,c	;volatile
  1968                           
  1969                           ;motore.c: 323: ADCON2bits.ACQT0 = 0;
  1970  00291C  96C0               	bcf	4032,3,c	;volatile
  1971                           
  1972                           ;motore.c: 324: ADCON2bits.ACQT1 = 1;
  1973  00291E  88C0               	bsf	4032,4,c	;volatile
  1974                           
  1975                           ;motore.c: 325: ADCON2bits.ACQT2 = 1;
  1976  002920  8AC0               	bsf	4032,5,c	;volatile
  1977                           
  1978                           ;motore.c: 326: ADCON2bits.ADFM = 0;
  1979  002922  9EC0               	bcf	4032,7,c	;volatile
  1980                           
  1981                           ;motore.c: 330: LATA = 0x00;
  1982  002924  0E00               	movlw	0
  1983  002926  6E89               	movwf	3977,c	;volatile
  1984                           
  1985                           ;motore.c: 331: TRISA = 0b01111111;
  1986  002928  0E7F               	movlw	127
  1987  00292A  6E92               	movwf	3986,c	;volatile
  1988                           
  1989                           ;motore.c: 333: LATB = 0x00;
  1990  00292C  0E00               	movlw	0
  1991  00292E  6E8A               	movwf	3978,c	;volatile
  1992                           
  1993                           ;motore.c: 334: TRISB = 0b11111011;
  1994  002930  0EFB               	movlw	251
  1995  002932  6E93               	movwf	3987,c	;volatile
  1996                           
  1997                           ;motore.c: 336: LATC = 0x00;
  1998  002934  0E00               	movlw	0
  1999  002936  6E8B               	movwf	3979,c	;volatile
  2000                           
  2001                           ;motore.c: 337: TRISC = 0x00;
  2002  002938  0E00               	movlw	0
  2003  00293A  6E94               	movwf	3988,c	;volatile
  2004                           
  2005                           ;motore.c: 339: LATD = 0x00;
  2006  00293C  0E00               	movlw	0
  2007  00293E  6E8C               	movwf	3980,c	;volatile
  2008                           
  2009                           ;motore.c: 340: TRISD = 0x00;
  2010  002940  0E00               	movlw	0
  2011  002942  6E95               	movwf	3989,c	;volatile
  2012                           
  2013                           ;motore.c: 342: LATE = 0x00;
  2014  002944  0E00               	movlw	0
  2015  002946  6E8D               	movwf	3981,c	;volatile
  2016                           
  2017                           ;motore.c: 343: TRISE = 0xFF;
  2018  002948  6896               	setf	3990,c	;volatile
  2019  00294A  0012               	return	
  2020  00294C                     __end_of_configurazione_iniziale:
  2021                           	opt stack 0
  2022                           tblptru	equ	0xFF8
  2023                           tblptrh	equ	0xFF7
  2024                           tblptrl	equ	0xFF6
  2025                           tablat	equ	0xFF5
  2026                           prodh	equ	0xFF4
  2027                           prodl	equ	0xFF3
  2028                           intcon	equ	0xFF2
  2029                           intcon2	equ	0xFF1
  2030                           postinc0	equ	0xFEE
  2031                           wreg	equ	0xFE8
  2032                           indf1	equ	0xFE7
  2033                           fsr1h	equ	0xFE2
  2034                           fsr1l	equ	0xFE1
  2035                           indf2	equ	0xFDF
  2036                           fsr2h	equ	0xFDA
  2037                           fsr2l	equ	0xFD9
  2038                           status	equ	0xFD8
  2039                           
  2040 ;; *************** function _CANInitialize *****************
  2041 ;; Defined at:
  2042 ;;		line 218 in file "CANlib.h"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  propSeg         1    wreg     unsigned char 
  2045 ;;  phaseSeg1       1   28[BANK0 ] unsigned char 
  2046 ;;  phaseSeg2       1   29[BANK0 ] unsigned char 
  2047 ;;  SJW             1   30[BANK0 ] unsigned char 
  2048 ;;  BRP             1   31[BANK0 ] unsigned char 
  2049 ;;  flags           1   32[BANK0 ] enum E16885
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  propSeg         1   37[BANK0 ] unsigned char 
  2052 ;;  FilterConfig    1   39[BANK0 ] unsigned char 
  2053 ;;  FilterConfig    1   38[BANK0 ] unsigned char 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;		None               void
  2056 ;; Registers used:
  2057 ;;		wreg, status,2, status,0, cstack
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2063 ;;      Params:         0       5       0       0
  2064 ;;      Locals:         0       3       0       0
  2065 ;;      Temps:          0       4       0       0
  2066 ;;      Totals:         0      12       0       0
  2067 ;;Total ram usage:       12 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:    4
  2070 ;; This function calls:
  2071 ;;		_CANOperationMode
  2072 ;;		_CANSetFilter
  2073 ;;		_CANSetMask
  2074 ;; This function is called by:
  2075 ;;		_configurazione_iniziale
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text4
  2080  002410                     __ptext4:
  2081                           	opt stack 0
  2082  002410                     _CANInitialize:
  2083                           	opt stack 25
  2084                           
  2085                           ;incstack = 0
  2086                           ;CANInitialize@propSeg stored from wreg
  2087  002410  0100               	movlb	0	; () banked
  2088  002412  6FB8               	movwf	CANInitialize@propSeg& (0+255),b
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;CANlib.h: 220: BYTE FilterConfig1;
  2092                           ;CANlib.h: 221: BYTE FilterConfig2;
  2093                           ;CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2094  002414  0E80               	movlw	128
  2095  002416  ECC3  F015         	call	_CANOperationMode
  2096                           
  2097                           ;CANlib.h: 225: BRGCON1 = 0x00;
  2098  00241A  0E00               	movlw	0
  2099  00241C  6E70               	movwf	3952,c	;volatile
  2100                           
  2101                           ;CANlib.h: 226: BRGCON2 = 0x00;
  2102  00241E  0E00               	movlw	0
  2103  002420  6E71               	movwf	3953,c	;volatile
  2104                           
  2105                           ;CANlib.h: 227: BRGCON3 = 0x00;
  2106  002422  0E00               	movlw	0
  2107  002424  6E72               	movwf	3954,c	;volatile
  2108                           
  2109                           ;CANlib.h: 229: SJW= SJW << 6;
  2110  002426  0100               	movlb	0	; () banked
  2111  002428  41B1               	rrncf	CANInitialize@SJW& (0+255),w,b
  2112  00242A  42E8               	rrncf	wreg,f,c
  2113  00242C  0BC0               	andlw	192
  2114  00242E  0100               	movlb	0	; () banked
  2115  002430  6FB1               	movwf	CANInitialize@SJW& (0+255),b
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;CANlib.h: 230: BRGCON1 |= SJW;
  2119  002432  0100               	movlb	0	; () banked
  2120  002434  51B1               	movf	CANInitialize@SJW& (0+255),w,b
  2121  002436  1270               	iorwf	3952,f,c	;volatile
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;CANlib.h: 231: BRGCON1 |= BRP;
  2125  002438  0100               	movlb	0	; () banked
  2126  00243A  51B2               	movf	CANInitialize@BRP& (0+255),w,b
  2127  00243C  1270               	iorwf	3952,f,c	;volatile
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;CANlib.h: 233: BRGCON2 |= propSeg;
  2131  00243E  0100               	movlb	0	; () banked
  2132  002440  51B8               	movf	CANInitialize@propSeg& (0+255),w,b
  2133  002442  1271               	iorwf	3953,f,c	;volatile
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2137  002444  0100               	movlb	0	; () banked
  2138  002446  39AF               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2139  002448  42E8               	rrncf	wreg,f,c
  2140  00244A  0BF8               	andlw	248
  2141  00244C  0100               	movlb	0	; () banked
  2142  00244E  6FAF               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2146  002450  0100               	movlb	0	; () banked
  2147  002452  51AF               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2148  002454  1271               	iorwf	3953,f,c	;volatile
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2152  002456  0100               	movlb	0	; () banked
  2153  002458  A5B3               	btfss	CANInitialize@flags& (0+255),2,b
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;CANlib.h: 238: BRGCON2bits.SAM= 1;
  2157  00245A  8C71               	bsf	3953,6,c	;volatile
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2161  00245C  0100               	movlb	0	; () banked
  2162  00245E  B1B3               	btfsc	CANInitialize@flags& (0+255),0,b
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2166  002460  8E71               	bsf	3953,7,c	;volatile
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2170                           
  2171                           ; BSR set to: 0
  2172  002462  0100               	movlb	0	; () banked
  2173  002464  51B0               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2174  002466  1272               	iorwf	3954,f,c	;volatile
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2178  002468  0100               	movlb	0	; () banked
  2179  00246A  B3B3               	btfsc	CANInitialize@flags& (0+255),1,b
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2183  00246C  8C72               	bsf	3954,6,c	;volatile
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2187                           
  2188                           ; BSR set to: 0
  2189  00246E  0100               	movlb	0	; () banked
  2190  002470  51B3               	movf	CANInitialize@flags& (0+255),w,b
  2191  002472  0B60               	andlw	96
  2192  002474  6E60               	movwf	3936,c	;volatile
  2193                           
  2194                           ;CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON )
  2195  002476  C0B3  F0B4         	movff	CANInitialize@flags,??_CANInitialize
  2196  00247A  0E10               	movlw	16
  2197  00247C  0100               	movlb	0	; () banked
  2198  00247E  17B4               	andwf	??_CANInitialize& (0+255),f,b
  2199  002480  0100               	movlb	0	; () banked
  2200  002482  51B4               	movf	??_CANInitialize& (0+255),w,b
  2201  002484  0AFF               	xorlw	255
  2202  002486  B4D8               	btfsc	status,2,c
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2206  002488  8460               	bsf	3936,2,c	;volatile
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;CANlib.h: 255: RXB1CON = RXB0CON;
  2210  00248A  CF60 FF50          	movff	3936,3920	;volatile
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2214  00248E  0E00               	movlw	0
  2215  002490  0100               	movlb	0	; () banked
  2216  002492  6FA1               	movwf	CANSetMask@mask& (0+255),b
  2217  002494  0E00               	movlw	0
  2218  002496  0100               	movlb	0	; () banked
  2219  002498  6FA2               	movwf	(CANSetMask@mask+1)& (0+255),b
  2220  00249A  0E00               	movlw	0
  2221  00249C  0100               	movlb	0	; () banked
  2222  00249E  6FA3               	movwf	(CANSetMask@mask+2)& (0+255),b
  2223  0024A0  0E00               	movlw	0
  2224  0024A2  0100               	movlb	0	; () banked
  2225  0024A4  6FA4               	movwf	(CANSetMask@mask+3)& (0+255),b
  2226  0024A6  0EF7               	movlw	247
  2227  0024A8  0100               	movlb	0	; () banked
  2228  0024AA  6FA5               	movwf	CANSetMask@type& (0+255),b
  2229  0024AC  0E01               	movlw	1
  2230  0024AE  EC07  F010         	call	_CANSetMask
  2231                           
  2232                           ;CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2233  0024B2  0E00               	movlw	0
  2234  0024B4  0100               	movlb	0	; () banked
  2235  0024B6  6FA1               	movwf	CANSetMask@mask& (0+255),b
  2236  0024B8  0E00               	movlw	0
  2237  0024BA  0100               	movlb	0	; () banked
  2238  0024BC  6FA2               	movwf	(CANSetMask@mask+1)& (0+255),b
  2239  0024BE  0E00               	movlw	0
  2240  0024C0  0100               	movlb	0	; () banked
  2241  0024C2  6FA3               	movwf	(CANSetMask@mask+2)& (0+255),b
  2242  0024C4  0E00               	movlw	0
  2243  0024C6  0100               	movlb	0	; () banked
  2244  0024C8  6FA4               	movwf	(CANSetMask@mask+3)& (0+255),b
  2245  0024CA  0EF7               	movlw	247
  2246  0024CC  0100               	movlb	0	; () banked
  2247  0024CE  6FA5               	movwf	CANSetMask@type& (0+255),b
  2248  0024D0  0E02               	movlw	2
  2249  0024D2  EC07  F010         	call	_CANSetMask
  2250                           
  2251                           ;CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2252  0024D6  D00F               	goto	l4399
  2253  0024D8                     l4393:
  2254                           
  2255                           ;CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2256  0024D8  0EF7               	movlw	247
  2257  0024DA  0100               	movlb	0	; () banked
  2258  0024DC  6FB9               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2259  0024DE  D007               	goto	L3
  2260  0024E0                     l362:
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2264  0024E0  0100               	movlb	0	; () banked
  2265  0024E2  69B9               	setf	CANInitialize@FilterConfig1& (0+255),b
  2266                           
  2267                           ;CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2268  0024E4  0100               	movlb	0	; () banked
  2269  0024E6  69BA               	setf	CANInitialize@FilterConfig2& (0+255),b
  2270                           
  2271                           ;CANlib.h: 273: break;
  2272  0024E8  D027               	goto	l4401
  2273  0024EA                     l363:
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2277  0024EA  0100               	movlb	0	; () banked
  2278  0024EC  69B9               	setf	CANInitialize@FilterConfig1& (0+255),b
  2279  0024EE                     L3:
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2283  0024EE  0EF7               	movlw	247
  2284  0024F0  0100               	movlb	0	; () banked
  2285  0024F2  6FBA               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2286                           
  2287                           ;CANlib.h: 277: break;
  2288  0024F4  D021               	goto	l4401
  2289  0024F6                     l4399:
  2290  0024F6  0E9F               	movlw	159
  2291  0024F8  0100               	movlb	0	; () banked
  2292  0024FA  6FB4               	movwf	??_CANInitialize& (0+255),b
  2293  0024FC  0EFF               	movlw	255
  2294  0024FE  6FB5               	movwf	(??_CANInitialize+1)& (0+255),b
  2295  002500  0100               	movlb	0	; () banked
  2296  002502  51B3               	movf	CANInitialize@flags& (0+255),w,b
  2297  002504  0B60               	andlw	96
  2298  002506  0100               	movlb	0	; () banked
  2299  002508  6FB6               	movwf	(??_CANInitialize+2)& (0+255),b
  2300  00250A  6BB7               	clrf	(??_CANInitialize+3)& (0+255),b
  2301  00250C  0100               	movlb	0	; () banked
  2302  00250E  51B4               	movf	??_CANInitialize& (0+255),w,b
  2303  002510  0100               	movlb	0	; () banked
  2304  002512  13B6               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2305  002514  0100               	movlb	0	; () banked
  2306  002516  51B5               	movf	(??_CANInitialize+1)& (0+255),w,b
  2307  002518  0100               	movlb	0	; () banked
  2308  00251A  13B7               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2309                           
  2310                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2311                           ; Switch size 1, requested type "space"
  2312                           ; Number of cases is 1, Range of values is 0 to 0
  2313                           ; switch strategies available:
  2314                           ; Name         Instructions Cycles
  2315                           ; simple_byte            4     3 (average)
  2316                           ;	Chosen strategy is simple_byte
  2317  00251C  0100               	movlb	0	; () banked
  2318  00251E  51B7               	movf	(??_CANInitialize+3)& (0+255),w,b
  2319  002520  0A00               	xorlw	0	; case 0
  2320  002522  A4D8               	btfss	status,2,c
  2321  002524  D7E2               	goto	l363
  2322                           
  2323                           ; BSR set to: 0
  2324                           ; Switch size 1, requested type "space"
  2325                           ; Number of cases is 2, Range of values is 191 to 223
  2326                           ; switch strategies available:
  2327                           ; Name         Instructions Cycles
  2328                           ; simple_byte            7     4 (average)
  2329                           ;	Chosen strategy is simple_byte
  2330  002526  0100               	movlb	0	; () banked
  2331  002528  51B6               	movf	(??_CANInitialize+2)& (0+255),w,b
  2332  00252A  0ABF               	xorlw	191	; case 191
  2333  00252C  B4D8               	btfsc	status,2,c
  2334  00252E  D7D8               	goto	l362
  2335  002530  0A60               	xorlw	96	; case 223
  2336  002532  B4D8               	btfsc	status,2,c
  2337  002534  D7D1               	goto	l4393
  2338  002536  D7D9               	goto	l363
  2339  002538                     l4401:
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2343  002538  0E00               	movlw	0
  2344  00253A  0100               	movlb	0	; () banked
  2345  00253C  6FA1               	movwf	CANSetFilter@filter& (0+255),b
  2346  00253E  0E00               	movlw	0
  2347  002540  0100               	movlb	0	; () banked
  2348  002542  6FA2               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2349  002544  0E00               	movlw	0
  2350  002546  0100               	movlb	0	; () banked
  2351  002548  6FA3               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2352  00254A  0E00               	movlw	0
  2353  00254C  0100               	movlb	0	; () banked
  2354  00254E  6FA4               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2355  002550  C0B9  F0A5         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2356  002554  0E00               	movlw	0
  2357  002556  ECC8  F000         	call	_CANSetFilter
  2358                           
  2359                           ;CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2360  00255A  0E00               	movlw	0
  2361  00255C  0100               	movlb	0	; () banked
  2362  00255E  6FA1               	movwf	CANSetFilter@filter& (0+255),b
  2363  002560  0E00               	movlw	0
  2364  002562  0100               	movlb	0	; () banked
  2365  002564  6FA2               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2366  002566  0E00               	movlw	0
  2367  002568  0100               	movlb	0	; () banked
  2368  00256A  6FA3               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2369  00256C  0E00               	movlw	0
  2370  00256E  0100               	movlb	0	; () banked
  2371  002570  6FA4               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2372  002572  C0B9  F0A5         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2373  002576  0E01               	movlw	1
  2374  002578  ECC8  F000         	call	_CANSetFilter
  2375                           
  2376                           ;CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2377  00257C  0E00               	movlw	0
  2378  00257E  0100               	movlb	0	; () banked
  2379  002580  6FA1               	movwf	CANSetFilter@filter& (0+255),b
  2380  002582  0E00               	movlw	0
  2381  002584  0100               	movlb	0	; () banked
  2382  002586  6FA2               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2383  002588  0E00               	movlw	0
  2384  00258A  0100               	movlb	0	; () banked
  2385  00258C  6FA3               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2386  00258E  0E00               	movlw	0
  2387  002590  0100               	movlb	0	; () banked
  2388  002592  6FA4               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2389  002594  C0BA  F0A5         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2390  002598  0E02               	movlw	2
  2391  00259A  ECC8  F000         	call	_CANSetFilter
  2392                           
  2393                           ;CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2394  00259E  0E00               	movlw	0
  2395  0025A0  0100               	movlb	0	; () banked
  2396  0025A2  6FA1               	movwf	CANSetFilter@filter& (0+255),b
  2397  0025A4  0E00               	movlw	0
  2398  0025A6  0100               	movlb	0	; () banked
  2399  0025A8  6FA2               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2400  0025AA  0E00               	movlw	0
  2401  0025AC  0100               	movlb	0	; () banked
  2402  0025AE  6FA3               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2403  0025B0  0E00               	movlw	0
  2404  0025B2  0100               	movlb	0	; () banked
  2405  0025B4  6FA4               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2406  0025B6  C0BA  F0A5         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2407  0025BA  0E03               	movlw	3
  2408  0025BC  ECC8  F000         	call	_CANSetFilter
  2409                           
  2410                           ;CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2411  0025C0  0E00               	movlw	0
  2412  0025C2  0100               	movlb	0	; () banked
  2413  0025C4  6FA1               	movwf	CANSetFilter@filter& (0+255),b
  2414  0025C6  0E00               	movlw	0
  2415  0025C8  0100               	movlb	0	; () banked
  2416  0025CA  6FA2               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2417  0025CC  0E00               	movlw	0
  2418  0025CE  0100               	movlb	0	; () banked
  2419  0025D0  6FA3               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2420  0025D2  0E00               	movlw	0
  2421  0025D4  0100               	movlb	0	; () banked
  2422  0025D6  6FA4               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2423  0025D8  C0BA  F0A5         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2424  0025DC  0E04               	movlw	4
  2425  0025DE  ECC8  F000         	call	_CANSetFilter
  2426                           
  2427                           ;CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2428  0025E2  0E00               	movlw	0
  2429  0025E4  0100               	movlb	0	; () banked
  2430  0025E6  6FA1               	movwf	CANSetFilter@filter& (0+255),b
  2431  0025E8  0E00               	movlw	0
  2432  0025EA  0100               	movlb	0	; () banked
  2433  0025EC  6FA2               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2434  0025EE  0E00               	movlw	0
  2435  0025F0  0100               	movlb	0	; () banked
  2436  0025F2  6FA3               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2437  0025F4  0E00               	movlw	0
  2438  0025F6  0100               	movlb	0	; () banked
  2439  0025F8  6FA4               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2440  0025FA  C0BA  F0A5         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2441  0025FE  0E05               	movlw	5
  2442  002600  ECC8  F000         	call	_CANSetFilter
  2443                           
  2444                           ;CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2445  002604  0E00               	movlw	0
  2446  002606  ECC3  F015         	call	_CANOperationMode
  2447  00260A  0012               	return	
  2448  00260C                     __end_of_CANInitialize:
  2449                           	opt stack 0
  2450                           tblptru	equ	0xFF8
  2451                           tblptrh	equ	0xFF7
  2452                           tblptrl	equ	0xFF6
  2453                           tablat	equ	0xFF5
  2454                           prodh	equ	0xFF4
  2455                           prodl	equ	0xFF3
  2456                           intcon	equ	0xFF2
  2457                           intcon2	equ	0xFF1
  2458                           postinc0	equ	0xFEE
  2459                           wreg	equ	0xFE8
  2460                           indf1	equ	0xFE7
  2461                           fsr1h	equ	0xFE2
  2462                           fsr1l	equ	0xFE1
  2463                           indf2	equ	0xFDF
  2464                           fsr2h	equ	0xFDA
  2465                           fsr2l	equ	0xFD9
  2466                           status	equ	0xFD8
  2467                           
  2468 ;; *************** function _CANSetMask *****************
  2469 ;; Defined at:
  2470 ;;		line 640 in file "CANlib.h"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  numBuffer       1    wreg     enum E16919
  2473 ;;  mask            4   14[BANK0 ] unsigned long 
  2474 ;;  type            1   18[BANK0 ] enum E16885
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  numBuffer       1   23[BANK0 ] enum E16919
  2477 ;;  tamp            4   24[BANK0 ] unsigned long 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;		None               void
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2487 ;;      Params:         0       5       0       0
  2488 ;;      Locals:         0       5       0       0
  2489 ;;      Temps:          0       4       0       0
  2490 ;;      Totals:         0      14       0       0
  2491 ;;Total ram usage:       14 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:    3
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_CANInitialize
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text5
  2502  00200E                     __ptext5:
  2503                           	opt stack 0
  2504  00200E                     _CANSetMask:
  2505                           	opt stack 25
  2506                           
  2507                           ;incstack = 0
  2508                           ;CANSetMask@numBuffer stored from wreg
  2509  00200E  0100               	movlb	0	; () banked
  2510  002010  6FAA               	movwf	CANSetMask@numBuffer& (0+255),b
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2514  002012  0100               	movlb	0	; () banked
  2515  002014  05AA               	decf	CANSetMask@numBuffer& (0+255),w,b
  2516  002016  A4D8               	btfss	status,2,c
  2517  002018  D061               	goto	l3963
  2518                           
  2519                           ; BSR set to: 0
  2520  00201A  0100               	movlb	0	; () banked
  2521  00201C  29A5               	incf	CANSetMask@type& (0+255),w,b
  2522  00201E  A4D8               	btfss	status,2,c
  2523  002020  D05D               	goto	l3963
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;CANlib.h: 644: {
  2527                           ;CANlib.h: 645: tamp = (mask >> 3);
  2528  002022  0100               	movlb	0	; () banked
  2529  002024  C0A1  F0A6         	movff	CANSetMask@mask,??_CANSetMask
  2530  002028  0100               	movlb	0	; () banked
  2531  00202A  C0A2  F0A7         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2532  00202E  0100               	movlb	0	; () banked
  2533  002030  C0A3  F0A8         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2534  002034  0100               	movlb	0	; () banked
  2535  002036  C0A4  F0A9         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2536  00203A  0E04               	movlw	4
  2537  00203C  D006               	goto	u4680
  2538  00203E                     u4685:
  2539  00203E  0100               	movlb	0	; () banked
  2540  002040  90D8               	bcf	status,0,c
  2541  002042  33A9               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2542  002044  33A8               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2543  002046  33A7               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2544  002048  33A6               	rrcf	??_CANSetMask& (0+255),f,b
  2545  00204A                     u4680:
  2546  00204A  2EE8               	decfsz	wreg,f,c
  2547  00204C  D7F8               	goto	u4685
  2548  00204E  C0A6  F0AB         	movff	??_CANSetMask,CANSetMask@tamp
  2549  002052  C0A7  F0AC         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2550  002056  C0A8  F0AD         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2551  00205A  C0A9  F0AE         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;CANlib.h: 646: tamp = tamp & 0x000000FF;
  2555  00205E  0100               	movlb	0	; () banked
  2556  002060  51AB               	movf	CANSetMask@tamp& (0+255),w,b
  2557  002062  0100               	movlb	0	; () banked
  2558  002064  6FAB               	movwf	CANSetMask@tamp& (0+255),b
  2559  002066  0100               	movlb	0	; () banked
  2560  002068  6BAC               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2561  00206A  0100               	movlb	0	; () banked
  2562  00206C  6BAD               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2563  00206E  0100               	movlb	0	; () banked
  2564  002070  6BAE               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  2568  002072  C0AB  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;CANlib.h: 649: tamp = mask & 0x00000007;
  2572  002076  0E07               	movlw	7
  2573  002078  0100               	movlb	0	; () banked
  2574  00207A  15A1               	andwf	CANSetMask@mask& (0+255),w,b
  2575  00207C  0100               	movlb	0	; () banked
  2576  00207E  6FAB               	movwf	CANSetMask@tamp& (0+255),b
  2577  002080  0E00               	movlw	0
  2578  002082  0100               	movlb	0	; () banked
  2579  002084  15A2               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2580  002086  0100               	movlb	0	; () banked
  2581  002088  6FAC               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2582  00208A  0E00               	movlw	0
  2583  00208C  0100               	movlb	0	; () banked
  2584  00208E  15A3               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2585  002090  0100               	movlb	0	; () banked
  2586  002092  6FAD               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2587  002094  0E00               	movlw	0
  2588  002096  0100               	movlb	0	; () banked
  2589  002098  15A4               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2590  00209A  0100               	movlb	0	; () banked
  2591  00209C  6FAE               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;CANlib.h: 650: tamp = tamp << 5;
  2595  00209E  0100               	movlb	0	; () banked
  2596  0020A0  C0AB  F0A6         	movff	CANSetMask@tamp,??_CANSetMask
  2597  0020A4  0100               	movlb	0	; () banked
  2598  0020A6  C0AC  F0A7         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2599  0020AA  0100               	movlb	0	; () banked
  2600  0020AC  C0AD  F0A8         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2601  0020B0  0100               	movlb	0	; () banked
  2602  0020B2  C0AE  F0A9         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2603  0020B6  0E05               	movlw	5
  2604  0020B8                     u4695:
  2605  0020B8  90D8               	bcf	status,0,c
  2606  0020BA  0100               	movlb	0	; () banked
  2607  0020BC  37A6               	rlcf	??_CANSetMask& (0+255),f,b
  2608  0020BE  37A7               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2609  0020C0  37A8               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2610  0020C2  37A9               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2611  0020C4  2EE8               	decfsz	wreg,f,c
  2612  0020C6  D7F8               	goto	u4695
  2613  0020C8  C0A6  F0AB         	movff	??_CANSetMask,CANSetMask@tamp
  2614  0020CC  C0A7  F0AC         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2615  0020D0  C0A8  F0AD         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2616  0020D4  C0A9  F0AE         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  2620  0020D8  C0AB  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2621  0020DC                     l3963:
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;CANlib.h: 652: }
  2625                           ;CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2626  0020DC  0100               	movlb	0	; () banked
  2627  0020DE  51AA               	movf	CANSetMask@numBuffer& (0+255),w,b
  2628  0020E0  0A02               	xorlw	2
  2629  0020E2  A4D8               	btfss	status,2,c
  2630  0020E4  D061               	goto	l3979
  2631                           
  2632                           ; BSR set to: 0
  2633  0020E6  0100               	movlb	0	; () banked
  2634  0020E8  29A5               	incf	CANSetMask@type& (0+255),w,b
  2635  0020EA  A4D8               	btfss	status,2,c
  2636  0020EC  D05D               	goto	l3979
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;CANlib.h: 655: {
  2640                           ;CANlib.h: 656: tamp = (mask >> 3);
  2641  0020EE  0100               	movlb	0	; () banked
  2642  0020F0  C0A1  F0A6         	movff	CANSetMask@mask,??_CANSetMask
  2643  0020F4  0100               	movlb	0	; () banked
  2644  0020F6  C0A2  F0A7         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2645  0020FA  0100               	movlb	0	; () banked
  2646  0020FC  C0A3  F0A8         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2647  002100  0100               	movlb	0	; () banked
  2648  002102  C0A4  F0A9         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2649  002106  0E04               	movlw	4
  2650  002108  D006               	goto	u4720
  2651  00210A                     u4725:
  2652  00210A  0100               	movlb	0	; () banked
  2653  00210C  90D8               	bcf	status,0,c
  2654  00210E  33A9               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2655  002110  33A8               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2656  002112  33A7               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2657  002114  33A6               	rrcf	??_CANSetMask& (0+255),f,b
  2658  002116                     u4720:
  2659  002116  2EE8               	decfsz	wreg,f,c
  2660  002118  D7F8               	goto	u4725
  2661  00211A  C0A6  F0AB         	movff	??_CANSetMask,CANSetMask@tamp
  2662  00211E  C0A7  F0AC         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2663  002122  C0A8  F0AD         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2664  002126  C0A9  F0AE         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;CANlib.h: 657: tamp = tamp & 0x000000FF;
  2668  00212A  0100               	movlb	0	; () banked
  2669  00212C  51AB               	movf	CANSetMask@tamp& (0+255),w,b
  2670  00212E  0100               	movlb	0	; () banked
  2671  002130  6FAB               	movwf	CANSetMask@tamp& (0+255),b
  2672  002132  0100               	movlb	0	; () banked
  2673  002134  6BAC               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2674  002136  0100               	movlb	0	; () banked
  2675  002138  6BAD               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2676  00213A  0100               	movlb	0	; () banked
  2677  00213C  6BAE               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  2681  00213E  C0AB  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;CANlib.h: 660: tamp = mask & 0x00000007;
  2685  002142  0E07               	movlw	7
  2686  002144  0100               	movlb	0	; () banked
  2687  002146  15A1               	andwf	CANSetMask@mask& (0+255),w,b
  2688  002148  0100               	movlb	0	; () banked
  2689  00214A  6FAB               	movwf	CANSetMask@tamp& (0+255),b
  2690  00214C  0E00               	movlw	0
  2691  00214E  0100               	movlb	0	; () banked
  2692  002150  15A2               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2693  002152  0100               	movlb	0	; () banked
  2694  002154  6FAC               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2695  002156  0E00               	movlw	0
  2696  002158  0100               	movlb	0	; () banked
  2697  00215A  15A3               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2698  00215C  0100               	movlb	0	; () banked
  2699  00215E  6FAD               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2700  002160  0E00               	movlw	0
  2701  002162  0100               	movlb	0	; () banked
  2702  002164  15A4               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2703  002166  0100               	movlb	0	; () banked
  2704  002168  6FAE               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;CANlib.h: 661: tamp = tamp << 5;
  2708  00216A  0100               	movlb	0	; () banked
  2709  00216C  C0AB  F0A6         	movff	CANSetMask@tamp,??_CANSetMask
  2710  002170  0100               	movlb	0	; () banked
  2711  002172  C0AC  F0A7         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2712  002176  0100               	movlb	0	; () banked
  2713  002178  C0AD  F0A8         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2714  00217C  0100               	movlb	0	; () banked
  2715  00217E  C0AE  F0A9         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2716  002182  0E05               	movlw	5
  2717  002184                     u4735:
  2718  002184  90D8               	bcf	status,0,c
  2719  002186  0100               	movlb	0	; () banked
  2720  002188  37A6               	rlcf	??_CANSetMask& (0+255),f,b
  2721  00218A  37A7               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2722  00218C  37A8               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2723  00218E  37A9               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2724  002190  2EE8               	decfsz	wreg,f,c
  2725  002192  D7F8               	goto	u4735
  2726  002194  C0A6  F0AB         	movff	??_CANSetMask,CANSetMask@tamp
  2727  002198  C0A7  F0AC         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2728  00219C  C0A8  F0AD         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2729  0021A0  C0A9  F0AE         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  2733  0021A4  C0AB  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2734  0021A8                     l3979:
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;CANlib.h: 663: }
  2738                           ;CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2739  0021A8  0100               	movlb	0	; () banked
  2740  0021AA  05AA               	decf	CANSetMask@numBuffer& (0+255),w,b
  2741  0021AC  A4D8               	btfss	status,2,c
  2742  0021AE  D095               	goto	l4011
  2743                           
  2744                           ; BSR set to: 0
  2745  0021B0  0100               	movlb	0	; () banked
  2746  0021B2  51A5               	movf	CANSetMask@type& (0+255),w,b
  2747  0021B4  0AF7               	xorlw	247
  2748  0021B6  A4D8               	btfss	status,2,c
  2749  0021B8  D090               	goto	l4011
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;CANlib.h: 666: {
  2753                           ;CANlib.h: 667: tamp = mask & 0x000000FF;
  2754  0021BA  0100               	movlb	0	; () banked
  2755  0021BC  51A1               	movf	CANSetMask@mask& (0+255),w,b
  2756  0021BE  0100               	movlb	0	; () banked
  2757  0021C0  6FAB               	movwf	CANSetMask@tamp& (0+255),b
  2758  0021C2  0100               	movlb	0	; () banked
  2759  0021C4  6BAC               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2760  0021C6  0100               	movlb	0	; () banked
  2761  0021C8  6BAD               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2762  0021CA  0100               	movlb	0	; () banked
  2763  0021CC  6BAE               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  2767  0021CE  C0AB  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;CANlib.h: 670: tamp = mask & 0x0000FF00;
  2771  0021D2  0E00               	movlw	0
  2772  0021D4  0100               	movlb	0	; () banked
  2773  0021D6  15A1               	andwf	CANSetMask@mask& (0+255),w,b
  2774  0021D8  0100               	movlb	0	; () banked
  2775  0021DA  6FAB               	movwf	CANSetMask@tamp& (0+255),b
  2776  0021DC  0EFF               	movlw	255
  2777  0021DE  0100               	movlb	0	; () banked
  2778  0021E0  15A2               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2779  0021E2  0100               	movlb	0	; () banked
  2780  0021E4  6FAC               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2781  0021E6  0E00               	movlw	0
  2782  0021E8  0100               	movlb	0	; () banked
  2783  0021EA  15A3               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2784  0021EC  0100               	movlb	0	; () banked
  2785  0021EE  6FAD               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2786  0021F0  0E00               	movlw	0
  2787  0021F2  0100               	movlb	0	; () banked
  2788  0021F4  15A4               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2789  0021F6  0100               	movlb	0	; () banked
  2790  0021F8  6FAE               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;CANlib.h: 671: tamp = tamp >> 8;
  2794  0021FA  0100               	movlb	0	; () banked
  2795  0021FC  C0AB  F0A6         	movff	CANSetMask@tamp,??_CANSetMask
  2796  002200  0100               	movlb	0	; () banked
  2797  002202  C0AC  F0A7         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2798  002206  0100               	movlb	0	; () banked
  2799  002208  C0AD  F0A8         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2800  00220C  0100               	movlb	0	; () banked
  2801  00220E  C0AE  F0A9         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2802  002212  C0A7  F0A6         	movff	??_CANSetMask+1,??_CANSetMask
  2803  002216  C0A8  F0A7         	movff	??_CANSetMask+2,??_CANSetMask+1
  2804  00221A  C0A9  F0A8         	movff	??_CANSetMask+3,??_CANSetMask+2
  2805  00221E  0100               	movlb	0	; () banked
  2806  002220  6BA9               	clrf	(??_CANSetMask+3)& (0+255),b
  2807  002222  C0A6  F0AB         	movff	??_CANSetMask,CANSetMask@tamp
  2808  002226  C0A7  F0AC         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2809  00222A  C0A8  F0AD         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2810  00222E  C0A9  F0AE         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  2814  002232  C0AB  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2815                           
  2816                           ; BSR set to: 0
  2817                           ;CANlib.h: 674: if (mask & 0x00010000)
  2818  002236  0100               	movlb	0	; () banked
  2819  002238  A1A3               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2820  00223A  D003               	goto	l436
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  2824  00223C  010F               	movlb	15	; () banked
  2825  00223E  8119               	bsf	25,0,b	;volatile
  2826  002240  D002               	goto	l437
  2827  002242                     l436:
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;CANlib.h: 676: else
  2831                           ;CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  2832  002242  010F               	movlb	15	; () banked
  2833  002244  9119               	bcf	25,0,b	;volatile
  2834  002246                     l437:
  2835                           
  2836                           ; BSR set to: 15
  2837                           ;CANlib.h: 679: if (mask & 0x00020000)
  2838  002246  0100               	movlb	0	; () banked
  2839  002248  A3A3               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2840  00224A  D003               	goto	l438
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  2844  00224C  010F               	movlb	15	; () banked
  2845  00224E  8319               	bsf	25,1,b	;volatile
  2846  002250  D002               	goto	l439
  2847  002252                     l438:
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;CANlib.h: 681: else
  2851                           ;CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  2852  002252  010F               	movlb	15	; () banked
  2853  002254  9319               	bcf	25,1,b	;volatile
  2854  002256                     l439:
  2855                           
  2856                           ; BSR set to: 15
  2857                           ;CANlib.h: 684: if (mask & 0x00040000)
  2858  002256  0100               	movlb	0	; () banked
  2859  002258  A5A3               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2860  00225A  D003               	goto	l440
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  2864  00225C  010F               	movlb	15	; () banked
  2865  00225E  8B19               	bsf	25,5,b	;volatile
  2866  002260  D002               	goto	l441
  2867  002262                     l440:
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;CANlib.h: 686: else
  2871                           ;CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  2872  002262  010F               	movlb	15	; () banked
  2873  002264  9B19               	bcf	25,5,b	;volatile
  2874  002266                     l441:
  2875                           
  2876                           ; BSR set to: 15
  2877                           ;CANlib.h: 689: if (mask & 0x00080000)
  2878  002266  0100               	movlb	0	; () banked
  2879  002268  A7A3               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2880  00226A  D003               	goto	l442
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  2884  00226C  010F               	movlb	15	; () banked
  2885  00226E  8D19               	bsf	25,6,b	;volatile
  2886  002270  D002               	goto	l443
  2887  002272                     l442:
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;CANlib.h: 691: else
  2891                           ;CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  2892  002272  010F               	movlb	15	; () banked
  2893  002274  9D19               	bcf	25,6,b	;volatile
  2894  002276                     l443:
  2895                           
  2896                           ; BSR set to: 15
  2897                           ;CANlib.h: 694: if (mask & 0x00100000)
  2898  002276  0100               	movlb	0	; () banked
  2899  002278  A9A3               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2900  00227A  D003               	goto	l444
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  2904  00227C  010F               	movlb	15	; () banked
  2905  00227E  8F19               	bsf	25,7,b	;volatile
  2906  002280  D002               	goto	l4005
  2907  002282                     l444:
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;CANlib.h: 696: else
  2911                           ;CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  2912  002282  010F               	movlb	15	; () banked
  2913  002284  9F19               	bcf	25,7,b	;volatile
  2914  002286                     l4005:
  2915                           
  2916                           ; BSR set to: 15
  2917                           ;CANlib.h: 699: tamp = (mask >> 21);
  2918  002286  0100               	movlb	0	; () banked
  2919  002288  C0A1  F0A6         	movff	CANSetMask@mask,??_CANSetMask
  2920  00228C  0100               	movlb	0	; () banked
  2921  00228E  C0A2  F0A7         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2922  002292  0100               	movlb	0	; () banked
  2923  002294  C0A3  F0A8         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2924  002298  0100               	movlb	0	; () banked
  2925  00229A  C0A4  F0A9         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2926  00229E  0E16               	movlw	22
  2927  0022A0  D006               	goto	u4810
  2928  0022A2                     u4815:
  2929  0022A2  0100               	movlb	0	; () banked
  2930  0022A4  90D8               	bcf	status,0,c
  2931  0022A6  33A9               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2932  0022A8  33A8               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2933  0022AA  33A7               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2934  0022AC  33A6               	rrcf	??_CANSetMask& (0+255),f,b
  2935  0022AE                     u4810:
  2936  0022AE  2EE8               	decfsz	wreg,f,c
  2937  0022B0  D7F8               	goto	u4815
  2938  0022B2  C0A6  F0AB         	movff	??_CANSetMask,CANSetMask@tamp
  2939  0022B6  C0A7  F0AC         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2940  0022BA  C0A8  F0AD         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2941  0022BE  C0A9  F0AE         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2942                           
  2943                           ; BSR set to: 0
  2944                           ;CANlib.h: 700: tamp = tamp & 0x000000FF;
  2945  0022C2  0100               	movlb	0	; () banked
  2946  0022C4  51AB               	movf	CANSetMask@tamp& (0+255),w,b
  2947  0022C6  0100               	movlb	0	; () banked
  2948  0022C8  6FAB               	movwf	CANSetMask@tamp& (0+255),b
  2949  0022CA  0100               	movlb	0	; () banked
  2950  0022CC  6BAC               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2951  0022CE  0100               	movlb	0	; () banked
  2952  0022D0  6BAD               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2953  0022D2  0100               	movlb	0	; () banked
  2954  0022D4  6BAE               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  2958  0022D6  C0AB  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2959  0022DA                     l4011:
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;CANlib.h: 702: }
  2963                           ;CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2964  0022DA  0100               	movlb	0	; () banked
  2965  0022DC  51AA               	movf	CANSetMask@numBuffer& (0+255),w,b
  2966  0022DE  0A02               	xorlw	2
  2967  0022E0  A4D8               	btfss	status,2,c
  2968  0022E2  D095               	goto	l457
  2969                           
  2970                           ; BSR set to: 0
  2971  0022E4  0100               	movlb	0	; () banked
  2972  0022E6  51A5               	movf	CANSetMask@type& (0+255),w,b
  2973  0022E8  0AF7               	xorlw	247
  2974  0022EA  A4D8               	btfss	status,2,c
  2975  0022EC  D090               	goto	l457
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;CANlib.h: 705: {
  2979                           ;CANlib.h: 706: tamp = mask & 0x000000FF;
  2980  0022EE  0100               	movlb	0	; () banked
  2981  0022F0  51A1               	movf	CANSetMask@mask& (0+255),w,b
  2982  0022F2  0100               	movlb	0	; () banked
  2983  0022F4  6FAB               	movwf	CANSetMask@tamp& (0+255),b
  2984  0022F6  0100               	movlb	0	; () banked
  2985  0022F8  6BAC               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2986  0022FA  0100               	movlb	0	; () banked
  2987  0022FC  6BAD               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2988  0022FE  0100               	movlb	0	; () banked
  2989  002300  6BAE               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  2993  002302  C0AB  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;CANlib.h: 709: tamp = mask & 0x0000FF00;
  2997  002306  0E00               	movlw	0
  2998  002308  0100               	movlb	0	; () banked
  2999  00230A  15A1               	andwf	CANSetMask@mask& (0+255),w,b
  3000  00230C  0100               	movlb	0	; () banked
  3001  00230E  6FAB               	movwf	CANSetMask@tamp& (0+255),b
  3002  002310  0EFF               	movlw	255
  3003  002312  0100               	movlb	0	; () banked
  3004  002314  15A2               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3005  002316  0100               	movlb	0	; () banked
  3006  002318  6FAC               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3007  00231A  0E00               	movlw	0
  3008  00231C  0100               	movlb	0	; () banked
  3009  00231E  15A3               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3010  002320  0100               	movlb	0	; () banked
  3011  002322  6FAD               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3012  002324  0E00               	movlw	0
  3013  002326  0100               	movlb	0	; () banked
  3014  002328  15A4               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3015  00232A  0100               	movlb	0	; () banked
  3016  00232C  6FAE               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;CANlib.h: 710: tamp = tamp >> 8;
  3020  00232E  0100               	movlb	0	; () banked
  3021  002330  C0AB  F0A6         	movff	CANSetMask@tamp,??_CANSetMask
  3022  002334  0100               	movlb	0	; () banked
  3023  002336  C0AC  F0A7         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3024  00233A  0100               	movlb	0	; () banked
  3025  00233C  C0AD  F0A8         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3026  002340  0100               	movlb	0	; () banked
  3027  002342  C0AE  F0A9         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3028  002346  C0A7  F0A6         	movff	??_CANSetMask+1,??_CANSetMask
  3029  00234A  C0A8  F0A7         	movff	??_CANSetMask+2,??_CANSetMask+1
  3030  00234E  C0A9  F0A8         	movff	??_CANSetMask+3,??_CANSetMask+2
  3031  002352  0100               	movlb	0	; () banked
  3032  002354  6BA9               	clrf	(??_CANSetMask+3)& (0+255),b
  3033  002356  C0A6  F0AB         	movff	??_CANSetMask,CANSetMask@tamp
  3034  00235A  C0A7  F0AC         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3035  00235E  C0A8  F0AD         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3036  002362  C0A9  F0AE         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3040  002366  C0AB  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;CANlib.h: 713: if (mask & 0x00010000)
  3044  00236A  0100               	movlb	0	; () banked
  3045  00236C  A1A3               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3046  00236E  D003               	goto	l447
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3050  002370  010F               	movlb	15	; () banked
  3051  002372  811D               	bsf	29,0,b	;volatile
  3052  002374  D002               	goto	l448
  3053  002376                     l447:
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;CANlib.h: 715: else
  3057                           ;CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3058  002376  010F               	movlb	15	; () banked
  3059  002378  911D               	bcf	29,0,b	;volatile
  3060  00237A                     l448:
  3061                           
  3062                           ; BSR set to: 15
  3063                           ;CANlib.h: 718: if (mask & 0x00020000)
  3064  00237A  0100               	movlb	0	; () banked
  3065  00237C  A3A3               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3066  00237E  D003               	goto	l449
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3070  002380  010F               	movlb	15	; () banked
  3071  002382  831D               	bsf	29,1,b	;volatile
  3072  002384  D002               	goto	l450
  3073  002386                     l449:
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;CANlib.h: 720: else
  3077                           ;CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3078  002386  010F               	movlb	15	; () banked
  3079  002388  931D               	bcf	29,1,b	;volatile
  3080  00238A                     l450:
  3081                           
  3082                           ; BSR set to: 15
  3083                           ;CANlib.h: 723: if (mask & 0x00040000)
  3084  00238A  0100               	movlb	0	; () banked
  3085  00238C  A5A3               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3086  00238E  D003               	goto	l451
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3090  002390  010F               	movlb	15	; () banked
  3091  002392  8B1D               	bsf	29,5,b	;volatile
  3092  002394  D002               	goto	l452
  3093  002396                     l451:
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;CANlib.h: 725: else
  3097                           ;CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3098  002396  010F               	movlb	15	; () banked
  3099  002398  9B1D               	bcf	29,5,b	;volatile
  3100  00239A                     l452:
  3101                           
  3102                           ; BSR set to: 15
  3103                           ;CANlib.h: 728: if (mask & 0x00080000)
  3104  00239A  0100               	movlb	0	; () banked
  3105  00239C  A7A3               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3106  00239E  D003               	goto	l453
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3110  0023A0  010F               	movlb	15	; () banked
  3111  0023A2  8D1D               	bsf	29,6,b	;volatile
  3112  0023A4  D002               	goto	l454
  3113  0023A6                     l453:
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;CANlib.h: 730: else
  3117                           ;CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3118  0023A6  010F               	movlb	15	; () banked
  3119  0023A8  9D1D               	bcf	29,6,b	;volatile
  3120  0023AA                     l454:
  3121                           
  3122                           ; BSR set to: 15
  3123                           ;CANlib.h: 733: if (mask & 0x00100000)
  3124  0023AA  0100               	movlb	0	; () banked
  3125  0023AC  A9A3               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3126  0023AE  D003               	goto	l455
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3130  0023B0  010F               	movlb	15	; () banked
  3131  0023B2  8F1D               	bsf	29,7,b	;volatile
  3132  0023B4  D002               	goto	l4037
  3133  0023B6                     l455:
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;CANlib.h: 735: else
  3137                           ;CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3138  0023B6  010F               	movlb	15	; () banked
  3139  0023B8  9F1D               	bcf	29,7,b	;volatile
  3140  0023BA                     l4037:
  3141                           
  3142                           ; BSR set to: 15
  3143                           ;CANlib.h: 738: tamp = (mask >> 21);
  3144  0023BA  0100               	movlb	0	; () banked
  3145  0023BC  C0A1  F0A6         	movff	CANSetMask@mask,??_CANSetMask
  3146  0023C0  0100               	movlb	0	; () banked
  3147  0023C2  C0A2  F0A7         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3148  0023C6  0100               	movlb	0	; () banked
  3149  0023C8  C0A3  F0A8         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3150  0023CC  0100               	movlb	0	; () banked
  3151  0023CE  C0A4  F0A9         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3152  0023D2  0E16               	movlw	22
  3153  0023D4  D006               	goto	u4890
  3154  0023D6                     u4895:
  3155  0023D6  0100               	movlb	0	; () banked
  3156  0023D8  90D8               	bcf	status,0,c
  3157  0023DA  33A9               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3158  0023DC  33A8               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3159  0023DE  33A7               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3160  0023E0  33A6               	rrcf	??_CANSetMask& (0+255),f,b
  3161  0023E2                     u4890:
  3162  0023E2  2EE8               	decfsz	wreg,f,c
  3163  0023E4  D7F8               	goto	u4895
  3164  0023E6  C0A6  F0AB         	movff	??_CANSetMask,CANSetMask@tamp
  3165  0023EA  C0A7  F0AC         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3166  0023EE  C0A8  F0AD         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3167  0023F2  C0A9  F0AE         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;CANlib.h: 739: tamp = tamp & 0x000000FF;
  3171  0023F6  0100               	movlb	0	; () banked
  3172  0023F8  51AB               	movf	CANSetMask@tamp& (0+255),w,b
  3173  0023FA  0100               	movlb	0	; () banked
  3174  0023FC  6FAB               	movwf	CANSetMask@tamp& (0+255),b
  3175  0023FE  0100               	movlb	0	; () banked
  3176  002400  6BAC               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3177  002402  0100               	movlb	0	; () banked
  3178  002404  6BAD               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3179  002406  0100               	movlb	0	; () banked
  3180  002408  6BAE               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3184  00240A  C0AB  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3185  00240E                     l457:
  3186                           
  3187                           ; BSR set to: 0
  3188  00240E  0012               	return	
  3189  002410                     __end_of_CANSetMask:
  3190                           	opt stack 0
  3191                           tblptru	equ	0xFF8
  3192                           tblptrh	equ	0xFF7
  3193                           tblptrl	equ	0xFF6
  3194                           tablat	equ	0xFF5
  3195                           prodh	equ	0xFF4
  3196                           prodl	equ	0xFF3
  3197                           intcon	equ	0xFF2
  3198                           intcon2	equ	0xFF1
  3199                           postinc0	equ	0xFEE
  3200                           wreg	equ	0xFE8
  3201                           indf1	equ	0xFE7
  3202                           fsr1h	equ	0xFE2
  3203                           fsr1l	equ	0xFE1
  3204                           indf2	equ	0xFDF
  3205                           fsr2h	equ	0xFDA
  3206                           fsr2l	equ	0xFD9
  3207                           status	equ	0xFD8
  3208                           
  3209 ;; *************** function _CANSetFilter *****************
  3210 ;; Defined at:
  3211 ;;		line 748 in file "CANlib.h"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  numBuffer       1    wreg     enum E16922
  3214 ;;  filter          4   14[BANK0 ] unsigned long 
  3215 ;;  type            1   18[BANK0 ] enum E16885
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;  numBuffer       1   23[BANK0 ] enum E16922
  3218 ;;  tamp            4   24[BANK0 ] unsigned long 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;		None               void
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3228 ;;      Params:         0       5       0       0
  3229 ;;      Locals:         0       5       0       0
  3230 ;;      Temps:          0       4       0       0
  3231 ;;      Totals:         0      14       0       0
  3232 ;;Total ram usage:       14 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    3
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_CANInitialize
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           	psect	text6
  3243  000190                     __ptext6:
  3244                           	opt stack 0
  3245  000190                     _CANSetFilter:
  3246                           	opt stack 25
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;incstack = 0
  3250                           ;CANSetFilter@numBuffer stored from wreg
  3251  000190  0100               	movlb	0	; () banked
  3252  000192  6FAA               	movwf	CANSetFilter@numBuffer& (0+255),b
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;CANlib.h: 750: unsigned long tamp;
  3256                           ;CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3257  000194  0100               	movlb	0	; () banked
  3258  000196  67AA               	tstfsz	CANSetFilter@numBuffer& (0+255),b
  3259  000198  D063               	goto	l4061
  3260                           
  3261                           ; BSR set to: 0
  3262  00019A  0100               	movlb	0	; () banked
  3263  00019C  29A5               	incf	CANSetFilter@type& (0+255),w,b
  3264  00019E  A4D8               	btfss	status,2,c
  3265  0001A0  D05F               	goto	l4061
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;CANlib.h: 753: {
  3269                           ;CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3270  0001A2  010F               	movlb	15	; () banked
  3271  0001A4  9701               	bcf	1,3,b	;volatile
  3272                           
  3273                           ; BSR set to: 15
  3274                           ;CANlib.h: 756: tamp = (filter >> 3);
  3275  0001A6  0100               	movlb	0	; () banked
  3276  0001A8  C0A1  F0A6         	movff	CANSetFilter@filter,??_CANSetFilter
  3277  0001AC  0100               	movlb	0	; () banked
  3278  0001AE  C0A2  F0A7         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3279  0001B2  0100               	movlb	0	; () banked
  3280  0001B4  C0A3  F0A8         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3281  0001B8  0100               	movlb	0	; () banked
  3282  0001BA  C0A4  F0A9         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3283  0001BE  0E04               	movlw	4
  3284  0001C0  D006               	goto	u4920
  3285  0001C2                     u4925:
  3286  0001C2  0100               	movlb	0	; () banked
  3287  0001C4  90D8               	bcf	status,0,c
  3288  0001C6  33A9               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3289  0001C8  33A8               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3290  0001CA  33A7               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3291  0001CC  33A6               	rrcf	??_CANSetFilter& (0+255),f,b
  3292  0001CE                     u4920:
  3293  0001CE  2EE8               	decfsz	wreg,f,c
  3294  0001D0  D7F8               	goto	u4925
  3295  0001D2  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  3296  0001D6  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3297  0001DA  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3298  0001DE  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;CANlib.h: 757: tamp = tamp & 0x000000FF;
  3302  0001E2  0100               	movlb	0	; () banked
  3303  0001E4  51AB               	movf	CANSetFilter@tamp& (0+255),w,b
  3304  0001E6  0100               	movlb	0	; () banked
  3305  0001E8  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  3306  0001EA  0100               	movlb	0	; () banked
  3307  0001EC  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3308  0001EE  0100               	movlb	0	; () banked
  3309  0001F0  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3310  0001F2  0100               	movlb	0	; () banked
  3311  0001F4  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3315  0001F6  C0AB  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;CANlib.h: 760: tamp = filter & 0x00000007;
  3319  0001FA  0E07               	movlw	7
  3320  0001FC  0100               	movlb	0	; () banked
  3321  0001FE  15A1               	andwf	CANSetFilter@filter& (0+255),w,b
  3322  000200  0100               	movlb	0	; () banked
  3323  000202  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  3324  000204  0E00               	movlw	0
  3325  000206  0100               	movlb	0	; () banked
  3326  000208  15A2               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3327  00020A  0100               	movlb	0	; () banked
  3328  00020C  6FAC               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3329  00020E  0E00               	movlw	0
  3330  000210  0100               	movlb	0	; () banked
  3331  000212  15A3               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3332  000214  0100               	movlb	0	; () banked
  3333  000216  6FAD               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3334  000218  0E00               	movlw	0
  3335  00021A  0100               	movlb	0	; () banked
  3336  00021C  15A4               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3337  00021E  0100               	movlb	0	; () banked
  3338  000220  6FAE               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;CANlib.h: 761: tamp = tamp << 5;
  3342  000222  0100               	movlb	0	; () banked
  3343  000224  C0AB  F0A6         	movff	CANSetFilter@tamp,??_CANSetFilter
  3344  000228  0100               	movlb	0	; () banked
  3345  00022A  C0AC  F0A7         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3346  00022E  0100               	movlb	0	; () banked
  3347  000230  C0AD  F0A8         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3348  000234  0100               	movlb	0	; () banked
  3349  000236  C0AE  F0A9         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3350  00023A  0E05               	movlw	5
  3351  00023C                     u4935:
  3352  00023C  90D8               	bcf	status,0,c
  3353  00023E  0100               	movlb	0	; () banked
  3354  000240  37A6               	rlcf	??_CANSetFilter& (0+255),f,b
  3355  000242  37A7               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3356  000244  37A8               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3357  000246  37A9               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3358  000248  2EE8               	decfsz	wreg,f,c
  3359  00024A  D7F8               	goto	u4935
  3360  00024C  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  3361  000250  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3362  000254  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3363  000258  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3367  00025C  C0AB  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3368  000260                     l4061:
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;CANlib.h: 763: }
  3372                           ;CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3373  000260  0100               	movlb	0	; () banked
  3374  000262  05AA               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3375  000264  A4D8               	btfss	status,2,c
  3376  000266  D063               	goto	l4079
  3377                           
  3378                           ; BSR set to: 0
  3379  000268  0100               	movlb	0	; () banked
  3380  00026A  29A5               	incf	CANSetFilter@type& (0+255),w,b
  3381  00026C  A4D8               	btfss	status,2,c
  3382  00026E  D05F               	goto	l4079
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;CANlib.h: 766: {
  3386                           ;CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3387  000270  010F               	movlb	15	; () banked
  3388  000272  9705               	bcf	5,3,b	;volatile
  3389                           
  3390                           ; BSR set to: 15
  3391                           ;CANlib.h: 769: tamp = (filter >> 3);
  3392  000274  0100               	movlb	0	; () banked
  3393  000276  C0A1  F0A6         	movff	CANSetFilter@filter,??_CANSetFilter
  3394  00027A  0100               	movlb	0	; () banked
  3395  00027C  C0A2  F0A7         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3396  000280  0100               	movlb	0	; () banked
  3397  000282  C0A3  F0A8         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3398  000286  0100               	movlb	0	; () banked
  3399  000288  C0A4  F0A9         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3400  00028C  0E04               	movlw	4
  3401  00028E  D006               	goto	u4960
  3402  000290                     u4965:
  3403  000290  0100               	movlb	0	; () banked
  3404  000292  90D8               	bcf	status,0,c
  3405  000294  33A9               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3406  000296  33A8               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3407  000298  33A7               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3408  00029A  33A6               	rrcf	??_CANSetFilter& (0+255),f,b
  3409  00029C                     u4960:
  3410  00029C  2EE8               	decfsz	wreg,f,c
  3411  00029E  D7F8               	goto	u4965
  3412  0002A0  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  3413  0002A4  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3414  0002A8  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3415  0002AC  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;CANlib.h: 770: tamp = tamp & 0x000000FF;
  3419  0002B0  0100               	movlb	0	; () banked
  3420  0002B2  51AB               	movf	CANSetFilter@tamp& (0+255),w,b
  3421  0002B4  0100               	movlb	0	; () banked
  3422  0002B6  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  3423  0002B8  0100               	movlb	0	; () banked
  3424  0002BA  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3425  0002BC  0100               	movlb	0	; () banked
  3426  0002BE  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3427  0002C0  0100               	movlb	0	; () banked
  3428  0002C2  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3432  0002C4  C0AB  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;CANlib.h: 773: tamp = filter & 0x00000007;
  3436  0002C8  0E07               	movlw	7
  3437  0002CA  0100               	movlb	0	; () banked
  3438  0002CC  15A1               	andwf	CANSetFilter@filter& (0+255),w,b
  3439  0002CE  0100               	movlb	0	; () banked
  3440  0002D0  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  3441  0002D2  0E00               	movlw	0
  3442  0002D4  0100               	movlb	0	; () banked
  3443  0002D6  15A2               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3444  0002D8  0100               	movlb	0	; () banked
  3445  0002DA  6FAC               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3446  0002DC  0E00               	movlw	0
  3447  0002DE  0100               	movlb	0	; () banked
  3448  0002E0  15A3               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3449  0002E2  0100               	movlb	0	; () banked
  3450  0002E4  6FAD               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3451  0002E6  0E00               	movlw	0
  3452  0002E8  0100               	movlb	0	; () banked
  3453  0002EA  15A4               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3454  0002EC  0100               	movlb	0	; () banked
  3455  0002EE  6FAE               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;CANlib.h: 774: tamp = tamp << 5;
  3459  0002F0  0100               	movlb	0	; () banked
  3460  0002F2  C0AB  F0A6         	movff	CANSetFilter@tamp,??_CANSetFilter
  3461  0002F6  0100               	movlb	0	; () banked
  3462  0002F8  C0AC  F0A7         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3463  0002FC  0100               	movlb	0	; () banked
  3464  0002FE  C0AD  F0A8         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3465  000302  0100               	movlb	0	; () banked
  3466  000304  C0AE  F0A9         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3467  000308  0E05               	movlw	5
  3468  00030A                     u4975:
  3469  00030A  90D8               	bcf	status,0,c
  3470  00030C  0100               	movlb	0	; () banked
  3471  00030E  37A6               	rlcf	??_CANSetFilter& (0+255),f,b
  3472  000310  37A7               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3473  000312  37A8               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3474  000314  37A9               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3475  000316  2EE8               	decfsz	wreg,f,c
  3476  000318  D7F8               	goto	u4975
  3477  00031A  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  3478  00031E  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3479  000322  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3480  000326  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3484  00032A  C0AB  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3485  00032E                     l4079:
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;CANlib.h: 776: }
  3489                           ;CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3490  00032E  0100               	movlb	0	; () banked
  3491  000330  51AA               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3492  000332  0A02               	xorlw	2
  3493  000334  A4D8               	btfss	status,2,c
  3494  000336  D063               	goto	l4097
  3495                           
  3496                           ; BSR set to: 0
  3497  000338  0100               	movlb	0	; () banked
  3498  00033A  29A5               	incf	CANSetFilter@type& (0+255),w,b
  3499  00033C  A4D8               	btfss	status,2,c
  3500  00033E  D05F               	goto	l4097
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;CANlib.h: 779: {
  3504                           ;CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3505  000340  010F               	movlb	15	; () banked
  3506  000342  9709               	bcf	9,3,b	;volatile
  3507                           
  3508                           ; BSR set to: 15
  3509                           ;CANlib.h: 782: tamp = (filter >> 3);
  3510  000344  0100               	movlb	0	; () banked
  3511  000346  C0A1  F0A6         	movff	CANSetFilter@filter,??_CANSetFilter
  3512  00034A  0100               	movlb	0	; () banked
  3513  00034C  C0A2  F0A7         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3514  000350  0100               	movlb	0	; () banked
  3515  000352  C0A3  F0A8         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3516  000356  0100               	movlb	0	; () banked
  3517  000358  C0A4  F0A9         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3518  00035C  0E04               	movlw	4
  3519  00035E  D006               	goto	u5000
  3520  000360                     u5005:
  3521  000360  0100               	movlb	0	; () banked
  3522  000362  90D8               	bcf	status,0,c
  3523  000364  33A9               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3524  000366  33A8               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3525  000368  33A7               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3526  00036A  33A6               	rrcf	??_CANSetFilter& (0+255),f,b
  3527  00036C                     u5000:
  3528  00036C  2EE8               	decfsz	wreg,f,c
  3529  00036E  D7F8               	goto	u5005
  3530  000370  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  3531  000374  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3532  000378  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3533  00037C  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;CANlib.h: 783: tamp = tamp & 0x000000FF;
  3537  000380  0100               	movlb	0	; () banked
  3538  000382  51AB               	movf	CANSetFilter@tamp& (0+255),w,b
  3539  000384  0100               	movlb	0	; () banked
  3540  000386  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  3541  000388  0100               	movlb	0	; () banked
  3542  00038A  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3543  00038C  0100               	movlb	0	; () banked
  3544  00038E  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3545  000390  0100               	movlb	0	; () banked
  3546  000392  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3550  000394  C0AB  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;CANlib.h: 786: tamp = filter & 0x00000007;
  3554  000398  0E07               	movlw	7
  3555  00039A  0100               	movlb	0	; () banked
  3556  00039C  15A1               	andwf	CANSetFilter@filter& (0+255),w,b
  3557  00039E  0100               	movlb	0	; () banked
  3558  0003A0  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  3559  0003A2  0E00               	movlw	0
  3560  0003A4  0100               	movlb	0	; () banked
  3561  0003A6  15A2               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3562  0003A8  0100               	movlb	0	; () banked
  3563  0003AA  6FAC               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3564  0003AC  0E00               	movlw	0
  3565  0003AE  0100               	movlb	0	; () banked
  3566  0003B0  15A3               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3567  0003B2  0100               	movlb	0	; () banked
  3568  0003B4  6FAD               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3569  0003B6  0E00               	movlw	0
  3570  0003B8  0100               	movlb	0	; () banked
  3571  0003BA  15A4               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3572  0003BC  0100               	movlb	0	; () banked
  3573  0003BE  6FAE               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;CANlib.h: 787: tamp = tamp << 5;
  3577  0003C0  0100               	movlb	0	; () banked
  3578  0003C2  C0AB  F0A6         	movff	CANSetFilter@tamp,??_CANSetFilter
  3579  0003C6  0100               	movlb	0	; () banked
  3580  0003C8  C0AC  F0A7         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3581  0003CC  0100               	movlb	0	; () banked
  3582  0003CE  C0AD  F0A8         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3583  0003D2  0100               	movlb	0	; () banked
  3584  0003D4  C0AE  F0A9         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3585  0003D8  0E05               	movlw	5
  3586  0003DA                     u5015:
  3587  0003DA  90D8               	bcf	status,0,c
  3588  0003DC  0100               	movlb	0	; () banked
  3589  0003DE  37A6               	rlcf	??_CANSetFilter& (0+255),f,b
  3590  0003E0  37A7               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3591  0003E2  37A8               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3592  0003E4  37A9               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3593  0003E6  2EE8               	decfsz	wreg,f,c
  3594  0003E8  D7F8               	goto	u5015
  3595  0003EA  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  3596  0003EE  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3597  0003F2  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3598  0003F6  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  3602  0003FA  C0AB  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3603  0003FE                     l4097:
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;CANlib.h: 789: }
  3607                           ;CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3608  0003FE  0100               	movlb	0	; () banked
  3609  000400  51AA               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3610  000402  0A03               	xorlw	3
  3611  000404  A4D8               	btfss	status,2,c
  3612  000406  D063               	goto	l4115
  3613                           
  3614                           ; BSR set to: 0
  3615  000408  0100               	movlb	0	; () banked
  3616  00040A  29A5               	incf	CANSetFilter@type& (0+255),w,b
  3617  00040C  A4D8               	btfss	status,2,c
  3618  00040E  D05F               	goto	l4115
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;CANlib.h: 792: {
  3622                           ;CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  3623  000410  010F               	movlb	15	; () banked
  3624  000412  970D               	bcf	13,3,b	;volatile
  3625                           
  3626                           ; BSR set to: 15
  3627                           ;CANlib.h: 795: tamp = (filter >> 3);
  3628  000414  0100               	movlb	0	; () banked
  3629  000416  C0A1  F0A6         	movff	CANSetFilter@filter,??_CANSetFilter
  3630  00041A  0100               	movlb	0	; () banked
  3631  00041C  C0A2  F0A7         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3632  000420  0100               	movlb	0	; () banked
  3633  000422  C0A3  F0A8         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3634  000426  0100               	movlb	0	; () banked
  3635  000428  C0A4  F0A9         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3636  00042C  0E04               	movlw	4
  3637  00042E  D006               	goto	u5040
  3638  000430                     u5045:
  3639  000430  0100               	movlb	0	; () banked
  3640  000432  90D8               	bcf	status,0,c
  3641  000434  33A9               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3642  000436  33A8               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3643  000438  33A7               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3644  00043A  33A6               	rrcf	??_CANSetFilter& (0+255),f,b
  3645  00043C                     u5040:
  3646  00043C  2EE8               	decfsz	wreg,f,c
  3647  00043E  D7F8               	goto	u5045
  3648  000440  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  3649  000444  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3650  000448  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3651  00044C  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;CANlib.h: 796: tamp = tamp & 0x000000FF;
  3655  000450  0100               	movlb	0	; () banked
  3656  000452  51AB               	movf	CANSetFilter@tamp& (0+255),w,b
  3657  000454  0100               	movlb	0	; () banked
  3658  000456  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  3659  000458  0100               	movlb	0	; () banked
  3660  00045A  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3661  00045C  0100               	movlb	0	; () banked
  3662  00045E  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3663  000460  0100               	movlb	0	; () banked
  3664  000462  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  3668  000464  C0AB  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;CANlib.h: 799: tamp = filter & 0x00000007;
  3672  000468  0E07               	movlw	7
  3673  00046A  0100               	movlb	0	; () banked
  3674  00046C  15A1               	andwf	CANSetFilter@filter& (0+255),w,b
  3675  00046E  0100               	movlb	0	; () banked
  3676  000470  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  3677  000472  0E00               	movlw	0
  3678  000474  0100               	movlb	0	; () banked
  3679  000476  15A2               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3680  000478  0100               	movlb	0	; () banked
  3681  00047A  6FAC               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3682  00047C  0E00               	movlw	0
  3683  00047E  0100               	movlb	0	; () banked
  3684  000480  15A3               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3685  000482  0100               	movlb	0	; () banked
  3686  000484  6FAD               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3687  000486  0E00               	movlw	0
  3688  000488  0100               	movlb	0	; () banked
  3689  00048A  15A4               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3690  00048C  0100               	movlb	0	; () banked
  3691  00048E  6FAE               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;CANlib.h: 800: tamp = tamp << 5;
  3695  000490  0100               	movlb	0	; () banked
  3696  000492  C0AB  F0A6         	movff	CANSetFilter@tamp,??_CANSetFilter
  3697  000496  0100               	movlb	0	; () banked
  3698  000498  C0AC  F0A7         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3699  00049C  0100               	movlb	0	; () banked
  3700  00049E  C0AD  F0A8         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3701  0004A2  0100               	movlb	0	; () banked
  3702  0004A4  C0AE  F0A9         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3703  0004A8  0E05               	movlw	5
  3704  0004AA                     u5055:
  3705  0004AA  90D8               	bcf	status,0,c
  3706  0004AC  0100               	movlb	0	; () banked
  3707  0004AE  37A6               	rlcf	??_CANSetFilter& (0+255),f,b
  3708  0004B0  37A7               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3709  0004B2  37A8               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3710  0004B4  37A9               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3711  0004B6  2EE8               	decfsz	wreg,f,c
  3712  0004B8  D7F8               	goto	u5055
  3713  0004BA  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  3714  0004BE  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3715  0004C2  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3716  0004C6  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  3720  0004CA  C0AB  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3721  0004CE                     l4115:
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;CANlib.h: 802: }
  3725                           ;CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3726  0004CE  0100               	movlb	0	; () banked
  3727  0004D0  51AA               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3728  0004D2  0A04               	xorlw	4
  3729  0004D4  A4D8               	btfss	status,2,c
  3730  0004D6  D063               	goto	l4133
  3731                           
  3732                           ; BSR set to: 0
  3733  0004D8  0100               	movlb	0	; () banked
  3734  0004DA  29A5               	incf	CANSetFilter@type& (0+255),w,b
  3735  0004DC  A4D8               	btfss	status,2,c
  3736  0004DE  D05F               	goto	l4133
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;CANlib.h: 805: {
  3740                           ;CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  3741  0004E0  010F               	movlb	15	; () banked
  3742  0004E2  9711               	bcf	17,3,b	;volatile
  3743                           
  3744                           ; BSR set to: 15
  3745                           ;CANlib.h: 808: tamp = (filter >> 3);
  3746  0004E4  0100               	movlb	0	; () banked
  3747  0004E6  C0A1  F0A6         	movff	CANSetFilter@filter,??_CANSetFilter
  3748  0004EA  0100               	movlb	0	; () banked
  3749  0004EC  C0A2  F0A7         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3750  0004F0  0100               	movlb	0	; () banked
  3751  0004F2  C0A3  F0A8         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3752  0004F6  0100               	movlb	0	; () banked
  3753  0004F8  C0A4  F0A9         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3754  0004FC  0E04               	movlw	4
  3755  0004FE  D006               	goto	u5080
  3756  000500                     u5085:
  3757  000500  0100               	movlb	0	; () banked
  3758  000502  90D8               	bcf	status,0,c
  3759  000504  33A9               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3760  000506  33A8               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3761  000508  33A7               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3762  00050A  33A6               	rrcf	??_CANSetFilter& (0+255),f,b
  3763  00050C                     u5080:
  3764  00050C  2EE8               	decfsz	wreg,f,c
  3765  00050E  D7F8               	goto	u5085
  3766  000510  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  3767  000514  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3768  000518  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3769  00051C  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;CANlib.h: 809: tamp = tamp & 0x000000FF;
  3773  000520  0100               	movlb	0	; () banked
  3774  000522  51AB               	movf	CANSetFilter@tamp& (0+255),w,b
  3775  000524  0100               	movlb	0	; () banked
  3776  000526  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  3777  000528  0100               	movlb	0	; () banked
  3778  00052A  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3779  00052C  0100               	movlb	0	; () banked
  3780  00052E  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3781  000530  0100               	movlb	0	; () banked
  3782  000532  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  3786  000534  C0AB  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;CANlib.h: 812: tamp = filter & 0x00000007;
  3790  000538  0E07               	movlw	7
  3791  00053A  0100               	movlb	0	; () banked
  3792  00053C  15A1               	andwf	CANSetFilter@filter& (0+255),w,b
  3793  00053E  0100               	movlb	0	; () banked
  3794  000540  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  3795  000542  0E00               	movlw	0
  3796  000544  0100               	movlb	0	; () banked
  3797  000546  15A2               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3798  000548  0100               	movlb	0	; () banked
  3799  00054A  6FAC               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3800  00054C  0E00               	movlw	0
  3801  00054E  0100               	movlb	0	; () banked
  3802  000550  15A3               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3803  000552  0100               	movlb	0	; () banked
  3804  000554  6FAD               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3805  000556  0E00               	movlw	0
  3806  000558  0100               	movlb	0	; () banked
  3807  00055A  15A4               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3808  00055C  0100               	movlb	0	; () banked
  3809  00055E  6FAE               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;CANlib.h: 813: tamp = tamp << 5;
  3813  000560  0100               	movlb	0	; () banked
  3814  000562  C0AB  F0A6         	movff	CANSetFilter@tamp,??_CANSetFilter
  3815  000566  0100               	movlb	0	; () banked
  3816  000568  C0AC  F0A7         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3817  00056C  0100               	movlb	0	; () banked
  3818  00056E  C0AD  F0A8         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3819  000572  0100               	movlb	0	; () banked
  3820  000574  C0AE  F0A9         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3821  000578  0E05               	movlw	5
  3822  00057A                     u5095:
  3823  00057A  90D8               	bcf	status,0,c
  3824  00057C  0100               	movlb	0	; () banked
  3825  00057E  37A6               	rlcf	??_CANSetFilter& (0+255),f,b
  3826  000580  37A7               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3827  000582  37A8               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3828  000584  37A9               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3829  000586  2EE8               	decfsz	wreg,f,c
  3830  000588  D7F8               	goto	u5095
  3831  00058A  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  3832  00058E  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3833  000592  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3834  000596  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  3838  00059A  C0AB  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3839  00059E                     l4133:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;CANlib.h: 815: }
  3843                           ;CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3844  00059E  0100               	movlb	0	; () banked
  3845  0005A0  51AA               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3846  0005A2  0A05               	xorlw	5
  3847  0005A4  A4D8               	btfss	status,2,c
  3848  0005A6  D063               	goto	l4151
  3849                           
  3850                           ; BSR set to: 0
  3851  0005A8  0100               	movlb	0	; () banked
  3852  0005AA  29A5               	incf	CANSetFilter@type& (0+255),w,b
  3853  0005AC  A4D8               	btfss	status,2,c
  3854  0005AE  D05F               	goto	l4151
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;CANlib.h: 818: {
  3858                           ;CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  3859  0005B0  010F               	movlb	15	; () banked
  3860  0005B2  9715               	bcf	21,3,b	;volatile
  3861                           
  3862                           ; BSR set to: 15
  3863                           ;CANlib.h: 821: tamp = (filter >> 3);
  3864  0005B4  0100               	movlb	0	; () banked
  3865  0005B6  C0A1  F0A6         	movff	CANSetFilter@filter,??_CANSetFilter
  3866  0005BA  0100               	movlb	0	; () banked
  3867  0005BC  C0A2  F0A7         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3868  0005C0  0100               	movlb	0	; () banked
  3869  0005C2  C0A3  F0A8         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3870  0005C6  0100               	movlb	0	; () banked
  3871  0005C8  C0A4  F0A9         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3872  0005CC  0E04               	movlw	4
  3873  0005CE  D006               	goto	u5120
  3874  0005D0                     u5125:
  3875  0005D0  0100               	movlb	0	; () banked
  3876  0005D2  90D8               	bcf	status,0,c
  3877  0005D4  33A9               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3878  0005D6  33A8               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3879  0005D8  33A7               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3880  0005DA  33A6               	rrcf	??_CANSetFilter& (0+255),f,b
  3881  0005DC                     u5120:
  3882  0005DC  2EE8               	decfsz	wreg,f,c
  3883  0005DE  D7F8               	goto	u5125
  3884  0005E0  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  3885  0005E4  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3886  0005E8  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3887  0005EC  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;CANlib.h: 822: tamp = tamp & 0x000000FF;
  3891  0005F0  0100               	movlb	0	; () banked
  3892  0005F2  51AB               	movf	CANSetFilter@tamp& (0+255),w,b
  3893  0005F4  0100               	movlb	0	; () banked
  3894  0005F6  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  3895  0005F8  0100               	movlb	0	; () banked
  3896  0005FA  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3897  0005FC  0100               	movlb	0	; () banked
  3898  0005FE  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3899  000600  0100               	movlb	0	; () banked
  3900  000602  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  3904  000604  C0AB  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;CANlib.h: 825: tamp = filter & 0x00000007;
  3908  000608  0E07               	movlw	7
  3909  00060A  0100               	movlb	0	; () banked
  3910  00060C  15A1               	andwf	CANSetFilter@filter& (0+255),w,b
  3911  00060E  0100               	movlb	0	; () banked
  3912  000610  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  3913  000612  0E00               	movlw	0
  3914  000614  0100               	movlb	0	; () banked
  3915  000616  15A2               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3916  000618  0100               	movlb	0	; () banked
  3917  00061A  6FAC               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3918  00061C  0E00               	movlw	0
  3919  00061E  0100               	movlb	0	; () banked
  3920  000620  15A3               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3921  000622  0100               	movlb	0	; () banked
  3922  000624  6FAD               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3923  000626  0E00               	movlw	0
  3924  000628  0100               	movlb	0	; () banked
  3925  00062A  15A4               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3926  00062C  0100               	movlb	0	; () banked
  3927  00062E  6FAE               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;CANlib.h: 826: tamp = tamp << 5;
  3931  000630  0100               	movlb	0	; () banked
  3932  000632  C0AB  F0A6         	movff	CANSetFilter@tamp,??_CANSetFilter
  3933  000636  0100               	movlb	0	; () banked
  3934  000638  C0AC  F0A7         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3935  00063C  0100               	movlb	0	; () banked
  3936  00063E  C0AD  F0A8         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3937  000642  0100               	movlb	0	; () banked
  3938  000644  C0AE  F0A9         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3939  000648  0E05               	movlw	5
  3940  00064A                     u5135:
  3941  00064A  90D8               	bcf	status,0,c
  3942  00064C  0100               	movlb	0	; () banked
  3943  00064E  37A6               	rlcf	??_CANSetFilter& (0+255),f,b
  3944  000650  37A7               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3945  000652  37A8               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3946  000654  37A9               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3947  000656  2EE8               	decfsz	wreg,f,c
  3948  000658  D7F8               	goto	u5135
  3949  00065A  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  3950  00065E  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3951  000662  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3952  000666  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  3956  00066A  C0AB  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3957  00066E                     l4151:
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;CANlib.h: 828: }
  3961                           ;CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3962  00066E  0100               	movlb	0	; () banked
  3963  000670  67AA               	tstfsz	CANSetFilter@numBuffer& (0+255),b
  3964  000672  D097               	goto	l4185
  3965                           
  3966                           ; BSR set to: 0
  3967  000674  0100               	movlb	0	; () banked
  3968  000676  51A5               	movf	CANSetFilter@type& (0+255),w,b
  3969  000678  0AF7               	xorlw	247
  3970  00067A  A4D8               	btfss	status,2,c
  3971  00067C  D092               	goto	l4185
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;CANlib.h: 832: {
  3975                           ;CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  3976  00067E  010F               	movlb	15	; () banked
  3977  000680  8701               	bsf	1,3,b	;volatile
  3978                           
  3979                           ; BSR set to: 15
  3980                           ;CANlib.h: 835: tamp = filter & 0x000000FF;
  3981  000682  0100               	movlb	0	; () banked
  3982  000684  51A1               	movf	CANSetFilter@filter& (0+255),w,b
  3983  000686  0100               	movlb	0	; () banked
  3984  000688  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  3985  00068A  0100               	movlb	0	; () banked
  3986  00068C  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3987  00068E  0100               	movlb	0	; () banked
  3988  000690  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3989  000692  0100               	movlb	0	; () banked
  3990  000694  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  3994  000696  C0AB  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;CANlib.h: 838: tamp = filter & 0x0000FF00;
  3998  00069A  0E00               	movlw	0
  3999  00069C  0100               	movlb	0	; () banked
  4000  00069E  15A1               	andwf	CANSetFilter@filter& (0+255),w,b
  4001  0006A0  0100               	movlb	0	; () banked
  4002  0006A2  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  4003  0006A4  0EFF               	movlw	255
  4004  0006A6  0100               	movlb	0	; () banked
  4005  0006A8  15A2               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4006  0006AA  0100               	movlb	0	; () banked
  4007  0006AC  6FAC               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4008  0006AE  0E00               	movlw	0
  4009  0006B0  0100               	movlb	0	; () banked
  4010  0006B2  15A3               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4011  0006B4  0100               	movlb	0	; () banked
  4012  0006B6  6FAD               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4013  0006B8  0E00               	movlw	0
  4014  0006BA  0100               	movlb	0	; () banked
  4015  0006BC  15A4               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4016  0006BE  0100               	movlb	0	; () banked
  4017  0006C0  6FAE               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;CANlib.h: 839: tamp = tamp >> 8;
  4021  0006C2  0100               	movlb	0	; () banked
  4022  0006C4  C0AB  F0A6         	movff	CANSetFilter@tamp,??_CANSetFilter
  4023  0006C8  0100               	movlb	0	; () banked
  4024  0006CA  C0AC  F0A7         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4025  0006CE  0100               	movlb	0	; () banked
  4026  0006D0  C0AD  F0A8         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4027  0006D4  0100               	movlb	0	; () banked
  4028  0006D6  C0AE  F0A9         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4029  0006DA  C0A7  F0A6         	movff	??_CANSetFilter+1,??_CANSetFilter
  4030  0006DE  C0A8  F0A7         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4031  0006E2  C0A9  F0A8         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4032  0006E6  0100               	movlb	0	; () banked
  4033  0006E8  6BA9               	clrf	(??_CANSetFilter+3)& (0+255),b
  4034  0006EA  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  4035  0006EE  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4036  0006F2  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4037  0006F6  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4041  0006FA  C0AB  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;CANlib.h: 842: if (filter & 0x00010000)
  4045  0006FE  0100               	movlb	0	; () banked
  4046  000700  A1A3               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4047  000702  D003               	goto	l467
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4051  000704  010F               	movlb	15	; () banked
  4052  000706  8101               	bsf	1,0,b	;volatile
  4053  000708  D002               	goto	l468
  4054  00070A                     l467:
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;CANlib.h: 844: else
  4058                           ;CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4059  00070A  010F               	movlb	15	; () banked
  4060  00070C  9101               	bcf	1,0,b	;volatile
  4061  00070E                     l468:
  4062                           
  4063                           ; BSR set to: 15
  4064                           ;CANlib.h: 847: if (filter & 0x00020000)
  4065  00070E  0100               	movlb	0	; () banked
  4066  000710  A3A3               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4067  000712  D003               	goto	l469
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4071  000714  010F               	movlb	15	; () banked
  4072  000716  8301               	bsf	1,1,b	;volatile
  4073  000718  D002               	goto	l470
  4074  00071A                     l469:
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;CANlib.h: 849: else
  4078                           ;CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4079  00071A  010F               	movlb	15	; () banked
  4080  00071C  9301               	bcf	1,1,b	;volatile
  4081  00071E                     l470:
  4082                           
  4083                           ; BSR set to: 15
  4084                           ;CANlib.h: 852: if (filter & 0x00040000)
  4085  00071E  0100               	movlb	0	; () banked
  4086  000720  A5A3               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4087  000722  D003               	goto	l471
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4091  000724  010F               	movlb	15	; () banked
  4092  000726  8B01               	bsf	1,5,b	;volatile
  4093  000728  D002               	goto	l472
  4094  00072A                     l471:
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;CANlib.h: 854: else
  4098                           ;CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4099  00072A  010F               	movlb	15	; () banked
  4100  00072C  9B01               	bcf	1,5,b	;volatile
  4101  00072E                     l472:
  4102                           
  4103                           ; BSR set to: 15
  4104                           ;CANlib.h: 857: if (filter & 0x00080000)
  4105  00072E  0100               	movlb	0	; () banked
  4106  000730  A7A3               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4107  000732  D003               	goto	l473
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4111  000734  010F               	movlb	15	; () banked
  4112  000736  8D01               	bsf	1,6,b	;volatile
  4113  000738  D002               	goto	l474
  4114  00073A                     l473:
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;CANlib.h: 859: else
  4118                           ;CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4119  00073A  010F               	movlb	15	; () banked
  4120  00073C  9D01               	bcf	1,6,b	;volatile
  4121  00073E                     l474:
  4122                           
  4123                           ; BSR set to: 15
  4124                           ;CANlib.h: 862: if (filter & 0x00100000)
  4125  00073E  0100               	movlb	0	; () banked
  4126  000740  A9A3               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4127  000742  D003               	goto	l475
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4131  000744  010F               	movlb	15	; () banked
  4132  000746  8F01               	bsf	1,7,b	;volatile
  4133  000748  D002               	goto	l4179
  4134  00074A                     l475:
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;CANlib.h: 864: else
  4138                           ;CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4139  00074A  010F               	movlb	15	; () banked
  4140  00074C  9F01               	bcf	1,7,b	;volatile
  4141  00074E                     l4179:
  4142                           
  4143                           ; BSR set to: 15
  4144                           ;CANlib.h: 867: tamp = (filter >> 21);
  4145  00074E  0100               	movlb	0	; () banked
  4146  000750  C0A1  F0A6         	movff	CANSetFilter@filter,??_CANSetFilter
  4147  000754  0100               	movlb	0	; () banked
  4148  000756  C0A2  F0A7         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4149  00075A  0100               	movlb	0	; () banked
  4150  00075C  C0A3  F0A8         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4151  000760  0100               	movlb	0	; () banked
  4152  000762  C0A4  F0A9         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4153  000766  0E16               	movlw	22
  4154  000768  D006               	goto	u5210
  4155  00076A                     u5215:
  4156  00076A  0100               	movlb	0	; () banked
  4157  00076C  90D8               	bcf	status,0,c
  4158  00076E  33A9               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4159  000770  33A8               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4160  000772  33A7               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4161  000774  33A6               	rrcf	??_CANSetFilter& (0+255),f,b
  4162  000776                     u5210:
  4163  000776  2EE8               	decfsz	wreg,f,c
  4164  000778  D7F8               	goto	u5215
  4165  00077A  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  4166  00077E  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4167  000782  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4168  000786  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;CANlib.h: 868: tamp = tamp & 0x000000FF;
  4172  00078A  0100               	movlb	0	; () banked
  4173  00078C  51AB               	movf	CANSetFilter@tamp& (0+255),w,b
  4174  00078E  0100               	movlb	0	; () banked
  4175  000790  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  4176  000792  0100               	movlb	0	; () banked
  4177  000794  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4178  000796  0100               	movlb	0	; () banked
  4179  000798  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4180  00079A  0100               	movlb	0	; () banked
  4181  00079C  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4185  00079E  C0AB  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4186  0007A2                     l4185:
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;CANlib.h: 870: }
  4190                           ;CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4191  0007A2  0100               	movlb	0	; () banked
  4192  0007A4  05AA               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4193  0007A6  A4D8               	btfss	status,2,c
  4194  0007A8  D097               	goto	l4219
  4195                           
  4196                           ; BSR set to: 0
  4197  0007AA  0100               	movlb	0	; () banked
  4198  0007AC  51A5               	movf	CANSetFilter@type& (0+255),w,b
  4199  0007AE  0AF7               	xorlw	247
  4200  0007B0  A4D8               	btfss	status,2,c
  4201  0007B2  D092               	goto	l4219
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;CANlib.h: 873: {
  4205                           ;CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4206  0007B4  010F               	movlb	15	; () banked
  4207  0007B6  8705               	bsf	5,3,b	;volatile
  4208                           
  4209                           ; BSR set to: 15
  4210                           ;CANlib.h: 876: tamp = filter & 0x000000FF;
  4211  0007B8  0100               	movlb	0	; () banked
  4212  0007BA  51A1               	movf	CANSetFilter@filter& (0+255),w,b
  4213  0007BC  0100               	movlb	0	; () banked
  4214  0007BE  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  4215  0007C0  0100               	movlb	0	; () banked
  4216  0007C2  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4217  0007C4  0100               	movlb	0	; () banked
  4218  0007C6  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4219  0007C8  0100               	movlb	0	; () banked
  4220  0007CA  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4224  0007CC  C0AB  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;CANlib.h: 879: tamp = filter & 0x0000FF00;
  4228  0007D0  0E00               	movlw	0
  4229  0007D2  0100               	movlb	0	; () banked
  4230  0007D4  15A1               	andwf	CANSetFilter@filter& (0+255),w,b
  4231  0007D6  0100               	movlb	0	; () banked
  4232  0007D8  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  4233  0007DA  0EFF               	movlw	255
  4234  0007DC  0100               	movlb	0	; () banked
  4235  0007DE  15A2               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4236  0007E0  0100               	movlb	0	; () banked
  4237  0007E2  6FAC               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4238  0007E4  0E00               	movlw	0
  4239  0007E6  0100               	movlb	0	; () banked
  4240  0007E8  15A3               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4241  0007EA  0100               	movlb	0	; () banked
  4242  0007EC  6FAD               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4243  0007EE  0E00               	movlw	0
  4244  0007F0  0100               	movlb	0	; () banked
  4245  0007F2  15A4               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4246  0007F4  0100               	movlb	0	; () banked
  4247  0007F6  6FAE               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;CANlib.h: 880: tamp = tamp >> 8;
  4251  0007F8  0100               	movlb	0	; () banked
  4252  0007FA  C0AB  F0A6         	movff	CANSetFilter@tamp,??_CANSetFilter
  4253  0007FE  0100               	movlb	0	; () banked
  4254  000800  C0AC  F0A7         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4255  000804  0100               	movlb	0	; () banked
  4256  000806  C0AD  F0A8         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4257  00080A  0100               	movlb	0	; () banked
  4258  00080C  C0AE  F0A9         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4259  000810  C0A7  F0A6         	movff	??_CANSetFilter+1,??_CANSetFilter
  4260  000814  C0A8  F0A7         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4261  000818  C0A9  F0A8         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4262  00081C  0100               	movlb	0	; () banked
  4263  00081E  6BA9               	clrf	(??_CANSetFilter+3)& (0+255),b
  4264  000820  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  4265  000824  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4266  000828  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4267  00082C  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4271  000830  C0AB  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;CANlib.h: 883: if (filter & 0x00010000)
  4275  000834  0100               	movlb	0	; () banked
  4276  000836  A1A3               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4277  000838  D003               	goto	l478
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4281  00083A  010F               	movlb	15	; () banked
  4282  00083C  8105               	bsf	5,0,b	;volatile
  4283  00083E  D002               	goto	l479
  4284  000840                     l478:
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;CANlib.h: 885: else
  4288                           ;CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4289  000840  010F               	movlb	15	; () banked
  4290  000842  9105               	bcf	5,0,b	;volatile
  4291  000844                     l479:
  4292                           
  4293                           ; BSR set to: 15
  4294                           ;CANlib.h: 888: if (filter & 0x00020000)
  4295  000844  0100               	movlb	0	; () banked
  4296  000846  A3A3               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4297  000848  D003               	goto	l480
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4301  00084A  010F               	movlb	15	; () banked
  4302  00084C  8305               	bsf	5,1,b	;volatile
  4303  00084E  D002               	goto	l481
  4304  000850                     l480:
  4305                           
  4306                           ; BSR set to: 0
  4307                           ;CANlib.h: 890: else
  4308                           ;CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4309  000850  010F               	movlb	15	; () banked
  4310  000852  9305               	bcf	5,1,b	;volatile
  4311  000854                     l481:
  4312                           
  4313                           ; BSR set to: 15
  4314                           ;CANlib.h: 893: if (filter & 0x00040000)
  4315  000854  0100               	movlb	0	; () banked
  4316  000856  A5A3               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4317  000858  D003               	goto	l482
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4321  00085A  010F               	movlb	15	; () banked
  4322  00085C  8B05               	bsf	5,5,b	;volatile
  4323  00085E  D002               	goto	l483
  4324  000860                     l482:
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;CANlib.h: 895: else
  4328                           ;CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4329  000860  010F               	movlb	15	; () banked
  4330  000862  9B05               	bcf	5,5,b	;volatile
  4331  000864                     l483:
  4332                           
  4333                           ; BSR set to: 15
  4334                           ;CANlib.h: 898: if (filter & 0x00080000)
  4335  000864  0100               	movlb	0	; () banked
  4336  000866  A7A3               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4337  000868  D003               	goto	l484
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4341  00086A  010F               	movlb	15	; () banked
  4342  00086C  8D05               	bsf	5,6,b	;volatile
  4343  00086E  D002               	goto	l485
  4344  000870                     l484:
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;CANlib.h: 900: else
  4348                           ;CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4349  000870  010F               	movlb	15	; () banked
  4350  000872  9D05               	bcf	5,6,b	;volatile
  4351  000874                     l485:
  4352                           
  4353                           ; BSR set to: 15
  4354                           ;CANlib.h: 903: if (filter & 0x00100000)
  4355  000874  0100               	movlb	0	; () banked
  4356  000876  A9A3               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4357  000878  D003               	goto	l486
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4361  00087A  010F               	movlb	15	; () banked
  4362  00087C  8F05               	bsf	5,7,b	;volatile
  4363  00087E  D002               	goto	l4213
  4364  000880                     l486:
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;CANlib.h: 905: else
  4368                           ;CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4369  000880  010F               	movlb	15	; () banked
  4370  000882  9F05               	bcf	5,7,b	;volatile
  4371  000884                     l4213:
  4372                           
  4373                           ; BSR set to: 15
  4374                           ;CANlib.h: 908: tamp = (filter >> 21);
  4375  000884  0100               	movlb	0	; () banked
  4376  000886  C0A1  F0A6         	movff	CANSetFilter@filter,??_CANSetFilter
  4377  00088A  0100               	movlb	0	; () banked
  4378  00088C  C0A2  F0A7         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4379  000890  0100               	movlb	0	; () banked
  4380  000892  C0A3  F0A8         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4381  000896  0100               	movlb	0	; () banked
  4382  000898  C0A4  F0A9         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4383  00089C  0E16               	movlw	22
  4384  00089E  D006               	goto	u5290
  4385  0008A0                     u5295:
  4386  0008A0  0100               	movlb	0	; () banked
  4387  0008A2  90D8               	bcf	status,0,c
  4388  0008A4  33A9               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4389  0008A6  33A8               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4390  0008A8  33A7               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4391  0008AA  33A6               	rrcf	??_CANSetFilter& (0+255),f,b
  4392  0008AC                     u5290:
  4393  0008AC  2EE8               	decfsz	wreg,f,c
  4394  0008AE  D7F8               	goto	u5295
  4395  0008B0  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  4396  0008B4  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4397  0008B8  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4398  0008BC  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;CANlib.h: 909: tamp = tamp & 0x000000FF;
  4402  0008C0  0100               	movlb	0	; () banked
  4403  0008C2  51AB               	movf	CANSetFilter@tamp& (0+255),w,b
  4404  0008C4  0100               	movlb	0	; () banked
  4405  0008C6  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  4406  0008C8  0100               	movlb	0	; () banked
  4407  0008CA  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4408  0008CC  0100               	movlb	0	; () banked
  4409  0008CE  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4410  0008D0  0100               	movlb	0	; () banked
  4411  0008D2  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4415  0008D4  C0AB  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4416  0008D8                     l4219:
  4417                           
  4418                           ; BSR set to: 0
  4419                           ;CANlib.h: 911: }
  4420                           ;CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4421  0008D8  0100               	movlb	0	; () banked
  4422  0008DA  51AA               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4423  0008DC  0A02               	xorlw	2
  4424  0008DE  A4D8               	btfss	status,2,c
  4425  0008E0  D097               	goto	l4253
  4426                           
  4427                           ; BSR set to: 0
  4428  0008E2  0100               	movlb	0	; () banked
  4429  0008E4  51A5               	movf	CANSetFilter@type& (0+255),w,b
  4430  0008E6  0AF7               	xorlw	247
  4431  0008E8  A4D8               	btfss	status,2,c
  4432  0008EA  D092               	goto	l4253
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;CANlib.h: 915: {
  4436                           ;CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4437  0008EC  010F               	movlb	15	; () banked
  4438  0008EE  8709               	bsf	9,3,b	;volatile
  4439                           
  4440                           ; BSR set to: 15
  4441                           ;CANlib.h: 918: tamp = filter & 0x000000FF;
  4442  0008F0  0100               	movlb	0	; () banked
  4443  0008F2  51A1               	movf	CANSetFilter@filter& (0+255),w,b
  4444  0008F4  0100               	movlb	0	; () banked
  4445  0008F6  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  4446  0008F8  0100               	movlb	0	; () banked
  4447  0008FA  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4448  0008FC  0100               	movlb	0	; () banked
  4449  0008FE  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4450  000900  0100               	movlb	0	; () banked
  4451  000902  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4455  000904  C0AB  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;CANlib.h: 921: tamp = filter & 0x0000FF00;
  4459  000908  0E00               	movlw	0
  4460  00090A  0100               	movlb	0	; () banked
  4461  00090C  15A1               	andwf	CANSetFilter@filter& (0+255),w,b
  4462  00090E  0100               	movlb	0	; () banked
  4463  000910  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  4464  000912  0EFF               	movlw	255
  4465  000914  0100               	movlb	0	; () banked
  4466  000916  15A2               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4467  000918  0100               	movlb	0	; () banked
  4468  00091A  6FAC               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4469  00091C  0E00               	movlw	0
  4470  00091E  0100               	movlb	0	; () banked
  4471  000920  15A3               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4472  000922  0100               	movlb	0	; () banked
  4473  000924  6FAD               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4474  000926  0E00               	movlw	0
  4475  000928  0100               	movlb	0	; () banked
  4476  00092A  15A4               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4477  00092C  0100               	movlb	0	; () banked
  4478  00092E  6FAE               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;CANlib.h: 922: tamp = tamp >> 8;
  4482  000930  0100               	movlb	0	; () banked
  4483  000932  C0AB  F0A6         	movff	CANSetFilter@tamp,??_CANSetFilter
  4484  000936  0100               	movlb	0	; () banked
  4485  000938  C0AC  F0A7         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4486  00093C  0100               	movlb	0	; () banked
  4487  00093E  C0AD  F0A8         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4488  000942  0100               	movlb	0	; () banked
  4489  000944  C0AE  F0A9         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4490  000948  C0A7  F0A6         	movff	??_CANSetFilter+1,??_CANSetFilter
  4491  00094C  C0A8  F0A7         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4492  000950  C0A9  F0A8         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4493  000954  0100               	movlb	0	; () banked
  4494  000956  6BA9               	clrf	(??_CANSetFilter+3)& (0+255),b
  4495  000958  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  4496  00095C  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4497  000960  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4498  000964  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4502  000968  C0AB  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;CANlib.h: 925: if (filter & 0x00010000)
  4506  00096C  0100               	movlb	0	; () banked
  4507  00096E  A1A3               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4508  000970  D003               	goto	l489
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4512  000972  010F               	movlb	15	; () banked
  4513  000974  8109               	bsf	9,0,b	;volatile
  4514  000976  D002               	goto	l490
  4515  000978                     l489:
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;CANlib.h: 927: else
  4519                           ;CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4520  000978  010F               	movlb	15	; () banked
  4521  00097A  9109               	bcf	9,0,b	;volatile
  4522  00097C                     l490:
  4523                           
  4524                           ; BSR set to: 15
  4525                           ;CANlib.h: 930: if (filter & 0x00020000)
  4526  00097C  0100               	movlb	0	; () banked
  4527  00097E  A3A3               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4528  000980  D003               	goto	l491
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4532  000982  010F               	movlb	15	; () banked
  4533  000984  8309               	bsf	9,1,b	;volatile
  4534  000986  D002               	goto	l492
  4535  000988                     l491:
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;CANlib.h: 932: else
  4539                           ;CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4540  000988  010F               	movlb	15	; () banked
  4541  00098A  9309               	bcf	9,1,b	;volatile
  4542  00098C                     l492:
  4543                           
  4544                           ; BSR set to: 15
  4545                           ;CANlib.h: 935: if (filter & 0x00040000)
  4546  00098C  0100               	movlb	0	; () banked
  4547  00098E  A5A3               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4548  000990  D003               	goto	l493
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4552  000992  010F               	movlb	15	; () banked
  4553  000994  8B09               	bsf	9,5,b	;volatile
  4554  000996  D002               	goto	l494
  4555  000998                     l493:
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;CANlib.h: 937: else
  4559                           ;CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4560  000998  010F               	movlb	15	; () banked
  4561  00099A  9B09               	bcf	9,5,b	;volatile
  4562  00099C                     l494:
  4563                           
  4564                           ; BSR set to: 15
  4565                           ;CANlib.h: 940: if (filter & 0x00080000)
  4566  00099C  0100               	movlb	0	; () banked
  4567  00099E  A7A3               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4568  0009A0  D003               	goto	l495
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4572  0009A2  010F               	movlb	15	; () banked
  4573  0009A4  8D09               	bsf	9,6,b	;volatile
  4574  0009A6  D002               	goto	l496
  4575  0009A8                     l495:
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;CANlib.h: 942: else
  4579                           ;CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4580  0009A8  010F               	movlb	15	; () banked
  4581  0009AA  9D09               	bcf	9,6,b	;volatile
  4582  0009AC                     l496:
  4583                           
  4584                           ; BSR set to: 15
  4585                           ;CANlib.h: 945: if (filter & 0x00100000)
  4586  0009AC  0100               	movlb	0	; () banked
  4587  0009AE  A9A3               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4588  0009B0  D003               	goto	l497
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4592  0009B2  010F               	movlb	15	; () banked
  4593  0009B4  8F09               	bsf	9,7,b	;volatile
  4594  0009B6  D002               	goto	l4247
  4595  0009B8                     l497:
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;CANlib.h: 947: else
  4599                           ;CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4600  0009B8  010F               	movlb	15	; () banked
  4601  0009BA  9F09               	bcf	9,7,b	;volatile
  4602  0009BC                     l4247:
  4603                           
  4604                           ; BSR set to: 15
  4605                           ;CANlib.h: 950: tamp = (filter >> 21);
  4606  0009BC  0100               	movlb	0	; () banked
  4607  0009BE  C0A1  F0A6         	movff	CANSetFilter@filter,??_CANSetFilter
  4608  0009C2  0100               	movlb	0	; () banked
  4609  0009C4  C0A2  F0A7         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4610  0009C8  0100               	movlb	0	; () banked
  4611  0009CA  C0A3  F0A8         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4612  0009CE  0100               	movlb	0	; () banked
  4613  0009D0  C0A4  F0A9         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4614  0009D4  0E16               	movlw	22
  4615  0009D6  D006               	goto	u5370
  4616  0009D8                     u5375:
  4617  0009D8  0100               	movlb	0	; () banked
  4618  0009DA  90D8               	bcf	status,0,c
  4619  0009DC  33A9               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4620  0009DE  33A8               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4621  0009E0  33A7               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4622  0009E2  33A6               	rrcf	??_CANSetFilter& (0+255),f,b
  4623  0009E4                     u5370:
  4624  0009E4  2EE8               	decfsz	wreg,f,c
  4625  0009E6  D7F8               	goto	u5375
  4626  0009E8  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  4627  0009EC  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4628  0009F0  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4629  0009F4  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;CANlib.h: 951: tamp = tamp & 0x000000FF;
  4633  0009F8  0100               	movlb	0	; () banked
  4634  0009FA  51AB               	movf	CANSetFilter@tamp& (0+255),w,b
  4635  0009FC  0100               	movlb	0	; () banked
  4636  0009FE  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  4637  000A00  0100               	movlb	0	; () banked
  4638  000A02  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4639  000A04  0100               	movlb	0	; () banked
  4640  000A06  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4641  000A08  0100               	movlb	0	; () banked
  4642  000A0A  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4646  000A0C  C0AB  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4647  000A10                     l4253:
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;CANlib.h: 953: }
  4651                           ;CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4652  000A10  0100               	movlb	0	; () banked
  4653  000A12  51AA               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4654  000A14  0A03               	xorlw	3
  4655  000A16  A4D8               	btfss	status,2,c
  4656  000A18  D097               	goto	l4287
  4657                           
  4658                           ; BSR set to: 0
  4659  000A1A  0100               	movlb	0	; () banked
  4660  000A1C  51A5               	movf	CANSetFilter@type& (0+255),w,b
  4661  000A1E  0AF7               	xorlw	247
  4662  000A20  A4D8               	btfss	status,2,c
  4663  000A22  D092               	goto	l4287
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;CANlib.h: 956: {
  4667                           ;CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  4668  000A24  010F               	movlb	15	; () banked
  4669  000A26  870D               	bsf	13,3,b	;volatile
  4670                           
  4671                           ; BSR set to: 15
  4672                           ;CANlib.h: 959: tamp = filter & 0x000000FF;
  4673  000A28  0100               	movlb	0	; () banked
  4674  000A2A  51A1               	movf	CANSetFilter@filter& (0+255),w,b
  4675  000A2C  0100               	movlb	0	; () banked
  4676  000A2E  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  4677  000A30  0100               	movlb	0	; () banked
  4678  000A32  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4679  000A34  0100               	movlb	0	; () banked
  4680  000A36  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4681  000A38  0100               	movlb	0	; () banked
  4682  000A3A  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  4686  000A3C  C0AB  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;CANlib.h: 962: tamp = filter & 0x0000FF00;
  4690  000A40  0E00               	movlw	0
  4691  000A42  0100               	movlb	0	; () banked
  4692  000A44  15A1               	andwf	CANSetFilter@filter& (0+255),w,b
  4693  000A46  0100               	movlb	0	; () banked
  4694  000A48  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  4695  000A4A  0EFF               	movlw	255
  4696  000A4C  0100               	movlb	0	; () banked
  4697  000A4E  15A2               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4698  000A50  0100               	movlb	0	; () banked
  4699  000A52  6FAC               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4700  000A54  0E00               	movlw	0
  4701  000A56  0100               	movlb	0	; () banked
  4702  000A58  15A3               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4703  000A5A  0100               	movlb	0	; () banked
  4704  000A5C  6FAD               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4705  000A5E  0E00               	movlw	0
  4706  000A60  0100               	movlb	0	; () banked
  4707  000A62  15A4               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4708  000A64  0100               	movlb	0	; () banked
  4709  000A66  6FAE               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;CANlib.h: 963: tamp = tamp >> 8;
  4713  000A68  0100               	movlb	0	; () banked
  4714  000A6A  C0AB  F0A6         	movff	CANSetFilter@tamp,??_CANSetFilter
  4715  000A6E  0100               	movlb	0	; () banked
  4716  000A70  C0AC  F0A7         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4717  000A74  0100               	movlb	0	; () banked
  4718  000A76  C0AD  F0A8         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4719  000A7A  0100               	movlb	0	; () banked
  4720  000A7C  C0AE  F0A9         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4721  000A80  C0A7  F0A6         	movff	??_CANSetFilter+1,??_CANSetFilter
  4722  000A84  C0A8  F0A7         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4723  000A88  C0A9  F0A8         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4724  000A8C  0100               	movlb	0	; () banked
  4725  000A8E  6BA9               	clrf	(??_CANSetFilter+3)& (0+255),b
  4726  000A90  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  4727  000A94  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4728  000A98  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4729  000A9C  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  4733  000AA0  C0AB  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;CANlib.h: 966: if (filter & 0x00010000)
  4737  000AA4  0100               	movlb	0	; () banked
  4738  000AA6  A1A3               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4739  000AA8  D003               	goto	l500
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  4743  000AAA  010F               	movlb	15	; () banked
  4744  000AAC  810D               	bsf	13,0,b	;volatile
  4745  000AAE  D002               	goto	l501
  4746  000AB0                     l500:
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;CANlib.h: 968: else
  4750                           ;CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  4751  000AB0  010F               	movlb	15	; () banked
  4752  000AB2  910D               	bcf	13,0,b	;volatile
  4753  000AB4                     l501:
  4754                           
  4755                           ; BSR set to: 15
  4756                           ;CANlib.h: 971: if (filter & 0x00020000)
  4757  000AB4  0100               	movlb	0	; () banked
  4758  000AB6  A3A3               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4759  000AB8  D003               	goto	l502
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  4763  000ABA  010F               	movlb	15	; () banked
  4764  000ABC  830D               	bsf	13,1,b	;volatile
  4765  000ABE  D002               	goto	l503
  4766  000AC0                     l502:
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;CANlib.h: 973: else
  4770                           ;CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  4771  000AC0  010F               	movlb	15	; () banked
  4772  000AC2  930D               	bcf	13,1,b	;volatile
  4773  000AC4                     l503:
  4774                           
  4775                           ; BSR set to: 15
  4776                           ;CANlib.h: 976: if (filter & 0x00040000)
  4777  000AC4  0100               	movlb	0	; () banked
  4778  000AC6  A5A3               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4779  000AC8  D003               	goto	l504
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  4783  000ACA  010F               	movlb	15	; () banked
  4784  000ACC  8B0D               	bsf	13,5,b	;volatile
  4785  000ACE  D002               	goto	l505
  4786  000AD0                     l504:
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;CANlib.h: 978: else
  4790                           ;CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  4791  000AD0  010F               	movlb	15	; () banked
  4792  000AD2  9B0D               	bcf	13,5,b	;volatile
  4793  000AD4                     l505:
  4794                           
  4795                           ; BSR set to: 15
  4796                           ;CANlib.h: 981: if (filter & 0x00080000)
  4797  000AD4  0100               	movlb	0	; () banked
  4798  000AD6  A7A3               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4799  000AD8  D003               	goto	l506
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  4803  000ADA  010F               	movlb	15	; () banked
  4804  000ADC  8D0D               	bsf	13,6,b	;volatile
  4805  000ADE  D002               	goto	l507
  4806  000AE0                     l506:
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;CANlib.h: 983: else
  4810                           ;CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  4811  000AE0  010F               	movlb	15	; () banked
  4812  000AE2  9D0D               	bcf	13,6,b	;volatile
  4813  000AE4                     l507:
  4814                           
  4815                           ; BSR set to: 15
  4816                           ;CANlib.h: 986: if (filter & 0x00100000)
  4817  000AE4  0100               	movlb	0	; () banked
  4818  000AE6  A9A3               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4819  000AE8  D003               	goto	l508
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  4823  000AEA  010F               	movlb	15	; () banked
  4824  000AEC  8F0D               	bsf	13,7,b	;volatile
  4825  000AEE  D002               	goto	l4281
  4826  000AF0                     l508:
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;CANlib.h: 988: else
  4830                           ;CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  4831  000AF0  010F               	movlb	15	; () banked
  4832  000AF2  9F0D               	bcf	13,7,b	;volatile
  4833  000AF4                     l4281:
  4834                           
  4835                           ; BSR set to: 15
  4836                           ;CANlib.h: 991: tamp = (filter >> 21);
  4837  000AF4  0100               	movlb	0	; () banked
  4838  000AF6  C0A1  F0A6         	movff	CANSetFilter@filter,??_CANSetFilter
  4839  000AFA  0100               	movlb	0	; () banked
  4840  000AFC  C0A2  F0A7         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4841  000B00  0100               	movlb	0	; () banked
  4842  000B02  C0A3  F0A8         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4843  000B06  0100               	movlb	0	; () banked
  4844  000B08  C0A4  F0A9         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4845  000B0C  0E16               	movlw	22
  4846  000B0E  D006               	goto	u5450
  4847  000B10                     u5455:
  4848  000B10  0100               	movlb	0	; () banked
  4849  000B12  90D8               	bcf	status,0,c
  4850  000B14  33A9               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4851  000B16  33A8               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4852  000B18  33A7               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4853  000B1A  33A6               	rrcf	??_CANSetFilter& (0+255),f,b
  4854  000B1C                     u5450:
  4855  000B1C  2EE8               	decfsz	wreg,f,c
  4856  000B1E  D7F8               	goto	u5455
  4857  000B20  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  4858  000B24  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4859  000B28  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4860  000B2C  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;CANlib.h: 992: tamp = tamp & 0x000000FF;
  4864  000B30  0100               	movlb	0	; () banked
  4865  000B32  51AB               	movf	CANSetFilter@tamp& (0+255),w,b
  4866  000B34  0100               	movlb	0	; () banked
  4867  000B36  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  4868  000B38  0100               	movlb	0	; () banked
  4869  000B3A  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4870  000B3C  0100               	movlb	0	; () banked
  4871  000B3E  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4872  000B40  0100               	movlb	0	; () banked
  4873  000B42  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  4877  000B44  C0AB  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4878  000B48                     l4287:
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;CANlib.h: 994: }
  4882                           ;CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4883  000B48  0100               	movlb	0	; () banked
  4884  000B4A  51AA               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4885  000B4C  0A04               	xorlw	4
  4886  000B4E  A4D8               	btfss	status,2,c
  4887  000B50  D097               	goto	l4321
  4888                           
  4889                           ; BSR set to: 0
  4890  000B52  0100               	movlb	0	; () banked
  4891  000B54  51A5               	movf	CANSetFilter@type& (0+255),w,b
  4892  000B56  0AF7               	xorlw	247
  4893  000B58  A4D8               	btfss	status,2,c
  4894  000B5A  D092               	goto	l4321
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;CANlib.h: 997: {
  4898                           ;CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  4899  000B5C  010F               	movlb	15	; () banked
  4900  000B5E  8711               	bsf	17,3,b	;volatile
  4901                           
  4902                           ; BSR set to: 15
  4903                           ;CANlib.h: 1000: tamp = filter & 0x000000FF;
  4904  000B60  0100               	movlb	0	; () banked
  4905  000B62  51A1               	movf	CANSetFilter@filter& (0+255),w,b
  4906  000B64  0100               	movlb	0	; () banked
  4907  000B66  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  4908  000B68  0100               	movlb	0	; () banked
  4909  000B6A  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4910  000B6C  0100               	movlb	0	; () banked
  4911  000B6E  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4912  000B70  0100               	movlb	0	; () banked
  4913  000B72  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  4917  000B74  C0AB  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;CANlib.h: 1003: tamp = filter & 0x0000FF00;
  4921  000B78  0E00               	movlw	0
  4922  000B7A  0100               	movlb	0	; () banked
  4923  000B7C  15A1               	andwf	CANSetFilter@filter& (0+255),w,b
  4924  000B7E  0100               	movlb	0	; () banked
  4925  000B80  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  4926  000B82  0EFF               	movlw	255
  4927  000B84  0100               	movlb	0	; () banked
  4928  000B86  15A2               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4929  000B88  0100               	movlb	0	; () banked
  4930  000B8A  6FAC               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4931  000B8C  0E00               	movlw	0
  4932  000B8E  0100               	movlb	0	; () banked
  4933  000B90  15A3               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4934  000B92  0100               	movlb	0	; () banked
  4935  000B94  6FAD               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4936  000B96  0E00               	movlw	0
  4937  000B98  0100               	movlb	0	; () banked
  4938  000B9A  15A4               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4939  000B9C  0100               	movlb	0	; () banked
  4940  000B9E  6FAE               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;CANlib.h: 1004: tamp = tamp >> 8;
  4944  000BA0  0100               	movlb	0	; () banked
  4945  000BA2  C0AB  F0A6         	movff	CANSetFilter@tamp,??_CANSetFilter
  4946  000BA6  0100               	movlb	0	; () banked
  4947  000BA8  C0AC  F0A7         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4948  000BAC  0100               	movlb	0	; () banked
  4949  000BAE  C0AD  F0A8         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4950  000BB2  0100               	movlb	0	; () banked
  4951  000BB4  C0AE  F0A9         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4952  000BB8  C0A7  F0A6         	movff	??_CANSetFilter+1,??_CANSetFilter
  4953  000BBC  C0A8  F0A7         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4954  000BC0  C0A9  F0A8         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4955  000BC4  0100               	movlb	0	; () banked
  4956  000BC6  6BA9               	clrf	(??_CANSetFilter+3)& (0+255),b
  4957  000BC8  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  4958  000BCC  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4959  000BD0  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4960  000BD4  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  4964  000BD8  C0AB  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;CANlib.h: 1007: if (filter & 0x00010000)
  4968  000BDC  0100               	movlb	0	; () banked
  4969  000BDE  A1A3               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4970  000BE0  D003               	goto	l511
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  4974  000BE2  010F               	movlb	15	; () banked
  4975  000BE4  8111               	bsf	17,0,b	;volatile
  4976  000BE6  D002               	goto	l512
  4977  000BE8                     l511:
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;CANlib.h: 1009: else
  4981                           ;CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  4982  000BE8  010F               	movlb	15	; () banked
  4983  000BEA  9111               	bcf	17,0,b	;volatile
  4984  000BEC                     l512:
  4985                           
  4986                           ; BSR set to: 15
  4987                           ;CANlib.h: 1012: if (filter & 0x00020000)
  4988  000BEC  0100               	movlb	0	; () banked
  4989  000BEE  A3A3               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4990  000BF0  D003               	goto	l513
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  4994  000BF2  010F               	movlb	15	; () banked
  4995  000BF4  8311               	bsf	17,1,b	;volatile
  4996  000BF6  D002               	goto	l514
  4997  000BF8                     l513:
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;CANlib.h: 1014: else
  5001                           ;CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5002  000BF8  010F               	movlb	15	; () banked
  5003  000BFA  9311               	bcf	17,1,b	;volatile
  5004  000BFC                     l514:
  5005                           
  5006                           ; BSR set to: 15
  5007                           ;CANlib.h: 1017: if (filter & 0x00040000)
  5008  000BFC  0100               	movlb	0	; () banked
  5009  000BFE  A5A3               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5010  000C00  D003               	goto	l515
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5014  000C02  010F               	movlb	15	; () banked
  5015  000C04  8B11               	bsf	17,5,b	;volatile
  5016  000C06  D002               	goto	l516
  5017  000C08                     l515:
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;CANlib.h: 1019: else
  5021                           ;CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5022  000C08  010F               	movlb	15	; () banked
  5023  000C0A  9B11               	bcf	17,5,b	;volatile
  5024  000C0C                     l516:
  5025                           
  5026                           ; BSR set to: 15
  5027                           ;CANlib.h: 1022: if (filter & 0x00080000)
  5028  000C0C  0100               	movlb	0	; () banked
  5029  000C0E  A7A3               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5030  000C10  D003               	goto	l517
  5031                           
  5032                           ; BSR set to: 0
  5033                           ;CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5034  000C12  010F               	movlb	15	; () banked
  5035  000C14  8D11               	bsf	17,6,b	;volatile
  5036  000C16  D002               	goto	l518
  5037  000C18                     l517:
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;CANlib.h: 1024: else
  5041                           ;CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5042  000C18  010F               	movlb	15	; () banked
  5043  000C1A  9D11               	bcf	17,6,b	;volatile
  5044  000C1C                     l518:
  5045                           
  5046                           ; BSR set to: 15
  5047                           ;CANlib.h: 1027: if (filter & 0x00100000)
  5048  000C1C  0100               	movlb	0	; () banked
  5049  000C1E  A9A3               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5050  000C20  D003               	goto	l519
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5054  000C22  010F               	movlb	15	; () banked
  5055  000C24  8F11               	bsf	17,7,b	;volatile
  5056  000C26  D002               	goto	l4315
  5057  000C28                     l519:
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;CANlib.h: 1029: else
  5061                           ;CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5062  000C28  010F               	movlb	15	; () banked
  5063  000C2A  9F11               	bcf	17,7,b	;volatile
  5064  000C2C                     l4315:
  5065                           
  5066                           ; BSR set to: 15
  5067                           ;CANlib.h: 1032: tamp = (filter >> 21);
  5068  000C2C  0100               	movlb	0	; () banked
  5069  000C2E  C0A1  F0A6         	movff	CANSetFilter@filter,??_CANSetFilter
  5070  000C32  0100               	movlb	0	; () banked
  5071  000C34  C0A2  F0A7         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5072  000C38  0100               	movlb	0	; () banked
  5073  000C3A  C0A3  F0A8         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5074  000C3E  0100               	movlb	0	; () banked
  5075  000C40  C0A4  F0A9         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5076  000C44  0E16               	movlw	22
  5077  000C46  D006               	goto	u5530
  5078  000C48                     u5535:
  5079  000C48  0100               	movlb	0	; () banked
  5080  000C4A  90D8               	bcf	status,0,c
  5081  000C4C  33A9               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5082  000C4E  33A8               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5083  000C50  33A7               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5084  000C52  33A6               	rrcf	??_CANSetFilter& (0+255),f,b
  5085  000C54                     u5530:
  5086  000C54  2EE8               	decfsz	wreg,f,c
  5087  000C56  D7F8               	goto	u5535
  5088  000C58  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  5089  000C5C  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5090  000C60  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5091  000C64  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5092                           
  5093                           ; BSR set to: 0
  5094                           ;CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5095  000C68  0100               	movlb	0	; () banked
  5096  000C6A  51AB               	movf	CANSetFilter@tamp& (0+255),w,b
  5097  000C6C  0100               	movlb	0	; () banked
  5098  000C6E  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  5099  000C70  0100               	movlb	0	; () banked
  5100  000C72  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5101  000C74  0100               	movlb	0	; () banked
  5102  000C76  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5103  000C78  0100               	movlb	0	; () banked
  5104  000C7A  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5108  000C7C  C0AB  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5109  000C80                     l4321:
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;CANlib.h: 1035: }
  5113                           ;CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5114  000C80  0100               	movlb	0	; () banked
  5115  000C82  51AA               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5116  000C84  0A05               	xorlw	5
  5117  000C86  A4D8               	btfss	status,2,c
  5118  000C88  D097               	goto	l532
  5119                           
  5120                           ; BSR set to: 0
  5121  000C8A  0100               	movlb	0	; () banked
  5122  000C8C  51A5               	movf	CANSetFilter@type& (0+255),w,b
  5123  000C8E  0AF7               	xorlw	247
  5124  000C90  A4D8               	btfss	status,2,c
  5125  000C92  D092               	goto	l532
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;CANlib.h: 1038: {
  5129                           ;CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5130  000C94  010F               	movlb	15	; () banked
  5131  000C96  8715               	bsf	21,3,b	;volatile
  5132                           
  5133                           ; BSR set to: 15
  5134                           ;CANlib.h: 1041: tamp = filter & 0x000000FF;
  5135  000C98  0100               	movlb	0	; () banked
  5136  000C9A  51A1               	movf	CANSetFilter@filter& (0+255),w,b
  5137  000C9C  0100               	movlb	0	; () banked
  5138  000C9E  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  5139  000CA0  0100               	movlb	0	; () banked
  5140  000CA2  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5141  000CA4  0100               	movlb	0	; () banked
  5142  000CA6  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5143  000CA8  0100               	movlb	0	; () banked
  5144  000CAA  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5148  000CAC  C0AB  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5152  000CB0  0E00               	movlw	0
  5153  000CB2  0100               	movlb	0	; () banked
  5154  000CB4  15A1               	andwf	CANSetFilter@filter& (0+255),w,b
  5155  000CB6  0100               	movlb	0	; () banked
  5156  000CB8  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  5157  000CBA  0EFF               	movlw	255
  5158  000CBC  0100               	movlb	0	; () banked
  5159  000CBE  15A2               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5160  000CC0  0100               	movlb	0	; () banked
  5161  000CC2  6FAC               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5162  000CC4  0E00               	movlw	0
  5163  000CC6  0100               	movlb	0	; () banked
  5164  000CC8  15A3               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5165  000CCA  0100               	movlb	0	; () banked
  5166  000CCC  6FAD               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5167  000CCE  0E00               	movlw	0
  5168  000CD0  0100               	movlb	0	; () banked
  5169  000CD2  15A4               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5170  000CD4  0100               	movlb	0	; () banked
  5171  000CD6  6FAE               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;CANlib.h: 1045: tamp = tamp >> 8;
  5175  000CD8  0100               	movlb	0	; () banked
  5176  000CDA  C0AB  F0A6         	movff	CANSetFilter@tamp,??_CANSetFilter
  5177  000CDE  0100               	movlb	0	; () banked
  5178  000CE0  C0AC  F0A7         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5179  000CE4  0100               	movlb	0	; () banked
  5180  000CE6  C0AD  F0A8         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5181  000CEA  0100               	movlb	0	; () banked
  5182  000CEC  C0AE  F0A9         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5183  000CF0  C0A7  F0A6         	movff	??_CANSetFilter+1,??_CANSetFilter
  5184  000CF4  C0A8  F0A7         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5185  000CF8  C0A9  F0A8         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5186  000CFC  0100               	movlb	0	; () banked
  5187  000CFE  6BA9               	clrf	(??_CANSetFilter+3)& (0+255),b
  5188  000D00  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  5189  000D04  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5190  000D08  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5191  000D0C  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5192                           
  5193                           ; BSR set to: 0
  5194                           ;CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5195  000D10  C0AB  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;CANlib.h: 1048: if (filter & 0x00010000)
  5199  000D14  0100               	movlb	0	; () banked
  5200  000D16  A1A3               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5201  000D18  D003               	goto	l522
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5205  000D1A  010F               	movlb	15	; () banked
  5206  000D1C  8115               	bsf	21,0,b	;volatile
  5207  000D1E  D002               	goto	l523
  5208  000D20                     l522:
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;CANlib.h: 1050: else
  5212                           ;CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5213  000D20  010F               	movlb	15	; () banked
  5214  000D22  9115               	bcf	21,0,b	;volatile
  5215  000D24                     l523:
  5216                           
  5217                           ; BSR set to: 15
  5218                           ;CANlib.h: 1053: if (filter & 0x00020000)
  5219  000D24  0100               	movlb	0	; () banked
  5220  000D26  A3A3               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5221  000D28  D003               	goto	l524
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5225  000D2A  010F               	movlb	15	; () banked
  5226  000D2C  8315               	bsf	21,1,b	;volatile
  5227  000D2E  D002               	goto	l525
  5228  000D30                     l524:
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;CANlib.h: 1055: else
  5232                           ;CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5233  000D30  010F               	movlb	15	; () banked
  5234  000D32  9315               	bcf	21,1,b	;volatile
  5235  000D34                     l525:
  5236                           
  5237                           ; BSR set to: 15
  5238                           ;CANlib.h: 1058: if (filter & 0x00040000)
  5239  000D34  0100               	movlb	0	; () banked
  5240  000D36  A5A3               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5241  000D38  D003               	goto	l526
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5245  000D3A  010F               	movlb	15	; () banked
  5246  000D3C  8B15               	bsf	21,5,b	;volatile
  5247  000D3E  D002               	goto	l527
  5248  000D40                     l526:
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;CANlib.h: 1060: else
  5252                           ;CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5253  000D40  010F               	movlb	15	; () banked
  5254  000D42  9B15               	bcf	21,5,b	;volatile
  5255  000D44                     l527:
  5256                           
  5257                           ; BSR set to: 15
  5258                           ;CANlib.h: 1063: if (filter & 0x00080000)
  5259  000D44  0100               	movlb	0	; () banked
  5260  000D46  A7A3               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5261  000D48  D003               	goto	l528
  5262                           
  5263                           ; BSR set to: 0
  5264                           ;CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5265  000D4A  010F               	movlb	15	; () banked
  5266  000D4C  8D15               	bsf	21,6,b	;volatile
  5267  000D4E  D002               	goto	l529
  5268  000D50                     l528:
  5269                           
  5270                           ; BSR set to: 0
  5271                           ;CANlib.h: 1065: else
  5272                           ;CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5273  000D50  010F               	movlb	15	; () banked
  5274  000D52  9D15               	bcf	21,6,b	;volatile
  5275  000D54                     l529:
  5276                           
  5277                           ; BSR set to: 15
  5278                           ;CANlib.h: 1068: if (filter & 0x00100000)
  5279  000D54  0100               	movlb	0	; () banked
  5280  000D56  A9A3               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5281  000D58  D003               	goto	l530
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5285  000D5A  010F               	movlb	15	; () banked
  5286  000D5C  8F15               	bsf	21,7,b	;volatile
  5287  000D5E  D002               	goto	l4349
  5288  000D60                     l530:
  5289                           
  5290                           ; BSR set to: 0
  5291                           ;CANlib.h: 1070: else
  5292                           ;CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5293  000D60  010F               	movlb	15	; () banked
  5294  000D62  9F15               	bcf	21,7,b	;volatile
  5295  000D64                     l4349:
  5296                           
  5297                           ; BSR set to: 15
  5298                           ;CANlib.h: 1073: tamp = (filter >> 21);
  5299  000D64  0100               	movlb	0	; () banked
  5300  000D66  C0A1  F0A6         	movff	CANSetFilter@filter,??_CANSetFilter
  5301  000D6A  0100               	movlb	0	; () banked
  5302  000D6C  C0A2  F0A7         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5303  000D70  0100               	movlb	0	; () banked
  5304  000D72  C0A3  F0A8         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5305  000D76  0100               	movlb	0	; () banked
  5306  000D78  C0A4  F0A9         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5307  000D7C  0E16               	movlw	22
  5308  000D7E  D006               	goto	u5610
  5309  000D80                     u5615:
  5310  000D80  0100               	movlb	0	; () banked
  5311  000D82  90D8               	bcf	status,0,c
  5312  000D84  33A9               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5313  000D86  33A8               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5314  000D88  33A7               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5315  000D8A  33A6               	rrcf	??_CANSetFilter& (0+255),f,b
  5316  000D8C                     u5610:
  5317  000D8C  2EE8               	decfsz	wreg,f,c
  5318  000D8E  D7F8               	goto	u5615
  5319  000D90  C0A6  F0AB         	movff	??_CANSetFilter,CANSetFilter@tamp
  5320  000D94  C0A7  F0AC         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5321  000D98  C0A8  F0AD         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5322  000D9C  C0A9  F0AE         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5326  000DA0  0100               	movlb	0	; () banked
  5327  000DA2  51AB               	movf	CANSetFilter@tamp& (0+255),w,b
  5328  000DA4  0100               	movlb	0	; () banked
  5329  000DA6  6FAB               	movwf	CANSetFilter@tamp& (0+255),b
  5330  000DA8  0100               	movlb	0	; () banked
  5331  000DAA  6BAC               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5332  000DAC  0100               	movlb	0	; () banked
  5333  000DAE  6BAD               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5334  000DB0  0100               	movlb	0	; () banked
  5335  000DB2  6BAE               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5339  000DB4  C0AB  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5340  000DB8                     l532:
  5341                           
  5342                           ; BSR set to: 0
  5343  000DB8  0012               	return	
  5344  000DBA                     __end_of_CANSetFilter:
  5345                           	opt stack 0
  5346                           tblptru	equ	0xFF8
  5347                           tblptrh	equ	0xFF7
  5348                           tblptrl	equ	0xFF6
  5349                           tablat	equ	0xFF5
  5350                           prodh	equ	0xFF4
  5351                           prodl	equ	0xFF3
  5352                           intcon	equ	0xFF2
  5353                           intcon2	equ	0xFF1
  5354                           postinc0	equ	0xFEE
  5355                           wreg	equ	0xFE8
  5356                           indf1	equ	0xFE7
  5357                           fsr1h	equ	0xFE2
  5358                           fsr1l	equ	0xFE1
  5359                           indf2	equ	0xFDF
  5360                           fsr2h	equ	0xFDA
  5361                           fsr2l	equ	0xFD9
  5362                           status	equ	0xFD8
  5363                           
  5364 ;; *************** function _CANOperationMode *****************
  5365 ;; Defined at:
  5366 ;;		line 206 in file "CANlib.h"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  mode            1    wreg     enum E16879
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  mode            1   14[BANK0 ] enum E16879
  5371 ;; Return value:  Size  Location     Type
  5372 ;;		None               void
  5373 ;; Registers used:
  5374 ;;		wreg, status,2, status,0
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5380 ;;      Params:         0       0       0       0
  5381 ;;      Locals:         0       1       0       0
  5382 ;;      Temps:          0       0       0       0
  5383 ;;      Totals:         0       1       0       0
  5384 ;;Total ram usage:        1 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    3
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_CANInitialize
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text7
  5395  002B86                     __ptext7:
  5396                           	opt stack 0
  5397  002B86                     _CANOperationMode:
  5398                           	opt stack 25
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;incstack = 0
  5402                           ;CANOperationMode@mode stored from wreg
  5403  002B86  0100               	movlb	0	; () banked
  5404  002B88  6FA1               	movwf	CANOperationMode@mode& (0+255),b
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;CANlib.h: 208: CANCON = mode;
  5408  002B8A  C0A1  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5409  002B8E                     l3945:
  5410                           
  5411                           ; BSR set to: 0
  5412  002B8E  506E               	movf	3950,w,c	;volatile
  5413  002B90  0BE0               	andlw	224
  5414  002B92  0100               	movlb	0	; () banked
  5415  002B94  19A1               	xorwf	CANOperationMode@mode& (0+255),w,b
  5416  002B96  B4D8               	btfsc	status,2,c
  5417                           
  5418                           ; BSR set to: 0
  5419                           
  5420                           ; BSR set to: 0
  5421  002B98  0012               	return	
  5422  002B9A  D7F9               	goto	l3945
  5423  002B9C                     __end_of_CANOperationMode:
  5424                           	opt stack 0
  5425                           tblptru	equ	0xFF8
  5426                           tblptrh	equ	0xFF7
  5427                           tblptrl	equ	0xFF6
  5428                           tablat	equ	0xFF5
  5429                           prodh	equ	0xFF4
  5430                           prodl	equ	0xFF3
  5431                           intcon	equ	0xFF2
  5432                           intcon2	equ	0xFF1
  5433                           postinc0	equ	0xFEE
  5434                           wreg	equ	0xFE8
  5435                           indf1	equ	0xFE7
  5436                           fsr1h	equ	0xFE2
  5437                           fsr1l	equ	0xFE1
  5438                           indf2	equ	0xFDF
  5439                           fsr2h	equ	0xFDA
  5440                           fsr2l	equ	0xFD9
  5441                           status	equ	0xFD8
  5442                           
  5443 ;; *************** function _battery_measure *****************
  5444 ;; Defined at:
  5445 ;;		line 270 in file "motore.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;		None
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;		None
  5450 ;; Return value:  Size  Location     Type
  5451 ;;		None               void
  5452 ;; Registers used:
  5453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5459 ;;      Params:         0       0       0       0
  5460 ;;      Locals:         0       0       0       0
  5461 ;;      Temps:          0       0       0       0
  5462 ;;      Totals:         0       0       0       0
  5463 ;;Total ram usage:        0 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:    4
  5466 ;; This function calls:
  5467 ;;		_CANisTxReady
  5468 ;;		_CANsendMessage
  5469 ;;		___awdiv
  5470 ;;		___wmul
  5471 ;; This function is called by:
  5472 ;;		_main
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           	psect	text8
  5477  002808                     __ptext8:
  5478                           	opt stack 0
  5479  002808                     _battery_measure:
  5480                           	opt stack 26
  5481                           
  5482                           ;motore.c: 271: ADCON0bits.GO = 1;
  5483                           
  5484                           ; BSR set to: 0
  5485                           ;incstack = 0
  5486  002808  82C2               	bsf	4034,1,c	;volatile
  5487  00280A                     l718:
  5488  00280A  B2C2               	btfsc	4034,1,c	;volatile
  5489  00280C  D7FE               	goto	l718
  5490                           
  5491                           ;motore.c: 273: vBatt = ADRESH;
  5492  00280E  0100               	movlb	0	; () banked
  5493  002810  CFC4 F084          	movff	4036,_vBatt	;volatile
  5494  002814  0100               	movlb	0	; () banked
  5495  002816  6B85               	clrf	(_vBatt+1)& (0+255),b
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;motore.c: 274: vBatt = (vBatt * 14) / 235;
  5499  002818  C084  F0A9         	movff	_vBatt,___wmul@multiplier
  5500  00281C  C085  F0AA         	movff	_vBatt+1,___wmul@multiplier+1
  5501  002820  0E00               	movlw	0
  5502  002822  0100               	movlb	0	; () banked
  5503  002824  6FAC               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5504  002826  0E0E               	movlw	14
  5505  002828  0100               	movlb	0	; () banked
  5506  00282A  6FAB               	movwf	___wmul@multiplicand& (0+255),b
  5507  00282C  EC85  F015         	call	___wmul	;wreg free
  5508  002830  0100               	movlb	0	; () banked
  5509  002832  C0A9  F0A1         	movff	?___wmul,___awdiv@dividend
  5510  002836  0100               	movlb	0	; () banked
  5511  002838  C0AA  F0A2         	movff	?___wmul+1,___awdiv@dividend+1
  5512  00283C  0E00               	movlw	0
  5513  00283E  0100               	movlb	0	; () banked
  5514  002840  6FA4               	movwf	(___awdiv@divisor+1)& (0+255),b
  5515  002842  0EEB               	movlw	235
  5516  002844  0100               	movlb	0	; () banked
  5517  002846  6FA3               	movwf	___awdiv@divisor& (0+255),b
  5518  002848  EC93  F013         	call	___awdiv	;wreg free
  5519  00284C  0100               	movlb	0	; () banked
  5520  00284E  C0A1  F084         	movff	?___awdiv,_vBatt
  5521  002852  0100               	movlb	0	; () banked
  5522  002854  C0A2  F085         	movff	?___awdiv+1,_vBatt+1
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;motore.c: 275: if (vBatt < 10) {
  5526  002858  0100               	movlb	0	; () banked
  5527  00285A  5185               	movf	(_vBatt+1)& (0+255),w,b
  5528  00285C  0A80               	xorlw	128
  5529  00285E  6EF3               	movwf	prodl,c
  5530  002860  0E80               	movlw	128
  5531  002862  5CF3               	subwf	prodl,w,c
  5532  002864  0E0A               	movlw	10
  5533  002866  B4D8               	btfsc	status,2,c
  5534  002868  5D84               	subwf	_vBatt& (0+255),w,b
  5535  00286A  B0D8               	btfsc	status,0,c
  5536  00286C  D021               	goto	l725
  5537  00286E                     l4883:
  5538  00286E  ECA0  F015         	call	_CANisTxReady	;wreg free
  5539  002872  0900               	iorlw	0
  5540  002874  B4D8               	btfsc	status,2,c
  5541  002876  D7FB               	goto	l4883
  5542                           
  5543                           ;motore.c: 278: CANsendMessage(0b00000000000000000000000001001, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5544  002878  0E09               	movlw	9
  5545  00287A  0100               	movlb	0	; () banked
  5546  00287C  6FA1               	movwf	CANsendMessage@identifier& (0+255),b
  5547  00287E  0E00               	movlw	0
  5548  002880  0100               	movlb	0	; () banked
  5549  002882  6FA2               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5550  002884  0E00               	movlw	0
  5551  002886  0100               	movlb	0	; () banked
  5552  002888  6FA3               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5553  00288A  0E00               	movlw	0
  5554  00288C  0100               	movlb	0	; () banked
  5555  00288E  6FA4               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5556  002890  0100               	movlb	0	; () banked
  5557  002892  0E00               	movlw	high _data_array
  5558  002894  0100               	movlb	0	; () banked
  5559  002896  6FA6               	movwf	(CANsendMessage@data+1)& (0+255),b
  5560  002898  0100               	movlb	0	; () banked
  5561  00289A  0E8B               	movlw	low _data_array
  5562  00289C  0100               	movlb	0	; () banked
  5563  00289E  6FA5               	movwf	CANsendMessage@data& (0+255),b
  5564  0028A0  0E08               	movlw	8
  5565  0028A2  0100               	movlb	0	; () banked
  5566  0028A4  6FA7               	movwf	CANsendMessage@dataLength& (0+255),b
  5567  0028A6  0EFC               	movlw	252
  5568  0028A8  0100               	movlb	0	; () banked
  5569  0028AA  6FA8               	movwf	CANsendMessage@flags& (0+255),b
  5570  0028AC  ECDD  F006         	call	_CANsendMessage	;wreg free
  5571  0028B0                     l725:
  5572  0028B0  0012               	return	
  5573  0028B2                     __end_of_battery_measure:
  5574                           	opt stack 0
  5575                           tblptru	equ	0xFF8
  5576                           tblptrh	equ	0xFF7
  5577                           tblptrl	equ	0xFF6
  5578                           tablat	equ	0xFF5
  5579                           prodh	equ	0xFF4
  5580                           prodl	equ	0xFF3
  5581                           intcon	equ	0xFF2
  5582                           intcon2	equ	0xFF1
  5583                           postinc0	equ	0xFEE
  5584                           wreg	equ	0xFE8
  5585                           indf1	equ	0xFE7
  5586                           fsr1h	equ	0xFE2
  5587                           fsr1l	equ	0xFE1
  5588                           indf2	equ	0xFDF
  5589                           fsr2h	equ	0xFDA
  5590                           fsr2l	equ	0xFD9
  5591                           status	equ	0xFD8
  5592                           
  5593 ;; *************** function ___wmul *****************
  5594 ;; Defined at:
  5595 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  multiplier      2   22[BANK0 ] unsigned int 
  5598 ;;  multiplicand    2   24[BANK0 ] unsigned int 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;  product         2   26[BANK0 ] unsigned int 
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  2   22[BANK0 ] unsigned int 
  5603 ;; Registers used:
  5604 ;;		wreg, status,2, status,0, prodl, prodh
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5610 ;;      Params:         0       4       0       0
  5611 ;;      Locals:         0       2       0       0
  5612 ;;      Temps:          0       0       0       0
  5613 ;;      Totals:         0       6       0       0
  5614 ;;Total ram usage:        6 bytes
  5615 ;; Hardware stack levels used:    1
  5616 ;; Hardware stack levels required when called:    3
  5617 ;; This function calls:
  5618 ;;		Nothing
  5619 ;; This function is called by:
  5620 ;;		_delay_ms
  5621 ;;		_main
  5622 ;;		_battery_measure
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626                           	psect	text9
  5627  002B0A                     __ptext9:
  5628                           	opt stack 0
  5629  002B0A                     ___wmul:
  5630                           	opt stack 26
  5631                           
  5632                           ;incstack = 0
  5633  002B0A  0100               	movlb	0	; () banked
  5634  002B0C  51A9               	movf	___wmul@multiplier& (0+255),w,b
  5635  002B0E  0100               	movlb	0	; () banked
  5636  002B10  03AB               	mulwf	___wmul@multiplicand& (0+255),b
  5637  002B12  CFF3 F0AD          	movff	prodl,___wmul@product
  5638  002B16  CFF4 F0AE          	movff	prodh,___wmul@product+1
  5639  002B1A  0100               	movlb	0	; () banked
  5640  002B1C  51A9               	movf	___wmul@multiplier& (0+255),w,b
  5641  002B1E  0100               	movlb	0	; () banked
  5642  002B20  03AC               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5643  002B22  50F3               	movf	prodl,w,c
  5644  002B24  0100               	movlb	0	; () banked
  5645  002B26  27AE               	addwf	(___wmul@product+1)& (0+255),f,b
  5646  002B28  0100               	movlb	0	; () banked
  5647  002B2A  51AA               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5648  002B2C  0100               	movlb	0	; () banked
  5649  002B2E  03AB               	mulwf	___wmul@multiplicand& (0+255),b
  5650  002B30  50F3               	movf	prodl,w,c
  5651  002B32  0100               	movlb	0	; () banked
  5652  002B34  27AE               	addwf	(___wmul@product+1)& (0+255),f,b
  5653                           
  5654                           ; BSR set to: 0
  5655  002B36  C0AD  F0A9         	movff	___wmul@product,?___wmul
  5656  002B3A  C0AE  F0AA         	movff	___wmul@product+1,?___wmul+1
  5657                           
  5658                           ; BSR set to: 0
  5659                           
  5660                           ; BSR set to: 0
  5661  002B3E  0012               	return	
  5662  002B40                     __end_of___wmul:
  5663                           	opt stack 0
  5664                           tblptru	equ	0xFF8
  5665                           tblptrh	equ	0xFF7
  5666                           tblptrl	equ	0xFF6
  5667                           tablat	equ	0xFF5
  5668                           prodh	equ	0xFF4
  5669                           prodl	equ	0xFF3
  5670                           intcon	equ	0xFF2
  5671                           intcon2	equ	0xFF1
  5672                           postinc0	equ	0xFEE
  5673                           wreg	equ	0xFE8
  5674                           indf1	equ	0xFE7
  5675                           fsr1h	equ	0xFE2
  5676                           fsr1l	equ	0xFE1
  5677                           indf2	equ	0xFDF
  5678                           fsr2h	equ	0xFDA
  5679                           fsr2l	equ	0xFD9
  5680                           status	equ	0xFD8
  5681                           
  5682 ;; *************** function ___awdiv *****************
  5683 ;; Defined at:
  5684 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\awdiv.c"
  5685 ;; Parameters:    Size  Location     Type
  5686 ;;  dividend        2   14[BANK0 ] int 
  5687 ;;  divisor         2   16[BANK0 ] int 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  quotient        2   20[BANK0 ] int 
  5690 ;;  sign            1   19[BANK0 ] unsigned char 
  5691 ;;  counter         1   18[BANK0 ] unsigned char 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  2   14[BANK0 ] int 
  5694 ;; Registers used:
  5695 ;;		wreg, status,2, status,0, prodl
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5701 ;;      Params:         0       4       0       0
  5702 ;;      Locals:         0       4       0       0
  5703 ;;      Temps:          0       0       0       0
  5704 ;;      Totals:         0       8       0       0
  5705 ;;Total ram usage:        8 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; Hardware stack levels required when called:    3
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_main
  5712 ;;		_battery_measure
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           	psect	text10
  5717  002726                     __ptext10:
  5718                           	opt stack 0
  5719  002726                     ___awdiv:
  5720                           	opt stack 26
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;incstack = 0
  5724  002726  0E00               	movlw	0
  5725  002728  0100               	movlb	0	; () banked
  5726  00272A  6FA6               	movwf	___awdiv@sign& (0+255),b
  5727                           
  5728                           ; BSR set to: 0
  5729  00272C  0100               	movlb	0	; () banked
  5730  00272E  51A4               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5731  002730  0A80               	xorlw	128
  5732  002732  6EF3               	movwf	prodl,c
  5733  002734  0E80               	movlw	128
  5734  002736  5CF3               	subwf	prodl,w,c
  5735  002738  0E00               	movlw	0
  5736  00273A  B4D8               	btfsc	status,2,c
  5737  00273C  5DA3               	subwf	___awdiv@divisor& (0+255),w,b
  5738  00273E  B0D8               	btfsc	status,0,c
  5739  002740  D009               	goto	l4663
  5740                           
  5741                           ; BSR set to: 0
  5742  002742  0100               	movlb	0	; () banked
  5743  002744  6DA3               	negf	___awdiv@divisor& (0+255),b
  5744  002746  0100               	movlb	0	; () banked
  5745  002748  1FA4               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5746  00274A  B0D8               	btfsc	status,0,c
  5747  00274C  2BA4               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5748                           
  5749                           ; BSR set to: 0
  5750  00274E  0E01               	movlw	1
  5751  002750  0100               	movlb	0	; () banked
  5752  002752  6FA6               	movwf	___awdiv@sign& (0+255),b
  5753  002754                     l4663:
  5754                           
  5755                           ; BSR set to: 0
  5756  002754  0100               	movlb	0	; () banked
  5757  002756  51A2               	movf	(___awdiv@dividend+1)& (0+255),w,b
  5758  002758  0A80               	xorlw	128
  5759  00275A  6EF3               	movwf	prodl,c
  5760  00275C  0E80               	movlw	128
  5761  00275E  5CF3               	subwf	prodl,w,c
  5762  002760  0E00               	movlw	0
  5763  002762  B4D8               	btfsc	status,2,c
  5764  002764  5DA1               	subwf	___awdiv@dividend& (0+255),w,b
  5765  002766  B0D8               	btfsc	status,0,c
  5766  002768  D009               	goto	l4669
  5767                           
  5768                           ; BSR set to: 0
  5769  00276A  0100               	movlb	0	; () banked
  5770  00276C  6DA1               	negf	___awdiv@dividend& (0+255),b
  5771  00276E  0100               	movlb	0	; () banked
  5772  002770  1FA2               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5773  002772  B0D8               	btfsc	status,0,c
  5774  002774  2BA2               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5775                           
  5776                           ; BSR set to: 0
  5777  002776  0E01               	movlw	1
  5778  002778  0100               	movlb	0	; () banked
  5779  00277A  1BA6               	xorwf	___awdiv@sign& (0+255),f,b
  5780  00277C                     l4669:
  5781                           
  5782                           ; BSR set to: 0
  5783  00277C  0E00               	movlw	0
  5784  00277E  0100               	movlb	0	; () banked
  5785  002780  6FA8               	movwf	(___awdiv@quotient+1)& (0+255),b
  5786  002782  0E00               	movlw	0
  5787  002784  0100               	movlb	0	; () banked
  5788  002786  6FA7               	movwf	___awdiv@quotient& (0+255),b
  5789                           
  5790                           ; BSR set to: 0
  5791  002788  0100               	movlb	0	; () banked
  5792  00278A  51A4               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5793  00278C  11A3               	iorwf	___awdiv@divisor& (0+255),w,b
  5794  00278E  B4D8               	btfsc	status,2,c
  5795  002790  D02C               	goto	l4691
  5796                           
  5797                           ; BSR set to: 0
  5798  002792  0E01               	movlw	1
  5799  002794  0100               	movlb	0	; () banked
  5800  002796  6FA5               	movwf	___awdiv@counter& (0+255),b
  5801  002798  D006               	goto	l4677
  5802  00279A                     l4675:
  5803                           
  5804                           ; BSR set to: 0
  5805  00279A  0100               	movlb	0	; () banked
  5806  00279C  90D8               	bcf	status,0,c
  5807  00279E  37A3               	rlcf	___awdiv@divisor& (0+255),f,b
  5808  0027A0  37A4               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5809  0027A2  0100               	movlb	0	; () banked
  5810  0027A4  2BA5               	incf	___awdiv@counter& (0+255),f,b
  5811  0027A6                     l4677:
  5812                           
  5813                           ; BSR set to: 0
  5814  0027A6  0100               	movlb	0	; () banked
  5815  0027A8  AFA4               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5816  0027AA  D7F7               	goto	l4675
  5817  0027AC                     l4679:
  5818                           
  5819                           ; BSR set to: 0
  5820  0027AC  0100               	movlb	0	; () banked
  5821  0027AE  90D8               	bcf	status,0,c
  5822  0027B0  37A7               	rlcf	___awdiv@quotient& (0+255),f,b
  5823  0027B2  37A8               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5824                           
  5825                           ; BSR set to: 0
  5826  0027B4  0100               	movlb	0	; () banked
  5827  0027B6  51A3               	movf	___awdiv@divisor& (0+255),w,b
  5828  0027B8  0100               	movlb	0	; () banked
  5829  0027BA  5DA1               	subwf	___awdiv@dividend& (0+255),w,b
  5830  0027BC  0100               	movlb	0	; () banked
  5831  0027BE  51A4               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5832  0027C0  0100               	movlb	0	; () banked
  5833  0027C2  59A2               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5834  0027C4  A0D8               	btfss	status,0,c
  5835  0027C6  D00A               	goto	l4687
  5836                           
  5837                           ; BSR set to: 0
  5838  0027C8  0100               	movlb	0	; () banked
  5839  0027CA  51A3               	movf	___awdiv@divisor& (0+255),w,b
  5840  0027CC  0100               	movlb	0	; () banked
  5841  0027CE  5FA1               	subwf	___awdiv@dividend& (0+255),f,b
  5842  0027D0  0100               	movlb	0	; () banked
  5843  0027D2  51A4               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5844  0027D4  0100               	movlb	0	; () banked
  5845  0027D6  5BA2               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5846                           
  5847                           ; BSR set to: 0
  5848  0027D8  0100               	movlb	0	; () banked
  5849  0027DA  81A7               	bsf	___awdiv@quotient& (0+255),0,b
  5850  0027DC                     l4687:
  5851                           
  5852                           ; BSR set to: 0
  5853  0027DC  0100               	movlb	0	; () banked
  5854  0027DE  90D8               	bcf	status,0,c
  5855  0027E0  33A4               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5856  0027E2  33A3               	rrcf	___awdiv@divisor& (0+255),f,b
  5857                           
  5858                           ; BSR set to: 0
  5859  0027E4  0100               	movlb	0	; () banked
  5860  0027E6  2FA5               	decfsz	___awdiv@counter& (0+255),f,b
  5861  0027E8  D7E1               	goto	l4679
  5862  0027EA                     l4691:
  5863                           
  5864                           ; BSR set to: 0
  5865  0027EA  0100               	movlb	0	; () banked
  5866  0027EC  51A6               	movf	___awdiv@sign& (0+255),w,b
  5867  0027EE  B4D8               	btfsc	status,2,c
  5868  0027F0  D006               	goto	l4695
  5869                           
  5870                           ; BSR set to: 0
  5871  0027F2  0100               	movlb	0	; () banked
  5872  0027F4  6DA7               	negf	___awdiv@quotient& (0+255),b
  5873  0027F6  0100               	movlb	0	; () banked
  5874  0027F8  1FA8               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5875  0027FA  B0D8               	btfsc	status,0,c
  5876  0027FC  2BA8               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5877  0027FE                     l4695:
  5878                           
  5879                           ; BSR set to: 0
  5880  0027FE  C0A7  F0A1         	movff	___awdiv@quotient,?___awdiv
  5881  002802  C0A8  F0A2         	movff	___awdiv@quotient+1,?___awdiv+1
  5882                           
  5883                           ; BSR set to: 0
  5884                           
  5885                           ; BSR set to: 0
  5886  002806  0012               	return	
  5887  002808                     __end_of___awdiv:
  5888                           	opt stack 0
  5889                           tblptru	equ	0xFF8
  5890                           tblptrh	equ	0xFF7
  5891                           tblptrl	equ	0xFF6
  5892                           tablat	equ	0xFF5
  5893                           prodh	equ	0xFF4
  5894                           prodl	equ	0xFF3
  5895                           intcon	equ	0xFF2
  5896                           intcon2	equ	0xFF1
  5897                           postinc0	equ	0xFEE
  5898                           wreg	equ	0xFE8
  5899                           indf1	equ	0xFE7
  5900                           fsr1h	equ	0xFE2
  5901                           fsr1l	equ	0xFE1
  5902                           indf2	equ	0xFDF
  5903                           fsr2h	equ	0xFDA
  5904                           fsr2l	equ	0xFD9
  5905                           status	equ	0xFD8
  5906                           
  5907 ;; *************** function _CANsendMessage *****************
  5908 ;; Defined at:
  5909 ;;		line 294 in file "CANlib.h"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  identifier      4   14[BANK0 ] unsigned long 
  5912 ;;  data            2   18[BANK0 ] PTR unsigned char 
  5913 ;;		 -> data_array1(8), data_array(8), NULL(0), 
  5914 ;;  dataLength      1   20[BANK0 ] unsigned char 
  5915 ;;  flags           1   21[BANK0 ] enum E16907
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;  tamp            4   26[BANK0 ] unsigned long 
  5918 ;; Return value:  Size  Location     Type
  5919 ;;		None               void
  5920 ;; Registers used:
  5921 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5927 ;;      Params:         0       8       0       0
  5928 ;;      Locals:         0       4       0       0
  5929 ;;      Temps:          0       4       0       0
  5930 ;;      Totals:         0      16       0       0
  5931 ;;Total ram usage:       16 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:    3
  5934 ;; This function calls:
  5935 ;;		Nothing
  5936 ;; This function is called by:
  5937 ;;		_main
  5938 ;;		_send_data
  5939 ;;		_battery_measure
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text11
  5944  000DBA                     __ptext11:
  5945                           	opt stack 0
  5946  000DBA                     _CANsendMessage:
  5947                           	opt stack 26
  5948                           
  5949                           ;CANlib.h: 296: unsigned long tamp;
  5950                           ;CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;incstack = 0
  5954  000DBA  010F               	movlb	15	; () banked
  5955  000DBC  B740               	btfsc	64,3,b	;volatile
  5956  000DBE  D166               	goto	l367
  5957                           
  5958                           ; BSR set to: 15
  5959                           ;CANlib.h: 299: { TXB0DLC = dataLength;
  5960  000DC0  C0A7  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  5961                           
  5962                           ;CANlib.h: 300: if (0b01000000 & flags)
  5963  000DC4  0100               	movlb	0	; () banked
  5964  000DC6  ADA8               	btfss	CANsendMessage@flags& (0+255),6,b
  5965  000DC8  D003               	goto	l368
  5966                           
  5967                           ; BSR set to: 0
  5968                           ;CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  5969  000DCA  010F               	movlb	15	; () banked
  5970  000DCC  8D45               	bsf	69,6,b	;volatile
  5971  000DCE  D002               	goto	l369
  5972  000DD0                     l368:
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;CANlib.h: 302: else
  5976                           ;CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  5977  000DD0  010F               	movlb	15	; () banked
  5978  000DD2  9D45               	bcf	69,6,b	;volatile
  5979  000DD4                     l369:
  5980                           
  5981                           ; BSR set to: 15
  5982                           ;CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  5983  000DD4  0100               	movlb	0	; () banked
  5984  000DD6  A7A8               	btfss	CANsendMessage@flags& (0+255),3,b
  5985  000DD8  D087               	goto	l370
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;CANlib.h: 306: {
  5989                           ;CANlib.h: 308: tamp = identifier & 0x000000FF;
  5990  000DDA  0100               	movlb	0	; () banked
  5991  000DDC  51A1               	movf	CANsendMessage@identifier& (0+255),w,b
  5992  000DDE  0100               	movlb	0	; () banked
  5993  000DE0  6FAD               	movwf	CANsendMessage@tamp& (0+255),b
  5994  000DE2  0100               	movlb	0	; () banked
  5995  000DE4  6BAE               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5996  000DE6  0100               	movlb	0	; () banked
  5997  000DE8  6BAF               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5998  000DEA  0100               	movlb	0	; () banked
  5999  000DEC  6BB0               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  6003  000DEE  C0AD  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;CANlib.h: 311: tamp = identifier & 0x0000FF00;
  6007  000DF2  0E00               	movlw	0
  6008  000DF4  0100               	movlb	0	; () banked
  6009  000DF6  15A1               	andwf	CANsendMessage@identifier& (0+255),w,b
  6010  000DF8  0100               	movlb	0	; () banked
  6011  000DFA  6FAD               	movwf	CANsendMessage@tamp& (0+255),b
  6012  000DFC  0EFF               	movlw	255
  6013  000DFE  0100               	movlb	0	; () banked
  6014  000E00  15A2               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6015  000E02  0100               	movlb	0	; () banked
  6016  000E04  6FAE               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6017  000E06  0E00               	movlw	0
  6018  000E08  0100               	movlb	0	; () banked
  6019  000E0A  15A3               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6020  000E0C  0100               	movlb	0	; () banked
  6021  000E0E  6FAF               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6022  000E10  0E00               	movlw	0
  6023  000E12  0100               	movlb	0	; () banked
  6024  000E14  15A4               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6025  000E16  0100               	movlb	0	; () banked
  6026  000E18  6FB0               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;CANlib.h: 312: tamp = tamp >> 8;
  6030  000E1A  0100               	movlb	0	; () banked
  6031  000E1C  C0AD  F0A9         	movff	CANsendMessage@tamp,??_CANsendMessage
  6032  000E20  0100               	movlb	0	; () banked
  6033  000E22  C0AE  F0AA         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6034  000E26  0100               	movlb	0	; () banked
  6035  000E28  C0AF  F0AB         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6036  000E2C  0100               	movlb	0	; () banked
  6037  000E2E  C0B0  F0AC         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6038  000E32  C0AA  F0A9         	movff	??_CANsendMessage+1,??_CANsendMessage
  6039  000E36  C0AB  F0AA         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6040  000E3A  C0AC  F0AB         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6041  000E3E  0100               	movlb	0	; () banked
  6042  000E40  6BAC               	clrf	(??_CANsendMessage+3)& (0+255),b
  6043  000E42  C0A9  F0AD         	movff	??_CANsendMessage,CANsendMessage@tamp
  6044  000E46  C0AA  F0AE         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6045  000E4A  C0AB  F0AF         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6046  000E4E  C0AC  F0B0         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  6050  000E52  C0AD  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;CANlib.h: 315: TXB0SIDL = 0x00;
  6054  000E56  0E00               	movlw	0
  6055  000E58  010F               	movlb	15	; () banked
  6056  000E5A  6F42               	movwf	66,b	;volatile
  6057                           
  6058                           ; BSR set to: 15
  6059                           ;CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  6060  000E5C  010F               	movlb	15	; () banked
  6061  000E5E  8742               	bsf	66,3,b	;volatile
  6062                           
  6063                           ; BSR set to: 15
  6064                           ;CANlib.h: 318: if (identifier & 0x00010000)
  6065  000E60  0100               	movlb	0	; () banked
  6066  000E62  A1A3               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6067  000E64  D002               	goto	l371
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  6071  000E66  010F               	movlb	15	; () banked
  6072  000E68  8142               	bsf	66,0,b	;volatile
  6073  000E6A                     l371:
  6074                           
  6075                           ;CANlib.h: 320: if (identifier & 0x00020000)
  6076  000E6A  0100               	movlb	0	; () banked
  6077  000E6C  A3A3               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6078  000E6E  D002               	goto	l372
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  6082  000E70  010F               	movlb	15	; () banked
  6083  000E72  8342               	bsf	66,1,b	;volatile
  6084  000E74                     l372:
  6085                           
  6086                           ;CANlib.h: 322: if (identifier & 0x00040000)
  6087  000E74  0100               	movlb	0	; () banked
  6088  000E76  A5A3               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6089  000E78  D002               	goto	l373
  6090                           
  6091                           ; BSR set to: 0
  6092                           ;CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  6093  000E7A  010F               	movlb	15	; () banked
  6094  000E7C  8B42               	bsf	66,5,b	;volatile
  6095  000E7E                     l373:
  6096                           
  6097                           ;CANlib.h: 324: if (identifier & 0x00080000)
  6098  000E7E  0100               	movlb	0	; () banked
  6099  000E80  A7A3               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6100  000E82  D002               	goto	l374
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  6104  000E84  010F               	movlb	15	; () banked
  6105  000E86  8D42               	bsf	66,6,b	;volatile
  6106  000E88                     l374:
  6107                           
  6108                           ;CANlib.h: 326: if (identifier & 0x00100000)
  6109  000E88  0100               	movlb	0	; () banked
  6110  000E8A  A9A3               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6111  000E8C  D002               	goto	l4439
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  6115  000E8E  010F               	movlb	15	; () banked
  6116  000E90  8F42               	bsf	66,7,b	;volatile
  6117  000E92                     l4439:
  6118                           
  6119                           ;CANlib.h: 329: tamp = (identifier >> 21);
  6120  000E92  0100               	movlb	0	; () banked
  6121  000E94  C0A1  F0A9         	movff	CANsendMessage@identifier,??_CANsendMessage
  6122  000E98  0100               	movlb	0	; () banked
  6123  000E9A  C0A2  F0AA         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6124  000E9E  0100               	movlb	0	; () banked
  6125  000EA0  C0A3  F0AB         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6126  000EA4  0100               	movlb	0	; () banked
  6127  000EA6  C0A4  F0AC         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6128  000EAA  0E16               	movlw	22
  6129  000EAC  D006               	goto	u5740
  6130  000EAE                     u5745:
  6131  000EAE  0100               	movlb	0	; () banked
  6132  000EB0  90D8               	bcf	status,0,c
  6133  000EB2  33AC               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6134  000EB4  33AB               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6135  000EB6  33AA               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6136  000EB8  33A9               	rrcf	??_CANsendMessage& (0+255),f,b
  6137  000EBA                     u5740:
  6138  000EBA  2EE8               	decfsz	wreg,f,c
  6139  000EBC  D7F8               	goto	u5745
  6140  000EBE  C0A9  F0AD         	movff	??_CANsendMessage,CANsendMessage@tamp
  6141  000EC2  C0AA  F0AE         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6142  000EC6  C0AB  F0AF         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6143  000ECA  C0AC  F0B0         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6144                           
  6145                           ; BSR set to: 0
  6146                           ;CANlib.h: 330: tamp = tamp & 0x000000FF;
  6147  000ECE  0100               	movlb	0	; () banked
  6148  000ED0  51AD               	movf	CANsendMessage@tamp& (0+255),w,b
  6149  000ED2  0100               	movlb	0	; () banked
  6150  000ED4  6FAD               	movwf	CANsendMessage@tamp& (0+255),b
  6151  000ED6  0100               	movlb	0	; () banked
  6152  000ED8  6BAE               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6153  000EDA  0100               	movlb	0	; () banked
  6154  000EDC  6BAF               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6155  000EDE  0100               	movlb	0	; () banked
  6156  000EE0  6BB0               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6157                           
  6158                           ; BSR set to: 0
  6159                           ;CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  6160  000EE2  C0AD  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  6161                           
  6162                           ;CANlib.h: 332: }
  6163  000EE6  D064               	goto	l4459
  6164  000EE8                     l370:
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;CANlib.h: 334: else
  6168                           ;CANlib.h: 336: {
  6169                           ;CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  6170  000EE8  010F               	movlb	15	; () banked
  6171  000EEA  9742               	bcf	66,3,b	;volatile
  6172                           
  6173                           ; BSR set to: 15
  6174                           ;CANlib.h: 339: tamp = (identifier >> 3);
  6175  000EEC  0100               	movlb	0	; () banked
  6176  000EEE  C0A1  F0A9         	movff	CANsendMessage@identifier,??_CANsendMessage
  6177  000EF2  0100               	movlb	0	; () banked
  6178  000EF4  C0A2  F0AA         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6179  000EF8  0100               	movlb	0	; () banked
  6180  000EFA  C0A3  F0AB         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6181  000EFE  0100               	movlb	0	; () banked
  6182  000F00  C0A4  F0AC         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6183  000F04  0E04               	movlw	4
  6184  000F06  D006               	goto	u5750
  6185  000F08                     u5755:
  6186  000F08  0100               	movlb	0	; () banked
  6187  000F0A  90D8               	bcf	status,0,c
  6188  000F0C  33AC               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6189  000F0E  33AB               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6190  000F10  33AA               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6191  000F12  33A9               	rrcf	??_CANsendMessage& (0+255),f,b
  6192  000F14                     u5750:
  6193  000F14  2EE8               	decfsz	wreg,f,c
  6194  000F16  D7F8               	goto	u5755
  6195  000F18  C0A9  F0AD         	movff	??_CANsendMessage,CANsendMessage@tamp
  6196  000F1C  C0AA  F0AE         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6197  000F20  C0AB  F0AF         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6198  000F24  C0AC  F0B0         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6199                           
  6200                           ; BSR set to: 0
  6201                           ;CANlib.h: 340: tamp = tamp & 0x000000FF;
  6202  000F28  0100               	movlb	0	; () banked
  6203  000F2A  51AD               	movf	CANsendMessage@tamp& (0+255),w,b
  6204  000F2C  0100               	movlb	0	; () banked
  6205  000F2E  6FAD               	movwf	CANsendMessage@tamp& (0+255),b
  6206  000F30  0100               	movlb	0	; () banked
  6207  000F32  6BAE               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6208  000F34  0100               	movlb	0	; () banked
  6209  000F36  6BAF               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6210  000F38  0100               	movlb	0	; () banked
  6211  000F3A  6BB0               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  6215  000F3C  C0AD  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  6216                           
  6217                           ; BSR set to: 0
  6218                           ;CANlib.h: 343: tamp = identifier & 0x00000007;
  6219  000F40  0E07               	movlw	7
  6220  000F42  0100               	movlb	0	; () banked
  6221  000F44  15A1               	andwf	CANsendMessage@identifier& (0+255),w,b
  6222  000F46  0100               	movlb	0	; () banked
  6223  000F48  6FAD               	movwf	CANsendMessage@tamp& (0+255),b
  6224  000F4A  0E00               	movlw	0
  6225  000F4C  0100               	movlb	0	; () banked
  6226  000F4E  15A2               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6227  000F50  0100               	movlb	0	; () banked
  6228  000F52  6FAE               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6229  000F54  0E00               	movlw	0
  6230  000F56  0100               	movlb	0	; () banked
  6231  000F58  15A3               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6232  000F5A  0100               	movlb	0	; () banked
  6233  000F5C  6FAF               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6234  000F5E  0E00               	movlw	0
  6235  000F60  0100               	movlb	0	; () banked
  6236  000F62  15A4               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6237  000F64  0100               	movlb	0	; () banked
  6238  000F66  6FB0               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6239                           
  6240                           ; BSR set to: 0
  6241                           ;CANlib.h: 344: tamp = tamp << 5;
  6242  000F68  0100               	movlb	0	; () banked
  6243  000F6A  C0AD  F0A9         	movff	CANsendMessage@tamp,??_CANsendMessage
  6244  000F6E  0100               	movlb	0	; () banked
  6245  000F70  C0AE  F0AA         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6246  000F74  0100               	movlb	0	; () banked
  6247  000F76  C0AF  F0AB         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6248  000F7A  0100               	movlb	0	; () banked
  6249  000F7C  C0B0  F0AC         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6250  000F80  0E05               	movlw	5
  6251  000F82                     u5765:
  6252  000F82  90D8               	bcf	status,0,c
  6253  000F84  0100               	movlb	0	; () banked
  6254  000F86  37A9               	rlcf	??_CANsendMessage& (0+255),f,b
  6255  000F88  37AA               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6256  000F8A  37AB               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6257  000F8C  37AC               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6258  000F8E  2EE8               	decfsz	wreg,f,c
  6259  000F90  D7F8               	goto	u5765
  6260  000F92  C0A9  F0AD         	movff	??_CANsendMessage,CANsendMessage@tamp
  6261  000F96  C0AA  F0AE         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6262  000F9A  C0AB  F0AF         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6263  000F9E  C0AC  F0B0         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  6267  000FA2  010F               	movlb	15	; () banked
  6268  000FA4  5142               	movf	66,w,b	;volatile
  6269  000FA6  0B1F               	andlw	31
  6270  000FA8  010F               	movlb	15	; () banked
  6271  000FAA  6F42               	movwf	66,b	;volatile
  6272                           
  6273                           ; BSR set to: 15
  6274                           ;CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  6275  000FAC  C0AD  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  6276  000FB0                     l4459:
  6277                           
  6278                           ;CANlib.h: 347: }
  6279                           ;CANlib.h: 349: if (0b00000001 & flags)
  6280  000FB0  0100               	movlb	0	; () banked
  6281  000FB2  A1A8               	btfss	CANsendMessage@flags& (0+255),0,b
  6282  000FB4  D003               	goto	l377
  6283                           
  6284                           ; BSR set to: 0
  6285                           ;CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  6286  000FB6  010F               	movlb	15	; () banked
  6287  000FB8  8140               	bsf	64,0,b	;volatile
  6288  000FBA  D002               	goto	l378
  6289  000FBC                     l377:
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;CANlib.h: 351: else
  6293                           ;CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  6294  000FBC  010F               	movlb	15	; () banked
  6295  000FBE  9140               	bcf	64,0,b	;volatile
  6296  000FC0                     l378:
  6297                           
  6298                           ; BSR set to: 15
  6299                           ;CANlib.h: 353: if (0b00000010 & flags)
  6300  000FC0  0100               	movlb	0	; () banked
  6301  000FC2  A3A8               	btfss	CANsendMessage@flags& (0+255),1,b
  6302  000FC4  D003               	goto	l379
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  6306  000FC6  010F               	movlb	15	; () banked
  6307  000FC8  8340               	bsf	64,1,b	;volatile
  6308  000FCA  D002               	goto	l4465
  6309  000FCC                     l379:
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;CANlib.h: 355: else
  6313                           ;CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  6314  000FCC  010F               	movlb	15	; () banked
  6315  000FCE  9340               	bcf	64,1,b	;volatile
  6316  000FD0                     l4465:
  6317                           
  6318                           ; BSR set to: 15
  6319                           ;CANlib.h: 358: TXB0D0 = data[0];
  6320  000FD0  C0A5  FFD9         	movff	CANsendMessage@data,fsr2l
  6321  000FD4  C0A6  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6322  000FD8  50DF               	movf	indf2,w,c
  6323  000FDA  010F               	movlb	15	; () banked
  6324  000FDC  6F46               	movwf	70,b	;volatile
  6325                           
  6326                           ; BSR set to: 15
  6327                           ;CANlib.h: 359: TXB0D1 = data[1];
  6328  000FDE  0100               	movlb	0	; () banked
  6329  000FE0  EE20 F001          	lfsr	2,1
  6330  000FE4  0100               	movlb	0	; () banked
  6331  000FE6  51A5               	movf	CANsendMessage@data& (0+255),w,b
  6332  000FE8  26D9               	addwf	fsr2l,f,c
  6333  000FEA  0100               	movlb	0	; () banked
  6334  000FEC  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6335  000FEE  22DA               	addwfc	fsr2h,f,c
  6336  000FF0  50DF               	movf	indf2,w,c
  6337  000FF2  010F               	movlb	15	; () banked
  6338  000FF4  6F47               	movwf	71,b	;volatile
  6339                           
  6340                           ; BSR set to: 15
  6341                           ;CANlib.h: 360: TXB0D2 = data[2];
  6342  000FF6  0100               	movlb	0	; () banked
  6343  000FF8  EE20 F002          	lfsr	2,2
  6344  000FFC  0100               	movlb	0	; () banked
  6345  000FFE  51A5               	movf	CANsendMessage@data& (0+255),w,b
  6346  001000  26D9               	addwf	fsr2l,f,c
  6347  001002  0100               	movlb	0	; () banked
  6348  001004  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6349  001006  22DA               	addwfc	fsr2h,f,c
  6350  001008  50DF               	movf	indf2,w,c
  6351  00100A  010F               	movlb	15	; () banked
  6352  00100C  6F48               	movwf	72,b	;volatile
  6353                           
  6354                           ; BSR set to: 15
  6355                           ;CANlib.h: 361: TXB0D3 = data[3];
  6356  00100E  0100               	movlb	0	; () banked
  6357  001010  EE20 F003          	lfsr	2,3
  6358  001014  0100               	movlb	0	; () banked
  6359  001016  51A5               	movf	CANsendMessage@data& (0+255),w,b
  6360  001018  26D9               	addwf	fsr2l,f,c
  6361  00101A  0100               	movlb	0	; () banked
  6362  00101C  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6363  00101E  22DA               	addwfc	fsr2h,f,c
  6364  001020  50DF               	movf	indf2,w,c
  6365  001022  010F               	movlb	15	; () banked
  6366  001024  6F49               	movwf	73,b	;volatile
  6367                           
  6368                           ; BSR set to: 15
  6369                           ;CANlib.h: 362: TXB0D4 = data[4];
  6370  001026  0100               	movlb	0	; () banked
  6371  001028  EE20 F004          	lfsr	2,4
  6372  00102C  0100               	movlb	0	; () banked
  6373  00102E  51A5               	movf	CANsendMessage@data& (0+255),w,b
  6374  001030  26D9               	addwf	fsr2l,f,c
  6375  001032  0100               	movlb	0	; () banked
  6376  001034  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6377  001036  22DA               	addwfc	fsr2h,f,c
  6378  001038  50DF               	movf	indf2,w,c
  6379  00103A  010F               	movlb	15	; () banked
  6380  00103C  6F4A               	movwf	74,b	;volatile
  6381                           
  6382                           ; BSR set to: 15
  6383                           ;CANlib.h: 363: TXB0D5 = data[5];
  6384  00103E  0100               	movlb	0	; () banked
  6385  001040  EE20 F005          	lfsr	2,5
  6386  001044  0100               	movlb	0	; () banked
  6387  001046  51A5               	movf	CANsendMessage@data& (0+255),w,b
  6388  001048  26D9               	addwf	fsr2l,f,c
  6389  00104A  0100               	movlb	0	; () banked
  6390  00104C  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6391  00104E  22DA               	addwfc	fsr2h,f,c
  6392  001050  50DF               	movf	indf2,w,c
  6393  001052  010F               	movlb	15	; () banked
  6394  001054  6F4B               	movwf	75,b	;volatile
  6395                           
  6396                           ; BSR set to: 15
  6397                           ;CANlib.h: 364: TXB0D6 = data[6];
  6398  001056  0100               	movlb	0	; () banked
  6399  001058  EE20 F006          	lfsr	2,6
  6400  00105C  0100               	movlb	0	; () banked
  6401  00105E  51A5               	movf	CANsendMessage@data& (0+255),w,b
  6402  001060  26D9               	addwf	fsr2l,f,c
  6403  001062  0100               	movlb	0	; () banked
  6404  001064  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6405  001066  22DA               	addwfc	fsr2h,f,c
  6406  001068  50DF               	movf	indf2,w,c
  6407  00106A  010F               	movlb	15	; () banked
  6408  00106C  6F4C               	movwf	76,b	;volatile
  6409                           
  6410                           ; BSR set to: 15
  6411                           ;CANlib.h: 365: TXB0D7 = data[7];
  6412  00106E  0100               	movlb	0	; () banked
  6413  001070  EE20 F007          	lfsr	2,7
  6414  001074  0100               	movlb	0	; () banked
  6415  001076  51A5               	movf	CANsendMessage@data& (0+255),w,b
  6416  001078  26D9               	addwf	fsr2l,f,c
  6417  00107A  0100               	movlb	0	; () banked
  6418  00107C  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6419  00107E  22DA               	addwfc	fsr2h,f,c
  6420  001080  50DF               	movf	indf2,w,c
  6421  001082  010F               	movlb	15	; () banked
  6422  001084  6F4D               	movwf	77,b	;volatile
  6423                           
  6424                           ; BSR set to: 15
  6425                           ;CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  6426  001086  010F               	movlb	15	; () banked
  6427  001088  8740               	bsf	64,3,b	;volatile
  6428  00108A  D2D1               	goto	l381
  6429  00108C                     l367:
  6430                           
  6431                           ; BSR set to: 15
  6432                           ;CANlib.h: 369: }
  6433                           ;CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  6434  00108C  010F               	movlb	15	; () banked
  6435  00108E  B730               	btfsc	48,3,b	;volatile
  6436  001090  D166               	goto	l382
  6437                           
  6438                           ; BSR set to: 15
  6439                           ;CANlib.h: 374: { TXB1DLC = dataLength;
  6440  001092  C0A7  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  6441                           
  6442                           ;CANlib.h: 376: if (0b01000000 & flags)
  6443  001096  0100               	movlb	0	; () banked
  6444  001098  ADA8               	btfss	CANsendMessage@flags& (0+255),6,b
  6445  00109A  D003               	goto	l383
  6446                           
  6447                           ; BSR set to: 0
  6448                           ;CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  6449  00109C  010F               	movlb	15	; () banked
  6450  00109E  8D35               	bsf	53,6,b	;volatile
  6451  0010A0  D002               	goto	l384
  6452  0010A2                     l383:
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;CANlib.h: 378: else
  6456                           ;CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  6457  0010A2  010F               	movlb	15	; () banked
  6458  0010A4  9D35               	bcf	53,6,b	;volatile
  6459  0010A6                     l384:
  6460                           
  6461                           ; BSR set to: 15
  6462                           ;CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  6463  0010A6  0100               	movlb	0	; () banked
  6464  0010A8  A7A8               	btfss	CANsendMessage@flags& (0+255),3,b
  6465  0010AA  D087               	goto	l385
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;CANlib.h: 382: {
  6469                           ;CANlib.h: 383: tamp = identifier & 0x000000FF;
  6470  0010AC  0100               	movlb	0	; () banked
  6471  0010AE  51A1               	movf	CANsendMessage@identifier& (0+255),w,b
  6472  0010B0  0100               	movlb	0	; () banked
  6473  0010B2  6FAD               	movwf	CANsendMessage@tamp& (0+255),b
  6474  0010B4  0100               	movlb	0	; () banked
  6475  0010B6  6BAE               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6476  0010B8  0100               	movlb	0	; () banked
  6477  0010BA  6BAF               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6478  0010BC  0100               	movlb	0	; () banked
  6479  0010BE  6BB0               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  6483  0010C0  C0AD  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;CANlib.h: 386: tamp = identifier & 0x0000FF00;
  6487  0010C4  0E00               	movlw	0
  6488  0010C6  0100               	movlb	0	; () banked
  6489  0010C8  15A1               	andwf	CANsendMessage@identifier& (0+255),w,b
  6490  0010CA  0100               	movlb	0	; () banked
  6491  0010CC  6FAD               	movwf	CANsendMessage@tamp& (0+255),b
  6492  0010CE  0EFF               	movlw	255
  6493  0010D0  0100               	movlb	0	; () banked
  6494  0010D2  15A2               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6495  0010D4  0100               	movlb	0	; () banked
  6496  0010D6  6FAE               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6497  0010D8  0E00               	movlw	0
  6498  0010DA  0100               	movlb	0	; () banked
  6499  0010DC  15A3               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6500  0010DE  0100               	movlb	0	; () banked
  6501  0010E0  6FAF               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6502  0010E2  0E00               	movlw	0
  6503  0010E4  0100               	movlb	0	; () banked
  6504  0010E6  15A4               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6505  0010E8  0100               	movlb	0	; () banked
  6506  0010EA  6FB0               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6507                           
  6508                           ; BSR set to: 0
  6509                           ;CANlib.h: 387: tamp = tamp >> 8;
  6510  0010EC  0100               	movlb	0	; () banked
  6511  0010EE  C0AD  F0A9         	movff	CANsendMessage@tamp,??_CANsendMessage
  6512  0010F2  0100               	movlb	0	; () banked
  6513  0010F4  C0AE  F0AA         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6514  0010F8  0100               	movlb	0	; () banked
  6515  0010FA  C0AF  F0AB         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6516  0010FE  0100               	movlb	0	; () banked
  6517  001100  C0B0  F0AC         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6518  001104  C0AA  F0A9         	movff	??_CANsendMessage+1,??_CANsendMessage
  6519  001108  C0AB  F0AA         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6520  00110C  C0AC  F0AB         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6521  001110  0100               	movlb	0	; () banked
  6522  001112  6BAC               	clrf	(??_CANsendMessage+3)& (0+255),b
  6523  001114  C0A9  F0AD         	movff	??_CANsendMessage,CANsendMessage@tamp
  6524  001118  C0AA  F0AE         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6525  00111C  C0AB  F0AF         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6526  001120  C0AC  F0B0         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6527                           
  6528                           ; BSR set to: 0
  6529                           ;CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  6530  001124  C0AD  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;CANlib.h: 390: TXB1SIDL = 0x00;
  6534  001128  0E00               	movlw	0
  6535  00112A  010F               	movlb	15	; () banked
  6536  00112C  6F32               	movwf	50,b	;volatile
  6537                           
  6538                           ; BSR set to: 15
  6539                           ;CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  6540  00112E  010F               	movlb	15	; () banked
  6541  001130  8732               	bsf	50,3,b	;volatile
  6542                           
  6543                           ; BSR set to: 15
  6544                           ;CANlib.h: 393: if (identifier & 0x00010000)
  6545  001132  0100               	movlb	0	; () banked
  6546  001134  A1A3               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6547  001136  D002               	goto	l386
  6548                           
  6549                           ; BSR set to: 0
  6550                           ;CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  6551  001138  010F               	movlb	15	; () banked
  6552  00113A  8132               	bsf	50,0,b	;volatile
  6553  00113C                     l386:
  6554                           
  6555                           ;CANlib.h: 395: if (identifier & 0x00020000)
  6556  00113C  0100               	movlb	0	; () banked
  6557  00113E  A3A3               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6558  001140  D002               	goto	l387
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  6562  001142  010F               	movlb	15	; () banked
  6563  001144  8332               	bsf	50,1,b	;volatile
  6564  001146                     l387:
  6565                           
  6566                           ;CANlib.h: 397: if (identifier & 0x00040000)
  6567  001146  0100               	movlb	0	; () banked
  6568  001148  A5A3               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6569  00114A  D002               	goto	l388
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  6573  00114C  010F               	movlb	15	; () banked
  6574  00114E  8B32               	bsf	50,5,b	;volatile
  6575  001150                     l388:
  6576                           
  6577                           ;CANlib.h: 399: if (identifier & 0x00080000)
  6578  001150  0100               	movlb	0	; () banked
  6579  001152  A7A3               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6580  001154  D002               	goto	l389
  6581                           
  6582                           ; BSR set to: 0
  6583                           ;CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  6584  001156  010F               	movlb	15	; () banked
  6585  001158  8D32               	bsf	50,6,b	;volatile
  6586  00115A                     l389:
  6587                           
  6588                           ;CANlib.h: 401: if (identifier & 0x00100000)
  6589  00115A  0100               	movlb	0	; () banked
  6590  00115C  A9A3               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6591  00115E  D002               	goto	l4515
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  6595  001160  010F               	movlb	15	; () banked
  6596  001162  8F32               	bsf	50,7,b	;volatile
  6597  001164                     l4515:
  6598                           
  6599                           ;CANlib.h: 404: tamp = (identifier >> 21);
  6600  001164  0100               	movlb	0	; () banked
  6601  001166  C0A1  F0A9         	movff	CANsendMessage@identifier,??_CANsendMessage
  6602  00116A  0100               	movlb	0	; () banked
  6603  00116C  C0A2  F0AA         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6604  001170  0100               	movlb	0	; () banked
  6605  001172  C0A3  F0AB         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6606  001176  0100               	movlb	0	; () banked
  6607  001178  C0A4  F0AC         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6608  00117C  0E16               	movlw	22
  6609  00117E  D006               	goto	u5870
  6610  001180                     u5875:
  6611  001180  0100               	movlb	0	; () banked
  6612  001182  90D8               	bcf	status,0,c
  6613  001184  33AC               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6614  001186  33AB               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6615  001188  33AA               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6616  00118A  33A9               	rrcf	??_CANsendMessage& (0+255),f,b
  6617  00118C                     u5870:
  6618  00118C  2EE8               	decfsz	wreg,f,c
  6619  00118E  D7F8               	goto	u5875
  6620  001190  C0A9  F0AD         	movff	??_CANsendMessage,CANsendMessage@tamp
  6621  001194  C0AA  F0AE         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6622  001198  C0AB  F0AF         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6623  00119C  C0AC  F0B0         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6624                           
  6625                           ; BSR set to: 0
  6626                           ;CANlib.h: 405: tamp = tamp & 0x000000FF;
  6627  0011A0  0100               	movlb	0	; () banked
  6628  0011A2  51AD               	movf	CANsendMessage@tamp& (0+255),w,b
  6629  0011A4  0100               	movlb	0	; () banked
  6630  0011A6  6FAD               	movwf	CANsendMessage@tamp& (0+255),b
  6631  0011A8  0100               	movlb	0	; () banked
  6632  0011AA  6BAE               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6633  0011AC  0100               	movlb	0	; () banked
  6634  0011AE  6BAF               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6635  0011B0  0100               	movlb	0	; () banked
  6636  0011B2  6BB0               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  6640  0011B4  C0AD  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6641                           
  6642                           ;CANlib.h: 407: }
  6643  0011B8  D064               	goto	l4535
  6644  0011BA                     l385:
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;CANlib.h: 409: else
  6648                           ;CANlib.h: 411: {
  6649                           ;CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  6650  0011BA  010F               	movlb	15	; () banked
  6651  0011BC  9732               	bcf	50,3,b	;volatile
  6652                           
  6653                           ; BSR set to: 15
  6654                           ;CANlib.h: 414: tamp = (identifier >> 3);
  6655  0011BE  0100               	movlb	0	; () banked
  6656  0011C0  C0A1  F0A9         	movff	CANsendMessage@identifier,??_CANsendMessage
  6657  0011C4  0100               	movlb	0	; () banked
  6658  0011C6  C0A2  F0AA         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6659  0011CA  0100               	movlb	0	; () banked
  6660  0011CC  C0A3  F0AB         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6661  0011D0  0100               	movlb	0	; () banked
  6662  0011D2  C0A4  F0AC         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6663  0011D6  0E04               	movlw	4
  6664  0011D8  D006               	goto	u5880
  6665  0011DA                     u5885:
  6666  0011DA  0100               	movlb	0	; () banked
  6667  0011DC  90D8               	bcf	status,0,c
  6668  0011DE  33AC               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6669  0011E0  33AB               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6670  0011E2  33AA               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6671  0011E4  33A9               	rrcf	??_CANsendMessage& (0+255),f,b
  6672  0011E6                     u5880:
  6673  0011E6  2EE8               	decfsz	wreg,f,c
  6674  0011E8  D7F8               	goto	u5885
  6675  0011EA  C0A9  F0AD         	movff	??_CANsendMessage,CANsendMessage@tamp
  6676  0011EE  C0AA  F0AE         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6677  0011F2  C0AB  F0AF         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6678  0011F6  C0AC  F0B0         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6679                           
  6680                           ; BSR set to: 0
  6681                           ;CANlib.h: 415: tamp = tamp & 0x000000FF;
  6682  0011FA  0100               	movlb	0	; () banked
  6683  0011FC  51AD               	movf	CANsendMessage@tamp& (0+255),w,b
  6684  0011FE  0100               	movlb	0	; () banked
  6685  001200  6FAD               	movwf	CANsendMessage@tamp& (0+255),b
  6686  001202  0100               	movlb	0	; () banked
  6687  001204  6BAE               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6688  001206  0100               	movlb	0	; () banked
  6689  001208  6BAF               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6690  00120A  0100               	movlb	0	; () banked
  6691  00120C  6BB0               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  6695  00120E  C0AD  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6696                           
  6697                           ; BSR set to: 0
  6698                           ;CANlib.h: 418: tamp = identifier & 0x00000007;
  6699  001212  0E07               	movlw	7
  6700  001214  0100               	movlb	0	; () banked
  6701  001216  15A1               	andwf	CANsendMessage@identifier& (0+255),w,b
  6702  001218  0100               	movlb	0	; () banked
  6703  00121A  6FAD               	movwf	CANsendMessage@tamp& (0+255),b
  6704  00121C  0E00               	movlw	0
  6705  00121E  0100               	movlb	0	; () banked
  6706  001220  15A2               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6707  001222  0100               	movlb	0	; () banked
  6708  001224  6FAE               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6709  001226  0E00               	movlw	0
  6710  001228  0100               	movlb	0	; () banked
  6711  00122A  15A3               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6712  00122C  0100               	movlb	0	; () banked
  6713  00122E  6FAF               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6714  001230  0E00               	movlw	0
  6715  001232  0100               	movlb	0	; () banked
  6716  001234  15A4               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6717  001236  0100               	movlb	0	; () banked
  6718  001238  6FB0               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;CANlib.h: 419: tamp = tamp << 5;
  6722  00123A  0100               	movlb	0	; () banked
  6723  00123C  C0AD  F0A9         	movff	CANsendMessage@tamp,??_CANsendMessage
  6724  001240  0100               	movlb	0	; () banked
  6725  001242  C0AE  F0AA         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6726  001246  0100               	movlb	0	; () banked
  6727  001248  C0AF  F0AB         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6728  00124C  0100               	movlb	0	; () banked
  6729  00124E  C0B0  F0AC         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6730  001252  0E05               	movlw	5
  6731  001254                     u5895:
  6732  001254  90D8               	bcf	status,0,c
  6733  001256  0100               	movlb	0	; () banked
  6734  001258  37A9               	rlcf	??_CANsendMessage& (0+255),f,b
  6735  00125A  37AA               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6736  00125C  37AB               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6737  00125E  37AC               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6738  001260  2EE8               	decfsz	wreg,f,c
  6739  001262  D7F8               	goto	u5895
  6740  001264  C0A9  F0AD         	movff	??_CANsendMessage,CANsendMessage@tamp
  6741  001268  C0AA  F0AE         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6742  00126C  C0AB  F0AF         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6743  001270  C0AC  F0B0         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6744                           
  6745                           ; BSR set to: 0
  6746                           ;CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  6747  001274  010F               	movlb	15	; () banked
  6748  001276  5132               	movf	50,w,b	;volatile
  6749  001278  0B1F               	andlw	31
  6750  00127A  010F               	movlb	15	; () banked
  6751  00127C  6F32               	movwf	50,b	;volatile
  6752                           
  6753                           ; BSR set to: 15
  6754                           ;CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  6755  00127E  C0AD  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6756  001282                     l4535:
  6757                           
  6758                           ;CANlib.h: 422: }
  6759                           ;CANlib.h: 424: if (0b00000001 & flags)
  6760  001282  0100               	movlb	0	; () banked
  6761  001284  A1A8               	btfss	CANsendMessage@flags& (0+255),0,b
  6762  001286  D003               	goto	l392
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  6766  001288  010F               	movlb	15	; () banked
  6767  00128A  8130               	bsf	48,0,b	;volatile
  6768  00128C  D002               	goto	l393
  6769  00128E                     l392:
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;CANlib.h: 426: else
  6773                           ;CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  6774  00128E  010F               	movlb	15	; () banked
  6775  001290  9130               	bcf	48,0,b	;volatile
  6776  001292                     l393:
  6777                           
  6778                           ; BSR set to: 15
  6779                           ;CANlib.h: 428: if (0b00000010 & flags)
  6780  001292  0100               	movlb	0	; () banked
  6781  001294  A3A8               	btfss	CANsendMessage@flags& (0+255),1,b
  6782  001296  D003               	goto	l394
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  6786  001298  010F               	movlb	15	; () banked
  6787  00129A  8330               	bsf	48,1,b	;volatile
  6788  00129C  D002               	goto	l4541
  6789  00129E                     l394:
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;CANlib.h: 430: else
  6793                           ;CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  6794  00129E  010F               	movlb	15	; () banked
  6795  0012A0  9330               	bcf	48,1,b	;volatile
  6796  0012A2                     l4541:
  6797                           
  6798                           ; BSR set to: 15
  6799                           ;CANlib.h: 433: TXB1D0 = data[0];
  6800  0012A2  C0A5  FFD9         	movff	CANsendMessage@data,fsr2l
  6801  0012A6  C0A6  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6802  0012AA  50DF               	movf	indf2,w,c
  6803  0012AC  010F               	movlb	15	; () banked
  6804  0012AE  6F36               	movwf	54,b	;volatile
  6805                           
  6806                           ; BSR set to: 15
  6807                           ;CANlib.h: 434: TXB1D1 = data[1];
  6808  0012B0  0100               	movlb	0	; () banked
  6809  0012B2  EE20 F001          	lfsr	2,1
  6810  0012B6  0100               	movlb	0	; () banked
  6811  0012B8  51A5               	movf	CANsendMessage@data& (0+255),w,b
  6812  0012BA  26D9               	addwf	fsr2l,f,c
  6813  0012BC  0100               	movlb	0	; () banked
  6814  0012BE  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6815  0012C0  22DA               	addwfc	fsr2h,f,c
  6816  0012C2  50DF               	movf	indf2,w,c
  6817  0012C4  010F               	movlb	15	; () banked
  6818  0012C6  6F37               	movwf	55,b	;volatile
  6819                           
  6820                           ; BSR set to: 15
  6821                           ;CANlib.h: 435: TXB1D2 = data[2];
  6822  0012C8  0100               	movlb	0	; () banked
  6823  0012CA  EE20 F002          	lfsr	2,2
  6824  0012CE  0100               	movlb	0	; () banked
  6825  0012D0  51A5               	movf	CANsendMessage@data& (0+255),w,b
  6826  0012D2  26D9               	addwf	fsr2l,f,c
  6827  0012D4  0100               	movlb	0	; () banked
  6828  0012D6  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6829  0012D8  22DA               	addwfc	fsr2h,f,c
  6830  0012DA  50DF               	movf	indf2,w,c
  6831  0012DC  010F               	movlb	15	; () banked
  6832  0012DE  6F38               	movwf	56,b	;volatile
  6833                           
  6834                           ; BSR set to: 15
  6835                           ;CANlib.h: 436: TXB1D3 = data[3];
  6836  0012E0  0100               	movlb	0	; () banked
  6837  0012E2  EE20 F003          	lfsr	2,3
  6838  0012E6  0100               	movlb	0	; () banked
  6839  0012E8  51A5               	movf	CANsendMessage@data& (0+255),w,b
  6840  0012EA  26D9               	addwf	fsr2l,f,c
  6841  0012EC  0100               	movlb	0	; () banked
  6842  0012EE  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6843  0012F0  22DA               	addwfc	fsr2h,f,c
  6844  0012F2  50DF               	movf	indf2,w,c
  6845  0012F4  010F               	movlb	15	; () banked
  6846  0012F6  6F39               	movwf	57,b	;volatile
  6847                           
  6848                           ; BSR set to: 15
  6849                           ;CANlib.h: 437: TXB1D4 = data[4];
  6850  0012F8  0100               	movlb	0	; () banked
  6851  0012FA  EE20 F004          	lfsr	2,4
  6852  0012FE  0100               	movlb	0	; () banked
  6853  001300  51A5               	movf	CANsendMessage@data& (0+255),w,b
  6854  001302  26D9               	addwf	fsr2l,f,c
  6855  001304  0100               	movlb	0	; () banked
  6856  001306  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6857  001308  22DA               	addwfc	fsr2h,f,c
  6858  00130A  50DF               	movf	indf2,w,c
  6859  00130C  010F               	movlb	15	; () banked
  6860  00130E  6F3A               	movwf	58,b	;volatile
  6861                           
  6862                           ; BSR set to: 15
  6863                           ;CANlib.h: 438: TXB1D5 = data[5];
  6864  001310  0100               	movlb	0	; () banked
  6865  001312  EE20 F005          	lfsr	2,5
  6866  001316  0100               	movlb	0	; () banked
  6867  001318  51A5               	movf	CANsendMessage@data& (0+255),w,b
  6868  00131A  26D9               	addwf	fsr2l,f,c
  6869  00131C  0100               	movlb	0	; () banked
  6870  00131E  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6871  001320  22DA               	addwfc	fsr2h,f,c
  6872  001322  50DF               	movf	indf2,w,c
  6873  001324  010F               	movlb	15	; () banked
  6874  001326  6F3B               	movwf	59,b	;volatile
  6875                           
  6876                           ; BSR set to: 15
  6877                           ;CANlib.h: 439: TXB1D6 = data[6];
  6878  001328  0100               	movlb	0	; () banked
  6879  00132A  EE20 F006          	lfsr	2,6
  6880  00132E  0100               	movlb	0	; () banked
  6881  001330  51A5               	movf	CANsendMessage@data& (0+255),w,b
  6882  001332  26D9               	addwf	fsr2l,f,c
  6883  001334  0100               	movlb	0	; () banked
  6884  001336  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6885  001338  22DA               	addwfc	fsr2h,f,c
  6886  00133A  50DF               	movf	indf2,w,c
  6887  00133C  010F               	movlb	15	; () banked
  6888  00133E  6F3C               	movwf	60,b	;volatile
  6889                           
  6890                           ; BSR set to: 15
  6891                           ;CANlib.h: 440: TXB1D7 = data[7];
  6892  001340  0100               	movlb	0	; () banked
  6893  001342  EE20 F007          	lfsr	2,7
  6894  001346  0100               	movlb	0	; () banked
  6895  001348  51A5               	movf	CANsendMessage@data& (0+255),w,b
  6896  00134A  26D9               	addwf	fsr2l,f,c
  6897  00134C  0100               	movlb	0	; () banked
  6898  00134E  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6899  001350  22DA               	addwfc	fsr2h,f,c
  6900  001352  50DF               	movf	indf2,w,c
  6901  001354  010F               	movlb	15	; () banked
  6902  001356  6F3D               	movwf	61,b	;volatile
  6903                           
  6904                           ; BSR set to: 15
  6905                           ;CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  6906  001358  010F               	movlb	15	; () banked
  6907  00135A  8730               	bsf	48,3,b	;volatile
  6908  00135C  D168               	goto	l381
  6909  00135E                     l382:
  6910                           
  6911                           ; BSR set to: 15
  6912                           ;CANlib.h: 445: }
  6913                           ;CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  6914  00135E  010F               	movlb	15	; () banked
  6915  001360  B720               	btfsc	32,3,b	;volatile
  6916  001362  D165               	goto	l381
  6917                           
  6918                           ; BSR set to: 15
  6919                           ;CANlib.h: 450: { TXB2DLC = dataLength;
  6920  001364  C0A7  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6921                           
  6922                           ;CANlib.h: 452: if (0b01000000 & flags)
  6923  001368  0100               	movlb	0	; () banked
  6924  00136A  ADA8               	btfss	CANsendMessage@flags& (0+255),6,b
  6925  00136C  D003               	goto	l397
  6926                           
  6927                           ; BSR set to: 0
  6928                           ;CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  6929  00136E  010F               	movlb	15	; () banked
  6930  001370  8D25               	bsf	37,6,b	;volatile
  6931  001372  D002               	goto	l398
  6932  001374                     l397:
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;CANlib.h: 454: else
  6936                           ;CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  6937  001374  010F               	movlb	15	; () banked
  6938  001376  9D25               	bcf	37,6,b	;volatile
  6939  001378                     l398:
  6940                           
  6941                           ; BSR set to: 15
  6942                           ;CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  6943  001378  0100               	movlb	0	; () banked
  6944  00137A  A7A8               	btfss	CANsendMessage@flags& (0+255),3,b
  6945  00137C  D087               	goto	l399
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;CANlib.h: 458: {
  6949                           ;CANlib.h: 459: tamp = identifier & 0x000000FF;
  6950  00137E  0100               	movlb	0	; () banked
  6951  001380  51A1               	movf	CANsendMessage@identifier& (0+255),w,b
  6952  001382  0100               	movlb	0	; () banked
  6953  001384  6FAD               	movwf	CANsendMessage@tamp& (0+255),b
  6954  001386  0100               	movlb	0	; () banked
  6955  001388  6BAE               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6956  00138A  0100               	movlb	0	; () banked
  6957  00138C  6BAF               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6958  00138E  0100               	movlb	0	; () banked
  6959  001390  6BB0               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6960                           
  6961                           ; BSR set to: 0
  6962                           ;CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  6963  001392  C0AD  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;CANlib.h: 462: tamp = identifier & 0x0000FF00;
  6967  001396  0E00               	movlw	0
  6968  001398  0100               	movlb	0	; () banked
  6969  00139A  15A1               	andwf	CANsendMessage@identifier& (0+255),w,b
  6970  00139C  0100               	movlb	0	; () banked
  6971  00139E  6FAD               	movwf	CANsendMessage@tamp& (0+255),b
  6972  0013A0  0EFF               	movlw	255
  6973  0013A2  0100               	movlb	0	; () banked
  6974  0013A4  15A2               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6975  0013A6  0100               	movlb	0	; () banked
  6976  0013A8  6FAE               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6977  0013AA  0E00               	movlw	0
  6978  0013AC  0100               	movlb	0	; () banked
  6979  0013AE  15A3               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6980  0013B0  0100               	movlb	0	; () banked
  6981  0013B2  6FAF               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6982  0013B4  0E00               	movlw	0
  6983  0013B6  0100               	movlb	0	; () banked
  6984  0013B8  15A4               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6985  0013BA  0100               	movlb	0	; () banked
  6986  0013BC  6FB0               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;CANlib.h: 463: tamp = tamp >> 8;
  6990  0013BE  0100               	movlb	0	; () banked
  6991  0013C0  C0AD  F0A9         	movff	CANsendMessage@tamp,??_CANsendMessage
  6992  0013C4  0100               	movlb	0	; () banked
  6993  0013C6  C0AE  F0AA         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6994  0013CA  0100               	movlb	0	; () banked
  6995  0013CC  C0AF  F0AB         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6996  0013D0  0100               	movlb	0	; () banked
  6997  0013D2  C0B0  F0AC         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6998  0013D6  C0AA  F0A9         	movff	??_CANsendMessage+1,??_CANsendMessage
  6999  0013DA  C0AB  F0AA         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  7000  0013DE  C0AC  F0AB         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  7001  0013E2  0100               	movlb	0	; () banked
  7002  0013E4  6BAC               	clrf	(??_CANsendMessage+3)& (0+255),b
  7003  0013E6  C0A9  F0AD         	movff	??_CANsendMessage,CANsendMessage@tamp
  7004  0013EA  C0AA  F0AE         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7005  0013EE  C0AB  F0AF         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7006  0013F2  C0AC  F0B0         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  7010  0013F6  C0AD  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;CANlib.h: 466: TXB2SIDL = 0x00;
  7014  0013FA  0E00               	movlw	0
  7015  0013FC  010F               	movlb	15	; () banked
  7016  0013FE  6F22               	movwf	34,b	;volatile
  7017                           
  7018                           ; BSR set to: 15
  7019                           ;CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  7020  001400  010F               	movlb	15	; () banked
  7021  001402  8722               	bsf	34,3,b	;volatile
  7022                           
  7023                           ; BSR set to: 15
  7024                           ;CANlib.h: 469: if (identifier & 0x00010000)
  7025  001404  0100               	movlb	0	; () banked
  7026  001406  A1A3               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  7027  001408  D002               	goto	l400
  7028                           
  7029                           ; BSR set to: 0
  7030                           ;CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  7031  00140A  010F               	movlb	15	; () banked
  7032  00140C  8122               	bsf	34,0,b	;volatile
  7033  00140E                     l400:
  7034                           
  7035                           ;CANlib.h: 471: if (identifier & 0x00020000)
  7036  00140E  0100               	movlb	0	; () banked
  7037  001410  A3A3               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  7038  001412  D002               	goto	l401
  7039                           
  7040                           ; BSR set to: 0
  7041                           ;CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  7042  001414  010F               	movlb	15	; () banked
  7043  001416  8322               	bsf	34,1,b	;volatile
  7044  001418                     l401:
  7045                           
  7046                           ;CANlib.h: 473: if (identifier & 0x00040000)
  7047  001418  0100               	movlb	0	; () banked
  7048  00141A  A5A3               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  7049  00141C  D002               	goto	l402
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  7053  00141E  010F               	movlb	15	; () banked
  7054  001420  8B22               	bsf	34,5,b	;volatile
  7055  001422                     l402:
  7056                           
  7057                           ;CANlib.h: 475: if (identifier & 0x00080000)
  7058  001422  0100               	movlb	0	; () banked
  7059  001424  A7A3               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  7060  001426  D002               	goto	l403
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  7064  001428  010F               	movlb	15	; () banked
  7065  00142A  8D22               	bsf	34,6,b	;volatile
  7066  00142C                     l403:
  7067                           
  7068                           ;CANlib.h: 477: if (identifier & 0x00100000)
  7069  00142C  0100               	movlb	0	; () banked
  7070  00142E  A9A3               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  7071  001430  D002               	goto	l4591
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  7075  001432  010F               	movlb	15	; () banked
  7076  001434  8F22               	bsf	34,7,b	;volatile
  7077  001436                     l4591:
  7078                           
  7079                           ;CANlib.h: 480: tamp = (identifier >> 21);
  7080  001436  0100               	movlb	0	; () banked
  7081  001438  C0A1  F0A9         	movff	CANsendMessage@identifier,??_CANsendMessage
  7082  00143C  0100               	movlb	0	; () banked
  7083  00143E  C0A2  F0AA         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7084  001442  0100               	movlb	0	; () banked
  7085  001444  C0A3  F0AB         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7086  001448  0100               	movlb	0	; () banked
  7087  00144A  C0A4  F0AC         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7088  00144E  0E16               	movlw	22
  7089  001450  D006               	goto	u6000
  7090  001452                     u6005:
  7091  001452  0100               	movlb	0	; () banked
  7092  001454  90D8               	bcf	status,0,c
  7093  001456  33AC               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7094  001458  33AB               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7095  00145A  33AA               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7096  00145C  33A9               	rrcf	??_CANsendMessage& (0+255),f,b
  7097  00145E                     u6000:
  7098  00145E  2EE8               	decfsz	wreg,f,c
  7099  001460  D7F8               	goto	u6005
  7100  001462  C0A9  F0AD         	movff	??_CANsendMessage,CANsendMessage@tamp
  7101  001466  C0AA  F0AE         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7102  00146A  C0AB  F0AF         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7103  00146E  C0AC  F0B0         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7104                           
  7105                           ; BSR set to: 0
  7106                           ;CANlib.h: 481: tamp = tamp & 0x000000FF;
  7107  001472  0100               	movlb	0	; () banked
  7108  001474  51AD               	movf	CANsendMessage@tamp& (0+255),w,b
  7109  001476  0100               	movlb	0	; () banked
  7110  001478  6FAD               	movwf	CANsendMessage@tamp& (0+255),b
  7111  00147A  0100               	movlb	0	; () banked
  7112  00147C  6BAE               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7113  00147E  0100               	movlb	0	; () banked
  7114  001480  6BAF               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7115  001482  0100               	movlb	0	; () banked
  7116  001484  6BB0               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  7120  001486  C0AD  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  7121                           
  7122                           ;CANlib.h: 483: }
  7123  00148A  D064               	goto	l4611
  7124  00148C                     l399:
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;CANlib.h: 485: else
  7128                           ;CANlib.h: 487: {
  7129                           ;CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  7130  00148C  010F               	movlb	15	; () banked
  7131  00148E  9722               	bcf	34,3,b	;volatile
  7132                           
  7133                           ; BSR set to: 15
  7134                           ;CANlib.h: 490: tamp = (identifier >> 3);
  7135  001490  0100               	movlb	0	; () banked
  7136  001492  C0A1  F0A9         	movff	CANsendMessage@identifier,??_CANsendMessage
  7137  001496  0100               	movlb	0	; () banked
  7138  001498  C0A2  F0AA         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7139  00149C  0100               	movlb	0	; () banked
  7140  00149E  C0A3  F0AB         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7141  0014A2  0100               	movlb	0	; () banked
  7142  0014A4  C0A4  F0AC         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7143  0014A8  0E04               	movlw	4
  7144  0014AA  D006               	goto	u6010
  7145  0014AC                     u6015:
  7146  0014AC  0100               	movlb	0	; () banked
  7147  0014AE  90D8               	bcf	status,0,c
  7148  0014B0  33AC               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7149  0014B2  33AB               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7150  0014B4  33AA               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7151  0014B6  33A9               	rrcf	??_CANsendMessage& (0+255),f,b
  7152  0014B8                     u6010:
  7153  0014B8  2EE8               	decfsz	wreg,f,c
  7154  0014BA  D7F8               	goto	u6015
  7155  0014BC  C0A9  F0AD         	movff	??_CANsendMessage,CANsendMessage@tamp
  7156  0014C0  C0AA  F0AE         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7157  0014C4  C0AB  F0AF         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7158  0014C8  C0AC  F0B0         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7159                           
  7160                           ; BSR set to: 0
  7161                           ;CANlib.h: 491: tamp = tamp & 0x000000FF;
  7162  0014CC  0100               	movlb	0	; () banked
  7163  0014CE  51AD               	movf	CANsendMessage@tamp& (0+255),w,b
  7164  0014D0  0100               	movlb	0	; () banked
  7165  0014D2  6FAD               	movwf	CANsendMessage@tamp& (0+255),b
  7166  0014D4  0100               	movlb	0	; () banked
  7167  0014D6  6BAE               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7168  0014D8  0100               	movlb	0	; () banked
  7169  0014DA  6BAF               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7170  0014DC  0100               	movlb	0	; () banked
  7171  0014DE  6BB0               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  7175  0014E0  C0AD  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  7176                           
  7177                           ; BSR set to: 0
  7178                           ;CANlib.h: 494: tamp = identifier & 0x00000007;
  7179  0014E4  0E07               	movlw	7
  7180  0014E6  0100               	movlb	0	; () banked
  7181  0014E8  15A1               	andwf	CANsendMessage@identifier& (0+255),w,b
  7182  0014EA  0100               	movlb	0	; () banked
  7183  0014EC  6FAD               	movwf	CANsendMessage@tamp& (0+255),b
  7184  0014EE  0E00               	movlw	0
  7185  0014F0  0100               	movlb	0	; () banked
  7186  0014F2  15A2               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  7187  0014F4  0100               	movlb	0	; () banked
  7188  0014F6  6FAE               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  7189  0014F8  0E00               	movlw	0
  7190  0014FA  0100               	movlb	0	; () banked
  7191  0014FC  15A3               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  7192  0014FE  0100               	movlb	0	; () banked
  7193  001500  6FAF               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  7194  001502  0E00               	movlw	0
  7195  001504  0100               	movlb	0	; () banked
  7196  001506  15A4               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  7197  001508  0100               	movlb	0	; () banked
  7198  00150A  6FB0               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  7199                           
  7200                           ; BSR set to: 0
  7201                           ;CANlib.h: 495: tamp = tamp << 5;
  7202  00150C  0100               	movlb	0	; () banked
  7203  00150E  C0AD  F0A9         	movff	CANsendMessage@tamp,??_CANsendMessage
  7204  001512  0100               	movlb	0	; () banked
  7205  001514  C0AE  F0AA         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7206  001518  0100               	movlb	0	; () banked
  7207  00151A  C0AF  F0AB         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7208  00151E  0100               	movlb	0	; () banked
  7209  001520  C0B0  F0AC         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7210  001524  0E05               	movlw	5
  7211  001526                     u6025:
  7212  001526  90D8               	bcf	status,0,c
  7213  001528  0100               	movlb	0	; () banked
  7214  00152A  37A9               	rlcf	??_CANsendMessage& (0+255),f,b
  7215  00152C  37AA               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  7216  00152E  37AB               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  7217  001530  37AC               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  7218  001532  2EE8               	decfsz	wreg,f,c
  7219  001534  D7F8               	goto	u6025
  7220  001536  C0A9  F0AD         	movff	??_CANsendMessage,CANsendMessage@tamp
  7221  00153A  C0AA  F0AE         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7222  00153E  C0AB  F0AF         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7223  001542  C0AC  F0B0         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7224                           
  7225                           ; BSR set to: 0
  7226                           ;CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  7227  001546  010F               	movlb	15	; () banked
  7228  001548  5122               	movf	34,w,b	;volatile
  7229  00154A  0B1F               	andlw	31
  7230  00154C  010F               	movlb	15	; () banked
  7231  00154E  6F22               	movwf	34,b	;volatile
  7232                           
  7233                           ; BSR set to: 15
  7234                           ;CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  7235  001550  C0AD  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  7236  001554                     l4611:
  7237                           
  7238                           ;CANlib.h: 498: }
  7239                           ;CANlib.h: 500: if (0b00000001 & flags)
  7240  001554  0100               	movlb	0	; () banked
  7241  001556  A1A8               	btfss	CANsendMessage@flags& (0+255),0,b
  7242  001558  D003               	goto	l406
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  7246  00155A  010F               	movlb	15	; () banked
  7247  00155C  8120               	bsf	32,0,b	;volatile
  7248  00155E  D002               	goto	l407
  7249  001560                     l406:
  7250                           
  7251                           ; BSR set to: 0
  7252                           ;CANlib.h: 502: else
  7253                           ;CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  7254  001560  010F               	movlb	15	; () banked
  7255  001562  9120               	bcf	32,0,b	;volatile
  7256  001564                     l407:
  7257                           
  7258                           ; BSR set to: 15
  7259                           ;CANlib.h: 504: if (0b00000010 & flags)
  7260  001564  0100               	movlb	0	; () banked
  7261  001566  A3A8               	btfss	CANsendMessage@flags& (0+255),1,b
  7262  001568  D003               	goto	l408
  7263                           
  7264                           ; BSR set to: 0
  7265                           ;CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  7266  00156A  010F               	movlb	15	; () banked
  7267  00156C  8320               	bsf	32,1,b	;volatile
  7268  00156E  D002               	goto	l4617
  7269  001570                     l408:
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;CANlib.h: 506: else
  7273                           ;CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  7274  001570  010F               	movlb	15	; () banked
  7275  001572  9320               	bcf	32,1,b	;volatile
  7276  001574                     l4617:
  7277                           
  7278                           ; BSR set to: 15
  7279                           ;CANlib.h: 509: TXB2D0 = data[0];
  7280  001574  C0A5  FFD9         	movff	CANsendMessage@data,fsr2l
  7281  001578  C0A6  FFDA         	movff	CANsendMessage@data+1,fsr2h
  7282  00157C  50DF               	movf	indf2,w,c
  7283  00157E  010F               	movlb	15	; () banked
  7284  001580  6F26               	movwf	38,b	;volatile
  7285                           
  7286                           ; BSR set to: 15
  7287                           ;CANlib.h: 510: TXB2D1 = data[1];
  7288  001582  0100               	movlb	0	; () banked
  7289  001584  EE20 F001          	lfsr	2,1
  7290  001588  0100               	movlb	0	; () banked
  7291  00158A  51A5               	movf	CANsendMessage@data& (0+255),w,b
  7292  00158C  26D9               	addwf	fsr2l,f,c
  7293  00158E  0100               	movlb	0	; () banked
  7294  001590  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7295  001592  22DA               	addwfc	fsr2h,f,c
  7296  001594  50DF               	movf	indf2,w,c
  7297  001596  010F               	movlb	15	; () banked
  7298  001598  6F27               	movwf	39,b	;volatile
  7299                           
  7300                           ; BSR set to: 15
  7301                           ;CANlib.h: 511: TXB2D2 = data[2];
  7302  00159A  0100               	movlb	0	; () banked
  7303  00159C  EE20 F002          	lfsr	2,2
  7304  0015A0  0100               	movlb	0	; () banked
  7305  0015A2  51A5               	movf	CANsendMessage@data& (0+255),w,b
  7306  0015A4  26D9               	addwf	fsr2l,f,c
  7307  0015A6  0100               	movlb	0	; () banked
  7308  0015A8  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7309  0015AA  22DA               	addwfc	fsr2h,f,c
  7310  0015AC  50DF               	movf	indf2,w,c
  7311  0015AE  010F               	movlb	15	; () banked
  7312  0015B0  6F28               	movwf	40,b	;volatile
  7313                           
  7314                           ; BSR set to: 15
  7315                           ;CANlib.h: 512: TXB2D3 = data[3];
  7316  0015B2  0100               	movlb	0	; () banked
  7317  0015B4  EE20 F003          	lfsr	2,3
  7318  0015B8  0100               	movlb	0	; () banked
  7319  0015BA  51A5               	movf	CANsendMessage@data& (0+255),w,b
  7320  0015BC  26D9               	addwf	fsr2l,f,c
  7321  0015BE  0100               	movlb	0	; () banked
  7322  0015C0  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7323  0015C2  22DA               	addwfc	fsr2h,f,c
  7324  0015C4  50DF               	movf	indf2,w,c
  7325  0015C6  010F               	movlb	15	; () banked
  7326  0015C8  6F29               	movwf	41,b	;volatile
  7327                           
  7328                           ; BSR set to: 15
  7329                           ;CANlib.h: 513: TXB2D4 = data[4];
  7330  0015CA  0100               	movlb	0	; () banked
  7331  0015CC  EE20 F004          	lfsr	2,4
  7332  0015D0  0100               	movlb	0	; () banked
  7333  0015D2  51A5               	movf	CANsendMessage@data& (0+255),w,b
  7334  0015D4  26D9               	addwf	fsr2l,f,c
  7335  0015D6  0100               	movlb	0	; () banked
  7336  0015D8  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7337  0015DA  22DA               	addwfc	fsr2h,f,c
  7338  0015DC  50DF               	movf	indf2,w,c
  7339  0015DE  010F               	movlb	15	; () banked
  7340  0015E0  6F2A               	movwf	42,b	;volatile
  7341                           
  7342                           ; BSR set to: 15
  7343                           ;CANlib.h: 514: TXB2D5 = data[5];
  7344  0015E2  0100               	movlb	0	; () banked
  7345  0015E4  EE20 F005          	lfsr	2,5
  7346  0015E8  0100               	movlb	0	; () banked
  7347  0015EA  51A5               	movf	CANsendMessage@data& (0+255),w,b
  7348  0015EC  26D9               	addwf	fsr2l,f,c
  7349  0015EE  0100               	movlb	0	; () banked
  7350  0015F0  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7351  0015F2  22DA               	addwfc	fsr2h,f,c
  7352  0015F4  50DF               	movf	indf2,w,c
  7353  0015F6  010F               	movlb	15	; () banked
  7354  0015F8  6F2B               	movwf	43,b	;volatile
  7355                           
  7356                           ; BSR set to: 15
  7357                           ;CANlib.h: 515: TXB2D6 = data[6];
  7358  0015FA  0100               	movlb	0	; () banked
  7359  0015FC  EE20 F006          	lfsr	2,6
  7360  001600  0100               	movlb	0	; () banked
  7361  001602  51A5               	movf	CANsendMessage@data& (0+255),w,b
  7362  001604  26D9               	addwf	fsr2l,f,c
  7363  001606  0100               	movlb	0	; () banked
  7364  001608  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7365  00160A  22DA               	addwfc	fsr2h,f,c
  7366  00160C  50DF               	movf	indf2,w,c
  7367  00160E  010F               	movlb	15	; () banked
  7368  001610  6F2C               	movwf	44,b	;volatile
  7369                           
  7370                           ; BSR set to: 15
  7371                           ;CANlib.h: 516: TXB2D7 = data[7];
  7372  001612  0100               	movlb	0	; () banked
  7373  001614  EE20 F007          	lfsr	2,7
  7374  001618  0100               	movlb	0	; () banked
  7375  00161A  51A5               	movf	CANsendMessage@data& (0+255),w,b
  7376  00161C  26D9               	addwf	fsr2l,f,c
  7377  00161E  0100               	movlb	0	; () banked
  7378  001620  51A6               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7379  001622  22DA               	addwfc	fsr2h,f,c
  7380  001624  50DF               	movf	indf2,w,c
  7381  001626  010F               	movlb	15	; () banked
  7382  001628  6F2D               	movwf	45,b	;volatile
  7383                           
  7384                           ; BSR set to: 15
  7385                           ;CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  7386  00162A  010F               	movlb	15	; () banked
  7387  00162C  8720               	bsf	32,3,b	;volatile
  7388  00162E                     l381:
  7389                           
  7390                           ; BSR set to: 15
  7391  00162E  0012               	return	
  7392  001630                     __end_of_CANsendMessage:
  7393                           	opt stack 0
  7394                           tblptru	equ	0xFF8
  7395                           tblptrh	equ	0xFF7
  7396                           tblptrl	equ	0xFF6
  7397                           tablat	equ	0xFF5
  7398                           prodh	equ	0xFF4
  7399                           prodl	equ	0xFF3
  7400                           intcon	equ	0xFF2
  7401                           intcon2	equ	0xFF1
  7402                           postinc0	equ	0xFEE
  7403                           wreg	equ	0xFE8
  7404                           indf1	equ	0xFE7
  7405                           fsr1h	equ	0xFE2
  7406                           fsr1l	equ	0xFE1
  7407                           indf2	equ	0xFDF
  7408                           fsr2h	equ	0xFDA
  7409                           fsr2l	equ	0xFD9
  7410                           status	equ	0xFD8
  7411                           
  7412 ;; *************** function _CANisTxReady *****************
  7413 ;; Defined at:
  7414 ;;		line 1154 in file "CANlib.h"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;		None
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;		None
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  1    wreg      unsigned char 
  7421 ;; Registers used:
  7422 ;;		wreg, status,2
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7428 ;;      Params:         0       0       0       0
  7429 ;;      Locals:         0       1       0       0
  7430 ;;      Temps:          0       0       0       0
  7431 ;;      Totals:         0       1       0       0
  7432 ;;Total ram usage:        1 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; Hardware stack levels required when called:    3
  7435 ;; This function calls:
  7436 ;;		Nothing
  7437 ;; This function is called by:
  7438 ;;		_send_data
  7439 ;;		_battery_measure
  7440 ;; This function uses a non-reentrant model
  7441 ;;
  7442                           
  7443                           	psect	text12
  7444  002B40                     __ptext12:
  7445                           	opt stack 0
  7446  002B40                     _CANisTxReady:
  7447                           	opt stack 26
  7448                           
  7449                           ;CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TXREQ)
      +                          ;
  7450                           
  7451                           ; BSR set to: 15
  7452                           ;incstack = 0
  7453  002B40  0E01               	movlw	1
  7454  002B42  0100               	movlb	0	; () banked
  7455  002B44  6FA1               	movwf	_CANisTxReady$3033& (0+255),b
  7456                           
  7457                           ; BSR set to: 0
  7458  002B46  010F               	movlb	15	; () banked
  7459  002B48  A740               	btfss	64,3,b	;volatile
  7460  002B4A  D009               	goto	l560
  7461                           
  7462                           ; BSR set to: 15
  7463  002B4C  010F               	movlb	15	; () banked
  7464  002B4E  A730               	btfss	48,3,b	;volatile
  7465  002B50  D006               	goto	l560
  7466                           
  7467                           ; BSR set to: 15
  7468  002B52  010F               	movlb	15	; () banked
  7469  002B54  A720               	btfss	32,3,b	;volatile
  7470  002B56  D003               	goto	l560
  7471                           
  7472                           ; BSR set to: 15
  7473  002B58  0E00               	movlw	0
  7474  002B5A  0100               	movlb	0	; () banked
  7475  002B5C  6FA1               	movwf	_CANisTxReady$3033& (0+255),b
  7476  002B5E                     l560:
  7477  002B5E  0100               	movlb	0	; () banked
  7478  002B60  51A1               	movf	_CANisTxReady$3033& (0+255),w,b
  7479                           
  7480                           ; BSR set to: 0
  7481                           
  7482                           ; BSR set to: 0
  7483  002B62  0012               	return	
  7484  002B64                     __end_of_CANisTxReady:
  7485                           	opt stack 0
  7486                           tblptru	equ	0xFF8
  7487                           tblptrh	equ	0xFF7
  7488                           tblptrl	equ	0xFF6
  7489                           tablat	equ	0xFF5
  7490                           prodh	equ	0xFF4
  7491                           prodl	equ	0xFF3
  7492                           intcon	equ	0xFF2
  7493                           intcon2	equ	0xFF1
  7494                           postinc0	equ	0xFEE
  7495                           wreg	equ	0xFE8
  7496                           indf1	equ	0xFE7
  7497                           fsr1h	equ	0xFE2
  7498                           fsr1l	equ	0xFE1
  7499                           indf2	equ	0xFDF
  7500                           fsr2h	equ	0xFDA
  7501                           fsr2l	equ	0xFD9
  7502                           status	equ	0xFD8
  7503                           
  7504 ;; *************** function _abs *****************
  7505 ;; Defined at:
  7506 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\abs.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;  a               2   14[BANK0 ] int 
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;		None
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  2   14[BANK0 ] int 
  7513 ;; Registers used:
  7514 ;;		wreg, status,2, status,0, prodl
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7520 ;;      Params:         0       2       0       0
  7521 ;;      Locals:         0       0       0       0
  7522 ;;      Temps:          0       2       0       0
  7523 ;;      Totals:         0       4       0       0
  7524 ;;Total ram usage:        4 bytes
  7525 ;; Hardware stack levels used:    1
  7526 ;; Hardware stack levels required when called:    3
  7527 ;; This function calls:
  7528 ;;		Nothing
  7529 ;; This function is called by:
  7530 ;;		_main
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           	psect	text13
  7535  002A4E                     __ptext13:
  7536                           	opt stack 0
  7537  002A4E                     _abs:
  7538                           	opt stack 27
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;incstack = 0
  7542  002A4E  0100               	movlb	0	; () banked
  7543  002A50  51A2               	movf	(abs@a+1)& (0+255),w,b
  7544  002A52  0A80               	xorlw	128
  7545  002A54  6EF3               	movwf	prodl,c
  7546  002A56  0E80               	movlw	128
  7547  002A58  5CF3               	subwf	prodl,w,c
  7548  002A5A  0E00               	movlw	0
  7549  002A5C  B4D8               	btfsc	status,2,c
  7550  002A5E  5DA1               	subwf	abs@a& (0+255),w,b
  7551  002A60  B0D8               	btfsc	status,0,c
  7552  002A62  D010               	goto	l823
  7553                           
  7554                           ; BSR set to: 0
  7555  002A64  0100               	movlb	0	; () banked
  7556  002A66  C0A1  F0A3         	movff	abs@a,??_abs
  7557  002A6A  0100               	movlb	0	; () banked
  7558  002A6C  C0A2  F0A4         	movff	abs@a+1,??_abs+1
  7559  002A70  0100               	movlb	0	; () banked
  7560  002A72  1FA3               	comf	??_abs& (0+255),f,b
  7561  002A74  1FA4               	comf	(??_abs+1)& (0+255),f,b
  7562  002A76  4BA3               	infsnz	??_abs& (0+255),f,b
  7563  002A78  2BA4               	incf	(??_abs+1)& (0+255),f,b
  7564  002A7A  C0A3  F0A1         	movff	??_abs,?_abs
  7565  002A7E  C0A4  F0A2         	movff	??_abs+1,?_abs+1
  7566  002A82  D004               	goto	l824
  7567  002A84                     l823:
  7568                           
  7569                           ; BSR set to: 0
  7570  002A84  C0A1  F0A1         	movff	abs@a,?_abs
  7571  002A88  C0A2  F0A2         	movff	abs@a+1,?_abs+1
  7572  002A8C                     l824:
  7573                           
  7574                           ; BSR set to: 0
  7575  002A8C  0012               	return	
  7576  002A8E                     __end_of_abs:
  7577                           	opt stack 0
  7578                           tblptru	equ	0xFF8
  7579                           tblptrh	equ	0xFF7
  7580                           tblptrl	equ	0xFF6
  7581                           tablat	equ	0xFF5
  7582                           prodh	equ	0xFF4
  7583                           prodl	equ	0xFF3
  7584                           intcon	equ	0xFF2
  7585                           intcon2	equ	0xFF1
  7586                           postinc0	equ	0xFEE
  7587                           wreg	equ	0xFE8
  7588                           indf1	equ	0xFE7
  7589                           fsr1h	equ	0xFE2
  7590                           fsr1l	equ	0xFE1
  7591                           indf2	equ	0xFDF
  7592                           fsr2h	equ	0xFDA
  7593                           fsr2l	equ	0xFD9
  7594                           status	equ	0xFD8
  7595                           
  7596 ;; *************** function _SetOutputEPWM1 *****************
  7597 ;; Defined at:
  7598 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\ew1setoc.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  outputconfig    1    wreg     unsigned char 
  7601 ;;  outputmode      1   14[BANK0 ] unsigned char 
  7602 ;; Auto vars:     Size  Location     Type
  7603 ;;  outputconfig    1   15[BANK0 ] unsigned char 
  7604 ;; Return value:  Size  Location     Type
  7605 ;;		None               void
  7606 ;; Registers used:
  7607 ;;		wreg, status,2, status,0
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7613 ;;      Params:         0       1       0       0
  7614 ;;      Locals:         0       1       0       0
  7615 ;;      Temps:          0       0       0       0
  7616 ;;      Totals:         0       2       0       0
  7617 ;;Total ram usage:        2 bytes
  7618 ;; Hardware stack levels used:    1
  7619 ;; Hardware stack levels required when called:    3
  7620 ;; This function calls:
  7621 ;;		Nothing
  7622 ;; This function is called by:
  7623 ;;		_main
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           	psect	text14
  7628  0029B4                     __ptext14:
  7629                           	opt stack 0
  7630  0029B4                     _SetOutputEPWM1:
  7631                           	opt stack 27
  7632                           
  7633                           ; BSR set to: 0
  7634                           ;incstack = 0
  7635                           ;SetOutputEPWM1@outputconfig stored from wreg
  7636  0029B4  0100               	movlb	0	; () banked
  7637  0029B6  6FA2               	movwf	SetOutputEPWM1@outputconfig& (0+255),b
  7638                           
  7639                           ; BSR set to: 0
  7640  0029B8  50BA               	movf	4026,w,c	;volatile
  7641  0029BA  09C0               	iorlw	192
  7642  0029BC  0100               	movlb	0	; () banked
  7643  0029BE  15A2               	andwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7644  0029C0  6EBA               	movwf	4026,c	;volatile
  7645  0029C2  50BA               	movf	4026,w,c	;volatile
  7646  0029C4  090F               	iorlw	15
  7647  0029C6  0100               	movlb	0	; () banked
  7648  0029C8  15A1               	andwf	SetOutputEPWM1@outputmode& (0+255),w,b
  7649  0029CA  6EBA               	movwf	4026,c	;volatile
  7650  0029CC  0100               	movlb	0	; () banked
  7651  0029CE  51A2               	movf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7652  0029D0  0A3F               	xorlw	63
  7653  0029D2  A4D8               	btfss	status,2,c
  7654  0029D4  D002               	goto	l4829
  7655                           
  7656                           ; BSR set to: 0
  7657  0029D6  9895               	bcf	3989,4,c	;volatile
  7658  0029D8  D015               	goto	l758
  7659  0029DA                     l4829:
  7660                           
  7661                           ; BSR set to: 0
  7662  0029DA  0100               	movlb	0	; () banked
  7663  0029DC  51A2               	movf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7664  0029DE  0ABF               	xorlw	191
  7665  0029E0  A4D8               	btfss	status,2,c
  7666  0029E2  D003               	goto	l4833
  7667                           
  7668                           ; BSR set to: 0
  7669  0029E4  9895               	bcf	3989,4,c	;volatile
  7670  0029E6  9A95               	bcf	3989,5,c	;volatile
  7671  0029E8  D00D               	goto	l758
  7672  0029EA                     l4833:
  7673                           
  7674                           ; BSR set to: 0
  7675  0029EA  0100               	movlb	0	; () banked
  7676  0029EC  51A2               	movf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7677  0029EE  0A7F               	xorlw	127
  7678  0029F0  B4D8               	btfsc	status,2,c
  7679  0029F2  D004               	goto	l757
  7680                           
  7681                           ; BSR set to: 0
  7682  0029F4  0100               	movlb	0	; () banked
  7683  0029F6  29A2               	incf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7684  0029F8  A4D8               	btfss	status,2,c
  7685  0029FA  D004               	goto	l758
  7686  0029FC                     l757:
  7687                           
  7688                           ; BSR set to: 0
  7689  0029FC  9895               	bcf	3989,4,c	;volatile
  7690  0029FE  9A95               	bcf	3989,5,c	;volatile
  7691  002A00  9C95               	bcf	3989,6,c	;volatile
  7692  002A02  9E95               	bcf	3989,7,c	;volatile
  7693  002A04                     l758:
  7694                           
  7695                           ; BSR set to: 0
  7696  002A04  0012               	return	
  7697  002A06                     __end_of_SetOutputEPWM1:
  7698                           	opt stack 0
  7699                           tblptru	equ	0xFF8
  7700                           tblptrh	equ	0xFF7
  7701                           tblptrl	equ	0xFF6
  7702                           tablat	equ	0xFF5
  7703                           prodh	equ	0xFF4
  7704                           prodl	equ	0xFF3
  7705                           intcon	equ	0xFF2
  7706                           intcon2	equ	0xFF1
  7707                           postinc0	equ	0xFEE
  7708                           wreg	equ	0xFE8
  7709                           indf1	equ	0xFE7
  7710                           fsr1h	equ	0xFE2
  7711                           fsr1l	equ	0xFE1
  7712                           indf2	equ	0xFDF
  7713                           fsr2h	equ	0xFDA
  7714                           fsr2l	equ	0xFD9
  7715                           status	equ	0xFD8
  7716                           
  7717 ;; *************** function _SetDCEPWM1 *****************
  7718 ;; Defined at:
  7719 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\ew1setdc.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;  dutycycle       2   14[BANK0 ] unsigned int 
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;  DCycle          2   18[BANK0 ] struct PWMDC
  7724 ;; Return value:  Size  Location     Type
  7725 ;;		None               void
  7726 ;; Registers used:
  7727 ;;		wreg, status,2, status,0
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7733 ;;      Params:         0       2       0       0
  7734 ;;      Locals:         0       2       0       0
  7735 ;;      Temps:          0       2       0       0
  7736 ;;      Totals:         0       6       0       0
  7737 ;;Total ram usage:        6 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; Hardware stack levels required when called:    3
  7740 ;; This function calls:
  7741 ;;		Nothing
  7742 ;; This function is called by:
  7743 ;;		_main
  7744 ;; This function uses a non-reentrant model
  7745 ;;
  7746                           
  7747                           	psect	text15
  7748  002A06                     __ptext15:
  7749                           	opt stack 0
  7750  002A06                     _SetDCEPWM1:
  7751                           	opt stack 27
  7752                           
  7753                           ; BSR set to: 0
  7754                           ;incstack = 0
  7755  002A06  0100               	movlb	0	; () banked
  7756  002A08  C0A1  F0A3         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  7757  002A0C  0100               	movlb	0	; () banked
  7758  002A0E  C0A2  F0A4         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  7759  002A12  0E06               	movlw	6
  7760  002A14                     u6235:
  7761  002A14  90D8               	bcf	status,0,c
  7762  002A16  0100               	movlb	0	; () banked
  7763  002A18  37A3               	rlcf	??_SetDCEPWM1& (0+255),f,b
  7764  002A1A  37A4               	rlcf	(??_SetDCEPWM1+1)& (0+255),f,b
  7765  002A1C  2EE8               	decfsz	wreg,f,c
  7766  002A1E  D7FA               	goto	u6235
  7767  002A20  C0A3  F0A5         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  7768  002A24  C0A4  F0A6         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  7769                           
  7770                           ; BSR set to: 0
  7771  002A28  C0A6  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  7772  002A2C  C0A5  F0A3         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  7773  002A30  0100               	movlb	0	; () banked
  7774  002A32  90D8               	bcf	status,0,c
  7775  002A34  33A3               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7776  002A36  0100               	movlb	0	; () banked
  7777  002A38  90D8               	bcf	status,0,c
  7778  002A3A  33A3               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7779  002A3C  0E30               	movlw	48
  7780  002A3E  0100               	movlb	0	; () banked
  7781  002A40  17A3               	andwf	??_SetDCEPWM1& (0+255),f,b
  7782  002A42  50BA               	movf	4026,w,c	;volatile
  7783  002A44  0BCF               	andlw	207
  7784  002A46  0100               	movlb	0	; () banked
  7785  002A48  11A3               	iorwf	??_SetDCEPWM1& (0+255),w,b
  7786  002A4A  6EBA               	movwf	4026,c	;volatile
  7787                           
  7788                           ; BSR set to: 0
  7789  002A4C  0012               	return	
  7790  002A4E                     __end_of_SetDCEPWM1:
  7791                           	opt stack 0
  7792                           tblptru	equ	0xFF8
  7793                           tblptrh	equ	0xFF7
  7794                           tblptrl	equ	0xFF6
  7795                           tablat	equ	0xFF5
  7796                           prodh	equ	0xFF4
  7797                           prodl	equ	0xFF3
  7798                           intcon	equ	0xFF2
  7799                           intcon2	equ	0xFF1
  7800                           postinc0	equ	0xFEE
  7801                           wreg	equ	0xFE8
  7802                           indf1	equ	0xFE7
  7803                           fsr1h	equ	0xFE2
  7804                           fsr1l	equ	0xFE1
  7805                           indf2	equ	0xFDF
  7806                           fsr2h	equ	0xFDA
  7807                           fsr2l	equ	0xFD9
  7808                           status	equ	0xFD8
  7809                           
  7810 ;; *************** function _OpenTimer2 *****************
  7811 ;; Defined at:
  7812 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t2open.c"
  7813 ;; Parameters:    Size  Location     Type
  7814 ;;  config          1    wreg     unsigned char 
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;  config          1   14[BANK0 ] unsigned char 
  7817 ;; Return value:  Size  Location     Type
  7818 ;;		None               void
  7819 ;; Registers used:
  7820 ;;		wreg, status,2, status,0
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7826 ;;      Params:         0       0       0       0
  7827 ;;      Locals:         0       1       0       0
  7828 ;;      Temps:          0       0       0       0
  7829 ;;      Totals:         0       1       0       0
  7830 ;;Total ram usage:        1 bytes
  7831 ;; Hardware stack levels used:    1
  7832 ;; Hardware stack levels required when called:    3
  7833 ;; This function calls:
  7834 ;;		Nothing
  7835 ;; This function is called by:
  7836 ;;		_main
  7837 ;; This function uses a non-reentrant model
  7838 ;;
  7839                           
  7840                           	psect	text16
  7841  002B64                     __ptext16:
  7842                           	opt stack 0
  7843  002B64                     _OpenTimer2:
  7844                           	opt stack 27
  7845                           
  7846                           ; BSR set to: 0
  7847                           ;incstack = 0
  7848                           ;OpenTimer2@config stored from wreg
  7849  002B64  0100               	movlb	0	; () banked
  7850  002B66  6FA1               	movwf	OpenTimer2@config& (0+255),b
  7851                           
  7852                           ; BSR set to: 0
  7853  002B68  0100               	movlb	0	; () banked
  7854  002B6A  51A1               	movf	OpenTimer2@config& (0+255),w,b
  7855  002B6C  0BFB               	andlw	251
  7856  002B6E  6ECA               	movwf	4042,c	;volatile
  7857                           
  7858                           ; BSR set to: 0
  7859  002B70  0E00               	movlw	0
  7860  002B72  6ECC               	movwf	4044,c	;volatile
  7861                           
  7862                           ; BSR set to: 0
  7863  002B74  929E               	bcf	3998,1,c	;volatile
  7864                           
  7865                           ; BSR set to: 0
  7866  002B76  0100               	movlb	0	; () banked
  7867  002B78  AFA1               	btfss	OpenTimer2@config& (0+255),7,b
  7868  002B7A  D002               	goto	l771
  7869                           
  7870                           ; BSR set to: 0
  7871  002B7C  829D               	bsf	3997,1,c	;volatile
  7872  002B7E  D001               	goto	l772
  7873  002B80                     l771:
  7874                           
  7875                           ; BSR set to: 0
  7876  002B80  929D               	bcf	3997,1,c	;volatile
  7877  002B82                     l772:
  7878                           
  7879                           ; BSR set to: 0
  7880  002B82  84CA               	bsf	4042,2,c	;volatile
  7881                           
  7882                           ; BSR set to: 0
  7883  002B84  0012               	return	
  7884  002B86                     __end_of_OpenTimer2:
  7885                           	opt stack 0
  7886                           tblptru	equ	0xFF8
  7887                           tblptrh	equ	0xFF7
  7888                           tblptrl	equ	0xFF6
  7889                           tablat	equ	0xFF5
  7890                           prodh	equ	0xFF4
  7891                           prodl	equ	0xFF3
  7892                           intcon	equ	0xFF2
  7893                           intcon2	equ	0xFF1
  7894                           postinc0	equ	0xFEE
  7895                           wreg	equ	0xFE8
  7896                           indf1	equ	0xFE7
  7897                           fsr1h	equ	0xFE2
  7898                           fsr1l	equ	0xFE1
  7899                           indf2	equ	0xFDF
  7900                           fsr2h	equ	0xFDA
  7901                           fsr2l	equ	0xFD9
  7902                           status	equ	0xFD8
  7903                           
  7904 ;; *************** function _OpenEPWM1 *****************
  7905 ;; Defined at:
  7906 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\ew1open.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;  period          1    wreg     unsigned char 
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;  period          1   14[BANK0 ] unsigned char 
  7911 ;; Return value:  Size  Location     Type
  7912 ;;		None               void
  7913 ;; Registers used:
  7914 ;;		wreg, status,2
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7920 ;;      Params:         0       0       0       0
  7921 ;;      Locals:         0       1       0       0
  7922 ;;      Temps:          0       0       0       0
  7923 ;;      Totals:         0       1       0       0
  7924 ;;Total ram usage:        1 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:    3
  7927 ;; This function calls:
  7928 ;;		Nothing
  7929 ;; This function is called by:
  7930 ;;		_main
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text17
  7935  002BB2                     __ptext17:
  7936                           	opt stack 0
  7937  002BB2                     _OpenEPWM1:
  7938                           	opt stack 27
  7939                           
  7940                           ; BSR set to: 0
  7941                           ;incstack = 0
  7942                           ;OpenEPWM1@period stored from wreg
  7943  002BB2  0100               	movlb	0	; () banked
  7944  002BB4  6FA1               	movwf	OpenEPWM1@period& (0+255),b
  7945                           
  7946                           ; BSR set to: 0
  7947  002BB6  0E0C               	movlw	12
  7948  002BB8  6EBA               	movwf	4026,c	;volatile
  7949                           
  7950                           ; BSR set to: 0
  7951  002BBA  94CA               	bcf	4042,2,c	;volatile
  7952                           
  7953                           ; BSR set to: 0
  7954  002BBC  C0A1  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  7955                           
  7956                           ; BSR set to: 0
  7957  002BC0  84CA               	bsf	4042,2,c	;volatile
  7958                           
  7959                           ; BSR set to: 0
  7960  002BC2  0012               	return	
  7961  002BC4                     __end_of_OpenEPWM1:
  7962                           	opt stack 0
  7963                           tblptru	equ	0xFF8
  7964                           tblptrh	equ	0xFF7
  7965                           tblptrl	equ	0xFF6
  7966                           tablat	equ	0xFF5
  7967                           prodh	equ	0xFF4
  7968                           prodl	equ	0xFF3
  7969                           intcon	equ	0xFF2
  7970                           intcon2	equ	0xFF1
  7971                           postinc0	equ	0xFEE
  7972                           wreg	equ	0xFE8
  7973                           indf1	equ	0xFE7
  7974                           fsr1h	equ	0xFE2
  7975                           fsr1l	equ	0xFE1
  7976                           indf2	equ	0xFDF
  7977                           fsr2h	equ	0xFDA
  7978                           fsr2l	equ	0xFD9
  7979                           status	equ	0xFD8
  7980                           
  7981 ;; *************** function _CANisTXwarningON *****************
  7982 ;; Defined at:
  7983 ;;		line 1119 in file "CANlib.h"
  7984 ;; Parameters:    Size  Location     Type
  7985 ;;		None
  7986 ;; Auto vars:     Size  Location     Type
  7987 ;;		None
  7988 ;; Return value:  Size  Location     Type
  7989 ;;                  1    wreg      unsigned char 
  7990 ;; Registers used:
  7991 ;;		wreg
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7997 ;;      Params:         0       0       0       0
  7998 ;;      Locals:         0       0       0       0
  7999 ;;      Temps:          0       0       0       0
  8000 ;;      Totals:         0       0       0       0
  8001 ;;Total ram usage:        0 bytes
  8002 ;; Hardware stack levels used:    1
  8003 ;; Hardware stack levels required when called:    3
  8004 ;; This function calls:
  8005 ;;		Nothing
  8006 ;; This function is called by:
  8007 ;;		_main
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           	psect	text18
  8012  002BC4                     __ptext18:
  8013                           	opt stack 0
  8014  002BC4                     _CANisTXwarningON:
  8015                           	opt stack 27
  8016                           
  8017                           ;CANlib.h: 1121: return (COMSTATbits.TXWARN);
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;incstack = 0
  8021  002BC4  A474               	btfss	3956,2,c	;volatile
  8022  002BC6  D002               	goto	u6140
  8023  002BC8  0E01               	movlw	1
  8024  002BCA  D001               	goto	l547
  8025  002BCC                     u6140:
  8026  002BCC  0E00               	movlw	0
  8027  002BCE                     l547:
  8028  002BCE  0012               	return	
  8029  002BD0                     __end_of_CANisTXwarningON:
  8030                           	opt stack 0
  8031                           tblptru	equ	0xFF8
  8032                           tblptrh	equ	0xFF7
  8033                           tblptrl	equ	0xFF6
  8034                           tablat	equ	0xFF5
  8035                           prodh	equ	0xFF4
  8036                           prodl	equ	0xFF3
  8037                           intcon	equ	0xFF2
  8038                           intcon2	equ	0xFF1
  8039                           postinc0	equ	0xFEE
  8040                           wreg	equ	0xFE8
  8041                           indf1	equ	0xFE7
  8042                           fsr1h	equ	0xFE2
  8043                           fsr1l	equ	0xFE1
  8044                           indf2	equ	0xFDF
  8045                           fsr2h	equ	0xFDA
  8046                           fsr2l	equ	0xFD9
  8047                           status	equ	0xFD8
  8048                           
  8049 ;; *************** function _CANisRXwarningON *****************
  8050 ;; Defined at:
  8051 ;;		line 1127 in file "CANlib.h"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;		None
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;		None
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  1    wreg      unsigned char 
  8058 ;; Registers used:
  8059 ;;		wreg
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8065 ;;      Params:         0       0       0       0
  8066 ;;      Locals:         0       0       0       0
  8067 ;;      Temps:          0       0       0       0
  8068 ;;      Totals:         0       0       0       0
  8069 ;;Total ram usage:        0 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; Hardware stack levels required when called:    3
  8072 ;; This function calls:
  8073 ;;		Nothing
  8074 ;; This function is called by:
  8075 ;;		_main
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           	psect	text19
  8080  002BD0                     __ptext19:
  8081                           	opt stack 0
  8082  002BD0                     _CANisRXwarningON:
  8083                           	opt stack 27
  8084                           
  8085                           ;CANlib.h: 1129: return (COMSTATbits.RXWARN);
  8086                           
  8087                           ;incstack = 0
  8088  002BD0  A274               	btfss	3956,1,c	;volatile
  8089  002BD2  D002               	goto	u6150
  8090  002BD4  0E01               	movlw	1
  8091  002BD6  D001               	goto	l550
  8092  002BD8                     u6150:
  8093  002BD8  0E00               	movlw	0
  8094  002BDA                     l550:
  8095  002BDA  0012               	return	
  8096  002BDC                     __end_of_CANisRXwarningON:
  8097                           	opt stack 0
  8098                           tblptru	equ	0xFF8
  8099                           tblptrh	equ	0xFF7
  8100                           tblptrl	equ	0xFF6
  8101                           tablat	equ	0xFF5
  8102                           prodh	equ	0xFF4
  8103                           prodl	equ	0xFF3
  8104                           intcon	equ	0xFF2
  8105                           intcon2	equ	0xFF1
  8106                           postinc0	equ	0xFEE
  8107                           wreg	equ	0xFE8
  8108                           indf1	equ	0xFE7
  8109                           fsr1h	equ	0xFE2
  8110                           fsr1l	equ	0xFE1
  8111                           indf2	equ	0xFDF
  8112                           fsr2h	equ	0xFDA
  8113                           fsr2l	equ	0xFD9
  8114                           status	equ	0xFD8
  8115                           
  8116 ;; *************** function _ISR_bassa *****************
  8117 ;; Defined at:
  8118 ;;		line 94 in file "motore.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;		None
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;		None
  8123 ;; Return value:  Size  Location     Type
  8124 ;;		None               void
  8125 ;; Registers used:
  8126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8132 ;;      Params:         0       0       0       0
  8133 ;;      Locals:         0       0       0       0
  8134 ;;      Temps:         17       0       0       0
  8135 ;;      Totals:        17       0       0       0
  8136 ;;Total ram usage:       17 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; Hardware stack levels required when called:    2
  8139 ;; This function calls:
  8140 ;;		_CANisRxReady
  8141 ;;		_CANreceiveMessage
  8142 ;; This function is called by:
  8143 ;;		Interrupt level 1
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146                           
  8147                           	psect	intcodelo
  8148  000018                     __pintcodelo:
  8149                           	opt stack 0
  8150  000018                     _ISR_bassa:
  8151                           	opt stack 25
  8152                           
  8153                           ;incstack = 0
  8154  000018  CFD8 F036          	movff	status,??_ISR_bassa
  8155  00001C  CFE8 F037          	movff	wreg,??_ISR_bassa+1
  8156  000020  CFE0 F038          	movff	bsr,??_ISR_bassa+2
  8157  000024  CFFA F039          	movff	pclath,??_ISR_bassa+3
  8158  000028  CFFB F03A          	movff	pclatu,??_ISR_bassa+4
  8159  00002C  CFE9 F03B          	movff	fsr0l,??_ISR_bassa+5
  8160  000030  CFEA F03C          	movff	fsr0h,??_ISR_bassa+6
  8161  000034  CFE1 F03D          	movff	fsr1l,??_ISR_bassa+7
  8162  000038  CFE2 F03E          	movff	fsr1h,??_ISR_bassa+8
  8163  00003C  CFD9 F03F          	movff	fsr2l,??_ISR_bassa+9
  8164  000040  CFDA F040          	movff	fsr2h,??_ISR_bassa+10
  8165  000044  CFF3 F041          	movff	prodl,??_ISR_bassa+11
  8166  000048  CFF4 F042          	movff	prodh,??_ISR_bassa+12
  8167  00004C  CFF6 F043          	movff	tblptrl,??_ISR_bassa+13
  8168  000050  CFF7 F044          	movff	tblptrh,??_ISR_bassa+14
  8169  000054  CFF8 F045          	movff	tblptru,??_ISR_bassa+15
  8170  000058  CFF5 F046          	movff	tablat,??_ISR_bassa+16
  8171                           
  8172                           ;motore.c: 95: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  8173  00005C  B0A4               	btfsc	4004,0,c	;volatile
  8174  00005E  D002               	goto	i1l3763
  8175  000060  A2A4               	btfss	4004,1,c	;volatile
  8176  000062  D071               	goto	i1l670
  8177  000064                     i1l3763:
  8178                           
  8179                           ;motore.c: 96: if (CANisRxReady()) {
  8180  000064  ECCE  F015         	call	_CANisRxReady	;wreg free
  8181  000068  0900               	iorlw	0
  8182  00006A  B4D8               	btfsc	status,2,c
  8183  00006C  D05F               	goto	i1l658
  8184                           
  8185                           ;motore.c: 97: CANreceiveMessage(&msg);
  8186  00006E  0E00               	movlw	high _msg
  8187  000070  6E2B               	movwf	CANreceiveMessage@msg+1,c
  8188  000072  0E13               	movlw	low _msg
  8189  000074  6E2A               	movwf	CANreceiveMessage@msg,c
  8190  000076  EC9D  F00D         	call	_CANreceiveMessage	;wreg free
  8191                           
  8192                           ;motore.c: 98: if (msg.RTR == 1) {
  8193  00007A  0421               	decf	_msg+14,w,c
  8194  00007C  A4D8               	btfss	status,2,c
  8195  00007E  D00C               	goto	i1l3771
  8196                           
  8197                           ;motore.c: 99: id = msg.identifier;
  8198  000080  C013  F005         	movff	_msg,_id
  8199  000084  C014  F006         	movff	_msg+1,_id+1
  8200  000088  C015  F007         	movff	_msg+2,_id+2
  8201  00008C  C016  F008         	movff	_msg+3,_id+3
  8202                           
  8203                           ;motore.c: 100: remote_frame = msg.RTR;
  8204  000090  0100               	movlb	(_remote_frame/(0+8)) shr (0+8)
  8205  000092  9A47               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  8206  000094  B021               	btfsc	_msg+14,0,c
  8207  000096  8A47               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  8208  000098                     i1l3771:
  8209                           
  8210                           ;motore.c: 101: }
  8211                           ;motore.c: 102: if (msg.identifier == 0b00000000000000000000000000011) {
  8212  000098  5013               	movf	_msg,w,c
  8213  00009A  0A03               	xorlw	3
  8214  00009C  1014               	iorwf	_msg+1,w,c
  8215  00009E  1015               	iorwf	_msg+2,w,c
  8216  0000A0  1016               	iorwf	_msg+3,w,c
  8217  0000A2  A4D8               	btfss	status,2,c
  8218  0000A4  D00F               	goto	i1l3775
  8219                           
  8220                           ;motore.c: 103: currentSpeed = msg.data[0];
  8221  0000A6  C017  F0C4         	movff	_msg+4,_currentSpeed
  8222                           
  8223                           ;motore.c: 104: dir = msg.data[1];
  8224  0000AA  0100               	movlb	0	; () banked
  8225  0000AC  C018  F080         	movff	_msg+5,_dir
  8226  0000B0  0100               	movlb	0	; () banked
  8227  0000B2  6B81               	clrf	(_dir+1)& (0+255),b
  8228                           
  8229                           ;motore.c: 105: previousTimeCounter = timeCounter;
  8230  0000B4  C00D  F070         	movff	_timeCounter,_previousTimeCounter
  8231  0000B8  C00E  F071         	movff	_timeCounter+1,_previousTimeCounter+1
  8232  0000BC  C00F  F072         	movff	_timeCounter+2,_previousTimeCounter+2
  8233  0000C0  C010  F073         	movff	_timeCounter+3,_previousTimeCounter+3
  8234  0000C4                     i1l3775:
  8235                           
  8236                           ;motore.c: 106: }
  8237                           ;motore.c: 107: if (msg.identifier == 0b00000000000000000000000000001) {
  8238  0000C4  0413               	decf	_msg,w,c
  8239  0000C6  1014               	iorwf	_msg+1,w,c
  8240  0000C8  1015               	iorwf	_msg+2,w,c
  8241  0000CA  1016               	iorwf	_msg+3,w,c
  8242  0000CC  A4D8               	btfss	status,2,c
  8243  0000CE  D004               	goto	i1l3781
  8244                           
  8245                           ;motore.c: 108: currentSpeed = 0;
  8246  0000D0  0E00               	movlw	0
  8247  0000D2  0100               	movlb	0	; () banked
  8248  0000D4  6FC4               	movwf	_currentSpeed& (0+255),b
  8249                           
  8250                           ; BSR set to: 0
  8251                           ;motore.c: 109: PORTAbits.RA1 = 1;
  8252  0000D6  8280               	bsf	3968,1,c	;volatile
  8253  0000D8                     i1l3781:
  8254                           
  8255                           ;motore.c: 110: }
  8256                           ;motore.c: 111: if (msg.identifier == 0b00000000000000000000000000110) {
  8257  0000D8  5013               	movf	_msg,w,c
  8258  0000DA  0A06               	xorlw	6
  8259  0000DC  1014               	iorwf	_msg+1,w,c
  8260  0000DE  1015               	iorwf	_msg+2,w,c
  8261  0000E0  1016               	iorwf	_msg+3,w,c
  8262  0000E2  A4D8               	btfss	status,2,c
  8263  0000E4  D006               	goto	i1l3785
  8264                           
  8265                           ;motore.c: 112: left_speed = msg.data[0];
  8266  0000E6  C017  F087         	movff	_msg+4,_left_speed
  8267                           
  8268                           ;motore.c: 113: right_speed = msg.data[1];
  8269  0000EA  C018  F08A         	movff	_msg+5,_right_speed
  8270                           
  8271                           ;motore.c: 114: speed_fetched = 1;
  8272  0000EE  0100               	movlb	(_speed_fetched/(0+8)) shr (0+8)
  8273  0000F0  8048               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
  8274  0000F2                     i1l3785:
  8275                           
  8276                           ;motore.c: 115: }
  8277                           ;motore.c: 116: if (msg.identifier == 0b00000000000000000000000000010) {
  8278  0000F2  5013               	movf	_msg,w,c
  8279  0000F4  0A02               	xorlw	2
  8280  0000F6  1014               	iorwf	_msg+1,w,c
  8281  0000F8  1015               	iorwf	_msg+2,w,c
  8282  0000FA  1016               	iorwf	_msg+3,w,c
  8283  0000FC  B4D8               	btfsc	status,2,c
  8284  0000FE  D00A               	goto	i1l3791
  8285  000100  D015               	goto	i1l658
  8286  000102                     i1l665:
  8287  000102  0100               	movlb	(_centralina_abs/(0+8)) shr (0+8)
  8288  000104  8247               	bsf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  8289                           
  8290                           ;motore.c: 119: break;
  8291  000106  D010               	goto	i1l666
  8292  000108                     i1l667:
  8293  000108  0100               	movlb	(_centralina_sterzo/(0+8)) shr (0+8)
  8294  00010A  8647               	bsf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  8295                           
  8296                           ;motore.c: 121: break;
  8297  00010C  D00D               	goto	i1l666
  8298  00010E                     i1l668:
  8299  00010E  0100               	movlb	(_centralina_comando/(0+8)) shr (0+8)
  8300  000110  8447               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  8301                           
  8302                           ;motore.c: 123: break;
  8303  000112  D00A               	goto	i1l666
  8304  000114                     i1l3791:
  8305  000114  5017               	movf	_msg+4,w,c
  8306                           
  8307                           ; Switch size 1, requested type "space"
  8308                           ; Number of cases is 3, Range of values is 1 to 3
  8309                           ; switch strategies available:
  8310                           ; Name         Instructions Cycles
  8311                           ; simple_byte           10     6 (average)
  8312                           ;	Chosen strategy is simple_byte
  8313  000116  0A01               	xorlw	1	; case 1
  8314  000118  B4D8               	btfsc	status,2,c
  8315  00011A  D7F3               	goto	i1l665
  8316  00011C  0A03               	xorlw	3	; case 2
  8317  00011E  B4D8               	btfsc	status,2,c
  8318  000120  D7F3               	goto	i1l667
  8319  000122  0A01               	xorlw	1	; case 3
  8320  000124  B4D8               	btfsc	status,2,c
  8321  000126  D7F3               	goto	i1l668
  8322  000128                     i1l666:
  8323                           
  8324                           ;motore.c: 125: PIR3bits.RXB0IF = 0;
  8325  000128  90A4               	bcf	4004,0,c	;volatile
  8326                           
  8327                           ;motore.c: 126: PIR3bits.RXB1IF = 0;
  8328  00012A  92A4               	bcf	4004,1,c	;volatile
  8329  00012C                     i1l658:
  8330                           
  8331                           ;motore.c: 127: }
  8332                           ;motore.c: 128: }
  8333                           ;motore.c: 129: if (PIR2bits.TMR3IF) {
  8334  00012C  A2A1               	btfss	4001,1,c	;volatile
  8335  00012E  D00B               	goto	i1l670
  8336                           
  8337                           ;motore.c: 130: timeCounter++;
  8338  000130  0E01               	movlw	1
  8339  000132  260D               	addwf	_timeCounter,f,c
  8340  000134  0E00               	movlw	0
  8341  000136  220E               	addwfc	_timeCounter+1,f,c
  8342  000138  220F               	addwfc	_timeCounter+2,f,c
  8343  00013A  2210               	addwfc	_timeCounter+3,f,c
  8344                           
  8345                           ;motore.c: 131: TMR3H = 0x63;
  8346  00013C  0E63               	movlw	99
  8347  00013E  6EB3               	movwf	4019,c	;volatile
  8348                           
  8349                           ;motore.c: 132: TMR3L = 0xC0;
  8350  000140  0EC0               	movlw	192
  8351  000142  6EB2               	movwf	4018,c	;volatile
  8352                           
  8353                           ;motore.c: 133: PIR2bits.TMR3IF = 0;
  8354  000144  92A1               	bcf	4001,1,c	;volatile
  8355  000146                     i1l670:
  8356  000146  C046  FFF5         	movff	??_ISR_bassa+16,tablat
  8357  00014A  C045  FFF8         	movff	??_ISR_bassa+15,tblptru
  8358  00014E  C044  FFF7         	movff	??_ISR_bassa+14,tblptrh
  8359  000152  C043  FFF6         	movff	??_ISR_bassa+13,tblptrl
  8360  000156  C042  FFF4         	movff	??_ISR_bassa+12,prodh
  8361  00015A  C041  FFF3         	movff	??_ISR_bassa+11,prodl
  8362  00015E  C040  FFDA         	movff	??_ISR_bassa+10,fsr2h
  8363  000162  C03F  FFD9         	movff	??_ISR_bassa+9,fsr2l
  8364  000166  C03E  FFE2         	movff	??_ISR_bassa+8,fsr1h
  8365  00016A  C03D  FFE1         	movff	??_ISR_bassa+7,fsr1l
  8366  00016E  C03C  FFEA         	movff	??_ISR_bassa+6,fsr0h
  8367  000172  C03B  FFE9         	movff	??_ISR_bassa+5,fsr0l
  8368  000176  C03A  FFFB         	movff	??_ISR_bassa+4,pclatu
  8369  00017A  C039  FFFA         	movff	??_ISR_bassa+3,pclath
  8370  00017E  C038  FFE0         	movff	??_ISR_bassa+2,bsr
  8371  000182  C037  FFE8         	movff	??_ISR_bassa+1,wreg
  8372  000186  C036  FFD8         	movff	??_ISR_bassa,status
  8373  00018A  0010               	retfie	
  8374  00018C                     __end_of_ISR_bassa:
  8375                           	opt stack 0
  8376                           pclatu	equ	0xFFB
  8377                           pclath	equ	0xFFA
  8378                           tblptru	equ	0xFF8
  8379                           tblptrh	equ	0xFF7
  8380                           tblptrl	equ	0xFF6
  8381                           tablat	equ	0xFF5
  8382                           prodh	equ	0xFF4
  8383                           prodl	equ	0xFF3
  8384                           intcon	equ	0xFF2
  8385                           intcon2	equ	0xFF1
  8386                           postinc0	equ	0xFEE
  8387                           fsr0h	equ	0xFEA
  8388                           fsr0l	equ	0xFE9
  8389                           wreg	equ	0xFE8
  8390                           indf1	equ	0xFE7
  8391                           fsr1h	equ	0xFE2
  8392                           fsr1l	equ	0xFE1
  8393                           bsr	equ	0xFE0
  8394                           indf2	equ	0xFDF
  8395                           fsr2h	equ	0xFDA
  8396                           fsr2l	equ	0xFD9
  8397                           status	equ	0xFD8
  8398                           
  8399 ;; *************** function _CANreceiveMessage *****************
  8400 ;; Defined at:
  8401 ;;		line 528 in file "CANlib.h"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;  msg             2    0[COMRAM] PTR struct .
  8404 ;;		 -> msg(15), 
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;  tamp            1   11[COMRAM] unsigned char 
  8407 ;;  error           1   10[COMRAM] unsigned char 
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  1    wreg      unsigned char 
  8410 ;; Registers used:
  8411 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8417 ;;      Params:         2       0       0       0
  8418 ;;      Locals:         2       0       0       0
  8419 ;;      Temps:          8       0       0       0
  8420 ;;      Totals:        12       0       0       0
  8421 ;;Total ram usage:       12 bytes
  8422 ;; Hardware stack levels used:    1
  8423 ;; Hardware stack levels required when called:    1
  8424 ;; This function calls:
  8425 ;;		Nothing
  8426 ;; This function is called by:
  8427 ;;		_ISR_bassa
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           	psect	text21
  8432  001B3A                     __ptext21:
  8433                           	opt stack 0
  8434  001B3A                     _CANreceiveMessage:
  8435                           	opt stack 25
  8436                           
  8437                           ;CANlib.h: 530: BYTE tamp;
  8438                           ;CANlib.h: 531: BYTE error = 0;
  8439                           
  8440                           ;incstack = 0
  8441  001B3A  0E00               	movlw	0
  8442  001B3C  6E34               	movwf	CANreceiveMessage@error,c
  8443                           
  8444                           ;CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  8445  001B3E  BE74               	btfsc	3956,7,c	;volatile
  8446                           
  8447                           ;CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  8448  001B40  8034               	bsf	CANreceiveMessage@error,0,c
  8449                           
  8450                           ;CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  8451  001B42  BC74               	btfsc	3956,6,c	;volatile
  8452                           
  8453                           ;CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  8454  001B44  8234               	bsf	CANreceiveMessage@error,1,c
  8455                           
  8456                           ;CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  8457  001B46  010F               	movlb	15	; () banked
  8458  001B48  AF50               	btfss	80,7,b	;volatile
  8459  001B4A  D13B               	goto	i1l414
  8460                           
  8461                           ; BSR set to: 15
  8462                           ;CANlib.h: 541: {
  8463                           ;CANlib.h: 542: msg->identifier = 0;
  8464  001B4C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8465  001B50  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8466  001B54  6ADE               	clrf	postinc2,c
  8467  001B56  6ADE               	clrf	postinc2,c
  8468  001B58  6ADE               	clrf	postinc2,c
  8469  001B5A  6ADD               	clrf	postdec2,c
  8470                           
  8471                           ; BSR set to: 15
  8472                           ;CANlib.h: 543: msg->data[0] =RXB1D0;
  8473  001B5C  EE20 F004          	lfsr	2,4
  8474  001B60  502A               	movf	CANreceiveMessage@msg,w,c
  8475  001B62  26D9               	addwf	fsr2l,f,c
  8476  001B64  502B               	movf	CANreceiveMessage@msg+1,w,c
  8477  001B66  22DA               	addwfc	fsr2h,f,c
  8478  001B68  010F               	movlb	15	; () banked
  8479  001B6A  CF56 FFDF          	movff	3926,indf2	;volatile
  8480                           
  8481                           ; BSR set to: 15
  8482                           ;CANlib.h: 544: msg->data[1] =RXB1D1;
  8483  001B6E  EE20 F005          	lfsr	2,5
  8484  001B72  502A               	movf	CANreceiveMessage@msg,w,c
  8485  001B74  26D9               	addwf	fsr2l,f,c
  8486  001B76  502B               	movf	CANreceiveMessage@msg+1,w,c
  8487  001B78  22DA               	addwfc	fsr2h,f,c
  8488  001B7A  010F               	movlb	15	; () banked
  8489  001B7C  CF57 FFDF          	movff	3927,indf2	;volatile
  8490                           
  8491                           ; BSR set to: 15
  8492                           ;CANlib.h: 545: msg->data[2] =RXB1D2;
  8493  001B80  EE20 F006          	lfsr	2,6
  8494  001B84  502A               	movf	CANreceiveMessage@msg,w,c
  8495  001B86  26D9               	addwf	fsr2l,f,c
  8496  001B88  502B               	movf	CANreceiveMessage@msg+1,w,c
  8497  001B8A  22DA               	addwfc	fsr2h,f,c
  8498  001B8C  010F               	movlb	15	; () banked
  8499  001B8E  CF58 FFDF          	movff	3928,indf2	;volatile
  8500                           
  8501                           ; BSR set to: 15
  8502                           ;CANlib.h: 546: msg->data[3] =RXB1D3;
  8503  001B92  EE20 F007          	lfsr	2,7
  8504  001B96  502A               	movf	CANreceiveMessage@msg,w,c
  8505  001B98  26D9               	addwf	fsr2l,f,c
  8506  001B9A  502B               	movf	CANreceiveMessage@msg+1,w,c
  8507  001B9C  22DA               	addwfc	fsr2h,f,c
  8508  001B9E  010F               	movlb	15	; () banked
  8509  001BA0  CF59 FFDF          	movff	3929,indf2	;volatile
  8510                           
  8511                           ; BSR set to: 15
  8512                           ;CANlib.h: 547: msg->data[4] =RXB1D4;
  8513  001BA4  EE20 F008          	lfsr	2,8
  8514  001BA8  502A               	movf	CANreceiveMessage@msg,w,c
  8515  001BAA  26D9               	addwf	fsr2l,f,c
  8516  001BAC  502B               	movf	CANreceiveMessage@msg+1,w,c
  8517  001BAE  22DA               	addwfc	fsr2h,f,c
  8518  001BB0  010F               	movlb	15	; () banked
  8519  001BB2  CF5A FFDF          	movff	3930,indf2	;volatile
  8520                           
  8521                           ; BSR set to: 15
  8522                           ;CANlib.h: 548: msg->data[5] =RXB1D5;
  8523  001BB6  EE20 F009          	lfsr	2,9
  8524  001BBA  502A               	movf	CANreceiveMessage@msg,w,c
  8525  001BBC  26D9               	addwf	fsr2l,f,c
  8526  001BBE  502B               	movf	CANreceiveMessage@msg+1,w,c
  8527  001BC0  22DA               	addwfc	fsr2h,f,c
  8528  001BC2  010F               	movlb	15	; () banked
  8529  001BC4  CF5B FFDF          	movff	3931,indf2	;volatile
  8530                           
  8531                           ; BSR set to: 15
  8532                           ;CANlib.h: 549: msg->data[6] =RXB1D6;
  8533  001BC8  EE20 F00A          	lfsr	2,10
  8534  001BCC  502A               	movf	CANreceiveMessage@msg,w,c
  8535  001BCE  26D9               	addwf	fsr2l,f,c
  8536  001BD0  502B               	movf	CANreceiveMessage@msg+1,w,c
  8537  001BD2  22DA               	addwfc	fsr2h,f,c
  8538  001BD4  010F               	movlb	15	; () banked
  8539  001BD6  CF5C FFDF          	movff	3932,indf2	;volatile
  8540                           
  8541                           ; BSR set to: 15
  8542                           ;CANlib.h: 550: msg->data[7] =RXB1D7;
  8543  001BDA  EE20 F00B          	lfsr	2,11
  8544  001BDE  502A               	movf	CANreceiveMessage@msg,w,c
  8545  001BE0  26D9               	addwf	fsr2l,f,c
  8546  001BE2  502B               	movf	CANreceiveMessage@msg+1,w,c
  8547  001BE4  22DA               	addwfc	fsr2h,f,c
  8548  001BE6  010F               	movlb	15	; () banked
  8549  001BE8  CF5D FFDF          	movff	3933,indf2	;volatile
  8550                           
  8551                           ; BSR set to: 15
  8552                           ;CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  8553  001BEC  EE20 F00E          	lfsr	2,14
  8554  001BF0  502A               	movf	CANreceiveMessage@msg,w,c
  8555  001BF2  26D9               	addwf	fsr2l,f,c
  8556  001BF4  502B               	movf	CANreceiveMessage@msg+1,w,c
  8557  001BF6  22DA               	addwfc	fsr2h,f,c
  8558  001BF8  010F               	movlb	15	; () banked
  8559  001BFA  AD55               	btfss	85,6,b	;volatile
  8560  001BFC  D002               	goto	i1u385_20
  8561  001BFE  0E01               	movlw	1
  8562  001C00  D001               	goto	i1u385_26
  8563  001C02                     i1u385_20:
  8564  001C02  0E00               	movlw	0
  8565  001C04                     i1u385_26:
  8566  001C04  6EDF               	movwf	indf2,c
  8567                           
  8568                           ; BSR set to: 15
  8569                           ;CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  8570  001C06  EE20 F00D          	lfsr	2,13
  8571  001C0A  502A               	movf	CANreceiveMessage@msg,w,c
  8572  001C0C  26D9               	addwf	fsr2l,f,c
  8573  001C0E  502B               	movf	CANreceiveMessage@msg+1,w,c
  8574  001C10  22DA               	addwfc	fsr2h,f,c
  8575  001C12  010F               	movlb	15	; () banked
  8576  001C14  5155               	movf	85,w,b	;volatile
  8577  001C16  0B0F               	andlw	15
  8578  001C18  6EDF               	movwf	indf2,c
  8579                           
  8580                           ; BSR set to: 15
  8581                           ;CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  8582  001C1A  EE20 F00C          	lfsr	2,12
  8583  001C1E  502A               	movf	CANreceiveMessage@msg,w,c
  8584  001C20  26D9               	addwf	fsr2l,f,c
  8585  001C22  502B               	movf	CANreceiveMessage@msg+1,w,c
  8586  001C24  22DA               	addwfc	fsr2h,f,c
  8587  001C26  010F               	movlb	15	; () banked
  8588  001C28  A752               	btfss	82,3,b	;volatile
  8589  001C2A  D002               	goto	i1u386_20
  8590  001C2C  0E01               	movlw	1
  8591  001C2E  D001               	goto	i1u386_26
  8592  001C30                     i1u386_20:
  8593  001C30  0E00               	movlw	0
  8594  001C32                     i1u386_26:
  8595  001C32  6EDF               	movwf	indf2,c
  8596                           
  8597                           ; BSR set to: 15
  8598                           ;CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  8599  001C34  010F               	movlb	15	; () banked
  8600  001C36  B752               	btfsc	82,3,b	;volatile
  8601  001C38  D049               	goto	i1l3463
  8602                           
  8603                           ; BSR set to: 15
  8604                           ;CANlib.h: 559: {
  8605                           ;CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  8606  001C3A  010F               	movlb	15	; () banked
  8607  001C3C  CF51 F02C          	movff	3921,??_CANreceiveMessage	;volatile
  8608  001C40  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8609  001C42  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8610  001C44  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8611  001C46  0E03               	movlw	3
  8612  001C48                     i1u388_25:
  8613  001C48  90D8               	bcf	status,0,c
  8614  001C4A  362C               	rlcf	??_CANreceiveMessage,f,c
  8615  001C4C  362D               	rlcf	??_CANreceiveMessage+1,f,c
  8616  001C4E  362E               	rlcf	??_CANreceiveMessage+2,f,c
  8617  001C50  362F               	rlcf	??_CANreceiveMessage+3,f,c
  8618  001C52  2EE8               	decfsz	wreg,f,c
  8619  001C54  D7F9               	goto	i1u388_25
  8620  001C56  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8621  001C5A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8622  001C5E  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  8623  001C62  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8624  001C66  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8625  001C6A  C02F  FFDD         	movff	??_CANreceiveMessage+3,postdec2
  8626  001C6E  06D9               	decf	fsr2l,f,c
  8627  001C70  06D9               	decf	fsr2l,f,c
  8628                           
  8629                           ; BSR set to: 15
  8630                           ;CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  8631  001C72  010F               	movlb	15	; () banked
  8632  001C74  3952               	swapf	82,w,b	;volatile
  8633  001C76  42E8               	rrncf	wreg,f,c
  8634  001C78  0B07               	andlw	7
  8635  001C7A  0B07               	andlw	7
  8636  001C7C  6E35               	movwf	CANreceiveMessage@tamp,c
  8637                           
  8638                           ; BSR set to: 15
  8639                           ;CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  8640  001C7E  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8641  001C82  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8642  001C86  CFDE F02C          	movff	postinc2,??_CANreceiveMessage
  8643  001C8A  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+1
  8644  001C8E  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+2
  8645  001C92  CFDE F02F          	movff	postinc2,??_CANreceiveMessage+3
  8646  001C96  5035               	movf	CANreceiveMessage@tamp,w,c
  8647  001C98  242C               	addwf	??_CANreceiveMessage,w,c
  8648  001C9A  6E30               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8649  001C9C  0E00               	movlw	0
  8650  001C9E  202D               	addwfc	??_CANreceiveMessage+1,w,c
  8651  001CA0  6E31               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8652  001CA2  0E00               	movlw	0
  8653  001CA4  202E               	addwfc	??_CANreceiveMessage+2,w,c
  8654  001CA6  6E32               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8655  001CA8  0E00               	movlw	0
  8656  001CAA  202F               	addwfc	??_CANreceiveMessage+3,w,c
  8657  001CAC  6E33               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8658  001CAE  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8659  001CB2  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8660  001CB6  C030  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8661  001CBA  C031  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8662  001CBE  C032  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8663  001CC2  C033  FFDD         	movff	??_CANreceiveMessage+7,postdec2
  8664  001CC6  06D9               	decf	fsr2l,f,c
  8665  001CC8  06D9               	decf	fsr2l,f,c
  8666                           
  8667                           ;CANlib.h: 563: }
  8668  001CCA  D078               	goto	i1l3487
  8669  001CCC                     i1l3463:
  8670                           
  8671                           ; BSR set to: 15
  8672                           ;CANlib.h: 564: else
  8673                           ;CANlib.h: 565: {
  8674                           ;CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  8675  001CCC  010F               	movlb	15	; () banked
  8676  001CCE  CF54 F02C          	movff	3924,??_CANreceiveMessage	;volatile
  8677  001CD2  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8678  001CD4  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8679  001CD6  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8680  001CD8  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8681  001CDC  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8682  001CE0  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  8683  001CE4  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8684  001CE8  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8685  001CEC  C02F  FFDD         	movff	??_CANreceiveMessage+3,postdec2
  8686  001CF0  06D9               	decf	fsr2l,f,c
  8687  001CF2  06D9               	decf	fsr2l,f,c
  8688                           
  8689                           ; BSR set to: 15
  8690                           ;CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  8691  001CF4  010F               	movlb	15	; () banked
  8692  001CF6  CF53 F02C          	movff	3923,??_CANreceiveMessage	;volatile
  8693  001CFA  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8694  001CFC  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8695  001CFE  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8696  001D00  C02E  F02F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8697  001D04  C02D  F02E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8698  001D08  C02C  F02D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8699  001D0C  6A2C               	clrf	??_CANreceiveMessage,c
  8700  001D0E  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8701  001D12  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8702  001D16  502C               	movf	??_CANreceiveMessage,w,c
  8703  001D18  26DE               	addwf	postinc2,f,c
  8704  001D1A  502D               	movf	??_CANreceiveMessage+1,w,c
  8705  001D1C  22DE               	addwfc	postinc2,f,c
  8706  001D1E  502E               	movf	??_CANreceiveMessage+2,w,c
  8707  001D20  22DE               	addwfc	postinc2,f,c
  8708  001D22  502F               	movf	??_CANreceiveMessage+3,w,c
  8709  001D24  22DD               	addwfc	postdec2,f,c
  8710  001D26  52DD               	movf	postdec2,f,c
  8711  001D28  52DD               	movf	postdec2,f,c
  8712                           
  8713                           ; BSR set to: 15
  8714                           ;CANlib.h: 569: if (RXB1SIDLbits.EID16)
  8715  001D2A  010F               	movlb	15	; () banked
  8716  001D2C  A152               	btfss	82,0,b	;volatile
  8717  001D2E  D006               	goto	i1l3471
  8718                           
  8719                           ; BSR set to: 15
  8720                           ;CANlib.h: 570: msg->identifier |= 0x00010000;
  8721  001D30  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8722  001D34  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8723  001D38  0E02               	movlw	2
  8724  001D3A  80DB               	bsf	plusw2,0,c
  8725  001D3C                     i1l3471:
  8726                           
  8727                           ; BSR set to: 15
  8728                           ;CANlib.h: 571: if (RXB1SIDLbits.EID17)
  8729  001D3C  010F               	movlb	15	; () banked
  8730  001D3E  A352               	btfss	82,1,b	;volatile
  8731  001D40  D006               	goto	i1l3475
  8732                           
  8733                           ; BSR set to: 15
  8734                           ;CANlib.h: 572: msg->identifier |= 0x00020000;
  8735  001D42  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8736  001D46  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8737  001D4A  0E02               	movlw	2
  8738  001D4C  82DB               	bsf	plusw2,1,c
  8739  001D4E                     i1l3475:
  8740                           
  8741                           ; BSR set to: 15
  8742                           ;CANlib.h: 573: if (RXB1SIDLbits.SID0)
  8743  001D4E  010F               	movlb	15	; () banked
  8744  001D50  AB52               	btfss	82,5,b	;volatile
  8745  001D52  D006               	goto	i1l3479
  8746                           
  8747                           ; BSR set to: 15
  8748                           ;CANlib.h: 574: msg->identifier |= 0x00040000;
  8749  001D54  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8750  001D58  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8751  001D5C  0E02               	movlw	2
  8752  001D5E  84DB               	bsf	plusw2,2,c
  8753  001D60                     i1l3479:
  8754                           
  8755                           ; BSR set to: 15
  8756                           ;CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8757  001D60  010F               	movlb	15	; () banked
  8758  001D62  AD52               	btfss	82,6,b	;volatile
  8759  001D64  D006               	goto	i1l3483
  8760                           
  8761                           ; BSR set to: 15
  8762                           ;CANlib.h: 576: msg->identifier |= 0x00080000;
  8763  001D66  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8764  001D6A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8765  001D6E  0E02               	movlw	2
  8766  001D70  86DB               	bsf	plusw2,3,c
  8767  001D72                     i1l3483:
  8768                           
  8769                           ; BSR set to: 15
  8770                           ;CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8771  001D72  010F               	movlb	15	; () banked
  8772  001D74  AF52               	btfss	82,7,b	;volatile
  8773  001D76  D006               	goto	i1l421
  8774                           
  8775                           ; BSR set to: 15
  8776                           ;CANlib.h: 578: msg->identifier |= 0x00100000;
  8777  001D78  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8778  001D7C  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8779  001D80  0E02               	movlw	2
  8780  001D82  88DB               	bsf	plusw2,4,c
  8781  001D84                     i1l421:
  8782                           
  8783                           ; BSR set to: 15
  8784                           ;CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8785  001D84  010F               	movlb	15	; () banked
  8786  001D86  CF51 F02C          	movff	3921,??_CANreceiveMessage	;volatile
  8787  001D8A  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8788  001D8C  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8789  001D8E  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8790  001D90  0E15               	movlw	21
  8791  001D92                     i1u394_25:
  8792  001D92  90D8               	bcf	status,0,c
  8793  001D94  362C               	rlcf	??_CANreceiveMessage,f,c
  8794  001D96  362D               	rlcf	??_CANreceiveMessage+1,f,c
  8795  001D98  362E               	rlcf	??_CANreceiveMessage+2,f,c
  8796  001D9A  362F               	rlcf	??_CANreceiveMessage+3,f,c
  8797  001D9C  2EE8               	decfsz	wreg,f,c
  8798  001D9E  D7F9               	goto	i1u394_25
  8799  001DA0  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8800  001DA4  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8801  001DA8  502C               	movf	??_CANreceiveMessage,w,c
  8802  001DAA  12DE               	iorwf	postinc2,f,c
  8803  001DAC  502D               	movf	??_CANreceiveMessage+1,w,c
  8804  001DAE  12DE               	iorwf	postinc2,f,c
  8805  001DB0  502E               	movf	??_CANreceiveMessage+2,w,c
  8806  001DB2  12DE               	iorwf	postinc2,f,c
  8807  001DB4  502F               	movf	??_CANreceiveMessage+3,w,c
  8808  001DB6  12DD               	iorwf	postdec2,f,c
  8809  001DB8  52DD               	movf	postdec2,f,c
  8810  001DBA  52DD               	movf	postdec2,f,c
  8811  001DBC                     i1l3487:
  8812                           
  8813                           ; BSR set to: 15
  8814                           ;CANlib.h: 581: }
  8815                           ;CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8816  001DBC  010F               	movlb	15	; () banked
  8817  001DBE  9F50               	bcf	80,7,b	;volatile
  8818  001DC0  D125               	goto	i1l422
  8819  001DC2                     i1l414:
  8820                           
  8821                           ; BSR set to: 15
  8822                           ;CANlib.h: 585: }
  8823                           ;CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8824  001DC2  AE60               	btfss	3936,7,c	;volatile
  8825  001DC4  D123               	goto	i1l422
  8826                           
  8827                           ; BSR set to: 15
  8828                           ;CANlib.h: 588: {
  8829                           ;CANlib.h: 589: msg->identifier = 0;
  8830  001DC6  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8831  001DCA  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8832  001DCE  6ADE               	clrf	postinc2,c
  8833  001DD0  6ADE               	clrf	postinc2,c
  8834  001DD2  6ADE               	clrf	postinc2,c
  8835  001DD4  6ADD               	clrf	postdec2,c
  8836                           
  8837                           ; BSR set to: 15
  8838                           ;CANlib.h: 590: msg->data[0] =RXB0D0;
  8839  001DD6  EE20 F004          	lfsr	2,4
  8840  001DDA  502A               	movf	CANreceiveMessage@msg,w,c
  8841  001DDC  26D9               	addwf	fsr2l,f,c
  8842  001DDE  502B               	movf	CANreceiveMessage@msg+1,w,c
  8843  001DE0  22DA               	addwfc	fsr2h,f,c
  8844  001DE2  CF66 FFDF          	movff	3942,indf2	;volatile
  8845                           
  8846                           ; BSR set to: 15
  8847                           ;CANlib.h: 591: msg->data[1] =RXB0D1;
  8848  001DE6  EE20 F005          	lfsr	2,5
  8849  001DEA  502A               	movf	CANreceiveMessage@msg,w,c
  8850  001DEC  26D9               	addwf	fsr2l,f,c
  8851  001DEE  502B               	movf	CANreceiveMessage@msg+1,w,c
  8852  001DF0  22DA               	addwfc	fsr2h,f,c
  8853  001DF2  CF67 FFDF          	movff	3943,indf2	;volatile
  8854                           
  8855                           ; BSR set to: 15
  8856                           ;CANlib.h: 592: msg->data[2] =RXB0D2;
  8857  001DF6  EE20 F006          	lfsr	2,6
  8858  001DFA  502A               	movf	CANreceiveMessage@msg,w,c
  8859  001DFC  26D9               	addwf	fsr2l,f,c
  8860  001DFE  502B               	movf	CANreceiveMessage@msg+1,w,c
  8861  001E00  22DA               	addwfc	fsr2h,f,c
  8862  001E02  CF68 FFDF          	movff	3944,indf2	;volatile
  8863                           
  8864                           ; BSR set to: 15
  8865                           ;CANlib.h: 593: msg->data[3] =RXB0D3;
  8866  001E06  EE20 F007          	lfsr	2,7
  8867  001E0A  502A               	movf	CANreceiveMessage@msg,w,c
  8868  001E0C  26D9               	addwf	fsr2l,f,c
  8869  001E0E  502B               	movf	CANreceiveMessage@msg+1,w,c
  8870  001E10  22DA               	addwfc	fsr2h,f,c
  8871  001E12  CF69 FFDF          	movff	3945,indf2	;volatile
  8872                           
  8873                           ; BSR set to: 15
  8874                           ;CANlib.h: 594: msg->data[4] =RXB0D4;
  8875  001E16  EE20 F008          	lfsr	2,8
  8876  001E1A  502A               	movf	CANreceiveMessage@msg,w,c
  8877  001E1C  26D9               	addwf	fsr2l,f,c
  8878  001E1E  502B               	movf	CANreceiveMessage@msg+1,w,c
  8879  001E20  22DA               	addwfc	fsr2h,f,c
  8880  001E22  CF6A FFDF          	movff	3946,indf2	;volatile
  8881                           
  8882                           ; BSR set to: 15
  8883                           ;CANlib.h: 595: msg->data[5] =RXB0D5;
  8884  001E26  EE20 F009          	lfsr	2,9
  8885  001E2A  502A               	movf	CANreceiveMessage@msg,w,c
  8886  001E2C  26D9               	addwf	fsr2l,f,c
  8887  001E2E  502B               	movf	CANreceiveMessage@msg+1,w,c
  8888  001E30  22DA               	addwfc	fsr2h,f,c
  8889  001E32  CF6B FFDF          	movff	3947,indf2	;volatile
  8890                           
  8891                           ; BSR set to: 15
  8892                           ;CANlib.h: 596: msg->data[6] =RXB0D6;
  8893  001E36  EE20 F00A          	lfsr	2,10
  8894  001E3A  502A               	movf	CANreceiveMessage@msg,w,c
  8895  001E3C  26D9               	addwf	fsr2l,f,c
  8896  001E3E  502B               	movf	CANreceiveMessage@msg+1,w,c
  8897  001E40  22DA               	addwfc	fsr2h,f,c
  8898  001E42  CF6C FFDF          	movff	3948,indf2	;volatile
  8899                           
  8900                           ; BSR set to: 15
  8901                           ;CANlib.h: 597: msg->data[7] =RXB0D7;
  8902  001E46  EE20 F00B          	lfsr	2,11
  8903  001E4A  502A               	movf	CANreceiveMessage@msg,w,c
  8904  001E4C  26D9               	addwf	fsr2l,f,c
  8905  001E4E  502B               	movf	CANreceiveMessage@msg+1,w,c
  8906  001E50  22DA               	addwfc	fsr2h,f,c
  8907  001E52  CF6D FFDF          	movff	3949,indf2	;volatile
  8908                           
  8909                           ; BSR set to: 15
  8910                           ;CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8911  001E56  EE20 F00E          	lfsr	2,14
  8912  001E5A  502A               	movf	CANreceiveMessage@msg,w,c
  8913  001E5C  26D9               	addwf	fsr2l,f,c
  8914  001E5E  502B               	movf	CANreceiveMessage@msg+1,w,c
  8915  001E60  22DA               	addwfc	fsr2h,f,c
  8916  001E62  AC65               	btfss	3941,6,c	;volatile
  8917  001E64  D002               	goto	i1u396_20
  8918  001E66  0E01               	movlw	1
  8919  001E68  D001               	goto	i1u396_26
  8920  001E6A                     i1u396_20:
  8921  001E6A  0E00               	movlw	0
  8922  001E6C                     i1u396_26:
  8923  001E6C  6EDF               	movwf	indf2,c
  8924                           
  8925                           ; BSR set to: 15
  8926                           ;CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8927  001E6E  EE20 F00D          	lfsr	2,13
  8928  001E72  502A               	movf	CANreceiveMessage@msg,w,c
  8929  001E74  26D9               	addwf	fsr2l,f,c
  8930  001E76  502B               	movf	CANreceiveMessage@msg+1,w,c
  8931  001E78  22DA               	addwfc	fsr2h,f,c
  8932  001E7A  5065               	movf	3941,w,c	;volatile
  8933  001E7C  0B0F               	andlw	15
  8934  001E7E  6EDF               	movwf	indf2,c
  8935                           
  8936                           ; BSR set to: 15
  8937                           ;CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8938  001E80  EE20 F00C          	lfsr	2,12
  8939  001E84  502A               	movf	CANreceiveMessage@msg,w,c
  8940  001E86  26D9               	addwf	fsr2l,f,c
  8941  001E88  502B               	movf	CANreceiveMessage@msg+1,w,c
  8942  001E8A  22DA               	addwfc	fsr2h,f,c
  8943  001E8C  A662               	btfss	3938,3,c	;volatile
  8944  001E8E  D002               	goto	i1u397_20
  8945  001E90  0E01               	movlw	1
  8946  001E92  D001               	goto	i1u397_26
  8947  001E94                     i1u397_20:
  8948  001E94  0E00               	movlw	0
  8949  001E96                     i1u397_26:
  8950  001E96  6EDF               	movwf	indf2,c
  8951                           
  8952                           ; BSR set to: 15
  8953                           ;CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8954  001E98  B662               	btfsc	3938,3,c	;volatile
  8955  001E9A  D047               	goto	i1l3523
  8956                           
  8957                           ; BSR set to: 15
  8958                           ;CANlib.h: 606: {
  8959                           ;CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8960  001E9C  CF61 F02C          	movff	3937,??_CANreceiveMessage	;volatile
  8961  001EA0  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8962  001EA2  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8963  001EA4  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8964  001EA6  0E03               	movlw	3
  8965  001EA8                     i1u399_25:
  8966  001EA8  90D8               	bcf	status,0,c
  8967  001EAA  362C               	rlcf	??_CANreceiveMessage,f,c
  8968  001EAC  362D               	rlcf	??_CANreceiveMessage+1,f,c
  8969  001EAE  362E               	rlcf	??_CANreceiveMessage+2,f,c
  8970  001EB0  362F               	rlcf	??_CANreceiveMessage+3,f,c
  8971  001EB2  2EE8               	decfsz	wreg,f,c
  8972  001EB4  D7F9               	goto	i1u399_25
  8973  001EB6  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8974  001EBA  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8975  001EBE  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  8976  001EC2  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8977  001EC6  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8978  001ECA  C02F  FFDD         	movff	??_CANreceiveMessage+3,postdec2
  8979  001ECE  06D9               	decf	fsr2l,f,c
  8980  001ED0  06D9               	decf	fsr2l,f,c
  8981                           
  8982                           ; BSR set to: 15
  8983                           ;CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8984  001ED2  3862               	swapf	3938,w,c	;volatile
  8985  001ED4  42E8               	rrncf	wreg,f,c
  8986  001ED6  0B07               	andlw	7
  8987  001ED8  0B07               	andlw	7
  8988  001EDA  6E35               	movwf	CANreceiveMessage@tamp,c
  8989                           
  8990                           ; BSR set to: 15
  8991                           ;CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8992  001EDC  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8993  001EE0  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8994  001EE4  CFDE F02C          	movff	postinc2,??_CANreceiveMessage
  8995  001EE8  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+1
  8996  001EEC  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+2
  8997  001EF0  CFDE F02F          	movff	postinc2,??_CANreceiveMessage+3
  8998  001EF4  5035               	movf	CANreceiveMessage@tamp,w,c
  8999  001EF6  242C               	addwf	??_CANreceiveMessage,w,c
  9000  001EF8  6E30               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  9001  001EFA  0E00               	movlw	0
  9002  001EFC  202D               	addwfc	??_CANreceiveMessage+1,w,c
  9003  001EFE  6E31               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  9004  001F00  0E00               	movlw	0
  9005  001F02  202E               	addwfc	??_CANreceiveMessage+2,w,c
  9006  001F04  6E32               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  9007  001F06  0E00               	movlw	0
  9008  001F08  202F               	addwfc	??_CANreceiveMessage+3,w,c
  9009  001F0A  6E33               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  9010  001F0C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9011  001F10  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9012  001F14  C030  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  9013  001F18  C031  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  9014  001F1C  C032  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  9015  001F20  C033  FFDD         	movff	??_CANreceiveMessage+7,postdec2
  9016  001F24  06D9               	decf	fsr2l,f,c
  9017  001F26  06D9               	decf	fsr2l,f,c
  9018                           
  9019                           ;CANlib.h: 610: }
  9020  001F28  D070               	goto	i1l3547
  9021  001F2A                     i1l3523:
  9022                           
  9023                           ; BSR set to: 15
  9024                           ;CANlib.h: 611: else
  9025                           ;CANlib.h: 612: {
  9026                           ;CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  9027  001F2A  CF64 F02C          	movff	3940,??_CANreceiveMessage	;volatile
  9028  001F2E  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9029  001F30  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9030  001F32  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9031  001F34  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9032  001F38  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9033  001F3C  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  9034  001F40  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9035  001F44  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9036  001F48  C02F  FFDD         	movff	??_CANreceiveMessage+3,postdec2
  9037  001F4C  06D9               	decf	fsr2l,f,c
  9038  001F4E  06D9               	decf	fsr2l,f,c
  9039                           
  9040                           ; BSR set to: 15
  9041                           ;CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  9042  001F50  CF63 F02C          	movff	3939,??_CANreceiveMessage	;volatile
  9043  001F54  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9044  001F56  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9045  001F58  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9046  001F5A  C02E  F02F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  9047  001F5E  C02D  F02E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  9048  001F62  C02C  F02D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  9049  001F66  6A2C               	clrf	??_CANreceiveMessage,c
  9050  001F68  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9051  001F6C  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9052  001F70  502C               	movf	??_CANreceiveMessage,w,c
  9053  001F72  26DE               	addwf	postinc2,f,c
  9054  001F74  502D               	movf	??_CANreceiveMessage+1,w,c
  9055  001F76  22DE               	addwfc	postinc2,f,c
  9056  001F78  502E               	movf	??_CANreceiveMessage+2,w,c
  9057  001F7A  22DE               	addwfc	postinc2,f,c
  9058  001F7C  502F               	movf	??_CANreceiveMessage+3,w,c
  9059  001F7E  22DD               	addwfc	postdec2,f,c
  9060  001F80  52DD               	movf	postdec2,f,c
  9061  001F82  52DD               	movf	postdec2,f,c
  9062                           
  9063                           ; BSR set to: 15
  9064                           ;CANlib.h: 616: if (RXB0SIDLbits.EID16)
  9065  001F84  A062               	btfss	3938,0,c	;volatile
  9066  001F86  D006               	goto	i1l3531
  9067                           
  9068                           ; BSR set to: 15
  9069                           ;CANlib.h: 617: msg->identifier |= 0x00010000;
  9070  001F88  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9071  001F8C  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9072  001F90  0E02               	movlw	2
  9073  001F92  80DB               	bsf	plusw2,0,c
  9074  001F94                     i1l3531:
  9075                           
  9076                           ; BSR set to: 15
  9077                           ;CANlib.h: 618: if (RXB0SIDLbits.EID17)
  9078  001F94  A262               	btfss	3938,1,c	;volatile
  9079  001F96  D006               	goto	i1l3535
  9080                           
  9081                           ; BSR set to: 15
  9082                           ;CANlib.h: 619: msg->identifier |= 0x00020000;
  9083  001F98  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9084  001F9C  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9085  001FA0  0E02               	movlw	2
  9086  001FA2  82DB               	bsf	plusw2,1,c
  9087  001FA4                     i1l3535:
  9088                           
  9089                           ; BSR set to: 15
  9090                           ;CANlib.h: 620: if (RXB0SIDLbits.SID0)
  9091  001FA4  AA62               	btfss	3938,5,c	;volatile
  9092  001FA6  D006               	goto	i1l3539
  9093                           
  9094                           ; BSR set to: 15
  9095                           ;CANlib.h: 621: msg->identifier |= 0x00040000;
  9096  001FA8  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9097  001FAC  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9098  001FB0  0E02               	movlw	2
  9099  001FB2  84DB               	bsf	plusw2,2,c
  9100  001FB4                     i1l3539:
  9101                           
  9102                           ; BSR set to: 15
  9103                           ;CANlib.h: 622: if (RXB0SIDLbits.SID1)
  9104  001FB4  AC62               	btfss	3938,6,c	;volatile
  9105  001FB6  D006               	goto	i1l3543
  9106                           
  9107                           ; BSR set to: 15
  9108                           ;CANlib.h: 623: msg->identifier |= 0x00080000;
  9109  001FB8  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9110  001FBC  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9111  001FC0  0E02               	movlw	2
  9112  001FC2  86DB               	bsf	plusw2,3,c
  9113  001FC4                     i1l3543:
  9114                           
  9115                           ; BSR set to: 15
  9116                           ;CANlib.h: 624: if (RXB0SIDLbits.SID2)
  9117  001FC4  AE62               	btfss	3938,7,c	;volatile
  9118  001FC6  D006               	goto	i1l430
  9119                           
  9120                           ; BSR set to: 15
  9121                           ;CANlib.h: 625: msg->identifier |= 0x00100000;
  9122  001FC8  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9123  001FCC  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9124  001FD0  0E02               	movlw	2
  9125  001FD2  88DB               	bsf	plusw2,4,c
  9126  001FD4                     i1l430:
  9127                           
  9128                           ; BSR set to: 15
  9129                           ;CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  9130  001FD4  CF61 F02C          	movff	3937,??_CANreceiveMessage	;volatile
  9131  001FD8  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9132  001FDA  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9133  001FDC  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9134  001FDE  0E15               	movlw	21
  9135  001FE0                     i1u405_25:
  9136  001FE0  90D8               	bcf	status,0,c
  9137  001FE2  362C               	rlcf	??_CANreceiveMessage,f,c
  9138  001FE4  362D               	rlcf	??_CANreceiveMessage+1,f,c
  9139  001FE6  362E               	rlcf	??_CANreceiveMessage+2,f,c
  9140  001FE8  362F               	rlcf	??_CANreceiveMessage+3,f,c
  9141  001FEA  2EE8               	decfsz	wreg,f,c
  9142  001FEC  D7F9               	goto	i1u405_25
  9143  001FEE  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9144  001FF2  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9145  001FF6  502C               	movf	??_CANreceiveMessage,w,c
  9146  001FF8  12DE               	iorwf	postinc2,f,c
  9147  001FFA  502D               	movf	??_CANreceiveMessage+1,w,c
  9148  001FFC  12DE               	iorwf	postinc2,f,c
  9149  001FFE  502E               	movf	??_CANreceiveMessage+2,w,c
  9150  002000  12DE               	iorwf	postinc2,f,c
  9151  002002  502F               	movf	??_CANreceiveMessage+3,w,c
  9152  002004  12DD               	iorwf	postdec2,f,c
  9153  002006  52DD               	movf	postdec2,f,c
  9154  002008  52DD               	movf	postdec2,f,c
  9155  00200A                     i1l3547:
  9156                           
  9157                           ; BSR set to: 15
  9158                           ;CANlib.h: 629: }
  9159                           ;CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  9160  00200A  9E60               	bcf	3936,7,c	;volatile
  9161  00200C                     i1l422:
  9162                           
  9163                           ; BSR set to: 15
  9164  00200C  0012               	return	
  9165  00200E                     __end_of_CANreceiveMessage:
  9166                           	opt stack 0
  9167                           pclatu	equ	0xFFB
  9168                           pclath	equ	0xFFA
  9169                           tblptru	equ	0xFF8
  9170                           tblptrh	equ	0xFF7
  9171                           tblptrl	equ	0xFF6
  9172                           tablat	equ	0xFF5
  9173                           prodh	equ	0xFF4
  9174                           prodl	equ	0xFF3
  9175                           intcon	equ	0xFF2
  9176                           intcon2	equ	0xFF1
  9177                           postinc0	equ	0xFEE
  9178                           fsr0h	equ	0xFEA
  9179                           fsr0l	equ	0xFE9
  9180                           wreg	equ	0xFE8
  9181                           indf1	equ	0xFE7
  9182                           fsr1h	equ	0xFE2
  9183                           fsr1l	equ	0xFE1
  9184                           bsr	equ	0xFE0
  9185                           indf2	equ	0xFDF
  9186                           postinc2	equ	0xFDE
  9187                           postdec2	equ	0xFDD
  9188                           plusw2	equ	0xFDB
  9189                           fsr2h	equ	0xFDA
  9190                           fsr2l	equ	0xFD9
  9191                           status	equ	0xFD8
  9192                           
  9193 ;; *************** function _CANisRxReady *****************
  9194 ;; Defined at:
  9195 ;;		line 1163 in file "CANlib.h"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;		None
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;		None
  9200 ;; Return value:  Size  Location     Type
  9201 ;;                  1    wreg      unsigned char 
  9202 ;; Registers used:
  9203 ;;		wreg, status,2
  9204 ;; Tracked objects:
  9205 ;;		On entry : 0/0
  9206 ;;		On exit  : 0/0
  9207 ;;		Unchanged: 0/0
  9208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9209 ;;      Params:         0       0       0       0
  9210 ;;      Locals:         1       0       0       0
  9211 ;;      Temps:          0       0       0       0
  9212 ;;      Totals:         1       0       0       0
  9213 ;;Total ram usage:        1 bytes
  9214 ;; Hardware stack levels used:    1
  9215 ;; Hardware stack levels required when called:    1
  9216 ;; This function calls:
  9217 ;;		Nothing
  9218 ;; This function is called by:
  9219 ;;		_ISR_bassa
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223                           	psect	text22
  9224  002B9C                     __ptext22:
  9225                           	opt stack 0
  9226  002B9C                     _CANisRxReady:
  9227                           	opt stack 25
  9228                           
  9229                           ;CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  9230                           
  9231                           ; BSR set to: 15
  9232                           ;incstack = 0
  9233  002B9C  0E01               	movlw	1
  9234  002B9E  6E2A               	movwf	_CANisRxReady$3035,c
  9235  002BA0  BE60               	btfsc	3936,7,c	;volatile
  9236  002BA2  D005               	goto	i1l565
  9237  002BA4  010F               	movlb	15	; () banked
  9238  002BA6  BF50               	btfsc	80,7,b	;volatile
  9239  002BA8  D002               	goto	i1l565
  9240                           
  9241                           ; BSR set to: 15
  9242  002BAA  0E00               	movlw	0
  9243  002BAC  6E2A               	movwf	_CANisRxReady$3035,c
  9244  002BAE                     i1l565:
  9245  002BAE  502A               	movf	_CANisRxReady$3035,w,c
  9246  002BB0  0012               	return	
  9247  002BB2                     __end_of_CANisRxReady:
  9248                           	opt stack 0
  9249                           pclatu	equ	0xFFB
  9250                           pclath	equ	0xFFA
  9251                           tblptru	equ	0xFF8
  9252                           tblptrh	equ	0xFF7
  9253                           tblptrl	equ	0xFF6
  9254                           tablat	equ	0xFF5
  9255                           prodh	equ	0xFF4
  9256                           prodl	equ	0xFF3
  9257                           intcon	equ	0xFF2
  9258                           intcon2	equ	0xFF1
  9259                           postinc0	equ	0xFEE
  9260                           fsr0h	equ	0xFEA
  9261                           fsr0l	equ	0xFE9
  9262                           wreg	equ	0xFE8
  9263                           indf1	equ	0xFE7
  9264                           fsr1h	equ	0xFE2
  9265                           fsr1l	equ	0xFE1
  9266                           bsr	equ	0xFE0
  9267                           indf2	equ	0xFDF
  9268                           postinc2	equ	0xFDE
  9269                           postdec2	equ	0xFDD
  9270                           plusw2	equ	0xFDB
  9271                           fsr2h	equ	0xFDA
  9272                           fsr2l	equ	0xFD9
  9273                           status	equ	0xFD8
  9274                           
  9275 ;; *************** function _ISR_alta *****************
  9276 ;; Defined at:
  9277 ;;		line 86 in file "motore.c"
  9278 ;; Parameters:    Size  Location     Type
  9279 ;;		None
  9280 ;; Auto vars:     Size  Location     Type
  9281 ;;		None
  9282 ;; Return value:  Size  Location     Type
  9283 ;;		None               void
  9284 ;; Registers used:
  9285 ;;		None
  9286 ;; Tracked objects:
  9287 ;;		On entry : 0/0
  9288 ;;		On exit  : 0/0
  9289 ;;		Unchanged: 0/0
  9290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9291 ;;      Params:         0       0       0       0
  9292 ;;      Locals:         0       0       0       0
  9293 ;;      Temps:          0      14       0       0
  9294 ;;      Totals:         0      14       0       0
  9295 ;;Total ram usage:       14 bytes
  9296 ;; Hardware stack levels used:    1
  9297 ;; This function calls:
  9298 ;;		Nothing
  9299 ;; This function is called by:
  9300 ;;		Interrupt level 2
  9301 ;; This function uses a non-reentrant model
  9302 ;;
  9303                           
  9304                           	psect	intcode
  9305  000008                     __pintcode:
  9306                           	opt stack 0
  9307  000008                     _ISR_alta:
  9308                           	opt stack 25
  9309                           
  9310                           ;incstack = 0
  9311  000008  CFFA F093          	movff	pclath,??_ISR_alta
  9312  00000C  CFFB F094          	movff	pclatu,??_ISR_alta+1
  9313  000010  CFE9 F095          	movff	fsr0l,??_ISR_alta+2
  9314  000014  EDA6  F014         	call	int_func,f	;refresh shadow registers
  9315                           pclatu	equ	0xFFB
  9316                           pclath	equ	0xFFA
  9317                           tblptru	equ	0xFF8
  9318                           tblptrh	equ	0xFF7
  9319                           tblptrl	equ	0xFF6
  9320                           tablat	equ	0xFF5
  9321                           prodh	equ	0xFF4
  9322                           prodl	equ	0xFF3
  9323                           intcon	equ	0xFF2
  9324                           intcon2	equ	0xFF1
  9325                           postinc0	equ	0xFEE
  9326                           fsr0h	equ	0xFEA
  9327                           fsr0l	equ	0xFE9
  9328                           wreg	equ	0xFE8
  9329                           indf1	equ	0xFE7
  9330                           fsr1h	equ	0xFE2
  9331                           fsr1l	equ	0xFE1
  9332                           bsr	equ	0xFE0
  9333                           indf2	equ	0xFDF
  9334                           postinc2	equ	0xFDE
  9335                           postdec2	equ	0xFDD
  9336                           plusw2	equ	0xFDB
  9337                           fsr2h	equ	0xFDA
  9338                           fsr2l	equ	0xFD9
  9339                           status	equ	0xFD8
  9340                           
  9341                           	psect	intcode_body
  9342  00294C                     __pintcode_body:
  9343                           	opt stack 25
  9344  00294C                     int_func:
  9345                           	opt stack 25
  9346  00294C  0006               	pop		; remove dummy address from shadow register refresh
  9347  00294E  CFEA F096          	movff	fsr0h,??_ISR_alta+3
  9348  002952  CFE1 F097          	movff	fsr1l,??_ISR_alta+4
  9349  002956  CFE2 F098          	movff	fsr1h,??_ISR_alta+5
  9350  00295A  CFD9 F099          	movff	fsr2l,??_ISR_alta+6
  9351  00295E  CFDA F09A          	movff	fsr2h,??_ISR_alta+7
  9352  002962  CFF3 F09B          	movff	prodl,??_ISR_alta+8
  9353  002966  CFF4 F09C          	movff	prodh,??_ISR_alta+9
  9354  00296A  CFF6 F09D          	movff	tblptrl,??_ISR_alta+10
  9355  00296E  CFF7 F09E          	movff	tblptrh,??_ISR_alta+11
  9356  002972  CFF8 F09F          	movff	tblptru,??_ISR_alta+12
  9357  002976  CFF5 F0A0          	movff	tablat,??_ISR_alta+13
  9358  00297A  C0A0  FFF5         	movff	??_ISR_alta+13,tablat
  9359  00297E  C09F  FFF8         	movff	??_ISR_alta+12,tblptru
  9360  002982  C09E  FFF7         	movff	??_ISR_alta+11,tblptrh
  9361  002986  C09D  FFF6         	movff	??_ISR_alta+10,tblptrl
  9362  00298A  C09C  FFF4         	movff	??_ISR_alta+9,prodh
  9363  00298E  C09B  FFF3         	movff	??_ISR_alta+8,prodl
  9364  002992  C09A  FFDA         	movff	??_ISR_alta+7,fsr2h
  9365  002996  C099  FFD9         	movff	??_ISR_alta+6,fsr2l
  9366  00299A  C098  FFE2         	movff	??_ISR_alta+5,fsr1h
  9367  00299E  C097  FFE1         	movff	??_ISR_alta+4,fsr1l
  9368  0029A2  C096  FFEA         	movff	??_ISR_alta+3,fsr0h
  9369  0029A6  C095  FFE9         	movff	??_ISR_alta+2,fsr0l
  9370  0029AA  C094  FFFB         	movff	??_ISR_alta+1,pclatu
  9371  0029AE  C093  FFFA         	movff	??_ISR_alta,pclath
  9372  0029B2  0011               	retfie		f
  9373  0029B4                     __end_of_ISR_alta:
  9374                           	opt stack 0
  9375  0000                     pclatu	equ	0xFFB
  9376                           pclath	equ	0xFFA
  9377                           tblptru	equ	0xFF8
  9378                           tblptrh	equ	0xFF7
  9379                           tblptrl	equ	0xFF6
  9380                           tablat	equ	0xFF5
  9381                           prodh	equ	0xFF4
  9382                           prodl	equ	0xFF3
  9383                           intcon	equ	0xFF2
  9384                           intcon2	equ	0xFF1
  9385                           postinc0	equ	0xFEE
  9386                           fsr0h	equ	0xFEA
  9387                           fsr0l	equ	0xFE9
  9388                           wreg	equ	0xFE8
  9389                           indf1	equ	0xFE7
  9390                           fsr1h	equ	0xFE2
  9391                           fsr1l	equ	0xFE1
  9392                           bsr	equ	0xFE0
  9393                           indf2	equ	0xFDF
  9394                           postinc2	equ	0xFDE
  9395                           postdec2	equ	0xFDD
  9396                           plusw2	equ	0xFDB
  9397                           fsr2h	equ	0xFDA
  9398                           fsr2l	equ	0xFD9
  9399                           status	equ	0xFD8
  9400                           pclatu	equ	0xFFB
  9401                           pclath	equ	0xFFA
  9402                           tblptru	equ	0xFF8
  9403                           tblptrh	equ	0xFF7
  9404                           tblptrl	equ	0xFF6
  9405                           tablat	equ	0xFF5
  9406                           prodh	equ	0xFF4
  9407                           prodl	equ	0xFF3
  9408                           intcon	equ	0xFF2
  9409                           intcon2	equ	0xFF1
  9410                           postinc0	equ	0xFEE
  9411                           fsr0h	equ	0xFEA
  9412                           fsr0l	equ	0xFE9
  9413                           wreg	equ	0xFE8
  9414                           indf1	equ	0xFE7
  9415                           fsr1h	equ	0xFE2
  9416                           fsr1l	equ	0xFE1
  9417                           bsr	equ	0xFE0
  9418                           indf2	equ	0xFDF
  9419                           postinc2	equ	0xFDE
  9420                           postdec2	equ	0xFDD
  9421                           plusw2	equ	0xFDB
  9422                           fsr2h	equ	0xFDA
  9423                           fsr2l	equ	0xFD9
  9424                           status	equ	0xFD8
  9425                           
  9426                           	psect	param0
  9427  0000                     pclatu	equ	0xFFB
  9428                           pclath	equ	0xFFA
  9429                           tblptru	equ	0xFF8
  9430                           tblptrh	equ	0xFF7
  9431                           tblptrl	equ	0xFF6
  9432                           tablat	equ	0xFF5
  9433                           prodh	equ	0xFF4
  9434                           prodl	equ	0xFF3
  9435                           intcon	equ	0xFF2
  9436                           intcon2	equ	0xFF1
  9437                           postinc0	equ	0xFEE
  9438                           fsr0h	equ	0xFEA
  9439                           fsr0l	equ	0xFE9
  9440                           wreg	equ	0xFE8
  9441                           indf1	equ	0xFE7
  9442                           fsr1h	equ	0xFE2
  9443                           fsr1l	equ	0xFE1
  9444                           bsr	equ	0xFE0
  9445                           indf2	equ	0xFDF
  9446                           postinc2	equ	0xFDE
  9447                           postdec2	equ	0xFDD
  9448                           plusw2	equ	0xFDB
  9449                           fsr2h	equ	0xFDA
  9450                           fsr2l	equ	0xFD9
  9451                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         92
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      72
    BANK0           160     49     102
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array1(COMRAM[8]), data_array(BANK0[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _delay_ms->___wmul
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->_CANsendMessage
    ___wmul->___awdiv

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   26282
                                             40 BANK0      9     9      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___awdiv
                             ___wmul
                                _abs
                    _battery_measure
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            1     1      0    4524
                                             30 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     978
                                             28 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    7960
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    7960
                                             28 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1740
                                             14 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5220
                                             14 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0    5981
                       _CANisTxReady
                     _CANsendMessage
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     622
                                             22 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     965
                                             14 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4357
                                             14 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      37
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     158
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _SetOutputEPWM1                                       2     1      1     316
                                             14 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _SetDCEPWM1                                           6     4      2     294
                                             14 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      62
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      31
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           17    17      0    1150
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1126
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_alta                                            14    14      0       0
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   ___awdiv
   ___wmul
     ___awdiv (ARG)
   _abs
   _battery_measure
     _CANisTxReady
     _CANsendMessage
     ___awdiv
     ___wmul
       ___awdiv (ARG)
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul
       ___awdiv (ARG)
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_alta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     31      66       4       63.8%
BITCOMRAM           5F      0       2       0        2.1%
COMRAM              5F     1D      48       1       75.8%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AE       9        0.0%
DATA                 0      0      AE      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Jan 25 12:14:16 2016

              ??_CANisTXwarningON 00A1              __end_of_CANSetFilter 0DBA  
                    ___awdiv@sign 00A6                                _id 0005  
                              bsr 000FE0               ___wmul@multiplicand 00AB  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 29B4  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000              _previousTimeCounter1 0074  
            _previousTimeCounter2 0078                               l400 140E  
                             l401 1418                               l402 1422  
                             l403 142C                               l500 0AB0  
                             l501 0AB4                               l406 1560  
                             l502 0AC0                               l407 1564  
                             l511 0BE8                               l503 0AC4  
                             l408 1570                               l512 0BEC  
                             l504 0AD0                               l440 2262  
                             l513 0BF8                               l505 0AD4  
                             l441 2266                               l370 0EE8  
                             l530 0D60                               l522 0D20  
                             l514 0BFC                               l506 0AE0  
                             l450 238A                               l442 2272  
                             l362 24E0                               l371 0E6A  
                             l523 0D24                               l515 0C08  
                             l507 0AE4                               l451 2396  
                             l443 2276                               l363 24EA  
                             l372 0E74                               l524 0D30  
                             l532 0DB8                               l516 0C0C  
                             l508 0AF0                               l452 239A  
                             l444 2282                               l436 2242  
                             l381 162E                               l373 0E7E  
                             l525 0D34                               l517 0C18  
                             l453 23A6                               l437 2246  
                             l550 2BDA                               l382 135E  
                             l374 0E88                               l526 0D40  
                             l518 0C1C                               l470 071E  
                             l454 23AA                               l438 2252  
                             l383 10A2                               l367 108C  
                             l527 0D44                               l519 0C28  
                             l471 072A                               l455 23B6  
                             l447 2376                               l439 2256  
                             l560 2B5E                               l392 128E  
                             l384 10A6                               l368 0DD0  
                             l528 0D50                               l480 0850  
                             l472 072E                               l448 237A  
                             l712 2720                               l393 1292  
                             l385 11BA                               l377 0FBC  
                             l369 0DD4                               l529 0D54  
                             l481 0854                               l473 073A  
                             l449 2386                               l457 240E  
                             l713 271C                               l394 129E  
                             l386 113C                               l378 0FC0  
                             l490 097C                               l482 0860  
                             l474 073E                               l547 2BCE  
                             l387 1146                               l379 0FCC  
                             l491 0988                               l483 0864  
                             l475 074A                               l467 070A  
                             l707 26EE                               l388 1150  
                             l492 098C                               l484 0870  
                             l468 070E                               l397 1374  
                             l389 115A                               l725 28B0  
                             l493 0998                               l485 0874  
                             l469 071A                               l573 2AFE  
                             l709 268E                               l398 1378  
                             l718 280A                               l494 099C  
                             l486 0880                               l478 0840  
                             l823 2A84                               l399 148C  
                             l495 09A8                               l479 0844  
                             l824 2A8C                               l496 09AC  
                             l497 09B8                               l489 0978  
                             l681 195A                               l682 194E  
                             l771 2B80                               l772 2B82  
                             l757 29FC                               l758 2A04  
                             l689 19BE                      __CFG_CPB$OFF 000000  
                             _PR2 000FCB                      __CFG_CPD$OFF 000000  
                             _id1 0009                               _abs 2A4E  
                             _dir 0080                               _msg 0013  
                             fsr2 000FD9                               prod 000FF3  
                             wreg 000FE8                      __CFG_LVP$OFF 000000  
                    __CFG_WDT$OFF 000000                              ?_abs 00A1  
                            l4011 22DA                              l4005 2286  
                            l4115 04CE                              l5011 1AB8  
                            l4213 0884                              l4133 059E  
                            l4061 0260                              l4037 23BA  
                            l5005 1A96                              l4151 066E  
                            l4321 0C80                              l4401 2538  
                            l5009 1AA8                              l4315 0C2C  
                            l4219 08D8                              l4253 0A10  
                            l4247 09BC                              l4079 032E  
                            l4281 0AF4                              l4185 07A2  
                            l4097 03FE                              l4611 1554  
                            l4515 1164                              l4179 074E  
                            l4541 12A2                              l4349 0D64  
                            l4535 1282                              l4439 0E92  
                            l4287 0B48                              l4617 1574  
                            l4465 0FD0                              l4393 24D8  
                            l4459 0FB0                              l4709 2AF0  
                            l4591 1436                              l4663 2754  
                            l4399 24F6                              l4833 29EA  
                            l3945 2B8E                              l4675 279A  
                            l4691 27EA                              l3963 20DC  
                            l4829 29DA                              l4677 27A6  
                            l4669 277C                              l4853 2650  
                            l4917 1694                              l4695 27FE  
                            l4687 27DC                              l4679 27AC  
                            l4935 16CC                              l4927 16B2  
                            l4857 2682                              l4883 286E  
                            l3979 21A8                              l4867 26B4  
                            l4963 18FE                              l4971 196C  
                            l4939 16D6                              l4973 197C  
                            l4983 19AA                              l4977 1986  
                            l4995 1A6E                              l4987 19C0  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u5000 036C  
                            u5005 0360                              u5015 03DA  
                            u6000 145E                              u5120 05DC  
                            u5040 043C                              u6010 14B8  
                            u5210 0776                              u6005 1452  
                            u5125 05D0                              u5045 0430  
                            u6015 14AC                              u5215 076A  
                            u5135 064A                              u5055 04AA  
                            u5080 050C                              u6025 1526  
                            u6140 2BCC                              u5085 0500  
                            u6150 2BD8                              u5095 057A  
                            u4720 2116                              u5610 0D8C  
                            u5530 0C54                              u5450 0B1C  
                            u5370 09E4                              u5290 08AC  
                            u4810 22AE                              u6235 2A14  
                            u4725 210A                              u5615 0D80  
                            u5535 0C48                              u5455 0B10  
                            u5375 09D8                              u5295 08A0  
                            u4815 22A2                              u4735 2184  
                            u4920 01CE                              u4680 204A  
                            u5740 0EBA                              u4925 01C2  
                            u4685 203E                              u5750 0F14  
                            u4935 023C                              u4695 20B8  
                            u4960 029C                              u5745 0EAE  
                            u6617 2AF2                              u4890 23E2  
                            u5755 0F08                              u5765 0F82  
                            u4965 0290                              u5870 118C  
                            u4975 030A                              u4895 23D6  
                            u5880 11E6                              u5875 1180  
                            u5885 11DA                              u5895 1254  
                            _TMR2 000FCC               __size_of_CANSetMask 0402  
                            abs@a 00A1                              _main 1630  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 018C  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                _CANOperationMode 2B86            __end_of_SetOutputEPWM1 2A06  
                           ??_abs 00A3        __size_of_CANreceiveMessage 04D4  
                           ?_main 002A                   __end_of___awdiv 2808  
                 ___awdiv@divisor 00A3                             _T2CON 000FCA  
                           _T3CON 000FB1                             i1l421 1D84  
                           i1l430 1FD4                             i1l422 200C  
                           i1l414 1DC2                             i1l565 2BAE  
                           i1l670 0146                             i1l665 0102  
                           i1l666 0128                             i1l658 012C  
                           i1l667 0108                             i1l668 010E  
                 ___awdiv@counter 00A5                             _TMR3H 000FB3  
                           _TMR3L 000FB2                             _PORTD 000F83  
               _CANisRxReady$3035 002A                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                __size_of_ISR_bassa 0174  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                CANInitialize@flags 00B3  
                __end_of_ISR_alta 29B4                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _vBatt 0084  
                  __pbitbssCOMRAM 0238              __end_of_CANisRxReady 2BB2  
                           tablat 000FF5              __end_of_CANisTxReady 2B64  
                           plusw2 000FDB                             status 000FD8  
                  __CFG_PBADEN$ON 000000                        _SetDCEPWM1 2A06  
                 __initialization 2A8E          __size_of_battery_measure 00AA  
                    __end_of_main 1B3A                   ?_SetOutputEPWM1 00A1  
                          ??_main 00BB                     __activetblptr 000002  
               _CANisTxReady$3033 00A1                     _counter_array 0060  
                          _CANCON 000F6F                            _ADRESH 000FC4  
                ___awdiv@dividend 00A1                   __CFG_BBSIZ$1024 000000  
                          i1l3531 1F94                            i1l3523 1F2A  
                          i1l3543 1FC4                            i1l3535 1FA4  
                          i1l3471 1D3C                            i1l3463 1CCC  
                          i1l3539 1FB4                            i1l3547 200A  
                          i1l3483 1D72                            i1l3475 1D4E  
                          i1l3479 1D60                            i1l3487 1DBC  
                          i1l3771 0098                            i1l3763 0064  
                          i1l3781 00D8                            i1l3791 0114  
                          i1l3775 00C4                            i1l3785 00F2  
                      _OpenTimer2 2B64                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB1D0 000F56  
                          _RXB0D4 000F6A                            _RXB1D1 000F57  
                          _RXB0D5 000F6B                            _RXB1D2 000F58  
                          _RXB0D6 000F6C                            _RXB1D3 000F59  
                          _RXB0D7 000F6D                            _RXB1D4 000F5A  
                          _RXB1D5 000F5B                            _RXB1D6 000F5C  
                          _RXB1D7 000F5D                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _TXB1D2 000F38  
                          _TXB0D6 000F4C                            _TXB1D3 000F39  
                          _TXB0D7 000F4D                            _TXB2D0 000F26  
                          _TXB1D4 000F3A                            _TXB2D1 000F27  
                          _TXB1D5 000F3B                            _TXB2D2 000F28  
                          _TXB1D6 000F3C                            _TXB2D3 000F29  
                          _TXB1D7 000F3D                            _TXB2D4 000F2A  
                          _TXB2D5 000F2B                            _TXB2D6 000F2C  
                          _TXB2D7 000F2D                CANsendMessage@data 00A5  
              CANsendMessage@tamp 00AD                  __end_of_delay_ms 2B0A  
           __size_of_CANSetFilter 0C2A                    __CFG_XINST$OFF 000000  
              __size_of_OpenEPWM1 0012                 __end_of_ISR_bassa 018C  
                          ___wmul 2B0A                         ??___awdiv 00A5  
                  __CFG_STVREN$ON 000000                      ??_CANSetMask 00A6  
                          _errore 0082                  OpenTimer2@config 00A1  
                          clear_0 2A94                            clear_1 2AA4  
                ___awdiv@quotient 00A7          ?_configurazione_iniziale 002A  
                 __CFG_BOREN$BOHW 000000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                    _CANSetFilter 0190                        __accesstop 0060  
         __end_of__initialization 2AC2                __end_of_CANSetMask 2410  
       __size_of_CANisRXwarningON 000C                       ?_SetDCEPWM1 00A1  
                  __pcstackCOMRAM 002A                      __pidataBANK0 2BDC  
                       ?_ISR_alta 002A                 ??_battery_measure 00B1  
           CANSetFilter@numBuffer 00AA                   OpenEPWM1@period 00A1  
       __size_of_CANisTXwarningON 000C             __size_of_CANisRxReady 0016  
           __size_of_CANisTxReady 0024                 __end_of_OpenEPWM1 2BC4  
        __end_of_CANOperationMode 2B9C                        __pbssBANK0 0060  
                     ?_OpenTimer2 002A                        _data_array 008B  
         __size_of_CANsendMessage 0876                           ?___wmul 00A9  
                      ??_ISR_alta 0093                __size_of_send_data 011A  
                    _CANisRxReady 2B9C                           _ECCPR1L 000FBB  
                         _CANSTAT 000F6E                      _CANisTxReady 2B40  
                         _BRGCON1 000F70                           _BRGCON2 000F71  
                         _BRGCON3 000F72            __size_of_CANInitialize 01FC  
                       ?_delay_ms 00AF                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
             __size_of_SetDCEPWM1 0048                           _RXB1CON 000F50  
                         _TXB0DLC 000F45                           _TXB1DLC 000F35  
                         _TXB2DLC 000F25               CANsendMessage@flags 00A8  
        SetOutputEPWM1@outputmode 00A1                        _correzione 007E  
                ??_SetOutputEPWM1 00A2                           __Hparam 0000  
                      _left_speed 0087                           __Lparam 0000  
                delay_ms@value_ms 00AF                           ___awdiv 2726  
                 __size_of___wmul 0036              CANInitialize@propSeg 00B8  
                         __pcinit 2A8E                           __ramtop 0300  
             __size_of_OpenTimer2 0022                           __ptext0 1630  
                         __ptext1 260C                           __ptext2 2ACC  
                         __ptext3 28B2                           __ptext4 2410  
                         __ptext5 200E                           __ptext6 0190  
                         __ptext7 2B86                           __ptext8 2808  
                         __ptext9 2B0A                           _counter 0001  
                       _T2CONbits 000FCA                      __size_of_abs 0040  
                      _duty_cycle 0011                        ??_delay_ms 00B1  
          CANreceiveMessage@error 0034                    __pintcode_body 294C  
            end_of_initialization 2AC2                 __end_of_send_data 2726  
                   __Lmediumconst 0000                           int_func 294C  
                _CANisRXwarningON 2BD0                     _CANInitialize 2410  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                         _ISR_bassa 0018  
                       _PORTAbits 000F80                    CANSetMask@mask 00A1  
                       _PORTCbits 000F82                    CANSetMask@tamp 00AB  
                  _centralina_abs 0239                    CANSetMask@type 00A5  
                _CANisTXwarningON 2BC4                         _TRISDbits 000F95  
__size_of_configurazione_iniziale 009A               _previousTimeCounter 0070  
         _clock_counter_reference 007C                    _CANsendMessage 0DBA  
                CANInitialize@BRP 00B2                  CANInitialize@SJW 00B1  
                  ?_CANInitialize 00AF                        main@period 00C3  
                    ??_SetDCEPWM1 00A3                   _battery_measure 2808  
                      ?_ISR_bassa 002A                    __end_of___wmul 2B40  
               __size_of_ISR_alta 29AC               start_initialization 2A8E  
                     __end_of_abs 2A8E                __end_of_SetDCEPWM1 2A4E  
             CANSetMask@numBuffer 00AA            __end_of_CANsendMessage 1630  
               ?_CANOperationMode 002A                      ??_OpenTimer2 00A1  
                       _OpenEPWM1 2BB2                ??_CANOperationMode 00A1  
      CANInitialize@FilterConfig1 00B9        CANInitialize@FilterConfig2 00BA  
                        ??___wmul 00AD                       __pdataBANK0 00C4  
                __CFG_LPT1OSC$OFF 000000                __end_of_OpenTimer2 2B86  
          CANInitialize@phaseSeg1 00AF            CANInitialize@phaseSeg2 00B0  
                     __pbssCOMRAM 0001                     __pcstackBANK0 0093  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
                     _data_array1 0022               SetDCEPWM1@dutycycle 00A1  
               __size_of_delay_ms 003E                   ?_CANsendMessage 00A1  
                      ?_OpenEPWM1 002A           __end_of_battery_measure 28B2  
                 ??_CANInitialize 00B4                         _can_retry 0238  
                    _currentSpeed 00C4                CANSetFilter@filter 00A1  
                       __pintcode 0008                          ?___awdiv 00A1  
                     ??_ISR_bassa 0036                       __pintcodelo 0018  
                      send_data@i 00B1                          _ECCP1CON 000FBA  
        __end_of_CANisRXwarningON 2BDC                       _COMSTATbits 000F74  
      SetOutputEPWM1@outputconfig 00A2                     _remote_frame1 023E  
         _configurazione_iniziale 28B2                      _message_sent 023C  
           CANreceiveMessage@tamp 0035                    ___wmul@product 00AD  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 00C5  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                         _send_data 260C  
                        _PIE3bits 000FA3          __end_of_CANisTXwarningON 2BD0  
                        i1u405_25 1FE0                          i1u385_20 1C02  
                        i1u385_26 1C04                          i1u386_20 1C30  
                        i1u394_25 1D92                          i1u386_26 1C32  
                        i1u396_20 1E6A                          i1u388_25 1C48  
                        i1u396_26 1E6C                          i1u397_20 1E94  
                        i1u397_26 1E96                          i1u399_25 1EA8  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _ISR_alta 0008  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                        _RXERRCNT 000F75                          _TXERRCNT 000F76  
                      _ADCON0bits 000FC2                        _ADCON1bits 000FC1  
                      _ADCON2bits 000FC0                 ___wmul@multiplier 00A9  
                   ?_CANSetFilter 00A1                       _INTCON2bits 000FF1  
                      _CANCONbits 000F6F                       ??_OpenEPWM1 00A1  
                ?_battery_measure 002A                          __Hparam0 0000  
                      ?_send_data 002A                          __Lparam0 0000  
                    _RXB0SIDLbits 000F62                  SetDCEPWM1@DCycle 00A5  
                    _RXB1SIDLbits 000F52                _centralina_comando 023A  
                      _CANSetMask 200E                  __size_of___awdiv 00E2  
         __size_of_SetOutputEPWM1 0052                _currentSpeed_array 0068  
       ??_configurazione_iniziale 00BB                      _RXF0SIDLbits 000F01  
                        _delay_ms 2ACC                      _RXF1SIDLbits 000F05  
                  ??_CANSetFilter 00A6                          __ptext10 2726  
                        __ptext11 0DBA                          __ptext12 2B40  
                        __ptext21 1B3A                          __ptext13 2A4E  
                        __ptext22 2B9C                          __ptext14 29B4  
                        __ptext15 2A06                          __ptext16 2B64  
                        __ptext17 2BB2                          __ptext18 2BC4  
                        __ptext19 2BD0                      _RXF2SIDLbits 000F09  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                   _speed_fetched 0240                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 00A7                      _remote_frame 023D  
                   __size_of_main 050A                          _duty_set 0086  
            CANreceiveMessage@msg 002A                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
       __size_of_CANOperationMode 0016                     ?_CANisRxReady 002A  
                   ?_CANisTxReady 002A                       _RXB0DLCbits 000F65  
                     _RXB1DLCbits 000F55                      _RXM0SIDLbits 000F19  
                     _RXB0CONbits 000F60                       _RXB1CONbits 000F50  
               _CANreceiveMessage 1B3A                      _RXM1SIDLbits 000F1D  
                      _INTCONbits 000FF2                  ??_CANsendMessage 00A9  
                    _requestSpeed 0089                ?_CANreceiveMessage 002A  
                    _request_sent 023F          CANsendMessage@identifier 00A1  
                        intlevel1 0000                          intlevel2 0000  
               _centralina_sterzo 023B                  CANSetFilter@tamp 00AB  
                CANSetFilter@type 00A5               ??_CANreceiveMessage 002C  
                     _TXB0DLCbits 000F45                       _right_speed 008A  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     ??_send_data 00B1                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 294C                       _TXB1CONbits 000F30  
                     _TXB2CONbits 000F20                       _timeCounter 000D  
            CANOperationMode@mode 00A1                    ??_CANisRxReady 002A  
                     ?_CANSetMask 00A1                    ??_CANisTxReady 00A1  
       __end_of_CANreceiveMessage 200E                 ?_CANisRXwarningON 002A  
              ??_CANisRXwarningON 00A1                       _previousPwm 0088  
           __end_of_CANInitialize 260C                 ?_CANisTXwarningON 002A  
