

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Feb 05 16:43:13 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           	psect	idataCOMRAM
    43  002894                     __pidataCOMRAM:
    44                           	opt stack 0
    45                           
    46                           ;initializer for _currentSpeed
    47  002894  0001               	dw	1
    48  002896  0000               	dw	0
    49                           
    50                           ;initializer for _dir
    51  002898  0001               	dw	1
    52                           
    53                           ;initializer for _delay_quartz_frequency_value
    54  00289A  10                 	db	16
    55  0000                     _RXB1CON	set	3920
    56  0000                     _RXB1CONbits	set	3920
    57  0000                     _RXB1D0	set	3926
    58  0000                     _RXB1D1	set	3927
    59  0000                     _RXB1D2	set	3928
    60  0000                     _RXB1D3	set	3929
    61  0000                     _RXB1D4	set	3930
    62  0000                     _RXB1D5	set	3931
    63  0000                     _RXB1D6	set	3932
    64  0000                     _RXB1D7	set	3933
    65  0000                     _RXB1DLC	set	3925
    66  0000                     _RXB1DLCbits	set	3925
    67  0000                     _RXB1EIDH	set	3923
    68  0000                     _RXB1EIDL	set	3924
    69  0000                     _RXB1SIDH	set	3921
    70  0000                     _RXB1SIDL	set	3922
    71  0000                     _RXB1SIDLbits	set	3922
    72  0000                     _RXF0EIDH	set	3842
    73  0000                     _RXF0EIDL	set	3843
    74  0000                     _RXF0SIDH	set	3840
    75  0000                     _RXF0SIDL	set	3841
    76  0000                     _RXF0SIDLbits	set	3841
    77  0000                     _RXF1EIDH	set	3846
    78  0000                     _RXF1EIDL	set	3847
    79  0000                     _RXF1SIDH	set	3844
    80  0000                     _RXF1SIDL	set	3845
    81  0000                     _RXF1SIDLbits	set	3845
    82  0000                     _RXF2EIDH	set	3850
    83  0000                     _RXF2EIDL	set	3851
    84  0000                     _RXF2SIDH	set	3848
    85  0000                     _RXF2SIDL	set	3849
    86  0000                     _RXF2SIDLbits	set	3849
    87  0000                     _RXF3EIDH	set	3854
    88  0000                     _RXF3EIDL	set	3855
    89  0000                     _RXF3SIDH	set	3852
    90  0000                     _RXF3SIDL	set	3853
    91  0000                     _RXF3SIDLbits	set	3853
    92  0000                     _RXF4EIDH	set	3858
    93  0000                     _RXF4EIDL	set	3859
    94  0000                     _RXF4SIDH	set	3856
    95  0000                     _RXF4SIDL	set	3857
    96  0000                     _RXF4SIDLbits	set	3857
    97  0000                     _RXF5EIDH	set	3862
    98  0000                     _RXF5EIDL	set	3863
    99  0000                     _RXF5SIDH	set	3860
   100  0000                     _RXF5SIDL	set	3861
   101  0000                     _RXF5SIDLbits	set	3861
   102  0000                     _RXM0EIDH	set	3866
   103  0000                     _RXM0EIDL	set	3867
   104  0000                     _RXM0SIDH	set	3864
   105  0000                     _RXM0SIDL	set	3865
   106  0000                     _RXM0SIDLbits	set	3865
   107  0000                     _RXM1EIDH	set	3870
   108  0000                     _RXM1EIDL	set	3871
   109  0000                     _RXM1SIDH	set	3868
   110  0000                     _RXM1SIDL	set	3869
   111  0000                     _RXM1SIDLbits	set	3869
   112  0000                     _TXB0CONbits	set	3904
   113  0000                     _TXB0D0	set	3910
   114  0000                     _TXB0D1	set	3911
   115  0000                     _TXB0D2	set	3912
   116  0000                     _TXB0D3	set	3913
   117  0000                     _TXB0D4	set	3914
   118  0000                     _TXB0D5	set	3915
   119  0000                     _TXB0D6	set	3916
   120  0000                     _TXB0D7	set	3917
   121  0000                     _TXB0DLC	set	3909
   122  0000                     _TXB0DLCbits	set	3909
   123  0000                     _TXB0EIDH	set	3907
   124  0000                     _TXB0EIDL	set	3908
   125  0000                     _TXB0SIDH	set	3905
   126  0000                     _TXB0SIDL	set	3906
   127  0000                     _TXB0SIDLbits	set	3906
   128  0000                     _TXB1CONbits	set	3888
   129  0000                     _TXB1D0	set	3894
   130  0000                     _TXB1D1	set	3895
   131  0000                     _TXB1D2	set	3896
   132  0000                     _TXB1D3	set	3897
   133  0000                     _TXB1D4	set	3898
   134  0000                     _TXB1D5	set	3899
   135  0000                     _TXB1D6	set	3900
   136  0000                     _TXB1D7	set	3901
   137  0000                     _TXB1DLC	set	3893
   138  0000                     _TXB1DLCbits	set	3893
   139  0000                     _TXB1EIDH	set	3891
   140  0000                     _TXB1EIDL	set	3892
   141  0000                     _TXB1SIDH	set	3889
   142  0000                     _TXB1SIDL	set	3890
   143  0000                     _TXB1SIDLbits	set	3890
   144  0000                     _TXB2CONbits	set	3872
   145  0000                     _TXB2D0	set	3878
   146  0000                     _TXB2D1	set	3879
   147  0000                     _TXB2D2	set	3880
   148  0000                     _TXB2D3	set	3881
   149  0000                     _TXB2D4	set	3882
   150  0000                     _TXB2D5	set	3883
   151  0000                     _TXB2D6	set	3884
   152  0000                     _TXB2D7	set	3885
   153  0000                     _TXB2DLC	set	3877
   154  0000                     _TXB2DLCbits	set	3877
   155  0000                     _TXB2EIDH	set	3875
   156  0000                     _TXB2EIDL	set	3876
   157  0000                     _TXB2SIDH	set	3873
   158  0000                     _TXB2SIDL	set	3874
   159  0000                     _TXB2SIDLbits	set	3874
   160  0000                     _ADCON0bits	set	4034
   161  0000                     _ADCON1bits	set	4033
   162  0000                     _ADCON2bits	set	4032
   163  0000                     _ADRESH	set	4036
   164  0000                     _BRGCON1	set	3952
   165  0000                     _BRGCON2	set	3953
   166  0000                     _BRGCON2bits	set	3953
   167  0000                     _BRGCON3	set	3954
   168  0000                     _BRGCON3bits	set	3954
   169  0000                     _CANCON	set	3951
   170  0000                     _CANCONbits	set	3951
   171  0000                     _CANSTAT	set	3950
   172  0000                     _COMSTATbits	set	3956
   173  0000                     _ECCP1CON	set	4026
   174  0000                     _ECCPR1L	set	4027
   175  0000                     _INTCONbits	set	4082
   176  0000                     _IPR2bits	set	4002
   177  0000                     _IPR3bits	set	4005
   178  0000                     _LATA	set	3977
   179  0000                     _LATB	set	3978
   180  0000                     _LATC	set	3979
   181  0000                     _LATD	set	3980
   182  0000                     _LATE	set	3981
   183  0000                     _PIE1bits	set	3997
   184  0000                     _PIE2bits	set	4000
   185  0000                     _PIE3bits	set	4003
   186  0000                     _PIR1bits	set	3998
   187  0000                     _PIR2bits	set	4001
   188  0000                     _PIR3bits	set	4004
   189  0000                     _PORTAbits	set	3968
   190  0000                     _PORTCbits	set	3970
   191  0000                     _PR2	set	4043
   192  0000                     _RCONbits	set	4048
   193  0000                     _RXB0CON	set	3936
   194  0000                     _RXB0CONbits	set	3936
   195  0000                     _RXB0D0	set	3942
   196  0000                     _RXB0D1	set	3943
   197  0000                     _RXB0D2	set	3944
   198  0000                     _RXB0D3	set	3945
   199  0000                     _RXB0D4	set	3946
   200  0000                     _RXB0D5	set	3947
   201  0000                     _RXB0D6	set	3948
   202  0000                     _RXB0D7	set	3949
   203  0000                     _RXB0DLC	set	3941
   204  0000                     _RXB0DLCbits	set	3941
   205  0000                     _RXB0EIDH	set	3939
   206  0000                     _RXB0EIDL	set	3940
   207  0000                     _RXB0SIDH	set	3937
   208  0000                     _RXB0SIDL	set	3938
   209  0000                     _RXB0SIDLbits	set	3938
   210  0000                     _RXERRCNT	set	3957
   211  0000                     _T2CON	set	4042
   212  0000                     _T2CONbits	set	4042
   213  0000                     _T3CON	set	4017
   214  0000                     _TMR2	set	4044
   215  0000                     _TMR3H	set	4019
   216  0000                     _TMR3L	set	4018
   217  0000                     _TRISA	set	3986
   218  0000                     _TRISB	set	3987
   219  0000                     _TRISC	set	3988
   220  0000                     _TRISD	set	3989
   221  0000                     _TRISDbits	set	3989
   222  0000                     _TRISE	set	3990
   223  0000                     _TXERRCNT	set	3958
   224                           
   225                           ; #config settings
   226  0000                     
   227                           	psect	cinit
   228  002690                     __pcinit:
   229                           	opt stack 0
   230  002690                     start_initialization:
   231                           	opt stack 0
   232  002690                     __initialization:
   233                           	opt stack 0
   234                           
   235                           ; Clear objects allocated to BANK0 (79 bytes)
   236  002690  EE00  F060         	lfsr	0,__pbssBANK0
   237  002694  0E4F               	movlw	79
   238  002696                     clear_0:
   239  002696  6AEE               	clrf	postinc0,c
   240  002698  06E8               	decf	wreg,f,c
   241  00269A  E1FD               	bnz	clear_0
   242                           
   243                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   244  00269C  6A3B               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   245  00269E  6A3A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   246                           
   247                           ; Clear objects allocated to COMRAM (26 bytes)
   248  0026A0  EE00  F020         	lfsr	0,__pbssCOMRAM
   249  0026A4  0E1A               	movlw	26
   250  0026A6                     clear_1:
   251  0026A6  6AEE               	clrf	postinc0,c
   252  0026A8  06E8               	decf	wreg,f,c
   253  0026AA  E1FD               	bnz	clear_1
   254                           
   255                           ; Initialize objects allocated to COMRAM (7 bytes)
   256                           ; load TBLPTR registers with __pidataCOMRAM
   257  0026AC  0E94               	movlw	low __pidataCOMRAM
   258  0026AE  6EF6               	movwf	tblptrl,c
   259  0026B0  0E28               	movlw	high __pidataCOMRAM
   260  0026B2  6EF7               	movwf	tblptrh,c
   261  0026B4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   262  0026B6  6EF8               	movwf	tblptru,c
   263  0026B8  EE00  F03C         	lfsr	0,__pdataCOMRAM
   264  0026BC  EE10 F007          	lfsr	1,7
   265  0026C0                     copy_data0:
   266  0026C0  0009               	tblrd		*+
   267  0026C2  CFF5 FFEE          	movff	tablat,postinc0
   268  0026C6  50E5               	movf	postdec1,w,c
   269  0026C8  50E1               	movf	fsr1l,w,c
   270  0026CA  E1FA               	bnz	copy_data0
   271  0026CC                     end_of_initialization:
   272                           	opt stack 0
   273  0026CC                     __end_of__initialization:
   274                           	opt stack 0
   275  0026CC  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   276  0026CE  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   277  0026D0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   278  0026D2  6EF8               	movwf	tblptru,c
   279  0026D4  0100               	movlb	0
   280  0026D6  EFB7  F00C         	goto	_main	;jump to C main() function
   281                           tblptru	equ	0xFF8
   282                           tblptrh	equ	0xFF7
   283                           tblptrl	equ	0xFF6
   284                           tablat	equ	0xFF5
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           postdec1	equ	0xFE5
   288                           fsr1l	equ	0xFE1
   289                           
   290                           	psect	bitbssCOMRAM
   291  0001D0                     __pbitbssCOMRAM:
   292                           	opt stack 0
   293  0001D0                     _can_retry:
   294                           	opt stack 0
   295  0001D0                     	ds	1
   296  0001D1                     _centralina_abs:
   297                           	opt stack 0
   298  0001D1                     	ds	1
   299  0001D2                     _centralina_comando:
   300                           	opt stack 0
   301  0001D2                     	ds	1
   302  0001D3                     _centralina_sterzo:
   303                           	opt stack 0
   304  0001D3                     	ds	1
   305  0001D4                     _message_sent:
   306                           	opt stack 0
   307  0001D4                     	ds	1
   308  0001D5                     _remote_frame:
   309                           	opt stack 0
   310  0001D5                     	ds	1
   311  0001D6                     _remote_frame1:
   312                           	opt stack 0
   313  0001D6                     	ds	1
   314  0001D7                     _request_sent:
   315                           	opt stack 0
   316  0001D7                     	ds	1
   317  0001D8                     _speed_fetched:
   318                           	opt stack 0
   319  0001D8                     	ds	1
   320                           tblptru	equ	0xFF8
   321                           tblptrh	equ	0xFF7
   322                           tblptrl	equ	0xFF6
   323                           tablat	equ	0xFF5
   324                           postinc0	equ	0xFEE
   325                           wreg	equ	0xFE8
   326                           postdec1	equ	0xFE5
   327                           fsr1l	equ	0xFE1
   328                           
   329                           	psect	bssCOMRAM
   330  000020                     __pbssCOMRAM:
   331                           	opt stack 0
   332  000020                     _requestSpeed:
   333                           	opt stack 0
   334  000020                     	ds	4
   335  000024                     _timeCounter:
   336                           	opt stack 0
   337  000024                     	ds	4
   338  000028                     _clock_counter_reference:
   339                           	opt stack 0
   340  000028                     	ds	2
   341  00002A                     _correzione:
   342                           	opt stack 0
   343  00002A                     	ds	2
   344  00002C                     _duty_cycle:
   345                           	opt stack 0
   346  00002C                     	ds	2
   347  00002E                     _duty_set:
   348                           	opt stack 0
   349  00002E                     	ds	2
   350  000030                     _errore:
   351                           	opt stack 0
   352  000030                     	ds	2
   353  000032                     _left_speed:
   354                           	opt stack 0
   355  000032                     	ds	2
   356  000034                     _previousPwm:
   357                           	opt stack 0
   358  000034                     	ds	2
   359  000036                     _right_speed:
   360                           	opt stack 0
   361  000036                     	ds	2
   362  000038                     _vBatt:
   363                           	opt stack 0
   364  000038                     	ds	2
   365                           tblptru	equ	0xFF8
   366                           tblptrh	equ	0xFF7
   367                           tblptrl	equ	0xFF6
   368                           tablat	equ	0xFF5
   369                           postinc0	equ	0xFEE
   370                           wreg	equ	0xFE8
   371                           postdec1	equ	0xFE5
   372                           fsr1l	equ	0xFE1
   373                           
   374                           	psect	dataCOMRAM
   375  00003C                     __pdataCOMRAM:
   376                           	opt stack 0
   377  00003C                     _currentSpeed:
   378                           	opt stack 0
   379  00003C                     	ds	4
   380  000040                     _dir:
   381                           	opt stack 0
   382  000040                     	ds	2
   383  000042                     _delay_quartz_frequency_value:
   384                           	opt stack 0
   385  000042                     	ds	1
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           postdec1	equ	0xFE5
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	bssBANK0
   396  000060                     __pbssBANK0:
   397                           	opt stack 0
   398  000060                     _counter_array:
   399                           	opt stack 0
   400  000060                     	ds	8
   401  000068                     _currentSpeed_array:
   402                           	opt stack 0
   403  000068                     	ds	8
   404  000070                     _counter:
   405                           	opt stack 0
   406  000070                     	ds	4
   407  000074                     _id:
   408                           	opt stack 0
   409  000074                     	ds	4
   410  000078                     _id1:
   411                           	opt stack 0
   412  000078                     	ds	4
   413  00007C                     _previousTimeCounter:
   414                           	opt stack 0
   415  00007C                     	ds	4
   416  000080                     _previousTimeCounter1:
   417                           	opt stack 0
   418  000080                     	ds	4
   419  000084                     _previousTimeCounter2:
   420                           	opt stack 0
   421  000084                     	ds	4
   422  000088                     _msg:
   423                           	opt stack 0
   424  000088                     	ds	15
   425  000097                     _data_array:
   426                           	opt stack 0
   427  000097                     	ds	8
   428  00009F                     _data_array1:
   429                           	opt stack 0
   430  00009F                     	ds	8
   431  0000A7                     _data_array_debug:
   432                           	opt stack 0
   433  0000A7                     	ds	8
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           postinc0	equ	0xFEE
   439                           wreg	equ	0xFE8
   440                           postdec1	equ	0xFE5
   441                           fsr1l	equ	0xFE1
   442                           
   443                           	psect	cstackBANK0
   444  0000AF                     __pcstackBANK0:
   445                           	opt stack 0
   446  0000AF                     ?_abs:
   447                           	opt stack 0
   448  0000AF                     ?___lwdiv:
   449                           	opt stack 0
   450  0000AF                     CANOperationMode@mode:
   451                           	opt stack 0
   452  0000AF                     _CANisTxReady$2993:
   453                           	opt stack 0
   454  0000AF                     OpenEPWM1@period:
   455                           	opt stack 0
   456  0000AF                     SetOutputEPWM1@outputmode:
   457                           	opt stack 0
   458  0000AF                     OpenTimer2@config:
   459                           	opt stack 0
   460  0000AF                     SetDCEPWM1@dutycycle:
   461                           	opt stack 0
   462  0000AF                     abs@a:
   463                           	opt stack 0
   464  0000AF                     ___lwdiv@dividend:
   465                           	opt stack 0
   466  0000AF                     CANsendMessage@identifier:
   467                           	opt stack 0
   468  0000AF                     CANSetMask@mask:
   469                           	opt stack 0
   470  0000AF                     CANSetFilter@filter:
   471                           	opt stack 0
   472                           
   473                           ; 4 bytes @ 0x0
   474  0000AF                     	ds	1
   475  0000B0                     SetOutputEPWM1@outputconfig:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x1
   479  0000B0                     	ds	1
   480  0000B1                     ??_abs:
   481  0000B1                     ??_SetDCEPWM1:
   482  0000B1                     ___lwdiv@divisor:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x2
   486  0000B1                     	ds	2
   487  0000B3                     CANSetMask@type:
   488                           	opt stack 0
   489  0000B3                     CANSetFilter@type:
   490                           	opt stack 0
   491  0000B3                     ___lwdiv@counter:
   492                           	opt stack 0
   493  0000B3                     CANsendMessage@data:
   494                           	opt stack 0
   495  0000B3                     SetDCEPWM1@DCycle:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x4
   499  0000B3                     	ds	1
   500  0000B4                     ??_CANSetMask:
   501  0000B4                     ??_CANSetFilter:
   502  0000B4                     ___lwdiv@quotient:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x5
   506  0000B4                     	ds	1
   507  0000B5                     CANsendMessage@dataLength:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x6
   511  0000B5                     	ds	1
   512  0000B6                     ?___wmul:
   513                           	opt stack 0
   514  0000B6                     CANsendMessage@flags:
   515                           	opt stack 0
   516  0000B6                     ___wmul@multiplier:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x7
   520  0000B6                     	ds	1
   521  0000B7                     ??_CANsendMessage:
   522                           
   523                           ; 0 bytes @ 0x8
   524  0000B7                     	ds	1
   525  0000B8                     CANSetMask@numBuffer:
   526                           	opt stack 0
   527  0000B8                     CANSetFilter@numBuffer:
   528                           	opt stack 0
   529  0000B8                     ___wmul@multiplicand:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x9
   533  0000B8                     	ds	1
   534  0000B9                     CANSetMask@tamp:
   535                           	opt stack 0
   536  0000B9                     CANSetFilter@tamp:
   537                           	opt stack 0
   538                           
   539                           ; 4 bytes @ 0xA
   540  0000B9                     	ds	1
   541  0000BA                     ___wmul@product:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0xB
   545  0000BA                     	ds	1
   546  0000BB                     CANsendMessage@tamp:
   547                           	opt stack 0
   548                           
   549                           ; 4 bytes @ 0xC
   550  0000BB                     	ds	1
   551  0000BC                     ?___awdiv:
   552                           	opt stack 0
   553  0000BC                     delay_ms@value_ms:
   554                           	opt stack 0
   555  0000BC                     ___awdiv@dividend:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0xD
   559  0000BC                     	ds	1
   560  0000BD                     CANInitialize@phaseSeg1:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0xE
   564  0000BD                     	ds	1
   565  0000BE                     CANInitialize@phaseSeg2:
   566                           	opt stack 0
   567  0000BE                     ___awdiv@divisor:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0xF
   571  0000BE                     	ds	1
   572  0000BF                     CANInitialize@SJW:
   573                           	opt stack 0
   574  0000BF                     send_data@i:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x10
   578  0000BF                     	ds	1
   579  0000C0                     CANInitialize@BRP:
   580                           	opt stack 0
   581  0000C0                     ___awdiv@counter:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x11
   585  0000C0                     	ds	1
   586  0000C1                     CANInitialize@flags:
   587                           	opt stack 0
   588  0000C1                     ___awdiv@sign:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x12
   592  0000C1                     	ds	1
   593  0000C2                     ??_CANInitialize:
   594  0000C2                     ___awdiv@quotient:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x13
   598  0000C2                     	ds	2
   599  0000C4                     
   600                           ; 0 bytes @ 0x15
   601  0000C4                     	ds	2
   602  0000C6                     CANInitialize@propSeg:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x17
   606  0000C6                     	ds	1
   607  0000C7                     CANInitialize@FilterConfig1:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x18
   611  0000C7                     	ds	1
   612  0000C8                     CANInitialize@FilterConfig2:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x19
   616  0000C8                     	ds	1
   617  0000C9                     ??_main:
   618                           
   619                           ; 0 bytes @ 0x1A
   620  0000C9                     	ds	8
   621  0000D1                     main@period:
   622                           	opt stack 0
   623                           
   624                           ; 1 bytes @ 0x22
   625  0000D1                     	ds	1
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           postdec1	equ	0xFE5
   633                           fsr1l	equ	0xFE1
   634                           
   635                           	psect	cstackCOMRAM
   636  000001                     __pcstackCOMRAM:
   637                           	opt stack 0
   638  000001                     _CANisRxReady$2995:
   639                           	opt stack 0
   640  000001                     i1SetOutputEPWM1@outputmode:
   641                           	opt stack 0
   642  000001                     CANreceiveMessage@msg:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x0
   646  000001                     	ds	1
   647  000002                     i1SetOutputEPWM1@outputconfig:
   648                           	opt stack 0
   649                           
   650                           ; 1 bytes @ 0x1
   651  000002                     	ds	1
   652  000003                     ??_CANreceiveMessage:
   653                           
   654                           ; 0 bytes @ 0x2
   655  000003                     	ds	8
   656  00000B                     CANreceiveMessage@error:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0xA
   660  00000B                     	ds	1
   661  00000C                     CANreceiveMessage@tamp:
   662                           	opt stack 0
   663                           
   664                           ; 1 bytes @ 0xB
   665  00000C                     	ds	1
   666  00000D                     ??_ISR_bassa:
   667                           
   668                           ; 0 bytes @ 0xC
   669  00000D                     	ds	19
   670                           tblptru	equ	0xFF8
   671                           tblptrh	equ	0xFF7
   672                           tblptrl	equ	0xFF6
   673                           tablat	equ	0xFF5
   674                           postinc0	equ	0xFEE
   675                           wreg	equ	0xFE8
   676                           postdec1	equ	0xFE5
   677                           fsr1l	equ	0xFE1
   678                           
   679 ;;
   680 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   681 ;;
   682 ;; *************** function _main *****************
   683 ;; Defined at:
   684 ;;		line 147 in file "motore.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;		None
   687 ;; Auto vars:     Size  Location     Type
   688 ;;  period          1   34[BANK0 ] unsigned char 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  2  668[None  ] int 
   691 ;; Registers used:
   692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   698 ;;      Params:         0       0       0       0
   699 ;;      Locals:         0       1       0       0
   700 ;;      Temps:          0       8       0       0
   701 ;;      Totals:         0       9       0       0
   702 ;;Total ram usage:        9 bytes
   703 ;; Hardware stack levels required when called:    5
   704 ;; This function calls:
   705 ;;		_CANisRXwarningON
   706 ;;		_CANisTXwarningON
   707 ;;		_CANsendMessage
   708 ;;		_OpenEPWM1
   709 ;;		_OpenTimer2
   710 ;;		_SetDCEPWM1
   711 ;;		_SetOutputEPWM1
   712 ;;		___lwdiv
   713 ;;		___wmul
   714 ;;		_abs
   715 ;;		_battery_measure
   716 ;;		_configurazione_iniziale
   717 ;;		_delay_ms
   718 ;;		_send_data
   719 ;; This function is called by:
   720 ;;		Startup code after reset
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text0
   725  00196E                     __ptext0:
   726                           	opt stack 0
   727  00196E                     _main:
   728                           	opt stack 26
   729                           
   730                           ;motore.c: 148: unsigned char period;
   731                           ;motore.c: 149: configurazione_iniziale();
   732                           
   733                           ;incstack = 0
   734  00196E  EC44  F012         	call	_configurazione_iniziale	;wreg free
   735                           
   736                           ;motore.c: 150: PORTAbits.RA1 = 1;
   737  001972  8280               	bsf	3968,1,c	;volatile
   738                           
   739                           ;motore.c: 151: PORTCbits.RC1 = 1;
   740  001974  8282               	bsf	3970,1,c	;volatile
   741                           
   742                           ;motore.c: 152: delay_ms(500);
   743  001976  0E01               	movlw	1
   744  001978  0100               	movlb	0	; () banked
   745  00197A  6FBD               	movwf	(delay_ms@value_ms+1)& (0+255),b
   746  00197C  0EF4               	movlw	244
   747  00197E  6FBC               	movwf	delay_ms@value_ms& (0+255),b
   748  001980  ECCC  F013         	call	_delay_ms	;wreg free
   749                           
   750                           ;motore.c: 153: PORTAbits.RA1 = 0;
   751  001984  9280               	bcf	3968,1,c	;volatile
   752                           
   753                           ;motore.c: 154: PORTCbits.RC1 = 0;
   754  001986  9282               	bcf	3970,1,c	;volatile
   755                           
   756                           ;motore.c: 155: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
   757  001988  0E06               	movlw	6
   758  00198A  EC0E  F014         	call	_OpenTimer2
   759                           
   760                           ;motore.c: 156: period = 0xFE;
   761  00198E  0EFE               	movlw	254
   762  001990  0100               	movlb	0	; () banked
   763  001992  6FD1               	movwf	main@period& (0+255),b
   764                           
   765                           ; BSR set to: 0
   766                           ;motore.c: 157: OpenEPWM1(period);
   767  001994  0100               	movlb	0	; () banked
   768  001996  51D1               	movf	main@period& (0+255),w,b
   769  001998  EC35  F014         	call	_OpenEPWM1
   770                           
   771                           ;motore.c: 158: speed_fetched = 1;
   772  00199C  803B               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   773                           
   774                           ;motore.c: 159: SetOutputEPWM1(0b01111111, 0b11111100);
   775  00199E  0EFC               	movlw	252
   776  0019A0  0100               	movlb	0	; () banked
   777  0019A2  6FAF               	movwf	SetOutputEPWM1@outputmode& (0+255),b
   778  0019A4  0E7F               	movlw	127
   779  0019A6  EC1F  F013         	call	_SetOutputEPWM1
   780  0019AA                     l5028:
   781                           
   782                           ;motore.c: 162: if ((timeCounter - previousTimeCounter1 >= 30)) {
   783  0019AA  C080  F0C9         	movff	_previousTimeCounter1,??_main
   784  0019AE  C081  F0CA         	movff	_previousTimeCounter1+1,??_main+1
   785  0019B2  C082  F0CB         	movff	_previousTimeCounter1+2,??_main+2
   786  0019B6  C083  F0CC         	movff	_previousTimeCounter1+3,??_main+3
   787  0019BA  0100               	movlb	0	; () banked
   788  0019BC  1FC9               	comf	??_main& (0+255),f,b
   789  0019BE  1FCA               	comf	(??_main+1)& (0+255),f,b
   790  0019C0  1FCB               	comf	(??_main+2)& (0+255),f,b
   791  0019C2  1FCC               	comf	(??_main+3)& (0+255),f,b
   792  0019C4  2BC9               	incf	??_main& (0+255),f,b
   793  0019C6  0E00               	movlw	0
   794  0019C8  23CA               	addwfc	(??_main+1)& (0+255),f,b
   795  0019CA  23CB               	addwfc	(??_main+2)& (0+255),f,b
   796  0019CC  23CC               	addwfc	(??_main+3)& (0+255),f,b
   797  0019CE  5024               	movf	_timeCounter,w,c
   798  0019D0  0100               	movlb	0	; () banked
   799  0019D2  25C9               	addwf	??_main& (0+255),w,b
   800  0019D4  0100               	movlb	0	; () banked
   801  0019D6  6FCD               	movwf	(??_main+4)& (0+255),b
   802  0019D8  5025               	movf	_timeCounter+1,w,c
   803  0019DA  0100               	movlb	0	; () banked
   804  0019DC  21CA               	addwfc	(??_main+1)& (0+255),w,b
   805  0019DE  0100               	movlb	0	; () banked
   806  0019E0  6FCE               	movwf	(??_main+5)& (0+255),b
   807  0019E2  5026               	movf	_timeCounter+2,w,c
   808  0019E4  0100               	movlb	0	; () banked
   809  0019E6  21CB               	addwfc	(??_main+2)& (0+255),w,b
   810  0019E8  0100               	movlb	0	; () banked
   811  0019EA  6FCF               	movwf	(??_main+6)& (0+255),b
   812  0019EC  5027               	movf	_timeCounter+3,w,c
   813  0019EE  0100               	movlb	0	; () banked
   814  0019F0  21CC               	addwfc	(??_main+3)& (0+255),w,b
   815  0019F2  0100               	movlb	0	; () banked
   816  0019F4  6FD0               	movwf	(??_main+7)& (0+255),b
   817  0019F6  0100               	movlb	0	; () banked
   818  0019F8  51D0               	movf	(??_main+7)& (0+255),w,b
   819  0019FA  0100               	movlb	0	; () banked
   820  0019FC  11CF               	iorwf	(??_main+6)& (0+255),w,b
   821  0019FE  0100               	movlb	0	; () banked
   822  001A00  11CE               	iorwf	(??_main+5)& (0+255),w,b
   823  001A02  E105               	bnz	u6510
   824  001A04  0E1E               	movlw	30
   825  001A06  0100               	movlb	0	; () banked
   826  001A08  5DCD               	subwf	(??_main+4)& (0+255),w,b
   827  001A0A  A0D8               	btfss	status,0,c
   828  001A0C  D0DE               	goto	l5058
   829  001A0E                     u6510:
   830                           
   831                           ; BSR set to: 0
   832                           ;motore.c: 163: CANsendMessage(0b00000000000000000000000000110, data_array_debug, 8, CAN
      +                          _CONFIG_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   833  001A0E  0E06               	movlw	6
   834  001A10  0100               	movlb	0	; () banked
   835  001A12  6FAF               	movwf	CANsendMessage@identifier& (0+255),b
   836  001A14  0E00               	movlw	0
   837  001A16  6FB0               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   838  001A18  0E00               	movlw	0
   839  001A1A  6FB1               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   840  001A1C  0E00               	movlw	0
   841  001A1E  6FB2               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   842  001A20  0EA7               	movlw	low _data_array_debug
   843  001A22  0100               	movlb	0	; () banked
   844  001A24  6FB3               	movwf	CANsendMessage@data& (0+255),b
   845  001A26  0E00               	movlw	high _data_array_debug
   846  001A28  0100               	movlb	0	; () banked
   847  001A2A  6FB4               	movwf	(CANsendMessage@data+1)& (0+255),b
   848  001A2C  0E08               	movlw	8
   849  001A2E  0100               	movlb	0	; () banked
   850  001A30  6FB5               	movwf	CANsendMessage@dataLength& (0+255),b
   851  001A32  0EFC               	movlw	252
   852  001A34  0100               	movlb	0	; () banked
   853  001A36  6FB6               	movwf	CANsendMessage@flags& (0+255),b
   854  001A38  EC6B  F006         	call	_CANsendMessage	;wreg free
   855                           
   856                           ;motore.c: 164: if (speed_fetched == 1) {
   857  001A3C  A03B               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   858  001A3E  D0B7               	goto	l671
   859                           
   860                           ;motore.c: 165: speed_fetched = 0;
   861  001A40  903B               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   862                           
   863                           ;motore.c: 166: currentSpeed = ((left_speed + right_speed) / 2);
   864  001A42  5036               	movf	_right_speed,w,c
   865  001A44  2432               	addwf	_left_speed,w,c
   866  001A46  0100               	movlb	0	; () banked
   867  001A48  6FC9               	movwf	??_main& (0+255),b
   868  001A4A  5037               	movf	_right_speed+1,w,c
   869  001A4C  2033               	addwfc	_left_speed+1,w,c
   870  001A4E  0100               	movlb	0	; () banked
   871  001A50  6FCA               	movwf	(??_main+1)& (0+255),b
   872  001A52  90D8               	bcf	status,0,c
   873  001A54  0100               	movlb	0	; () banked
   874  001A56  31CA               	rrcf	(??_main+1)& (0+255),w,b
   875  001A58  0100               	movlb	0	; () banked
   876  001A5A  6FCC               	movwf	(??_main+3)& (0+255),b
   877  001A5C  0100               	movlb	0	; () banked
   878  001A5E  31C9               	rrcf	??_main& (0+255),w,b
   879  001A60  0100               	movlb	0	; () banked
   880  001A62  6FCB               	movwf	(??_main+2)& (0+255),b
   881  001A64  C0CB  F03C         	movff	??_main+2,_currentSpeed	;volatile
   882  001A68  C0CC  F03D         	movff	??_main+3,_currentSpeed+1	;volatile
   883  001A6C  6A3E               	clrf	_currentSpeed+2,c	;volatile
   884  001A6E  6A3F               	clrf	_currentSpeed+3,c	;volatile
   885                           
   886                           ; BSR set to: 0
   887                           ;motore.c: 167: requestSpeed = 200;
   888  001A70  0EC8               	movlw	200
   889  001A72  6E20               	movwf	_requestSpeed,c	;volatile
   890  001A74  0E00               	movlw	0
   891  001A76  6E21               	movwf	_requestSpeed+1,c	;volatile
   892  001A78  0E00               	movlw	0
   893  001A7A  6E22               	movwf	_requestSpeed+2,c	;volatile
   894  001A7C  0E00               	movlw	0
   895  001A7E  6E23               	movwf	_requestSpeed+3,c	;volatile
   896                           
   897                           ; BSR set to: 0
   898                           ;motore.c: 168: errore = abs((currentSpeed - requestSpeed));
   899  001A80  C020  F0C9         	movff	_requestSpeed,??_main	;volatile
   900  001A84  C021  F0CA         	movff	_requestSpeed+1,??_main+1	;volatile
   901  001A88  0100               	movlb	0	; () banked
   902  001A8A  1FC9               	comf	??_main& (0+255),f,b
   903  001A8C  1FCA               	comf	(??_main+1)& (0+255),f,b
   904  001A8E  4BC9               	infsnz	??_main& (0+255),f,b
   905  001A90  2BCA               	incf	(??_main+1)& (0+255),f,b
   906  001A92  503C               	movf	_currentSpeed,w,c	;volatile
   907  001A94  0100               	movlb	0	; () banked
   908  001A96  25C9               	addwf	??_main& (0+255),w,b
   909  001A98  0100               	movlb	0	; () banked
   910  001A9A  6FAF               	movwf	abs@a& (0+255),b
   911  001A9C  503D               	movf	_currentSpeed+1,w,c	;volatile
   912  001A9E  0100               	movlb	0	; () banked
   913  001AA0  21CA               	addwfc	(??_main+1)& (0+255),w,b
   914  001AA2  0100               	movlb	0	; () banked
   915  001AA4  6FB0               	movwf	(abs@a+1)& (0+255),b
   916  001AA6  ECE6  F013         	call	_abs	;wreg free
   917  001AAA  C0AF  F030         	movff	?_abs,_errore
   918  001AAE  C0B0  F031         	movff	?_abs+1,_errore+1
   919                           
   920                           ;motore.c: 169: correzione = ((errore / 100)*(errore / 100))*2;
   921  001AB2  0E00               	movlw	0
   922  001AB4  0100               	movlb	0	; () banked
   923  001AB6  6FB2               	movwf	(___lwdiv@divisor+1)& (0+255),b
   924  001AB8  0E64               	movlw	100
   925  001ABA  6FB1               	movwf	___lwdiv@divisor& (0+255),b
   926  001ABC  C030  F0AF         	movff	_errore,___lwdiv@dividend
   927  001AC0  C031  F0B0         	movff	_errore+1,___lwdiv@dividend+1
   928  001AC4  ECE3  F012         	call	___lwdiv	;wreg free
   929  001AC8  C0AF  F0B6         	movff	?___lwdiv,___wmul@multiplier
   930  001ACC  C0B0  F0B7         	movff	?___lwdiv+1,___wmul@multiplier+1
   931  001AD0  0E00               	movlw	0
   932  001AD2  0100               	movlb	0	; () banked
   933  001AD4  6FB2               	movwf	(___lwdiv@divisor+1)& (0+255),b
   934  001AD6  0E64               	movlw	100
   935  001AD8  6FB1               	movwf	___lwdiv@divisor& (0+255),b
   936  001ADA  C030  F0AF         	movff	_errore,___lwdiv@dividend
   937  001ADE  C031  F0B0         	movff	_errore+1,___lwdiv@dividend+1
   938  001AE2  ECE3  F012         	call	___lwdiv	;wreg free
   939  001AE6  C0AF  F0B8         	movff	?___lwdiv,___wmul@multiplicand
   940  001AEA  C0B0  F0B9         	movff	?___lwdiv+1,___wmul@multiplicand+1
   941  001AEE  ECB1  F013         	call	___wmul	;wreg free
   942  001AF2  90D8               	bcf	status,0,c
   943  001AF4  0100               	movlb	0	; () banked
   944  001AF6  35B6               	rlcf	?___wmul& (0+255),w,b
   945  001AF8  6E2A               	movwf	_correzione,c
   946  001AFA  0100               	movlb	0	; () banked
   947  001AFC  35B7               	rlcf	(?___wmul+1)& (0+255),w,b
   948  001AFE  6E2B               	movwf	_correzione+1,c
   949                           
   950                           ; BSR set to: 0
   951                           ;motore.c: 170: if (correzione > 1) {
   952  001B00  502B               	movf	_correzione+1,w,c
   953  001B02  E104               	bnz	u6530
   954  001B04  0E02               	movlw	2
   955  001B06  5C2A               	subwf	_correzione,w,c
   956  001B08  A0D8               	btfss	status,0,c
   957  001B0A  D049               	goto	l672
   958  001B0C                     u6530:
   959                           
   960                           ; BSR set to: 0
   961                           ;motore.c: 172: if (currentSpeed > requestSpeed) {
   962  001B0C  503C               	movf	_currentSpeed,w,c	;volatile
   963  001B0E  5C20               	subwf	_requestSpeed,w,c	;volatile
   964  001B10  503D               	movf	_currentSpeed+1,w,c	;volatile
   965  001B12  5821               	subwfb	_requestSpeed+1,w,c	;volatile
   966  001B14  503E               	movf	_currentSpeed+2,w,c	;volatile
   967  001B16  5822               	subwfb	_requestSpeed+2,w,c	;volatile
   968  001B18  5023               	movf	_requestSpeed+3,w,c	;volatile
   969  001B1A  0A80               	xorlw	128
   970  001B1C  0100               	movlb	0	; () banked
   971  001B1E  6FC9               	movwf	??_main& (0+255),b
   972  001B20  503F               	movf	_currentSpeed+3,w,c	;volatile
   973  001B22  0A80               	xorlw	128
   974  001B24  0100               	movlb	0	; () banked
   975  001B26  59C9               	subwfb	??_main& (0+255),w,b
   976  001B28  B0D8               	btfsc	status,0,c
   977  001B2A  D018               	goto	l5052
   978                           
   979                           ; BSR set to: 0
   980                           ;motore.c: 173: duty_set = previousPwm - correzione;
   981  001B2C  C02A  F0C9         	movff	_correzione,??_main
   982  001B30  C02B  F0CA         	movff	_correzione+1,??_main+1
   983  001B34  0100               	movlb	0	; () banked
   984  001B36  1FC9               	comf	??_main& (0+255),f,b
   985  001B38  1FCA               	comf	(??_main+1)& (0+255),f,b
   986  001B3A  4BC9               	infsnz	??_main& (0+255),f,b
   987  001B3C  2BCA               	incf	(??_main+1)& (0+255),f,b
   988  001B3E  5034               	movf	_previousPwm,w,c
   989  001B40  0100               	movlb	0	; () banked
   990  001B42  25C9               	addwf	??_main& (0+255),w,b
   991  001B44  6E2E               	movwf	_duty_set,c
   992  001B46  5035               	movf	_previousPwm+1,w,c
   993  001B48  0100               	movlb	0	; () banked
   994  001B4A  21CA               	addwfc	(??_main+1)& (0+255),w,b
   995  001B4C  6E2F               	movwf	_duty_set+1,c
   996                           
   997                           ;motore.c: 174: if (duty_set < 0) {
   998  001B4E  AE2F               	btfss	_duty_set+1,7,c
   999  001B50  D02A               	goto	l677
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;motore.c: 175: duty_set = 0;
  1003  001B52  0E00               	movlw	0
  1004  001B54  6E2F               	movwf	_duty_set+1,c
  1005  001B56  0E00               	movlw	0
  1006  001B58  6E2E               	movwf	_duty_set,c
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;motore.c: 176: }
  1010                           ;motore.c: 177: } else {
  1011  001B5A  D025               	goto	l677
  1012  001B5C                     l5052:
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;motore.c: 178: PORTCbits.RC1 = ~PORTCbits.RC1;
  1016  001B5C  A282               	btfss	3970,1,c	;volatile
  1017  001B5E  D002               	goto	u6560
  1018  001B60  0E01               	movlw	1
  1019  001B62  D001               	goto	u6566
  1020  001B64                     u6560:
  1021  001B64  0E00               	movlw	0
  1022  001B66                     u6566:
  1023  001B66  0AFF               	xorlw	255
  1024  001B68  0100               	movlb	0	; () banked
  1025  001B6A  6FC9               	movwf	??_main& (0+255),b
  1026  001B6C  0100               	movlb	0	; () banked
  1027  001B6E  47C9               	rlncf	??_main& (0+255),f,b
  1028  001B70  5082               	movf	3970,w,c	;volatile
  1029  001B72  0100               	movlb	0	; () banked
  1030  001B74  19C9               	xorwf	??_main& (0+255),w,b
  1031  001B76  0BFD               	andlw	-3
  1032  001B78  19C9               	xorwf	??_main& (0+255),w,b
  1033  001B7A  6E82               	movwf	3970,c	;volatile
  1034                           
  1035                           ;motore.c: 179: duty_set = previousPwm + correzione;
  1036  001B7C  502A               	movf	_correzione,w,c
  1037  001B7E  2434               	addwf	_previousPwm,w,c
  1038  001B80  6E2E               	movwf	_duty_set,c
  1039  001B82  502B               	movf	_correzione+1,w,c
  1040  001B84  2035               	addwfc	_previousPwm+1,w,c
  1041  001B86  6E2F               	movwf	_duty_set+1,c
  1042                           
  1043                           ;motore.c: 180: if (duty_set > 1024) {
  1044  001B88  BE2F               	btfsc	_duty_set+1,7,c
  1045  001B8A  D00D               	goto	l677
  1046  001B8C  042E               	decf	_duty_set,w,c
  1047  001B8E  0E04               	movlw	4
  1048  001B90  582F               	subwfb	_duty_set+1,w,c
  1049  001B92  A0D8               	btfss	status,0,c
  1050  001B94  D008               	goto	l677
  1051                           
  1052                           ; BSR set to: 0
  1053                           ;motore.c: 181: duty_set = 1023;
  1054  001B96  0E03               	movlw	3
  1055  001B98  6E2F               	movwf	_duty_set+1,c
  1056  001B9A  682E               	setf	_duty_set,c
  1057                           
  1058                           ; BSR set to: 0
  1059                           ;motore.c: 182: }
  1060                           ;motore.c: 183: }
  1061                           ;motore.c: 184: } else {
  1062                           
  1063                           ; BSR set to: 0
  1064  001B9C  D004               	goto	l677
  1065  001B9E                     l672:
  1066                           
  1067                           ; BSR set to: 0
  1068                           ;motore.c: 185: duty_set = previousPwm;
  1069  001B9E  C034  F02E         	movff	_previousPwm,_duty_set
  1070  001BA2  C035  F02F         	movff	_previousPwm+1,_duty_set+1
  1071  001BA6                     l677:
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;motore.c: 186: }
  1075                           ;motore.c: 187: previousPwm = duty_set;
  1076  001BA6  C02E  F034         	movff	_duty_set,_previousPwm
  1077  001BAA  C02F  F035         	movff	_duty_set+1,_previousPwm+1
  1078  001BAE                     l671:
  1079                           
  1080                           ;motore.c: 188: }
  1081                           ;motore.c: 189: previousTimeCounter1 = timeCounter;
  1082  001BAE  C024  F080         	movff	_timeCounter,_previousTimeCounter1
  1083  001BB2  C025  F081         	movff	_timeCounter+1,_previousTimeCounter1+1
  1084  001BB6  C026  F082         	movff	_timeCounter+2,_previousTimeCounter1+2
  1085  001BBA  C027  F083         	movff	_timeCounter+3,_previousTimeCounter1+3
  1086                           
  1087                           ;motore.c: 190: SetDCEPWM1(duty_set);
  1088  001BBE  C02E  F0AF         	movff	_duty_set,SetDCEPWM1@dutycycle
  1089  001BC2  C02F  F0B0         	movff	_duty_set+1,SetDCEPWM1@dutycycle+1
  1090  001BC6  EC6D  F013         	call	_SetDCEPWM1	;wreg free
  1091  001BCA                     l5058:
  1092                           
  1093                           ;motore.c: 191: }
  1094                           ;motore.c: 193: if ((remote_frame == 1) || (can_retry == 1)) {
  1095  001BCA  AA3A               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1096  001BCC  B03A               	btfsc	_can_retry/(0+8),_can_retry& (0+7),c
  1097  001BCE  D001               	goto	l5062
  1098  001BD0  D002               	goto	l5064
  1099  001BD2                     l5062:
  1100                           
  1101                           ;motore.c: 194: send_data();
  1102  001BD2  EC62  F011         	call	_send_data	;wreg free
  1103  001BD6                     l5064:
  1104                           
  1105                           ;motore.c: 195: }
  1106                           ;motore.c: 196: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
  1107  001BD6  EC3E  F014         	call	_CANisTXwarningON	;wreg free
  1108  001BDA  06E8               	decf	wreg,f,c
  1109  001BDC  B4D8               	btfsc	status,2,c
  1110  001BDE  D005               	goto	l683
  1111  001BE0  EC44  F014         	call	_CANisRXwarningON	;wreg free
  1112  001BE4  06E8               	decf	wreg,f,c
  1113  001BE6  A4D8               	btfss	status,2,c
  1114  001BE8  D014               	goto	l681
  1115  001BEA                     l683:
  1116                           
  1117                           ;motore.c: 198: PORTAbits.RA1 = 1;
  1118  001BEA  8280               	bsf	3968,1,c	;volatile
  1119                           
  1120                           ;motore.c: 199: delay_ms(200);
  1121  001BEC  0E00               	movlw	0
  1122  001BEE  0100               	movlb	0	; () banked
  1123  001BF0  6FBD               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1124  001BF2  0EC8               	movlw	200
  1125  001BF4  6FBC               	movwf	delay_ms@value_ms& (0+255),b
  1126  001BF6  ECCC  F013         	call	_delay_ms	;wreg free
  1127                           
  1128                           ;motore.c: 200: PORTAbits.RA1 = 0;
  1129  001BFA  9280               	bcf	3968,1,c	;volatile
  1130                           
  1131                           ;motore.c: 201: delay_ms(200);
  1132  001BFC  0E00               	movlw	0
  1133  001BFE  0100               	movlb	0	; () banked
  1134  001C00  6FBD               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1135  001C02  0EC8               	movlw	200
  1136  001C04  6FBC               	movwf	delay_ms@value_ms& (0+255),b
  1137  001C06  ECCC  F013         	call	_delay_ms	;wreg free
  1138                           
  1139                           ;motore.c: 202: PORTAbits.RA1 = 1;
  1140  001C0A  8280               	bsf	3968,1,c	;volatile
  1141                           
  1142                           ;motore.c: 203: COMSTATbits.TXWARN = 0;
  1143  001C0C  9474               	bcf	3956,2,c	;volatile
  1144                           
  1145                           ;motore.c: 204: COMSTATbits.RXWARN = 0;
  1146  001C0E  9274               	bcf	3956,1,c	;volatile
  1147                           
  1148                           ;motore.c: 205: } else {
  1149  001C10  D001               	goto	l5078
  1150  001C12                     l681:
  1151                           
  1152                           ;motore.c: 206: PORTAbits.RA1 = 0;
  1153  001C12  9280               	bcf	3968,1,c	;volatile
  1154  001C14                     l5078:
  1155                           
  1156                           ;motore.c: 207: }
  1157                           ;motore.c: 210: if ((timeCounter - previousTimeCounter) > 500) {
  1158  001C14  C07C  F0C9         	movff	_previousTimeCounter,??_main
  1159  001C18  C07D  F0CA         	movff	_previousTimeCounter+1,??_main+1
  1160  001C1C  C07E  F0CB         	movff	_previousTimeCounter+2,??_main+2
  1161  001C20  C07F  F0CC         	movff	_previousTimeCounter+3,??_main+3
  1162  001C24  0100               	movlb	0	; () banked
  1163  001C26  1FC9               	comf	??_main& (0+255),f,b
  1164  001C28  1FCA               	comf	(??_main+1)& (0+255),f,b
  1165  001C2A  1FCB               	comf	(??_main+2)& (0+255),f,b
  1166  001C2C  1FCC               	comf	(??_main+3)& (0+255),f,b
  1167  001C2E  2BC9               	incf	??_main& (0+255),f,b
  1168  001C30  0E00               	movlw	0
  1169  001C32  23CA               	addwfc	(??_main+1)& (0+255),f,b
  1170  001C34  23CB               	addwfc	(??_main+2)& (0+255),f,b
  1171  001C36  23CC               	addwfc	(??_main+3)& (0+255),f,b
  1172  001C38  5024               	movf	_timeCounter,w,c
  1173  001C3A  0100               	movlb	0	; () banked
  1174  001C3C  25C9               	addwf	??_main& (0+255),w,b
  1175  001C3E  0100               	movlb	0	; () banked
  1176  001C40  6FCD               	movwf	(??_main+4)& (0+255),b
  1177  001C42  5025               	movf	_timeCounter+1,w,c
  1178  001C44  0100               	movlb	0	; () banked
  1179  001C46  21CA               	addwfc	(??_main+1)& (0+255),w,b
  1180  001C48  0100               	movlb	0	; () banked
  1181  001C4A  6FCE               	movwf	(??_main+5)& (0+255),b
  1182  001C4C  5026               	movf	_timeCounter+2,w,c
  1183  001C4E  0100               	movlb	0	; () banked
  1184  001C50  21CB               	addwfc	(??_main+2)& (0+255),w,b
  1185  001C52  0100               	movlb	0	; () banked
  1186  001C54  6FCF               	movwf	(??_main+6)& (0+255),b
  1187  001C56  5027               	movf	_timeCounter+3,w,c
  1188  001C58  0100               	movlb	0	; () banked
  1189  001C5A  21CC               	addwfc	(??_main+3)& (0+255),w,b
  1190  001C5C  0100               	movlb	0	; () banked
  1191  001C5E  6FD0               	movwf	(??_main+7)& (0+255),b
  1192  001C60  0100               	movlb	0	; () banked
  1193  001C62  51D0               	movf	(??_main+7)& (0+255),w,b
  1194  001C64  0100               	movlb	0	; () banked
  1195  001C66  11CF               	iorwf	(??_main+6)& (0+255),w,b
  1196  001C68  E108               	bnz	u6620
  1197  001C6A  0EF5               	movlw	245
  1198  001C6C  0100               	movlb	0	; () banked
  1199  001C6E  5DCD               	subwf	(??_main+4)& (0+255),w,b
  1200  001C70  0E01               	movlw	1
  1201  001C72  0100               	movlb	0	; () banked
  1202  001C74  59CE               	subwfb	(??_main+5)& (0+255),w,b
  1203  001C76  A0D8               	btfss	status,0,c
  1204  001C78  D036               	goto	l5100
  1205  001C7A                     u6620:
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;motore.c: 211: if (request_sent == 0) {
  1209  001C7A  BE3A               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c
  1210  001C7C  D018               	goto	l5086
  1211                           
  1212                           ; BSR set to: 0
  1213                           ;motore.c: 212: CANsendMessage(0b00000000000000000000000000010, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1214  001C7E  0E02               	movlw	2
  1215  001C80  0100               	movlb	0	; () banked
  1216  001C82  6FAF               	movwf	CANsendMessage@identifier& (0+255),b
  1217  001C84  0E00               	movlw	0
  1218  001C86  6FB0               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1219  001C88  0E00               	movlw	0
  1220  001C8A  6FB1               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1221  001C8C  0E00               	movlw	0
  1222  001C8E  6FB2               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1223  001C90  0E97               	movlw	low _data_array
  1224  001C92  0100               	movlb	0	; () banked
  1225  001C94  6FB3               	movwf	CANsendMessage@data& (0+255),b
  1226  001C96  0E00               	movlw	high _data_array
  1227  001C98  0100               	movlb	0	; () banked
  1228  001C9A  6FB4               	movwf	(CANsendMessage@data+1)& (0+255),b
  1229  001C9C  0E08               	movlw	8
  1230  001C9E  0100               	movlb	0	; () banked
  1231  001CA0  6FB5               	movwf	CANsendMessage@dataLength& (0+255),b
  1232  001CA2  0EFC               	movlw	252
  1233  001CA4  0100               	movlb	0	; () banked
  1234  001CA6  6FB6               	movwf	CANsendMessage@flags& (0+255),b
  1235  001CA8  EC6B  F006         	call	_CANsendMessage	;wreg free
  1236                           
  1237                           ;motore.c: 213: request_sent = 1;
  1238  001CAC  8E3A               	bsf	_request_sent/(0+8),_request_sent& (0+7),c
  1239  001CAE                     l5086:
  1240                           
  1241                           ;motore.c: 214: }
  1242                           ;motore.c: 215: if (request_sent == 1) {
  1243  001CAE  AE3A               	btfss	_request_sent/(0+8),_request_sent& (0+7),c
  1244  001CB0  D012               	goto	l5098
  1245                           
  1246                           ;motore.c: 217: if ((centralina_abs == 1)&&(centralina_sterzo == 1)&&(centralina_comando
      +                           == 1)) {
  1247  001CB2  B23A               	btfsc	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1248  001CB4  A63A               	btfss	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1249  001CB6  D007               	goto	l688
  1250  001CB8  A43A               	btfss	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1251  001CBA  D005               	goto	l688
  1252                           
  1253                           ;motore.c: 218: centralina_abs = 0;
  1254  001CBC  923A               	bcf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1255                           
  1256                           ;motore.c: 219: centralina_sterzo = 0;
  1257  001CBE  963A               	bcf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1258                           
  1259                           ;motore.c: 220: centralina_comando = 0;
  1260  001CC0  943A               	bcf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1261                           
  1262                           ;motore.c: 221: PORTAbits.RA1 = 0;
  1263  001CC2  9280               	bcf	3968,1,c	;volatile
  1264                           
  1265                           ;motore.c: 222: } else {
  1266  001CC4  D008               	goto	l5098
  1267  001CC6                     l688:
  1268                           
  1269                           ;motore.c: 224: PORTAbits.RA1 = 1;
  1270  001CC6  8280               	bsf	3968,1,c	;volatile
  1271                           
  1272                           ;motore.c: 225: delay_ms(200);
  1273  001CC8  0E00               	movlw	0
  1274  001CCA  0100               	movlb	0	; () banked
  1275  001CCC  6FBD               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1276  001CCE  0EC8               	movlw	200
  1277  001CD0  6FBC               	movwf	delay_ms@value_ms& (0+255),b
  1278  001CD2  ECCC  F013         	call	_delay_ms	;wreg free
  1279  001CD6                     l5098:
  1280                           
  1281                           ;motore.c: 226: }
  1282                           ;motore.c: 227: }
  1283                           ;motore.c: 228: previousTimeCounter = timeCounter;
  1284  001CD6  C024  F07C         	movff	_timeCounter,_previousTimeCounter
  1285  001CDA  C025  F07D         	movff	_timeCounter+1,_previousTimeCounter+1
  1286  001CDE  C026  F07E         	movff	_timeCounter+2,_previousTimeCounter+2
  1287  001CE2  C027  F07F         	movff	_timeCounter+3,_previousTimeCounter+3
  1288  001CE6                     l5100:
  1289                           
  1290                           ;motore.c: 229: }
  1291                           ;motore.c: 230: if ((timeCounter - previousTimeCounter2 >= 100)) {
  1292  001CE6  C084  F0C9         	movff	_previousTimeCounter2,??_main
  1293  001CEA  C085  F0CA         	movff	_previousTimeCounter2+1,??_main+1
  1294  001CEE  C086  F0CB         	movff	_previousTimeCounter2+2,??_main+2
  1295  001CF2  C087  F0CC         	movff	_previousTimeCounter2+3,??_main+3
  1296  001CF6  0100               	movlb	0	; () banked
  1297  001CF8  1FC9               	comf	??_main& (0+255),f,b
  1298  001CFA  1FCA               	comf	(??_main+1)& (0+255),f,b
  1299  001CFC  1FCB               	comf	(??_main+2)& (0+255),f,b
  1300  001CFE  1FCC               	comf	(??_main+3)& (0+255),f,b
  1301  001D00  2BC9               	incf	??_main& (0+255),f,b
  1302  001D02  0E00               	movlw	0
  1303  001D04  23CA               	addwfc	(??_main+1)& (0+255),f,b
  1304  001D06  23CB               	addwfc	(??_main+2)& (0+255),f,b
  1305  001D08  23CC               	addwfc	(??_main+3)& (0+255),f,b
  1306  001D0A  5024               	movf	_timeCounter,w,c
  1307  001D0C  0100               	movlb	0	; () banked
  1308  001D0E  25C9               	addwf	??_main& (0+255),w,b
  1309  001D10  0100               	movlb	0	; () banked
  1310  001D12  6FCD               	movwf	(??_main+4)& (0+255),b
  1311  001D14  5025               	movf	_timeCounter+1,w,c
  1312  001D16  0100               	movlb	0	; () banked
  1313  001D18  21CA               	addwfc	(??_main+1)& (0+255),w,b
  1314  001D1A  0100               	movlb	0	; () banked
  1315  001D1C  6FCE               	movwf	(??_main+5)& (0+255),b
  1316  001D1E  5026               	movf	_timeCounter+2,w,c
  1317  001D20  0100               	movlb	0	; () banked
  1318  001D22  21CB               	addwfc	(??_main+2)& (0+255),w,b
  1319  001D24  0100               	movlb	0	; () banked
  1320  001D26  6FCF               	movwf	(??_main+6)& (0+255),b
  1321  001D28  5027               	movf	_timeCounter+3,w,c
  1322  001D2A  0100               	movlb	0	; () banked
  1323  001D2C  21CC               	addwfc	(??_main+3)& (0+255),w,b
  1324  001D2E  0100               	movlb	0	; () banked
  1325  001D30  6FD0               	movwf	(??_main+7)& (0+255),b
  1326  001D32  0100               	movlb	0	; () banked
  1327  001D34  51D0               	movf	(??_main+7)& (0+255),w,b
  1328  001D36  0100               	movlb	0	; () banked
  1329  001D38  11CF               	iorwf	(??_main+6)& (0+255),w,b
  1330  001D3A  0100               	movlb	0	; () banked
  1331  001D3C  11CE               	iorwf	(??_main+5)& (0+255),w,b
  1332  001D3E  E105               	bnz	u6680
  1333  001D40  0E64               	movlw	100
  1334  001D42  0100               	movlb	0	; () banked
  1335  001D44  5DCD               	subwf	(??_main+4)& (0+255),w,b
  1336  001D46  A0D8               	btfss	status,0,c
  1337  001D48  D630               	goto	l5028
  1338  001D4A                     u6680:
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;motore.c: 232: battery_measure();
  1342  001D4A  EC9C  F012         	call	_battery_measure	;wreg free
  1343                           
  1344                           ;motore.c: 233: previousTimeCounter2 = timeCounter;
  1345  001D4E  C024  F084         	movff	_timeCounter,_previousTimeCounter2
  1346  001D52  C025  F085         	movff	_timeCounter+1,_previousTimeCounter2+1
  1347  001D56  C026  F086         	movff	_timeCounter+2,_previousTimeCounter2+2
  1348  001D5A  C027  F087         	movff	_timeCounter+3,_previousTimeCounter2+3
  1349  001D5E  D625               	goto	l5028
  1350  001D60                     __end_of_main:
  1351                           	opt stack 0
  1352                           tblptru	equ	0xFF8
  1353                           tblptrh	equ	0xFF7
  1354                           tblptrl	equ	0xFF6
  1355                           tablat	equ	0xFF5
  1356                           postinc0	equ	0xFEE
  1357                           wreg	equ	0xFE8
  1358                           postdec1	equ	0xFE5
  1359                           fsr1l	equ	0xFE1
  1360                           status	equ	0xFD8
  1361                           
  1362 ;; *************** function _send_data *****************
  1363 ;; Defined at:
  1364 ;;		line 238 in file "motore.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;		None
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;  i               1   16[BANK0 ] unsigned char 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;		None               void
  1371 ;; Registers used:
  1372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1378 ;;      Params:         0       0       0       0
  1379 ;;      Locals:         0       1       0       0
  1380 ;;      Temps:          0       0       0       0
  1381 ;;      Totals:         0       1       0       0
  1382 ;;Total ram usage:        1 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    3
  1385 ;; This function calls:
  1386 ;;		_CANisTxReady
  1387 ;;		_CANsendMessage
  1388 ;; This function is called by:
  1389 ;;		_main
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text1
  1394  0022C4                     __ptext1:
  1395                           	opt stack 0
  1396  0022C4                     _send_data:
  1397                           	opt stack 27
  1398                           
  1399                           ;motore.c: 239: if (CANisTxReady()) {
  1400                           
  1401                           ;incstack = 0
  1402  0022C4  ECFC  F013         	call	_CANisTxReady	;wreg free
  1403  0022C8  0900               	iorlw	0
  1404  0022CA  B4D8               	btfsc	status,2,c
  1405  0022CC  D031               	goto	l4942
  1406                           
  1407                           ;motore.c: 240: if (remote_frame == 1) {
  1408  0022CE  AA3A               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1409  0022D0  D017               	goto	l4938
  1410                           
  1411                           ;motore.c: 241: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1412  0022D2  C074  F0AF         	movff	_id,CANsendMessage@identifier
  1413  0022D6  C075  F0B0         	movff	_id+1,CANsendMessage@identifier+1
  1414  0022DA  C076  F0B1         	movff	_id+2,CANsendMessage@identifier+2
  1415  0022DE  C077  F0B2         	movff	_id+3,CANsendMessage@identifier+3
  1416  0022E2  0E97               	movlw	low _data_array
  1417  0022E4  0100               	movlb	0	; () banked
  1418  0022E6  6FB3               	movwf	CANsendMessage@data& (0+255),b
  1419  0022E8  0E00               	movlw	high _data_array
  1420  0022EA  0100               	movlb	0	; () banked
  1421  0022EC  6FB4               	movwf	(CANsendMessage@data+1)& (0+255),b
  1422  0022EE  0E08               	movlw	8
  1423  0022F0  0100               	movlb	0	; () banked
  1424  0022F2  6FB5               	movwf	CANsendMessage@dataLength& (0+255),b
  1425  0022F4  0EBC               	movlw	188
  1426  0022F6  0100               	movlb	0	; () banked
  1427  0022F8  6FB6               	movwf	CANsendMessage@flags& (0+255),b
  1428  0022FA  EC6B  F006         	call	_CANsendMessage	;wreg free
  1429                           
  1430                           ;motore.c: 242: remote_frame = 0;
  1431  0022FE  9A3A               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1432  002300                     l4938:
  1433                           
  1434                           ;motore.c: 243: }
  1435                           ;motore.c: 244: if (can_retry == 1) {
  1436  002300  A03A               	btfss	_can_retry/(0+8),_can_retry& (0+7),c
  1437  002302  D016               	goto	l4942
  1438                           
  1439                           ;motore.c: 245: CANsendMessage(id1, data_array1, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_F
      +                          RAME & CAN_TX_PRIORITY_0);
  1440  002304  C078  F0AF         	movff	_id1,CANsendMessage@identifier
  1441  002308  C079  F0B0         	movff	_id1+1,CANsendMessage@identifier+1
  1442  00230C  C07A  F0B1         	movff	_id1+2,CANsendMessage@identifier+2
  1443  002310  C07B  F0B2         	movff	_id1+3,CANsendMessage@identifier+3
  1444  002314  0E9F               	movlw	low _data_array1
  1445  002316  0100               	movlb	0	; () banked
  1446  002318  6FB3               	movwf	CANsendMessage@data& (0+255),b
  1447  00231A  0E00               	movlw	high _data_array1
  1448  00231C  0100               	movlb	0	; () banked
  1449  00231E  6FB4               	movwf	(CANsendMessage@data+1)& (0+255),b
  1450  002320  0E08               	movlw	8
  1451  002322  0100               	movlb	0	; () banked
  1452  002324  6FB5               	movwf	CANsendMessage@dataLength& (0+255),b
  1453  002326  0EBC               	movlw	188
  1454  002328  0100               	movlb	0	; () banked
  1455  00232A  6FB6               	movwf	CANsendMessage@flags& (0+255),b
  1456  00232C  EC6B  F006         	call	_CANsendMessage	;wreg free
  1457  002330                     l4942:
  1458                           
  1459                           ;motore.c: 246: }
  1460                           ;motore.c: 247: }
  1461                           ;motore.c: 248: if ((TXB0CONbits.TXABT) || (TXB1CONbits.TXABT)) {
  1462  002330  010F               	movlb	15	; () banked
  1463  002332  BD40               	btfsc	64,6,b	;volatile
  1464  002334  D003               	goto	l701
  1465                           
  1466                           ; BSR set to: 15
  1467  002336  010F               	movlb	15	; () banked
  1468  002338  AD30               	btfss	48,6,b	;volatile
  1469  00233A  D031               	goto	l699
  1470  00233C                     l701:
  1471                           
  1472                           ; BSR set to: 15
  1473                           ;motore.c: 249: can_retry = 1;
  1474  00233C  803A               	bsf	_can_retry/(0+8),_can_retry& (0+7),c
  1475                           
  1476                           ;motore.c: 250: id1 = id;
  1477  00233E  C074  F078         	movff	_id,_id1
  1478  002342  C075  F079         	movff	_id+1,_id1+1
  1479  002346  C076  F07A         	movff	_id+2,_id1+2
  1480  00234A  C077  F07B         	movff	_id+3,_id1+3
  1481                           
  1482                           ;motore.c: 251: remote_frame1 = remote_frame;
  1483  00234E  AA3A               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1484  002350  D002               	goto	u6370
  1485  002352  8C3A               	bsf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1486  002354  D001               	goto	l4946
  1487  002356                     u6370:
  1488  002356  9C3A               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1489  002358                     l4946:
  1490                           
  1491                           ;motore.c: 252: for (char i = 0; i < 8; i++) {
  1492  002358  0E00               	movlw	0
  1493  00235A  0100               	movlb	0	; () banked
  1494  00235C  6FBF               	movwf	send_data@i& (0+255),b
  1495  00235E                     l4948:
  1496                           
  1497                           ; BSR set to: 0
  1498  00235E  0E07               	movlw	7
  1499  002360  0100               	movlb	0	; () banked
  1500  002362  65BF               	cpfsgt	send_data@i& (0+255),b
  1501  002364  D001               	goto	l4952
  1502  002366  D02F               	goto	l704
  1503  002368                     l4952:
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;motore.c: 253: data_array1[i] = data_array[i];
  1507  002368  0100               	movlb	0	; () banked
  1508  00236A  51BF               	movf	send_data@i& (0+255),w,b
  1509  00236C  0D01               	mullw	1
  1510  00236E  0E97               	movlw	low _data_array
  1511  002370  24F3               	addwf	prodl,w,c
  1512  002372  6ED9               	movwf	fsr2l,c
  1513  002374  0E00               	movlw	high _data_array
  1514  002376  20F4               	addwfc	prodh,w,c
  1515  002378  6EDA               	movwf	fsr2h,c
  1516  00237A  0100               	movlb	0	; () banked
  1517  00237C  51BF               	movf	send_data@i& (0+255),w,b
  1518  00237E  0D01               	mullw	1
  1519  002380  0E9F               	movlw	low _data_array1
  1520  002382  24F3               	addwf	prodl,w,c
  1521  002384  6EE1               	movwf	fsr1l,c
  1522  002386  0E00               	movlw	high _data_array1
  1523  002388  20F4               	addwfc	prodh,w,c
  1524  00238A  6EE2               	movwf	fsr1h,c
  1525  00238C  CFDF FFE7          	movff	indf2,indf1
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;motore.c: 254: TXB0CONbits.TXABT = 0;
  1529  002390  010F               	movlb	15	; () banked
  1530  002392  9D40               	bcf	64,6,b	;volatile
  1531                           
  1532                           ; BSR set to: 15
  1533                           ;motore.c: 255: TXB1CONbits.TXABT = 0;
  1534  002394  010F               	movlb	15	; () banked
  1535  002396  9D30               	bcf	48,6,b	;volatile
  1536                           
  1537                           ; BSR set to: 15
  1538  002398  0100               	movlb	0	; () banked
  1539  00239A  2BBF               	incf	send_data@i& (0+255),f,b
  1540  00239C  D7E0               	goto	l4948
  1541  00239E                     l699:
  1542                           
  1543                           ; BSR set to: 15
  1544                           ;motore.c: 258: can_retry = 0;
  1545  00239E  903A               	bcf	_can_retry/(0+8),_can_retry& (0+7),c
  1546                           
  1547                           ;motore.c: 259: if (remote_frame1 != 0) {
  1548  0023A0  AC3A               	btfss	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1549  0023A2  D010               	goto	l705
  1550                           
  1551                           ; BSR set to: 15
  1552                           ;motore.c: 260: remote_frame = remote_frame1;
  1553  0023A4  AC3A               	btfss	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1554  0023A6  D002               	goto	u6420
  1555  0023A8  8A3A               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1556  0023AA  D001               	goto	u6435
  1557  0023AC                     u6420:
  1558  0023AC  9A3A               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1559  0023AE                     u6435:
  1560                           
  1561                           ;motore.c: 261: id = id1;
  1562  0023AE  C078  F074         	movff	_id1,_id
  1563  0023B2  C079  F075         	movff	_id1+1,_id+1
  1564  0023B6  C07A  F076         	movff	_id1+2,_id+2
  1565  0023BA  C07B  F077         	movff	_id1+3,_id+3
  1566                           
  1567                           ;motore.c: 262: message_sent = 1;
  1568  0023BE  883A               	bsf	_message_sent/(0+8),_message_sent& (0+7),c
  1569                           
  1570                           ;motore.c: 263: remote_frame1 = 0;
  1571  0023C0  9C3A               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1572                           
  1573                           ;motore.c: 264: } else {
  1574  0023C2  D001               	goto	l704
  1575  0023C4                     l705:
  1576                           
  1577                           ; BSR set to: 15
  1578                           ;motore.c: 266: message_sent = 0;
  1579  0023C4  983A               	bcf	_message_sent/(0+8),_message_sent& (0+7),c
  1580  0023C6                     l704:
  1581                           
  1582                           ;motore.c: 267: }
  1583                           ;motore.c: 268: }
  1584                           ;motore.c: 269: remote_frame = 0;
  1585  0023C6  9A3A               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1586  0023C8  0012               	return		;funcret
  1587  0023CA                     __end_of_send_data:
  1588                           	opt stack 0
  1589                           tblptru	equ	0xFF8
  1590                           tblptrh	equ	0xFF7
  1591                           tblptrl	equ	0xFF6
  1592                           tablat	equ	0xFF5
  1593                           prodh	equ	0xFF4
  1594                           prodl	equ	0xFF3
  1595                           postinc0	equ	0xFEE
  1596                           wreg	equ	0xFE8
  1597                           indf1	equ	0xFE7
  1598                           postdec1	equ	0xFE5
  1599                           fsr1h	equ	0xFE2
  1600                           fsr1l	equ	0xFE1
  1601                           indf2	equ	0xFDF
  1602                           fsr2h	equ	0xFDA
  1603                           fsr2l	equ	0xFD9
  1604                           status	equ	0xFD8
  1605                           
  1606 ;; *************** function _configurazione_iniziale *****************
  1607 ;; Defined at:
  1608 ;;		line 287 in file "motore.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;		None               void
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1622 ;;      Params:         0       0       0       0
  1623 ;;      Locals:         0       0       0       0
  1624 ;;      Temps:          0       0       0       0
  1625 ;;      Totals:         0       0       0       0
  1626 ;;Total ram usage:        0 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; Hardware stack levels required when called:    4
  1629 ;; This function calls:
  1630 ;;		_CANInitialize
  1631 ;;		_SetOutputEPWM1
  1632 ;;		_delay_ms
  1633 ;; This function is called by:
  1634 ;;		_main
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text2
  1639  002488                     __ptext2:
  1640                           	opt stack 0
  1641  002488                     _configurazione_iniziale:
  1642                           	opt stack 26
  1643                           
  1644                           ;motore.c: 290: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1645                           
  1646                           ;incstack = 0
  1647  002488  0E06               	movlw	6
  1648  00248A  0100               	movlb	0	; () banked
  1649  00248C  6FBD               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1650  00248E  0E05               	movlw	5
  1651  002490  0100               	movlb	0	; () banked
  1652  002492  6FBE               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1653  002494  0E01               	movlw	1
  1654  002496  0100               	movlb	0	; () banked
  1655  002498  6FBF               	movwf	CANInitialize@SJW& (0+255),b
  1656  00249A  0E03               	movlw	3
  1657  00249C  0100               	movlb	0	; () banked
  1658  00249E  6FC0               	movwf	CANInitialize@BRP& (0+255),b
  1659  0024A0  0E9D               	movlw	157
  1660  0024A2  0100               	movlb	0	; () banked
  1661  0024A4  6FC1               	movwf	CANInitialize@flags& (0+255),b
  1662  0024A6  0E04               	movlw	4
  1663  0024A8  EC7F  F010         	call	_CANInitialize
  1664                           
  1665                           ;motore.c: 291: RCONbits.IPEN = 1;
  1666  0024AC  8ED0               	bsf	4048,7,c	;volatile
  1667                           
  1668                           ;motore.c: 292: INTCONbits.INT0IF = 0;
  1669  0024AE  92F2               	bcf	intcon,1,c	;volatile
  1670                           
  1671                           ;motore.c: 293: PIR3bits.RXB1IF = 0;
  1672  0024B0  92A4               	bcf	4004,1,c	;volatile
  1673                           
  1674                           ;motore.c: 294: PIR3bits.RXB0IF = 0;
  1675  0024B2  90A4               	bcf	4004,0,c	;volatile
  1676                           
  1677                           ;motore.c: 296: IPR3bits.RXB1IP = 0;
  1678  0024B4  92A5               	bcf	4005,1,c	;volatile
  1679                           
  1680                           ;motore.c: 297: IPR3bits.RXB0IP = 0;
  1681  0024B6  90A5               	bcf	4005,0,c	;volatile
  1682                           
  1683                           ;motore.c: 298: INTCONbits.GIEH = 1;
  1684  0024B8  8EF2               	bsf	intcon,7,c	;volatile
  1685                           
  1686                           ;motore.c: 299: INTCONbits.GIEL = 1;
  1687  0024BA  8CF2               	bsf	intcon,6,c	;volatile
  1688                           
  1689                           ;motore.c: 302: T3CON = 0x01;
  1690  0024BC  0E01               	movlw	1
  1691  0024BE  6EB1               	movwf	4017,c	;volatile
  1692                           
  1693                           ;motore.c: 303: PIR2bits.TMR3IF = 0;
  1694  0024C0  92A1               	bcf	4001,1,c	;volatile
  1695                           
  1696                           ;motore.c: 304: IPR2bits.TMR3IP = 0;
  1697  0024C2  92A2               	bcf	4002,1,c	;volatile
  1698                           
  1699                           ;motore.c: 305: TMR3H = 0x63;
  1700  0024C4  0E63               	movlw	99
  1701  0024C6  6EB3               	movwf	4019,c	;volatile
  1702                           
  1703                           ;motore.c: 306: TMR3L = 0xC0;
  1704  0024C8  0EC0               	movlw	192
  1705  0024CA  6EB2               	movwf	4018,c	;volatile
  1706                           
  1707                           ;motore.c: 311: ADCON0bits.ADON = 1;
  1708  0024CC  80C2               	bsf	4034,0,c	;volatile
  1709                           
  1710                           ;motore.c: 312: ADCON0bits.CHS0 = 0;
  1711  0024CE  94C2               	bcf	4034,2,c	;volatile
  1712                           
  1713                           ;motore.c: 313: ADCON0bits.CHS1 = 0;
  1714  0024D0  96C2               	bcf	4034,3,c	;volatile
  1715                           
  1716                           ;motore.c: 314: ADCON0bits.CHS2 = 0;
  1717  0024D2  98C2               	bcf	4034,4,c	;volatile
  1718                           
  1719                           ;motore.c: 315: ADCON0bits.CHS3 = 0;
  1720  0024D4  9AC2               	bcf	4034,5,c	;volatile
  1721                           
  1722                           ;motore.c: 316: ADCON1bits.PCFG0 = 0;
  1723  0024D6  90C1               	bcf	4033,0,c	;volatile
  1724                           
  1725                           ;motore.c: 317: ADCON1bits.PCFG1 = 1;
  1726  0024D8  82C1               	bsf	4033,1,c	;volatile
  1727                           
  1728                           ;motore.c: 318: ADCON1bits.PCFG2 = 1;
  1729  0024DA  84C1               	bsf	4033,2,c	;volatile
  1730                           
  1731                           ;motore.c: 319: ADCON1bits.PCFG3 = 1;
  1732  0024DC  86C1               	bsf	4033,3,c	;volatile
  1733                           
  1734                           ;motore.c: 320: ADCON1bits.VCFG0 = 0;
  1735  0024DE  98C1               	bcf	4033,4,c	;volatile
  1736                           
  1737                           ;motore.c: 321: ADCON1bits.VCFG1 = 0;
  1738  0024E0  9AC1               	bcf	4033,5,c	;volatile
  1739                           
  1740                           ;motore.c: 322: ADCON2bits.ADCS0 = 1;
  1741  0024E2  80C0               	bsf	4032,0,c	;volatile
  1742                           
  1743                           ;motore.c: 323: ADCON2bits.ADCS1 = 0;
  1744  0024E4  92C0               	bcf	4032,1,c	;volatile
  1745                           
  1746                           ;motore.c: 324: ADCON2bits.ADCS2 = 1;
  1747  0024E6  84C0               	bsf	4032,2,c	;volatile
  1748                           
  1749                           ;motore.c: 325: ADCON2bits.ACQT0 = 0;
  1750  0024E8  96C0               	bcf	4032,3,c	;volatile
  1751                           
  1752                           ;motore.c: 326: ADCON2bits.ACQT1 = 1;
  1753  0024EA  88C0               	bsf	4032,4,c	;volatile
  1754                           
  1755                           ;motore.c: 327: ADCON2bits.ACQT2 = 1;
  1756  0024EC  8AC0               	bsf	4032,5,c	;volatile
  1757                           
  1758                           ;motore.c: 328: ADCON2bits.ADFM = 0;
  1759  0024EE  9EC0               	bcf	4032,7,c	;volatile
  1760                           
  1761                           ;motore.c: 331: PIE3bits.RXB1IE = 1;
  1762  0024F0  82A3               	bsf	4003,1,c	;volatile
  1763                           
  1764                           ;motore.c: 332: PIE3bits.RXB0IE = 1;
  1765  0024F2  80A3               	bsf	4003,0,c	;volatile
  1766                           
  1767                           ;motore.c: 333: PIE2bits.TMR3IE = 1;
  1768  0024F4  82A0               	bsf	4000,1,c	;volatile
  1769                           
  1770                           ;motore.c: 335: LATA = 0x00;
  1771  0024F6  0E00               	movlw	0
  1772  0024F8  6E89               	movwf	3977,c	;volatile
  1773                           
  1774                           ;motore.c: 336: TRISA = 0b01111101;
  1775  0024FA  0E7D               	movlw	125
  1776  0024FC  6E92               	movwf	3986,c	;volatile
  1777                           
  1778                           ;motore.c: 338: LATB = 0x00;
  1779  0024FE  0E00               	movlw	0
  1780  002500  6E8A               	movwf	3978,c	;volatile
  1781                           
  1782                           ;motore.c: 339: TRISB = 0b11111011;
  1783  002502  0EFB               	movlw	251
  1784  002504  6E93               	movwf	3987,c	;volatile
  1785                           
  1786                           ;motore.c: 341: LATC = 0x00;
  1787  002506  0E00               	movlw	0
  1788  002508  6E8B               	movwf	3979,c	;volatile
  1789                           
  1790                           ;motore.c: 342: TRISC = 0x00;
  1791  00250A  0E00               	movlw	0
  1792  00250C  6E94               	movwf	3988,c	;volatile
  1793                           
  1794                           ;motore.c: 344: LATD = 0x00;
  1795  00250E  0E00               	movlw	0
  1796  002510  6E8C               	movwf	3980,c	;volatile
  1797                           
  1798                           ;motore.c: 345: TRISD = 0x00;
  1799  002512  0E00               	movlw	0
  1800  002514  6E95               	movwf	3989,c	;volatile
  1801                           
  1802                           ;motore.c: 347: LATE = 0x00;
  1803  002516  0E00               	movlw	0
  1804  002518  6E8D               	movwf	3981,c	;volatile
  1805                           
  1806                           ;motore.c: 348: TRISE = 0xFF;
  1807  00251A  6896               	setf	3990,c	;volatile
  1808                           
  1809                           ;motore.c: 349: delay_ms(2);
  1810  00251C  0E00               	movlw	0
  1811  00251E  0100               	movlb	0	; () banked
  1812  002520  6FBD               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1813  002522  0E02               	movlw	2
  1814  002524  6FBC               	movwf	delay_ms@value_ms& (0+255),b
  1815  002526  ECCC  F013         	call	_delay_ms	;wreg free
  1816                           
  1817                           ;motore.c: 350: SetOutputEPWM1(0b01111111, 0b11111100);
  1818  00252A  0EFC               	movlw	252
  1819  00252C  0100               	movlb	0	; () banked
  1820  00252E  6FAF               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  1821  002530  0E7F               	movlw	127
  1822  002532  EC1F  F013         	call	_SetOutputEPWM1
  1823  002536  0012               	return		;funcret
  1824  002538                     __end_of_configurazione_iniziale:
  1825                           	opt stack 0
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           prodh	equ	0xFF4
  1831                           prodl	equ	0xFF3
  1832                           intcon	equ	0xFF2
  1833                           postinc0	equ	0xFEE
  1834                           wreg	equ	0xFE8
  1835                           indf1	equ	0xFE7
  1836                           postdec1	equ	0xFE5
  1837                           fsr1h	equ	0xFE2
  1838                           fsr1l	equ	0xFE1
  1839                           indf2	equ	0xFDF
  1840                           fsr2h	equ	0xFDA
  1841                           fsr2l	equ	0xFD9
  1842                           status	equ	0xFD8
  1843                           
  1844 ;; *************** function _delay_ms *****************
  1845 ;; Defined at:
  1846 ;;		line 61 in file "delay.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  value_ms        2   13[BANK0 ] unsigned int 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;		None               void
  1853 ;; Registers used:
  1854 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1860 ;;      Params:         0       2       0       0
  1861 ;;      Locals:         0       0       0       0
  1862 ;;      Temps:          0       0       0       0
  1863 ;;      Totals:         0       2       0       0
  1864 ;;Total ram usage:        2 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    3
  1867 ;; This function calls:
  1868 ;;		___wmul
  1869 ;; This function is called by:
  1870 ;;		_main
  1871 ;;		_configurazione_iniziale
  1872 ;;		_delay_s
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text3
  1877  002798                     __ptext3:
  1878                           	opt stack 0
  1879  002798                     _delay_ms:
  1880                           	opt stack 27
  1881                           
  1882                           ;delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  1883                           
  1884                           ;incstack = 0
  1885  002798  C042  F0B6         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  1886  00279C  0100               	movlb	0	; () banked
  1887  00279E  6BB7               	clrf	(___wmul@multiplier+1)& (0+255),b
  1888  0027A0  C0BC  F0B8         	movff	delay_ms@value_ms,___wmul@multiplicand
  1889  0027A4  C0BD  F0B9         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  1890  0027A8  ECB1  F013         	call	___wmul	;wreg free
  1891  0027AC  C0B6  F028         	movff	?___wmul,_clock_counter_reference	;volatile
  1892  0027B0  C0B7  F029         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  1893                           
  1894                           ;delay.c: 75: while (clock_counter_reference) {
  1895  0027B4  D006               	goto	l569
  1896  0027B6                     l4742:
  1897                           
  1898                           ;delay.c: 85: _delay(240);
  1899  0027B6  0E50               	movlw	80
  1900  0027B8                     u6697:
  1901  0027B8  2EE8               	decfsz	wreg,f,c
  1902  0027BA  D7FE               	goto	u6697
  1903                           
  1904                           ;delay.c: 88: clock_counter_reference--;
  1905  0027BC  0628               	decf	_clock_counter_reference,f,c	;volatile
  1906  0027BE  A0D8               	btfss	status,0,c
  1907  0027C0  0629               	decf	_clock_counter_reference+1,f,c	;volatile
  1908  0027C2                     l569:
  1909  0027C2  5028               	movf	_clock_counter_reference,w,c	;volatile
  1910  0027C4  1029               	iorwf	_clock_counter_reference+1,w,c	;volatile
  1911  0027C6  B4D8               	btfsc	status,2,c
  1912  0027C8  0012               	return	
  1913  0027CA  D7F5               	goto	l4742
  1914  0027CC                     __end_of_delay_ms:
  1915                           	opt stack 0
  1916                           tblptru	equ	0xFF8
  1917                           tblptrh	equ	0xFF7
  1918                           tblptrl	equ	0xFF6
  1919                           tablat	equ	0xFF5
  1920                           prodh	equ	0xFF4
  1921                           prodl	equ	0xFF3
  1922                           intcon	equ	0xFF2
  1923                           postinc0	equ	0xFEE
  1924                           wreg	equ	0xFE8
  1925                           indf1	equ	0xFE7
  1926                           postdec1	equ	0xFE5
  1927                           fsr1h	equ	0xFE2
  1928                           fsr1l	equ	0xFE1
  1929                           indf2	equ	0xFDF
  1930                           fsr2h	equ	0xFDA
  1931                           fsr2l	equ	0xFD9
  1932                           status	equ	0xFD8
  1933                           
  1934 ;; *************** function _SetOutputEPWM1 *****************
  1935 ;; Defined at:
  1936 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  outputconfig    1    wreg     unsigned char 
  1939 ;;  outputmode      1    0[BANK0 ] unsigned char 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  outputconfig    1    1[BANK0 ] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;		None               void
  1944 ;; Registers used:
  1945 ;;		wreg, status,2, status,0
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1951 ;;      Params:         0       1       0       0
  1952 ;;      Locals:         0       1       0       0
  1953 ;;      Temps:          0       0       0       0
  1954 ;;      Totals:         0       2       0       0
  1955 ;;Total ram usage:        2 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    2
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;;		_configurazione_iniziale
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text4
  1967  00263E                     __ptext4:
  1968                           	opt stack 0
  1969  00263E                     _SetOutputEPWM1:
  1970                           	opt stack 27
  1971                           
  1972                           ;incstack = 0
  1973                           ;SetOutputEPWM1@outputconfig stored from wreg
  1974  00263E  0100               	movlb	0	; () banked
  1975  002640  6FB0               	movwf	SetOutputEPWM1@outputconfig& (0+255),b
  1976  002642  50BA               	movf	4026,w,c	;volatile
  1977  002644  09C0               	iorlw	192
  1978  002646  0100               	movlb	0	; () banked
  1979  002648  15B0               	andwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  1980  00264A  6EBA               	movwf	4026,c	;volatile
  1981  00264C  50BA               	movf	4026,w,c	;volatile
  1982  00264E  090F               	iorlw	15
  1983  002650  0100               	movlb	0	; () banked
  1984  002652  15AF               	andwf	SetOutputEPWM1@outputmode& (0+255),w,b
  1985  002654  6EBA               	movwf	4026,c	;volatile
  1986  002656  0E3F               	movlw	63
  1987  002658  0100               	movlb	0	; () banked
  1988  00265A  19B0               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  1989  00265C  A4D8               	btfss	status,2,c
  1990  00265E  D002               	goto	l4750
  1991                           
  1992                           ; BSR set to: 0
  1993  002660  9895               	bcf	3989,4,c	;volatile
  1994  002662  0012               	return	
  1995  002664                     l4750:
  1996                           
  1997                           ; BSR set to: 0
  1998  002664  0EBF               	movlw	191
  1999  002666  0100               	movlb	0	; () banked
  2000  002668  19B0               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  2001  00266A  A4D8               	btfss	status,2,c
  2002  00266C  D003               	goto	l4754
  2003                           
  2004                           ; BSR set to: 0
  2005  00266E  9895               	bcf	3989,4,c	;volatile
  2006  002670  9A95               	bcf	3989,5,c	;volatile
  2007  002672  0012               	return	
  2008  002674                     l4754:
  2009                           
  2010                           ; BSR set to: 0
  2011  002674  0E7F               	movlw	127
  2012  002676  0100               	movlb	0	; () banked
  2013  002678  19B0               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  2014  00267A  B4D8               	btfsc	status,2,c
  2015  00267C  D004               	goto	l750
  2016                           
  2017                           ; BSR set to: 0
  2018  00267E  0100               	movlb	0	; () banked
  2019  002680  29B0               	incf	SetOutputEPWM1@outputconfig& (0+255),w,b
  2020  002682  A4D8               	btfss	status,2,c
  2021  002684  0012               	return	
  2022  002686                     l750:
  2023                           
  2024                           ; BSR set to: 0
  2025  002686  9895               	bcf	3989,4,c	;volatile
  2026  002688  9A95               	bcf	3989,5,c	;volatile
  2027  00268A  9C95               	bcf	3989,6,c	;volatile
  2028  00268C  9E95               	bcf	3989,7,c	;volatile
  2029                           
  2030                           ; BSR set to: 0
  2031                           
  2032                           ; BSR set to: 0
  2033  00268E  0012               	return	
  2034  002690                     __end_of_SetOutputEPWM1:
  2035                           	opt stack 0
  2036                           tblptru	equ	0xFF8
  2037                           tblptrh	equ	0xFF7
  2038                           tblptrl	equ	0xFF6
  2039                           tablat	equ	0xFF5
  2040                           prodh	equ	0xFF4
  2041                           prodl	equ	0xFF3
  2042                           intcon	equ	0xFF2
  2043                           postinc0	equ	0xFEE
  2044                           wreg	equ	0xFE8
  2045                           indf1	equ	0xFE7
  2046                           postdec1	equ	0xFE5
  2047                           fsr1h	equ	0xFE2
  2048                           fsr1l	equ	0xFE1
  2049                           indf2	equ	0xFDF
  2050                           fsr2h	equ	0xFDA
  2051                           fsr2l	equ	0xFD9
  2052                           status	equ	0xFD8
  2053                           
  2054 ;; *************** function _CANInitialize *****************
  2055 ;; Defined at:
  2056 ;;		line 218 in file "CANlib.h"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  propSeg         1    wreg     unsigned char 
  2059 ;;  phaseSeg1       1   14[BANK0 ] unsigned char 
  2060 ;;  phaseSeg2       1   15[BANK0 ] unsigned char 
  2061 ;;  SJW             1   16[BANK0 ] unsigned char 
  2062 ;;  BRP             1   17[BANK0 ] unsigned char 
  2063 ;;  flags           1   18[BANK0 ] enum E16844
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  propSeg         1   23[BANK0 ] unsigned char 
  2066 ;;  FilterConfig    1   25[BANK0 ] unsigned char 
  2067 ;;  FilterConfig    1   24[BANK0 ] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;		None               void
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2077 ;;      Params:         0       5       0       0
  2078 ;;      Locals:         0       3       0       0
  2079 ;;      Temps:          0       4       0       0
  2080 ;;      Totals:         0      12       0       0
  2081 ;;Total ram usage:       12 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    3
  2084 ;; This function calls:
  2085 ;;		_CANOperationMode
  2086 ;;		_CANSetFilter
  2087 ;;		_CANSetMask
  2088 ;; This function is called by:
  2089 ;;		_configurazione_iniziale
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text5
  2094  0020FE                     __ptext5:
  2095                           	opt stack 0
  2096  0020FE                     _CANInitialize:
  2097                           	opt stack 26
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;incstack = 0
  2101                           ;CANInitialize@propSeg stored from wreg
  2102  0020FE  0100               	movlb	0	; () banked
  2103  002100  6FC6               	movwf	CANInitialize@propSeg& (0+255),b
  2104                           
  2105                           ;CANlib.h: 220: BYTE FilterConfig1;
  2106                           ;CANlib.h: 221: BYTE FilterConfig2;
  2107                           ;CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2108  002102  0E80               	movlw	128
  2109  002104  EC1F  F014         	call	_CANOperationMode
  2110                           
  2111                           ;CANlib.h: 225: BRGCON1 = 0x00;
  2112  002108  0E00               	movlw	0
  2113  00210A  6E70               	movwf	3952,c	;volatile
  2114                           
  2115                           ;CANlib.h: 226: BRGCON2 = 0x00;
  2116  00210C  0E00               	movlw	0
  2117  00210E  6E71               	movwf	3953,c	;volatile
  2118                           
  2119                           ;CANlib.h: 227: BRGCON3 = 0x00;
  2120  002110  0E00               	movlw	0
  2121  002112  6E72               	movwf	3954,c	;volatile
  2122                           
  2123                           ;CANlib.h: 229: SJW= SJW << 6;
  2124  002114  0100               	movlb	0	; () banked
  2125  002116  41BF               	rrncf	CANInitialize@SJW& (0+255),w,b
  2126  002118  42E8               	rrncf	wreg,f,c
  2127  00211A  0BC0               	andlw	192
  2128  00211C  0100               	movlb	0	; () banked
  2129  00211E  6FBF               	movwf	CANInitialize@SJW& (0+255),b
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;CANlib.h: 230: BRGCON1 |= SJW;
  2133  002120  0100               	movlb	0	; () banked
  2134  002122  51BF               	movf	CANInitialize@SJW& (0+255),w,b
  2135  002124  1270               	iorwf	3952,f,c	;volatile
  2136                           
  2137                           ; BSR set to: 0
  2138                           ;CANlib.h: 231: BRGCON1 |= BRP;
  2139  002126  0100               	movlb	0	; () banked
  2140  002128  51C0               	movf	CANInitialize@BRP& (0+255),w,b
  2141  00212A  1270               	iorwf	3952,f,c	;volatile
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;CANlib.h: 233: BRGCON2 |= propSeg;
  2145  00212C  0100               	movlb	0	; () banked
  2146  00212E  51C6               	movf	CANInitialize@propSeg& (0+255),w,b
  2147  002130  1271               	iorwf	3953,f,c	;volatile
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2151  002132  0100               	movlb	0	; () banked
  2152  002134  39BD               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2153  002136  42E8               	rrncf	wreg,f,c
  2154  002138  0BF8               	andlw	248
  2155  00213A  0100               	movlb	0	; () banked
  2156  00213C  6FBD               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2160  00213E  0100               	movlb	0	; () banked
  2161  002140  51BD               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2162  002142  1271               	iorwf	3953,f,c	;volatile
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2166  002144  0100               	movlb	0	; () banked
  2167  002146  A5C1               	btfss	CANInitialize@flags& (0+255),2,b
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;CANlib.h: 238: BRGCON2bits.SAM= 1;
  2171  002148  8C71               	bsf	3953,6,c	;volatile
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2175  00214A  0100               	movlb	0	; () banked
  2176  00214C  B1C1               	btfsc	CANInitialize@flags& (0+255),0,b
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2180  00214E  8E71               	bsf	3953,7,c	;volatile
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2184                           
  2185                           ; BSR set to: 0
  2186  002150  0100               	movlb	0	; () banked
  2187  002152  51BE               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2188  002154  1272               	iorwf	3954,f,c	;volatile
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2192  002156  0100               	movlb	0	; () banked
  2193  002158  B3C1               	btfsc	CANInitialize@flags& (0+255),1,b
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2197  00215A  8C72               	bsf	3954,6,c	;volatile
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2201                           
  2202                           ; BSR set to: 0
  2203  00215C  0100               	movlb	0	; () banked
  2204  00215E  51C1               	movf	CANInitialize@flags& (0+255),w,b
  2205  002160  0B60               	andlw	96
  2206  002162  6E60               	movwf	3936,c	;volatile
  2207                           
  2208                           ;CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON )
  2209  002164  0100               	movlb	0	; () banked
  2210  002166  51C1               	movf	CANInitialize@flags& (0+255),w,b
  2211  002168  0B10               	andlw	16
  2212  00216A  0AFF               	xorlw	255
  2213  00216C  B4D8               	btfsc	status,2,c
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2217  00216E  8460               	bsf	3936,2,c	;volatile
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;CANlib.h: 255: RXB1CON = RXB0CON;
  2221  002170  CF60 FF50          	movff	3936,3920	;volatile
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2225  002174  0E00               	movlw	0
  2226  002176  0100               	movlb	0	; () banked
  2227  002178  6FAF               	movwf	CANSetMask@mask& (0+255),b
  2228  00217A  0E00               	movlw	0
  2229  00217C  6FB0               	movwf	(CANSetMask@mask+1)& (0+255),b
  2230  00217E  0E00               	movlw	0
  2231  002180  6FB1               	movwf	(CANSetMask@mask+2)& (0+255),b
  2232  002182  0E00               	movlw	0
  2233  002184  6FB2               	movwf	(CANSetMask@mask+3)& (0+255),b
  2234  002186  0EF7               	movlw	247
  2235  002188  0100               	movlb	0	; () banked
  2236  00218A  6FB3               	movwf	CANSetMask@type& (0+255),b
  2237  00218C  0E01               	movlw	1
  2238  00218E  ECB0  F00E         	call	_CANSetMask
  2239                           
  2240                           ;CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2241  002192  0E00               	movlw	0
  2242  002194  0100               	movlb	0	; () banked
  2243  002196  6FAF               	movwf	CANSetMask@mask& (0+255),b
  2244  002198  0E00               	movlw	0
  2245  00219A  6FB0               	movwf	(CANSetMask@mask+1)& (0+255),b
  2246  00219C  0E00               	movlw	0
  2247  00219E  6FB1               	movwf	(CANSetMask@mask+2)& (0+255),b
  2248  0021A0  0E00               	movlw	0
  2249  0021A2  6FB2               	movwf	(CANSetMask@mask+3)& (0+255),b
  2250  0021A4  0EF7               	movlw	247
  2251  0021A6  0100               	movlb	0	; () banked
  2252  0021A8  6FB3               	movwf	CANSetMask@type& (0+255),b
  2253  0021AA  0E02               	movlw	2
  2254  0021AC  ECB0  F00E         	call	_CANSetMask
  2255                           
  2256                           ;CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2257  0021B0  D00F               	goto	l4490
  2258  0021B2                     l4484:
  2259                           
  2260                           ;CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2261  0021B2  0EF7               	movlw	247
  2262  0021B4  0100               	movlb	0	; () banked
  2263  0021B6  6FC7               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2264  0021B8  D007               	goto	l4486
  2265  0021BA                     l358:
  2266                           
  2267                           ; BSR set to: 0
  2268                           ;CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2269  0021BA  0100               	movlb	0	; () banked
  2270  0021BC  69C7               	setf	CANInitialize@FilterConfig1& (0+255),b
  2271                           
  2272                           ;CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2273  0021BE  0100               	movlb	0	; () banked
  2274  0021C0  69C8               	setf	CANInitialize@FilterConfig2& (0+255),b
  2275                           
  2276                           ;CANlib.h: 273: break;
  2277  0021C2  D028               	goto	l4492
  2278  0021C4                     l359:
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2282  0021C4  0100               	movlb	0	; () banked
  2283  0021C6  69C7               	setf	CANInitialize@FilterConfig1& (0+255),b
  2284  0021C8                     l4486:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2288  0021C8  0EF7               	movlw	247
  2289  0021CA  0100               	movlb	0	; () banked
  2290  0021CC  6FC8               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;CANlib.h: 278: }
  2294                           
  2295                           ;CANlib.h: 277: break;
  2296  0021CE  D022               	goto	l4492
  2297  0021D0                     l4490:
  2298  0021D0  0E9F               	movlw	159
  2299  0021D2  0100               	movlb	0	; () banked
  2300  0021D4  6FC2               	movwf	??_CANInitialize& (0+255),b
  2301  0021D6  0EFF               	movlw	255
  2302  0021D8  0100               	movlb	0	; () banked
  2303  0021DA  6FC3               	movwf	(??_CANInitialize+1)& (0+255),b
  2304  0021DC  0100               	movlb	0	; () banked
  2305  0021DE  51C1               	movf	CANInitialize@flags& (0+255),w,b
  2306  0021E0  0B60               	andlw	96
  2307  0021E2  0100               	movlb	0	; () banked
  2308  0021E4  6FC4               	movwf	(??_CANInitialize+2)& (0+255),b
  2309  0021E6  6BC5               	clrf	(??_CANInitialize+3)& (0+255),b
  2310  0021E8  0100               	movlb	0	; () banked
  2311  0021EA  51C2               	movf	??_CANInitialize& (0+255),w,b
  2312  0021EC  0100               	movlb	0	; () banked
  2313  0021EE  13C4               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2314  0021F0  0100               	movlb	0	; () banked
  2315  0021F2  51C3               	movf	(??_CANInitialize+1)& (0+255),w,b
  2316  0021F4  0100               	movlb	0	; () banked
  2317  0021F6  13C5               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2318                           
  2319                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2320                           ; Switch size 1, requested type "space"
  2321                           ; Number of cases is 1, Range of values is 0 to 0
  2322                           ; switch strategies available:
  2323                           ; Name         Instructions Cycles
  2324                           ; simple_byte            4     3 (average)
  2325                           ;	Chosen strategy is simple_byte
  2326  0021F8  0100               	movlb	0	; () banked
  2327  0021FA  51C5               	movf	(??_CANInitialize+3)& (0+255),w,b
  2328  0021FC  0A00               	xorlw	0	; case 0
  2329  0021FE  A4D8               	btfss	status,2,c
  2330  002200  D7E1               	goto	l359
  2331                           
  2332                           ; BSR set to: 0
  2333                           ; Switch size 1, requested type "space"
  2334                           ; Number of cases is 2, Range of values is 191 to 223
  2335                           ; switch strategies available:
  2336                           ; Name         Instructions Cycles
  2337                           ; simple_byte            7     4 (average)
  2338                           ;	Chosen strategy is simple_byte
  2339  002202  0100               	movlb	0	; () banked
  2340  002204  51C4               	movf	(??_CANInitialize+2)& (0+255),w,b
  2341  002206  0ABF               	xorlw	191	; case 191
  2342  002208  B4D8               	btfsc	status,2,c
  2343  00220A  D7D7               	goto	l358
  2344  00220C  0A60               	xorlw	96	; case 223
  2345  00220E  B4D8               	btfsc	status,2,c
  2346  002210  D7D0               	goto	l4484
  2347  002212  D7D8               	goto	l359
  2348  002214                     l4492:
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2352  002214  0E00               	movlw	0
  2353  002216  0100               	movlb	0	; () banked
  2354  002218  6FAF               	movwf	CANSetFilter@filter& (0+255),b
  2355  00221A  0E00               	movlw	0
  2356  00221C  6FB0               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2357  00221E  0E00               	movlw	0
  2358  002220  6FB1               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2359  002222  0E00               	movlw	0
  2360  002224  6FB2               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2361  002226  C0C7  F0B3         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2362  00222A  0E00               	movlw	0
  2363  00222C  ECE8  F000         	call	_CANSetFilter
  2364                           
  2365                           ;CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2366  002230  0E00               	movlw	0
  2367  002232  0100               	movlb	0	; () banked
  2368  002234  6FAF               	movwf	CANSetFilter@filter& (0+255),b
  2369  002236  0E00               	movlw	0
  2370  002238  6FB0               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2371  00223A  0E00               	movlw	0
  2372  00223C  6FB1               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2373  00223E  0E00               	movlw	0
  2374  002240  6FB2               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2375  002242  C0C7  F0B3         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2376  002246  0E01               	movlw	1
  2377  002248  ECE8  F000         	call	_CANSetFilter
  2378                           
  2379                           ;CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2380  00224C  0E00               	movlw	0
  2381  00224E  0100               	movlb	0	; () banked
  2382  002250  6FAF               	movwf	CANSetFilter@filter& (0+255),b
  2383  002252  0E00               	movlw	0
  2384  002254  6FB0               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2385  002256  0E00               	movlw	0
  2386  002258  6FB1               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2387  00225A  0E00               	movlw	0
  2388  00225C  6FB2               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2389  00225E  C0C8  F0B3         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2390  002262  0E02               	movlw	2
  2391  002264  ECE8  F000         	call	_CANSetFilter
  2392                           
  2393                           ;CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2394  002268  0E00               	movlw	0
  2395  00226A  0100               	movlb	0	; () banked
  2396  00226C  6FAF               	movwf	CANSetFilter@filter& (0+255),b
  2397  00226E  0E00               	movlw	0
  2398  002270  6FB0               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2399  002272  0E00               	movlw	0
  2400  002274  6FB1               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2401  002276  0E00               	movlw	0
  2402  002278  6FB2               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2403  00227A  C0C8  F0B3         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2404  00227E  0E03               	movlw	3
  2405  002280  ECE8  F000         	call	_CANSetFilter
  2406                           
  2407                           ;CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2408  002284  0E00               	movlw	0
  2409  002286  0100               	movlb	0	; () banked
  2410  002288  6FAF               	movwf	CANSetFilter@filter& (0+255),b
  2411  00228A  0E00               	movlw	0
  2412  00228C  6FB0               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2413  00228E  0E00               	movlw	0
  2414  002290  6FB1               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2415  002292  0E00               	movlw	0
  2416  002294  6FB2               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2417  002296  C0C8  F0B3         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2418  00229A  0E04               	movlw	4
  2419  00229C  ECE8  F000         	call	_CANSetFilter
  2420                           
  2421                           ;CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2422  0022A0  0E00               	movlw	0
  2423  0022A2  0100               	movlb	0	; () banked
  2424  0022A4  6FAF               	movwf	CANSetFilter@filter& (0+255),b
  2425  0022A6  0E00               	movlw	0
  2426  0022A8  6FB0               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2427  0022AA  0E00               	movlw	0
  2428  0022AC  6FB1               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2429  0022AE  0E00               	movlw	0
  2430  0022B0  6FB2               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2431  0022B2  C0C8  F0B3         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2432  0022B6  0E05               	movlw	5
  2433  0022B8  ECE8  F000         	call	_CANSetFilter
  2434                           
  2435                           ;CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2436  0022BC  0E00               	movlw	0
  2437  0022BE  EC1F  F014         	call	_CANOperationMode
  2438  0022C2  0012               	return		;funcret
  2439  0022C4                     __end_of_CANInitialize:
  2440                           	opt stack 0
  2441                           tblptru	equ	0xFF8
  2442                           tblptrh	equ	0xFF7
  2443                           tblptrl	equ	0xFF6
  2444                           tablat	equ	0xFF5
  2445                           prodh	equ	0xFF4
  2446                           prodl	equ	0xFF3
  2447                           intcon	equ	0xFF2
  2448                           postinc0	equ	0xFEE
  2449                           wreg	equ	0xFE8
  2450                           indf1	equ	0xFE7
  2451                           postdec1	equ	0xFE5
  2452                           fsr1h	equ	0xFE2
  2453                           fsr1l	equ	0xFE1
  2454                           indf2	equ	0xFDF
  2455                           fsr2h	equ	0xFDA
  2456                           fsr2l	equ	0xFD9
  2457                           status	equ	0xFD8
  2458                           
  2459 ;; *************** function _CANSetMask *****************
  2460 ;; Defined at:
  2461 ;;		line 640 in file "CANlib.h"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  numBuffer       1    wreg     enum E16878
  2464 ;;  mask            4    0[BANK0 ] unsigned long 
  2465 ;;  type            1    4[BANK0 ] enum E16844
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  numBuffer       1    9[BANK0 ] enum E16878
  2468 ;;  tamp            4   10[BANK0 ] unsigned long 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;		None               void
  2471 ;; Registers used:
  2472 ;;		wreg, status,2, status,0
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2478 ;;      Params:         0       5       0       0
  2479 ;;      Locals:         0       5       0       0
  2480 ;;      Temps:          0       4       0       0
  2481 ;;      Totals:         0      14       0       0
  2482 ;;Total ram usage:       14 bytes
  2483 ;; Hardware stack levels used:    1
  2484 ;; Hardware stack levels required when called:    2
  2485 ;; This function calls:
  2486 ;;		Nothing
  2487 ;; This function is called by:
  2488 ;;		_CANInitialize
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text6
  2493  001D60                     __ptext6:
  2494                           	opt stack 0
  2495  001D60                     _CANSetMask:
  2496                           	opt stack 26
  2497                           
  2498                           ;incstack = 0
  2499                           ;CANSetMask@numBuffer stored from wreg
  2500  001D60  0100               	movlb	0	; () banked
  2501  001D62  6FB8               	movwf	CANSetMask@numBuffer& (0+255),b
  2502                           
  2503                           ;CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2504  001D64  0100               	movlb	0	; () banked
  2505  001D66  05B8               	decf	CANSetMask@numBuffer& (0+255),w,b
  2506  001D68  A4D8               	btfss	status,2,c
  2507  001D6A  D056               	goto	l4048
  2508                           
  2509                           ; BSR set to: 0
  2510  001D6C  0100               	movlb	0	; () banked
  2511  001D6E  29B3               	incf	CANSetMask@type& (0+255),w,b
  2512  001D70  A4D8               	btfss	status,2,c
  2513  001D72  D052               	goto	l4048
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;CANlib.h: 644: {
  2517                           ;CANlib.h: 645: tamp = (mask >> 3);
  2518  001D74  C0AF  F0B4         	movff	CANSetMask@mask,??_CANSetMask
  2519  001D78  C0B0  F0B5         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2520  001D7C  C0B1  F0B6         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2521  001D80  C0B2  F0B7         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2522  001D84  0E04               	movlw	4
  2523  001D86  D006               	goto	u4760
  2524  001D88                     u4765:
  2525  001D88  0100               	movlb	0	; () banked
  2526  001D8A  90D8               	bcf	status,0,c
  2527  001D8C  33B7               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2528  001D8E  33B6               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2529  001D90  33B5               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2530  001D92  33B4               	rrcf	??_CANSetMask& (0+255),f,b
  2531  001D94                     u4760:
  2532  001D94  2EE8               	decfsz	wreg,f,c
  2533  001D96  D7F8               	goto	u4765
  2534  001D98  C0B4  F0B9         	movff	??_CANSetMask,CANSetMask@tamp
  2535  001D9C  C0B5  F0BA         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2536  001DA0  C0B6  F0BB         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2537  001DA4  C0B7  F0BC         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2538                           
  2539                           ; BSR set to: 0
  2540                           ;CANlib.h: 646: tamp = tamp & 0x000000FF;
  2541  001DA8  0100               	movlb	0	; () banked
  2542  001DAA  51B9               	movf	CANSetMask@tamp& (0+255),w,b
  2543  001DAC  0100               	movlb	0	; () banked
  2544  001DAE  6FB9               	movwf	CANSetMask@tamp& (0+255),b
  2545  001DB0  6BBA               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2546  001DB2  6BBB               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2547  001DB4  6BBC               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  2551  001DB6  C0B9  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;CANlib.h: 649: tamp = mask & 0x00000007;
  2555  001DBA  0E07               	movlw	7
  2556  001DBC  0100               	movlb	0	; () banked
  2557  001DBE  15AF               	andwf	CANSetMask@mask& (0+255),w,b
  2558  001DC0  0100               	movlb	0	; () banked
  2559  001DC2  6FB9               	movwf	CANSetMask@tamp& (0+255),b
  2560  001DC4  0E00               	movlw	0
  2561  001DC6  0100               	movlb	0	; () banked
  2562  001DC8  15B0               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2563  001DCA  0100               	movlb	0	; () banked
  2564  001DCC  6FBA               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2565  001DCE  0E00               	movlw	0
  2566  001DD0  0100               	movlb	0	; () banked
  2567  001DD2  15B1               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2568  001DD4  0100               	movlb	0	; () banked
  2569  001DD6  6FBB               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2570  001DD8  0E00               	movlw	0
  2571  001DDA  0100               	movlb	0	; () banked
  2572  001DDC  15B2               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2573  001DDE  0100               	movlb	0	; () banked
  2574  001DE0  6FBC               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;CANlib.h: 650: tamp = tamp << 5;
  2578  001DE2  C0B9  F0B4         	movff	CANSetMask@tamp,??_CANSetMask
  2579  001DE6  C0BA  F0B5         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2580  001DEA  C0BB  F0B6         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2581  001DEE  C0BC  F0B7         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2582  001DF2  0E05               	movlw	5
  2583  001DF4                     u4775:
  2584  001DF4  90D8               	bcf	status,0,c
  2585  001DF6  0100               	movlb	0	; () banked
  2586  001DF8  37B4               	rlcf	??_CANSetMask& (0+255),f,b
  2587  001DFA  37B5               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2588  001DFC  37B6               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2589  001DFE  37B7               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2590  001E00  2EE8               	decfsz	wreg,f,c
  2591  001E02  D7F8               	goto	u4775
  2592  001E04  C0B4  F0B9         	movff	??_CANSetMask,CANSetMask@tamp
  2593  001E08  C0B5  F0BA         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2594  001E0C  C0B6  F0BB         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2595  001E10  C0B7  F0BC         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  2599  001E14  C0B9  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2600  001E18                     l4048:
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;CANlib.h: 652: }
  2604                           ;CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2605  001E18  0E02               	movlw	2
  2606  001E1A  0100               	movlb	0	; () banked
  2607  001E1C  19B8               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2608  001E1E  A4D8               	btfss	status,2,c
  2609  001E20  D056               	goto	l4064
  2610                           
  2611                           ; BSR set to: 0
  2612  001E22  0100               	movlb	0	; () banked
  2613  001E24  29B3               	incf	CANSetMask@type& (0+255),w,b
  2614  001E26  A4D8               	btfss	status,2,c
  2615  001E28  D052               	goto	l4064
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;CANlib.h: 655: {
  2619                           ;CANlib.h: 656: tamp = (mask >> 3);
  2620  001E2A  C0AF  F0B4         	movff	CANSetMask@mask,??_CANSetMask
  2621  001E2E  C0B0  F0B5         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2622  001E32  C0B1  F0B6         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2623  001E36  C0B2  F0B7         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2624  001E3A  0E04               	movlw	4
  2625  001E3C  D006               	goto	u4800
  2626  001E3E                     u4805:
  2627  001E3E  0100               	movlb	0	; () banked
  2628  001E40  90D8               	bcf	status,0,c
  2629  001E42  33B7               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2630  001E44  33B6               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2631  001E46  33B5               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2632  001E48  33B4               	rrcf	??_CANSetMask& (0+255),f,b
  2633  001E4A                     u4800:
  2634  001E4A  2EE8               	decfsz	wreg,f,c
  2635  001E4C  D7F8               	goto	u4805
  2636  001E4E  C0B4  F0B9         	movff	??_CANSetMask,CANSetMask@tamp
  2637  001E52  C0B5  F0BA         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2638  001E56  C0B6  F0BB         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2639  001E5A  C0B7  F0BC         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;CANlib.h: 657: tamp = tamp & 0x000000FF;
  2643  001E5E  0100               	movlb	0	; () banked
  2644  001E60  51B9               	movf	CANSetMask@tamp& (0+255),w,b
  2645  001E62  0100               	movlb	0	; () banked
  2646  001E64  6FB9               	movwf	CANSetMask@tamp& (0+255),b
  2647  001E66  6BBA               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2648  001E68  6BBB               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2649  001E6A  6BBC               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  2653  001E6C  C0B9  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;CANlib.h: 660: tamp = mask & 0x00000007;
  2657  001E70  0E07               	movlw	7
  2658  001E72  0100               	movlb	0	; () banked
  2659  001E74  15AF               	andwf	CANSetMask@mask& (0+255),w,b
  2660  001E76  0100               	movlb	0	; () banked
  2661  001E78  6FB9               	movwf	CANSetMask@tamp& (0+255),b
  2662  001E7A  0E00               	movlw	0
  2663  001E7C  0100               	movlb	0	; () banked
  2664  001E7E  15B0               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2665  001E80  0100               	movlb	0	; () banked
  2666  001E82  6FBA               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2667  001E84  0E00               	movlw	0
  2668  001E86  0100               	movlb	0	; () banked
  2669  001E88  15B1               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2670  001E8A  0100               	movlb	0	; () banked
  2671  001E8C  6FBB               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2672  001E8E  0E00               	movlw	0
  2673  001E90  0100               	movlb	0	; () banked
  2674  001E92  15B2               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2675  001E94  0100               	movlb	0	; () banked
  2676  001E96  6FBC               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;CANlib.h: 661: tamp = tamp << 5;
  2680  001E98  C0B9  F0B4         	movff	CANSetMask@tamp,??_CANSetMask
  2681  001E9C  C0BA  F0B5         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2682  001EA0  C0BB  F0B6         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2683  001EA4  C0BC  F0B7         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2684  001EA8  0E05               	movlw	5
  2685  001EAA                     u4815:
  2686  001EAA  90D8               	bcf	status,0,c
  2687  001EAC  0100               	movlb	0	; () banked
  2688  001EAE  37B4               	rlcf	??_CANSetMask& (0+255),f,b
  2689  001EB0  37B5               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2690  001EB2  37B6               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2691  001EB4  37B7               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2692  001EB6  2EE8               	decfsz	wreg,f,c
  2693  001EB8  D7F8               	goto	u4815
  2694  001EBA  C0B4  F0B9         	movff	??_CANSetMask,CANSetMask@tamp
  2695  001EBE  C0B5  F0BA         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2696  001EC2  C0B6  F0BB         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2697  001EC6  C0B7  F0BC         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  2701  001ECA  C0B9  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2702  001ECE                     l4064:
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;CANlib.h: 663: }
  2706                           ;CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2707  001ECE  0100               	movlb	0	; () banked
  2708  001ED0  05B8               	decf	CANSetMask@numBuffer& (0+255),w,b
  2709  001ED2  A4D8               	btfss	status,2,c
  2710  001ED4  D087               	goto	l4096
  2711                           
  2712                           ; BSR set to: 0
  2713  001ED6  0EF7               	movlw	247
  2714  001ED8  0100               	movlb	0	; () banked
  2715  001EDA  19B3               	xorwf	CANSetMask@type& (0+255),w,b
  2716  001EDC  A4D8               	btfss	status,2,c
  2717  001EDE  D082               	goto	l4096
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;CANlib.h: 666: {
  2721                           ;CANlib.h: 667: tamp = mask & 0x000000FF;
  2722  001EE0  0100               	movlb	0	; () banked
  2723  001EE2  51AF               	movf	CANSetMask@mask& (0+255),w,b
  2724  001EE4  0100               	movlb	0	; () banked
  2725  001EE6  6FB9               	movwf	CANSetMask@tamp& (0+255),b
  2726  001EE8  6BBA               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2727  001EEA  6BBB               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2728  001EEC  6BBC               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  2732  001EEE  C0B9  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;CANlib.h: 670: tamp = mask & 0x0000FF00;
  2736  001EF2  0E00               	movlw	0
  2737  001EF4  0100               	movlb	0	; () banked
  2738  001EF6  15AF               	andwf	CANSetMask@mask& (0+255),w,b
  2739  001EF8  0100               	movlb	0	; () banked
  2740  001EFA  6FB9               	movwf	CANSetMask@tamp& (0+255),b
  2741  001EFC  0EFF               	movlw	255
  2742  001EFE  0100               	movlb	0	; () banked
  2743  001F00  15B0               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2744  001F02  0100               	movlb	0	; () banked
  2745  001F04  6FBA               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2746  001F06  0E00               	movlw	0
  2747  001F08  0100               	movlb	0	; () banked
  2748  001F0A  15B1               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2749  001F0C  0100               	movlb	0	; () banked
  2750  001F0E  6FBB               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2751  001F10  0E00               	movlw	0
  2752  001F12  0100               	movlb	0	; () banked
  2753  001F14  15B2               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2754  001F16  0100               	movlb	0	; () banked
  2755  001F18  6FBC               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2756                           
  2757                           ; BSR set to: 0
  2758                           ;CANlib.h: 671: tamp = tamp >> 8;
  2759  001F1A  C0B9  F0B4         	movff	CANSetMask@tamp,??_CANSetMask
  2760  001F1E  C0BA  F0B5         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2761  001F22  C0BB  F0B6         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2762  001F26  C0BC  F0B7         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2763  001F2A  C0B5  F0B4         	movff	??_CANSetMask+1,??_CANSetMask
  2764  001F2E  C0B6  F0B5         	movff	??_CANSetMask+2,??_CANSetMask+1
  2765  001F32  C0B7  F0B6         	movff	??_CANSetMask+3,??_CANSetMask+2
  2766  001F36  0100               	movlb	0	; () banked
  2767  001F38  6BB7               	clrf	(??_CANSetMask+3)& (0+255),b
  2768  001F3A  C0B4  F0B9         	movff	??_CANSetMask,CANSetMask@tamp
  2769  001F3E  C0B5  F0BA         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2770  001F42  C0B6  F0BB         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2771  001F46  C0B7  F0BC         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  2775  001F4A  C0B9  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;CANlib.h: 674: if (mask & 0x00010000)
  2779  001F4E  0100               	movlb	0	; () banked
  2780  001F50  A1B1               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2781  001F52  D003               	goto	l432
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  2785  001F54  010F               	movlb	15	; () banked
  2786  001F56  8119               	bsf	25,0,b	;volatile
  2787  001F58  D002               	goto	l433
  2788  001F5A                     l432:
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;CANlib.h: 676: else
  2792                           ;CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  2793  001F5A  010F               	movlb	15	; () banked
  2794  001F5C  9119               	bcf	25,0,b	;volatile
  2795  001F5E                     l433:
  2796                           
  2797                           ; BSR set to: 15
  2798                           ;CANlib.h: 679: if (mask & 0x00020000)
  2799  001F5E  0100               	movlb	0	; () banked
  2800  001F60  A3B1               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2801  001F62  D003               	goto	l434
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  2805  001F64  010F               	movlb	15	; () banked
  2806  001F66  8319               	bsf	25,1,b	;volatile
  2807  001F68  D002               	goto	l435
  2808  001F6A                     l434:
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;CANlib.h: 681: else
  2812                           ;CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  2813  001F6A  010F               	movlb	15	; () banked
  2814  001F6C  9319               	bcf	25,1,b	;volatile
  2815  001F6E                     l435:
  2816                           
  2817                           ; BSR set to: 15
  2818                           ;CANlib.h: 684: if (mask & 0x00040000)
  2819  001F6E  0100               	movlb	0	; () banked
  2820  001F70  A5B1               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2821  001F72  D003               	goto	l436
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  2825  001F74  010F               	movlb	15	; () banked
  2826  001F76  8B19               	bsf	25,5,b	;volatile
  2827  001F78  D002               	goto	l437
  2828  001F7A                     l436:
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;CANlib.h: 686: else
  2832                           ;CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  2833  001F7A  010F               	movlb	15	; () banked
  2834  001F7C  9B19               	bcf	25,5,b	;volatile
  2835  001F7E                     l437:
  2836                           
  2837                           ; BSR set to: 15
  2838                           ;CANlib.h: 689: if (mask & 0x00080000)
  2839  001F7E  0100               	movlb	0	; () banked
  2840  001F80  A7B1               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2841  001F82  D003               	goto	l438
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  2845  001F84  010F               	movlb	15	; () banked
  2846  001F86  8D19               	bsf	25,6,b	;volatile
  2847  001F88  D002               	goto	l439
  2848  001F8A                     l438:
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;CANlib.h: 691: else
  2852                           ;CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  2853  001F8A  010F               	movlb	15	; () banked
  2854  001F8C  9D19               	bcf	25,6,b	;volatile
  2855  001F8E                     l439:
  2856                           
  2857                           ; BSR set to: 15
  2858                           ;CANlib.h: 694: if (mask & 0x00100000)
  2859  001F8E  0100               	movlb	0	; () banked
  2860  001F90  A9B1               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2861  001F92  D003               	goto	l440
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  2865  001F94  010F               	movlb	15	; () banked
  2866  001F96  8F19               	bsf	25,7,b	;volatile
  2867  001F98  D002               	goto	l4090
  2868  001F9A                     l440:
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;CANlib.h: 696: else
  2872                           ;CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  2873  001F9A  010F               	movlb	15	; () banked
  2874  001F9C  9F19               	bcf	25,7,b	;volatile
  2875  001F9E                     l4090:
  2876                           
  2877                           ; BSR set to: 15
  2878                           ;CANlib.h: 699: tamp = (mask >> 21);
  2879  001F9E  C0AF  F0B4         	movff	CANSetMask@mask,??_CANSetMask
  2880  001FA2  C0B0  F0B5         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2881  001FA6  C0B1  F0B6         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2882  001FAA  C0B2  F0B7         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2883  001FAE  0E16               	movlw	22
  2884  001FB0  D006               	goto	u4890
  2885  001FB2                     u4895:
  2886  001FB2  0100               	movlb	0	; () banked
  2887  001FB4  90D8               	bcf	status,0,c
  2888  001FB6  33B7               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2889  001FB8  33B6               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2890  001FBA  33B5               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2891  001FBC  33B4               	rrcf	??_CANSetMask& (0+255),f,b
  2892  001FBE                     u4890:
  2893  001FBE  2EE8               	decfsz	wreg,f,c
  2894  001FC0  D7F8               	goto	u4895
  2895  001FC2  C0B4  F0B9         	movff	??_CANSetMask,CANSetMask@tamp
  2896  001FC6  C0B5  F0BA         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2897  001FCA  C0B6  F0BB         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2898  001FCE  C0B7  F0BC         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;CANlib.h: 700: tamp = tamp & 0x000000FF;
  2902  001FD2  0100               	movlb	0	; () banked
  2903  001FD4  51B9               	movf	CANSetMask@tamp& (0+255),w,b
  2904  001FD6  0100               	movlb	0	; () banked
  2905  001FD8  6FB9               	movwf	CANSetMask@tamp& (0+255),b
  2906  001FDA  6BBA               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2907  001FDC  6BBB               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2908  001FDE  6BBC               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  2912  001FE0  C0B9  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2913  001FE4                     l4096:
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;CANlib.h: 702: }
  2917                           ;CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2918  001FE4  0E02               	movlw	2
  2919  001FE6  0100               	movlb	0	; () banked
  2920  001FE8  19B8               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2921  001FEA  A4D8               	btfss	status,2,c
  2922  001FEC  0012               	return	
  2923                           
  2924                           ; BSR set to: 0
  2925  001FEE  0EF7               	movlw	247
  2926  001FF0  0100               	movlb	0	; () banked
  2927  001FF2  19B3               	xorwf	CANSetMask@type& (0+255),w,b
  2928  001FF4  A4D8               	btfss	status,2,c
  2929  001FF6  0012               	return	
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;CANlib.h: 705: {
  2933                           ;CANlib.h: 706: tamp = mask & 0x000000FF;
  2934  001FF8  0100               	movlb	0	; () banked
  2935  001FFA  51AF               	movf	CANSetMask@mask& (0+255),w,b
  2936  001FFC  0100               	movlb	0	; () banked
  2937  001FFE  6FB9               	movwf	CANSetMask@tamp& (0+255),b
  2938  002000  6BBA               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2939  002002  6BBB               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2940  002004  6BBC               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  2944  002006  C0B9  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;CANlib.h: 709: tamp = mask & 0x0000FF00;
  2948  00200A  0E00               	movlw	0
  2949  00200C  0100               	movlb	0	; () banked
  2950  00200E  15AF               	andwf	CANSetMask@mask& (0+255),w,b
  2951  002010  0100               	movlb	0	; () banked
  2952  002012  6FB9               	movwf	CANSetMask@tamp& (0+255),b
  2953  002014  0EFF               	movlw	255
  2954  002016  0100               	movlb	0	; () banked
  2955  002018  15B0               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2956  00201A  0100               	movlb	0	; () banked
  2957  00201C  6FBA               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2958  00201E  0E00               	movlw	0
  2959  002020  0100               	movlb	0	; () banked
  2960  002022  15B1               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2961  002024  0100               	movlb	0	; () banked
  2962  002026  6FBB               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2963  002028  0E00               	movlw	0
  2964  00202A  0100               	movlb	0	; () banked
  2965  00202C  15B2               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2966  00202E  0100               	movlb	0	; () banked
  2967  002030  6FBC               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;CANlib.h: 710: tamp = tamp >> 8;
  2971  002032  C0B9  F0B4         	movff	CANSetMask@tamp,??_CANSetMask
  2972  002036  C0BA  F0B5         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2973  00203A  C0BB  F0B6         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2974  00203E  C0BC  F0B7         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2975  002042  C0B5  F0B4         	movff	??_CANSetMask+1,??_CANSetMask
  2976  002046  C0B6  F0B5         	movff	??_CANSetMask+2,??_CANSetMask+1
  2977  00204A  C0B7  F0B6         	movff	??_CANSetMask+3,??_CANSetMask+2
  2978  00204E  0100               	movlb	0	; () banked
  2979  002050  6BB7               	clrf	(??_CANSetMask+3)& (0+255),b
  2980  002052  C0B4  F0B9         	movff	??_CANSetMask,CANSetMask@tamp
  2981  002056  C0B5  F0BA         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2982  00205A  C0B6  F0BB         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2983  00205E  C0B7  F0BC         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  2987  002062  C0B9  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;CANlib.h: 713: if (mask & 0x00010000)
  2991  002066  0100               	movlb	0	; () banked
  2992  002068  A1B1               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2993  00206A  D003               	goto	l443
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  2997  00206C  010F               	movlb	15	; () banked
  2998  00206E  811D               	bsf	29,0,b	;volatile
  2999  002070  D002               	goto	l444
  3000  002072                     l443:
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;CANlib.h: 715: else
  3004                           ;CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3005  002072  010F               	movlb	15	; () banked
  3006  002074  911D               	bcf	29,0,b	;volatile
  3007  002076                     l444:
  3008                           
  3009                           ; BSR set to: 15
  3010                           ;CANlib.h: 718: if (mask & 0x00020000)
  3011  002076  0100               	movlb	0	; () banked
  3012  002078  A3B1               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3013  00207A  D003               	goto	l445
  3014                           
  3015                           ; BSR set to: 0
  3016                           ;CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3017  00207C  010F               	movlb	15	; () banked
  3018  00207E  831D               	bsf	29,1,b	;volatile
  3019  002080  D002               	goto	l446
  3020  002082                     l445:
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;CANlib.h: 720: else
  3024                           ;CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3025  002082  010F               	movlb	15	; () banked
  3026  002084  931D               	bcf	29,1,b	;volatile
  3027  002086                     l446:
  3028                           
  3029                           ; BSR set to: 15
  3030                           ;CANlib.h: 723: if (mask & 0x00040000)
  3031  002086  0100               	movlb	0	; () banked
  3032  002088  A5B1               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3033  00208A  D003               	goto	l447
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3037  00208C  010F               	movlb	15	; () banked
  3038  00208E  8B1D               	bsf	29,5,b	;volatile
  3039  002090  D002               	goto	l448
  3040  002092                     l447:
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;CANlib.h: 725: else
  3044                           ;CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3045  002092  010F               	movlb	15	; () banked
  3046  002094  9B1D               	bcf	29,5,b	;volatile
  3047  002096                     l448:
  3048                           
  3049                           ; BSR set to: 15
  3050                           ;CANlib.h: 728: if (mask & 0x00080000)
  3051  002096  0100               	movlb	0	; () banked
  3052  002098  A7B1               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3053  00209A  D003               	goto	l449
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3057  00209C  010F               	movlb	15	; () banked
  3058  00209E  8D1D               	bsf	29,6,b	;volatile
  3059  0020A0  D002               	goto	l450
  3060  0020A2                     l449:
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;CANlib.h: 730: else
  3064                           ;CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3065  0020A2  010F               	movlb	15	; () banked
  3066  0020A4  9D1D               	bcf	29,6,b	;volatile
  3067  0020A6                     l450:
  3068                           
  3069                           ; BSR set to: 15
  3070                           ;CANlib.h: 733: if (mask & 0x00100000)
  3071  0020A6  0100               	movlb	0	; () banked
  3072  0020A8  A9B1               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3073  0020AA  D003               	goto	l451
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3077  0020AC  010F               	movlb	15	; () banked
  3078  0020AE  8F1D               	bsf	29,7,b	;volatile
  3079  0020B0  D002               	goto	l4122
  3080  0020B2                     l451:
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;CANlib.h: 735: else
  3084                           ;CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3085  0020B2  010F               	movlb	15	; () banked
  3086  0020B4  9F1D               	bcf	29,7,b	;volatile
  3087  0020B6                     l4122:
  3088                           
  3089                           ; BSR set to: 15
  3090                           ;CANlib.h: 738: tamp = (mask >> 21);
  3091  0020B6  C0AF  F0B4         	movff	CANSetMask@mask,??_CANSetMask
  3092  0020BA  C0B0  F0B5         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3093  0020BE  C0B1  F0B6         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3094  0020C2  C0B2  F0B7         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3095  0020C6  0E16               	movlw	22
  3096  0020C8  D006               	goto	u4970
  3097  0020CA                     u4975:
  3098  0020CA  0100               	movlb	0	; () banked
  3099  0020CC  90D8               	bcf	status,0,c
  3100  0020CE  33B7               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3101  0020D0  33B6               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3102  0020D2  33B5               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3103  0020D4  33B4               	rrcf	??_CANSetMask& (0+255),f,b
  3104  0020D6                     u4970:
  3105  0020D6  2EE8               	decfsz	wreg,f,c
  3106  0020D8  D7F8               	goto	u4975
  3107  0020DA  C0B4  F0B9         	movff	??_CANSetMask,CANSetMask@tamp
  3108  0020DE  C0B5  F0BA         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3109  0020E2  C0B6  F0BB         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3110  0020E6  C0B7  F0BC         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;CANlib.h: 739: tamp = tamp & 0x000000FF;
  3114  0020EA  0100               	movlb	0	; () banked
  3115  0020EC  51B9               	movf	CANSetMask@tamp& (0+255),w,b
  3116  0020EE  0100               	movlb	0	; () banked
  3117  0020F0  6FB9               	movwf	CANSetMask@tamp& (0+255),b
  3118  0020F2  6BBA               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3119  0020F4  6BBB               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3120  0020F6  6BBC               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3124  0020F8  C0B9  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3125  0020FC  0012               	return	
  3126  0020FE                     __end_of_CANSetMask:
  3127                           	opt stack 0
  3128                           tblptru	equ	0xFF8
  3129                           tblptrh	equ	0xFF7
  3130                           tblptrl	equ	0xFF6
  3131                           tablat	equ	0xFF5
  3132                           prodh	equ	0xFF4
  3133                           prodl	equ	0xFF3
  3134                           intcon	equ	0xFF2
  3135                           postinc0	equ	0xFEE
  3136                           wreg	equ	0xFE8
  3137                           indf1	equ	0xFE7
  3138                           postdec1	equ	0xFE5
  3139                           fsr1h	equ	0xFE2
  3140                           fsr1l	equ	0xFE1
  3141                           indf2	equ	0xFDF
  3142                           fsr2h	equ	0xFDA
  3143                           fsr2l	equ	0xFD9
  3144                           status	equ	0xFD8
  3145                           
  3146 ;; *************** function _CANSetFilter *****************
  3147 ;; Defined at:
  3148 ;;		line 748 in file "CANlib.h"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  numBuffer       1    wreg     enum E16881
  3151 ;;  filter          4    0[BANK0 ] unsigned long 
  3152 ;;  type            1    4[BANK0 ] enum E16844
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;  numBuffer       1    9[BANK0 ] enum E16881
  3155 ;;  tamp            4   10[BANK0 ] unsigned long 
  3156 ;; Return value:  Size  Location     Type
  3157 ;;		None               void
  3158 ;; Registers used:
  3159 ;;		wreg, status,2, status,0
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3165 ;;      Params:         0       5       0       0
  3166 ;;      Locals:         0       5       0       0
  3167 ;;      Temps:          0       4       0       0
  3168 ;;      Totals:         0      14       0       0
  3169 ;;Total ram usage:       14 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; Hardware stack levels required when called:    2
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_CANInitialize
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text7
  3180  0001D0                     __ptext7:
  3181                           	opt stack 0
  3182  0001D0                     _CANSetFilter:
  3183                           	opt stack 26
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;incstack = 0
  3187                           ;CANSetFilter@numBuffer stored from wreg
  3188  0001D0  0100               	movlb	0	; () banked
  3189  0001D2  6FB8               	movwf	CANSetFilter@numBuffer& (0+255),b
  3190                           
  3191                           ;CANlib.h: 750: unsigned long tamp;
  3192                           ;CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3193  0001D4  0100               	movlb	0	; () banked
  3194  0001D6  51B8               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3195  0001D8  0100               	movlb	0	; () banked
  3196  0001DA  A4D8               	btfss	status,2,c
  3197  0001DC  D058               	goto	l4146
  3198                           
  3199                           ; BSR set to: 0
  3200  0001DE  0100               	movlb	0	; () banked
  3201  0001E0  29B3               	incf	CANSetFilter@type& (0+255),w,b
  3202  0001E2  A4D8               	btfss	status,2,c
  3203  0001E4  D054               	goto	l4146
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;CANlib.h: 753: {
  3207                           ;CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3208  0001E6  010F               	movlb	15	; () banked
  3209  0001E8  9701               	bcf	1,3,b	;volatile
  3210                           
  3211                           ; BSR set to: 15
  3212                           ;CANlib.h: 756: tamp = (filter >> 3);
  3213  0001EA  C0AF  F0B4         	movff	CANSetFilter@filter,??_CANSetFilter
  3214  0001EE  C0B0  F0B5         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3215  0001F2  C0B1  F0B6         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3216  0001F6  C0B2  F0B7         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3217  0001FA  0E04               	movlw	4
  3218  0001FC  D006               	goto	u5000
  3219  0001FE                     u5005:
  3220  0001FE  0100               	movlb	0	; () banked
  3221  000200  90D8               	bcf	status,0,c
  3222  000202  33B7               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3223  000204  33B6               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3224  000206  33B5               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3225  000208  33B4               	rrcf	??_CANSetFilter& (0+255),f,b
  3226  00020A                     u5000:
  3227  00020A  2EE8               	decfsz	wreg,f,c
  3228  00020C  D7F8               	goto	u5005
  3229  00020E  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  3230  000212  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3231  000216  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3232  00021A  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;CANlib.h: 757: tamp = tamp & 0x000000FF;
  3236  00021E  0100               	movlb	0	; () banked
  3237  000220  51B9               	movf	CANSetFilter@tamp& (0+255),w,b
  3238  000222  0100               	movlb	0	; () banked
  3239  000224  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  3240  000226  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3241  000228  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3242  00022A  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3246  00022C  C0B9  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;CANlib.h: 760: tamp = filter & 0x00000007;
  3250  000230  0E07               	movlw	7
  3251  000232  0100               	movlb	0	; () banked
  3252  000234  15AF               	andwf	CANSetFilter@filter& (0+255),w,b
  3253  000236  0100               	movlb	0	; () banked
  3254  000238  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  3255  00023A  0E00               	movlw	0
  3256  00023C  0100               	movlb	0	; () banked
  3257  00023E  15B0               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3258  000240  0100               	movlb	0	; () banked
  3259  000242  6FBA               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3260  000244  0E00               	movlw	0
  3261  000246  0100               	movlb	0	; () banked
  3262  000248  15B1               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3263  00024A  0100               	movlb	0	; () banked
  3264  00024C  6FBB               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3265  00024E  0E00               	movlw	0
  3266  000250  0100               	movlb	0	; () banked
  3267  000252  15B2               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3268  000254  0100               	movlb	0	; () banked
  3269  000256  6FBC               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;CANlib.h: 761: tamp = tamp << 5;
  3273  000258  C0B9  F0B4         	movff	CANSetFilter@tamp,??_CANSetFilter
  3274  00025C  C0BA  F0B5         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3275  000260  C0BB  F0B6         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3276  000264  C0BC  F0B7         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3277  000268  0E05               	movlw	5
  3278  00026A                     u5015:
  3279  00026A  90D8               	bcf	status,0,c
  3280  00026C  0100               	movlb	0	; () banked
  3281  00026E  37B4               	rlcf	??_CANSetFilter& (0+255),f,b
  3282  000270  37B5               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3283  000272  37B6               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3284  000274  37B7               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3285  000276  2EE8               	decfsz	wreg,f,c
  3286  000278  D7F8               	goto	u5015
  3287  00027A  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  3288  00027E  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3289  000282  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3290  000286  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3294  00028A  C0B9  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3295  00028E                     l4146:
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;CANlib.h: 763: }
  3299                           ;CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3300  00028E  0100               	movlb	0	; () banked
  3301  000290  05B8               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3302  000292  A4D8               	btfss	status,2,c
  3303  000294  D058               	goto	l4164
  3304                           
  3305                           ; BSR set to: 0
  3306  000296  0100               	movlb	0	; () banked
  3307  000298  29B3               	incf	CANSetFilter@type& (0+255),w,b
  3308  00029A  A4D8               	btfss	status,2,c
  3309  00029C  D054               	goto	l4164
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;CANlib.h: 766: {
  3313                           ;CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3314  00029E  010F               	movlb	15	; () banked
  3315  0002A0  9705               	bcf	5,3,b	;volatile
  3316                           
  3317                           ; BSR set to: 15
  3318                           ;CANlib.h: 769: tamp = (filter >> 3);
  3319  0002A2  C0AF  F0B4         	movff	CANSetFilter@filter,??_CANSetFilter
  3320  0002A6  C0B0  F0B5         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3321  0002AA  C0B1  F0B6         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3322  0002AE  C0B2  F0B7         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3323  0002B2  0E04               	movlw	4
  3324  0002B4  D006               	goto	u5040
  3325  0002B6                     u5045:
  3326  0002B6  0100               	movlb	0	; () banked
  3327  0002B8  90D8               	bcf	status,0,c
  3328  0002BA  33B7               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3329  0002BC  33B6               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3330  0002BE  33B5               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3331  0002C0  33B4               	rrcf	??_CANSetFilter& (0+255),f,b
  3332  0002C2                     u5040:
  3333  0002C2  2EE8               	decfsz	wreg,f,c
  3334  0002C4  D7F8               	goto	u5045
  3335  0002C6  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  3336  0002CA  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3337  0002CE  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3338  0002D2  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;CANlib.h: 770: tamp = tamp & 0x000000FF;
  3342  0002D6  0100               	movlb	0	; () banked
  3343  0002D8  51B9               	movf	CANSetFilter@tamp& (0+255),w,b
  3344  0002DA  0100               	movlb	0	; () banked
  3345  0002DC  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  3346  0002DE  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3347  0002E0  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3348  0002E2  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3352  0002E4  C0B9  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;CANlib.h: 773: tamp = filter & 0x00000007;
  3356  0002E8  0E07               	movlw	7
  3357  0002EA  0100               	movlb	0	; () banked
  3358  0002EC  15AF               	andwf	CANSetFilter@filter& (0+255),w,b
  3359  0002EE  0100               	movlb	0	; () banked
  3360  0002F0  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  3361  0002F2  0E00               	movlw	0
  3362  0002F4  0100               	movlb	0	; () banked
  3363  0002F6  15B0               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3364  0002F8  0100               	movlb	0	; () banked
  3365  0002FA  6FBA               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3366  0002FC  0E00               	movlw	0
  3367  0002FE  0100               	movlb	0	; () banked
  3368  000300  15B1               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3369  000302  0100               	movlb	0	; () banked
  3370  000304  6FBB               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3371  000306  0E00               	movlw	0
  3372  000308  0100               	movlb	0	; () banked
  3373  00030A  15B2               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3374  00030C  0100               	movlb	0	; () banked
  3375  00030E  6FBC               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;CANlib.h: 774: tamp = tamp << 5;
  3379  000310  C0B9  F0B4         	movff	CANSetFilter@tamp,??_CANSetFilter
  3380  000314  C0BA  F0B5         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3381  000318  C0BB  F0B6         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3382  00031C  C0BC  F0B7         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3383  000320  0E05               	movlw	5
  3384  000322                     u5055:
  3385  000322  90D8               	bcf	status,0,c
  3386  000324  0100               	movlb	0	; () banked
  3387  000326  37B4               	rlcf	??_CANSetFilter& (0+255),f,b
  3388  000328  37B5               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3389  00032A  37B6               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3390  00032C  37B7               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3391  00032E  2EE8               	decfsz	wreg,f,c
  3392  000330  D7F8               	goto	u5055
  3393  000332  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  3394  000336  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3395  00033A  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3396  00033E  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3400  000342  C0B9  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3401  000346                     l4164:
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;CANlib.h: 776: }
  3405                           ;CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3406  000346  0E02               	movlw	2
  3407  000348  0100               	movlb	0	; () banked
  3408  00034A  19B8               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3409  00034C  A4D8               	btfss	status,2,c
  3410  00034E  D058               	goto	l4182
  3411                           
  3412                           ; BSR set to: 0
  3413  000350  0100               	movlb	0	; () banked
  3414  000352  29B3               	incf	CANSetFilter@type& (0+255),w,b
  3415  000354  A4D8               	btfss	status,2,c
  3416  000356  D054               	goto	l4182
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;CANlib.h: 779: {
  3420                           ;CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3421  000358  010F               	movlb	15	; () banked
  3422  00035A  9709               	bcf	9,3,b	;volatile
  3423                           
  3424                           ; BSR set to: 15
  3425                           ;CANlib.h: 782: tamp = (filter >> 3);
  3426  00035C  C0AF  F0B4         	movff	CANSetFilter@filter,??_CANSetFilter
  3427  000360  C0B0  F0B5         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3428  000364  C0B1  F0B6         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3429  000368  C0B2  F0B7         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3430  00036C  0E04               	movlw	4
  3431  00036E  D006               	goto	u5080
  3432  000370                     u5085:
  3433  000370  0100               	movlb	0	; () banked
  3434  000372  90D8               	bcf	status,0,c
  3435  000374  33B7               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3436  000376  33B6               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3437  000378  33B5               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3438  00037A  33B4               	rrcf	??_CANSetFilter& (0+255),f,b
  3439  00037C                     u5080:
  3440  00037C  2EE8               	decfsz	wreg,f,c
  3441  00037E  D7F8               	goto	u5085
  3442  000380  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  3443  000384  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3444  000388  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3445  00038C  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;CANlib.h: 783: tamp = tamp & 0x000000FF;
  3449  000390  0100               	movlb	0	; () banked
  3450  000392  51B9               	movf	CANSetFilter@tamp& (0+255),w,b
  3451  000394  0100               	movlb	0	; () banked
  3452  000396  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  3453  000398  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3454  00039A  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3455  00039C  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3459  00039E  C0B9  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;CANlib.h: 786: tamp = filter & 0x00000007;
  3463  0003A2  0E07               	movlw	7
  3464  0003A4  0100               	movlb	0	; () banked
  3465  0003A6  15AF               	andwf	CANSetFilter@filter& (0+255),w,b
  3466  0003A8  0100               	movlb	0	; () banked
  3467  0003AA  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  3468  0003AC  0E00               	movlw	0
  3469  0003AE  0100               	movlb	0	; () banked
  3470  0003B0  15B0               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3471  0003B2  0100               	movlb	0	; () banked
  3472  0003B4  6FBA               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3473  0003B6  0E00               	movlw	0
  3474  0003B8  0100               	movlb	0	; () banked
  3475  0003BA  15B1               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3476  0003BC  0100               	movlb	0	; () banked
  3477  0003BE  6FBB               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3478  0003C0  0E00               	movlw	0
  3479  0003C2  0100               	movlb	0	; () banked
  3480  0003C4  15B2               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3481  0003C6  0100               	movlb	0	; () banked
  3482  0003C8  6FBC               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;CANlib.h: 787: tamp = tamp << 5;
  3486  0003CA  C0B9  F0B4         	movff	CANSetFilter@tamp,??_CANSetFilter
  3487  0003CE  C0BA  F0B5         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3488  0003D2  C0BB  F0B6         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3489  0003D6  C0BC  F0B7         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3490  0003DA  0E05               	movlw	5
  3491  0003DC                     u5095:
  3492  0003DC  90D8               	bcf	status,0,c
  3493  0003DE  0100               	movlb	0	; () banked
  3494  0003E0  37B4               	rlcf	??_CANSetFilter& (0+255),f,b
  3495  0003E2  37B5               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3496  0003E4  37B6               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3497  0003E6  37B7               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3498  0003E8  2EE8               	decfsz	wreg,f,c
  3499  0003EA  D7F8               	goto	u5095
  3500  0003EC  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  3501  0003F0  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3502  0003F4  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3503  0003F8  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  3507  0003FC  C0B9  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3508  000400                     l4182:
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;CANlib.h: 789: }
  3512                           ;CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3513  000400  0E03               	movlw	3
  3514  000402  0100               	movlb	0	; () banked
  3515  000404  19B8               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3516  000406  A4D8               	btfss	status,2,c
  3517  000408  D058               	goto	l4200
  3518                           
  3519                           ; BSR set to: 0
  3520  00040A  0100               	movlb	0	; () banked
  3521  00040C  29B3               	incf	CANSetFilter@type& (0+255),w,b
  3522  00040E  A4D8               	btfss	status,2,c
  3523  000410  D054               	goto	l4200
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;CANlib.h: 792: {
  3527                           ;CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  3528  000412  010F               	movlb	15	; () banked
  3529  000414  970D               	bcf	13,3,b	;volatile
  3530                           
  3531                           ; BSR set to: 15
  3532                           ;CANlib.h: 795: tamp = (filter >> 3);
  3533  000416  C0AF  F0B4         	movff	CANSetFilter@filter,??_CANSetFilter
  3534  00041A  C0B0  F0B5         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3535  00041E  C0B1  F0B6         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3536  000422  C0B2  F0B7         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3537  000426  0E04               	movlw	4
  3538  000428  D006               	goto	u5120
  3539  00042A                     u5125:
  3540  00042A  0100               	movlb	0	; () banked
  3541  00042C  90D8               	bcf	status,0,c
  3542  00042E  33B7               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3543  000430  33B6               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3544  000432  33B5               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3545  000434  33B4               	rrcf	??_CANSetFilter& (0+255),f,b
  3546  000436                     u5120:
  3547  000436  2EE8               	decfsz	wreg,f,c
  3548  000438  D7F8               	goto	u5125
  3549  00043A  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  3550  00043E  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3551  000442  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3552  000446  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;CANlib.h: 796: tamp = tamp & 0x000000FF;
  3556  00044A  0100               	movlb	0	; () banked
  3557  00044C  51B9               	movf	CANSetFilter@tamp& (0+255),w,b
  3558  00044E  0100               	movlb	0	; () banked
  3559  000450  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  3560  000452  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3561  000454  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3562  000456  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  3566  000458  C0B9  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;CANlib.h: 799: tamp = filter & 0x00000007;
  3570  00045C  0E07               	movlw	7
  3571  00045E  0100               	movlb	0	; () banked
  3572  000460  15AF               	andwf	CANSetFilter@filter& (0+255),w,b
  3573  000462  0100               	movlb	0	; () banked
  3574  000464  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  3575  000466  0E00               	movlw	0
  3576  000468  0100               	movlb	0	; () banked
  3577  00046A  15B0               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3578  00046C  0100               	movlb	0	; () banked
  3579  00046E  6FBA               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3580  000470  0E00               	movlw	0
  3581  000472  0100               	movlb	0	; () banked
  3582  000474  15B1               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3583  000476  0100               	movlb	0	; () banked
  3584  000478  6FBB               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3585  00047A  0E00               	movlw	0
  3586  00047C  0100               	movlb	0	; () banked
  3587  00047E  15B2               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3588  000480  0100               	movlb	0	; () banked
  3589  000482  6FBC               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;CANlib.h: 800: tamp = tamp << 5;
  3593  000484  C0B9  F0B4         	movff	CANSetFilter@tamp,??_CANSetFilter
  3594  000488  C0BA  F0B5         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3595  00048C  C0BB  F0B6         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3596  000490  C0BC  F0B7         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3597  000494  0E05               	movlw	5
  3598  000496                     u5135:
  3599  000496  90D8               	bcf	status,0,c
  3600  000498  0100               	movlb	0	; () banked
  3601  00049A  37B4               	rlcf	??_CANSetFilter& (0+255),f,b
  3602  00049C  37B5               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3603  00049E  37B6               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3604  0004A0  37B7               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3605  0004A2  2EE8               	decfsz	wreg,f,c
  3606  0004A4  D7F8               	goto	u5135
  3607  0004A6  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  3608  0004AA  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3609  0004AE  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3610  0004B2  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  3614  0004B6  C0B9  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3615  0004BA                     l4200:
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;CANlib.h: 802: }
  3619                           ;CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3620  0004BA  0E04               	movlw	4
  3621  0004BC  0100               	movlb	0	; () banked
  3622  0004BE  19B8               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3623  0004C0  A4D8               	btfss	status,2,c
  3624  0004C2  D058               	goto	l4218
  3625                           
  3626                           ; BSR set to: 0
  3627  0004C4  0100               	movlb	0	; () banked
  3628  0004C6  29B3               	incf	CANSetFilter@type& (0+255),w,b
  3629  0004C8  A4D8               	btfss	status,2,c
  3630  0004CA  D054               	goto	l4218
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;CANlib.h: 805: {
  3634                           ;CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  3635  0004CC  010F               	movlb	15	; () banked
  3636  0004CE  9711               	bcf	17,3,b	;volatile
  3637                           
  3638                           ; BSR set to: 15
  3639                           ;CANlib.h: 808: tamp = (filter >> 3);
  3640  0004D0  C0AF  F0B4         	movff	CANSetFilter@filter,??_CANSetFilter
  3641  0004D4  C0B0  F0B5         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3642  0004D8  C0B1  F0B6         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3643  0004DC  C0B2  F0B7         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3644  0004E0  0E04               	movlw	4
  3645  0004E2  D006               	goto	u5160
  3646  0004E4                     u5165:
  3647  0004E4  0100               	movlb	0	; () banked
  3648  0004E6  90D8               	bcf	status,0,c
  3649  0004E8  33B7               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3650  0004EA  33B6               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3651  0004EC  33B5               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3652  0004EE  33B4               	rrcf	??_CANSetFilter& (0+255),f,b
  3653  0004F0                     u5160:
  3654  0004F0  2EE8               	decfsz	wreg,f,c
  3655  0004F2  D7F8               	goto	u5165
  3656  0004F4  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  3657  0004F8  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3658  0004FC  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3659  000500  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;CANlib.h: 809: tamp = tamp & 0x000000FF;
  3663  000504  0100               	movlb	0	; () banked
  3664  000506  51B9               	movf	CANSetFilter@tamp& (0+255),w,b
  3665  000508  0100               	movlb	0	; () banked
  3666  00050A  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  3667  00050C  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3668  00050E  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3669  000510  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  3673  000512  C0B9  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;CANlib.h: 812: tamp = filter & 0x00000007;
  3677  000516  0E07               	movlw	7
  3678  000518  0100               	movlb	0	; () banked
  3679  00051A  15AF               	andwf	CANSetFilter@filter& (0+255),w,b
  3680  00051C  0100               	movlb	0	; () banked
  3681  00051E  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  3682  000520  0E00               	movlw	0
  3683  000522  0100               	movlb	0	; () banked
  3684  000524  15B0               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3685  000526  0100               	movlb	0	; () banked
  3686  000528  6FBA               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3687  00052A  0E00               	movlw	0
  3688  00052C  0100               	movlb	0	; () banked
  3689  00052E  15B1               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3690  000530  0100               	movlb	0	; () banked
  3691  000532  6FBB               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3692  000534  0E00               	movlw	0
  3693  000536  0100               	movlb	0	; () banked
  3694  000538  15B2               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3695  00053A  0100               	movlb	0	; () banked
  3696  00053C  6FBC               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;CANlib.h: 813: tamp = tamp << 5;
  3700  00053E  C0B9  F0B4         	movff	CANSetFilter@tamp,??_CANSetFilter
  3701  000542  C0BA  F0B5         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3702  000546  C0BB  F0B6         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3703  00054A  C0BC  F0B7         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3704  00054E  0E05               	movlw	5
  3705  000550                     u5175:
  3706  000550  90D8               	bcf	status,0,c
  3707  000552  0100               	movlb	0	; () banked
  3708  000554  37B4               	rlcf	??_CANSetFilter& (0+255),f,b
  3709  000556  37B5               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3710  000558  37B6               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3711  00055A  37B7               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3712  00055C  2EE8               	decfsz	wreg,f,c
  3713  00055E  D7F8               	goto	u5175
  3714  000560  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  3715  000564  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3716  000568  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3717  00056C  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  3721  000570  C0B9  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3722  000574                     l4218:
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;CANlib.h: 815: }
  3726                           ;CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3727  000574  0E05               	movlw	5
  3728  000576  0100               	movlb	0	; () banked
  3729  000578  19B8               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3730  00057A  A4D8               	btfss	status,2,c
  3731  00057C  D058               	goto	l4236
  3732                           
  3733                           ; BSR set to: 0
  3734  00057E  0100               	movlb	0	; () banked
  3735  000580  29B3               	incf	CANSetFilter@type& (0+255),w,b
  3736  000582  A4D8               	btfss	status,2,c
  3737  000584  D054               	goto	l4236
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;CANlib.h: 818: {
  3741                           ;CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  3742  000586  010F               	movlb	15	; () banked
  3743  000588  9715               	bcf	21,3,b	;volatile
  3744                           
  3745                           ; BSR set to: 15
  3746                           ;CANlib.h: 821: tamp = (filter >> 3);
  3747  00058A  C0AF  F0B4         	movff	CANSetFilter@filter,??_CANSetFilter
  3748  00058E  C0B0  F0B5         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3749  000592  C0B1  F0B6         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3750  000596  C0B2  F0B7         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3751  00059A  0E04               	movlw	4
  3752  00059C  D006               	goto	u5200
  3753  00059E                     u5205:
  3754  00059E  0100               	movlb	0	; () banked
  3755  0005A0  90D8               	bcf	status,0,c
  3756  0005A2  33B7               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3757  0005A4  33B6               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3758  0005A6  33B5               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3759  0005A8  33B4               	rrcf	??_CANSetFilter& (0+255),f,b
  3760  0005AA                     u5200:
  3761  0005AA  2EE8               	decfsz	wreg,f,c
  3762  0005AC  D7F8               	goto	u5205
  3763  0005AE  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  3764  0005B2  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3765  0005B6  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3766  0005BA  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;CANlib.h: 822: tamp = tamp & 0x000000FF;
  3770  0005BE  0100               	movlb	0	; () banked
  3771  0005C0  51B9               	movf	CANSetFilter@tamp& (0+255),w,b
  3772  0005C2  0100               	movlb	0	; () banked
  3773  0005C4  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  3774  0005C6  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3775  0005C8  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3776  0005CA  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  3780  0005CC  C0B9  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;CANlib.h: 825: tamp = filter & 0x00000007;
  3784  0005D0  0E07               	movlw	7
  3785  0005D2  0100               	movlb	0	; () banked
  3786  0005D4  15AF               	andwf	CANSetFilter@filter& (0+255),w,b
  3787  0005D6  0100               	movlb	0	; () banked
  3788  0005D8  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  3789  0005DA  0E00               	movlw	0
  3790  0005DC  0100               	movlb	0	; () banked
  3791  0005DE  15B0               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3792  0005E0  0100               	movlb	0	; () banked
  3793  0005E2  6FBA               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3794  0005E4  0E00               	movlw	0
  3795  0005E6  0100               	movlb	0	; () banked
  3796  0005E8  15B1               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3797  0005EA  0100               	movlb	0	; () banked
  3798  0005EC  6FBB               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3799  0005EE  0E00               	movlw	0
  3800  0005F0  0100               	movlb	0	; () banked
  3801  0005F2  15B2               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3802  0005F4  0100               	movlb	0	; () banked
  3803  0005F6  6FBC               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;CANlib.h: 826: tamp = tamp << 5;
  3807  0005F8  C0B9  F0B4         	movff	CANSetFilter@tamp,??_CANSetFilter
  3808  0005FC  C0BA  F0B5         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3809  000600  C0BB  F0B6         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3810  000604  C0BC  F0B7         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3811  000608  0E05               	movlw	5
  3812  00060A                     u5215:
  3813  00060A  90D8               	bcf	status,0,c
  3814  00060C  0100               	movlb	0	; () banked
  3815  00060E  37B4               	rlcf	??_CANSetFilter& (0+255),f,b
  3816  000610  37B5               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3817  000612  37B6               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3818  000614  37B7               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3819  000616  2EE8               	decfsz	wreg,f,c
  3820  000618  D7F8               	goto	u5215
  3821  00061A  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  3822  00061E  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3823  000622  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3824  000626  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  3828  00062A  C0B9  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3829  00062E                     l4236:
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;CANlib.h: 828: }
  3833                           ;CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3834  00062E  0100               	movlb	0	; () banked
  3835  000630  51B8               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3836  000632  0100               	movlb	0	; () banked
  3837  000634  A4D8               	btfss	status,2,c
  3838  000636  D089               	goto	l4270
  3839                           
  3840                           ; BSR set to: 0
  3841  000638  0EF7               	movlw	247
  3842  00063A  0100               	movlb	0	; () banked
  3843  00063C  19B3               	xorwf	CANSetFilter@type& (0+255),w,b
  3844  00063E  A4D8               	btfss	status,2,c
  3845  000640  D084               	goto	l4270
  3846                           
  3847                           ; BSR set to: 0
  3848                           ;CANlib.h: 832: {
  3849                           ;CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  3850  000642  010F               	movlb	15	; () banked
  3851  000644  8701               	bsf	1,3,b	;volatile
  3852                           
  3853                           ; BSR set to: 15
  3854                           ;CANlib.h: 835: tamp = filter & 0x000000FF;
  3855  000646  0100               	movlb	0	; () banked
  3856  000648  51AF               	movf	CANSetFilter@filter& (0+255),w,b
  3857  00064A  0100               	movlb	0	; () banked
  3858  00064C  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  3859  00064E  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3860  000650  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3861  000652  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  3865  000654  C0B9  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;CANlib.h: 838: tamp = filter & 0x0000FF00;
  3869  000658  0E00               	movlw	0
  3870  00065A  0100               	movlb	0	; () banked
  3871  00065C  15AF               	andwf	CANSetFilter@filter& (0+255),w,b
  3872  00065E  0100               	movlb	0	; () banked
  3873  000660  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  3874  000662  0EFF               	movlw	255
  3875  000664  0100               	movlb	0	; () banked
  3876  000666  15B0               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3877  000668  0100               	movlb	0	; () banked
  3878  00066A  6FBA               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3879  00066C  0E00               	movlw	0
  3880  00066E  0100               	movlb	0	; () banked
  3881  000670  15B1               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3882  000672  0100               	movlb	0	; () banked
  3883  000674  6FBB               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3884  000676  0E00               	movlw	0
  3885  000678  0100               	movlb	0	; () banked
  3886  00067A  15B2               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3887  00067C  0100               	movlb	0	; () banked
  3888  00067E  6FBC               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;CANlib.h: 839: tamp = tamp >> 8;
  3892  000680  C0B9  F0B4         	movff	CANSetFilter@tamp,??_CANSetFilter
  3893  000684  C0BA  F0B5         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3894  000688  C0BB  F0B6         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3895  00068C  C0BC  F0B7         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3896  000690  C0B5  F0B4         	movff	??_CANSetFilter+1,??_CANSetFilter
  3897  000694  C0B6  F0B5         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3898  000698  C0B7  F0B6         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3899  00069C  0100               	movlb	0	; () banked
  3900  00069E  6BB7               	clrf	(??_CANSetFilter+3)& (0+255),b
  3901  0006A0  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  3902  0006A4  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3903  0006A8  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3904  0006AC  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  3908  0006B0  C0B9  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;CANlib.h: 842: if (filter & 0x00010000)
  3912  0006B4  0100               	movlb	0	; () banked
  3913  0006B6  A1B1               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3914  0006B8  D003               	goto	l463
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  3918  0006BA  010F               	movlb	15	; () banked
  3919  0006BC  8101               	bsf	1,0,b	;volatile
  3920  0006BE  D002               	goto	l464
  3921  0006C0                     l463:
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;CANlib.h: 844: else
  3925                           ;CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  3926  0006C0  010F               	movlb	15	; () banked
  3927  0006C2  9101               	bcf	1,0,b	;volatile
  3928  0006C4                     l464:
  3929                           
  3930                           ; BSR set to: 15
  3931                           ;CANlib.h: 847: if (filter & 0x00020000)
  3932  0006C4  0100               	movlb	0	; () banked
  3933  0006C6  A3B1               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3934  0006C8  D003               	goto	l465
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  3938  0006CA  010F               	movlb	15	; () banked
  3939  0006CC  8301               	bsf	1,1,b	;volatile
  3940  0006CE  D002               	goto	l466
  3941  0006D0                     l465:
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;CANlib.h: 849: else
  3945                           ;CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  3946  0006D0  010F               	movlb	15	; () banked
  3947  0006D2  9301               	bcf	1,1,b	;volatile
  3948  0006D4                     l466:
  3949                           
  3950                           ; BSR set to: 15
  3951                           ;CANlib.h: 852: if (filter & 0x00040000)
  3952  0006D4  0100               	movlb	0	; () banked
  3953  0006D6  A5B1               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3954  0006D8  D003               	goto	l467
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  3958  0006DA  010F               	movlb	15	; () banked
  3959  0006DC  8B01               	bsf	1,5,b	;volatile
  3960  0006DE  D002               	goto	l468
  3961  0006E0                     l467:
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;CANlib.h: 854: else
  3965                           ;CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  3966  0006E0  010F               	movlb	15	; () banked
  3967  0006E2  9B01               	bcf	1,5,b	;volatile
  3968  0006E4                     l468:
  3969                           
  3970                           ; BSR set to: 15
  3971                           ;CANlib.h: 857: if (filter & 0x00080000)
  3972  0006E4  0100               	movlb	0	; () banked
  3973  0006E6  A7B1               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3974  0006E8  D003               	goto	l469
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  3978  0006EA  010F               	movlb	15	; () banked
  3979  0006EC  8D01               	bsf	1,6,b	;volatile
  3980  0006EE  D002               	goto	l470
  3981  0006F0                     l469:
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;CANlib.h: 859: else
  3985                           ;CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  3986  0006F0  010F               	movlb	15	; () banked
  3987  0006F2  9D01               	bcf	1,6,b	;volatile
  3988  0006F4                     l470:
  3989                           
  3990                           ; BSR set to: 15
  3991                           ;CANlib.h: 862: if (filter & 0x00100000)
  3992  0006F4  0100               	movlb	0	; () banked
  3993  0006F6  A9B1               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3994  0006F8  D003               	goto	l471
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  3998  0006FA  010F               	movlb	15	; () banked
  3999  0006FC  8F01               	bsf	1,7,b	;volatile
  4000  0006FE  D002               	goto	l4264
  4001  000700                     l471:
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;CANlib.h: 864: else
  4005                           ;CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4006  000700  010F               	movlb	15	; () banked
  4007  000702  9F01               	bcf	1,7,b	;volatile
  4008  000704                     l4264:
  4009                           
  4010                           ; BSR set to: 15
  4011                           ;CANlib.h: 867: tamp = (filter >> 21);
  4012  000704  C0AF  F0B4         	movff	CANSetFilter@filter,??_CANSetFilter
  4013  000708  C0B0  F0B5         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4014  00070C  C0B1  F0B6         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4015  000710  C0B2  F0B7         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4016  000714  0E16               	movlw	22
  4017  000716  D006               	goto	u5290
  4018  000718                     u5295:
  4019  000718  0100               	movlb	0	; () banked
  4020  00071A  90D8               	bcf	status,0,c
  4021  00071C  33B7               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4022  00071E  33B6               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4023  000720  33B5               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4024  000722  33B4               	rrcf	??_CANSetFilter& (0+255),f,b
  4025  000724                     u5290:
  4026  000724  2EE8               	decfsz	wreg,f,c
  4027  000726  D7F8               	goto	u5295
  4028  000728  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  4029  00072C  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4030  000730  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4031  000734  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;CANlib.h: 868: tamp = tamp & 0x000000FF;
  4035  000738  0100               	movlb	0	; () banked
  4036  00073A  51B9               	movf	CANSetFilter@tamp& (0+255),w,b
  4037  00073C  0100               	movlb	0	; () banked
  4038  00073E  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  4039  000740  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4040  000742  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4041  000744  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4045  000746  C0B9  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4046  00074A                     l4270:
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;CANlib.h: 870: }
  4050                           ;CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4051  00074A  0100               	movlb	0	; () banked
  4052  00074C  05B8               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4053  00074E  A4D8               	btfss	status,2,c
  4054  000750  D089               	goto	l4304
  4055                           
  4056                           ; BSR set to: 0
  4057  000752  0EF7               	movlw	247
  4058  000754  0100               	movlb	0	; () banked
  4059  000756  19B3               	xorwf	CANSetFilter@type& (0+255),w,b
  4060  000758  A4D8               	btfss	status,2,c
  4061  00075A  D084               	goto	l4304
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;CANlib.h: 873: {
  4065                           ;CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4066  00075C  010F               	movlb	15	; () banked
  4067  00075E  8705               	bsf	5,3,b	;volatile
  4068                           
  4069                           ; BSR set to: 15
  4070                           ;CANlib.h: 876: tamp = filter & 0x000000FF;
  4071  000760  0100               	movlb	0	; () banked
  4072  000762  51AF               	movf	CANSetFilter@filter& (0+255),w,b
  4073  000764  0100               	movlb	0	; () banked
  4074  000766  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  4075  000768  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4076  00076A  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4077  00076C  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4081  00076E  C0B9  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;CANlib.h: 879: tamp = filter & 0x0000FF00;
  4085  000772  0E00               	movlw	0
  4086  000774  0100               	movlb	0	; () banked
  4087  000776  15AF               	andwf	CANSetFilter@filter& (0+255),w,b
  4088  000778  0100               	movlb	0	; () banked
  4089  00077A  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  4090  00077C  0EFF               	movlw	255
  4091  00077E  0100               	movlb	0	; () banked
  4092  000780  15B0               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4093  000782  0100               	movlb	0	; () banked
  4094  000784  6FBA               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4095  000786  0E00               	movlw	0
  4096  000788  0100               	movlb	0	; () banked
  4097  00078A  15B1               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4098  00078C  0100               	movlb	0	; () banked
  4099  00078E  6FBB               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4100  000790  0E00               	movlw	0
  4101  000792  0100               	movlb	0	; () banked
  4102  000794  15B2               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4103  000796  0100               	movlb	0	; () banked
  4104  000798  6FBC               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;CANlib.h: 880: tamp = tamp >> 8;
  4108  00079A  C0B9  F0B4         	movff	CANSetFilter@tamp,??_CANSetFilter
  4109  00079E  C0BA  F0B5         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4110  0007A2  C0BB  F0B6         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4111  0007A6  C0BC  F0B7         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4112  0007AA  C0B5  F0B4         	movff	??_CANSetFilter+1,??_CANSetFilter
  4113  0007AE  C0B6  F0B5         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4114  0007B2  C0B7  F0B6         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4115  0007B6  0100               	movlb	0	; () banked
  4116  0007B8  6BB7               	clrf	(??_CANSetFilter+3)& (0+255),b
  4117  0007BA  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  4118  0007BE  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4119  0007C2  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4120  0007C6  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4124  0007CA  C0B9  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;CANlib.h: 883: if (filter & 0x00010000)
  4128  0007CE  0100               	movlb	0	; () banked
  4129  0007D0  A1B1               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4130  0007D2  D003               	goto	l474
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4134  0007D4  010F               	movlb	15	; () banked
  4135  0007D6  8105               	bsf	5,0,b	;volatile
  4136  0007D8  D002               	goto	l475
  4137  0007DA                     l474:
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;CANlib.h: 885: else
  4141                           ;CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4142  0007DA  010F               	movlb	15	; () banked
  4143  0007DC  9105               	bcf	5,0,b	;volatile
  4144  0007DE                     l475:
  4145                           
  4146                           ; BSR set to: 15
  4147                           ;CANlib.h: 888: if (filter & 0x00020000)
  4148  0007DE  0100               	movlb	0	; () banked
  4149  0007E0  A3B1               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4150  0007E2  D003               	goto	l476
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4154  0007E4  010F               	movlb	15	; () banked
  4155  0007E6  8305               	bsf	5,1,b	;volatile
  4156  0007E8  D002               	goto	l477
  4157  0007EA                     l476:
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;CANlib.h: 890: else
  4161                           ;CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4162  0007EA  010F               	movlb	15	; () banked
  4163  0007EC  9305               	bcf	5,1,b	;volatile
  4164  0007EE                     l477:
  4165                           
  4166                           ; BSR set to: 15
  4167                           ;CANlib.h: 893: if (filter & 0x00040000)
  4168  0007EE  0100               	movlb	0	; () banked
  4169  0007F0  A5B1               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4170  0007F2  D003               	goto	l478
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4174  0007F4  010F               	movlb	15	; () banked
  4175  0007F6  8B05               	bsf	5,5,b	;volatile
  4176  0007F8  D002               	goto	l479
  4177  0007FA                     l478:
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;CANlib.h: 895: else
  4181                           ;CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4182  0007FA  010F               	movlb	15	; () banked
  4183  0007FC  9B05               	bcf	5,5,b	;volatile
  4184  0007FE                     l479:
  4185                           
  4186                           ; BSR set to: 15
  4187                           ;CANlib.h: 898: if (filter & 0x00080000)
  4188  0007FE  0100               	movlb	0	; () banked
  4189  000800  A7B1               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4190  000802  D003               	goto	l480
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4194  000804  010F               	movlb	15	; () banked
  4195  000806  8D05               	bsf	5,6,b	;volatile
  4196  000808  D002               	goto	l481
  4197  00080A                     l480:
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;CANlib.h: 900: else
  4201                           ;CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4202  00080A  010F               	movlb	15	; () banked
  4203  00080C  9D05               	bcf	5,6,b	;volatile
  4204  00080E                     l481:
  4205                           
  4206                           ; BSR set to: 15
  4207                           ;CANlib.h: 903: if (filter & 0x00100000)
  4208  00080E  0100               	movlb	0	; () banked
  4209  000810  A9B1               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4210  000812  D003               	goto	l482
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4214  000814  010F               	movlb	15	; () banked
  4215  000816  8F05               	bsf	5,7,b	;volatile
  4216  000818  D002               	goto	l4298
  4217  00081A                     l482:
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;CANlib.h: 905: else
  4221                           ;CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4222  00081A  010F               	movlb	15	; () banked
  4223  00081C  9F05               	bcf	5,7,b	;volatile
  4224  00081E                     l4298:
  4225                           
  4226                           ; BSR set to: 15
  4227                           ;CANlib.h: 908: tamp = (filter >> 21);
  4228  00081E  C0AF  F0B4         	movff	CANSetFilter@filter,??_CANSetFilter
  4229  000822  C0B0  F0B5         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4230  000826  C0B1  F0B6         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4231  00082A  C0B2  F0B7         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4232  00082E  0E16               	movlw	22
  4233  000830  D006               	goto	u5370
  4234  000832                     u5375:
  4235  000832  0100               	movlb	0	; () banked
  4236  000834  90D8               	bcf	status,0,c
  4237  000836  33B7               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4238  000838  33B6               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4239  00083A  33B5               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4240  00083C  33B4               	rrcf	??_CANSetFilter& (0+255),f,b
  4241  00083E                     u5370:
  4242  00083E  2EE8               	decfsz	wreg,f,c
  4243  000840  D7F8               	goto	u5375
  4244  000842  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  4245  000846  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4246  00084A  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4247  00084E  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;CANlib.h: 909: tamp = tamp & 0x000000FF;
  4251  000852  0100               	movlb	0	; () banked
  4252  000854  51B9               	movf	CANSetFilter@tamp& (0+255),w,b
  4253  000856  0100               	movlb	0	; () banked
  4254  000858  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  4255  00085A  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4256  00085C  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4257  00085E  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4261  000860  C0B9  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4262  000864                     l4304:
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;CANlib.h: 911: }
  4266                           ;CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4267  000864  0E02               	movlw	2
  4268  000866  0100               	movlb	0	; () banked
  4269  000868  19B8               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4270  00086A  A4D8               	btfss	status,2,c
  4271  00086C  D089               	goto	l4338
  4272                           
  4273                           ; BSR set to: 0
  4274  00086E  0EF7               	movlw	247
  4275  000870  0100               	movlb	0	; () banked
  4276  000872  19B3               	xorwf	CANSetFilter@type& (0+255),w,b
  4277  000874  A4D8               	btfss	status,2,c
  4278  000876  D084               	goto	l4338
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;CANlib.h: 915: {
  4282                           ;CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4283  000878  010F               	movlb	15	; () banked
  4284  00087A  8709               	bsf	9,3,b	;volatile
  4285                           
  4286                           ; BSR set to: 15
  4287                           ;CANlib.h: 918: tamp = filter & 0x000000FF;
  4288  00087C  0100               	movlb	0	; () banked
  4289  00087E  51AF               	movf	CANSetFilter@filter& (0+255),w,b
  4290  000880  0100               	movlb	0	; () banked
  4291  000882  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  4292  000884  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4293  000886  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4294  000888  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4298  00088A  C0B9  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;CANlib.h: 921: tamp = filter & 0x0000FF00;
  4302  00088E  0E00               	movlw	0
  4303  000890  0100               	movlb	0	; () banked
  4304  000892  15AF               	andwf	CANSetFilter@filter& (0+255),w,b
  4305  000894  0100               	movlb	0	; () banked
  4306  000896  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  4307  000898  0EFF               	movlw	255
  4308  00089A  0100               	movlb	0	; () banked
  4309  00089C  15B0               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4310  00089E  0100               	movlb	0	; () banked
  4311  0008A0  6FBA               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4312  0008A2  0E00               	movlw	0
  4313  0008A4  0100               	movlb	0	; () banked
  4314  0008A6  15B1               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4315  0008A8  0100               	movlb	0	; () banked
  4316  0008AA  6FBB               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4317  0008AC  0E00               	movlw	0
  4318  0008AE  0100               	movlb	0	; () banked
  4319  0008B0  15B2               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4320  0008B2  0100               	movlb	0	; () banked
  4321  0008B4  6FBC               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;CANlib.h: 922: tamp = tamp >> 8;
  4325  0008B6  C0B9  F0B4         	movff	CANSetFilter@tamp,??_CANSetFilter
  4326  0008BA  C0BA  F0B5         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4327  0008BE  C0BB  F0B6         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4328  0008C2  C0BC  F0B7         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4329  0008C6  C0B5  F0B4         	movff	??_CANSetFilter+1,??_CANSetFilter
  4330  0008CA  C0B6  F0B5         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4331  0008CE  C0B7  F0B6         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4332  0008D2  0100               	movlb	0	; () banked
  4333  0008D4  6BB7               	clrf	(??_CANSetFilter+3)& (0+255),b
  4334  0008D6  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  4335  0008DA  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4336  0008DE  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4337  0008E2  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4341  0008E6  C0B9  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;CANlib.h: 925: if (filter & 0x00010000)
  4345  0008EA  0100               	movlb	0	; () banked
  4346  0008EC  A1B1               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4347  0008EE  D003               	goto	l485
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4351  0008F0  010F               	movlb	15	; () banked
  4352  0008F2  8109               	bsf	9,0,b	;volatile
  4353  0008F4  D002               	goto	l486
  4354  0008F6                     l485:
  4355                           
  4356                           ; BSR set to: 0
  4357                           ;CANlib.h: 927: else
  4358                           ;CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4359  0008F6  010F               	movlb	15	; () banked
  4360  0008F8  9109               	bcf	9,0,b	;volatile
  4361  0008FA                     l486:
  4362                           
  4363                           ; BSR set to: 15
  4364                           ;CANlib.h: 930: if (filter & 0x00020000)
  4365  0008FA  0100               	movlb	0	; () banked
  4366  0008FC  A3B1               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4367  0008FE  D003               	goto	l487
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4371  000900  010F               	movlb	15	; () banked
  4372  000902  8309               	bsf	9,1,b	;volatile
  4373  000904  D002               	goto	l488
  4374  000906                     l487:
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;CANlib.h: 932: else
  4378                           ;CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4379  000906  010F               	movlb	15	; () banked
  4380  000908  9309               	bcf	9,1,b	;volatile
  4381  00090A                     l488:
  4382                           
  4383                           ; BSR set to: 15
  4384                           ;CANlib.h: 935: if (filter & 0x00040000)
  4385  00090A  0100               	movlb	0	; () banked
  4386  00090C  A5B1               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4387  00090E  D003               	goto	l489
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4391  000910  010F               	movlb	15	; () banked
  4392  000912  8B09               	bsf	9,5,b	;volatile
  4393  000914  D002               	goto	l490
  4394  000916                     l489:
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;CANlib.h: 937: else
  4398                           ;CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4399  000916  010F               	movlb	15	; () banked
  4400  000918  9B09               	bcf	9,5,b	;volatile
  4401  00091A                     l490:
  4402                           
  4403                           ; BSR set to: 15
  4404                           ;CANlib.h: 940: if (filter & 0x00080000)
  4405  00091A  0100               	movlb	0	; () banked
  4406  00091C  A7B1               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4407  00091E  D003               	goto	l491
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4411  000920  010F               	movlb	15	; () banked
  4412  000922  8D09               	bsf	9,6,b	;volatile
  4413  000924  D002               	goto	l492
  4414  000926                     l491:
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;CANlib.h: 942: else
  4418                           ;CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4419  000926  010F               	movlb	15	; () banked
  4420  000928  9D09               	bcf	9,6,b	;volatile
  4421  00092A                     l492:
  4422                           
  4423                           ; BSR set to: 15
  4424                           ;CANlib.h: 945: if (filter & 0x00100000)
  4425  00092A  0100               	movlb	0	; () banked
  4426  00092C  A9B1               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4427  00092E  D003               	goto	l493
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4431  000930  010F               	movlb	15	; () banked
  4432  000932  8F09               	bsf	9,7,b	;volatile
  4433  000934  D002               	goto	l4332
  4434  000936                     l493:
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;CANlib.h: 947: else
  4438                           ;CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4439  000936  010F               	movlb	15	; () banked
  4440  000938  9F09               	bcf	9,7,b	;volatile
  4441  00093A                     l4332:
  4442                           
  4443                           ; BSR set to: 15
  4444                           ;CANlib.h: 950: tamp = (filter >> 21);
  4445  00093A  C0AF  F0B4         	movff	CANSetFilter@filter,??_CANSetFilter
  4446  00093E  C0B0  F0B5         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4447  000942  C0B1  F0B6         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4448  000946  C0B2  F0B7         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4449  00094A  0E16               	movlw	22
  4450  00094C  D006               	goto	u5450
  4451  00094E                     u5455:
  4452  00094E  0100               	movlb	0	; () banked
  4453  000950  90D8               	bcf	status,0,c
  4454  000952  33B7               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4455  000954  33B6               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4456  000956  33B5               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4457  000958  33B4               	rrcf	??_CANSetFilter& (0+255),f,b
  4458  00095A                     u5450:
  4459  00095A  2EE8               	decfsz	wreg,f,c
  4460  00095C  D7F8               	goto	u5455
  4461  00095E  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  4462  000962  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4463  000966  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4464  00096A  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;CANlib.h: 951: tamp = tamp & 0x000000FF;
  4468  00096E  0100               	movlb	0	; () banked
  4469  000970  51B9               	movf	CANSetFilter@tamp& (0+255),w,b
  4470  000972  0100               	movlb	0	; () banked
  4471  000974  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  4472  000976  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4473  000978  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4474  00097A  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4478  00097C  C0B9  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4479  000980                     l4338:
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;CANlib.h: 953: }
  4483                           ;CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4484  000980  0E03               	movlw	3
  4485  000982  0100               	movlb	0	; () banked
  4486  000984  19B8               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4487  000986  A4D8               	btfss	status,2,c
  4488  000988  D089               	goto	l4372
  4489                           
  4490                           ; BSR set to: 0
  4491  00098A  0EF7               	movlw	247
  4492  00098C  0100               	movlb	0	; () banked
  4493  00098E  19B3               	xorwf	CANSetFilter@type& (0+255),w,b
  4494  000990  A4D8               	btfss	status,2,c
  4495  000992  D084               	goto	l4372
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;CANlib.h: 956: {
  4499                           ;CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  4500  000994  010F               	movlb	15	; () banked
  4501  000996  870D               	bsf	13,3,b	;volatile
  4502                           
  4503                           ; BSR set to: 15
  4504                           ;CANlib.h: 959: tamp = filter & 0x000000FF;
  4505  000998  0100               	movlb	0	; () banked
  4506  00099A  51AF               	movf	CANSetFilter@filter& (0+255),w,b
  4507  00099C  0100               	movlb	0	; () banked
  4508  00099E  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  4509  0009A0  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4510  0009A2  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4511  0009A4  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  4515  0009A6  C0B9  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;CANlib.h: 962: tamp = filter & 0x0000FF00;
  4519  0009AA  0E00               	movlw	0
  4520  0009AC  0100               	movlb	0	; () banked
  4521  0009AE  15AF               	andwf	CANSetFilter@filter& (0+255),w,b
  4522  0009B0  0100               	movlb	0	; () banked
  4523  0009B2  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  4524  0009B4  0EFF               	movlw	255
  4525  0009B6  0100               	movlb	0	; () banked
  4526  0009B8  15B0               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4527  0009BA  0100               	movlb	0	; () banked
  4528  0009BC  6FBA               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4529  0009BE  0E00               	movlw	0
  4530  0009C0  0100               	movlb	0	; () banked
  4531  0009C2  15B1               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4532  0009C4  0100               	movlb	0	; () banked
  4533  0009C6  6FBB               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4534  0009C8  0E00               	movlw	0
  4535  0009CA  0100               	movlb	0	; () banked
  4536  0009CC  15B2               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4537  0009CE  0100               	movlb	0	; () banked
  4538  0009D0  6FBC               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;CANlib.h: 963: tamp = tamp >> 8;
  4542  0009D2  C0B9  F0B4         	movff	CANSetFilter@tamp,??_CANSetFilter
  4543  0009D6  C0BA  F0B5         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4544  0009DA  C0BB  F0B6         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4545  0009DE  C0BC  F0B7         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4546  0009E2  C0B5  F0B4         	movff	??_CANSetFilter+1,??_CANSetFilter
  4547  0009E6  C0B6  F0B5         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4548  0009EA  C0B7  F0B6         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4549  0009EE  0100               	movlb	0	; () banked
  4550  0009F0  6BB7               	clrf	(??_CANSetFilter+3)& (0+255),b
  4551  0009F2  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  4552  0009F6  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4553  0009FA  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4554  0009FE  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  4558  000A02  C0B9  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;CANlib.h: 966: if (filter & 0x00010000)
  4562  000A06  0100               	movlb	0	; () banked
  4563  000A08  A1B1               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4564  000A0A  D003               	goto	l496
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  4568  000A0C  010F               	movlb	15	; () banked
  4569  000A0E  810D               	bsf	13,0,b	;volatile
  4570  000A10  D002               	goto	l497
  4571  000A12                     l496:
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;CANlib.h: 968: else
  4575                           ;CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  4576  000A12  010F               	movlb	15	; () banked
  4577  000A14  910D               	bcf	13,0,b	;volatile
  4578  000A16                     l497:
  4579                           
  4580                           ; BSR set to: 15
  4581                           ;CANlib.h: 971: if (filter & 0x00020000)
  4582  000A16  0100               	movlb	0	; () banked
  4583  000A18  A3B1               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4584  000A1A  D003               	goto	l498
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  4588  000A1C  010F               	movlb	15	; () banked
  4589  000A1E  830D               	bsf	13,1,b	;volatile
  4590  000A20  D002               	goto	l499
  4591  000A22                     l498:
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;CANlib.h: 973: else
  4595                           ;CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  4596  000A22  010F               	movlb	15	; () banked
  4597  000A24  930D               	bcf	13,1,b	;volatile
  4598  000A26                     l499:
  4599                           
  4600                           ; BSR set to: 15
  4601                           ;CANlib.h: 976: if (filter & 0x00040000)
  4602  000A26  0100               	movlb	0	; () banked
  4603  000A28  A5B1               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4604  000A2A  D003               	goto	l500
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  4608  000A2C  010F               	movlb	15	; () banked
  4609  000A2E  8B0D               	bsf	13,5,b	;volatile
  4610  000A30  D002               	goto	l501
  4611  000A32                     l500:
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;CANlib.h: 978: else
  4615                           ;CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  4616  000A32  010F               	movlb	15	; () banked
  4617  000A34  9B0D               	bcf	13,5,b	;volatile
  4618  000A36                     l501:
  4619                           
  4620                           ; BSR set to: 15
  4621                           ;CANlib.h: 981: if (filter & 0x00080000)
  4622  000A36  0100               	movlb	0	; () banked
  4623  000A38  A7B1               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4624  000A3A  D003               	goto	l502
  4625                           
  4626                           ; BSR set to: 0
  4627                           ;CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  4628  000A3C  010F               	movlb	15	; () banked
  4629  000A3E  8D0D               	bsf	13,6,b	;volatile
  4630  000A40  D002               	goto	l503
  4631  000A42                     l502:
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;CANlib.h: 983: else
  4635                           ;CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  4636  000A42  010F               	movlb	15	; () banked
  4637  000A44  9D0D               	bcf	13,6,b	;volatile
  4638  000A46                     l503:
  4639                           
  4640                           ; BSR set to: 15
  4641                           ;CANlib.h: 986: if (filter & 0x00100000)
  4642  000A46  0100               	movlb	0	; () banked
  4643  000A48  A9B1               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4644  000A4A  D003               	goto	l504
  4645                           
  4646                           ; BSR set to: 0
  4647                           ;CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  4648  000A4C  010F               	movlb	15	; () banked
  4649  000A4E  8F0D               	bsf	13,7,b	;volatile
  4650  000A50  D002               	goto	l4366
  4651  000A52                     l504:
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;CANlib.h: 988: else
  4655                           ;CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  4656  000A52  010F               	movlb	15	; () banked
  4657  000A54  9F0D               	bcf	13,7,b	;volatile
  4658  000A56                     l4366:
  4659                           
  4660                           ; BSR set to: 15
  4661                           ;CANlib.h: 991: tamp = (filter >> 21);
  4662  000A56  C0AF  F0B4         	movff	CANSetFilter@filter,??_CANSetFilter
  4663  000A5A  C0B0  F0B5         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4664  000A5E  C0B1  F0B6         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4665  000A62  C0B2  F0B7         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4666  000A66  0E16               	movlw	22
  4667  000A68  D006               	goto	u5530
  4668  000A6A                     u5535:
  4669  000A6A  0100               	movlb	0	; () banked
  4670  000A6C  90D8               	bcf	status,0,c
  4671  000A6E  33B7               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4672  000A70  33B6               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4673  000A72  33B5               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4674  000A74  33B4               	rrcf	??_CANSetFilter& (0+255),f,b
  4675  000A76                     u5530:
  4676  000A76  2EE8               	decfsz	wreg,f,c
  4677  000A78  D7F8               	goto	u5535
  4678  000A7A  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  4679  000A7E  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4680  000A82  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4681  000A86  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;CANlib.h: 992: tamp = tamp & 0x000000FF;
  4685  000A8A  0100               	movlb	0	; () banked
  4686  000A8C  51B9               	movf	CANSetFilter@tamp& (0+255),w,b
  4687  000A8E  0100               	movlb	0	; () banked
  4688  000A90  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  4689  000A92  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4690  000A94  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4691  000A96  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  4695  000A98  C0B9  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4696  000A9C                     l4372:
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;CANlib.h: 994: }
  4700                           ;CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4701  000A9C  0E04               	movlw	4
  4702  000A9E  0100               	movlb	0	; () banked
  4703  000AA0  19B8               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4704  000AA2  A4D8               	btfss	status,2,c
  4705  000AA4  D089               	goto	l4406
  4706                           
  4707                           ; BSR set to: 0
  4708  000AA6  0EF7               	movlw	247
  4709  000AA8  0100               	movlb	0	; () banked
  4710  000AAA  19B3               	xorwf	CANSetFilter@type& (0+255),w,b
  4711  000AAC  A4D8               	btfss	status,2,c
  4712  000AAE  D084               	goto	l4406
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;CANlib.h: 997: {
  4716                           ;CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  4717  000AB0  010F               	movlb	15	; () banked
  4718  000AB2  8711               	bsf	17,3,b	;volatile
  4719                           
  4720                           ; BSR set to: 15
  4721                           ;CANlib.h: 1000: tamp = filter & 0x000000FF;
  4722  000AB4  0100               	movlb	0	; () banked
  4723  000AB6  51AF               	movf	CANSetFilter@filter& (0+255),w,b
  4724  000AB8  0100               	movlb	0	; () banked
  4725  000ABA  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  4726  000ABC  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4727  000ABE  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4728  000AC0  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  4732  000AC2  C0B9  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;CANlib.h: 1003: tamp = filter & 0x0000FF00;
  4736  000AC6  0E00               	movlw	0
  4737  000AC8  0100               	movlb	0	; () banked
  4738  000ACA  15AF               	andwf	CANSetFilter@filter& (0+255),w,b
  4739  000ACC  0100               	movlb	0	; () banked
  4740  000ACE  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  4741  000AD0  0EFF               	movlw	255
  4742  000AD2  0100               	movlb	0	; () banked
  4743  000AD4  15B0               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4744  000AD6  0100               	movlb	0	; () banked
  4745  000AD8  6FBA               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4746  000ADA  0E00               	movlw	0
  4747  000ADC  0100               	movlb	0	; () banked
  4748  000ADE  15B1               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4749  000AE0  0100               	movlb	0	; () banked
  4750  000AE2  6FBB               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4751  000AE4  0E00               	movlw	0
  4752  000AE6  0100               	movlb	0	; () banked
  4753  000AE8  15B2               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4754  000AEA  0100               	movlb	0	; () banked
  4755  000AEC  6FBC               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;CANlib.h: 1004: tamp = tamp >> 8;
  4759  000AEE  C0B9  F0B4         	movff	CANSetFilter@tamp,??_CANSetFilter
  4760  000AF2  C0BA  F0B5         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4761  000AF6  C0BB  F0B6         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4762  000AFA  C0BC  F0B7         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4763  000AFE  C0B5  F0B4         	movff	??_CANSetFilter+1,??_CANSetFilter
  4764  000B02  C0B6  F0B5         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4765  000B06  C0B7  F0B6         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4766  000B0A  0100               	movlb	0	; () banked
  4767  000B0C  6BB7               	clrf	(??_CANSetFilter+3)& (0+255),b
  4768  000B0E  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  4769  000B12  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4770  000B16  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4771  000B1A  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  4775  000B1E  C0B9  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;CANlib.h: 1007: if (filter & 0x00010000)
  4779  000B22  0100               	movlb	0	; () banked
  4780  000B24  A1B1               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4781  000B26  D003               	goto	l507
  4782                           
  4783                           ; BSR set to: 0
  4784                           ;CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  4785  000B28  010F               	movlb	15	; () banked
  4786  000B2A  8111               	bsf	17,0,b	;volatile
  4787  000B2C  D002               	goto	l508
  4788  000B2E                     l507:
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;CANlib.h: 1009: else
  4792                           ;CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  4793  000B2E  010F               	movlb	15	; () banked
  4794  000B30  9111               	bcf	17,0,b	;volatile
  4795  000B32                     l508:
  4796                           
  4797                           ; BSR set to: 15
  4798                           ;CANlib.h: 1012: if (filter & 0x00020000)
  4799  000B32  0100               	movlb	0	; () banked
  4800  000B34  A3B1               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4801  000B36  D003               	goto	l509
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  4805  000B38  010F               	movlb	15	; () banked
  4806  000B3A  8311               	bsf	17,1,b	;volatile
  4807  000B3C  D002               	goto	l510
  4808  000B3E                     l509:
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;CANlib.h: 1014: else
  4812                           ;CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  4813  000B3E  010F               	movlb	15	; () banked
  4814  000B40  9311               	bcf	17,1,b	;volatile
  4815  000B42                     l510:
  4816                           
  4817                           ; BSR set to: 15
  4818                           ;CANlib.h: 1017: if (filter & 0x00040000)
  4819  000B42  0100               	movlb	0	; () banked
  4820  000B44  A5B1               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4821  000B46  D003               	goto	l511
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  4825  000B48  010F               	movlb	15	; () banked
  4826  000B4A  8B11               	bsf	17,5,b	;volatile
  4827  000B4C  D002               	goto	l512
  4828  000B4E                     l511:
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;CANlib.h: 1019: else
  4832                           ;CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  4833  000B4E  010F               	movlb	15	; () banked
  4834  000B50  9B11               	bcf	17,5,b	;volatile
  4835  000B52                     l512:
  4836                           
  4837                           ; BSR set to: 15
  4838                           ;CANlib.h: 1022: if (filter & 0x00080000)
  4839  000B52  0100               	movlb	0	; () banked
  4840  000B54  A7B1               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4841  000B56  D003               	goto	l513
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  4845  000B58  010F               	movlb	15	; () banked
  4846  000B5A  8D11               	bsf	17,6,b	;volatile
  4847  000B5C  D002               	goto	l514
  4848  000B5E                     l513:
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;CANlib.h: 1024: else
  4852                           ;CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  4853  000B5E  010F               	movlb	15	; () banked
  4854  000B60  9D11               	bcf	17,6,b	;volatile
  4855  000B62                     l514:
  4856                           
  4857                           ; BSR set to: 15
  4858                           ;CANlib.h: 1027: if (filter & 0x00100000)
  4859  000B62  0100               	movlb	0	; () banked
  4860  000B64  A9B1               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4861  000B66  D003               	goto	l515
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  4865  000B68  010F               	movlb	15	; () banked
  4866  000B6A  8F11               	bsf	17,7,b	;volatile
  4867  000B6C  D002               	goto	l4400
  4868  000B6E                     l515:
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;CANlib.h: 1029: else
  4872                           ;CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  4873  000B6E  010F               	movlb	15	; () banked
  4874  000B70  9F11               	bcf	17,7,b	;volatile
  4875  000B72                     l4400:
  4876                           
  4877                           ; BSR set to: 15
  4878                           ;CANlib.h: 1032: tamp = (filter >> 21);
  4879  000B72  C0AF  F0B4         	movff	CANSetFilter@filter,??_CANSetFilter
  4880  000B76  C0B0  F0B5         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4881  000B7A  C0B1  F0B6         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4882  000B7E  C0B2  F0B7         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4883  000B82  0E16               	movlw	22
  4884  000B84  D006               	goto	u5610
  4885  000B86                     u5615:
  4886  000B86  0100               	movlb	0	; () banked
  4887  000B88  90D8               	bcf	status,0,c
  4888  000B8A  33B7               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4889  000B8C  33B6               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4890  000B8E  33B5               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4891  000B90  33B4               	rrcf	??_CANSetFilter& (0+255),f,b
  4892  000B92                     u5610:
  4893  000B92  2EE8               	decfsz	wreg,f,c
  4894  000B94  D7F8               	goto	u5615
  4895  000B96  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  4896  000B9A  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4897  000B9E  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4898  000BA2  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;CANlib.h: 1033: tamp = tamp & 0x000000FF;
  4902  000BA6  0100               	movlb	0	; () banked
  4903  000BA8  51B9               	movf	CANSetFilter@tamp& (0+255),w,b
  4904  000BAA  0100               	movlb	0	; () banked
  4905  000BAC  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  4906  000BAE  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4907  000BB0  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4908  000BB2  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  4912  000BB4  C0B9  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4913  000BB8                     l4406:
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;CANlib.h: 1035: }
  4917                           ;CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4918  000BB8  0E05               	movlw	5
  4919  000BBA  0100               	movlb	0	; () banked
  4920  000BBC  19B8               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4921  000BBE  A4D8               	btfss	status,2,c
  4922  000BC0  0012               	return	
  4923                           
  4924                           ; BSR set to: 0
  4925  000BC2  0EF7               	movlw	247
  4926  000BC4  0100               	movlb	0	; () banked
  4927  000BC6  19B3               	xorwf	CANSetFilter@type& (0+255),w,b
  4928  000BC8  A4D8               	btfss	status,2,c
  4929  000BCA  0012               	return	
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;CANlib.h: 1038: {
  4933                           ;CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  4934  000BCC  010F               	movlb	15	; () banked
  4935  000BCE  8715               	bsf	21,3,b	;volatile
  4936                           
  4937                           ; BSR set to: 15
  4938                           ;CANlib.h: 1041: tamp = filter & 0x000000FF;
  4939  000BD0  0100               	movlb	0	; () banked
  4940  000BD2  51AF               	movf	CANSetFilter@filter& (0+255),w,b
  4941  000BD4  0100               	movlb	0	; () banked
  4942  000BD6  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  4943  000BD8  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4944  000BDA  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4945  000BDC  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  4949  000BDE  C0B9  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;CANlib.h: 1044: tamp = filter & 0x0000FF00;
  4953  000BE2  0E00               	movlw	0
  4954  000BE4  0100               	movlb	0	; () banked
  4955  000BE6  15AF               	andwf	CANSetFilter@filter& (0+255),w,b
  4956  000BE8  0100               	movlb	0	; () banked
  4957  000BEA  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  4958  000BEC  0EFF               	movlw	255
  4959  000BEE  0100               	movlb	0	; () banked
  4960  000BF0  15B0               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4961  000BF2  0100               	movlb	0	; () banked
  4962  000BF4  6FBA               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4963  000BF6  0E00               	movlw	0
  4964  000BF8  0100               	movlb	0	; () banked
  4965  000BFA  15B1               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4966  000BFC  0100               	movlb	0	; () banked
  4967  000BFE  6FBB               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4968  000C00  0E00               	movlw	0
  4969  000C02  0100               	movlb	0	; () banked
  4970  000C04  15B2               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4971  000C06  0100               	movlb	0	; () banked
  4972  000C08  6FBC               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;CANlib.h: 1045: tamp = tamp >> 8;
  4976  000C0A  C0B9  F0B4         	movff	CANSetFilter@tamp,??_CANSetFilter
  4977  000C0E  C0BA  F0B5         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4978  000C12  C0BB  F0B6         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4979  000C16  C0BC  F0B7         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4980  000C1A  C0B5  F0B4         	movff	??_CANSetFilter+1,??_CANSetFilter
  4981  000C1E  C0B6  F0B5         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4982  000C22  C0B7  F0B6         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4983  000C26  0100               	movlb	0	; () banked
  4984  000C28  6BB7               	clrf	(??_CANSetFilter+3)& (0+255),b
  4985  000C2A  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  4986  000C2E  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4987  000C32  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4988  000C36  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  4992  000C3A  C0B9  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;CANlib.h: 1048: if (filter & 0x00010000)
  4996  000C3E  0100               	movlb	0	; () banked
  4997  000C40  A1B1               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4998  000C42  D003               	goto	l518
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5002  000C44  010F               	movlb	15	; () banked
  5003  000C46  8115               	bsf	21,0,b	;volatile
  5004  000C48  D002               	goto	l519
  5005  000C4A                     l518:
  5006                           
  5007                           ; BSR set to: 0
  5008                           ;CANlib.h: 1050: else
  5009                           ;CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5010  000C4A  010F               	movlb	15	; () banked
  5011  000C4C  9115               	bcf	21,0,b	;volatile
  5012  000C4E                     l519:
  5013                           
  5014                           ; BSR set to: 15
  5015                           ;CANlib.h: 1053: if (filter & 0x00020000)
  5016  000C4E  0100               	movlb	0	; () banked
  5017  000C50  A3B1               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5018  000C52  D003               	goto	l520
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5022  000C54  010F               	movlb	15	; () banked
  5023  000C56  8315               	bsf	21,1,b	;volatile
  5024  000C58  D002               	goto	l521
  5025  000C5A                     l520:
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;CANlib.h: 1055: else
  5029                           ;CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5030  000C5A  010F               	movlb	15	; () banked
  5031  000C5C  9315               	bcf	21,1,b	;volatile
  5032  000C5E                     l521:
  5033                           
  5034                           ; BSR set to: 15
  5035                           ;CANlib.h: 1058: if (filter & 0x00040000)
  5036  000C5E  0100               	movlb	0	; () banked
  5037  000C60  A5B1               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5038  000C62  D003               	goto	l522
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5042  000C64  010F               	movlb	15	; () banked
  5043  000C66  8B15               	bsf	21,5,b	;volatile
  5044  000C68  D002               	goto	l523
  5045  000C6A                     l522:
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;CANlib.h: 1060: else
  5049                           ;CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5050  000C6A  010F               	movlb	15	; () banked
  5051  000C6C  9B15               	bcf	21,5,b	;volatile
  5052  000C6E                     l523:
  5053                           
  5054                           ; BSR set to: 15
  5055                           ;CANlib.h: 1063: if (filter & 0x00080000)
  5056  000C6E  0100               	movlb	0	; () banked
  5057  000C70  A7B1               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5058  000C72  D003               	goto	l524
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5062  000C74  010F               	movlb	15	; () banked
  5063  000C76  8D15               	bsf	21,6,b	;volatile
  5064  000C78  D002               	goto	l525
  5065  000C7A                     l524:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;CANlib.h: 1065: else
  5069                           ;CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5070  000C7A  010F               	movlb	15	; () banked
  5071  000C7C  9D15               	bcf	21,6,b	;volatile
  5072  000C7E                     l525:
  5073                           
  5074                           ; BSR set to: 15
  5075                           ;CANlib.h: 1068: if (filter & 0x00100000)
  5076  000C7E  0100               	movlb	0	; () banked
  5077  000C80  A9B1               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5078  000C82  D003               	goto	l526
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5082  000C84  010F               	movlb	15	; () banked
  5083  000C86  8F15               	bsf	21,7,b	;volatile
  5084  000C88  D002               	goto	l4434
  5085  000C8A                     l526:
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;CANlib.h: 1070: else
  5089                           ;CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5090  000C8A  010F               	movlb	15	; () banked
  5091  000C8C  9F15               	bcf	21,7,b	;volatile
  5092  000C8E                     l4434:
  5093                           
  5094                           ; BSR set to: 15
  5095                           ;CANlib.h: 1073: tamp = (filter >> 21);
  5096  000C8E  C0AF  F0B4         	movff	CANSetFilter@filter,??_CANSetFilter
  5097  000C92  C0B0  F0B5         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5098  000C96  C0B1  F0B6         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5099  000C9A  C0B2  F0B7         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5100  000C9E  0E16               	movlw	22
  5101  000CA0  D006               	goto	u5690
  5102  000CA2                     u5695:
  5103  000CA2  0100               	movlb	0	; () banked
  5104  000CA4  90D8               	bcf	status,0,c
  5105  000CA6  33B7               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5106  000CA8  33B6               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5107  000CAA  33B5               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5108  000CAC  33B4               	rrcf	??_CANSetFilter& (0+255),f,b
  5109  000CAE                     u5690:
  5110  000CAE  2EE8               	decfsz	wreg,f,c
  5111  000CB0  D7F8               	goto	u5695
  5112  000CB2  C0B4  F0B9         	movff	??_CANSetFilter,CANSetFilter@tamp
  5113  000CB6  C0B5  F0BA         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5114  000CBA  C0B6  F0BB         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5115  000CBE  C0B7  F0BC         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5119  000CC2  0100               	movlb	0	; () banked
  5120  000CC4  51B9               	movf	CANSetFilter@tamp& (0+255),w,b
  5121  000CC6  0100               	movlb	0	; () banked
  5122  000CC8  6FB9               	movwf	CANSetFilter@tamp& (0+255),b
  5123  000CCA  6BBA               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5124  000CCC  6BBB               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5125  000CCE  6BBC               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5129  000CD0  C0B9  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5130  000CD4  0012               	return	
  5131  000CD6                     __end_of_CANSetFilter:
  5132                           	opt stack 0
  5133                           tblptru	equ	0xFF8
  5134                           tblptrh	equ	0xFF7
  5135                           tblptrl	equ	0xFF6
  5136                           tablat	equ	0xFF5
  5137                           prodh	equ	0xFF4
  5138                           prodl	equ	0xFF3
  5139                           intcon	equ	0xFF2
  5140                           postinc0	equ	0xFEE
  5141                           wreg	equ	0xFE8
  5142                           indf1	equ	0xFE7
  5143                           postdec1	equ	0xFE5
  5144                           fsr1h	equ	0xFE2
  5145                           fsr1l	equ	0xFE1
  5146                           indf2	equ	0xFDF
  5147                           fsr2h	equ	0xFDA
  5148                           fsr2l	equ	0xFD9
  5149                           status	equ	0xFD8
  5150                           
  5151 ;; *************** function _CANOperationMode *****************
  5152 ;; Defined at:
  5153 ;;		line 206 in file "CANlib.h"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  mode            1    wreg     enum E16838
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;  mode            1    0[BANK0 ] enum E16838
  5158 ;; Return value:  Size  Location     Type
  5159 ;;		None               void
  5160 ;; Registers used:
  5161 ;;		wreg, status,2, status,0
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5167 ;;      Params:         0       0       0       0
  5168 ;;      Locals:         0       1       0       0
  5169 ;;      Temps:          0       0       0       0
  5170 ;;      Totals:         0       1       0       0
  5171 ;;Total ram usage:        1 bytes
  5172 ;; Hardware stack levels used:    1
  5173 ;; Hardware stack levels required when called:    2
  5174 ;; This function calls:
  5175 ;;		Nothing
  5176 ;; This function is called by:
  5177 ;;		_CANInitialize
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           	psect	text8
  5182  00283E                     __ptext8:
  5183                           	opt stack 0
  5184  00283E                     _CANOperationMode:
  5185                           	opt stack 26
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;incstack = 0
  5189                           ;CANOperationMode@mode stored from wreg
  5190  00283E  0100               	movlb	0	; () banked
  5191  002840  6FAF               	movwf	CANOperationMode@mode& (0+255),b
  5192                           
  5193                           ;CANlib.h: 208: CANCON = mode;
  5194  002842  C0AF  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5195  002846                     l4030:
  5196  002846  506E               	movf	3950,w,c	;volatile
  5197  002848  0BE0               	andlw	224
  5198  00284A  0100               	movlb	0	; () banked
  5199  00284C  19AF               	xorwf	CANOperationMode@mode& (0+255),w,b
  5200  00284E  B4D8               	btfsc	status,2,c
  5201  002850  0012               	return	
  5202  002852  D7F9               	goto	l4030
  5203  002854                     __end_of_CANOperationMode:
  5204                           	opt stack 0
  5205                           tblptru	equ	0xFF8
  5206                           tblptrh	equ	0xFF7
  5207                           tblptrl	equ	0xFF6
  5208                           tablat	equ	0xFF5
  5209                           prodh	equ	0xFF4
  5210                           prodl	equ	0xFF3
  5211                           intcon	equ	0xFF2
  5212                           postinc0	equ	0xFEE
  5213                           wreg	equ	0xFE8
  5214                           indf1	equ	0xFE7
  5215                           postdec1	equ	0xFE5
  5216                           fsr1h	equ	0xFE2
  5217                           fsr1l	equ	0xFE1
  5218                           indf2	equ	0xFDF
  5219                           fsr2h	equ	0xFDA
  5220                           fsr2l	equ	0xFD9
  5221                           status	equ	0xFD8
  5222                           
  5223 ;; *************** function _battery_measure *****************
  5224 ;; Defined at:
  5225 ;;		line 272 in file "motore.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;		None
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;		None
  5230 ;; Return value:  Size  Location     Type
  5231 ;;		None               void
  5232 ;; Registers used:
  5233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5239 ;;      Params:         0       0       0       0
  5240 ;;      Locals:         0       0       0       0
  5241 ;;      Temps:          0       0       0       0
  5242 ;;      Totals:         0       0       0       0
  5243 ;;Total ram usage:        0 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:    3
  5246 ;; This function calls:
  5247 ;;		_CANisTxReady
  5248 ;;		_CANsendMessage
  5249 ;;		___awdiv
  5250 ;;		___wmul
  5251 ;; This function is called by:
  5252 ;;		_main
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           	psect	text9
  5257  002538                     __ptext9:
  5258                           	opt stack 0
  5259  002538                     _battery_measure:
  5260                           	opt stack 27
  5261                           
  5262                           ;motore.c: 273: ADCON0bits.GO = 1;
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;incstack = 0
  5266  002538  82C2               	bsf	4034,1,c	;volatile
  5267  00253A                     l710:
  5268  00253A  B2C2               	btfsc	4034,1,c	;volatile
  5269  00253C  D7FE               	goto	l710
  5270                           
  5271                           ;motore.c: 275: vBatt = ADRESH;
  5272  00253E  CFC4 F038          	movff	4036,_vBatt	;volatile
  5273  002542  6A39               	clrf	_vBatt+1,c
  5274                           
  5275                           ;motore.c: 276: vBatt = (vBatt * 14) / 255;
  5276  002544  C038  F0B6         	movff	_vBatt,___wmul@multiplier
  5277  002548  C039  F0B7         	movff	_vBatt+1,___wmul@multiplier+1
  5278  00254C  0E00               	movlw	0
  5279  00254E  0100               	movlb	0	; () banked
  5280  002550  6FB9               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5281  002552  0E0E               	movlw	14
  5282  002554  6FB8               	movwf	___wmul@multiplicand& (0+255),b
  5283  002556  ECB1  F013         	call	___wmul	;wreg free
  5284  00255A  C0B6  F0BC         	movff	?___wmul,___awdiv@dividend
  5285  00255E  C0B7  F0BD         	movff	?___wmul+1,___awdiv@dividend+1
  5286  002562  0E00               	movlw	0
  5287  002564  0100               	movlb	0	; () banked
  5288  002566  6FBF               	movwf	(___awdiv@divisor+1)& (0+255),b
  5289  002568  69BE               	setf	___awdiv@divisor& (0+255),b
  5290  00256A  ECE5  F011         	call	___awdiv	;wreg free
  5291  00256E  C0BC  F038         	movff	?___awdiv,_vBatt
  5292  002572  C0BD  F039         	movff	?___awdiv+1,_vBatt+1
  5293                           
  5294                           ;motore.c: 277: if (vBatt < 8) {
  5295  002576  BE39               	btfsc	_vBatt+1,7,c
  5296  002578  D006               	goto	l4972
  5297  00257A  5039               	movf	_vBatt+1,w,c
  5298  00257C  E122               	bnz	l713
  5299  00257E  0E08               	movlw	8
  5300  002580  5C38               	subwf	_vBatt,w,c
  5301  002582  B0D8               	btfsc	status,0,c
  5302  002584  D01E               	goto	l713
  5303  002586                     l4972:
  5304  002586  ECFC  F013         	call	_CANisTxReady	;wreg free
  5305  00258A  0900               	iorlw	0
  5306  00258C  B4D8               	btfsc	status,2,c
  5307  00258E  D7FB               	goto	l4972
  5308                           
  5309                           ;motore.c: 279: CANsendMessage(0b00000000000000000000000001001, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5310  002590  0E09               	movlw	9
  5311  002592  0100               	movlb	0	; () banked
  5312  002594  6FAF               	movwf	CANsendMessage@identifier& (0+255),b
  5313  002596  0E00               	movlw	0
  5314  002598  6FB0               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5315  00259A  0E00               	movlw	0
  5316  00259C  6FB1               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5317  00259E  0E00               	movlw	0
  5318  0025A0  6FB2               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5319  0025A2  0E97               	movlw	low _data_array
  5320  0025A4  0100               	movlb	0	; () banked
  5321  0025A6  6FB3               	movwf	CANsendMessage@data& (0+255),b
  5322  0025A8  0E00               	movlw	high _data_array
  5323  0025AA  0100               	movlb	0	; () banked
  5324  0025AC  6FB4               	movwf	(CANsendMessage@data+1)& (0+255),b
  5325  0025AE  0E08               	movlw	8
  5326  0025B0  0100               	movlb	0	; () banked
  5327  0025B2  6FB5               	movwf	CANsendMessage@dataLength& (0+255),b
  5328  0025B4  0EFC               	movlw	252
  5329  0025B6  0100               	movlb	0	; () banked
  5330  0025B8  6FB6               	movwf	CANsendMessage@flags& (0+255),b
  5331  0025BA  EC6B  F006         	call	_CANsendMessage	;wreg free
  5332                           
  5333                           ;motore.c: 280: PORTCbits.RC1 = 1;
  5334  0025BE  8282               	bsf	3970,1,c	;volatile
  5335                           
  5336                           ;motore.c: 281: } else {
  5337  0025C0  0012               	return	
  5338  0025C2                     l713:
  5339                           
  5340                           ;motore.c: 282: PORTCbits.RC1 = 0;
  5341  0025C2  9282               	bcf	3970,1,c	;volatile
  5342  0025C4  0012               	return	
  5343  0025C6                     __end_of_battery_measure:
  5344                           	opt stack 0
  5345                           tblptru	equ	0xFF8
  5346                           tblptrh	equ	0xFF7
  5347                           tblptrl	equ	0xFF6
  5348                           tablat	equ	0xFF5
  5349                           prodh	equ	0xFF4
  5350                           prodl	equ	0xFF3
  5351                           intcon	equ	0xFF2
  5352                           postinc0	equ	0xFEE
  5353                           wreg	equ	0xFE8
  5354                           indf1	equ	0xFE7
  5355                           postdec1	equ	0xFE5
  5356                           fsr1h	equ	0xFE2
  5357                           fsr1l	equ	0xFE1
  5358                           indf2	equ	0xFDF
  5359                           fsr2h	equ	0xFDA
  5360                           fsr2l	equ	0xFD9
  5361                           status	equ	0xFD8
  5362                           
  5363 ;; *************** function ___wmul *****************
  5364 ;; Defined at:
  5365 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;  multiplier      2    7[BANK0 ] unsigned int 
  5368 ;;  multiplicand    2    9[BANK0 ] unsigned int 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  product         2   11[BANK0 ] unsigned int 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  2    7[BANK0 ] unsigned int 
  5373 ;; Registers used:
  5374 ;;		wreg, status,2, status,0, prodl, prodh
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5380 ;;      Params:         0       4       0       0
  5381 ;;      Locals:         0       2       0       0
  5382 ;;      Temps:          0       0       0       0
  5383 ;;      Totals:         0       6       0       0
  5384 ;;Total ram usage:        6 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:    2
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_delay_ms
  5391 ;;		_main
  5392 ;;		_battery_measure
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           	psect	text10
  5397  002762                     __ptext10:
  5398                           	opt stack 0
  5399  002762                     ___wmul:
  5400                           	opt stack 27
  5401                           
  5402                           ;incstack = 0
  5403  002762  0100               	movlb	0	; () banked
  5404  002764  51B6               	movf	___wmul@multiplier& (0+255),w,b
  5405  002766  0100               	movlb	0	; () banked
  5406  002768  03B8               	mulwf	___wmul@multiplicand& (0+255),b
  5407  00276A  CFF3 F0BA          	movff	prodl,___wmul@product
  5408  00276E  CFF4 F0BB          	movff	prodh,___wmul@product+1
  5409  002772  0100               	movlb	0	; () banked
  5410  002774  51B6               	movf	___wmul@multiplier& (0+255),w,b
  5411  002776  0100               	movlb	0	; () banked
  5412  002778  03B9               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5413  00277A  50F3               	movf	prodl,w,c
  5414  00277C  0100               	movlb	0	; () banked
  5415  00277E  27BB               	addwf	(___wmul@product+1)& (0+255),f,b
  5416  002780  0100               	movlb	0	; () banked
  5417  002782  51B7               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5418  002784  0100               	movlb	0	; () banked
  5419  002786  03B8               	mulwf	___wmul@multiplicand& (0+255),b
  5420  002788  50F3               	movf	prodl,w,c
  5421  00278A  0100               	movlb	0	; () banked
  5422  00278C  27BB               	addwf	(___wmul@product+1)& (0+255),f,b
  5423                           
  5424                           ; BSR set to: 0
  5425  00278E  C0BA  F0B6         	movff	___wmul@product,?___wmul
  5426  002792  C0BB  F0B7         	movff	___wmul@product+1,?___wmul+1
  5427  002796  0012               	return	
  5428  002798                     __end_of___wmul:
  5429                           	opt stack 0
  5430                           tblptru	equ	0xFF8
  5431                           tblptrh	equ	0xFF7
  5432                           tblptrl	equ	0xFF6
  5433                           tablat	equ	0xFF5
  5434                           prodh	equ	0xFF4
  5435                           prodl	equ	0xFF3
  5436                           intcon	equ	0xFF2
  5437                           postinc0	equ	0xFEE
  5438                           wreg	equ	0xFE8
  5439                           indf1	equ	0xFE7
  5440                           postdec1	equ	0xFE5
  5441                           fsr1h	equ	0xFE2
  5442                           fsr1l	equ	0xFE1
  5443                           indf2	equ	0xFDF
  5444                           fsr2h	equ	0xFDA
  5445                           fsr2l	equ	0xFD9
  5446                           status	equ	0xFD8
  5447                           
  5448 ;; *************** function ___awdiv *****************
  5449 ;; Defined at:
  5450 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;  dividend        2   13[BANK0 ] int 
  5453 ;;  divisor         2   15[BANK0 ] int 
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;  quotient        2   19[BANK0 ] int 
  5456 ;;  sign            1   18[BANK0 ] unsigned char 
  5457 ;;  counter         1   17[BANK0 ] unsigned char 
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  2   13[BANK0 ] int 
  5460 ;; Registers used:
  5461 ;;		wreg, status,2, status,0
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5467 ;;      Params:         0       4       0       0
  5468 ;;      Locals:         0       4       0       0
  5469 ;;      Temps:          0       0       0       0
  5470 ;;      Totals:         0       8       0       0
  5471 ;;Total ram usage:        8 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:    2
  5474 ;; This function calls:
  5475 ;;		Nothing
  5476 ;; This function is called by:
  5477 ;;		_battery_measure
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           	psect	text11
  5482  0023CA                     __ptext11:
  5483                           	opt stack 0
  5484  0023CA                     ___awdiv:
  5485                           	opt stack 27
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;incstack = 0
  5489  0023CA  0E00               	movlw	0
  5490  0023CC  0100               	movlb	0	; () banked
  5491  0023CE  6FC1               	movwf	___awdiv@sign& (0+255),b
  5492                           
  5493                           ; BSR set to: 0
  5494  0023D0  0100               	movlb	0	; () banked
  5495  0023D2  AFBF               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5496  0023D4  D008               	goto	l4766
  5497                           
  5498                           ; BSR set to: 0
  5499  0023D6  0100               	movlb	0	; () banked
  5500  0023D8  6DBE               	negf	___awdiv@divisor& (0+255),b
  5501  0023DA  1FBF               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5502  0023DC  B0D8               	btfsc	status,0,c
  5503  0023DE  2BBF               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5504                           
  5505                           ; BSR set to: 0
  5506  0023E0  0E01               	movlw	1
  5507  0023E2  0100               	movlb	0	; () banked
  5508  0023E4  6FC1               	movwf	___awdiv@sign& (0+255),b
  5509  0023E6                     l4766:
  5510                           
  5511                           ; BSR set to: 0
  5512  0023E6  0100               	movlb	0	; () banked
  5513  0023E8  AFBD               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5514  0023EA  D008               	goto	l4772
  5515                           
  5516                           ; BSR set to: 0
  5517  0023EC  0100               	movlb	0	; () banked
  5518  0023EE  6DBC               	negf	___awdiv@dividend& (0+255),b
  5519  0023F0  1FBD               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5520  0023F2  B0D8               	btfsc	status,0,c
  5521  0023F4  2BBD               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5522                           
  5523                           ; BSR set to: 0
  5524  0023F6  0E01               	movlw	1
  5525  0023F8  0100               	movlb	0	; () banked
  5526  0023FA  1BC1               	xorwf	___awdiv@sign& (0+255),f,b
  5527  0023FC                     l4772:
  5528                           
  5529                           ; BSR set to: 0
  5530  0023FC  0E00               	movlw	0
  5531  0023FE  0100               	movlb	0	; () banked
  5532  002400  6FC3               	movwf	(___awdiv@quotient+1)& (0+255),b
  5533  002402  0E00               	movlw	0
  5534  002404  6FC2               	movwf	___awdiv@quotient& (0+255),b
  5535                           
  5536                           ; BSR set to: 0
  5537  002406  0100               	movlb	0	; () banked
  5538  002408  51BE               	movf	___awdiv@divisor& (0+255),w,b
  5539  00240A  0100               	movlb	0	; () banked
  5540  00240C  11BF               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5541  00240E  B4D8               	btfsc	status,2,c
  5542  002410  D02C               	goto	l4794
  5543                           
  5544                           ; BSR set to: 0
  5545  002412  0E01               	movlw	1
  5546  002414  0100               	movlb	0	; () banked
  5547  002416  6FC0               	movwf	___awdiv@counter& (0+255),b
  5548  002418  D006               	goto	l4780
  5549  00241A                     l4778:
  5550                           
  5551                           ; BSR set to: 0
  5552  00241A  0100               	movlb	0	; () banked
  5553  00241C  90D8               	bcf	status,0,c
  5554  00241E  37BE               	rlcf	___awdiv@divisor& (0+255),f,b
  5555  002420  37BF               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5556  002422  0100               	movlb	0	; () banked
  5557  002424  2BC0               	incf	___awdiv@counter& (0+255),f,b
  5558  002426                     l4780:
  5559                           
  5560                           ; BSR set to: 0
  5561  002426  0100               	movlb	0	; () banked
  5562  002428  AFBF               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5563  00242A  D7F7               	goto	l4778
  5564  00242C                     l4782:
  5565                           
  5566                           ; BSR set to: 0
  5567  00242C  0100               	movlb	0	; () banked
  5568  00242E  90D8               	bcf	status,0,c
  5569  002430  37C2               	rlcf	___awdiv@quotient& (0+255),f,b
  5570  002432  37C3               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5571                           
  5572                           ; BSR set to: 0
  5573  002434  0100               	movlb	0	; () banked
  5574  002436  51BE               	movf	___awdiv@divisor& (0+255),w,b
  5575  002438  0100               	movlb	0	; () banked
  5576  00243A  5DBC               	subwf	___awdiv@dividend& (0+255),w,b
  5577  00243C  0100               	movlb	0	; () banked
  5578  00243E  51BF               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5579  002440  0100               	movlb	0	; () banked
  5580  002442  59BD               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5581  002444  A0D8               	btfss	status,0,c
  5582  002446  D00A               	goto	l4790
  5583                           
  5584                           ; BSR set to: 0
  5585  002448  0100               	movlb	0	; () banked
  5586  00244A  51BE               	movf	___awdiv@divisor& (0+255),w,b
  5587  00244C  0100               	movlb	0	; () banked
  5588  00244E  5FBC               	subwf	___awdiv@dividend& (0+255),f,b
  5589  002450  0100               	movlb	0	; () banked
  5590  002452  51BF               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5591  002454  0100               	movlb	0	; () banked
  5592  002456  5BBD               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5593                           
  5594                           ; BSR set to: 0
  5595  002458  0100               	movlb	0	; () banked
  5596  00245A  81C2               	bsf	___awdiv@quotient& (0+255),0,b
  5597  00245C                     l4790:
  5598                           
  5599                           ; BSR set to: 0
  5600  00245C  0100               	movlb	0	; () banked
  5601  00245E  90D8               	bcf	status,0,c
  5602  002460  33BF               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5603  002462  33BE               	rrcf	___awdiv@divisor& (0+255),f,b
  5604                           
  5605                           ; BSR set to: 0
  5606  002464  0100               	movlb	0	; () banked
  5607  002466  2FC0               	decfsz	___awdiv@counter& (0+255),f,b
  5608  002468  D7E1               	goto	l4782
  5609  00246A                     l4794:
  5610                           
  5611                           ; BSR set to: 0
  5612  00246A  0100               	movlb	0	; () banked
  5613  00246C  51C1               	movf	___awdiv@sign& (0+255),w,b
  5614  00246E  0100               	movlb	0	; () banked
  5615  002470  B4D8               	btfsc	status,2,c
  5616  002472  D005               	goto	l4798
  5617                           
  5618                           ; BSR set to: 0
  5619  002474  0100               	movlb	0	; () banked
  5620  002476  6DC2               	negf	___awdiv@quotient& (0+255),b
  5621  002478  1FC3               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5622  00247A  B0D8               	btfsc	status,0,c
  5623  00247C  2BC3               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5624  00247E                     l4798:
  5625                           
  5626                           ; BSR set to: 0
  5627  00247E  C0C2  F0BC         	movff	___awdiv@quotient,?___awdiv
  5628  002482  C0C3  F0BD         	movff	___awdiv@quotient+1,?___awdiv+1
  5629  002486  0012               	return	
  5630  002488                     __end_of___awdiv:
  5631                           	opt stack 0
  5632                           tblptru	equ	0xFF8
  5633                           tblptrh	equ	0xFF7
  5634                           tblptrl	equ	0xFF6
  5635                           tablat	equ	0xFF5
  5636                           prodh	equ	0xFF4
  5637                           prodl	equ	0xFF3
  5638                           intcon	equ	0xFF2
  5639                           postinc0	equ	0xFEE
  5640                           wreg	equ	0xFE8
  5641                           indf1	equ	0xFE7
  5642                           postdec1	equ	0xFE5
  5643                           fsr1h	equ	0xFE2
  5644                           fsr1l	equ	0xFE1
  5645                           indf2	equ	0xFDF
  5646                           fsr2h	equ	0xFDA
  5647                           fsr2l	equ	0xFD9
  5648                           status	equ	0xFD8
  5649                           
  5650 ;; *************** function _CANsendMessage *****************
  5651 ;; Defined at:
  5652 ;;		line 294 in file "CANlib.h"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;  identifier      4    0[BANK0 ] unsigned long 
  5655 ;;  data            2    4[BANK0 ] PTR unsigned char 
  5656 ;;		 -> data_array1(8), data_array(8), data_array_debug(8), 
  5657 ;;  dataLength      1    6[BANK0 ] unsigned char 
  5658 ;;  flags           1    7[BANK0 ] enum E16866
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;  tamp            4   12[BANK0 ] unsigned long 
  5661 ;; Return value:  Size  Location     Type
  5662 ;;		None               void
  5663 ;; Registers used:
  5664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5670 ;;      Params:         0       8       0       0
  5671 ;;      Locals:         0       4       0       0
  5672 ;;      Temps:          0       4       0       0
  5673 ;;      Totals:         0      16       0       0
  5674 ;;Total ram usage:       16 bytes
  5675 ;; Hardware stack levels used:    1
  5676 ;; Hardware stack levels required when called:    2
  5677 ;; This function calls:
  5678 ;;		Nothing
  5679 ;; This function is called by:
  5680 ;;		_main
  5681 ;;		_send_data
  5682 ;;		_battery_measure
  5683 ;; This function uses a non-reentrant model
  5684 ;;
  5685                           
  5686                           	psect	text12
  5687  000CD6                     __ptext12:
  5688                           	opt stack 0
  5689  000CD6                     _CANsendMessage:
  5690                           	opt stack 27
  5691                           
  5692                           ;CANlib.h: 296: unsigned long tamp;
  5693                           ;CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  5694                           
  5695                           ; BSR set to: 0
  5696                           ;incstack = 0
  5697  000CD6  010F               	movlb	15	; () banked
  5698  000CD8  B740               	btfsc	64,3,b	;volatile
  5699  000CDA  D13F               	goto	l363
  5700                           
  5701                           ; BSR set to: 15
  5702                           ;CANlib.h: 299: { TXB0DLC = dataLength;
  5703  000CDC  C0B5  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  5704                           
  5705                           ;CANlib.h: 300: if (0b01000000 & flags)
  5706  000CE0  0100               	movlb	0	; () banked
  5707  000CE2  ADB6               	btfss	CANsendMessage@flags& (0+255),6,b
  5708  000CE4  D003               	goto	l364
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  5712  000CE6  010F               	movlb	15	; () banked
  5713  000CE8  8D45               	bsf	69,6,b	;volatile
  5714  000CEA  D002               	goto	l365
  5715  000CEC                     l364:
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;CANlib.h: 302: else
  5719                           ;CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  5720  000CEC  010F               	movlb	15	; () banked
  5721  000CEE  9D45               	bcf	69,6,b	;volatile
  5722  000CF0                     l365:
  5723                           
  5724                           ; BSR set to: 15
  5725                           ;CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  5726  000CF0  0100               	movlb	0	; () banked
  5727  000CF2  A7B6               	btfss	CANsendMessage@flags& (0+255),3,b
  5728  000CF4  D079               	goto	l366
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;CANlib.h: 306: {
  5732                           ;CANlib.h: 308: tamp = identifier & 0x000000FF;
  5733  000CF6  0100               	movlb	0	; () banked
  5734  000CF8  51AF               	movf	CANsendMessage@identifier& (0+255),w,b
  5735  000CFA  0100               	movlb	0	; () banked
  5736  000CFC  6FBB               	movwf	CANsendMessage@tamp& (0+255),b
  5737  000CFE  6BBC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5738  000D00  6BBD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5739  000D02  6BBE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  5743  000D04  C0BB  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;CANlib.h: 311: tamp = identifier & 0x0000FF00;
  5747  000D08  0E00               	movlw	0
  5748  000D0A  0100               	movlb	0	; () banked
  5749  000D0C  15AF               	andwf	CANsendMessage@identifier& (0+255),w,b
  5750  000D0E  0100               	movlb	0	; () banked
  5751  000D10  6FBB               	movwf	CANsendMessage@tamp& (0+255),b
  5752  000D12  0EFF               	movlw	255
  5753  000D14  0100               	movlb	0	; () banked
  5754  000D16  15B0               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5755  000D18  0100               	movlb	0	; () banked
  5756  000D1A  6FBC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5757  000D1C  0E00               	movlw	0
  5758  000D1E  0100               	movlb	0	; () banked
  5759  000D20  15B1               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5760  000D22  0100               	movlb	0	; () banked
  5761  000D24  6FBD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5762  000D26  0E00               	movlw	0
  5763  000D28  0100               	movlb	0	; () banked
  5764  000D2A  15B2               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5765  000D2C  0100               	movlb	0	; () banked
  5766  000D2E  6FBE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;CANlib.h: 312: tamp = tamp >> 8;
  5770  000D30  C0BB  F0B7         	movff	CANsendMessage@tamp,??_CANsendMessage
  5771  000D34  C0BC  F0B8         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5772  000D38  C0BD  F0B9         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5773  000D3C  C0BE  F0BA         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5774  000D40  C0B8  F0B7         	movff	??_CANsendMessage+1,??_CANsendMessage
  5775  000D44  C0B9  F0B8         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5776  000D48  C0BA  F0B9         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5777  000D4C  0100               	movlb	0	; () banked
  5778  000D4E  6BBA               	clrf	(??_CANsendMessage+3)& (0+255),b
  5779  000D50  C0B7  F0BB         	movff	??_CANsendMessage,CANsendMessage@tamp
  5780  000D54  C0B8  F0BC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5781  000D58  C0B9  F0BD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5782  000D5C  C0BA  F0BE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  5786  000D60  C0BB  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;CANlib.h: 315: TXB0SIDL = 0x00;
  5790  000D64  0E00               	movlw	0
  5791  000D66  010F               	movlb	15	; () banked
  5792  000D68  6F42               	movwf	66,b	;volatile
  5793                           
  5794                           ; BSR set to: 15
  5795                           ;CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  5796  000D6A  010F               	movlb	15	; () banked
  5797  000D6C  8742               	bsf	66,3,b	;volatile
  5798                           
  5799                           ; BSR set to: 15
  5800                           ;CANlib.h: 318: if (identifier & 0x00010000)
  5801  000D6E  0100               	movlb	0	; () banked
  5802  000D70  A1B1               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5803  000D72  D002               	goto	l367
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  5807  000D74  010F               	movlb	15	; () banked
  5808  000D76  8142               	bsf	66,0,b	;volatile
  5809  000D78                     l367:
  5810                           
  5811                           ;CANlib.h: 320: if (identifier & 0x00020000)
  5812  000D78  0100               	movlb	0	; () banked
  5813  000D7A  A3B1               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5814  000D7C  D002               	goto	l368
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  5818  000D7E  010F               	movlb	15	; () banked
  5819  000D80  8342               	bsf	66,1,b	;volatile
  5820  000D82                     l368:
  5821                           
  5822                           ;CANlib.h: 322: if (identifier & 0x00040000)
  5823  000D82  0100               	movlb	0	; () banked
  5824  000D84  A5B1               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5825  000D86  D002               	goto	l369
  5826                           
  5827                           ; BSR set to: 0
  5828                           ;CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  5829  000D88  010F               	movlb	15	; () banked
  5830  000D8A  8B42               	bsf	66,5,b	;volatile
  5831  000D8C                     l369:
  5832                           
  5833                           ;CANlib.h: 324: if (identifier & 0x00080000)
  5834  000D8C  0100               	movlb	0	; () banked
  5835  000D8E  A7B1               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5836  000D90  D002               	goto	l370
  5837                           
  5838                           ; BSR set to: 0
  5839                           ;CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  5840  000D92  010F               	movlb	15	; () banked
  5841  000D94  8D42               	bsf	66,6,b	;volatile
  5842  000D96                     l370:
  5843                           
  5844                           ;CANlib.h: 326: if (identifier & 0x00100000)
  5845  000D96  0100               	movlb	0	; () banked
  5846  000D98  A9B1               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5847  000D9A  D002               	goto	l4530
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  5851  000D9C  010F               	movlb	15	; () banked
  5852  000D9E  8F42               	bsf	66,7,b	;volatile
  5853  000DA0                     l4530:
  5854                           
  5855                           ;CANlib.h: 329: tamp = (identifier >> 21);
  5856  000DA0  C0AF  F0B7         	movff	CANsendMessage@identifier,??_CANsendMessage
  5857  000DA4  C0B0  F0B8         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5858  000DA8  C0B1  F0B9         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5859  000DAC  C0B2  F0BA         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5860  000DB0  0E16               	movlw	22
  5861  000DB2  D006               	goto	u5820
  5862  000DB4                     u5825:
  5863  000DB4  0100               	movlb	0	; () banked
  5864  000DB6  90D8               	bcf	status,0,c
  5865  000DB8  33BA               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5866  000DBA  33B9               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5867  000DBC  33B8               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5868  000DBE  33B7               	rrcf	??_CANsendMessage& (0+255),f,b
  5869  000DC0                     u5820:
  5870  000DC0  2EE8               	decfsz	wreg,f,c
  5871  000DC2  D7F8               	goto	u5825
  5872  000DC4  C0B7  F0BB         	movff	??_CANsendMessage,CANsendMessage@tamp
  5873  000DC8  C0B8  F0BC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5874  000DCC  C0B9  F0BD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5875  000DD0  C0BA  F0BE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;CANlib.h: 330: tamp = tamp & 0x000000FF;
  5879  000DD4  0100               	movlb	0	; () banked
  5880  000DD6  51BB               	movf	CANsendMessage@tamp& (0+255),w,b
  5881  000DD8  0100               	movlb	0	; () banked
  5882  000DDA  6FBB               	movwf	CANsendMessage@tamp& (0+255),b
  5883  000DDC  6BBC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5884  000DDE  6BBD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5885  000DE0  6BBE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  5889  000DE2  C0BB  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5890                           
  5891                           ;CANlib.h: 332: }
  5892  000DE6  D059               	goto	l4550
  5893  000DE8                     l366:
  5894                           
  5895                           ; BSR set to: 0
  5896                           ;CANlib.h: 334: else
  5897                           ;CANlib.h: 336: {
  5898                           ;CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  5899  000DE8  010F               	movlb	15	; () banked
  5900  000DEA  9742               	bcf	66,3,b	;volatile
  5901                           
  5902                           ; BSR set to: 15
  5903                           ;CANlib.h: 339: tamp = (identifier >> 3);
  5904  000DEC  C0AF  F0B7         	movff	CANsendMessage@identifier,??_CANsendMessage
  5905  000DF0  C0B0  F0B8         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5906  000DF4  C0B1  F0B9         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5907  000DF8  C0B2  F0BA         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5908  000DFC  0E04               	movlw	4
  5909  000DFE  D006               	goto	u5830
  5910  000E00                     u5835:
  5911  000E00  0100               	movlb	0	; () banked
  5912  000E02  90D8               	bcf	status,0,c
  5913  000E04  33BA               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5914  000E06  33B9               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5915  000E08  33B8               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5916  000E0A  33B7               	rrcf	??_CANsendMessage& (0+255),f,b
  5917  000E0C                     u5830:
  5918  000E0C  2EE8               	decfsz	wreg,f,c
  5919  000E0E  D7F8               	goto	u5835
  5920  000E10  C0B7  F0BB         	movff	??_CANsendMessage,CANsendMessage@tamp
  5921  000E14  C0B8  F0BC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5922  000E18  C0B9  F0BD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5923  000E1C  C0BA  F0BE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;CANlib.h: 340: tamp = tamp & 0x000000FF;
  5927  000E20  0100               	movlb	0	; () banked
  5928  000E22  51BB               	movf	CANsendMessage@tamp& (0+255),w,b
  5929  000E24  0100               	movlb	0	; () banked
  5930  000E26  6FBB               	movwf	CANsendMessage@tamp& (0+255),b
  5931  000E28  6BBC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5932  000E2A  6BBD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5933  000E2C  6BBE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  5937  000E2E  C0BB  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5938                           
  5939                           ; BSR set to: 0
  5940                           ;CANlib.h: 343: tamp = identifier & 0x00000007;
  5941  000E32  0E07               	movlw	7
  5942  000E34  0100               	movlb	0	; () banked
  5943  000E36  15AF               	andwf	CANsendMessage@identifier& (0+255),w,b
  5944  000E38  0100               	movlb	0	; () banked
  5945  000E3A  6FBB               	movwf	CANsendMessage@tamp& (0+255),b
  5946  000E3C  0E00               	movlw	0
  5947  000E3E  0100               	movlb	0	; () banked
  5948  000E40  15B0               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5949  000E42  0100               	movlb	0	; () banked
  5950  000E44  6FBC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5951  000E46  0E00               	movlw	0
  5952  000E48  0100               	movlb	0	; () banked
  5953  000E4A  15B1               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5954  000E4C  0100               	movlb	0	; () banked
  5955  000E4E  6FBD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5956  000E50  0E00               	movlw	0
  5957  000E52  0100               	movlb	0	; () banked
  5958  000E54  15B2               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5959  000E56  0100               	movlb	0	; () banked
  5960  000E58  6FBE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5961                           
  5962                           ; BSR set to: 0
  5963                           ;CANlib.h: 344: tamp = tamp << 5;
  5964  000E5A  C0BB  F0B7         	movff	CANsendMessage@tamp,??_CANsendMessage
  5965  000E5E  C0BC  F0B8         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5966  000E62  C0BD  F0B9         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5967  000E66  C0BE  F0BA         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5968  000E6A  0E05               	movlw	5
  5969  000E6C                     u5845:
  5970  000E6C  90D8               	bcf	status,0,c
  5971  000E6E  0100               	movlb	0	; () banked
  5972  000E70  37B7               	rlcf	??_CANsendMessage& (0+255),f,b
  5973  000E72  37B8               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  5974  000E74  37B9               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  5975  000E76  37BA               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  5976  000E78  2EE8               	decfsz	wreg,f,c
  5977  000E7A  D7F8               	goto	u5845
  5978  000E7C  C0B7  F0BB         	movff	??_CANsendMessage,CANsendMessage@tamp
  5979  000E80  C0B8  F0BC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5980  000E84  C0B9  F0BD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5981  000E88  C0BA  F0BE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  5985  000E8C  010F               	movlb	15	; () banked
  5986  000E8E  5142               	movf	66,w,b	;volatile
  5987  000E90  0B1F               	andlw	31
  5988  000E92  010F               	movlb	15	; () banked
  5989  000E94  6F42               	movwf	66,b	;volatile
  5990                           
  5991                           ; BSR set to: 15
  5992                           ;CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  5993  000E96  C0BB  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  5994  000E9A                     l4550:
  5995                           
  5996                           ;CANlib.h: 347: }
  5997                           ;CANlib.h: 349: if (0b00000001 & flags)
  5998  000E9A  0100               	movlb	0	; () banked
  5999  000E9C  A1B6               	btfss	CANsendMessage@flags& (0+255),0,b
  6000  000E9E  D003               	goto	l373
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  6004  000EA0  010F               	movlb	15	; () banked
  6005  000EA2  8140               	bsf	64,0,b	;volatile
  6006  000EA4  D002               	goto	l374
  6007  000EA6                     l373:
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;CANlib.h: 351: else
  6011                           ;CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  6012  000EA6  010F               	movlb	15	; () banked
  6013  000EA8  9140               	bcf	64,0,b	;volatile
  6014  000EAA                     l374:
  6015                           
  6016                           ; BSR set to: 15
  6017                           ;CANlib.h: 353: if (0b00000010 & flags)
  6018  000EAA  0100               	movlb	0	; () banked
  6019  000EAC  A3B6               	btfss	CANsendMessage@flags& (0+255),1,b
  6020  000EAE  D003               	goto	l375
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  6024  000EB0  010F               	movlb	15	; () banked
  6025  000EB2  8340               	bsf	64,1,b	;volatile
  6026  000EB4  D002               	goto	l4556
  6027  000EB6                     l375:
  6028                           
  6029                           ; BSR set to: 0
  6030                           ;CANlib.h: 355: else
  6031                           ;CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  6032  000EB6  010F               	movlb	15	; () banked
  6033  000EB8  9340               	bcf	64,1,b	;volatile
  6034  000EBA                     l4556:
  6035                           
  6036                           ; BSR set to: 15
  6037                           ;CANlib.h: 358: TXB0D0 = data[0];
  6038  000EBA  C0B3  FFD9         	movff	CANsendMessage@data,fsr2l
  6039  000EBE  C0B4  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6040  000EC2  50DF               	movf	indf2,w,c
  6041  000EC4  010F               	movlb	15	; () banked
  6042  000EC6  6F46               	movwf	70,b	;volatile
  6043                           
  6044                           ; BSR set to: 15
  6045                           ;CANlib.h: 359: TXB0D1 = data[1];
  6046  000EC8  0100               	movlb	0	; () banked
  6047  000ECA  EE20 F001          	lfsr	2,1
  6048  000ECE  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6049  000ED0  26D9               	addwf	fsr2l,f,c
  6050  000ED2  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6051  000ED4  22DA               	addwfc	fsr2h,f,c
  6052  000ED6  50DF               	movf	indf2,w,c
  6053  000ED8  010F               	movlb	15	; () banked
  6054  000EDA  6F47               	movwf	71,b	;volatile
  6055                           
  6056                           ; BSR set to: 15
  6057                           ;CANlib.h: 360: TXB0D2 = data[2];
  6058  000EDC  0100               	movlb	0	; () banked
  6059  000EDE  EE20 F002          	lfsr	2,2
  6060  000EE2  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6061  000EE4  26D9               	addwf	fsr2l,f,c
  6062  000EE6  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6063  000EE8  22DA               	addwfc	fsr2h,f,c
  6064  000EEA  50DF               	movf	indf2,w,c
  6065  000EEC  010F               	movlb	15	; () banked
  6066  000EEE  6F48               	movwf	72,b	;volatile
  6067                           
  6068                           ; BSR set to: 15
  6069                           ;CANlib.h: 361: TXB0D3 = data[3];
  6070  000EF0  0100               	movlb	0	; () banked
  6071  000EF2  EE20 F003          	lfsr	2,3
  6072  000EF6  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6073  000EF8  26D9               	addwf	fsr2l,f,c
  6074  000EFA  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6075  000EFC  22DA               	addwfc	fsr2h,f,c
  6076  000EFE  50DF               	movf	indf2,w,c
  6077  000F00  010F               	movlb	15	; () banked
  6078  000F02  6F49               	movwf	73,b	;volatile
  6079                           
  6080                           ; BSR set to: 15
  6081                           ;CANlib.h: 362: TXB0D4 = data[4];
  6082  000F04  0100               	movlb	0	; () banked
  6083  000F06  EE20 F004          	lfsr	2,4
  6084  000F0A  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6085  000F0C  26D9               	addwf	fsr2l,f,c
  6086  000F0E  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6087  000F10  22DA               	addwfc	fsr2h,f,c
  6088  000F12  50DF               	movf	indf2,w,c
  6089  000F14  010F               	movlb	15	; () banked
  6090  000F16  6F4A               	movwf	74,b	;volatile
  6091                           
  6092                           ; BSR set to: 15
  6093                           ;CANlib.h: 363: TXB0D5 = data[5];
  6094  000F18  0100               	movlb	0	; () banked
  6095  000F1A  EE20 F005          	lfsr	2,5
  6096  000F1E  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6097  000F20  26D9               	addwf	fsr2l,f,c
  6098  000F22  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6099  000F24  22DA               	addwfc	fsr2h,f,c
  6100  000F26  50DF               	movf	indf2,w,c
  6101  000F28  010F               	movlb	15	; () banked
  6102  000F2A  6F4B               	movwf	75,b	;volatile
  6103                           
  6104                           ; BSR set to: 15
  6105                           ;CANlib.h: 364: TXB0D6 = data[6];
  6106  000F2C  0100               	movlb	0	; () banked
  6107  000F2E  EE20 F006          	lfsr	2,6
  6108  000F32  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6109  000F34  26D9               	addwf	fsr2l,f,c
  6110  000F36  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6111  000F38  22DA               	addwfc	fsr2h,f,c
  6112  000F3A  50DF               	movf	indf2,w,c
  6113  000F3C  010F               	movlb	15	; () banked
  6114  000F3E  6F4C               	movwf	76,b	;volatile
  6115                           
  6116                           ; BSR set to: 15
  6117                           ;CANlib.h: 365: TXB0D7 = data[7];
  6118  000F40  0100               	movlb	0	; () banked
  6119  000F42  EE20 F007          	lfsr	2,7
  6120  000F46  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6121  000F48  26D9               	addwf	fsr2l,f,c
  6122  000F4A  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6123  000F4C  22DA               	addwfc	fsr2h,f,c
  6124  000F4E  50DF               	movf	indf2,w,c
  6125  000F50  010F               	movlb	15	; () banked
  6126  000F52  6F4D               	movwf	77,b	;volatile
  6127                           
  6128                           ; BSR set to: 15
  6129                           ;CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  6130  000F54  010F               	movlb	15	; () banked
  6131  000F56  8740               	bsf	64,3,b	;volatile
  6132                           
  6133                           ; BSR set to: 15
  6134                           ;CANlib.h: 368: return;
  6135  000F58  0012               	return	
  6136  000F5A                     l363:
  6137                           
  6138                           ; BSR set to: 15
  6139                           ;CANlib.h: 369: }
  6140                           ;CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  6141  000F5A  010F               	movlb	15	; () banked
  6142  000F5C  B730               	btfsc	48,3,b	;volatile
  6143  000F5E  D13F               	goto	l378
  6144                           
  6145                           ; BSR set to: 15
  6146                           ;CANlib.h: 374: { TXB1DLC = dataLength;
  6147  000F60  C0B5  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  6148                           
  6149                           ;CANlib.h: 376: if (0b01000000 & flags)
  6150  000F64  0100               	movlb	0	; () banked
  6151  000F66  ADB6               	btfss	CANsendMessage@flags& (0+255),6,b
  6152  000F68  D003               	goto	l379
  6153                           
  6154                           ; BSR set to: 0
  6155                           ;CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  6156  000F6A  010F               	movlb	15	; () banked
  6157  000F6C  8D35               	bsf	53,6,b	;volatile
  6158  000F6E  D002               	goto	l380
  6159  000F70                     l379:
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;CANlib.h: 378: else
  6163                           ;CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  6164  000F70  010F               	movlb	15	; () banked
  6165  000F72  9D35               	bcf	53,6,b	;volatile
  6166  000F74                     l380:
  6167                           
  6168                           ; BSR set to: 15
  6169                           ;CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  6170  000F74  0100               	movlb	0	; () banked
  6171  000F76  A7B6               	btfss	CANsendMessage@flags& (0+255),3,b
  6172  000F78  D079               	goto	l381
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;CANlib.h: 382: {
  6176                           ;CANlib.h: 383: tamp = identifier & 0x000000FF;
  6177  000F7A  0100               	movlb	0	; () banked
  6178  000F7C  51AF               	movf	CANsendMessage@identifier& (0+255),w,b
  6179  000F7E  0100               	movlb	0	; () banked
  6180  000F80  6FBB               	movwf	CANsendMessage@tamp& (0+255),b
  6181  000F82  6BBC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6182  000F84  6BBD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6183  000F86  6BBE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  6187  000F88  C0BB  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  6188                           
  6189                           ; BSR set to: 0
  6190                           ;CANlib.h: 386: tamp = identifier & 0x0000FF00;
  6191  000F8C  0E00               	movlw	0
  6192  000F8E  0100               	movlb	0	; () banked
  6193  000F90  15AF               	andwf	CANsendMessage@identifier& (0+255),w,b
  6194  000F92  0100               	movlb	0	; () banked
  6195  000F94  6FBB               	movwf	CANsendMessage@tamp& (0+255),b
  6196  000F96  0EFF               	movlw	255
  6197  000F98  0100               	movlb	0	; () banked
  6198  000F9A  15B0               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6199  000F9C  0100               	movlb	0	; () banked
  6200  000F9E  6FBC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6201  000FA0  0E00               	movlw	0
  6202  000FA2  0100               	movlb	0	; () banked
  6203  000FA4  15B1               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6204  000FA6  0100               	movlb	0	; () banked
  6205  000FA8  6FBD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6206  000FAA  0E00               	movlw	0
  6207  000FAC  0100               	movlb	0	; () banked
  6208  000FAE  15B2               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6209  000FB0  0100               	movlb	0	; () banked
  6210  000FB2  6FBE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6211                           
  6212                           ; BSR set to: 0
  6213                           ;CANlib.h: 387: tamp = tamp >> 8;
  6214  000FB4  C0BB  F0B7         	movff	CANsendMessage@tamp,??_CANsendMessage
  6215  000FB8  C0BC  F0B8         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6216  000FBC  C0BD  F0B9         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6217  000FC0  C0BE  F0BA         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6218  000FC4  C0B8  F0B7         	movff	??_CANsendMessage+1,??_CANsendMessage
  6219  000FC8  C0B9  F0B8         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6220  000FCC  C0BA  F0B9         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6221  000FD0  0100               	movlb	0	; () banked
  6222  000FD2  6BBA               	clrf	(??_CANsendMessage+3)& (0+255),b
  6223  000FD4  C0B7  F0BB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6224  000FD8  C0B8  F0BC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6225  000FDC  C0B9  F0BD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6226  000FE0  C0BA  F0BE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  6230  000FE4  C0BB  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  6231                           
  6232                           ; BSR set to: 0
  6233                           ;CANlib.h: 390: TXB1SIDL = 0x00;
  6234  000FE8  0E00               	movlw	0
  6235  000FEA  010F               	movlb	15	; () banked
  6236  000FEC  6F32               	movwf	50,b	;volatile
  6237                           
  6238                           ; BSR set to: 15
  6239                           ;CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  6240  000FEE  010F               	movlb	15	; () banked
  6241  000FF0  8732               	bsf	50,3,b	;volatile
  6242                           
  6243                           ; BSR set to: 15
  6244                           ;CANlib.h: 393: if (identifier & 0x00010000)
  6245  000FF2  0100               	movlb	0	; () banked
  6246  000FF4  A1B1               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6247  000FF6  D002               	goto	l382
  6248                           
  6249                           ; BSR set to: 0
  6250                           ;CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  6251  000FF8  010F               	movlb	15	; () banked
  6252  000FFA  8132               	bsf	50,0,b	;volatile
  6253  000FFC                     l382:
  6254                           
  6255                           ;CANlib.h: 395: if (identifier & 0x00020000)
  6256  000FFC  0100               	movlb	0	; () banked
  6257  000FFE  A3B1               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6258  001000  D002               	goto	l383
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  6262  001002  010F               	movlb	15	; () banked
  6263  001004  8332               	bsf	50,1,b	;volatile
  6264  001006                     l383:
  6265                           
  6266                           ;CANlib.h: 397: if (identifier & 0x00040000)
  6267  001006  0100               	movlb	0	; () banked
  6268  001008  A5B1               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6269  00100A  D002               	goto	l384
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  6273  00100C  010F               	movlb	15	; () banked
  6274  00100E  8B32               	bsf	50,5,b	;volatile
  6275  001010                     l384:
  6276                           
  6277                           ;CANlib.h: 399: if (identifier & 0x00080000)
  6278  001010  0100               	movlb	0	; () banked
  6279  001012  A7B1               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6280  001014  D002               	goto	l385
  6281                           
  6282                           ; BSR set to: 0
  6283                           ;CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  6284  001016  010F               	movlb	15	; () banked
  6285  001018  8D32               	bsf	50,6,b	;volatile
  6286  00101A                     l385:
  6287                           
  6288                           ;CANlib.h: 401: if (identifier & 0x00100000)
  6289  00101A  0100               	movlb	0	; () banked
  6290  00101C  A9B1               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6291  00101E  D002               	goto	l4606
  6292                           
  6293                           ; BSR set to: 0
  6294                           ;CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  6295  001020  010F               	movlb	15	; () banked
  6296  001022  8F32               	bsf	50,7,b	;volatile
  6297  001024                     l4606:
  6298                           
  6299                           ;CANlib.h: 404: tamp = (identifier >> 21);
  6300  001024  C0AF  F0B7         	movff	CANsendMessage@identifier,??_CANsendMessage
  6301  001028  C0B0  F0B8         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6302  00102C  C0B1  F0B9         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6303  001030  C0B2  F0BA         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6304  001034  0E16               	movlw	22
  6305  001036  D006               	goto	u5950
  6306  001038                     u5955:
  6307  001038  0100               	movlb	0	; () banked
  6308  00103A  90D8               	bcf	status,0,c
  6309  00103C  33BA               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6310  00103E  33B9               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6311  001040  33B8               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6312  001042  33B7               	rrcf	??_CANsendMessage& (0+255),f,b
  6313  001044                     u5950:
  6314  001044  2EE8               	decfsz	wreg,f,c
  6315  001046  D7F8               	goto	u5955
  6316  001048  C0B7  F0BB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6317  00104C  C0B8  F0BC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6318  001050  C0B9  F0BD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6319  001054  C0BA  F0BE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;CANlib.h: 405: tamp = tamp & 0x000000FF;
  6323  001058  0100               	movlb	0	; () banked
  6324  00105A  51BB               	movf	CANsendMessage@tamp& (0+255),w,b
  6325  00105C  0100               	movlb	0	; () banked
  6326  00105E  6FBB               	movwf	CANsendMessage@tamp& (0+255),b
  6327  001060  6BBC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6328  001062  6BBD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6329  001064  6BBE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  6333  001066  C0BB  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6334                           
  6335                           ;CANlib.h: 407: }
  6336  00106A  D059               	goto	l4626
  6337  00106C                     l381:
  6338                           
  6339                           ; BSR set to: 0
  6340                           ;CANlib.h: 409: else
  6341                           ;CANlib.h: 411: {
  6342                           ;CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  6343  00106C  010F               	movlb	15	; () banked
  6344  00106E  9732               	bcf	50,3,b	;volatile
  6345                           
  6346                           ; BSR set to: 15
  6347                           ;CANlib.h: 414: tamp = (identifier >> 3);
  6348  001070  C0AF  F0B7         	movff	CANsendMessage@identifier,??_CANsendMessage
  6349  001074  C0B0  F0B8         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6350  001078  C0B1  F0B9         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6351  00107C  C0B2  F0BA         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6352  001080  0E04               	movlw	4
  6353  001082  D006               	goto	u5960
  6354  001084                     u5965:
  6355  001084  0100               	movlb	0	; () banked
  6356  001086  90D8               	bcf	status,0,c
  6357  001088  33BA               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6358  00108A  33B9               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6359  00108C  33B8               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6360  00108E  33B7               	rrcf	??_CANsendMessage& (0+255),f,b
  6361  001090                     u5960:
  6362  001090  2EE8               	decfsz	wreg,f,c
  6363  001092  D7F8               	goto	u5965
  6364  001094  C0B7  F0BB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6365  001098  C0B8  F0BC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6366  00109C  C0B9  F0BD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6367  0010A0  C0BA  F0BE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;CANlib.h: 415: tamp = tamp & 0x000000FF;
  6371  0010A4  0100               	movlb	0	; () banked
  6372  0010A6  51BB               	movf	CANsendMessage@tamp& (0+255),w,b
  6373  0010A8  0100               	movlb	0	; () banked
  6374  0010AA  6FBB               	movwf	CANsendMessage@tamp& (0+255),b
  6375  0010AC  6BBC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6376  0010AE  6BBD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6377  0010B0  6BBE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  6381  0010B2  C0BB  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;CANlib.h: 418: tamp = identifier & 0x00000007;
  6385  0010B6  0E07               	movlw	7
  6386  0010B8  0100               	movlb	0	; () banked
  6387  0010BA  15AF               	andwf	CANsendMessage@identifier& (0+255),w,b
  6388  0010BC  0100               	movlb	0	; () banked
  6389  0010BE  6FBB               	movwf	CANsendMessage@tamp& (0+255),b
  6390  0010C0  0E00               	movlw	0
  6391  0010C2  0100               	movlb	0	; () banked
  6392  0010C4  15B0               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6393  0010C6  0100               	movlb	0	; () banked
  6394  0010C8  6FBC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6395  0010CA  0E00               	movlw	0
  6396  0010CC  0100               	movlb	0	; () banked
  6397  0010CE  15B1               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6398  0010D0  0100               	movlb	0	; () banked
  6399  0010D2  6FBD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6400  0010D4  0E00               	movlw	0
  6401  0010D6  0100               	movlb	0	; () banked
  6402  0010D8  15B2               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6403  0010DA  0100               	movlb	0	; () banked
  6404  0010DC  6FBE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6405                           
  6406                           ; BSR set to: 0
  6407                           ;CANlib.h: 419: tamp = tamp << 5;
  6408  0010DE  C0BB  F0B7         	movff	CANsendMessage@tamp,??_CANsendMessage
  6409  0010E2  C0BC  F0B8         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6410  0010E6  C0BD  F0B9         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6411  0010EA  C0BE  F0BA         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6412  0010EE  0E05               	movlw	5
  6413  0010F0                     u5975:
  6414  0010F0  90D8               	bcf	status,0,c
  6415  0010F2  0100               	movlb	0	; () banked
  6416  0010F4  37B7               	rlcf	??_CANsendMessage& (0+255),f,b
  6417  0010F6  37B8               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6418  0010F8  37B9               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6419  0010FA  37BA               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6420  0010FC  2EE8               	decfsz	wreg,f,c
  6421  0010FE  D7F8               	goto	u5975
  6422  001100  C0B7  F0BB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6423  001104  C0B8  F0BC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6424  001108  C0B9  F0BD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6425  00110C  C0BA  F0BE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  6429  001110  010F               	movlb	15	; () banked
  6430  001112  5132               	movf	50,w,b	;volatile
  6431  001114  0B1F               	andlw	31
  6432  001116  010F               	movlb	15	; () banked
  6433  001118  6F32               	movwf	50,b	;volatile
  6434                           
  6435                           ; BSR set to: 15
  6436                           ;CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  6437  00111A  C0BB  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6438  00111E                     l4626:
  6439                           
  6440                           ;CANlib.h: 422: }
  6441                           ;CANlib.h: 424: if (0b00000001 & flags)
  6442  00111E  0100               	movlb	0	; () banked
  6443  001120  A1B6               	btfss	CANsendMessage@flags& (0+255),0,b
  6444  001122  D003               	goto	l388
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  6448  001124  010F               	movlb	15	; () banked
  6449  001126  8130               	bsf	48,0,b	;volatile
  6450  001128  D002               	goto	l389
  6451  00112A                     l388:
  6452                           
  6453                           ; BSR set to: 0
  6454                           ;CANlib.h: 426: else
  6455                           ;CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  6456  00112A  010F               	movlb	15	; () banked
  6457  00112C  9130               	bcf	48,0,b	;volatile
  6458  00112E                     l389:
  6459                           
  6460                           ; BSR set to: 15
  6461                           ;CANlib.h: 428: if (0b00000010 & flags)
  6462  00112E  0100               	movlb	0	; () banked
  6463  001130  A3B6               	btfss	CANsendMessage@flags& (0+255),1,b
  6464  001132  D003               	goto	l390
  6465                           
  6466                           ; BSR set to: 0
  6467                           ;CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  6468  001134  010F               	movlb	15	; () banked
  6469  001136  8330               	bsf	48,1,b	;volatile
  6470  001138  D002               	goto	l4632
  6471  00113A                     l390:
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;CANlib.h: 430: else
  6475                           ;CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  6476  00113A  010F               	movlb	15	; () banked
  6477  00113C  9330               	bcf	48,1,b	;volatile
  6478  00113E                     l4632:
  6479                           
  6480                           ; BSR set to: 15
  6481                           ;CANlib.h: 433: TXB1D0 = data[0];
  6482  00113E  C0B3  FFD9         	movff	CANsendMessage@data,fsr2l
  6483  001142  C0B4  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6484  001146  50DF               	movf	indf2,w,c
  6485  001148  010F               	movlb	15	; () banked
  6486  00114A  6F36               	movwf	54,b	;volatile
  6487                           
  6488                           ; BSR set to: 15
  6489                           ;CANlib.h: 434: TXB1D1 = data[1];
  6490  00114C  0100               	movlb	0	; () banked
  6491  00114E  EE20 F001          	lfsr	2,1
  6492  001152  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6493  001154  26D9               	addwf	fsr2l,f,c
  6494  001156  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6495  001158  22DA               	addwfc	fsr2h,f,c
  6496  00115A  50DF               	movf	indf2,w,c
  6497  00115C  010F               	movlb	15	; () banked
  6498  00115E  6F37               	movwf	55,b	;volatile
  6499                           
  6500                           ; BSR set to: 15
  6501                           ;CANlib.h: 435: TXB1D2 = data[2];
  6502  001160  0100               	movlb	0	; () banked
  6503  001162  EE20 F002          	lfsr	2,2
  6504  001166  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6505  001168  26D9               	addwf	fsr2l,f,c
  6506  00116A  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6507  00116C  22DA               	addwfc	fsr2h,f,c
  6508  00116E  50DF               	movf	indf2,w,c
  6509  001170  010F               	movlb	15	; () banked
  6510  001172  6F38               	movwf	56,b	;volatile
  6511                           
  6512                           ; BSR set to: 15
  6513                           ;CANlib.h: 436: TXB1D3 = data[3];
  6514  001174  0100               	movlb	0	; () banked
  6515  001176  EE20 F003          	lfsr	2,3
  6516  00117A  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6517  00117C  26D9               	addwf	fsr2l,f,c
  6518  00117E  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6519  001180  22DA               	addwfc	fsr2h,f,c
  6520  001182  50DF               	movf	indf2,w,c
  6521  001184  010F               	movlb	15	; () banked
  6522  001186  6F39               	movwf	57,b	;volatile
  6523                           
  6524                           ; BSR set to: 15
  6525                           ;CANlib.h: 437: TXB1D4 = data[4];
  6526  001188  0100               	movlb	0	; () banked
  6527  00118A  EE20 F004          	lfsr	2,4
  6528  00118E  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6529  001190  26D9               	addwf	fsr2l,f,c
  6530  001192  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6531  001194  22DA               	addwfc	fsr2h,f,c
  6532  001196  50DF               	movf	indf2,w,c
  6533  001198  010F               	movlb	15	; () banked
  6534  00119A  6F3A               	movwf	58,b	;volatile
  6535                           
  6536                           ; BSR set to: 15
  6537                           ;CANlib.h: 438: TXB1D5 = data[5];
  6538  00119C  0100               	movlb	0	; () banked
  6539  00119E  EE20 F005          	lfsr	2,5
  6540  0011A2  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6541  0011A4  26D9               	addwf	fsr2l,f,c
  6542  0011A6  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6543  0011A8  22DA               	addwfc	fsr2h,f,c
  6544  0011AA  50DF               	movf	indf2,w,c
  6545  0011AC  010F               	movlb	15	; () banked
  6546  0011AE  6F3B               	movwf	59,b	;volatile
  6547                           
  6548                           ; BSR set to: 15
  6549                           ;CANlib.h: 439: TXB1D6 = data[6];
  6550  0011B0  0100               	movlb	0	; () banked
  6551  0011B2  EE20 F006          	lfsr	2,6
  6552  0011B6  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6553  0011B8  26D9               	addwf	fsr2l,f,c
  6554  0011BA  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6555  0011BC  22DA               	addwfc	fsr2h,f,c
  6556  0011BE  50DF               	movf	indf2,w,c
  6557  0011C0  010F               	movlb	15	; () banked
  6558  0011C2  6F3C               	movwf	60,b	;volatile
  6559                           
  6560                           ; BSR set to: 15
  6561                           ;CANlib.h: 440: TXB1D7 = data[7];
  6562  0011C4  0100               	movlb	0	; () banked
  6563  0011C6  EE20 F007          	lfsr	2,7
  6564  0011CA  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6565  0011CC  26D9               	addwf	fsr2l,f,c
  6566  0011CE  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6567  0011D0  22DA               	addwfc	fsr2h,f,c
  6568  0011D2  50DF               	movf	indf2,w,c
  6569  0011D4  010F               	movlb	15	; () banked
  6570  0011D6  6F3D               	movwf	61,b	;volatile
  6571                           
  6572                           ; BSR set to: 15
  6573                           ;CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  6574  0011D8  010F               	movlb	15	; () banked
  6575  0011DA  8730               	bsf	48,3,b	;volatile
  6576                           
  6577                           ; BSR set to: 15
  6578                           ;CANlib.h: 444: return;
  6579  0011DC  0012               	return	
  6580  0011DE                     l378:
  6581                           
  6582                           ; BSR set to: 15
  6583                           ;CANlib.h: 445: }
  6584                           ;CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  6585  0011DE  010F               	movlb	15	; () banked
  6586  0011E0  B720               	btfsc	32,3,b	;volatile
  6587  0011E2  0012               	return	
  6588                           
  6589                           ; BSR set to: 15
  6590                           ;CANlib.h: 450: { TXB2DLC = dataLength;
  6591  0011E4  C0B5  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6592                           
  6593                           ;CANlib.h: 452: if (0b01000000 & flags)
  6594  0011E8  0100               	movlb	0	; () banked
  6595  0011EA  ADB6               	btfss	CANsendMessage@flags& (0+255),6,b
  6596  0011EC  D003               	goto	l393
  6597                           
  6598                           ; BSR set to: 0
  6599                           ;CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  6600  0011EE  010F               	movlb	15	; () banked
  6601  0011F0  8D25               	bsf	37,6,b	;volatile
  6602  0011F2  D002               	goto	l394
  6603  0011F4                     l393:
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;CANlib.h: 454: else
  6607                           ;CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  6608  0011F4  010F               	movlb	15	; () banked
  6609  0011F6  9D25               	bcf	37,6,b	;volatile
  6610  0011F8                     l394:
  6611                           
  6612                           ; BSR set to: 15
  6613                           ;CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  6614  0011F8  0100               	movlb	0	; () banked
  6615  0011FA  A7B6               	btfss	CANsendMessage@flags& (0+255),3,b
  6616  0011FC  D079               	goto	l395
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;CANlib.h: 458: {
  6620                           ;CANlib.h: 459: tamp = identifier & 0x000000FF;
  6621  0011FE  0100               	movlb	0	; () banked
  6622  001200  51AF               	movf	CANsendMessage@identifier& (0+255),w,b
  6623  001202  0100               	movlb	0	; () banked
  6624  001204  6FBB               	movwf	CANsendMessage@tamp& (0+255),b
  6625  001206  6BBC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6626  001208  6BBD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6627  00120A  6BBE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6628                           
  6629                           ; BSR set to: 0
  6630                           ;CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  6631  00120C  C0BB  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6632                           
  6633                           ; BSR set to: 0
  6634                           ;CANlib.h: 462: tamp = identifier & 0x0000FF00;
  6635  001210  0E00               	movlw	0
  6636  001212  0100               	movlb	0	; () banked
  6637  001214  15AF               	andwf	CANsendMessage@identifier& (0+255),w,b
  6638  001216  0100               	movlb	0	; () banked
  6639  001218  6FBB               	movwf	CANsendMessage@tamp& (0+255),b
  6640  00121A  0EFF               	movlw	255
  6641  00121C  0100               	movlb	0	; () banked
  6642  00121E  15B0               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6643  001220  0100               	movlb	0	; () banked
  6644  001222  6FBC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6645  001224  0E00               	movlw	0
  6646  001226  0100               	movlb	0	; () banked
  6647  001228  15B1               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6648  00122A  0100               	movlb	0	; () banked
  6649  00122C  6FBD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6650  00122E  0E00               	movlw	0
  6651  001230  0100               	movlb	0	; () banked
  6652  001232  15B2               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6653  001234  0100               	movlb	0	; () banked
  6654  001236  6FBE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;CANlib.h: 463: tamp = tamp >> 8;
  6658  001238  C0BB  F0B7         	movff	CANsendMessage@tamp,??_CANsendMessage
  6659  00123C  C0BC  F0B8         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6660  001240  C0BD  F0B9         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6661  001244  C0BE  F0BA         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6662  001248  C0B8  F0B7         	movff	??_CANsendMessage+1,??_CANsendMessage
  6663  00124C  C0B9  F0B8         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6664  001250  C0BA  F0B9         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6665  001254  0100               	movlb	0	; () banked
  6666  001256  6BBA               	clrf	(??_CANsendMessage+3)& (0+255),b
  6667  001258  C0B7  F0BB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6668  00125C  C0B8  F0BC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6669  001260  C0B9  F0BD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6670  001264  C0BA  F0BE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  6674  001268  C0BB  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;CANlib.h: 466: TXB2SIDL = 0x00;
  6678  00126C  0E00               	movlw	0
  6679  00126E  010F               	movlb	15	; () banked
  6680  001270  6F22               	movwf	34,b	;volatile
  6681                           
  6682                           ; BSR set to: 15
  6683                           ;CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  6684  001272  010F               	movlb	15	; () banked
  6685  001274  8722               	bsf	34,3,b	;volatile
  6686                           
  6687                           ; BSR set to: 15
  6688                           ;CANlib.h: 469: if (identifier & 0x00010000)
  6689  001276  0100               	movlb	0	; () banked
  6690  001278  A1B1               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6691  00127A  D002               	goto	l396
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  6695  00127C  010F               	movlb	15	; () banked
  6696  00127E  8122               	bsf	34,0,b	;volatile
  6697  001280                     l396:
  6698                           
  6699                           ;CANlib.h: 471: if (identifier & 0x00020000)
  6700  001280  0100               	movlb	0	; () banked
  6701  001282  A3B1               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6702  001284  D002               	goto	l397
  6703                           
  6704                           ; BSR set to: 0
  6705                           ;CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  6706  001286  010F               	movlb	15	; () banked
  6707  001288  8322               	bsf	34,1,b	;volatile
  6708  00128A                     l397:
  6709                           
  6710                           ;CANlib.h: 473: if (identifier & 0x00040000)
  6711  00128A  0100               	movlb	0	; () banked
  6712  00128C  A5B1               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6713  00128E  D002               	goto	l398
  6714                           
  6715                           ; BSR set to: 0
  6716                           ;CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  6717  001290  010F               	movlb	15	; () banked
  6718  001292  8B22               	bsf	34,5,b	;volatile
  6719  001294                     l398:
  6720                           
  6721                           ;CANlib.h: 475: if (identifier & 0x00080000)
  6722  001294  0100               	movlb	0	; () banked
  6723  001296  A7B1               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6724  001298  D002               	goto	l399
  6725                           
  6726                           ; BSR set to: 0
  6727                           ;CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  6728  00129A  010F               	movlb	15	; () banked
  6729  00129C  8D22               	bsf	34,6,b	;volatile
  6730  00129E                     l399:
  6731                           
  6732                           ;CANlib.h: 477: if (identifier & 0x00100000)
  6733  00129E  0100               	movlb	0	; () banked
  6734  0012A0  A9B1               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6735  0012A2  D002               	goto	l4682
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  6739  0012A4  010F               	movlb	15	; () banked
  6740  0012A6  8F22               	bsf	34,7,b	;volatile
  6741  0012A8                     l4682:
  6742                           
  6743                           ;CANlib.h: 480: tamp = (identifier >> 21);
  6744  0012A8  C0AF  F0B7         	movff	CANsendMessage@identifier,??_CANsendMessage
  6745  0012AC  C0B0  F0B8         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6746  0012B0  C0B1  F0B9         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6747  0012B4  C0B2  F0BA         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6748  0012B8  0E16               	movlw	22
  6749  0012BA  D006               	goto	u6080
  6750  0012BC                     u6085:
  6751  0012BC  0100               	movlb	0	; () banked
  6752  0012BE  90D8               	bcf	status,0,c
  6753  0012C0  33BA               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6754  0012C2  33B9               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6755  0012C4  33B8               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6756  0012C6  33B7               	rrcf	??_CANsendMessage& (0+255),f,b
  6757  0012C8                     u6080:
  6758  0012C8  2EE8               	decfsz	wreg,f,c
  6759  0012CA  D7F8               	goto	u6085
  6760  0012CC  C0B7  F0BB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6761  0012D0  C0B8  F0BC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6762  0012D4  C0B9  F0BD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6763  0012D8  C0BA  F0BE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;CANlib.h: 481: tamp = tamp & 0x000000FF;
  6767  0012DC  0100               	movlb	0	; () banked
  6768  0012DE  51BB               	movf	CANsendMessage@tamp& (0+255),w,b
  6769  0012E0  0100               	movlb	0	; () banked
  6770  0012E2  6FBB               	movwf	CANsendMessage@tamp& (0+255),b
  6771  0012E4  6BBC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6772  0012E6  6BBD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6773  0012E8  6BBE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6774                           
  6775                           ; BSR set to: 0
  6776                           ;CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  6777  0012EA  C0BB  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6778                           
  6779                           ;CANlib.h: 483: }
  6780  0012EE  D059               	goto	l4702
  6781  0012F0                     l395:
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;CANlib.h: 485: else
  6785                           ;CANlib.h: 487: {
  6786                           ;CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  6787  0012F0  010F               	movlb	15	; () banked
  6788  0012F2  9722               	bcf	34,3,b	;volatile
  6789                           
  6790                           ; BSR set to: 15
  6791                           ;CANlib.h: 490: tamp = (identifier >> 3);
  6792  0012F4  C0AF  F0B7         	movff	CANsendMessage@identifier,??_CANsendMessage
  6793  0012F8  C0B0  F0B8         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6794  0012FC  C0B1  F0B9         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6795  001300  C0B2  F0BA         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6796  001304  0E04               	movlw	4
  6797  001306  D006               	goto	u6090
  6798  001308                     u6095:
  6799  001308  0100               	movlb	0	; () banked
  6800  00130A  90D8               	bcf	status,0,c
  6801  00130C  33BA               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6802  00130E  33B9               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6803  001310  33B8               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6804  001312  33B7               	rrcf	??_CANsendMessage& (0+255),f,b
  6805  001314                     u6090:
  6806  001314  2EE8               	decfsz	wreg,f,c
  6807  001316  D7F8               	goto	u6095
  6808  001318  C0B7  F0BB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6809  00131C  C0B8  F0BC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6810  001320  C0B9  F0BD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6811  001324  C0BA  F0BE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6812                           
  6813                           ; BSR set to: 0
  6814                           ;CANlib.h: 491: tamp = tamp & 0x000000FF;
  6815  001328  0100               	movlb	0	; () banked
  6816  00132A  51BB               	movf	CANsendMessage@tamp& (0+255),w,b
  6817  00132C  0100               	movlb	0	; () banked
  6818  00132E  6FBB               	movwf	CANsendMessage@tamp& (0+255),b
  6819  001330  6BBC               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6820  001332  6BBD               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6821  001334  6BBE               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6822                           
  6823                           ; BSR set to: 0
  6824                           ;CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  6825  001336  C0BB  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;CANlib.h: 494: tamp = identifier & 0x00000007;
  6829  00133A  0E07               	movlw	7
  6830  00133C  0100               	movlb	0	; () banked
  6831  00133E  15AF               	andwf	CANsendMessage@identifier& (0+255),w,b
  6832  001340  0100               	movlb	0	; () banked
  6833  001342  6FBB               	movwf	CANsendMessage@tamp& (0+255),b
  6834  001344  0E00               	movlw	0
  6835  001346  0100               	movlb	0	; () banked
  6836  001348  15B0               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6837  00134A  0100               	movlb	0	; () banked
  6838  00134C  6FBC               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6839  00134E  0E00               	movlw	0
  6840  001350  0100               	movlb	0	; () banked
  6841  001352  15B1               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6842  001354  0100               	movlb	0	; () banked
  6843  001356  6FBD               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6844  001358  0E00               	movlw	0
  6845  00135A  0100               	movlb	0	; () banked
  6846  00135C  15B2               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6847  00135E  0100               	movlb	0	; () banked
  6848  001360  6FBE               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6849                           
  6850                           ; BSR set to: 0
  6851                           ;CANlib.h: 495: tamp = tamp << 5;
  6852  001362  C0BB  F0B7         	movff	CANsendMessage@tamp,??_CANsendMessage
  6853  001366  C0BC  F0B8         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6854  00136A  C0BD  F0B9         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6855  00136E  C0BE  F0BA         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6856  001372  0E05               	movlw	5
  6857  001374                     u6105:
  6858  001374  90D8               	bcf	status,0,c
  6859  001376  0100               	movlb	0	; () banked
  6860  001378  37B7               	rlcf	??_CANsendMessage& (0+255),f,b
  6861  00137A  37B8               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6862  00137C  37B9               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6863  00137E  37BA               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6864  001380  2EE8               	decfsz	wreg,f,c
  6865  001382  D7F8               	goto	u6105
  6866  001384  C0B7  F0BB         	movff	??_CANsendMessage,CANsendMessage@tamp
  6867  001388  C0B8  F0BC         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6868  00138C  C0B9  F0BD         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6869  001390  C0BA  F0BE         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  6873  001394  010F               	movlb	15	; () banked
  6874  001396  5122               	movf	34,w,b	;volatile
  6875  001398  0B1F               	andlw	31
  6876  00139A  010F               	movlb	15	; () banked
  6877  00139C  6F22               	movwf	34,b	;volatile
  6878                           
  6879                           ; BSR set to: 15
  6880                           ;CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  6881  00139E  C0BB  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  6882  0013A2                     l4702:
  6883                           
  6884                           ;CANlib.h: 498: }
  6885                           ;CANlib.h: 500: if (0b00000001 & flags)
  6886  0013A2  0100               	movlb	0	; () banked
  6887  0013A4  A1B6               	btfss	CANsendMessage@flags& (0+255),0,b
  6888  0013A6  D003               	goto	l402
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  6892  0013A8  010F               	movlb	15	; () banked
  6893  0013AA  8120               	bsf	32,0,b	;volatile
  6894  0013AC  D002               	goto	l403
  6895  0013AE                     l402:
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;CANlib.h: 502: else
  6899                           ;CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  6900  0013AE  010F               	movlb	15	; () banked
  6901  0013B0  9120               	bcf	32,0,b	;volatile
  6902  0013B2                     l403:
  6903                           
  6904                           ; BSR set to: 15
  6905                           ;CANlib.h: 504: if (0b00000010 & flags)
  6906  0013B2  0100               	movlb	0	; () banked
  6907  0013B4  A3B6               	btfss	CANsendMessage@flags& (0+255),1,b
  6908  0013B6  D003               	goto	l404
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  6912  0013B8  010F               	movlb	15	; () banked
  6913  0013BA  8320               	bsf	32,1,b	;volatile
  6914  0013BC  D002               	goto	l4708
  6915  0013BE                     l404:
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;CANlib.h: 506: else
  6919                           ;CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  6920  0013BE  010F               	movlb	15	; () banked
  6921  0013C0  9320               	bcf	32,1,b	;volatile
  6922  0013C2                     l4708:
  6923                           
  6924                           ; BSR set to: 15
  6925                           ;CANlib.h: 509: TXB2D0 = data[0];
  6926  0013C2  C0B3  FFD9         	movff	CANsendMessage@data,fsr2l
  6927  0013C6  C0B4  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6928  0013CA  50DF               	movf	indf2,w,c
  6929  0013CC  010F               	movlb	15	; () banked
  6930  0013CE  6F26               	movwf	38,b	;volatile
  6931                           
  6932                           ; BSR set to: 15
  6933                           ;CANlib.h: 510: TXB2D1 = data[1];
  6934  0013D0  0100               	movlb	0	; () banked
  6935  0013D2  EE20 F001          	lfsr	2,1
  6936  0013D6  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6937  0013D8  26D9               	addwf	fsr2l,f,c
  6938  0013DA  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6939  0013DC  22DA               	addwfc	fsr2h,f,c
  6940  0013DE  50DF               	movf	indf2,w,c
  6941  0013E0  010F               	movlb	15	; () banked
  6942  0013E2  6F27               	movwf	39,b	;volatile
  6943                           
  6944                           ; BSR set to: 15
  6945                           ;CANlib.h: 511: TXB2D2 = data[2];
  6946  0013E4  0100               	movlb	0	; () banked
  6947  0013E6  EE20 F002          	lfsr	2,2
  6948  0013EA  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6949  0013EC  26D9               	addwf	fsr2l,f,c
  6950  0013EE  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6951  0013F0  22DA               	addwfc	fsr2h,f,c
  6952  0013F2  50DF               	movf	indf2,w,c
  6953  0013F4  010F               	movlb	15	; () banked
  6954  0013F6  6F28               	movwf	40,b	;volatile
  6955                           
  6956                           ; BSR set to: 15
  6957                           ;CANlib.h: 512: TXB2D3 = data[3];
  6958  0013F8  0100               	movlb	0	; () banked
  6959  0013FA  EE20 F003          	lfsr	2,3
  6960  0013FE  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6961  001400  26D9               	addwf	fsr2l,f,c
  6962  001402  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6963  001404  22DA               	addwfc	fsr2h,f,c
  6964  001406  50DF               	movf	indf2,w,c
  6965  001408  010F               	movlb	15	; () banked
  6966  00140A  6F29               	movwf	41,b	;volatile
  6967                           
  6968                           ; BSR set to: 15
  6969                           ;CANlib.h: 513: TXB2D4 = data[4];
  6970  00140C  0100               	movlb	0	; () banked
  6971  00140E  EE20 F004          	lfsr	2,4
  6972  001412  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6973  001414  26D9               	addwf	fsr2l,f,c
  6974  001416  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6975  001418  22DA               	addwfc	fsr2h,f,c
  6976  00141A  50DF               	movf	indf2,w,c
  6977  00141C  010F               	movlb	15	; () banked
  6978  00141E  6F2A               	movwf	42,b	;volatile
  6979                           
  6980                           ; BSR set to: 15
  6981                           ;CANlib.h: 514: TXB2D5 = data[5];
  6982  001420  0100               	movlb	0	; () banked
  6983  001422  EE20 F005          	lfsr	2,5
  6984  001426  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6985  001428  26D9               	addwf	fsr2l,f,c
  6986  00142A  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6987  00142C  22DA               	addwfc	fsr2h,f,c
  6988  00142E  50DF               	movf	indf2,w,c
  6989  001430  010F               	movlb	15	; () banked
  6990  001432  6F2B               	movwf	43,b	;volatile
  6991                           
  6992                           ; BSR set to: 15
  6993                           ;CANlib.h: 515: TXB2D6 = data[6];
  6994  001434  0100               	movlb	0	; () banked
  6995  001436  EE20 F006          	lfsr	2,6
  6996  00143A  51B3               	movf	CANsendMessage@data& (0+255),w,b
  6997  00143C  26D9               	addwf	fsr2l,f,c
  6998  00143E  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6999  001440  22DA               	addwfc	fsr2h,f,c
  7000  001442  50DF               	movf	indf2,w,c
  7001  001444  010F               	movlb	15	; () banked
  7002  001446  6F2C               	movwf	44,b	;volatile
  7003                           
  7004                           ; BSR set to: 15
  7005                           ;CANlib.h: 516: TXB2D7 = data[7];
  7006  001448  0100               	movlb	0	; () banked
  7007  00144A  EE20 F007          	lfsr	2,7
  7008  00144E  51B3               	movf	CANsendMessage@data& (0+255),w,b
  7009  001450  26D9               	addwf	fsr2l,f,c
  7010  001452  51B4               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7011  001454  22DA               	addwfc	fsr2h,f,c
  7012  001456  50DF               	movf	indf2,w,c
  7013  001458  010F               	movlb	15	; () banked
  7014  00145A  6F2D               	movwf	45,b	;volatile
  7015                           
  7016                           ; BSR set to: 15
  7017                           ;CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  7018  00145C  010F               	movlb	15	; () banked
  7019  00145E  8720               	bsf	32,3,b	;volatile
  7020                           
  7021                           ; BSR set to: 15
  7022                           ;CANlib.h: 520: return;
  7023  001460  0012               	return	
  7024  001462                     __end_of_CANsendMessage:
  7025                           	opt stack 0
  7026                           tblptru	equ	0xFF8
  7027                           tblptrh	equ	0xFF7
  7028                           tblptrl	equ	0xFF6
  7029                           tablat	equ	0xFF5
  7030                           prodh	equ	0xFF4
  7031                           prodl	equ	0xFF3
  7032                           intcon	equ	0xFF2
  7033                           postinc0	equ	0xFEE
  7034                           wreg	equ	0xFE8
  7035                           indf1	equ	0xFE7
  7036                           postdec1	equ	0xFE5
  7037                           fsr1h	equ	0xFE2
  7038                           fsr1l	equ	0xFE1
  7039                           indf2	equ	0xFDF
  7040                           fsr2h	equ	0xFDA
  7041                           fsr2l	equ	0xFD9
  7042                           status	equ	0xFD8
  7043                           
  7044 ;; *************** function _CANisTxReady *****************
  7045 ;; Defined at:
  7046 ;;		line 1154 in file "CANlib.h"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;		None
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;		None
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  1    wreg      unsigned char 
  7053 ;; Registers used:
  7054 ;;		wreg, status,2
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7060 ;;      Params:         0       0       0       0
  7061 ;;      Locals:         0       1       0       0
  7062 ;;      Temps:          0       0       0       0
  7063 ;;      Totals:         0       1       0       0
  7064 ;;Total ram usage:        1 bytes
  7065 ;; Hardware stack levels used:    1
  7066 ;; Hardware stack levels required when called:    2
  7067 ;; This function calls:
  7068 ;;		Nothing
  7069 ;; This function is called by:
  7070 ;;		_send_data
  7071 ;;		_battery_measure
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text13
  7076  0027F8                     __ptext13:
  7077                           	opt stack 0
  7078  0027F8                     _CANisTxReady:
  7079                           	opt stack 27
  7080                           
  7081                           ;CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TXREQ)
      +                          ;
  7082                           
  7083                           ; BSR set to: 15
  7084                           ;incstack = 0
  7085  0027F8  0E01               	movlw	1
  7086  0027FA  0100               	movlb	0	; () banked
  7087  0027FC  6FAF               	movwf	_CANisTxReady$2993& (0+255),b
  7088                           
  7089                           ; BSR set to: 0
  7090  0027FE  010F               	movlb	15	; () banked
  7091  002800  A740               	btfss	64,3,b	;volatile
  7092  002802  D009               	goto	l556
  7093                           
  7094                           ; BSR set to: 15
  7095  002804  010F               	movlb	15	; () banked
  7096  002806  A730               	btfss	48,3,b	;volatile
  7097  002808  D006               	goto	l556
  7098                           
  7099                           ; BSR set to: 15
  7100  00280A  010F               	movlb	15	; () banked
  7101  00280C  A720               	btfss	32,3,b	;volatile
  7102  00280E  D003               	goto	l556
  7103                           
  7104                           ; BSR set to: 15
  7105  002810  0E00               	movlw	0
  7106  002812  0100               	movlb	0	; () banked
  7107  002814  6FAF               	movwf	_CANisTxReady$2993& (0+255),b
  7108  002816                     l556:
  7109  002816  0100               	movlb	0	; () banked
  7110  002818  51AF               	movf	_CANisTxReady$2993& (0+255),w,b
  7111  00281A  0012               	return	
  7112  00281C                     __end_of_CANisTxReady:
  7113                           	opt stack 0
  7114                           tblptru	equ	0xFF8
  7115                           tblptrh	equ	0xFF7
  7116                           tblptrl	equ	0xFF6
  7117                           tablat	equ	0xFF5
  7118                           prodh	equ	0xFF4
  7119                           prodl	equ	0xFF3
  7120                           intcon	equ	0xFF2
  7121                           postinc0	equ	0xFEE
  7122                           wreg	equ	0xFE8
  7123                           indf1	equ	0xFE7
  7124                           postdec1	equ	0xFE5
  7125                           fsr1h	equ	0xFE2
  7126                           fsr1l	equ	0xFE1
  7127                           indf2	equ	0xFDF
  7128                           fsr2h	equ	0xFDA
  7129                           fsr2l	equ	0xFD9
  7130                           status	equ	0xFD8
  7131                           
  7132 ;; *************** function _abs *****************
  7133 ;; Defined at:
  7134 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  7135 ;; Parameters:    Size  Location     Type
  7136 ;;  a               2    0[BANK0 ] int 
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;		None
  7139 ;; Return value:  Size  Location     Type
  7140 ;;                  2    0[BANK0 ] int 
  7141 ;; Registers used:
  7142 ;;		wreg, status,2, status,0
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7148 ;;      Params:         0       2       0       0
  7149 ;;      Locals:         0       0       0       0
  7150 ;;      Temps:          0       2       0       0
  7151 ;;      Totals:         0       4       0       0
  7152 ;;Total ram usage:        4 bytes
  7153 ;; Hardware stack levels used:    1
  7154 ;; Hardware stack levels required when called:    2
  7155 ;; This function calls:
  7156 ;;		Nothing
  7157 ;; This function is called by:
  7158 ;;		_main
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           	psect	text14
  7163  0027CC                     __ptext14:
  7164                           	opt stack 0
  7165  0027CC                     _abs:
  7166                           	opt stack 28
  7167                           
  7168                           ; BSR set to: 0
  7169                           ;incstack = 0
  7170  0027CC  0100               	movlb	0	; () banked
  7171  0027CE  AFB0               	btfss	(abs@a+1)& (0+255),7,b
  7172  0027D0  D00E               	goto	l816
  7173                           
  7174                           ; BSR set to: 0
  7175  0027D2  C0AF  F0B1         	movff	abs@a,??_abs
  7176  0027D6  C0B0  F0B2         	movff	abs@a+1,??_abs+1
  7177  0027DA  0100               	movlb	0	; () banked
  7178  0027DC  1FB1               	comf	??_abs& (0+255),f,b
  7179  0027DE  1FB2               	comf	(??_abs+1)& (0+255),f,b
  7180  0027E0  4BB1               	infsnz	??_abs& (0+255),f,b
  7181  0027E2  2BB2               	incf	(??_abs+1)& (0+255),f,b
  7182  0027E4  C0B1  F0AF         	movff	??_abs,?_abs
  7183  0027E8  C0B2  F0B0         	movff	??_abs+1,?_abs+1
  7184  0027EC  0012               	return	
  7185  0027EE                     l816:
  7186                           
  7187                           ; BSR set to: 0
  7188  0027EE  C0AF  F0AF         	movff	abs@a,?_abs
  7189  0027F2  C0B0  F0B0         	movff	abs@a+1,?_abs+1
  7190                           
  7191                           ; BSR set to: 0
  7192  0027F6  0012               	return		;funcret
  7193  0027F8                     __end_of_abs:
  7194                           	opt stack 0
  7195                           tblptru	equ	0xFF8
  7196                           tblptrh	equ	0xFF7
  7197                           tblptrl	equ	0xFF6
  7198                           tablat	equ	0xFF5
  7199                           prodh	equ	0xFF4
  7200                           prodl	equ	0xFF3
  7201                           intcon	equ	0xFF2
  7202                           postinc0	equ	0xFEE
  7203                           wreg	equ	0xFE8
  7204                           indf1	equ	0xFE7
  7205                           postdec1	equ	0xFE5
  7206                           fsr1h	equ	0xFE2
  7207                           fsr1l	equ	0xFE1
  7208                           indf2	equ	0xFDF
  7209                           fsr2h	equ	0xFDA
  7210                           fsr2l	equ	0xFD9
  7211                           status	equ	0xFD8
  7212                           
  7213 ;; *************** function ___lwdiv *****************
  7214 ;; Defined at:
  7215 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  dividend        2    0[BANK0 ] unsigned int 
  7218 ;;  divisor         2    2[BANK0 ] unsigned int 
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;  quotient        2    5[BANK0 ] unsigned int 
  7221 ;;  counter         1    4[BANK0 ] unsigned char 
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  2    0[BANK0 ] unsigned int 
  7224 ;; Registers used:
  7225 ;;		wreg, status,2, status,0
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7231 ;;      Params:         0       4       0       0
  7232 ;;      Locals:         0       3       0       0
  7233 ;;      Temps:          0       0       0       0
  7234 ;;      Totals:         0       7       0       0
  7235 ;;Total ram usage:        7 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:    2
  7238 ;; This function calls:
  7239 ;;		Nothing
  7240 ;; This function is called by:
  7241 ;;		_main
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text15
  7246  0025C6                     __ptext15:
  7247                           	opt stack 0
  7248  0025C6                     ___lwdiv:
  7249                           	opt stack 28
  7250                           
  7251                           ; BSR set to: 0
  7252                           ;incstack = 0
  7253  0025C6  0E00               	movlw	0
  7254  0025C8  0100               	movlb	0	; () banked
  7255  0025CA  6FB5               	movwf	(___lwdiv@quotient+1)& (0+255),b
  7256  0025CC  0E00               	movlw	0
  7257  0025CE  6FB4               	movwf	___lwdiv@quotient& (0+255),b
  7258                           
  7259                           ; BSR set to: 0
  7260  0025D0  0100               	movlb	0	; () banked
  7261  0025D2  51B1               	movf	___lwdiv@divisor& (0+255),w,b
  7262  0025D4  0100               	movlb	0	; () banked
  7263  0025D6  11B2               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  7264  0025D8  B4D8               	btfsc	status,2,c
  7265  0025DA  D02C               	goto	l1173
  7266                           
  7267                           ; BSR set to: 0
  7268  0025DC  0E01               	movlw	1
  7269  0025DE  0100               	movlb	0	; () banked
  7270  0025E0  6FB3               	movwf	___lwdiv@counter& (0+255),b
  7271  0025E2  D006               	goto	l4986
  7272  0025E4                     l4984:
  7273                           
  7274                           ; BSR set to: 0
  7275  0025E4  0100               	movlb	0	; () banked
  7276  0025E6  90D8               	bcf	status,0,c
  7277  0025E8  37B1               	rlcf	___lwdiv@divisor& (0+255),f,b
  7278  0025EA  37B2               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  7279  0025EC  0100               	movlb	0	; () banked
  7280  0025EE  2BB3               	incf	___lwdiv@counter& (0+255),f,b
  7281  0025F0                     l4986:
  7282                           
  7283                           ; BSR set to: 0
  7284  0025F0  0100               	movlb	0	; () banked
  7285  0025F2  AFB2               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  7286  0025F4  D7F7               	goto	l4984
  7287  0025F6                     l4988:
  7288                           
  7289                           ; BSR set to: 0
  7290  0025F6  0100               	movlb	0	; () banked
  7291  0025F8  90D8               	bcf	status,0,c
  7292  0025FA  37B4               	rlcf	___lwdiv@quotient& (0+255),f,b
  7293  0025FC  37B5               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  7294                           
  7295                           ; BSR set to: 0
  7296  0025FE  0100               	movlb	0	; () banked
  7297  002600  51B1               	movf	___lwdiv@divisor& (0+255),w,b
  7298  002602  0100               	movlb	0	; () banked
  7299  002604  5DAF               	subwf	___lwdiv@dividend& (0+255),w,b
  7300  002606  0100               	movlb	0	; () banked
  7301  002608  51B2               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7302  00260A  0100               	movlb	0	; () banked
  7303  00260C  59B0               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  7304  00260E  A0D8               	btfss	status,0,c
  7305  002610  D00A               	goto	l4996
  7306                           
  7307                           ; BSR set to: 0
  7308  002612  0100               	movlb	0	; () banked
  7309  002614  51B1               	movf	___lwdiv@divisor& (0+255),w,b
  7310  002616  0100               	movlb	0	; () banked
  7311  002618  5FAF               	subwf	___lwdiv@dividend& (0+255),f,b
  7312  00261A  0100               	movlb	0	; () banked
  7313  00261C  51B2               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7314  00261E  0100               	movlb	0	; () banked
  7315  002620  5BB0               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7316                           
  7317                           ; BSR set to: 0
  7318  002622  0100               	movlb	0	; () banked
  7319  002624  81B4               	bsf	___lwdiv@quotient& (0+255),0,b
  7320  002626                     l4996:
  7321                           
  7322                           ; BSR set to: 0
  7323  002626  0100               	movlb	0	; () banked
  7324  002628  90D8               	bcf	status,0,c
  7325  00262A  33B2               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7326  00262C  33B1               	rrcf	___lwdiv@divisor& (0+255),f,b
  7327                           
  7328                           ; BSR set to: 0
  7329  00262E  0100               	movlb	0	; () banked
  7330  002630  2FB3               	decfsz	___lwdiv@counter& (0+255),f,b
  7331  002632  D7E1               	goto	l4988
  7332  002634                     l1173:
  7333                           
  7334                           ; BSR set to: 0
  7335  002634  C0B4  F0AF         	movff	___lwdiv@quotient,?___lwdiv
  7336  002638  C0B5  F0B0         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7337                           
  7338                           ; BSR set to: 0
  7339  00263C  0012               	return		;funcret
  7340  00263E                     __end_of___lwdiv:
  7341                           	opt stack 0
  7342                           tblptru	equ	0xFF8
  7343                           tblptrh	equ	0xFF7
  7344                           tblptrl	equ	0xFF6
  7345                           tablat	equ	0xFF5
  7346                           prodh	equ	0xFF4
  7347                           prodl	equ	0xFF3
  7348                           intcon	equ	0xFF2
  7349                           postinc0	equ	0xFEE
  7350                           wreg	equ	0xFE8
  7351                           indf1	equ	0xFE7
  7352                           postdec1	equ	0xFE5
  7353                           fsr1h	equ	0xFE2
  7354                           fsr1l	equ	0xFE1
  7355                           indf2	equ	0xFDF
  7356                           fsr2h	equ	0xFDA
  7357                           fsr2l	equ	0xFD9
  7358                           status	equ	0xFD8
  7359                           
  7360 ;; *************** function _SetDCEPWM1 *****************
  7361 ;; Defined at:
  7362 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  7367 ;; Return value:  Size  Location     Type
  7368 ;;		None               void
  7369 ;; Registers used:
  7370 ;;		wreg, status,2, status,0
  7371 ;; Tracked objects:
  7372 ;;		On entry : 0/0
  7373 ;;		On exit  : 0/0
  7374 ;;		Unchanged: 0/0
  7375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7376 ;;      Params:         0       2       0       0
  7377 ;;      Locals:         0       2       0       0
  7378 ;;      Temps:          0       2       0       0
  7379 ;;      Totals:         0       6       0       0
  7380 ;;Total ram usage:        6 bytes
  7381 ;; Hardware stack levels used:    1
  7382 ;; Hardware stack levels required when called:    2
  7383 ;; This function calls:
  7384 ;;		Nothing
  7385 ;; This function is called by:
  7386 ;;		_main
  7387 ;; This function uses a non-reentrant model
  7388 ;;
  7389                           
  7390                           	psect	text16
  7391  0026DA                     __ptext16:
  7392                           	opt stack 0
  7393  0026DA                     _SetDCEPWM1:
  7394                           	opt stack 28
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;incstack = 0
  7398  0026DA  C0AF  F0B1         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  7399  0026DE  C0B0  F0B2         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  7400  0026E2  0E06               	movlw	6
  7401  0026E4                     u6315:
  7402  0026E4  90D8               	bcf	status,0,c
  7403  0026E6  0100               	movlb	0	; () banked
  7404  0026E8  37B1               	rlcf	??_SetDCEPWM1& (0+255),f,b
  7405  0026EA  37B2               	rlcf	(??_SetDCEPWM1+1)& (0+255),f,b
  7406  0026EC  2EE8               	decfsz	wreg,f,c
  7407  0026EE  D7FA               	goto	u6315
  7408  0026F0  C0B1  F0B3         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  7409  0026F4  C0B2  F0B4         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  7410                           
  7411                           ; BSR set to: 0
  7412  0026F8  C0B4  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  7413  0026FC  C0B3  F0B1         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  7414  002700  0100               	movlb	0	; () banked
  7415  002702  90D8               	bcf	status,0,c
  7416  002704  33B1               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7417  002706  0100               	movlb	0	; () banked
  7418  002708  90D8               	bcf	status,0,c
  7419  00270A  33B1               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7420  00270C  0E30               	movlw	48
  7421  00270E  0100               	movlb	0	; () banked
  7422  002710  17B1               	andwf	??_SetDCEPWM1& (0+255),f,b
  7423  002712  50BA               	movf	4026,w,c	;volatile
  7424  002714  0BCF               	andlw	207
  7425  002716  0100               	movlb	0	; () banked
  7426  002718  11B1               	iorwf	??_SetDCEPWM1& (0+255),w,b
  7427  00271A  6EBA               	movwf	4026,c	;volatile
  7428                           
  7429                           ; BSR set to: 0
  7430  00271C  0012               	return		;funcret
  7431  00271E                     __end_of_SetDCEPWM1:
  7432                           	opt stack 0
  7433                           tblptru	equ	0xFF8
  7434                           tblptrh	equ	0xFF7
  7435                           tblptrl	equ	0xFF6
  7436                           tablat	equ	0xFF5
  7437                           prodh	equ	0xFF4
  7438                           prodl	equ	0xFF3
  7439                           intcon	equ	0xFF2
  7440                           postinc0	equ	0xFEE
  7441                           wreg	equ	0xFE8
  7442                           indf1	equ	0xFE7
  7443                           postdec1	equ	0xFE5
  7444                           fsr1h	equ	0xFE2
  7445                           fsr1l	equ	0xFE1
  7446                           indf2	equ	0xFDF
  7447                           fsr2h	equ	0xFDA
  7448                           fsr2l	equ	0xFD9
  7449                           status	equ	0xFD8
  7450                           
  7451 ;; *************** function _OpenTimer2 *****************
  7452 ;; Defined at:
  7453 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  config          1    wreg     unsigned char 
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;  config          1    0[BANK0 ] unsigned char 
  7458 ;; Return value:  Size  Location     Type
  7459 ;;		None               void
  7460 ;; Registers used:
  7461 ;;		wreg, status,2, status,0
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7467 ;;      Params:         0       0       0       0
  7468 ;;      Locals:         0       1       0       0
  7469 ;;      Temps:          0       0       0       0
  7470 ;;      Totals:         0       1       0       0
  7471 ;;Total ram usage:        1 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:    2
  7474 ;; This function calls:
  7475 ;;		Nothing
  7476 ;; This function is called by:
  7477 ;;		_main
  7478 ;; This function uses a non-reentrant model
  7479 ;;
  7480                           
  7481                           	psect	text17
  7482  00281C                     __ptext17:
  7483                           	opt stack 0
  7484  00281C                     _OpenTimer2:
  7485                           	opt stack 28
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;incstack = 0
  7489                           ;OpenTimer2@config stored from wreg
  7490  00281C  0100               	movlb	0	; () banked
  7491  00281E  6FAF               	movwf	OpenTimer2@config& (0+255),b
  7492  002820  0100               	movlb	0	; () banked
  7493  002822  51AF               	movf	OpenTimer2@config& (0+255),w,b
  7494  002824  0BFB               	andlw	251
  7495  002826  6ECA               	movwf	4042,c	;volatile
  7496                           
  7497                           ; BSR set to: 0
  7498  002828  0E00               	movlw	0
  7499  00282A  6ECC               	movwf	4044,c	;volatile
  7500                           
  7501                           ; BSR set to: 0
  7502  00282C  929E               	bcf	3998,1,c	;volatile
  7503                           
  7504                           ; BSR set to: 0
  7505  00282E  0100               	movlb	0	; () banked
  7506  002830  AFAF               	btfss	OpenTimer2@config& (0+255),7,b
  7507  002832  D002               	goto	l764
  7508                           
  7509                           ; BSR set to: 0
  7510  002834  829D               	bsf	3997,1,c	;volatile
  7511  002836  D001               	goto	l765
  7512  002838                     l764:
  7513                           
  7514                           ; BSR set to: 0
  7515  002838  929D               	bcf	3997,1,c	;volatile
  7516  00283A                     l765:
  7517                           
  7518                           ; BSR set to: 0
  7519  00283A  84CA               	bsf	4042,2,c	;volatile
  7520                           
  7521                           ; BSR set to: 0
  7522  00283C  0012               	return		;funcret
  7523  00283E                     __end_of_OpenTimer2:
  7524                           	opt stack 0
  7525                           tblptru	equ	0xFF8
  7526                           tblptrh	equ	0xFF7
  7527                           tblptrl	equ	0xFF6
  7528                           tablat	equ	0xFF5
  7529                           prodh	equ	0xFF4
  7530                           prodl	equ	0xFF3
  7531                           intcon	equ	0xFF2
  7532                           postinc0	equ	0xFEE
  7533                           wreg	equ	0xFE8
  7534                           indf1	equ	0xFE7
  7535                           postdec1	equ	0xFE5
  7536                           fsr1h	equ	0xFE2
  7537                           fsr1l	equ	0xFE1
  7538                           indf2	equ	0xFDF
  7539                           fsr2h	equ	0xFDA
  7540                           fsr2l	equ	0xFD9
  7541                           status	equ	0xFD8
  7542                           
  7543 ;; *************** function _OpenEPWM1 *****************
  7544 ;; Defined at:
  7545 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
  7546 ;; Parameters:    Size  Location     Type
  7547 ;;  period          1    wreg     unsigned char 
  7548 ;; Auto vars:     Size  Location     Type
  7549 ;;  period          1    0[BANK0 ] unsigned char 
  7550 ;; Return value:  Size  Location     Type
  7551 ;;		None               void
  7552 ;; Registers used:
  7553 ;;		wreg, status,2
  7554 ;; Tracked objects:
  7555 ;;		On entry : 0/0
  7556 ;;		On exit  : 0/0
  7557 ;;		Unchanged: 0/0
  7558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7559 ;;      Params:         0       0       0       0
  7560 ;;      Locals:         0       1       0       0
  7561 ;;      Temps:          0       0       0       0
  7562 ;;      Totals:         0       1       0       0
  7563 ;;Total ram usage:        1 bytes
  7564 ;; Hardware stack levels used:    1
  7565 ;; Hardware stack levels required when called:    2
  7566 ;; This function calls:
  7567 ;;		Nothing
  7568 ;; This function is called by:
  7569 ;;		_main
  7570 ;; This function uses a non-reentrant model
  7571 ;;
  7572                           
  7573                           	psect	text18
  7574  00286A                     __ptext18:
  7575                           	opt stack 0
  7576  00286A                     _OpenEPWM1:
  7577                           	opt stack 28
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;incstack = 0
  7581                           ;OpenEPWM1@period stored from wreg
  7582  00286A  0100               	movlb	0	; () banked
  7583  00286C  6FAF               	movwf	OpenEPWM1@period& (0+255),b
  7584  00286E  0E0C               	movlw	12
  7585  002870  6EBA               	movwf	4026,c	;volatile
  7586  002872  94CA               	bcf	4042,2,c	;volatile
  7587  002874  C0AF  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  7588  002878  84CA               	bsf	4042,2,c	;volatile
  7589  00287A  0012               	return		;funcret
  7590  00287C                     __end_of_OpenEPWM1:
  7591                           	opt stack 0
  7592                           tblptru	equ	0xFF8
  7593                           tblptrh	equ	0xFF7
  7594                           tblptrl	equ	0xFF6
  7595                           tablat	equ	0xFF5
  7596                           prodh	equ	0xFF4
  7597                           prodl	equ	0xFF3
  7598                           intcon	equ	0xFF2
  7599                           postinc0	equ	0xFEE
  7600                           wreg	equ	0xFE8
  7601                           indf1	equ	0xFE7
  7602                           postdec1	equ	0xFE5
  7603                           fsr1h	equ	0xFE2
  7604                           fsr1l	equ	0xFE1
  7605                           indf2	equ	0xFDF
  7606                           fsr2h	equ	0xFDA
  7607                           fsr2l	equ	0xFD9
  7608                           status	equ	0xFD8
  7609                           
  7610 ;; *************** function _CANisTXwarningON *****************
  7611 ;; Defined at:
  7612 ;;		line 1119 in file "CANlib.h"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;		None
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;		None
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  1    wreg      unsigned char 
  7619 ;; Registers used:
  7620 ;;		wreg
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7626 ;;      Params:         0       0       0       0
  7627 ;;      Locals:         0       0       0       0
  7628 ;;      Temps:          0       0       0       0
  7629 ;;      Totals:         0       0       0       0
  7630 ;;Total ram usage:        0 bytes
  7631 ;; Hardware stack levels used:    1
  7632 ;; Hardware stack levels required when called:    2
  7633 ;; This function calls:
  7634 ;;		Nothing
  7635 ;; This function is called by:
  7636 ;;		_main
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           	psect	text19
  7641  00287C                     __ptext19:
  7642                           	opt stack 0
  7643  00287C                     _CANisTXwarningON:
  7644                           	opt stack 28
  7645                           
  7646                           ;CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7647                           
  7648                           ;incstack = 0
  7649  00287C  A474               	btfss	3956,2,c	;volatile
  7650  00287E  D002               	goto	u6270
  7651  002880  0E01               	movlw	1
  7652  002882  0012               	return	
  7653  002884                     u6270:
  7654  002884  0E00               	movlw	0
  7655  002886  0012               	return	
  7656  002888                     __end_of_CANisTXwarningON:
  7657                           	opt stack 0
  7658                           tblptru	equ	0xFF8
  7659                           tblptrh	equ	0xFF7
  7660                           tblptrl	equ	0xFF6
  7661                           tablat	equ	0xFF5
  7662                           prodh	equ	0xFF4
  7663                           prodl	equ	0xFF3
  7664                           intcon	equ	0xFF2
  7665                           postinc0	equ	0xFEE
  7666                           wreg	equ	0xFE8
  7667                           indf1	equ	0xFE7
  7668                           postdec1	equ	0xFE5
  7669                           fsr1h	equ	0xFE2
  7670                           fsr1l	equ	0xFE1
  7671                           indf2	equ	0xFDF
  7672                           fsr2h	equ	0xFDA
  7673                           fsr2l	equ	0xFD9
  7674                           status	equ	0xFD8
  7675                           
  7676 ;; *************** function _CANisRXwarningON *****************
  7677 ;; Defined at:
  7678 ;;		line 1127 in file "CANlib.h"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;		None
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;		None
  7683 ;; Return value:  Size  Location     Type
  7684 ;;                  1    wreg      unsigned char 
  7685 ;; Registers used:
  7686 ;;		wreg
  7687 ;; Tracked objects:
  7688 ;;		On entry : 0/0
  7689 ;;		On exit  : 0/0
  7690 ;;		Unchanged: 0/0
  7691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7692 ;;      Params:         0       0       0       0
  7693 ;;      Locals:         0       0       0       0
  7694 ;;      Temps:          0       0       0       0
  7695 ;;      Totals:         0       0       0       0
  7696 ;;Total ram usage:        0 bytes
  7697 ;; Hardware stack levels used:    1
  7698 ;; Hardware stack levels required when called:    2
  7699 ;; This function calls:
  7700 ;;		Nothing
  7701 ;; This function is called by:
  7702 ;;		_main
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text20
  7707  002888                     __ptext20:
  7708                           	opt stack 0
  7709  002888                     _CANisRXwarningON:
  7710                           	opt stack 28
  7711                           
  7712                           ;CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7713                           
  7714                           ;incstack = 0
  7715  002888  A274               	btfss	3956,1,c	;volatile
  7716  00288A  D002               	goto	u6280
  7717  00288C  0E01               	movlw	1
  7718  00288E  0012               	return	
  7719  002890                     u6280:
  7720  002890  0E00               	movlw	0
  7721  002892  0012               	return	
  7722  002894                     __end_of_CANisRXwarningON:
  7723                           	opt stack 0
  7724                           tblptru	equ	0xFF8
  7725                           tblptrh	equ	0xFF7
  7726                           tblptrl	equ	0xFF6
  7727                           tablat	equ	0xFF5
  7728                           prodh	equ	0xFF4
  7729                           prodl	equ	0xFF3
  7730                           intcon	equ	0xFF2
  7731                           postinc0	equ	0xFEE
  7732                           wreg	equ	0xFE8
  7733                           indf1	equ	0xFE7
  7734                           postdec1	equ	0xFE5
  7735                           fsr1h	equ	0xFE2
  7736                           fsr1l	equ	0xFE1
  7737                           indf2	equ	0xFDF
  7738                           fsr2h	equ	0xFDA
  7739                           fsr2l	equ	0xFD9
  7740                           status	equ	0xFD8
  7741                           
  7742 ;; *************** function _ISR_bassa *****************
  7743 ;; Defined at:
  7744 ;;		line 89 in file "motore.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;		None
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;		None
  7749 ;; Return value:  Size  Location     Type
  7750 ;;		None               void
  7751 ;; Registers used:
  7752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7753 ;; Tracked objects:
  7754 ;;		On entry : 0/0
  7755 ;;		On exit  : 0/0
  7756 ;;		Unchanged: 0/0
  7757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7758 ;;      Params:         0       0       0       0
  7759 ;;      Locals:         0       0       0       0
  7760 ;;      Temps:         19       0       0       0
  7761 ;;      Totals:        19       0       0       0
  7762 ;;Total ram usage:       19 bytes
  7763 ;; Hardware stack levels used:    1
  7764 ;; Hardware stack levels required when called:    1
  7765 ;; This function calls:
  7766 ;;		_CANisRxReady
  7767 ;;		_CANreceiveMessage
  7768 ;;		i1_SetOutputEPWM1
  7769 ;; This function is called by:
  7770 ;;		Interrupt level 1
  7771 ;; This function uses a non-reentrant model
  7772 ;;
  7773                           
  7774                           	psect	intcodelo
  7775  000018                     __pintcodelo:
  7776                           	opt stack 0
  7777  000018                     _ISR_bassa:
  7778                           	opt stack 26
  7779                           
  7780                           ;incstack = 0
  7781  000018  8043               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7782  00001A  CFD8 F00F          	movff	status,??_ISR_bassa+2
  7783  00001E  CFE8 F010          	movff	wreg,??_ISR_bassa+3
  7784  000022  CFE0 F011          	movff	bsr,??_ISR_bassa+4
  7785  000026  CFFA F012          	movff	pclath,??_ISR_bassa+5
  7786  00002A  CFFB F013          	movff	pclatu,??_ISR_bassa+6
  7787  00002E  CFE9 F014          	movff	fsr0l,??_ISR_bassa+7
  7788  000032  CFEA F015          	movff	fsr0h,??_ISR_bassa+8
  7789  000036  CFE1 F016          	movff	fsr1l,??_ISR_bassa+9
  7790  00003A  CFE2 F017          	movff	fsr1h,??_ISR_bassa+10
  7791  00003E  CFD9 F018          	movff	fsr2l,??_ISR_bassa+11
  7792  000042  CFDA F019          	movff	fsr2h,??_ISR_bassa+12
  7793  000046  CFF3 F01A          	movff	prodl,??_ISR_bassa+13
  7794  00004A  CFF4 F01B          	movff	prodh,??_ISR_bassa+14
  7795  00004E  CFF6 F01C          	movff	tblptrl,??_ISR_bassa+15
  7796  000052  CFF7 F01D          	movff	tblptrh,??_ISR_bassa+16
  7797  000056  CFF8 F01E          	movff	tblptru,??_ISR_bassa+17
  7798  00005A  CFF5 F01F          	movff	tablat,??_ISR_bassa+18
  7799                           
  7800                           ;motore.c: 90: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7801  00005E  A0A4               	btfss	4004,0,c	;volatile
  7802  000060  B2A4               	btfsc	4004,1,c	;volatile
  7803  000062  D001               	goto	i1l3860
  7804  000064  D082               	goto	i1l650
  7805  000066                     i1l3860:
  7806                           
  7807                           ;motore.c: 91: if (CANisRxReady()) {
  7808  000066  EC2A  F014         	call	_CANisRxReady	;wreg free
  7809  00006A  0900               	iorlw	0
  7810  00006C  B4D8               	btfsc	status,2,c
  7811  00006E  D07B               	goto	i1l653
  7812                           
  7813                           ;motore.c: 92: CANreceiveMessage(&msg);
  7814  000070  0E88               	movlw	low _msg
  7815  000072  6E01               	movwf	CANreceiveMessage@msg,c
  7816  000074  0E00               	movlw	high _msg
  7817  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  7818  000078  EC31  F00A         	call	_CANreceiveMessage	;wreg free
  7819                           
  7820                           ;motore.c: 93: if (msg.identifier == 0b00000000000000000000000000011) {
  7821  00007C  0E03               	movlw	3
  7822  00007E  0100               	movlb	0	; () banked
  7823  000080  1988               	xorwf	_msg& (0+255),w,b
  7824  000082  0100               	movlb	0	; () banked
  7825  000084  1189               	iorwf	(_msg+1)& (0+255),w,b
  7826  000086  0100               	movlb	0	; () banked
  7827  000088  118A               	iorwf	(_msg+2)& (0+255),w,b
  7828  00008A  0100               	movlb	0	; () banked
  7829  00008C  118B               	iorwf	(_msg+3)& (0+255),w,b
  7830  00008E  A4D8               	btfss	status,2,c
  7831  000090  D01B               	goto	i1l3878
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;motore.c: 95: requestSpeed = msg.data[0];
  7835  000092  0100               	movlb	0	; () banked
  7836  000094  518C               	movf	(_msg+4)& (0+255),w,b
  7837  000096  6E20               	movwf	_requestSpeed,c	;volatile
  7838  000098  6A21               	clrf	_requestSpeed+1,c	;volatile
  7839  00009A  6A22               	clrf	_requestSpeed+2,c	;volatile
  7840  00009C  6A23               	clrf	_requestSpeed+3,c	;volatile
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;motore.c: 96: dir = msg.data[1];
  7844  00009E  C08D  F040         	movff	_msg+5,_dir	;volatile
  7845  0000A2  6A41               	clrf	_dir+1,c	;volatile
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;motore.c: 97: if (dir == 1) {
  7849  0000A4  0440               	decf	_dir,w,c	;volatile
  7850  0000A6  1041               	iorwf	_dir+1,w,c	;volatile
  7851  0000A8  A4D8               	btfss	status,2,c
  7852  0000AA  D005               	goto	i1l3874
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;motore.c: 98: SetOutputEPWM1(0b01111111, 0b11111100);
  7856  0000AC  0EFC               	movlw	252
  7857  0000AE  6E01               	movwf	i1SetOutputEPWM1@outputmode,c
  7858  0000B0  0E7F               	movlw	127
  7859  0000B2  EC8F  F013         	call	i1_SetOutputEPWM1
  7860  0000B6                     i1l3874:
  7861                           
  7862                           ;motore.c: 99: }
  7863                           ;motore.c: 100: if (dir == 0) {
  7864  0000B6  5040               	movf	_dir,w,c	;volatile
  7865  0000B8  1041               	iorwf	_dir+1,w,c	;volatile
  7866  0000BA  A4D8               	btfss	status,2,c
  7867  0000BC  D005               	goto	i1l3878
  7868                           
  7869                           ;motore.c: 101: SetOutputEPWM1(0b11111111, 0b11111100);
  7870  0000BE  0EFC               	movlw	252
  7871  0000C0  6E01               	movwf	i1SetOutputEPWM1@outputmode,c
  7872  0000C2  0EFF               	movlw	255
  7873  0000C4  EC8F  F013         	call	i1_SetOutputEPWM1
  7874  0000C8                     i1l3878:
  7875                           
  7876                           ;motore.c: 102: }
  7877                           ;motore.c: 106: }
  7878                           ;motore.c: 107: if (msg.identifier == 0b00000000000000000000000000001) {
  7879  0000C8  0100               	movlb	0	; () banked
  7880  0000CA  0588               	decf	_msg& (0+255),w,b
  7881  0000CC  0100               	movlb	0	; () banked
  7882  0000CE  1189               	iorwf	(_msg+1)& (0+255),w,b
  7883  0000D0  0100               	movlb	0	; () banked
  7884  0000D2  118A               	iorwf	(_msg+2)& (0+255),w,b
  7885  0000D4  0100               	movlb	0	; () banked
  7886  0000D6  118B               	iorwf	(_msg+3)& (0+255),w,b
  7887  0000D8  A4D8               	btfss	status,2,c
  7888  0000DA  D009               	goto	i1l3884
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;motore.c: 108: requestSpeed = 0;
  7892  0000DC  0E00               	movlw	0
  7893  0000DE  6E20               	movwf	_requestSpeed,c	;volatile
  7894  0000E0  0E00               	movlw	0
  7895  0000E2  6E21               	movwf	_requestSpeed+1,c	;volatile
  7896  0000E4  0E00               	movlw	0
  7897  0000E6  6E22               	movwf	_requestSpeed+2,c	;volatile
  7898  0000E8  0E00               	movlw	0
  7899  0000EA  6E23               	movwf	_requestSpeed+3,c	;volatile
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;motore.c: 109: PORTAbits.RA1 = 1;
  7903  0000EC  8280               	bsf	3968,1,c	;volatile
  7904  0000EE                     i1l3884:
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;motore.c: 110: }
  7908                           ;motore.c: 111: if (msg.identifier == 0b00000000000000000000000000110) {
  7909  0000EE  0E06               	movlw	6
  7910  0000F0  0100               	movlb	0	; () banked
  7911  0000F2  1988               	xorwf	_msg& (0+255),w,b
  7912  0000F4  0100               	movlb	0	; () banked
  7913  0000F6  1189               	iorwf	(_msg+1)& (0+255),w,b
  7914  0000F8  0100               	movlb	0	; () banked
  7915  0000FA  118A               	iorwf	(_msg+2)& (0+255),w,b
  7916  0000FC  0100               	movlb	0	; () banked
  7917  0000FE  118B               	iorwf	(_msg+3)& (0+255),w,b
  7918  000100  A4D8               	btfss	status,2,c
  7919  000102  D015               	goto	i1l3894
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;motore.c: 117: left_speed = msg.data[1];
  7923  000104  C08D  F032         	movff	_msg+5,_left_speed
  7924  000108  6A33               	clrf	_left_speed+1,c
  7925                           
  7926                           ; BSR set to: 0
  7927                           ;motore.c: 118: left_speed = ((left_speed << 8) | (msg.data[0]));
  7928  00010A  5032               	movf	_left_speed,w,c
  7929  00010C  6E0D               	movwf	??_ISR_bassa& (0+255),c
  7930  00010E  0100               	movlb	0	; () banked
  7931  000110  518C               	movf	(_msg+4)& (0+255),w,b
  7932  000112  6E32               	movwf	_left_speed,c
  7933  000114  C00D  F033         	movff	??_ISR_bassa,_left_speed+1
  7934                           
  7935                           ; BSR set to: 0
  7936                           ;motore.c: 119: right_speed = msg.data[3];
  7937  000118  C08F  F036         	movff	_msg+7,_right_speed
  7938  00011C  6A37               	clrf	_right_speed+1,c
  7939                           
  7940                           ;motore.c: 120: right_speed = ((right_speed << 8) | (msg.data[2]));
  7941  00011E  5036               	movf	_right_speed,w,c
  7942  000120  6E0D               	movwf	??_ISR_bassa& (0+255),c
  7943  000122  0100               	movlb	0	; () banked
  7944  000124  518E               	movf	(_msg+6)& (0+255),w,b
  7945  000126  6E36               	movwf	_right_speed,c
  7946  000128  C00D  F037         	movff	??_ISR_bassa,_right_speed+1
  7947                           
  7948                           ; BSR set to: 0
  7949                           ;motore.c: 121: speed_fetched = 1;
  7950  00012C  803B               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
  7951  00012E                     i1l3894:
  7952                           
  7953                           ; BSR set to: 0
  7954                           ;motore.c: 122: }
  7955                           ;motore.c: 123: if (msg.identifier == 0b00000000000000000000000000010) {
  7956  00012E  0E02               	movlw	2
  7957  000130  0100               	movlb	0	; () banked
  7958  000132  1988               	xorwf	_msg& (0+255),w,b
  7959  000134  0100               	movlb	0	; () banked
  7960  000136  1189               	iorwf	(_msg+1)& (0+255),w,b
  7961  000138  0100               	movlb	0	; () banked
  7962  00013A  118A               	iorwf	(_msg+2)& (0+255),w,b
  7963  00013C  0100               	movlb	0	; () banked
  7964  00013E  118B               	iorwf	(_msg+3)& (0+255),w,b
  7965  000140  B4D8               	btfsc	status,2,c
  7966  000142  D006               	goto	i1l3900
  7967  000144  D010               	goto	i1l653
  7968  000146                     i1l661:
  7969                           
  7970                           ; BSR set to: 0
  7971  000146  823A               	bsf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  7972                           
  7973                           ;motore.c: 126: break;
  7974  000148  D00E               	goto	i1l653
  7975  00014A                     i1l663:
  7976                           
  7977                           ; BSR set to: 0
  7978  00014A  863A               	bsf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  7979  00014C                     i1l664:
  7980                           
  7981                           ; BSR set to: 0
  7982  00014C  843A               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  7983                           
  7984                           ; BSR set to: 0
  7985                           ;motore.c: 132: }
  7986                           
  7987                           ;motore.c: 131: break;
  7988  00014E  D00B               	goto	i1l653
  7989  000150                     i1l3900:
  7990                           
  7991                           ; BSR set to: 0
  7992  000150  0100               	movlb	0	; () banked
  7993  000152  518C               	movf	(_msg+4)& (0+255),w,b
  7994                           
  7995                           ; Switch size 1, requested type "space"
  7996                           ; Number of cases is 3, Range of values is 1 to 3
  7997                           ; switch strategies available:
  7998                           ; Name         Instructions Cycles
  7999                           ; simple_byte           10     6 (average)
  8000                           ;	Chosen strategy is simple_byte
  8001  000154  0A01               	xorlw	1	; case 1
  8002  000156  B4D8               	btfsc	status,2,c
  8003  000158  D7F6               	goto	i1l661
  8004  00015A  0A03               	xorlw	3	; case 2
  8005  00015C  B4D8               	btfsc	status,2,c
  8006  00015E  D7F5               	goto	i1l663
  8007  000160  0A01               	xorlw	1	; case 3
  8008  000162  B4D8               	btfsc	status,2,c
  8009  000164  D7F3               	goto	i1l664
  8010  000166                     i1l653:
  8011                           
  8012                           ;motore.c: 134: }
  8013                           ;motore.c: 135: }
  8014                           ;motore.c: 136: PIR3bits.RXB0IF = 0;
  8015  000166  90A4               	bcf	4004,0,c	;volatile
  8016                           
  8017                           ;motore.c: 137: PIR3bits.RXB1IF = 0;
  8018  000168  92A4               	bcf	4004,1,c	;volatile
  8019  00016A                     i1l650:
  8020                           
  8021                           ;motore.c: 138: }
  8022                           ;motore.c: 139: if (PIR2bits.TMR3IF) {
  8023  00016A  A2A1               	btfss	4001,1,c	;volatile
  8024  00016C  D00B               	goto	i1l666
  8025                           
  8026                           ;motore.c: 140: timeCounter++;
  8027  00016E  0E01               	movlw	1
  8028  000170  2624               	addwf	_timeCounter,f,c
  8029  000172  0E00               	movlw	0
  8030  000174  2225               	addwfc	_timeCounter+1,f,c
  8031  000176  2226               	addwfc	_timeCounter+2,f,c
  8032  000178  2227               	addwfc	_timeCounter+3,f,c
  8033                           
  8034                           ;motore.c: 141: TMR3H = 0x63;
  8035  00017A  0E63               	movlw	99
  8036  00017C  6EB3               	movwf	4019,c	;volatile
  8037                           
  8038                           ;motore.c: 142: TMR3L = 0xC0;
  8039  00017E  0EC0               	movlw	192
  8040  000180  6EB2               	movwf	4018,c	;volatile
  8041                           
  8042                           ;motore.c: 143: PIR2bits.TMR3IF = 0;
  8043  000182  92A1               	bcf	4001,1,c	;volatile
  8044  000184                     i1l666:
  8045  000184  C01F  FFF5         	movff	??_ISR_bassa+18,tablat
  8046  000188  C01E  FFF8         	movff	??_ISR_bassa+17,tblptru
  8047  00018C  C01D  FFF7         	movff	??_ISR_bassa+16,tblptrh
  8048  000190  C01C  FFF6         	movff	??_ISR_bassa+15,tblptrl
  8049  000194  C01B  FFF4         	movff	??_ISR_bassa+14,prodh
  8050  000198  C01A  FFF3         	movff	??_ISR_bassa+13,prodl
  8051  00019C  C019  FFDA         	movff	??_ISR_bassa+12,fsr2h
  8052  0001A0  C018  FFD9         	movff	??_ISR_bassa+11,fsr2l
  8053  0001A4  C017  FFE2         	movff	??_ISR_bassa+10,fsr1h
  8054  0001A8  C016  FFE1         	movff	??_ISR_bassa+9,fsr1l
  8055  0001AC  C015  FFEA         	movff	??_ISR_bassa+8,fsr0h
  8056  0001B0  C014  FFE9         	movff	??_ISR_bassa+7,fsr0l
  8057  0001B4  C013  FFFB         	movff	??_ISR_bassa+6,pclatu
  8058  0001B8  C012  FFFA         	movff	??_ISR_bassa+5,pclath
  8059  0001BC  C011  FFE0         	movff	??_ISR_bassa+4,bsr
  8060  0001C0  C010  FFE8         	movff	??_ISR_bassa+3,wreg
  8061  0001C4  C00F  FFD8         	movff	??_ISR_bassa+2,status
  8062  0001C8  9043               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  8063  0001CA  0010               	retfie	
  8064  0001CC                     __end_of_ISR_bassa:
  8065                           	opt stack 0
  8066                           pclatu	equ	0xFFB
  8067                           pclath	equ	0xFFA
  8068                           tblptru	equ	0xFF8
  8069                           tblptrh	equ	0xFF7
  8070                           tblptrl	equ	0xFF6
  8071                           tablat	equ	0xFF5
  8072                           prodh	equ	0xFF4
  8073                           prodl	equ	0xFF3
  8074                           intcon	equ	0xFF2
  8075                           postinc0	equ	0xFEE
  8076                           fsr0h	equ	0xFEA
  8077                           fsr0l	equ	0xFE9
  8078                           wreg	equ	0xFE8
  8079                           indf1	equ	0xFE7
  8080                           postdec1	equ	0xFE5
  8081                           fsr1h	equ	0xFE2
  8082                           fsr1l	equ	0xFE1
  8083                           bsr	equ	0xFE0
  8084                           indf2	equ	0xFDF
  8085                           fsr2h	equ	0xFDA
  8086                           fsr2l	equ	0xFD9
  8087                           status	equ	0xFD8
  8088                           
  8089 ;; *************** function i1_SetOutputEPWM1 *****************
  8090 ;; Defined at:
  8091 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;  outputconfig    1    wreg     unsigned char 
  8094 ;;  outputmode      1    0[COMRAM] unsigned char 
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;  outputconfig    1    1[COMRAM] unsigned char 
  8097 ;; Return value:  Size  Location     Type
  8098 ;;		None               void
  8099 ;; Registers used:
  8100 ;;		wreg, status,2, status,0
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8106 ;;      Params:         1       0       0       0
  8107 ;;      Locals:         1       0       0       0
  8108 ;;      Temps:          0       0       0       0
  8109 ;;      Totals:         2       0       0       0
  8110 ;;Total ram usage:        2 bytes
  8111 ;; Hardware stack levels used:    1
  8112 ;; This function calls:
  8113 ;;		Nothing
  8114 ;; This function is called by:
  8115 ;;		_ISR_bassa
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           	psect	text22
  8120  00271E                     __ptext22:
  8121                           	opt stack 0
  8122  00271E                     i1_SetOutputEPWM1:
  8123                           	opt stack 26
  8124                           
  8125                           ;incstack = 0
  8126                           ;i1SetOutputEPWM1@outputconfig stored from wreg
  8127  00271E  6E02               	movwf	i1SetOutputEPWM1@outputconfig,c
  8128  002720  50BA               	movf	4026,w,c	;volatile
  8129  002722  09C0               	iorlw	192
  8130  002724  1402               	andwf	i1SetOutputEPWM1@outputconfig,w,c
  8131  002726  6EBA               	movwf	4026,c	;volatile
  8132  002728  50BA               	movf	4026,w,c	;volatile
  8133  00272A  090F               	iorlw	15
  8134  00272C  1401               	andwf	i1SetOutputEPWM1@outputmode,w,c
  8135  00272E  6EBA               	movwf	4026,c	;volatile
  8136  002730  0E3F               	movlw	63
  8137  002732  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  8138  002734  A4D8               	btfss	status,2,c
  8139  002736  D002               	goto	i1l3840
  8140  002738  9895               	bcf	3989,4,c	;volatile
  8141  00273A  0012               	return	
  8142  00273C                     i1l3840:
  8143  00273C  0EBF               	movlw	191
  8144  00273E  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  8145  002740  A4D8               	btfss	status,2,c
  8146  002742  D003               	goto	i1l3844
  8147  002744  9895               	bcf	3989,4,c	;volatile
  8148  002746  9A95               	bcf	3989,5,c	;volatile
  8149  002748  0012               	return	
  8150  00274A                     i1l3844:
  8151  00274A  0E7F               	movlw	127
  8152  00274C  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  8153  00274E  B4D8               	btfsc	status,2,c
  8154  002750  D003               	goto	i1l750
  8155  002752  2802               	incf	i1SetOutputEPWM1@outputconfig,w,c
  8156  002754  A4D8               	btfss	status,2,c
  8157  002756  0012               	return	
  8158  002758                     i1l750:
  8159  002758  9895               	bcf	3989,4,c	;volatile
  8160  00275A  9A95               	bcf	3989,5,c	;volatile
  8161  00275C  9C95               	bcf	3989,6,c	;volatile
  8162  00275E  9E95               	bcf	3989,7,c	;volatile
  8163  002760  0012               	return	
  8164  002762                     __end_ofi1_SetOutputEPWM1:
  8165                           	opt stack 0
  8166                           pclatu	equ	0xFFB
  8167                           pclath	equ	0xFFA
  8168                           tblptru	equ	0xFF8
  8169                           tblptrh	equ	0xFF7
  8170                           tblptrl	equ	0xFF6
  8171                           tablat	equ	0xFF5
  8172                           prodh	equ	0xFF4
  8173                           prodl	equ	0xFF3
  8174                           intcon	equ	0xFF2
  8175                           postinc0	equ	0xFEE
  8176                           fsr0h	equ	0xFEA
  8177                           fsr0l	equ	0xFE9
  8178                           wreg	equ	0xFE8
  8179                           indf1	equ	0xFE7
  8180                           postdec1	equ	0xFE5
  8181                           fsr1h	equ	0xFE2
  8182                           fsr1l	equ	0xFE1
  8183                           bsr	equ	0xFE0
  8184                           indf2	equ	0xFDF
  8185                           fsr2h	equ	0xFDA
  8186                           fsr2l	equ	0xFD9
  8187                           status	equ	0xFD8
  8188                           
  8189 ;; *************** function _CANreceiveMessage *****************
  8190 ;; Defined at:
  8191 ;;		line 528 in file "CANlib.h"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;  msg             2    0[COMRAM] PTR struct .
  8194 ;;		 -> msg(15), 
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;  tamp            1   11[COMRAM] unsigned char 
  8197 ;;  error           1   10[COMRAM] unsigned char 
  8198 ;; Return value:  Size  Location     Type
  8199 ;;                  1    wreg      unsigned char 
  8200 ;; Registers used:
  8201 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8207 ;;      Params:         2       0       0       0
  8208 ;;      Locals:         2       0       0       0
  8209 ;;      Temps:          8       0       0       0
  8210 ;;      Totals:        12       0       0       0
  8211 ;;Total ram usage:       12 bytes
  8212 ;; Hardware stack levels used:    1
  8213 ;; This function calls:
  8214 ;;		Nothing
  8215 ;; This function is called by:
  8216 ;;		_ISR_bassa
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text23
  8221  001462                     __ptext23:
  8222                           	opt stack 0
  8223  001462                     _CANreceiveMessage:
  8224                           	opt stack 26
  8225                           
  8226                           ;CANlib.h: 530: BYTE tamp;
  8227                           ;CANlib.h: 531: BYTE error = 0;
  8228                           
  8229                           ;incstack = 0
  8230  001462  0E00               	movlw	0
  8231  001464  6E0B               	movwf	CANreceiveMessage@error,c
  8232                           
  8233                           ;CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  8234  001466  BE74               	btfsc	3956,7,c	;volatile
  8235                           
  8236                           ;CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  8237  001468  800B               	bsf	CANreceiveMessage@error,0,c
  8238                           
  8239                           ;CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  8240  00146A  BC74               	btfsc	3956,6,c	;volatile
  8241                           
  8242                           ;CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  8243  00146C  820B               	bsf	CANreceiveMessage@error,1,c
  8244                           
  8245                           ;CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  8246  00146E  010F               	movlb	15	; () banked
  8247  001470  AF50               	btfss	80,7,b	;volatile
  8248  001472  D143               	goto	i1l410
  8249                           
  8250                           ; BSR set to: 15
  8251                           ;CANlib.h: 541: {
  8252                           ;CANlib.h: 542: msg->identifier = 0;
  8253  001474  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8254  001478  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8255  00147C  6ADE               	clrf	postinc2,c
  8256  00147E  6ADE               	clrf	postinc2,c
  8257  001480  6ADE               	clrf	postinc2,c
  8258  001482  6ADD               	clrf	postdec2,c
  8259                           
  8260                           ; BSR set to: 15
  8261                           ;CANlib.h: 543: msg->data[0] =RXB1D0;
  8262  001484  EE20 F004          	lfsr	2,4
  8263  001488  5001               	movf	CANreceiveMessage@msg,w,c
  8264  00148A  26D9               	addwf	fsr2l,f,c
  8265  00148C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8266  00148E  22DA               	addwfc	fsr2h,f,c
  8267  001490  CF56 FFDF          	movff	3926,indf2	;volatile
  8268                           
  8269                           ; BSR set to: 15
  8270                           ;CANlib.h: 544: msg->data[1] =RXB1D1;
  8271  001494  EE20 F005          	lfsr	2,5
  8272  001498  5001               	movf	CANreceiveMessage@msg,w,c
  8273  00149A  26D9               	addwf	fsr2l,f,c
  8274  00149C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8275  00149E  22DA               	addwfc	fsr2h,f,c
  8276  0014A0  CF57 FFDF          	movff	3927,indf2	;volatile
  8277                           
  8278                           ; BSR set to: 15
  8279                           ;CANlib.h: 545: msg->data[2] =RXB1D2;
  8280  0014A4  EE20 F006          	lfsr	2,6
  8281  0014A8  5001               	movf	CANreceiveMessage@msg,w,c
  8282  0014AA  26D9               	addwf	fsr2l,f,c
  8283  0014AC  5002               	movf	CANreceiveMessage@msg+1,w,c
  8284  0014AE  22DA               	addwfc	fsr2h,f,c
  8285  0014B0  CF58 FFDF          	movff	3928,indf2	;volatile
  8286                           
  8287                           ; BSR set to: 15
  8288                           ;CANlib.h: 546: msg->data[3] =RXB1D3;
  8289  0014B4  EE20 F007          	lfsr	2,7
  8290  0014B8  5001               	movf	CANreceiveMessage@msg,w,c
  8291  0014BA  26D9               	addwf	fsr2l,f,c
  8292  0014BC  5002               	movf	CANreceiveMessage@msg+1,w,c
  8293  0014BE  22DA               	addwfc	fsr2h,f,c
  8294  0014C0  CF59 FFDF          	movff	3929,indf2	;volatile
  8295                           
  8296                           ; BSR set to: 15
  8297                           ;CANlib.h: 547: msg->data[4] =RXB1D4;
  8298  0014C4  EE20 F008          	lfsr	2,8
  8299  0014C8  5001               	movf	CANreceiveMessage@msg,w,c
  8300  0014CA  26D9               	addwf	fsr2l,f,c
  8301  0014CC  5002               	movf	CANreceiveMessage@msg+1,w,c
  8302  0014CE  22DA               	addwfc	fsr2h,f,c
  8303  0014D0  CF5A FFDF          	movff	3930,indf2	;volatile
  8304                           
  8305                           ; BSR set to: 15
  8306                           ;CANlib.h: 548: msg->data[5] =RXB1D5;
  8307  0014D4  EE20 F009          	lfsr	2,9
  8308  0014D8  5001               	movf	CANreceiveMessage@msg,w,c
  8309  0014DA  26D9               	addwf	fsr2l,f,c
  8310  0014DC  5002               	movf	CANreceiveMessage@msg+1,w,c
  8311  0014DE  22DA               	addwfc	fsr2h,f,c
  8312  0014E0  CF5B FFDF          	movff	3931,indf2	;volatile
  8313                           
  8314                           ; BSR set to: 15
  8315                           ;CANlib.h: 549: msg->data[6] =RXB1D6;
  8316  0014E4  EE20 F00A          	lfsr	2,10
  8317  0014E8  5001               	movf	CANreceiveMessage@msg,w,c
  8318  0014EA  26D9               	addwf	fsr2l,f,c
  8319  0014EC  5002               	movf	CANreceiveMessage@msg+1,w,c
  8320  0014EE  22DA               	addwfc	fsr2h,f,c
  8321  0014F0  CF5C FFDF          	movff	3932,indf2	;volatile
  8322                           
  8323                           ; BSR set to: 15
  8324                           ;CANlib.h: 550: msg->data[7] =RXB1D7;
  8325  0014F4  EE20 F00B          	lfsr	2,11
  8326  0014F8  5001               	movf	CANreceiveMessage@msg,w,c
  8327  0014FA  26D9               	addwf	fsr2l,f,c
  8328  0014FC  5002               	movf	CANreceiveMessage@msg+1,w,c
  8329  0014FE  22DA               	addwfc	fsr2h,f,c
  8330  001500  CF5D FFDF          	movff	3933,indf2	;volatile
  8331                           
  8332                           ; BSR set to: 15
  8333                           ;CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  8334  001504  EE20 F00E          	lfsr	2,14
  8335  001508  5001               	movf	CANreceiveMessage@msg,w,c
  8336  00150A  26D9               	addwf	fsr2l,f,c
  8337  00150C  5002               	movf	CANreceiveMessage@msg+1,w,c
  8338  00150E  22DA               	addwfc	fsr2h,f,c
  8339  001510  010F               	movlb	15	; () banked
  8340  001512  AD55               	btfss	85,6,b	;volatile
  8341  001514  D002               	goto	i1u394_20
  8342  001516  0E01               	movlw	1
  8343  001518  D001               	goto	i1u394_26
  8344  00151A                     i1u394_20:
  8345  00151A  0E00               	movlw	0
  8346  00151C                     i1u394_26:
  8347  00151C  6EDF               	movwf	indf2,c
  8348                           
  8349                           ; BSR set to: 15
  8350                           ;CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  8351  00151E  EE20 F00D          	lfsr	2,13
  8352  001522  5001               	movf	CANreceiveMessage@msg,w,c
  8353  001524  26D9               	addwf	fsr2l,f,c
  8354  001526  5002               	movf	CANreceiveMessage@msg+1,w,c
  8355  001528  22DA               	addwfc	fsr2h,f,c
  8356  00152A  010F               	movlb	15	; () banked
  8357  00152C  5155               	movf	85,w,b	;volatile
  8358  00152E  0B0F               	andlw	15
  8359  001530  6EDF               	movwf	indf2,c
  8360                           
  8361                           ; BSR set to: 15
  8362                           ;CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  8363  001532  EE20 F00C          	lfsr	2,12
  8364  001536  5001               	movf	CANreceiveMessage@msg,w,c
  8365  001538  26D9               	addwf	fsr2l,f,c
  8366  00153A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8367  00153C  22DA               	addwfc	fsr2h,f,c
  8368  00153E  010F               	movlb	15	; () banked
  8369  001540  A752               	btfss	82,3,b	;volatile
  8370  001542  D002               	goto	i1u395_20
  8371  001544  0E01               	movlw	1
  8372  001546  D001               	goto	i1u395_26
  8373  001548                     i1u395_20:
  8374  001548  0E00               	movlw	0
  8375  00154A                     i1u395_26:
  8376  00154A  6EDF               	movwf	indf2,c
  8377                           
  8378                           ; BSR set to: 15
  8379                           ;CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  8380  00154C  010F               	movlb	15	; () banked
  8381  00154E  B752               	btfsc	82,3,b	;volatile
  8382  001550  D044               	goto	i1l3536
  8383                           
  8384                           ; BSR set to: 15
  8385                           ;CANlib.h: 559: {
  8386                           ;CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  8387  001552  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8388  001556  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8389  001558  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8390  00155A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8391  00155C  0E03               	movlw	3
  8392  00155E                     i1u397_25:
  8393  00155E  90D8               	bcf	status,0,c
  8394  001560  3603               	rlcf	??_CANreceiveMessage,f,c
  8395  001562  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8396  001564  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8397  001566  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8398  001568  2EE8               	decfsz	wreg,f,c
  8399  00156A  D7F9               	goto	i1u397_25
  8400  00156C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8401  001570  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8402  001574  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8403  001578  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8404  00157C  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8405  001580  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8406                           
  8407                           ; BSR set to: 15
  8408                           ;CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  8409  001584  010F               	movlb	15	; () banked
  8410  001586  3952               	swapf	82,w,b	;volatile
  8411  001588  42E8               	rrncf	wreg,f,c
  8412  00158A  0B07               	andlw	7
  8413  00158C  0B07               	andlw	7
  8414  00158E  6E0C               	movwf	CANreceiveMessage@tamp,c
  8415                           
  8416                           ; BSR set to: 15
  8417                           ;CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  8418  001590  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8419  001594  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8420  001598  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8421  00159C  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8422  0015A0  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8423  0015A4  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8424  0015A8  500C               	movf	CANreceiveMessage@tamp,w,c
  8425  0015AA  2403               	addwf	??_CANreceiveMessage,w,c
  8426  0015AC  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8427  0015AE  0E00               	movlw	0
  8428  0015B0  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8429  0015B2  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8430  0015B4  0E00               	movlw	0
  8431  0015B6  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8432  0015B8  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8433  0015BA  0E00               	movlw	0
  8434  0015BC  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8435  0015BE  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8436  0015C0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8437  0015C4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8438  0015C8  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8439  0015CC  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8440  0015D0  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8441  0015D4  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8442                           
  8443                           ;CANlib.h: 563: }
  8444  0015D8  D08D               	goto	i1l3562
  8445  0015DA                     i1l3536:
  8446                           
  8447                           ; BSR set to: 15
  8448                           ;CANlib.h: 564: else
  8449                           ;CANlib.h: 565: {
  8450                           ;CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  8451  0015DA  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  8452  0015DE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8453  0015E0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8454  0015E2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8455  0015E4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8456  0015E8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8457  0015EC  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8458  0015F0  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8459  0015F4  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8460  0015F8  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8461                           
  8462                           ; BSR set to: 15
  8463                           ;CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  8464  0015FC  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  8465  001600  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8466  001602  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8467  001604  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8468  001606  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8469  00160A  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8470  00160E  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8471  001612  6A03               	clrf	??_CANreceiveMessage,c
  8472  001614  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8473  001618  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8474  00161C  5003               	movf	??_CANreceiveMessage,w,c
  8475  00161E  26DE               	addwf	postinc2,f,c
  8476  001620  5004               	movf	??_CANreceiveMessage+1,w,c
  8477  001622  22DE               	addwfc	postinc2,f,c
  8478  001624  5005               	movf	??_CANreceiveMessage+2,w,c
  8479  001626  22DE               	addwfc	postinc2,f,c
  8480  001628  5006               	movf	??_CANreceiveMessage+3,w,c
  8481  00162A  22DE               	addwfc	postinc2,f,c
  8482                           
  8483                           ; BSR set to: 15
  8484                           ;CANlib.h: 569: if (RXB1SIDLbits.EID16)
  8485  00162C  010F               	movlb	15	; () banked
  8486  00162E  A152               	btfss	82,0,b	;volatile
  8487  001630  D00C               	goto	i1l3544
  8488                           
  8489                           ; BSR set to: 15
  8490                           ;CANlib.h: 570: msg->identifier |= 0x00010000;
  8491  001632  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8492  001636  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8493  00163A  0E00               	movlw	0
  8494  00163C  12DE               	iorwf	postinc2,f,c
  8495  00163E  0E00               	movlw	0
  8496  001640  12DE               	iorwf	postinc2,f,c
  8497  001642  0E01               	movlw	1
  8498  001644  12DE               	iorwf	postinc2,f,c
  8499  001646  0E00               	movlw	0
  8500  001648  12DE               	iorwf	postinc2,f,c
  8501  00164A                     i1l3544:
  8502                           
  8503                           ; BSR set to: 15
  8504                           ;CANlib.h: 571: if (RXB1SIDLbits.EID17)
  8505  00164A  010F               	movlb	15	; () banked
  8506  00164C  A352               	btfss	82,1,b	;volatile
  8507  00164E  D00C               	goto	i1l3548
  8508                           
  8509                           ; BSR set to: 15
  8510                           ;CANlib.h: 572: msg->identifier |= 0x00020000;
  8511  001650  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8512  001654  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8513  001658  0E00               	movlw	0
  8514  00165A  12DE               	iorwf	postinc2,f,c
  8515  00165C  0E00               	movlw	0
  8516  00165E  12DE               	iorwf	postinc2,f,c
  8517  001660  0E02               	movlw	2
  8518  001662  12DE               	iorwf	postinc2,f,c
  8519  001664  0E00               	movlw	0
  8520  001666  12DE               	iorwf	postinc2,f,c
  8521  001668                     i1l3548:
  8522                           
  8523                           ; BSR set to: 15
  8524                           ;CANlib.h: 573: if (RXB1SIDLbits.SID0)
  8525  001668  010F               	movlb	15	; () banked
  8526  00166A  AB52               	btfss	82,5,b	;volatile
  8527  00166C  D00C               	goto	i1l3552
  8528                           
  8529                           ; BSR set to: 15
  8530                           ;CANlib.h: 574: msg->identifier |= 0x00040000;
  8531  00166E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8532  001672  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8533  001676  0E00               	movlw	0
  8534  001678  12DE               	iorwf	postinc2,f,c
  8535  00167A  0E00               	movlw	0
  8536  00167C  12DE               	iorwf	postinc2,f,c
  8537  00167E  0E04               	movlw	4
  8538  001680  12DE               	iorwf	postinc2,f,c
  8539  001682  0E00               	movlw	0
  8540  001684  12DE               	iorwf	postinc2,f,c
  8541  001686                     i1l3552:
  8542                           
  8543                           ; BSR set to: 15
  8544                           ;CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8545  001686  010F               	movlb	15	; () banked
  8546  001688  AD52               	btfss	82,6,b	;volatile
  8547  00168A  D00C               	goto	i1l3556
  8548                           
  8549                           ; BSR set to: 15
  8550                           ;CANlib.h: 576: msg->identifier |= 0x00080000;
  8551  00168C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8552  001690  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8553  001694  0E00               	movlw	0
  8554  001696  12DE               	iorwf	postinc2,f,c
  8555  001698  0E00               	movlw	0
  8556  00169A  12DE               	iorwf	postinc2,f,c
  8557  00169C  0E08               	movlw	8
  8558  00169E  12DE               	iorwf	postinc2,f,c
  8559  0016A0  0E00               	movlw	0
  8560  0016A2  12DE               	iorwf	postinc2,f,c
  8561  0016A4                     i1l3556:
  8562                           
  8563                           ; BSR set to: 15
  8564                           ;CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8565  0016A4  010F               	movlb	15	; () banked
  8566  0016A6  AF52               	btfss	82,7,b	;volatile
  8567  0016A8  D00C               	goto	i1l3560
  8568                           
  8569                           ; BSR set to: 15
  8570                           ;CANlib.h: 578: msg->identifier |= 0x00100000;
  8571  0016AA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8572  0016AE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8573  0016B2  0E00               	movlw	0
  8574  0016B4  12DE               	iorwf	postinc2,f,c
  8575  0016B6  0E00               	movlw	0
  8576  0016B8  12DE               	iorwf	postinc2,f,c
  8577  0016BA  0E10               	movlw	16
  8578  0016BC  12DE               	iorwf	postinc2,f,c
  8579  0016BE  0E00               	movlw	0
  8580  0016C0  12DE               	iorwf	postinc2,f,c
  8581  0016C2                     i1l3560:
  8582                           
  8583                           ; BSR set to: 15
  8584                           ;CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8585  0016C2  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8586  0016C6  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8587  0016C8  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8588  0016CA  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8589  0016CC  0E15               	movlw	21
  8590  0016CE                     i1u403_25:
  8591  0016CE  90D8               	bcf	status,0,c
  8592  0016D0  3603               	rlcf	??_CANreceiveMessage,f,c
  8593  0016D2  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8594  0016D4  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8595  0016D6  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8596  0016D8  2EE8               	decfsz	wreg,f,c
  8597  0016DA  D7F9               	goto	i1u403_25
  8598  0016DC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8599  0016E0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8600  0016E4  5003               	movf	??_CANreceiveMessage,w,c
  8601  0016E6  12DE               	iorwf	postinc2,f,c
  8602  0016E8  5004               	movf	??_CANreceiveMessage+1,w,c
  8603  0016EA  12DE               	iorwf	postinc2,f,c
  8604  0016EC  5005               	movf	??_CANreceiveMessage+2,w,c
  8605  0016EE  12DE               	iorwf	postinc2,f,c
  8606  0016F0  5006               	movf	??_CANreceiveMessage+3,w,c
  8607  0016F2  12DE               	iorwf	postinc2,f,c
  8608  0016F4                     i1l3562:
  8609                           
  8610                           ; BSR set to: 15
  8611                           ;CANlib.h: 581: }
  8612                           ;CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8613  0016F4  010F               	movlb	15	; () banked
  8614  0016F6  9F50               	bcf	80,7,b	;volatile
  8615                           
  8616                           ; BSR set to: 15
  8617                           ;CANlib.h: 584: return (error);
  8618                           ;	Return value of _CANreceiveMessage is never used
  8619  0016F8  0012               	return	
  8620  0016FA                     i1l410:
  8621                           
  8622                           ; BSR set to: 15
  8623                           ;CANlib.h: 585: }
  8624                           ;CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8625  0016FA  AE60               	btfss	3936,7,c	;volatile
  8626  0016FC  0012               	return	
  8627                           
  8628                           ; BSR set to: 15
  8629                           ;CANlib.h: 588: {
  8630                           ;CANlib.h: 589: msg->identifier = 0;
  8631  0016FE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8632  001702  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8633  001706  6ADE               	clrf	postinc2,c
  8634  001708  6ADE               	clrf	postinc2,c
  8635  00170A  6ADE               	clrf	postinc2,c
  8636  00170C  6ADD               	clrf	postdec2,c
  8637                           
  8638                           ; BSR set to: 15
  8639                           ;CANlib.h: 590: msg->data[0] =RXB0D0;
  8640  00170E  EE20 F004          	lfsr	2,4
  8641  001712  5001               	movf	CANreceiveMessage@msg,w,c
  8642  001714  26D9               	addwf	fsr2l,f,c
  8643  001716  5002               	movf	CANreceiveMessage@msg+1,w,c
  8644  001718  22DA               	addwfc	fsr2h,f,c
  8645  00171A  CF66 FFDF          	movff	3942,indf2	;volatile
  8646                           
  8647                           ; BSR set to: 15
  8648                           ;CANlib.h: 591: msg->data[1] =RXB0D1;
  8649  00171E  EE20 F005          	lfsr	2,5
  8650  001722  5001               	movf	CANreceiveMessage@msg,w,c
  8651  001724  26D9               	addwf	fsr2l,f,c
  8652  001726  5002               	movf	CANreceiveMessage@msg+1,w,c
  8653  001728  22DA               	addwfc	fsr2h,f,c
  8654  00172A  CF67 FFDF          	movff	3943,indf2	;volatile
  8655                           
  8656                           ; BSR set to: 15
  8657                           ;CANlib.h: 592: msg->data[2] =RXB0D2;
  8658  00172E  EE20 F006          	lfsr	2,6
  8659  001732  5001               	movf	CANreceiveMessage@msg,w,c
  8660  001734  26D9               	addwf	fsr2l,f,c
  8661  001736  5002               	movf	CANreceiveMessage@msg+1,w,c
  8662  001738  22DA               	addwfc	fsr2h,f,c
  8663  00173A  CF68 FFDF          	movff	3944,indf2	;volatile
  8664                           
  8665                           ; BSR set to: 15
  8666                           ;CANlib.h: 593: msg->data[3] =RXB0D3;
  8667  00173E  EE20 F007          	lfsr	2,7
  8668  001742  5001               	movf	CANreceiveMessage@msg,w,c
  8669  001744  26D9               	addwf	fsr2l,f,c
  8670  001746  5002               	movf	CANreceiveMessage@msg+1,w,c
  8671  001748  22DA               	addwfc	fsr2h,f,c
  8672  00174A  CF69 FFDF          	movff	3945,indf2	;volatile
  8673                           
  8674                           ; BSR set to: 15
  8675                           ;CANlib.h: 594: msg->data[4] =RXB0D4;
  8676  00174E  EE20 F008          	lfsr	2,8
  8677  001752  5001               	movf	CANreceiveMessage@msg,w,c
  8678  001754  26D9               	addwf	fsr2l,f,c
  8679  001756  5002               	movf	CANreceiveMessage@msg+1,w,c
  8680  001758  22DA               	addwfc	fsr2h,f,c
  8681  00175A  CF6A FFDF          	movff	3946,indf2	;volatile
  8682                           
  8683                           ; BSR set to: 15
  8684                           ;CANlib.h: 595: msg->data[5] =RXB0D5;
  8685  00175E  EE20 F009          	lfsr	2,9
  8686  001762  5001               	movf	CANreceiveMessage@msg,w,c
  8687  001764  26D9               	addwf	fsr2l,f,c
  8688  001766  5002               	movf	CANreceiveMessage@msg+1,w,c
  8689  001768  22DA               	addwfc	fsr2h,f,c
  8690  00176A  CF6B FFDF          	movff	3947,indf2	;volatile
  8691                           
  8692                           ; BSR set to: 15
  8693                           ;CANlib.h: 596: msg->data[6] =RXB0D6;
  8694  00176E  EE20 F00A          	lfsr	2,10
  8695  001772  5001               	movf	CANreceiveMessage@msg,w,c
  8696  001774  26D9               	addwf	fsr2l,f,c
  8697  001776  5002               	movf	CANreceiveMessage@msg+1,w,c
  8698  001778  22DA               	addwfc	fsr2h,f,c
  8699  00177A  CF6C FFDF          	movff	3948,indf2	;volatile
  8700                           
  8701                           ; BSR set to: 15
  8702                           ;CANlib.h: 597: msg->data[7] =RXB0D7;
  8703  00177E  EE20 F00B          	lfsr	2,11
  8704  001782  5001               	movf	CANreceiveMessage@msg,w,c
  8705  001784  26D9               	addwf	fsr2l,f,c
  8706  001786  5002               	movf	CANreceiveMessage@msg+1,w,c
  8707  001788  22DA               	addwfc	fsr2h,f,c
  8708  00178A  CF6D FFDF          	movff	3949,indf2	;volatile
  8709                           
  8710                           ; BSR set to: 15
  8711                           ;CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8712  00178E  EE20 F00E          	lfsr	2,14
  8713  001792  5001               	movf	CANreceiveMessage@msg,w,c
  8714  001794  26D9               	addwf	fsr2l,f,c
  8715  001796  5002               	movf	CANreceiveMessage@msg+1,w,c
  8716  001798  22DA               	addwfc	fsr2h,f,c
  8717  00179A  AC65               	btfss	3941,6,c	;volatile
  8718  00179C  D002               	goto	i1u405_20
  8719  00179E  0E01               	movlw	1
  8720  0017A0  D001               	goto	i1u405_26
  8721  0017A2                     i1u405_20:
  8722  0017A2  0E00               	movlw	0
  8723  0017A4                     i1u405_26:
  8724  0017A4  6EDF               	movwf	indf2,c
  8725                           
  8726                           ; BSR set to: 15
  8727                           ;CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8728  0017A6  EE20 F00D          	lfsr	2,13
  8729  0017AA  5001               	movf	CANreceiveMessage@msg,w,c
  8730  0017AC  26D9               	addwf	fsr2l,f,c
  8731  0017AE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8732  0017B0  22DA               	addwfc	fsr2h,f,c
  8733  0017B2  5065               	movf	3941,w,c	;volatile
  8734  0017B4  0B0F               	andlw	15
  8735  0017B6  6EDF               	movwf	indf2,c
  8736                           
  8737                           ; BSR set to: 15
  8738                           ;CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8739  0017B8  EE20 F00C          	lfsr	2,12
  8740  0017BC  5001               	movf	CANreceiveMessage@msg,w,c
  8741  0017BE  26D9               	addwf	fsr2l,f,c
  8742  0017C0  5002               	movf	CANreceiveMessage@msg+1,w,c
  8743  0017C2  22DA               	addwfc	fsr2h,f,c
  8744  0017C4  A662               	btfss	3938,3,c	;volatile
  8745  0017C6  D002               	goto	i1u406_20
  8746  0017C8  0E01               	movlw	1
  8747  0017CA  D001               	goto	i1u406_26
  8748  0017CC                     i1u406_20:
  8749  0017CC  0E00               	movlw	0
  8750  0017CE                     i1u406_26:
  8751  0017CE  6EDF               	movwf	indf2,c
  8752                           
  8753                           ; BSR set to: 15
  8754                           ;CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8755  0017D0  B662               	btfsc	3938,3,c	;volatile
  8756  0017D2  D043               	goto	i1l3598
  8757                           
  8758                           ; BSR set to: 15
  8759                           ;CANlib.h: 606: {
  8760                           ;CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8761  0017D4  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8762  0017D8  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8763  0017DA  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8764  0017DC  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8765  0017DE  0E03               	movlw	3
  8766  0017E0                     i1u408_25:
  8767  0017E0  90D8               	bcf	status,0,c
  8768  0017E2  3603               	rlcf	??_CANreceiveMessage,f,c
  8769  0017E4  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8770  0017E6  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8771  0017E8  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8772  0017EA  2EE8               	decfsz	wreg,f,c
  8773  0017EC  D7F9               	goto	i1u408_25
  8774  0017EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8775  0017F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8776  0017F6  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8777  0017FA  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8778  0017FE  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8779  001802  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8780                           
  8781                           ; BSR set to: 15
  8782                           ;CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8783  001806  3862               	swapf	3938,w,c	;volatile
  8784  001808  42E8               	rrncf	wreg,f,c
  8785  00180A  0B07               	andlw	7
  8786  00180C  0B07               	andlw	7
  8787  00180E  6E0C               	movwf	CANreceiveMessage@tamp,c
  8788                           
  8789                           ; BSR set to: 15
  8790                           ;CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8791  001810  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8792  001814  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8793  001818  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8794  00181C  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8795  001820  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8796  001824  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8797  001828  500C               	movf	CANreceiveMessage@tamp,w,c
  8798  00182A  2403               	addwf	??_CANreceiveMessage,w,c
  8799  00182C  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8800  00182E  0E00               	movlw	0
  8801  001830  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8802  001832  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8803  001834  0E00               	movlw	0
  8804  001836  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8805  001838  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8806  00183A  0E00               	movlw	0
  8807  00183C  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8808  00183E  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8809  001840  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8810  001844  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8811  001848  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8812  00184C  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8813  001850  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8814  001854  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8815                           
  8816                           ;CANlib.h: 610: }
  8817  001858  D088               	goto	i1l3624
  8818  00185A                     i1l3598:
  8819                           
  8820                           ; BSR set to: 15
  8821                           ;CANlib.h: 611: else
  8822                           ;CANlib.h: 612: {
  8823                           ;CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8824  00185A  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8825  00185E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8826  001860  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8827  001862  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8828  001864  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8829  001868  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8830  00186C  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8831  001870  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8832  001874  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8833  001878  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8834                           
  8835                           ; BSR set to: 15
  8836                           ;CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8837  00187C  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8838  001880  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8839  001882  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8840  001884  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8841  001886  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8842  00188A  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8843  00188E  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8844  001892  6A03               	clrf	??_CANreceiveMessage,c
  8845  001894  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8846  001898  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8847  00189C  5003               	movf	??_CANreceiveMessage,w,c
  8848  00189E  26DE               	addwf	postinc2,f,c
  8849  0018A0  5004               	movf	??_CANreceiveMessage+1,w,c
  8850  0018A2  22DE               	addwfc	postinc2,f,c
  8851  0018A4  5005               	movf	??_CANreceiveMessage+2,w,c
  8852  0018A6  22DE               	addwfc	postinc2,f,c
  8853  0018A8  5006               	movf	??_CANreceiveMessage+3,w,c
  8854  0018AA  22DE               	addwfc	postinc2,f,c
  8855                           
  8856                           ; BSR set to: 15
  8857                           ;CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8858  0018AC  A062               	btfss	3938,0,c	;volatile
  8859  0018AE  D00C               	goto	i1l3606
  8860                           
  8861                           ; BSR set to: 15
  8862                           ;CANlib.h: 617: msg->identifier |= 0x00010000;
  8863  0018B0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8864  0018B4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8865  0018B8  0E00               	movlw	0
  8866  0018BA  12DE               	iorwf	postinc2,f,c
  8867  0018BC  0E00               	movlw	0
  8868  0018BE  12DE               	iorwf	postinc2,f,c
  8869  0018C0  0E01               	movlw	1
  8870  0018C2  12DE               	iorwf	postinc2,f,c
  8871  0018C4  0E00               	movlw	0
  8872  0018C6  12DE               	iorwf	postinc2,f,c
  8873  0018C8                     i1l3606:
  8874                           
  8875                           ; BSR set to: 15
  8876                           ;CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8877  0018C8  A262               	btfss	3938,1,c	;volatile
  8878  0018CA  D00C               	goto	i1l3610
  8879                           
  8880                           ; BSR set to: 15
  8881                           ;CANlib.h: 619: msg->identifier |= 0x00020000;
  8882  0018CC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8883  0018D0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8884  0018D4  0E00               	movlw	0
  8885  0018D6  12DE               	iorwf	postinc2,f,c
  8886  0018D8  0E00               	movlw	0
  8887  0018DA  12DE               	iorwf	postinc2,f,c
  8888  0018DC  0E02               	movlw	2
  8889  0018DE  12DE               	iorwf	postinc2,f,c
  8890  0018E0  0E00               	movlw	0
  8891  0018E2  12DE               	iorwf	postinc2,f,c
  8892  0018E4                     i1l3610:
  8893                           
  8894                           ; BSR set to: 15
  8895                           ;CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8896  0018E4  AA62               	btfss	3938,5,c	;volatile
  8897  0018E6  D00C               	goto	i1l3614
  8898                           
  8899                           ; BSR set to: 15
  8900                           ;CANlib.h: 621: msg->identifier |= 0x00040000;
  8901  0018E8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8902  0018EC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8903  0018F0  0E00               	movlw	0
  8904  0018F2  12DE               	iorwf	postinc2,f,c
  8905  0018F4  0E00               	movlw	0
  8906  0018F6  12DE               	iorwf	postinc2,f,c
  8907  0018F8  0E04               	movlw	4
  8908  0018FA  12DE               	iorwf	postinc2,f,c
  8909  0018FC  0E00               	movlw	0
  8910  0018FE  12DE               	iorwf	postinc2,f,c
  8911  001900                     i1l3614:
  8912                           
  8913                           ; BSR set to: 15
  8914                           ;CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8915  001900  AC62               	btfss	3938,6,c	;volatile
  8916  001902  D00C               	goto	i1l3618
  8917                           
  8918                           ; BSR set to: 15
  8919                           ;CANlib.h: 623: msg->identifier |= 0x00080000;
  8920  001904  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8921  001908  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8922  00190C  0E00               	movlw	0
  8923  00190E  12DE               	iorwf	postinc2,f,c
  8924  001910  0E00               	movlw	0
  8925  001912  12DE               	iorwf	postinc2,f,c
  8926  001914  0E08               	movlw	8
  8927  001916  12DE               	iorwf	postinc2,f,c
  8928  001918  0E00               	movlw	0
  8929  00191A  12DE               	iorwf	postinc2,f,c
  8930  00191C                     i1l3618:
  8931                           
  8932                           ; BSR set to: 15
  8933                           ;CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8934  00191C  AE62               	btfss	3938,7,c	;volatile
  8935  00191E  D00C               	goto	i1l3622
  8936                           
  8937                           ; BSR set to: 15
  8938                           ;CANlib.h: 625: msg->identifier |= 0x00100000;
  8939  001920  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8940  001924  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8941  001928  0E00               	movlw	0
  8942  00192A  12DE               	iorwf	postinc2,f,c
  8943  00192C  0E00               	movlw	0
  8944  00192E  12DE               	iorwf	postinc2,f,c
  8945  001930  0E10               	movlw	16
  8946  001932  12DE               	iorwf	postinc2,f,c
  8947  001934  0E00               	movlw	0
  8948  001936  12DE               	iorwf	postinc2,f,c
  8949  001938                     i1l3622:
  8950                           
  8951                           ; BSR set to: 15
  8952                           ;CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8953  001938  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8954  00193C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8955  00193E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8956  001940  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8957  001942  0E15               	movlw	21
  8958  001944                     i1u414_25:
  8959  001944  90D8               	bcf	status,0,c
  8960  001946  3603               	rlcf	??_CANreceiveMessage,f,c
  8961  001948  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8962  00194A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8963  00194C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8964  00194E  2EE8               	decfsz	wreg,f,c
  8965  001950  D7F9               	goto	i1u414_25
  8966  001952  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8967  001956  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8968  00195A  5003               	movf	??_CANreceiveMessage,w,c
  8969  00195C  12DE               	iorwf	postinc2,f,c
  8970  00195E  5004               	movf	??_CANreceiveMessage+1,w,c
  8971  001960  12DE               	iorwf	postinc2,f,c
  8972  001962  5005               	movf	??_CANreceiveMessage+2,w,c
  8973  001964  12DE               	iorwf	postinc2,f,c
  8974  001966  5006               	movf	??_CANreceiveMessage+3,w,c
  8975  001968  12DE               	iorwf	postinc2,f,c
  8976  00196A                     i1l3624:
  8977                           
  8978                           ; BSR set to: 15
  8979                           ;CANlib.h: 629: }
  8980                           ;CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8981  00196A  9E60               	bcf	3936,7,c	;volatile
  8982                           
  8983                           ; BSR set to: 15
  8984                           ;CANlib.h: 632: return (error);
  8985                           ;	Return value of _CANreceiveMessage is never used
  8986  00196C  0012               	return	
  8987  00196E                     __end_of_CANreceiveMessage:
  8988                           	opt stack 0
  8989                           pclatu	equ	0xFFB
  8990                           pclath	equ	0xFFA
  8991                           tblptru	equ	0xFF8
  8992                           tblptrh	equ	0xFF7
  8993                           tblptrl	equ	0xFF6
  8994                           tablat	equ	0xFF5
  8995                           prodh	equ	0xFF4
  8996                           prodl	equ	0xFF3
  8997                           intcon	equ	0xFF2
  8998                           postinc0	equ	0xFEE
  8999                           fsr0h	equ	0xFEA
  9000                           fsr0l	equ	0xFE9
  9001                           wreg	equ	0xFE8
  9002                           indf1	equ	0xFE7
  9003                           postdec1	equ	0xFE5
  9004                           fsr1h	equ	0xFE2
  9005                           fsr1l	equ	0xFE1
  9006                           bsr	equ	0xFE0
  9007                           indf2	equ	0xFDF
  9008                           postinc2	equ	0xFDE
  9009                           postdec2	equ	0xFDD
  9010                           fsr2h	equ	0xFDA
  9011                           fsr2l	equ	0xFD9
  9012                           status	equ	0xFD8
  9013                           
  9014 ;; *************** function _CANisRxReady *****************
  9015 ;; Defined at:
  9016 ;;		line 1163 in file "CANlib.h"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;		None
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;		None
  9021 ;; Return value:  Size  Location     Type
  9022 ;;                  1    wreg      unsigned char 
  9023 ;; Registers used:
  9024 ;;		wreg, status,2
  9025 ;; Tracked objects:
  9026 ;;		On entry : 0/0
  9027 ;;		On exit  : 0/0
  9028 ;;		Unchanged: 0/0
  9029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9030 ;;      Params:         0       0       0       0
  9031 ;;      Locals:         1       0       0       0
  9032 ;;      Temps:          0       0       0       0
  9033 ;;      Totals:         1       0       0       0
  9034 ;;Total ram usage:        1 bytes
  9035 ;; Hardware stack levels used:    1
  9036 ;; This function calls:
  9037 ;;		Nothing
  9038 ;; This function is called by:
  9039 ;;		_ISR_bassa
  9040 ;; This function uses a non-reentrant model
  9041 ;;
  9042                           
  9043                           	psect	text24
  9044  002854                     __ptext24:
  9045                           	opt stack 0
  9046  002854                     _CANisRxReady:
  9047                           	opt stack 26
  9048                           
  9049                           ;CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  9050                           
  9051                           ; BSR set to: 15
  9052                           ;incstack = 0
  9053  002854  0E01               	movlw	1
  9054  002856  6E01               	movwf	_CANisRxReady$2995,c
  9055  002858  BE60               	btfsc	3936,7,c	;volatile
  9056  00285A  D005               	goto	i1l561
  9057  00285C  010F               	movlb	15	; () banked
  9058  00285E  BF50               	btfsc	80,7,b	;volatile
  9059  002860  D002               	goto	i1l561
  9060                           
  9061                           ; BSR set to: 15
  9062  002862  0E00               	movlw	0
  9063  002864  6E01               	movwf	_CANisRxReady$2995,c
  9064  002866                     i1l561:
  9065  002866  5001               	movf	_CANisRxReady$2995,w,c
  9066  002868  0012               	return	
  9067  00286A                     __end_of_CANisRxReady:
  9068                           	opt stack 0
  9069  0000                     pclatu	equ	0xFFB
  9070                           pclath	equ	0xFFA
  9071                           tblptru	equ	0xFF8
  9072                           tblptrh	equ	0xFF7
  9073                           tblptrl	equ	0xFF6
  9074                           tablat	equ	0xFF5
  9075                           prodh	equ	0xFF4
  9076                           prodl	equ	0xFF3
  9077                           intcon	equ	0xFF2
  9078                           postinc0	equ	0xFEE
  9079                           fsr0h	equ	0xFEA
  9080                           fsr0l	equ	0xFE9
  9081                           wreg	equ	0xFE8
  9082                           indf1	equ	0xFE7
  9083                           postdec1	equ	0xFE5
  9084                           fsr1h	equ	0xFE2
  9085                           fsr1l	equ	0xFE1
  9086                           bsr	equ	0xFE0
  9087                           indf2	equ	0xFDF
  9088                           postinc2	equ	0xFDE
  9089                           postdec2	equ	0xFDD
  9090                           fsr2h	equ	0xFDA
  9091                           fsr2l	equ	0xFD9
  9092                           status	equ	0xFD8
  9093                           pclatu	equ	0xFFB
  9094                           pclath	equ	0xFFA
  9095                           tblptru	equ	0xFF8
  9096                           tblptrh	equ	0xFF7
  9097                           tblptrl	equ	0xFF6
  9098                           tablat	equ	0xFF5
  9099                           prodh	equ	0xFF4
  9100                           prodl	equ	0xFF3
  9101                           intcon	equ	0xFF2
  9102                           postinc0	equ	0xFEE
  9103                           fsr0h	equ	0xFEA
  9104                           fsr0l	equ	0xFE9
  9105                           wreg	equ	0xFE8
  9106                           indf1	equ	0xFE7
  9107                           postdec1	equ	0xFE5
  9108                           fsr1h	equ	0xFE2
  9109                           fsr1l	equ	0xFE1
  9110                           bsr	equ	0xFE0
  9111                           indf2	equ	0xFDF
  9112                           postinc2	equ	0xFDE
  9113                           postdec2	equ	0xFDD
  9114                           fsr2h	equ	0xFDA
  9115                           fsr2l	equ	0xFD9
  9116                           status	equ	0xFD8
  9117                           
  9118                           	psect	rparam
  9119  0000                     pclatu	equ	0xFFB
  9120                           pclath	equ	0xFFA
  9121                           tblptru	equ	0xFF8
  9122                           tblptrh	equ	0xFF7
  9123                           tblptrl	equ	0xFF6
  9124                           tablat	equ	0xFF5
  9125                           prodh	equ	0xFF4
  9126                           prodl	equ	0xFF3
  9127                           intcon	equ	0xFF2
  9128                           postinc0	equ	0xFEE
  9129                           fsr0h	equ	0xFEA
  9130                           fsr0l	equ	0xFE9
  9131                           wreg	equ	0xFE8
  9132                           indf1	equ	0xFE7
  9133                           postdec1	equ	0xFE5
  9134                           fsr1h	equ	0xFE2
  9135                           fsr1l	equ	0xFE1
  9136                           bsr	equ	0xFE0
  9137                           indf2	equ	0xFDF
  9138                           postinc2	equ	0xFDE
  9139                           postdec2	equ	0xFDD
  9140                           fsr2h	equ	0xFDA
  9141                           fsr2l	equ	0xFD9
  9142                           status	equ	0xFD8
  9143                           
  9144                           	psect	temp
  9145  000043                     btemp:
  9146                           	opt stack 0
  9147  000043                     	ds	1
  9148  0000                     int$flags	set	btemp
  9149                           pclatu	equ	0xFFB
  9150                           pclath	equ	0xFFA
  9151                           tblptru	equ	0xFF8
  9152                           tblptrh	equ	0xFF7
  9153                           tblptrl	equ	0xFF6
  9154                           tablat	equ	0xFF5
  9155                           prodh	equ	0xFF4
  9156                           prodl	equ	0xFF3
  9157                           intcon	equ	0xFF2
  9158                           postinc0	equ	0xFEE
  9159                           fsr0h	equ	0xFEA
  9160                           fsr0l	equ	0xFE9
  9161                           wreg	equ	0xFE8
  9162                           indf1	equ	0xFE7
  9163                           postdec1	equ	0xFE5
  9164                           fsr1h	equ	0xFE2
  9165                           fsr1l	equ	0xFE1
  9166                           bsr	equ	0xFE0
  9167                           indf2	equ	0xFDF
  9168                           postinc2	equ	0xFDE
  9169                           postdec2	equ	0xFDD
  9170                           fsr2h	equ	0xFDA
  9171                           fsr2l	equ	0xFD9
  9172                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      66
    BANK0           160     35     114
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array1(BANK0[8]), data_array(BANK0[8]), data_array_debug(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _configurazione_iniziale->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->___awdiv
    ___wmul->___lwdiv
    ___awdiv->___wmul

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   28438
                                             26 BANK0      9     9      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___lwdiv
                             ___wmul
                                _abs
                    _battery_measure
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            1     1      0    4764
                                             16 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    9823
                      _CANInitialize
                     _SetOutputEPWM1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1187
                                             13 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _SetOutputEPWM1                                       2     1      1     424
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                             14 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0    5927
                       _CANisTxReady
                     _CANsendMessage
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                              7 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     599
                                             13 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4597
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     170
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     549
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetDCEPWM1                                           6     4      2     176
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           19    19      0    1345
                                             12 COMRAM    19    19      0
                       _CANisRxReady
                  _CANreceiveMessage
                   i1_SetOutputEPWM1
 ---------------------------------------------------------------------------------
 (5) i1_SetOutputEPWM1                                     2     1      1     184
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   ___lwdiv
   ___wmul
     ___lwdiv (ARG)
   _abs
   _battery_measure
     _CANisTxReady
     _CANsendMessage
     ___awdiv
       ___wmul (ARG)
         ___lwdiv (ARG)
     ___wmul
       ___lwdiv (ARG)
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _SetOutputEPWM1
     _delay_ms
       ___wmul
         ___lwdiv (ARG)
   _delay_ms
     ___wmul
       ___lwdiv (ARG)
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i1_SetOutputEPWM1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     23      72       4       71.3%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     1F      42       1       70.2%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B4       9        0.0%
DATA                 0      0      B4      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Feb 05 16:43:13 2016

              ??_CANisTXwarningON 00AF              __end_of_CANSetFilter 0CD6  
                    ___awdiv@sign 00C1                                _id 0074  
                              bsr 000FE0               ___wmul@multiplicand 00B8  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 263E  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000                       __CFG_LVP$ON 000000  
            _previousTimeCounter1 0080              _previousTimeCounter2 0084  
                             l402 13AE                               l403 13B2  
                             l404 13BE                               l500 0A32  
                             l501 0A36                               l510 0B42  
                             l502 0A42                               l511 0B4E  
                             l503 0A46                               l520 0C5A  
                             l512 0B52                               l504 0A52  
                             l440 1F9A                               l432 1F5A  
                             l521 0C5E                               l513 0B5E  
                             l433 1F5E                               l370 0D96  
                             l522 0C6A                               l514 0B62  
                             l450 20A6                               l434 1F6A  
                             l363 0F5A                               l523 0C6E  
                             l515 0B6E                               l507 0B2E  
                             l451 20B2                               l443 2072  
                             l435 1F6E                               l380 0F74  
                             l364 0CEC                               l524 0C7A  
                             l508 0B32                               l444 2076  
                             l436 1F7A                               l381 106C  
                             l373 0EA6                               l365 0CF0  
                             l525 0C7E                               l509 0B3E  
                             l445 2082                               l437 1F7E  
                             l701 233C                               l390 113A  
                             l382 0FFC                               l374 0EAA  
                             l366 0DE8                               l710 253A  
                             l526 0C8A                               l518 0C4A  
                             l470 06F4                               l446 2086  
                             l438 1F8A                               l358 21BA  
                             l383 1006                               l375 0EB6  
                             l367 0D78                               l519 0C4E  
                             l471 0700                               l463 06C0  
                             l447 2092                               l439 1F8E  
                             l359 21C4                               l384 1010  
                             l368 0D82                               l480 080A  
                             l464 06C4                               l448 2096  
                             l704 23C6                               l393 11F4  
                             l385 101A                               l369 0D8C  
                             l713 25C2                               l481 080E  
                             l465 06D0                               l449 20A2  
                             l705 23C4                               l394 11F8  
                             l378 11DE                               l490 091A  
                             l482 081A                               l474 07DA  
                             l466 06D4                               l395 12F0  
                             l379 0F70                               l491 0926  
                             l475 07DE                               l467 06E0  
                             l556 2816                               l396 1280  
                             l388 112A                               l492 092A  
                             l476 07EA                               l468 06E4  
                             l397 128A                               l389 112E  
                             l493 0936                               l485 08F6  
                             l477 07EE                               l469 06F0  
                             l398 1294                               l486 08FA  
                             l478 07FA                               l750 2686  
                             l399 129E                               l487 0906  
                             l479 07FE                               l671 1BAE  
                             l816 27EE                               l496 0A12  
                             l488 090A                               l672 1B9E  
                             l497 0A16                               l489 0916  
                             l569 27C2                               l681 1C12  
                             l498 0A22                               l499 0A26  
                             l683 1BEA                               l764 2838  
                             l765 283A                               l677 1BA6  
                             l688 1CC6                               l699 239E  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                               _id1 0078  
                             _abs 27CC                               _dir 0040  
                             _msg 0088                               prod 000FF3  
                             wreg 000FE8                      __CFG_WDT$OFF 000000  
                            ?_abs 00AF                              l1173 2634  
                            l4030 2846                              l4200 04BA  
                            l4122 20B6                              l5100 1CE6  
                            l4400 0B72                              l4304 0864  
                            l4064 1ECE                              l4048 1E18  
                            l4218 0574                              l4146 028E  
                            l4090 1F9E                              l4332 093A  
                            l4236 062E                              l4164 0346  
                            l5052 1B5C                              l5028 19AA  
                            l4406 0BB8                              l4270 074A  
                            l4182 0400                              l5062 1BD2  
                            l4264 0704                              l4096 1FE4  
                            l5064 1BD6                              l4530 0DA0  
                            l4434 0C8E                              l4338 0980  
                            l5058 1BCA                              l4372 0A9C  
                            l4702 13A2                              l4606 1024  
                            l4550 0E9A                              l4366 0A56  
                            l5086 1CAE                              l5078 1C14  
                            l4632 113E                              l4626 111E  
                            l4298 081E                              l4490 21D0  
                            l5098 1CD6                              l4708 13C2  
                            l4556 0EBA                              l4492 2214  
                            l4484 21B2                              l4486 21C8  
                            l4750 2664                              l4742 27B6  
                            l4682 12A8                              l4754 2674  
                            l4780 2426                              l4772 23FC  
                            l4790 245C                              l4782 242C  
                            l4766 23E6                              l4942 2330  
                            l4952 2368                              l4778 241A  
                            l4794 246A                              l4946 2358  
                            l4938 2300                              l4972 2586  
                            l4948 235E                              l4798 247E  
                            l4984 25E4                              l4986 25F0  
                            l4996 2626                              l4988 25F6  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u5000 020A  
                            u5005 01FE                              u5015 026A  
                            u5200 05AA                              u5120 0436  
                            u5040 02C2                              u5205 059E  
                            u5125 042A                              u5045 02B6  
                            u5215 060A                              u5135 0496  
                            u5055 0322                              u5160 04F0  
                            u5080 037C                              u6105 1374  
                            u5165 04E4                              u5085 0370  
                            u5175 0550                              u5095 03DC  
                            u6080 12C8                              u4800 1E4A  
                            u6090 1314                              u5610 0B92  
                            u5530 0A76                              u5450 095A  
                            u5370 083E                              u5290 0724  
                            u6315 26E4                              u6420 23AC  
                            u6085 12BC                              u4805 1E3E  
                            u6270 2884                              u6510 1A0E  
                            u6095 1308                              u5615 0B86  
                            u5535 0A6A                              u5455 094E  
                            u5375 0832                              u5295 0718  
                            u4815 1EAA                              u6280 2890  
                            u4760 1D94                              u6370 2356  
                            u6530 1B0C                              u6435 23AE  
                            u5820 0DC0                              u6620 1C7A  
                            u4765 1D88                              u5830 0E0C  
                            u4775 1DF4                              u6560 1B64  
                            u5825 0DB4                              u5690 0CAE  
                            u4970 20D6                              u4890 1FBE  
                            u5835 0E00                              u5845 0E6C  
                            u5950 1044                              u6566 1B66  
                            u5695 0CA2                              u4975 20CA  
                            u4895 1FB2                              u5960 1090  
                            u6680 1D4A                              u5955 1038  
                            u5965 1084                              u5975 10F0  
                            u6697 27B8                              _TMR2 000FCC  
             __size_of_CANSetMask 039E                              abs@a 00AF  
                            _main 196E                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 0043  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 01CC  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000010                  _CANOperationMode 283E  
          __end_of_SetOutputEPWM1 2690                             ??_abs 00B1  
      __size_of_CANreceiveMessage 050C                             ?_main 0001  
                 __end_of___awdiv 2488                   ___awdiv@divisor 00BE  
                           _T2CON 000FCA                             _T3CON 000FB1  
                 __end_of___lwdiv 263E                             i1l410 16FA  
                           i1l561 2866                             i1l650 016A  
                           i1l661 0146                             i1l653 0166  
                           i1l750 2758                             i1l663 014A  
                           i1l664 014C                             i1l666 0184  
                 ___awdiv@counter 00C0                             _TMR3H 000FB3  
                           _TMR3L 000FB2                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
               _CANisRxReady$2995 0001                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
              __size_of_ISR_bassa 01B4                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 00C1                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _vBatt 0038  
                  __pbitbssCOMRAM 01D0              __end_of_CANisRxReady 286A  
       __size_ofi1_SetOutputEPWM1 0044                             tablat 000FF5  
            __end_of_CANisTxReady 281C                             status 000FD8  
                  __CFG_PBADEN$ON 000000                        _SetDCEPWM1 26DA  
                 __initialization 2690          __size_of_battery_measure 008E  
                    __end_of_main 1D60                   ?_SetOutputEPWM1 00AF  
                          ??_main 00C9                     __activetblptr 000002  
               _CANisTxReady$2993 00AF                     _counter_array 0060  
                          _CANCON 000F6F                            _ADRESH 000FC4  
                ___awdiv@dividend 00BC                   __CFG_BBSIZ$1024 000000  
                          i1l3610 18E4                            i1l3622 1938  
                          i1l3614 1900                            i1l3606 18C8  
                          i1l3624 196A                            i1l3560 16C2  
                          i1l3552 1686                            i1l3544 164A  
                          i1l3536 15DA                            i1l3618 191C  
                          i1l3562 16F4                            i1l3556 16A4  
                          i1l3548 1668                            i1l3900 0150  
                          i1l3840 273C                            i1l3844 274A  
                          i1l3860 0066                            i1l3598 185A  
                          i1l3874 00B6                        _OpenTimer2 281C  
                          i1l3884 00EE                            i1l3894 012E  
                          i1l3878 00C8                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB0D4 000F6A  
                          _RXB1D0 000F56                            _RXB0D5 000F6B  
                          _RXB1D1 000F57                            _RXB0D6 000F6C  
                          _RXB1D2 000F58                            _RXB0D7 000F6D  
                          _RXB1D3 000F59                            _RXB1D4 000F5A  
                          _RXB1D5 000F5B                            _RXB1D6 000F5C  
                          _RXB1D7 000F5D                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _TXB1D2 000F38  
                          _TXB0D6 000F4C                            _TXB1D3 000F39  
                          _TXB0D7 000F4D                            _TXB2D0 000F26  
                          _TXB1D4 000F3A                            _TXB2D1 000F27  
                          _TXB1D5 000F3B                            _TXB2D2 000F28  
                          _TXB1D6 000F3C                            _TXB2D3 000F29  
                          _TXB1D7 000F3D                            _TXB2D4 000F2A  
                          _TXB2D5 000F2B                            _TXB2D6 000F2C  
                          _TXB2D7 000F2D                CANsendMessage@data 00B3  
              CANsendMessage@tamp 00BB                  __end_of_delay_ms 27CC  
           __size_of_CANSetFilter 0B06                    __CFG_XINST$OFF 000000  
              __size_of_OpenEPWM1 0012                 __end_of_ISR_bassa 01CC  
                          ___wmul 2762                         ??___awdiv 00C0  
                  __CFG_STVREN$ON 000000                         ??___lwdiv 00B3  
                    ??_CANSetMask 00B4                            _errore 0030  
                OpenTimer2@config 00AF                            clear_0 2696  
                          clear_1 26A6                  ___awdiv@quotient 00C2  
        ?_configurazione_iniziale 0001                   __CFG_BOREN$BOHW 000000  
                    __pdataCOMRAM 003C                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                    _CANSetFilter 01D0                        __accesstop 0060  
         __end_of__initialization 26CC                __end_of_CANSetMask 20FE  
                   ___rparam_used 000001         __size_of_CANisRXwarningON 000C  
                     ?_SetDCEPWM1 00AF                    __pcstackCOMRAM 0001  
               ??_battery_measure 00C4             CANSetFilter@numBuffer 00B8  
                 OpenEPWM1@period 00AF         __size_of_CANisTXwarningON 000C  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 0024  
               __end_of_OpenEPWM1 287C          __end_of_CANOperationMode 2854  
                i1_SetOutputEPWM1 271E                        __pbssBANK0 0060  
                     ?_OpenTimer2 0001                        _data_array 0097  
         __size_of_CANsendMessage 078C                           ?___wmul 00B6  
              __size_of_send_data 0106                      _CANisRxReady 2854  
                         _ECCPR1L 000FBB                           _CANSTAT 000F6E  
                    _CANisTxReady 27F8                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01C6                         ?_delay_ms 00BC  
                         _RXB0DLC 000F65                           _RXB1DLC 000F55  
                         _RXB0CON 000F60               __size_of_SetDCEPWM1 0044  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 00B6                  _data_array_debug 00A7  
        SetOutputEPWM1@outputmode 00AF                        _correzione 002A  
                ??_SetOutputEPWM1 00B0                           __Hparam 0000  
                      _left_speed 0032                           __Lparam 0000  
                delay_ms@value_ms 00BC                           ___awdiv 23CA  
                 __size_of___wmul 0036                           ___lwdiv 25C6  
            CANInitialize@propSeg 00C6                           __pcinit 2690  
                         __ramtop 0300               __size_of_OpenTimer2 0022  
                         __ptext0 196E                           __ptext1 22C4  
                         __ptext2 2488                           __ptext3 2798  
                         __ptext4 263E                           __ptext5 20FE  
                         __ptext6 1D60                           __ptext7 01D0  
                         __ptext8 283E                           __ptext9 2538  
                         _counter 0070                         _T2CONbits 000FCA  
                    __size_of_abs 002C        i1SetOutputEPWM1@outputmode 0001  
                      _duty_cycle 002C                        ??_delay_ms 00BE  
          CANreceiveMessage@error 000B              end_of_initialization 26CC  
               __end_of_send_data 23CA                     __Lmediumconst 0000  
                _CANisRXwarningON 2888                     _CANInitialize 20FE  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
    i1SetOutputEPWM1@outputconfig 0002                         _ISR_bassa 0018  
                       _PORTAbits 000F80                    CANSetMask@mask 00AF  
                       _PORTCbits 000F82                    CANSetMask@tamp 00B9  
                  _centralina_abs 01D1                    CANSetMask@type 00B3  
                _CANisTXwarningON 287C                         _TRISDbits 000F95  
__size_of_configurazione_iniziale 00B0               _previousTimeCounter 007C  
         _clock_counter_reference 0028                    _CANsendMessage 0CD6  
                CANInitialize@BRP 00C0                  CANInitialize@SJW 00BF  
                  ?_CANInitialize 00BD                        main@period 00D1  
                    ??_SetDCEPWM1 00B1                   _battery_measure 2538  
                      ?_ISR_bassa 0001          __end_ofi1_SetOutputEPWM1 2762  
                  __end_of___wmul 2798                     __pidataCOMRAM 2894  
             start_initialization 2690                       __end_of_abs 27F8  
              __end_of_SetDCEPWM1 271E               CANSetMask@numBuffer 00B8  
          __end_of_CANsendMessage 1462                 ?_CANOperationMode 0001  
                    ??_OpenTimer2 00AF                         _OpenEPWM1 286A  
              ??_CANOperationMode 00AF        CANInitialize@FilterConfig1 00C7  
      CANInitialize@FilterConfig2 00C8                          ??___wmul 00BA  
                __CFG_LPT1OSC$OFF 000000                __end_of_OpenTimer2 283E  
          CANInitialize@phaseSeg1 00BD            CANInitialize@phaseSeg2 00BE  
                     __pbssCOMRAM 0020                     __pcstackBANK0 00AF  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
                     _data_array1 009F               SetDCEPWM1@dutycycle 00AF  
               __size_of_delay_ms 0034                   ?_CANsendMessage 00AF  
                      ?_OpenEPWM1 0001           __end_of_battery_measure 25C6  
                 ??_CANInitialize 00C2                         _can_retry 01D0  
                    _currentSpeed 003C                CANSetFilter@filter 00AF  
                ___lwdiv@dividend 00AF                          ?___awdiv 00BC  
                        ?___lwdiv 00AF                       ??_ISR_bassa 000D  
                     __pintcodelo 0018                        send_data@i 00BF  
                        _ECCP1CON 000FBA          __end_of_CANisRXwarningON 2894  
                     _COMSTATbits 000F74        SetOutputEPWM1@outputconfig 00B0  
                   _remote_frame1 01D6                  ___lwdiv@quotient 00B4  
         _configurazione_iniziale 2488                      _message_sent 01D4  
           CANreceiveMessage@tamp 000C                    ___wmul@product 00BA  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 0042  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                         _send_data 22C4  
                        _PIE3bits 000FA3          __end_of_CANisTXwarningON 2888  
                        i1u403_25 16CE                          i1u405_20 17A2  
                        i1u405_26 17A4                          i1u406_20 17CC  
                        i1u414_25 1944                          i1u406_26 17CE  
                        i1u408_25 17E0                          i1u394_20 151A  
                        i1u394_26 151C                          i1u395_20 1548  
                        i1u395_26 154A                          i1u397_25 155E  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
                        _TXERRCNT 000F76                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                        _ADCON2bits 000FC0  
               ___wmul@multiplier 00B6                     ?_CANSetFilter 00AF  
                       copy_data0 26C0                        _CANCONbits 000F6F  
                     ??_OpenEPWM1 00AF                  ?_battery_measure 0001  
                      ?_send_data 0001                          __Hrparam 0000  
                    _RXB0SIDLbits 000F62                  SetDCEPWM1@DCycle 00B3  
                        __Lrparam 0000                      _RXB1SIDLbits 000F52  
              _centralina_comando 01D2                        _CANSetMask 1D60  
                __size_of___awdiv 00BE                  __size_of___lwdiv 0078  
               ?i1_SetOutputEPWM1 0001           __size_of_SetOutputEPWM1 0052  
              ??i1_SetOutputEPWM1 0002                _currentSpeed_array 0068  
       ??_configurazione_iniziale 00C9                      _RXF0SIDLbits 000F01  
                        _delay_ms 2798                   ___lwdiv@divisor 00B1  
                    _RXF1SIDLbits 000F05                   ___lwdiv@counter 00B3  
                  ??_CANSetFilter 00B4                          __ptext10 2762  
                        __ptext11 23CA                          __ptext20 2888  
                        __ptext12 0CD6                          __ptext13 27F8  
                        __ptext22 271E                          __ptext14 27CC  
                        __ptext23 1462                          __ptext15 25C6  
                        __ptext24 2854                          __ptext16 26DA  
                        __ptext17 281C                          __ptext18 286A  
                        __ptext19 287C                      _RXF2SIDLbits 000F09  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                   _speed_fetched 01D8                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 00B5                      _remote_frame 01D5  
                   __size_of_main 03F2                          _duty_set 002E  
            CANreceiveMessage@msg 0001                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 0043         __size_of_CANOperationMode 0016  
                   ?_CANisRxReady 0001                     ?_CANisTxReady 0001  
                     _RXB0DLCbits 000F65                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 1462  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                ??_CANsendMessage 00B7                      _requestSpeed 0020  
              ?_CANreceiveMessage 0001                      _request_sent 01D7  
        CANsendMessage@identifier 00AF                          intlevel1 0000  
               _centralina_sterzo 01D3                  CANSetFilter@tamp 00B9  
                CANSetFilter@type 00B3               ??_CANreceiveMessage 0003  
                     _TXB0DLCbits 000F45                       _right_speed 0036  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     ??_send_data 00BF                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 2538                       _TXB1CONbits 000F30  
                     _TXB2CONbits 000F20                       _timeCounter 0024  
            CANOperationMode@mode 00AF                    ??_CANisRxReady 0001  
                     ?_CANSetMask 00AF                    ??_CANisTxReady 00AF  
       __end_of_CANreceiveMessage 196E                 ?_CANisRXwarningON 0001  
              ??_CANisRXwarningON 00AF                       _previousPwm 0034  
           __end_of_CANInitialize 22C4                 ?_CANisTXwarningON 0001  
