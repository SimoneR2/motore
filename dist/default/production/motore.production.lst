

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Mar 26 22:23:03 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           	psect	idataCOMRAM
    62  0050B4                     __pidataCOMRAM:
    63                           	opt stack 0
    64                           
    65                           ;initializer for _delay_quartz_frequency_value
    66  0050B4  10                 	db	16
    67                           
    68                           	psect	idataBANK0
    69  0050AE                     __pidataBANK0:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _currentSpeed
    73  0050AE  0001               	dw	1
    74  0050B0  0000               	dw	0
    75                           
    76                           ;initializer for _dir
    77  0050B2  0001               	dw	1
    78                           
    79                           	psect	smallconst
    80  000D00                     __psmallconst:
    81                           	opt stack 0
    82  000D00  00                 	db	0
    83  000D01                     exp@coeff:
    84                           	opt stack 0
    85  000D01  0000               	dw	0
    86  000D03  3F80               	dw	16256
    87  000D05  7218               	dw	29208
    88  000D07  3F31               	dw	16177
    89  000D09  FDF0               	dw	65008
    90  000D0B  3E75               	dw	15989
    91  000D0D  5847               	dw	22599
    92  000D0F  3D63               	dw	15715
    93  000D11  9558               	dw	38232
    94  000D13  3C1D               	dw	15389
    95  000D15  C482               	dw	50306
    96  000D17  3AAE               	dw	15022
    97  000D19  78A8               	dw	30888
    98  000D1B  3921               	dw	14625
    99  000D1D  93EF               	dw	37871
   100  000D1F  3780               	dw	14208
   101  000D21  92A0               	dw	37536
   102  000D23  35A7               	dw	13735
   103  000D25  5646               	dw	22086
   104  000D27  3415               	dw	13333
   105  000D29                     __end_ofexp@coeff:
   106                           	opt stack 0
   107  000D29                     log@coeff:
   108                           	opt stack 0
   109  000D29  0000               	dw	0
   110  000D2B  0000               	dw	0
   111  000D2D  FFC4               	dw	65476
   112  000D2F  3F7F               	dw	16255
   113  000D31  EF80               	dw	61312
   114  000D33  BEFF               	dw	48895
   115  000D35  E190               	dw	57744
   116  000D37  3EA9               	dw	16041
   117  000D39  82EC               	dw	33516
   118  000D3B  BE76               	dw	48758
   119  000D3D  AD82               	dw	44418
   120  000D3F  3E2B               	dw	15915
   121  000D41  3C0E               	dw	15374
   122  000D43  BDC3               	dw	48579
   123  000D45  D187               	dw	53639
   124  000D47  3D13               	dw	15635
   125  000D49  7841               	dw	30785
   126  000D4B  BBD3               	dw	48083
   127  000D4D                     __end_oflog@coeff:
   128                           	opt stack 0
   129  0000                     _RXB1CON	set	3920
   130  0000                     _RXB1CONbits	set	3920
   131  0000                     _RXB1D0	set	3926
   132  0000                     _RXB1D1	set	3927
   133  0000                     _RXB1D2	set	3928
   134  0000                     _RXB1D3	set	3929
   135  0000                     _RXB1D4	set	3930
   136  0000                     _RXB1D5	set	3931
   137  0000                     _RXB1D6	set	3932
   138  0000                     _RXB1D7	set	3933
   139  0000                     _RXB1DLC	set	3925
   140  0000                     _RXB1DLCbits	set	3925
   141  0000                     _RXB1EIDH	set	3923
   142  0000                     _RXB1EIDL	set	3924
   143  0000                     _RXB1SIDH	set	3921
   144  0000                     _RXB1SIDL	set	3922
   145  0000                     _RXB1SIDLbits	set	3922
   146  0000                     _RXF0EIDH	set	3842
   147  0000                     _RXF0EIDL	set	3843
   148  0000                     _RXF0SIDH	set	3840
   149  0000                     _RXF0SIDL	set	3841
   150  0000                     _RXF0SIDLbits	set	3841
   151  0000                     _RXF1EIDH	set	3846
   152  0000                     _RXF1EIDL	set	3847
   153  0000                     _RXF1SIDH	set	3844
   154  0000                     _RXF1SIDL	set	3845
   155  0000                     _RXF1SIDLbits	set	3845
   156  0000                     _RXF2EIDH	set	3850
   157  0000                     _RXF2EIDL	set	3851
   158  0000                     _RXF2SIDH	set	3848
   159  0000                     _RXF2SIDL	set	3849
   160  0000                     _RXF2SIDLbits	set	3849
   161  0000                     _RXF3EIDH	set	3854
   162  0000                     _RXF3EIDL	set	3855
   163  0000                     _RXF3SIDH	set	3852
   164  0000                     _RXF3SIDL	set	3853
   165  0000                     _RXF3SIDLbits	set	3853
   166  0000                     _RXF4EIDH	set	3858
   167  0000                     _RXF4EIDL	set	3859
   168  0000                     _RXF4SIDH	set	3856
   169  0000                     _RXF4SIDL	set	3857
   170  0000                     _RXF4SIDLbits	set	3857
   171  0000                     _RXF5EIDH	set	3862
   172  0000                     _RXF5EIDL	set	3863
   173  0000                     _RXF5SIDH	set	3860
   174  0000                     _RXF5SIDL	set	3861
   175  0000                     _RXF5SIDLbits	set	3861
   176  0000                     _RXM0EIDH	set	3866
   177  0000                     _RXM0EIDL	set	3867
   178  0000                     _RXM0SIDH	set	3864
   179  0000                     _RXM0SIDL	set	3865
   180  0000                     _RXM0SIDLbits	set	3865
   181  0000                     _RXM1EIDH	set	3870
   182  0000                     _RXM1EIDL	set	3871
   183  0000                     _RXM1SIDH	set	3868
   184  0000                     _RXM1SIDL	set	3869
   185  0000                     _RXM1SIDLbits	set	3869
   186  0000                     _TXB0CONbits	set	3904
   187  0000                     _TXB0D0	set	3910
   188  0000                     _TXB0D1	set	3911
   189  0000                     _TXB0D2	set	3912
   190  0000                     _TXB0D3	set	3913
   191  0000                     _TXB0D4	set	3914
   192  0000                     _TXB0D5	set	3915
   193  0000                     _TXB0D6	set	3916
   194  0000                     _TXB0D7	set	3917
   195  0000                     _TXB0DLC	set	3909
   196  0000                     _TXB0DLCbits	set	3909
   197  0000                     _TXB0EIDH	set	3907
   198  0000                     _TXB0EIDL	set	3908
   199  0000                     _TXB0SIDH	set	3905
   200  0000                     _TXB0SIDL	set	3906
   201  0000                     _TXB0SIDLbits	set	3906
   202  0000                     _TXB1CONbits	set	3888
   203  0000                     _TXB1D0	set	3894
   204  0000                     _TXB1D1	set	3895
   205  0000                     _TXB1D2	set	3896
   206  0000                     _TXB1D3	set	3897
   207  0000                     _TXB1D4	set	3898
   208  0000                     _TXB1D5	set	3899
   209  0000                     _TXB1D6	set	3900
   210  0000                     _TXB1D7	set	3901
   211  0000                     _TXB1DLC	set	3893
   212  0000                     _TXB1DLCbits	set	3893
   213  0000                     _TXB1EIDH	set	3891
   214  0000                     _TXB1EIDL	set	3892
   215  0000                     _TXB1SIDH	set	3889
   216  0000                     _TXB1SIDL	set	3890
   217  0000                     _TXB1SIDLbits	set	3890
   218  0000                     _TXB2CONbits	set	3872
   219  0000                     _TXB2D0	set	3878
   220  0000                     _TXB2D1	set	3879
   221  0000                     _TXB2D2	set	3880
   222  0000                     _TXB2D3	set	3881
   223  0000                     _TXB2D4	set	3882
   224  0000                     _TXB2D5	set	3883
   225  0000                     _TXB2D6	set	3884
   226  0000                     _TXB2D7	set	3885
   227  0000                     _TXB2DLC	set	3877
   228  0000                     _TXB2DLCbits	set	3877
   229  0000                     _TXB2EIDH	set	3875
   230  0000                     _TXB2EIDL	set	3876
   231  0000                     _TXB2SIDH	set	3873
   232  0000                     _TXB2SIDL	set	3874
   233  0000                     _TXB2SIDLbits	set	3874
   234  0000                     _ADCON0bits	set	4034
   235  0000                     _ADCON1bits	set	4033
   236  0000                     _ADCON2bits	set	4032
   237  0000                     _ADRESH	set	4036
   238  0000                     _BRGCON1	set	3952
   239  0000                     _BRGCON2	set	3953
   240  0000                     _BRGCON2bits	set	3953
   241  0000                     _BRGCON3	set	3954
   242  0000                     _BRGCON3bits	set	3954
   243  0000                     _CANCON	set	3951
   244  0000                     _CANCONbits	set	3951
   245  0000                     _CANSTAT	set	3950
   246  0000                     _COMSTATbits	set	3956
   247  0000                     _ECCP1CON	set	4026
   248  0000                     _ECCPR1L	set	4027
   249  0000                     _INTCONbits	set	4082
   250  0000                     _IPR2bits	set	4002
   251  0000                     _IPR3bits	set	4005
   252  0000                     _LATA	set	3977
   253  0000                     _LATB	set	3978
   254  0000                     _LATC	set	3979
   255  0000                     _LATD	set	3980
   256  0000                     _LATE	set	3981
   257  0000                     _PIE1bits	set	3997
   258  0000                     _PIE2bits	set	4000
   259  0000                     _PIE3bits	set	4003
   260  0000                     _PIR1bits	set	3998
   261  0000                     _PIR2bits	set	4001
   262  0000                     _PIR3bits	set	4004
   263  0000                     _PORTAbits	set	3968
   264  0000                     _PORTCbits	set	3970
   265  0000                     _PR2	set	4043
   266  0000                     _RCONbits	set	4048
   267  0000                     _RXB0CON	set	3936
   268  0000                     _RXB0CONbits	set	3936
   269  0000                     _RXB0D0	set	3942
   270  0000                     _RXB0D1	set	3943
   271  0000                     _RXB0D2	set	3944
   272  0000                     _RXB0D3	set	3945
   273  0000                     _RXB0D4	set	3946
   274  0000                     _RXB0D5	set	3947
   275  0000                     _RXB0D6	set	3948
   276  0000                     _RXB0D7	set	3949
   277  0000                     _RXB0DLC	set	3941
   278  0000                     _RXB0DLCbits	set	3941
   279  0000                     _RXB0EIDH	set	3939
   280  0000                     _RXB0EIDL	set	3940
   281  0000                     _RXB0SIDH	set	3937
   282  0000                     _RXB0SIDL	set	3938
   283  0000                     _RXB0SIDLbits	set	3938
   284  0000                     _RXERRCNT	set	3957
   285  0000                     _T2CON	set	4042
   286  0000                     _T2CONbits	set	4042
   287  0000                     _T3CON	set	4017
   288  0000                     _TMR2	set	4044
   289  0000                     _TMR3H	set	4019
   290  0000                     _TMR3L	set	4018
   291  0000                     _TRISA	set	3986
   292  0000                     _TRISB	set	3987
   293  0000                     _TRISC	set	3988
   294  0000                     _TRISD	set	3989
   295  0000                     _TRISDbits	set	3989
   296  0000                     _TRISE	set	3990
   297  0000                     _TXERRCNT	set	3958
   298                           
   299                           ; #config settings
   300  000D4D  00                 	db	0	; dummy byte at the end
   301  0000                     
   302                           	psect	cinit
   303  004DC4                     __pcinit:
   304                           	opt stack 0
   305  004DC4                     start_initialization:
   306                           	opt stack 0
   307  004DC4                     __initialization:
   308                           	opt stack 0
   309                           
   310                           ; Clear objects allocated to BANK1 (39 bytes)
   311  004DC4  EE01  F000         	lfsr	0,__pbssBANK1
   312  004DC8  0E27               	movlw	39
   313  004DCA                     clear_0:
   314  004DCA  6AEE               	clrf	postinc0,c
   315  004DCC  06E8               	decf	wreg,f,c
   316  004DCE  E1FD               	bnz	clear_0
   317                           
   318                           ; Clear objects allocated to BANK0 (34 bytes)
   319  004DD0  EE00  F0D4         	lfsr	0,__pbssBANK0
   320  004DD4  0E22               	movlw	34
   321  004DD6                     clear_1:
   322  004DD6  6AEE               	clrf	postinc0,c
   323  004DD8  06E8               	decf	wreg,f,c
   324  004DDA  E1FD               	bnz	clear_1
   325                           
   326                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   327  004DDC  6A3F               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   328  004DDE  6A3E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   329                           
   330                           ; Clear objects allocated to COMRAM (24 bytes)
   331  004DE0  EE00  F026         	lfsr	0,__pbssCOMRAM
   332  004DE4  0E18               	movlw	24
   333  004DE6                     clear_2:
   334  004DE6  6AEE               	clrf	postinc0,c
   335  004DE8  06E8               	decf	wreg,f,c
   336  004DEA  E1FD               	bnz	clear_2
   337                           
   338                           ; Initialize objects allocated to BANK0 (6 bytes)
   339                           ; load TBLPTR registers with __pidataBANK0
   340  004DEC  0EAE               	movlw	low __pidataBANK0
   341  004DEE  6EF6               	movwf	tblptrl,c
   342  004DF0  0E50               	movlw	high __pidataBANK0
   343  004DF2  6EF7               	movwf	tblptrh,c
   344  004DF4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   345  004DF6  6EF8               	movwf	tblptru,c
   346  004DF8  EE00  F0F6         	lfsr	0,__pdataBANK0
   347  004DFC  EE10 F006          	lfsr	1,6
   348  004E00                     copy_data0:
   349  004E00  0009               	tblrd		*+
   350  004E02  CFF5 FFEE          	movff	tablat,postinc0
   351  004E06  50E5               	movf	postdec1,w,c
   352  004E08  50E1               	movf	fsr1l,w,c
   353  004E0A  E1FA               	bnz	copy_data0
   354                           
   355                           ; Initialize objects allocated to COMRAM (1 bytes)
   356                           ; load TBLPTR registers with __pidataCOMRAM
   357  004E0C  0EB4               	movlw	low __pidataCOMRAM
   358  004E0E  6EF6               	movwf	tblptrl,c
   359  004E10  0E50               	movlw	high __pidataCOMRAM
   360  004E12  6EF7               	movwf	tblptrh,c
   361  004E14  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   362  004E16  6EF8               	movwf	tblptru,c
   363  004E18  0009               	tblrd		*+	;fetch initializer
   364  004E1A  CFF5 F040          	movff	tablat,__pdataCOMRAM
   365  004E1E                     end_of_initialization:
   366                           	opt stack 0
   367  004E1E                     __end_of__initialization:
   368                           	opt stack 0
   369  004E1E  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   370  004E20  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   371  004E22  0100               	movlb	0
   372  004E24  EF74  F01D         	goto	_main	;jump to C main() function
   373                           tblptru	equ	0xFF8
   374                           tblptrh	equ	0xFF7
   375                           tblptrl	equ	0xFF6
   376                           tablat	equ	0xFF5
   377                           postinc0	equ	0xFEE
   378                           wreg	equ	0xFE8
   379                           postdec1	equ	0xFE5
   380                           fsr1l	equ	0xFE1
   381                           
   382                           	psect	bitbssCOMRAM
   383  0001F0                     __pbitbssCOMRAM:
   384                           	opt stack 0
   385  0001F0                     _can_retry:
   386                           	opt stack 0
   387  0001F0                     	ds	1
   388  0001F1                     _centralina_abs:
   389                           	opt stack 0
   390  0001F1                     	ds	1
   391  0001F2                     _centralina_comando:
   392                           	opt stack 0
   393  0001F2                     	ds	1
   394  0001F3                     _centralina_sterzo:
   395                           	opt stack 0
   396  0001F3                     	ds	1
   397  0001F4                     _message_sent:
   398                           	opt stack 0
   399  0001F4                     	ds	1
   400  0001F5                     _new_message:
   401                           	opt stack 0
   402  0001F5                     	ds	1
   403  0001F6                     _remote_frame:
   404                           	opt stack 0
   405  0001F6                     	ds	1
   406  0001F7                     _remote_frame1:
   407                           	opt stack 0
   408  0001F7                     	ds	1
   409  0001F8                     _request_sent:
   410                           	opt stack 0
   411  0001F8                     	ds	1
   412  0001F9                     _speed_fetched:
   413                           	opt stack 0
   414  0001F9                     	ds	1
   415                           tblptru	equ	0xFF8
   416                           tblptrh	equ	0xFF7
   417                           tblptrl	equ	0xFF6
   418                           tablat	equ	0xFF5
   419                           postinc0	equ	0xFEE
   420                           wreg	equ	0xFE8
   421                           postdec1	equ	0xFE5
   422                           fsr1l	equ	0xFE1
   423                           
   424                           	psect	bssCOMRAM
   425  000026                     __pbssCOMRAM:
   426                           	opt stack 0
   427  000026                     _id:
   428                           	opt stack 0
   429  000026                     	ds	4
   430  00002A                     _previousTimeCounter:
   431                           	opt stack 0
   432  00002A                     	ds	4
   433  00002E                     _previousTimeCounter1:
   434                           	opt stack 0
   435  00002E                     	ds	4
   436  000032                     _timeCounter:
   437                           	opt stack 0
   438  000032                     	ds	4
   439  000036                     _clock_counter_reference:
   440                           	opt stack 0
   441  000036                     	ds	2
   442  000038                     _duty_cycle:
   443                           	opt stack 0
   444  000038                     	ds	2
   445  00003A                     _vBatt:
   446                           	opt stack 0
   447  00003A                     	ds	2
   448  00003C                     _current:
   449                           	opt stack 0
   450  00003C                     	ds	1
   451  00003D                     _scrittura:
   452                           	opt stack 0
   453  00003D                     	ds	1
   454                           tblptru	equ	0xFF8
   455                           tblptrh	equ	0xFF7
   456                           tblptrl	equ	0xFF6
   457                           tablat	equ	0xFF5
   458                           postinc0	equ	0xFEE
   459                           wreg	equ	0xFE8
   460                           postdec1	equ	0xFE5
   461                           fsr1l	equ	0xFE1
   462                           
   463                           	psect	dataCOMRAM
   464  000040                     __pdataCOMRAM:
   465                           	opt stack 0
   466  000040                     _delay_quartz_frequency_value:
   467                           	opt stack 0
   468  000040                     	ds	1
   469                           tblptru	equ	0xFF8
   470                           tblptrh	equ	0xFF7
   471                           tblptrl	equ	0xFF6
   472                           tablat	equ	0xFF5
   473                           postinc0	equ	0xFEE
   474                           wreg	equ	0xFE8
   475                           postdec1	equ	0xFE5
   476                           fsr1l	equ	0xFE1
   477                           
   478                           	psect	bssBANK0
   479  0000D4                     __pbssBANK0:
   480                           	opt stack 0
   481  0000D4                     _correzione:
   482                           	opt stack 0
   483  0000D4                     	ds	4
   484  0000D8                     _duty_set:
   485                           	opt stack 0
   486  0000D8                     	ds	4
   487  0000DC                     _previousTimeCounter2:
   488                           	opt stack 0
   489  0000DC                     	ds	4
   490  0000E0                     _requestSpeed:
   491                           	opt stack 0
   492  0000E0                     	ds	4
   493  0000E4                     _errno:
   494                           	opt stack 0
   495  0000E4                     	ds	2
   496  0000E6                     _errore:
   497                           	opt stack 0
   498  0000E6                     	ds	2
   499  0000E8                     _left_speed:
   500                           	opt stack 0
   501  0000E8                     	ds	2
   502  0000EA                     _previousPwm:
   503                           	opt stack 0
   504  0000EA                     	ds	2
   505  0000EC                     _right_speed:
   506                           	opt stack 0
   507  0000EC                     	ds	2
   508  0000EE                     _data_array:
   509                           	opt stack 0
   510  0000EE                     	ds	8
   511                           tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           tblptrl	equ	0xFF6
   514                           tablat	equ	0xFF5
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           postdec1	equ	0xFE5
   518                           fsr1l	equ	0xFE1
   519                           
   520                           	psect	dataBANK0
   521  0000F6                     __pdataBANK0:
   522                           	opt stack 0
   523  0000F6                     _currentSpeed:
   524                           	opt stack 0
   525  0000F6                     	ds	4
   526  0000FA                     _dir:
   527                           	opt stack 0
   528  0000FA                     	ds	2
   529                           tblptru	equ	0xFF8
   530                           tblptrh	equ	0xFF7
   531                           tblptrl	equ	0xFF6
   532                           tablat	equ	0xFF5
   533                           postinc0	equ	0xFEE
   534                           wreg	equ	0xFE8
   535                           postdec1	equ	0xFE5
   536                           fsr1l	equ	0xFE1
   537                           
   538                           	psect	bssBANK1
   539  000100                     __pbssBANK1:
   540                           	opt stack 0
   541  000100                     _counter_array:
   542                           	opt stack 0
   543  000100                     	ds	8
   544  000108                     _currentSpeed_array:
   545                           	opt stack 0
   546  000108                     	ds	8
   547  000110                     _msg:
   548                           	opt stack 0
   549  000110                     	ds	15
   550  00011F                     _data_array_debug:
   551                           	opt stack 0
   552  00011F                     	ds	8
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           tblptrl	equ	0xFF6
   556                           tablat	equ	0xFF5
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           postdec1	equ	0xFE5
   560                           fsr1l	equ	0xFE1
   561                           
   562                           	psect	cstackBANK1
   563  000127                     __pcstackBANK1:
   564                           	opt stack 0
   565  000127                     ??_rampe:
   566                           
   567                           ; 0 bytes @ 0x0
   568  000127                     	ds	8
   569  00012F                     _rampe$4053:
   570                           	opt stack 0
   571                           
   572                           ; 4 bytes @ 0x8
   573  00012F                     	ds	4
   574  000133                     _rampe$4054:
   575                           	opt stack 0
   576                           
   577                           ; 4 bytes @ 0xC
   578  000133                     	ds	4
   579  000137                     ??_main:
   580                           
   581                           ; 0 bytes @ 0x10
   582  000137                     	ds	8
   583                           tblptru	equ	0xFF8
   584                           tblptrh	equ	0xFF7
   585                           tblptrl	equ	0xFF6
   586                           tablat	equ	0xFF5
   587                           postinc0	equ	0xFEE
   588                           wreg	equ	0xFE8
   589                           postdec1	equ	0xFE5
   590                           fsr1l	equ	0xFE1
   591                           
   592                           	psect	cstackBANK0
   593  000060                     __pcstackBANK0:
   594                           	opt stack 0
   595  000060                     ??_CANSetMask:
   596  000060                     ??_CANSetFilter:
   597  000060                     ??_frexp:
   598  000060                     ?___awdiv:
   599                           	opt stack 0
   600  000060                     ?___fldiv:
   601                           	opt stack 0
   602  000060                     ?___xxtofl:
   603                           	opt stack 0
   604  000060                     delay_ms@value_ms:
   605                           	opt stack 0
   606  000060                     ___awdiv@dividend:
   607                           	opt stack 0
   608  000060                     CANsendMessage@identifier:
   609                           	opt stack 0
   610  000060                     ___flge@ff1:
   611                           	opt stack 0
   612  000060                     ___fldiv@b:
   613                           	opt stack 0
   614  000060                     ___xxtofl@val:
   615                           	opt stack 0
   616                           
   617                           ; 4 bytes @ 0x0
   618  000060                     	ds	2
   619  000062                     ___awdiv@divisor:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x2
   623  000062                     	ds	2
   624  000064                     ??___xxtofl:
   625  000064                     CANSetMask@numBuffer:
   626                           	opt stack 0
   627  000064                     CANSetFilter@numBuffer:
   628                           	opt stack 0
   629  000064                     ___awdiv@counter:
   630                           	opt stack 0
   631  000064                     CANsendMessage@data:
   632                           	opt stack 0
   633  000064                     ___flge@ff2:
   634                           	opt stack 0
   635  000064                     ___fldiv@a:
   636                           	opt stack 0
   637                           
   638                           ; 4 bytes @ 0x4
   639  000064                     	ds	1
   640  000065                     ___awdiv@sign:
   641                           	opt stack 0
   642  000065                     CANSetMask@tamp:
   643                           	opt stack 0
   644  000065                     CANSetFilter@tamp:
   645                           	opt stack 0
   646                           
   647                           ; 4 bytes @ 0x5
   648  000065                     	ds	1
   649  000066                     CANsendMessage@dataLength:
   650                           	opt stack 0
   651  000066                     ___awdiv@quotient:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x6
   655  000066                     	ds	1
   656  000067                     CANsendMessage@flags:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0x7
   660  000067                     	ds	1
   661  000068                     ___fldiv@sign:
   662                           	opt stack 0
   663  000068                     ___xxtofl@sign:
   664                           	opt stack 0
   665  000068                     CANsendMessage@tamp:
   666                           	opt stack 0
   667                           
   668                           ; 4 bytes @ 0x8
   669  000068                     	ds	1
   670  000069                     CANInitialize@phaseSeg1:
   671                           	opt stack 0
   672  000069                     ___xxtofl@exp:
   673                           	opt stack 0
   674  000069                     ___fldiv@rem:
   675                           	opt stack 0
   676                           
   677                           ; 4 bytes @ 0x9
   678  000069                     	ds	1
   679  00006A                     CANInitialize@phaseSeg2:
   680                           	opt stack 0
   681  00006A                     ___xxtofl@arg:
   682                           	opt stack 0
   683                           
   684                           ; 4 bytes @ 0xA
   685  00006A                     	ds	1
   686  00006B                     CANInitialize@SJW:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0xB
   690  00006B                     	ds	1
   691  00006C                     CANInitialize@BRP:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0xC
   695  00006C                     	ds	1
   696  00006D                     CANInitialize@flags:
   697                           	opt stack 0
   698  00006D                     ___fldiv@new_exp:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0xD
   702  00006D                     	ds	1
   703  00006E                     ??_CANInitialize:
   704  00006E                     ?___flmul:
   705                           	opt stack 0
   706  00006E                     ___flmul@b:
   707                           	opt stack 0
   708                           
   709                           ; 4 bytes @ 0xE
   710  00006E                     	ds	1
   711  00006F                     ___fldiv@grs:
   712                           	opt stack 0
   713                           
   714                           ; 4 bytes @ 0xF
   715  00006F                     	ds	3
   716  000072                     CANInitialize@propSeg:
   717                           	opt stack 0
   718  000072                     ___flmul@a:
   719                           	opt stack 0
   720                           
   721                           ; 4 bytes @ 0x12
   722  000072                     	ds	1
   723  000073                     CANInitialize@FilterConfig1:
   724                           	opt stack 0
   725  000073                     ___fldiv@bexp:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x13
   729  000073                     	ds	1
   730  000074                     CANInitialize@FilterConfig2:
   731                           	opt stack 0
   732  000074                     ___fldiv@aexp:
   733                           	opt stack 0
   734                           
   735                           ; 1 bytes @ 0x14
   736  000074                     	ds	2
   737  000076                     ??___flmul:
   738                           
   739                           ; 0 bytes @ 0x16
   740  000076                     	ds	4
   741  00007A                     ___flmul@sign:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x1A
   745  00007A                     	ds	1
   746  00007B                     ___flmul@aexp:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x1B
   750  00007B                     	ds	1
   751  00007C                     ___flmul@grs:
   752                           	opt stack 0
   753                           
   754                           ; 4 bytes @ 0x1C
   755  00007C                     	ds	4
   756  000080                     ___flmul@bexp:
   757                           	opt stack 0
   758                           
   759                           ; 1 bytes @ 0x20
   760  000080                     	ds	1
   761  000081                     ___flmul@prod:
   762                           	opt stack 0
   763                           
   764                           ; 4 bytes @ 0x21
   765  000081                     	ds	4
   766  000085                     ___flmul@temp:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x25
   770  000085                     	ds	2
   771  000087                     ?___fladd:
   772                           	opt stack 0
   773  000087                     ___fladd@b:
   774                           	opt stack 0
   775                           
   776                           ; 4 bytes @ 0x27
   777  000087                     	ds	4
   778  00008B                     ___fladd@a:
   779                           	opt stack 0
   780                           
   781                           ; 4 bytes @ 0x2B
   782  00008B                     	ds	4
   783  00008F                     ??___fladd:
   784                           
   785                           ; 0 bytes @ 0x2F
   786  00008F                     	ds	8
   787  000097                     ___fladd@signs:
   788                           	opt stack 0
   789                           
   790                           ; 1 bytes @ 0x37
   791  000097                     	ds	1
   792  000098                     ___fladd@aexp:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x38
   796  000098                     	ds	1
   797  000099                     ___fladd@bexp:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x39
   801  000099                     	ds	1
   802  00009A                     ___fladd@grs:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0x3A
   806  00009A                     	ds	1
   807  00009B                     ?___flsub:
   808                           	opt stack 0
   809  00009B                     ?_eval_poly:
   810                           	opt stack 0
   811  00009B                     ?___fltol:
   812                           	opt stack 0
   813  00009B                     ___fltol@f1:
   814                           	opt stack 0
   815  00009B                     ___flsub@b:
   816                           	opt stack 0
   817  00009B                     eval_poly@x:
   818                           	opt stack 0
   819                           
   820                           ; 4 bytes @ 0x3B
   821  00009B                     	ds	4
   822  00009F                     ??___fltol:
   823  00009F                     eval_poly@d:
   824                           	opt stack 0
   825  00009F                     ___flsub@a:
   826                           	opt stack 0
   827                           
   828                           ; 4 bytes @ 0x3F
   829  00009F                     	ds	2
   830  0000A1                     eval_poly@n:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x41
   834  0000A1                     	ds	2
   835  0000A3                     ??_eval_poly:
   836  0000A3                     ___fltol@sign1:
   837                           	opt stack 0
   838                           
   839                           ; 1 bytes @ 0x43
   840  0000A3                     	ds	1
   841  0000A4                     ___fltol@exp1:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x44
   845  0000A4                     	ds	1
   846  0000A5                     ?_floor:
   847                           	opt stack 0
   848  0000A5                     floor@x:
   849                           	opt stack 0
   850                           
   851                           ; 4 bytes @ 0x45
   852  0000A5                     	ds	2
   853  0000A7                     eval_poly@res:
   854                           	opt stack 0
   855                           
   856                           ; 4 bytes @ 0x47
   857  0000A7                     	ds	2
   858  0000A9                     floor@i:
   859                           	opt stack 0
   860                           
   861                           ; 4 bytes @ 0x49
   862  0000A9                     	ds	2
   863  0000AB                     ?_log:
   864                           	opt stack 0
   865  0000AB                     ?_ldexp:
   866                           	opt stack 0
   867  0000AB                     ldexp@value:
   868                           	opt stack 0
   869  0000AB                     log@x:
   870                           	opt stack 0
   871                           
   872                           ; 4 bytes @ 0x4B
   873  0000AB                     	ds	2
   874  0000AD                     floor@expon:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x4D
   878  0000AD                     	ds	2
   879  0000AF                     ldexp@newexp:
   880                           	opt stack 0
   881  0000AF                     log@exponent:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x4F
   885  0000AF                     	ds	2
   886  0000B1                     ??_ldexp:
   887                           
   888                           ; 0 bytes @ 0x51
   889  0000B1                     	ds	2
   890  0000B3                     ?_exp:
   891                           	opt stack 0
   892  0000B3                     exp@x:
   893                           	opt stack 0
   894                           
   895                           ; 4 bytes @ 0x53
   896  0000B3                     	ds	4
   897  0000B7                     _exp$4057:
   898                           	opt stack 0
   899                           
   900                           ; 4 bytes @ 0x57
   901  0000B7                     	ds	4
   902  0000BB                     exp@exponent:
   903                           	opt stack 0
   904                           
   905                           ; 2 bytes @ 0x5B
   906  0000BB                     	ds	2
   907  0000BD                     exp@sign:
   908                           	opt stack 0
   909                           
   910                           ; 1 bytes @ 0x5D
   911  0000BD                     	ds	1
   912  0000BE                     ?_pow:
   913                           	opt stack 0
   914  0000BE                     pow@x:
   915                           	opt stack 0
   916                           
   917                           ; 4 bytes @ 0x5E
   918  0000BE                     	ds	4
   919  0000C2                     pow@y:
   920                           	opt stack 0
   921                           
   922                           ; 4 bytes @ 0x62
   923  0000C2                     	ds	4
   924  0000C6                     _pow$4055:
   925                           	opt stack 0
   926                           
   927                           ; 4 bytes @ 0x66
   928  0000C6                     	ds	4
   929  0000CA                     _pow$4056:
   930                           	opt stack 0
   931                           
   932                           ; 4 bytes @ 0x6A
   933  0000CA                     	ds	4
   934  0000CE                     pow@sign:
   935                           	opt stack 0
   936                           
   937                           ; 1 bytes @ 0x6E
   938  0000CE                     	ds	1
   939  0000CF                     pow@yi:
   940                           	opt stack 0
   941                           
   942                           ; 4 bytes @ 0x6F
   943  0000CF                     	ds	4
   944  0000D3                     main@period:
   945                           	opt stack 0
   946                           
   947                           ; 1 bytes @ 0x73
   948  0000D3                     	ds	1
   949                           tblptru	equ	0xFF8
   950                           tblptrh	equ	0xFF7
   951                           tblptrl	equ	0xFF6
   952                           tablat	equ	0xFF5
   953                           postinc0	equ	0xFEE
   954                           wreg	equ	0xFE8
   955                           postdec1	equ	0xFE5
   956                           fsr1l	equ	0xFE1
   957                           
   958                           	psect	cstackCOMRAM
   959  000001                     __pcstackCOMRAM:
   960                           	opt stack 0
   961  000001                     _CANisRxReady$3007:
   962                           	opt stack 0
   963  000001                     CANreceiveMessage@msg:
   964                           	opt stack 0
   965                           
   966                           ; 2 bytes @ 0x0
   967  000001                     	ds	2
   968  000003                     ??_CANreceiveMessage:
   969                           
   970                           ; 0 bytes @ 0x2
   971  000003                     	ds	8
   972  00000B                     CANreceiveMessage@error:
   973                           	opt stack 0
   974                           
   975                           ; 1 bytes @ 0xA
   976  00000B                     	ds	1
   977  00000C                     CANreceiveMessage@tamp:
   978                           	opt stack 0
   979                           
   980                           ; 1 bytes @ 0xB
   981  00000C                     	ds	1
   982  00000D                     ??_ISR_bassa:
   983                           
   984                           ; 0 bytes @ 0xC
   985  00000D                     	ds	17
   986  00001E                     ISR_bassa@i:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x1D
   990  00001E                     	ds	1
   991  00001F                     ??_can_interpreter:
   992  00001F                     ??___fldiv:
   993  00001F                     ??_CANsendMessage:
   994  00001F                     ??___flge:
   995  00001F                     ?_abs:
   996                           	opt stack 0
   997  00001F                     ?___wmul:
   998                           	opt stack 0
   999  00001F                     ?___lwdiv:
  1000                           	opt stack 0
  1001  00001F                     ?_frexp:
  1002                           	opt stack 0
  1003  00001F                     ?___flneg:
  1004                           	opt stack 0
  1005  00001F                     CANOperationMode@mode:
  1006                           	opt stack 0
  1007  00001F                     _CANisTxReady$3005:
  1008                           	opt stack 0
  1009  00001F                     OpenEPWM1@period:
  1010                           	opt stack 0
  1011  00001F                     SetOutputEPWM1@outputmode:
  1012                           	opt stack 0
  1013  00001F                     OpenTimer2@config:
  1014                           	opt stack 0
  1015  00001F                     SetDCEPWM1@dutycycle:
  1016                           	opt stack 0
  1017  00001F                     ___wmul@multiplier:
  1018                           	opt stack 0
  1019  00001F                     abs@a:
  1020                           	opt stack 0
  1021  00001F                     ___lwdiv@dividend:
  1022                           	opt stack 0
  1023  00001F                     CANSetMask@mask:
  1024                           	opt stack 0
  1025  00001F                     CANSetFilter@filter:
  1026                           	opt stack 0
  1027  00001F                     ___flneg@f1:
  1028                           	opt stack 0
  1029  00001F                     frexp@value:
  1030                           	opt stack 0
  1031                           
  1032                           ; 4 bytes @ 0x1E
  1033  00001F                     	ds	1
  1034  000020                     SetOutputEPWM1@outputconfig:
  1035                           	opt stack 0
  1036                           
  1037                           ; 1 bytes @ 0x1F
  1038  000020                     	ds	1
  1039  000021                     ??_SetDCEPWM1:
  1040  000021                     ??_abs:
  1041  000021                     ___wmul@multiplicand:
  1042                           	opt stack 0
  1043  000021                     ___lwdiv@divisor:
  1044                           	opt stack 0
  1045                           
  1046                           ; 2 bytes @ 0x20
  1047  000021                     	ds	2
  1048  000023                     CANSetMask@type:
  1049                           	opt stack 0
  1050  000023                     CANSetFilter@type:
  1051                           	opt stack 0
  1052  000023                     ___lwdiv@counter:
  1053                           	opt stack 0
  1054  000023                     SetDCEPWM1@DCycle:
  1055                           	opt stack 0
  1056  000023                     ___wmul@product:
  1057                           	opt stack 0
  1058  000023                     frexp@eptr:
  1059                           	opt stack 0
  1060                           
  1061                           ; 2 bytes @ 0x22
  1062  000023                     	ds	1
  1063  000024                     ___lwdiv@quotient:
  1064                           	opt stack 0
  1065                           
  1066                           ; 2 bytes @ 0x23
  1067  000024                     	ds	1
  1068  000025                     
  1069                           ; 0 bytes @ 0x24
  1070  000025                     	ds	1
  1071  000026                     tblptru	equ	0xFF8
  1072                           tblptrh	equ	0xFF7
  1073                           tblptrl	equ	0xFF6
  1074                           tablat	equ	0xFF5
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           postdec1	equ	0xFE5
  1078                           fsr1l	equ	0xFE1
  1079                           
  1080                           ; 0 bytes @ 0x25
  1081 ;;
  1082 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1083 ;;
  1084 ;; *************** function _main *****************
  1085 ;; Defined at:
  1086 ;;		line 119 in file "motore.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  period          1  115[BANK0 ] unsigned char 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  2  666[None  ] int 
  1093 ;; Registers used:
  1094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1101 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1102 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1103 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1104 ;;Total ram usage:        9 bytes
  1105 ;; Hardware stack levels required when called:    7
  1106 ;; This function calls:
  1107 ;;		_CANisTxReady
  1108 ;;		_CANsendMessage
  1109 ;;		_OpenEPWM1
  1110 ;;		_OpenTimer2
  1111 ;;		_SetDCEPWM1
  1112 ;;		_SetOutputEPWM1
  1113 ;;		_battery_measure
  1114 ;;		_can_interpreter
  1115 ;;		_configurazione_iniziale
  1116 ;;		_delay_ms
  1117 ;;		_rampe
  1118 ;;		_send_data
  1119 ;; This function is called by:
  1120 ;;		Startup code after reset
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text0
  1125  003AE8                     __ptext0:
  1126                           	opt stack 0
  1127  003AE8                     _main:
  1128                           	opt stack 24
  1129                           
  1130                           ;motore.c: 120: unsigned char period;
  1131                           ;motore.c: 121: configurazione_iniziale();
  1132                           
  1133                           ;incstack = 0
  1134  003AE8  ECF3  F025         	call	_configurazione_iniziale	;wreg free
  1135                           
  1136                           ;motore.c: 122: PORTAbits.RA1 = 1;
  1137  003AEC  8280               	bsf	3968,1,c	;volatile
  1138                           
  1139                           ;motore.c: 123: PORTCbits.RC1 = 1;
  1140  003AEE  8282               	bsf	3970,1,c	;volatile
  1141                           
  1142                           ;motore.c: 124: delay_ms(500);
  1143  003AF0  0E01               	movlw	1
  1144  003AF2  0100               	movlb	0	; () banked
  1145  003AF4  6F61               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1146  003AF6  0EF4               	movlw	244
  1147  003AF8  6F60               	movwf	delay_ms@value_ms& (0+255),b
  1148  003AFA  ECC7  F027         	call	_delay_ms	;wreg free
  1149                           
  1150                           ;motore.c: 125: PORTAbits.RA1 = 0;
  1151  003AFE  9280               	bcf	3968,1,c	;volatile
  1152                           
  1153                           ;motore.c: 126: PORTCbits.RC1 = 0;
  1154  003B00  9282               	bcf	3970,1,c	;volatile
  1155                           
  1156                           ;motore.c: 127: OpenTimer2(0b01111111 & 0b11111110 & 0b11111111);
  1157  003B02  0E7E               	movlw	126
  1158  003B04  EC2D  F028         	call	_OpenTimer2
  1159                           
  1160                           ;motore.c: 128: period = 0xFE;
  1161  003B08  0EFE               	movlw	254
  1162  003B0A  0100               	movlb	0	; () banked
  1163  003B0C  6FD3               	movwf	main@period& (0+255),b
  1164                           
  1165                           ; BSR set to: 0
  1166                           ;motore.c: 129: OpenEPWM1(period);
  1167  003B0E  0100               	movlb	0	; () banked
  1168  003B10  51D3               	movf	main@period& (0+255),w,b
  1169  003B12  EC4F  F028         	call	_OpenEPWM1
  1170                           
  1171                           ;motore.c: 130: speed_fetched = 1;
  1172  003B16  823F               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1173                           
  1174                           ;motore.c: 131: SetOutputEPWM1(0b01111111, 0b11111100);
  1175  003B18  0EFC               	movlw	252
  1176  003B1A  6E1F               	movwf	SetOutputEPWM1@outputmode,c
  1177  003B1C  0E7F               	movlw	127
  1178  003B1E  EC88  F027         	call	_SetOutputEPWM1
  1179  003B22                     l7596:
  1180                           
  1181                           ;motore.c: 133: can_interpreter();
  1182  003B22  EC22  F025         	call	_can_interpreter	;wreg free
  1183                           
  1184                           ;motore.c: 134: if (PORTAbits.RA1 == 0) {
  1185  003B26  B280               	btfsc	3968,1,c	;volatile
  1186  003B28  D035               	goto	l7604
  1187                           
  1188                           ;motore.c: 136: if ((timeCounter - previousTimeCounter1 >= 20)) {
  1189  003B2A  C02E  F137         	movff	_previousTimeCounter1,??_main
  1190  003B2E  C02F  F138         	movff	_previousTimeCounter1+1,??_main+1
  1191  003B32  C030  F139         	movff	_previousTimeCounter1+2,??_main+2
  1192  003B36  C031  F13A         	movff	_previousTimeCounter1+3,??_main+3
  1193  003B3A  0101               	movlb	1	; () banked
  1194  003B3C  1F37               	comf	??_main& (0+255),f,b
  1195  003B3E  1F38               	comf	(??_main+1)& (0+255),f,b
  1196  003B40  1F39               	comf	(??_main+2)& (0+255),f,b
  1197  003B42  1F3A               	comf	(??_main+3)& (0+255),f,b
  1198  003B44  2B37               	incf	??_main& (0+255),f,b
  1199  003B46  0E00               	movlw	0
  1200  003B48  2338               	addwfc	(??_main+1)& (0+255),f,b
  1201  003B4A  2339               	addwfc	(??_main+2)& (0+255),f,b
  1202  003B4C  233A               	addwfc	(??_main+3)& (0+255),f,b
  1203  003B4E  5032               	movf	_timeCounter,w,c	;volatile
  1204  003B50  0101               	movlb	1	; () banked
  1205  003B52  2537               	addwf	??_main& (0+255),w,b
  1206  003B54  0101               	movlb	1	; () banked
  1207  003B56  6F3B               	movwf	(??_main+4)& (0+255),b
  1208  003B58  5033               	movf	_timeCounter+1,w,c	;volatile
  1209  003B5A  0101               	movlb	1	; () banked
  1210  003B5C  2138               	addwfc	(??_main+1)& (0+255),w,b
  1211  003B5E  0101               	movlb	1	; () banked
  1212  003B60  6F3C               	movwf	(??_main+5)& (0+255),b
  1213  003B62  5034               	movf	_timeCounter+2,w,c	;volatile
  1214  003B64  0101               	movlb	1	; () banked
  1215  003B66  2139               	addwfc	(??_main+2)& (0+255),w,b
  1216  003B68  0101               	movlb	1	; () banked
  1217  003B6A  6F3D               	movwf	(??_main+6)& (0+255),b
  1218  003B6C  5035               	movf	_timeCounter+3,w,c	;volatile
  1219  003B6E  0101               	movlb	1	; () banked
  1220  003B70  213A               	addwfc	(??_main+3)& (0+255),w,b
  1221  003B72  0101               	movlb	1	; () banked
  1222  003B74  6F3E               	movwf	(??_main+7)& (0+255),b
  1223  003B76  0101               	movlb	1	; () banked
  1224  003B78  513E               	movf	(??_main+7)& (0+255),w,b
  1225  003B7A  0101               	movlb	1	; () banked
  1226  003B7C  113D               	iorwf	(??_main+6)& (0+255),w,b
  1227  003B7E  0101               	movlb	1	; () banked
  1228  003B80  113C               	iorwf	(??_main+5)& (0+255),w,b
  1229  003B82  E105               	bnz	u10520
  1230  003B84  0E14               	movlw	20
  1231  003B86  0101               	movlb	1	; () banked
  1232  003B88  5D3B               	subwf	(??_main+4)& (0+255),w,b
  1233  003B8A  A0D8               	btfss	status,0,c
  1234  003B8C  D009               	goto	l7606
  1235  003B8E                     u10520:
  1236                           
  1237                           ; BSR set to: 1
  1238                           ;motore.c: 137: rampe();
  1239  003B8E  ECB1  F016         	call	_rampe	;wreg free
  1240                           
  1241                           ;motore.c: 138: }
  1242                           ;motore.c: 139: } else {
  1243  003B92  D006               	goto	l7606
  1244  003B94                     l7604:
  1245                           
  1246                           ;motore.c: 140: SetDCEPWM1(0);
  1247  003B94  0E00               	movlw	0
  1248  003B96  6E20               	movwf	SetDCEPWM1@dutycycle+1,c
  1249  003B98  0E00               	movlw	0
  1250  003B9A  6E1F               	movwf	SetDCEPWM1@dutycycle,c
  1251  003B9C  ECAA  F027         	call	_SetDCEPWM1	;wreg free
  1252  003BA0                     l7606:
  1253                           
  1254                           ;motore.c: 141: }
  1255                           ;motore.c: 142: if ((can_retry == 1)&&(remote_frame)) {
  1256  003BA0  B03E               	btfsc	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
  1257  003BA2  AC3E               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1258  003BA4  D002               	goto	l7612
  1259                           
  1260                           ;motore.c: 143: send_data();
  1261  003BA6  EC3D  F027         	call	_send_data	;wreg free
  1262  003BAA                     l7612:
  1263                           
  1264                           ;motore.c: 144: }
  1265                           ;motore.c: 146: if (((timeCounter - previousTimeCounter) > 500)||(PORTAbits.RA1 == 1)&&(
      +                          (timeCounter - previousTimeCounter) > 5)) {
  1266  003BAA  C02A  F137         	movff	_previousTimeCounter,??_main
  1267  003BAE  C02B  F138         	movff	_previousTimeCounter+1,??_main+1
  1268  003BB2  C02C  F139         	movff	_previousTimeCounter+2,??_main+2
  1269  003BB6  C02D  F13A         	movff	_previousTimeCounter+3,??_main+3
  1270  003BBA  0101               	movlb	1	; () banked
  1271  003BBC  1F37               	comf	??_main& (0+255),f,b
  1272  003BBE  1F38               	comf	(??_main+1)& (0+255),f,b
  1273  003BC0  1F39               	comf	(??_main+2)& (0+255),f,b
  1274  003BC2  1F3A               	comf	(??_main+3)& (0+255),f,b
  1275  003BC4  2B37               	incf	??_main& (0+255),f,b
  1276  003BC6  0E00               	movlw	0
  1277  003BC8  2338               	addwfc	(??_main+1)& (0+255),f,b
  1278  003BCA  2339               	addwfc	(??_main+2)& (0+255),f,b
  1279  003BCC  233A               	addwfc	(??_main+3)& (0+255),f,b
  1280  003BCE  5032               	movf	_timeCounter,w,c	;volatile
  1281  003BD0  0101               	movlb	1	; () banked
  1282  003BD2  2537               	addwf	??_main& (0+255),w,b
  1283  003BD4  0101               	movlb	1	; () banked
  1284  003BD6  6F3B               	movwf	(??_main+4)& (0+255),b
  1285  003BD8  5033               	movf	_timeCounter+1,w,c	;volatile
  1286  003BDA  0101               	movlb	1	; () banked
  1287  003BDC  2138               	addwfc	(??_main+1)& (0+255),w,b
  1288  003BDE  0101               	movlb	1	; () banked
  1289  003BE0  6F3C               	movwf	(??_main+5)& (0+255),b
  1290  003BE2  5034               	movf	_timeCounter+2,w,c	;volatile
  1291  003BE4  0101               	movlb	1	; () banked
  1292  003BE6  2139               	addwfc	(??_main+2)& (0+255),w,b
  1293  003BE8  0101               	movlb	1	; () banked
  1294  003BEA  6F3D               	movwf	(??_main+6)& (0+255),b
  1295  003BEC  5035               	movf	_timeCounter+3,w,c	;volatile
  1296  003BEE  0101               	movlb	1	; () banked
  1297  003BF0  213A               	addwfc	(??_main+3)& (0+255),w,b
  1298  003BF2  0101               	movlb	1	; () banked
  1299  003BF4  6F3E               	movwf	(??_main+7)& (0+255),b
  1300  003BF6  0101               	movlb	1	; () banked
  1301  003BF8  513E               	movf	(??_main+7)& (0+255),w,b
  1302  003BFA  0101               	movlb	1	; () banked
  1303  003BFC  113D               	iorwf	(??_main+6)& (0+255),w,b
  1304  003BFE  E13C               	bnz	l674
  1305  003C00  0EF5               	movlw	245
  1306  003C02  0101               	movlb	1	; () banked
  1307  003C04  5D3B               	subwf	(??_main+4)& (0+255),w,b
  1308  003C06  0E01               	movlw	1
  1309  003C08  0101               	movlb	1	; () banked
  1310  003C0A  593C               	subwfb	(??_main+5)& (0+255),w,b
  1311  003C0C  B0D8               	btfsc	status,0,c
  1312  003C0E  D034               	goto	l674
  1313                           
  1314                           ; BSR set to: 1
  1315  003C10  A280               	btfss	3968,1,c	;volatile
  1316  003C12  D076               	goto	l7642
  1317                           
  1318                           ; BSR set to: 1
  1319  003C14  C02A  F137         	movff	_previousTimeCounter,??_main
  1320  003C18  C02B  F138         	movff	_previousTimeCounter+1,??_main+1
  1321  003C1C  C02C  F139         	movff	_previousTimeCounter+2,??_main+2
  1322  003C20  C02D  F13A         	movff	_previousTimeCounter+3,??_main+3
  1323  003C24  0101               	movlb	1	; () banked
  1324  003C26  1F37               	comf	??_main& (0+255),f,b
  1325  003C28  1F38               	comf	(??_main+1)& (0+255),f,b
  1326  003C2A  1F39               	comf	(??_main+2)& (0+255),f,b
  1327  003C2C  1F3A               	comf	(??_main+3)& (0+255),f,b
  1328  003C2E  2B37               	incf	??_main& (0+255),f,b
  1329  003C30  0E00               	movlw	0
  1330  003C32  2338               	addwfc	(??_main+1)& (0+255),f,b
  1331  003C34  2339               	addwfc	(??_main+2)& (0+255),f,b
  1332  003C36  233A               	addwfc	(??_main+3)& (0+255),f,b
  1333  003C38  5032               	movf	_timeCounter,w,c	;volatile
  1334  003C3A  0101               	movlb	1	; () banked
  1335  003C3C  2537               	addwf	??_main& (0+255),w,b
  1336  003C3E  0101               	movlb	1	; () banked
  1337  003C40  6F3B               	movwf	(??_main+4)& (0+255),b
  1338  003C42  5033               	movf	_timeCounter+1,w,c	;volatile
  1339  003C44  0101               	movlb	1	; () banked
  1340  003C46  2138               	addwfc	(??_main+1)& (0+255),w,b
  1341  003C48  0101               	movlb	1	; () banked
  1342  003C4A  6F3C               	movwf	(??_main+5)& (0+255),b
  1343  003C4C  5034               	movf	_timeCounter+2,w,c	;volatile
  1344  003C4E  0101               	movlb	1	; () banked
  1345  003C50  2139               	addwfc	(??_main+2)& (0+255),w,b
  1346  003C52  0101               	movlb	1	; () banked
  1347  003C54  6F3D               	movwf	(??_main+6)& (0+255),b
  1348  003C56  5035               	movf	_timeCounter+3,w,c	;volatile
  1349  003C58  0101               	movlb	1	; () banked
  1350  003C5A  213A               	addwfc	(??_main+3)& (0+255),w,b
  1351  003C5C  0101               	movlb	1	; () banked
  1352  003C5E  6F3E               	movwf	(??_main+7)& (0+255),b
  1353  003C60  0101               	movlb	1	; () banked
  1354  003C62  513E               	movf	(??_main+7)& (0+255),w,b
  1355  003C64  0101               	movlb	1	; () banked
  1356  003C66  113D               	iorwf	(??_main+6)& (0+255),w,b
  1357  003C68  0101               	movlb	1	; () banked
  1358  003C6A  113C               	iorwf	(??_main+5)& (0+255),w,b
  1359  003C6C  E105               	bnz	u10570
  1360  003C6E  0E06               	movlw	6
  1361  003C70  0101               	movlb	1	; () banked
  1362  003C72  5D3B               	subwf	(??_main+4)& (0+255),w,b
  1363  003C74  A0D8               	btfss	status,0,c
  1364  003C76  D044               	goto	l7642
  1365  003C78                     u10570:
  1366  003C78                     l674:
  1367                           
  1368                           ; BSR set to: 1
  1369                           ;motore.c: 147: if (request_sent == 0) {
  1370  003C78  B03F               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1371  003C7A  D01E               	goto	l675
  1372  003C7C                     l7620:
  1373  003C7C  EC1E  F028         	call	_CANisTxReady	;wreg free
  1374  003C80  06E8               	decf	wreg,f,c
  1375  003C82  A4D8               	btfss	status,2,c
  1376  003C84  D7FB               	goto	l7620
  1377                           
  1378                           ;motore.c: 149: }
  1379                           ;motore.c: 150: CANsendMessage(0b00000000010, data_array, 8, CAN_CONFIG_STD_MSG & CAN_RE
      +                          MOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1380  003C86  0E02               	movlw	2
  1381  003C88  0100               	movlb	0	; () banked
  1382  003C8A  6F60               	movwf	CANsendMessage@identifier& (0+255),b
  1383  003C8C  0E00               	movlw	0
  1384  003C8E  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1385  003C90  0E00               	movlw	0
  1386  003C92  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1387  003C94  0E00               	movlw	0
  1388  003C96  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1389  003C98  0EEE               	movlw	low _data_array
  1390  003C9A  0100               	movlb	0	; () banked
  1391  003C9C  6F64               	movwf	CANsendMessage@data& (0+255),b
  1392  003C9E  0E00               	movlw	high _data_array
  1393  003CA0  0100               	movlb	0	; () banked
  1394  003CA2  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1395  003CA4  0E08               	movlw	8
  1396  003CA6  0100               	movlb	0	; () banked
  1397  003CA8  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1398  003CAA  0EFC               	movlw	252
  1399  003CAC  0100               	movlb	0	; () banked
  1400  003CAE  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1401  003CB0  ECCA  F00B         	call	_CANsendMessage	;wreg free
  1402                           
  1403                           ;motore.c: 151: request_sent = 1;
  1404  003CB4  803F               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1405                           
  1406                           ;motore.c: 152: } else {
  1407  003CB6  D01C               	goto	l7640
  1408  003CB8                     l675:
  1409                           
  1410                           ; BSR set to: 1
  1411                           ;motore.c: 153: if ((centralina_abs == 1)&&(centralina_sterzo == 1)&&(centralina_comando
      +                           == 1)) {
  1412  003CB8  B23E               	btfsc	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
  1413                           
  1414                           ; BSR set to: 1
  1415  003CBA  A63E               	btfss	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
  1416  003CBC  D007               	goto	l680
  1417                           
  1418                           ; BSR set to: 1
  1419  003CBE  A43E               	btfss	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  1420  003CC0  D005               	goto	l680
  1421                           
  1422                           ; BSR set to: 1
  1423                           ;motore.c: 154: centralina_abs = 0;
  1424  003CC2  923E               	bcf	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
  1425                           
  1426                           ;motore.c: 155: centralina_sterzo = 0;
  1427  003CC4  963E               	bcf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
  1428                           
  1429                           ;motore.c: 156: centralina_comando = 0;
  1430  003CC6  943E               	bcf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  1431                           
  1432                           ;motore.c: 157: PORTAbits.RA1 = 0;
  1433  003CC8  9280               	bcf	3968,1,c	;volatile
  1434  003CCA  D011               	goto	l7638
  1435  003CCC                     l680:
  1436                           
  1437                           ; BSR set to: 1
  1438                           ;motore.c: 161: PORTAbits.RA1 = 1;
  1439  003CCC  8280               	bsf	3968,1,c	;volatile
  1440                           
  1441                           ; BSR set to: 1
  1442                           ;motore.c: 162: delay_ms(200);
  1443  003CCE  0E00               	movlw	0
  1444  003CD0  0100               	movlb	0	; () banked
  1445  003CD2  6F61               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1446  003CD4  0EC8               	movlw	200
  1447  003CD6  6F60               	movwf	delay_ms@value_ms& (0+255),b
  1448  003CD8  ECC7  F027         	call	_delay_ms	;wreg free
  1449                           
  1450                           ;motore.c: 163: PORTAbits.RA1 = 0;
  1451  003CDC  9280               	bcf	3968,1,c	;volatile
  1452                           
  1453                           ;motore.c: 164: delay_ms(200);
  1454  003CDE  0E00               	movlw	0
  1455  003CE0  0100               	movlb	0	; () banked
  1456  003CE2  6F61               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1457  003CE4  0EC8               	movlw	200
  1458  003CE6  6F60               	movwf	delay_ms@value_ms& (0+255),b
  1459  003CE8  ECC7  F027         	call	_delay_ms	;wreg free
  1460                           
  1461                           ;motore.c: 165: PORTAbits.RA1 = 1;
  1462  003CEC  8280               	bsf	3968,1,c	;volatile
  1463  003CEE                     l7638:
  1464                           
  1465                           ;motore.c: 166: request_sent = 0;
  1466  003CEE  903F               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1467  003CF0                     l7640:
  1468                           
  1469                           ;motore.c: 167: }
  1470                           ;motore.c: 168: }
  1471                           ;motore.c: 169: previousTimeCounter = timeCounter;
  1472  003CF0  C032  F02A         	movff	_timeCounter,_previousTimeCounter	;volatile
  1473  003CF4  C033  F02B         	movff	_timeCounter+1,_previousTimeCounter+1	;volatile
  1474  003CF8  C034  F02C         	movff	_timeCounter+2,_previousTimeCounter+2	;volatile
  1475  003CFC  C035  F02D         	movff	_timeCounter+3,_previousTimeCounter+3	;volatile
  1476  003D00                     l7642:
  1477                           
  1478                           ;motore.c: 170: }
  1479                           ;motore.c: 171: if ((timeCounter - previousTimeCounter2 > 100)) {
  1480  003D00  C0DC  F137         	movff	_previousTimeCounter2,??_main
  1481  003D04  C0DD  F138         	movff	_previousTimeCounter2+1,??_main+1
  1482  003D08  C0DE  F139         	movff	_previousTimeCounter2+2,??_main+2
  1483  003D0C  C0DF  F13A         	movff	_previousTimeCounter2+3,??_main+3
  1484  003D10  0101               	movlb	1	; () banked
  1485  003D12  1F37               	comf	??_main& (0+255),f,b
  1486  003D14  1F38               	comf	(??_main+1)& (0+255),f,b
  1487  003D16  1F39               	comf	(??_main+2)& (0+255),f,b
  1488  003D18  1F3A               	comf	(??_main+3)& (0+255),f,b
  1489  003D1A  2B37               	incf	??_main& (0+255),f,b
  1490  003D1C  0E00               	movlw	0
  1491  003D1E  2338               	addwfc	(??_main+1)& (0+255),f,b
  1492  003D20  2339               	addwfc	(??_main+2)& (0+255),f,b
  1493  003D22  233A               	addwfc	(??_main+3)& (0+255),f,b
  1494  003D24  5032               	movf	_timeCounter,w,c	;volatile
  1495  003D26  0101               	movlb	1	; () banked
  1496  003D28  2537               	addwf	??_main& (0+255),w,b
  1497  003D2A  0101               	movlb	1	; () banked
  1498  003D2C  6F3B               	movwf	(??_main+4)& (0+255),b
  1499  003D2E  5033               	movf	_timeCounter+1,w,c	;volatile
  1500  003D30  0101               	movlb	1	; () banked
  1501  003D32  2138               	addwfc	(??_main+1)& (0+255),w,b
  1502  003D34  0101               	movlb	1	; () banked
  1503  003D36  6F3C               	movwf	(??_main+5)& (0+255),b
  1504  003D38  5034               	movf	_timeCounter+2,w,c	;volatile
  1505  003D3A  0101               	movlb	1	; () banked
  1506  003D3C  2139               	addwfc	(??_main+2)& (0+255),w,b
  1507  003D3E  0101               	movlb	1	; () banked
  1508  003D40  6F3D               	movwf	(??_main+6)& (0+255),b
  1509  003D42  5035               	movf	_timeCounter+3,w,c	;volatile
  1510  003D44  0101               	movlb	1	; () banked
  1511  003D46  213A               	addwfc	(??_main+3)& (0+255),w,b
  1512  003D48  0101               	movlb	1	; () banked
  1513  003D4A  6F3E               	movwf	(??_main+7)& (0+255),b
  1514  003D4C  0101               	movlb	1	; () banked
  1515  003D4E  513E               	movf	(??_main+7)& (0+255),w,b
  1516  003D50  0101               	movlb	1	; () banked
  1517  003D52  113D               	iorwf	(??_main+6)& (0+255),w,b
  1518  003D54  0101               	movlb	1	; () banked
  1519  003D56  113C               	iorwf	(??_main+5)& (0+255),w,b
  1520  003D58  E105               	bnz	u10630
  1521  003D5A  0E65               	movlw	101
  1522  003D5C  0101               	movlb	1	; () banked
  1523  003D5E  5D3B               	subwf	(??_main+4)& (0+255),w,b
  1524  003D60  A0D8               	btfss	status,0,c
  1525  003D62  D6DF               	goto	l7596
  1526  003D64                     u10630:
  1527                           
  1528                           ; BSR set to: 1
  1529                           ;motore.c: 172: battery_measure();
  1530  003D64  EC9C  F026         	call	_battery_measure	;wreg free
  1531                           
  1532                           ;motore.c: 173: previousTimeCounter2 = timeCounter;
  1533  003D68  C032  F0DC         	movff	_timeCounter,_previousTimeCounter2	;volatile
  1534  003D6C  C033  F0DD         	movff	_timeCounter+1,_previousTimeCounter2+1	;volatile
  1535  003D70  C034  F0DE         	movff	_timeCounter+2,_previousTimeCounter2+2	;volatile
  1536  003D74  C035  F0DF         	movff	_timeCounter+3,_previousTimeCounter2+3	;volatile
  1537  003D78  D6D4               	goto	l7596
  1538  003D7A                     __end_of_main:
  1539                           	opt stack 0
  1540                           tblptru	equ	0xFF8
  1541                           tblptrh	equ	0xFF7
  1542                           tblptrl	equ	0xFF6
  1543                           tablat	equ	0xFF5
  1544                           postinc0	equ	0xFEE
  1545                           wreg	equ	0xFE8
  1546                           postdec1	equ	0xFE5
  1547                           fsr1l	equ	0xFE1
  1548                           status	equ	0xFD8
  1549                           
  1550 ;; *************** function _send_data *****************
  1551 ;; Defined at:
  1552 ;;		line 227 in file "motore.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;		None
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;		None
  1557 ;; Return value:  Size  Location     Type
  1558 ;;		None               void
  1559 ;; Registers used:
  1560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1570 ;;Total ram usage:        0 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:    3
  1573 ;; This function calls:
  1574 ;;		_CANisTxReady
  1575 ;;		_CANsendMessage
  1576 ;; This function is called by:
  1577 ;;		_main
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text1
  1582  004E7A                     __ptext1:
  1583                           	opt stack 0
  1584  004E7A                     _send_data:
  1585                           	opt stack 27
  1586                           
  1587                           ;motore.c: 228: if (CANisTxReady()) {
  1588                           
  1589                           ;incstack = 0
  1590  004E7A  EC1E  F028         	call	_CANisTxReady	;wreg free
  1591  004E7E  0900               	iorlw	0
  1592  004E80  A4D8               	btfss	status,2,c
  1593                           
  1594                           ;motore.c: 229: if (remote_frame == 1) {
  1595  004E82  AC3E               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1596  004E84  D017               	goto	l7550
  1597                           
  1598                           ;motore.c: 230: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1599  004E86  C026  F060         	movff	_id,CANsendMessage@identifier	;volatile
  1600  004E8A  C027  F061         	movff	_id+1,CANsendMessage@identifier+1	;volatile
  1601  004E8E  C028  F062         	movff	_id+2,CANsendMessage@identifier+2	;volatile
  1602  004E92  C029  F063         	movff	_id+3,CANsendMessage@identifier+3	;volatile
  1603  004E96  0EEE               	movlw	low _data_array
  1604  004E98  0100               	movlb	0	; () banked
  1605  004E9A  6F64               	movwf	CANsendMessage@data& (0+255),b
  1606  004E9C  0E00               	movlw	high _data_array
  1607  004E9E  0100               	movlb	0	; () banked
  1608  004EA0  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1609  004EA2  0E08               	movlw	8
  1610  004EA4  0100               	movlb	0	; () banked
  1611  004EA6  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1612  004EA8  0EBC               	movlw	188
  1613  004EAA  0100               	movlb	0	; () banked
  1614  004EAC  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1615  004EAE  ECCA  F00B         	call	_CANsendMessage	;wreg free
  1616                           
  1617                           ;motore.c: 231: remote_frame = 0;
  1618  004EB2  9C3E               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1619  004EB4                     l7550:
  1620                           
  1621                           ;motore.c: 232: }
  1622                           ;motore.c: 233: }
  1623                           ;motore.c: 234: if ((TXB0CONbits.TXABT) || (TXB1CONbits.TXABT)) {
  1624  004EB4  010F               	movlb	15	; () banked
  1625  004EB6  BD40               	btfsc	64,6,b	;volatile
  1626  004EB8  D003               	goto	l711
  1627                           
  1628                           ; BSR set to: 15
  1629  004EBA  010F               	movlb	15	; () banked
  1630  004EBC  AD30               	btfss	48,6,b	;volatile
  1631  004EBE  D002               	goto	l709
  1632  004EC0                     l711:
  1633                           
  1634                           ; BSR set to: 15
  1635                           ;motore.c: 235: can_retry = 1;
  1636  004EC0  803E               	bsf	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
  1637                           
  1638                           ;motore.c: 236: } else {
  1639  004EC2  0012               	return	
  1640  004EC4                     l709:
  1641                           
  1642                           ; BSR set to: 15
  1643                           ;motore.c: 237: can_retry = 0;
  1644  004EC4  903E               	bcf	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
  1645  004EC6  0012               	return	
  1646  004EC8                     __end_of_send_data:
  1647                           	opt stack 0
  1648                           tblptru	equ	0xFF8
  1649                           tblptrh	equ	0xFF7
  1650                           tblptrl	equ	0xFF6
  1651                           tablat	equ	0xFF5
  1652                           postinc0	equ	0xFEE
  1653                           wreg	equ	0xFE8
  1654                           postdec1	equ	0xFE5
  1655                           fsr1l	equ	0xFE1
  1656                           status	equ	0xFD8
  1657                           
  1658 ;; *************** function _rampe *****************
  1659 ;; Defined at:
  1660 ;;		line 178 in file "motore.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;		None               void
  1667 ;; Registers used:
  1668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1675 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1676 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1677 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1678 ;;Total ram usage:       16 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    6
  1681 ;; This function calls:
  1682 ;;		_CANisTxReady
  1683 ;;		_CANsendMessage
  1684 ;;		_SetDCEPWM1
  1685 ;;		_SetOutputEPWM1
  1686 ;;		___fladd
  1687 ;;		___fltol
  1688 ;;		___lwdiv
  1689 ;;		___xxtofl
  1690 ;;		_abs
  1691 ;;		_pow
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text2
  1698  002D62                     __ptext2:
  1699                           	opt stack 0
  1700  002D62                     _rampe:
  1701                           	opt stack 24
  1702                           
  1703                           ;motore.c: 179: if (requestSpeed > 1) {
  1704                           
  1705                           ; BSR set to: 15
  1706                           ;incstack = 0
  1707  002D62  0100               	movlb	0	; () banked
  1708  002D64  BFE3               	btfsc	(_requestSpeed+3)& (0+255),7,b	;volatile
  1709  002D66  D1EF               	goto	l7540
  1710  002D68  0100               	movlb	0	; () banked
  1711  002D6A  51E3               	movf	(_requestSpeed+3)& (0+255),w,b	;volatile
  1712  002D6C  0100               	movlb	0	; () banked
  1713  002D6E  11E2               	iorwf	(_requestSpeed+2)& (0+255),w,b	;volatile
  1714  002D70  0100               	movlb	0	; () banked
  1715  002D72  11E1               	iorwf	(_requestSpeed+1)& (0+255),w,b	;volatile
  1716  002D74  E105               	bnz	l7488
  1717  002D76  0E02               	movlw	2
  1718  002D78  0100               	movlb	0	; () banked
  1719  002D7A  5DE0               	subwf	_requestSpeed& (0+255),w,b	;volatile
  1720  002D7C  A0D8               	btfss	status,0,c
  1721  002D7E  D1E3               	goto	l7540
  1722  002D80                     l7488:
  1723  002D80  EC1E  F028         	call	_CANisTxReady	;wreg free
  1724  002D84  06E8               	decf	wreg,f,c
  1725  002D86  A4D8               	btfss	status,2,c
  1726  002D88  D7FB               	goto	l7488
  1727                           
  1728                           ;motore.c: 181: CANsendMessage(0b00000000110, data_array_debug, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1729  002D8A  0E06               	movlw	6
  1730  002D8C  0100               	movlb	0	; () banked
  1731  002D8E  6F60               	movwf	CANsendMessage@identifier& (0+255),b
  1732  002D90  0E00               	movlw	0
  1733  002D92  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1734  002D94  0E00               	movlw	0
  1735  002D96  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1736  002D98  0E00               	movlw	0
  1737  002D9A  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1738  002D9C  0E1F               	movlw	low _data_array_debug
  1739  002D9E  0100               	movlb	0	; () banked
  1740  002DA0  6F64               	movwf	CANsendMessage@data& (0+255),b
  1741  002DA2  0E01               	movlw	high _data_array_debug
  1742  002DA4  0100               	movlb	0	; () banked
  1743  002DA6  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1744  002DA8  0E08               	movlw	8
  1745  002DAA  0100               	movlb	0	; () banked
  1746  002DAC  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1747  002DAE  0EFC               	movlw	252
  1748  002DB0  0100               	movlb	0	; () banked
  1749  002DB2  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1750  002DB4  ECCA  F00B         	call	_CANsendMessage	;wreg free
  1751                           
  1752                           ;motore.c: 182: if (speed_fetched == 1) {
  1753  002DB8  A23F               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1754  002DBA  D1B6               	goto	l7536
  1755                           
  1756                           ;motore.c: 183: if (dir == 1) {
  1757  002DBC  0100               	movlb	0	; () banked
  1758  002DBE  05FA               	decf	_dir& (0+255),w,b	;volatile
  1759  002DC0  0100               	movlb	0	; () banked
  1760  002DC2  11FB               	iorwf	(_dir+1)& (0+255),w,b	;volatile
  1761  002DC4  A4D8               	btfss	status,2,c
  1762  002DC6  D005               	goto	l7498
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;motore.c: 184: SetOutputEPWM1(0b01111111, 0b11111100);
  1766  002DC8  0EFC               	movlw	252
  1767  002DCA  6E1F               	movwf	SetOutputEPWM1@outputmode,c
  1768  002DCC  0E7F               	movlw	127
  1769  002DCE  EC88  F027         	call	_SetOutputEPWM1
  1770  002DD2                     l7498:
  1771                           
  1772                           ;motore.c: 185: }
  1773                           ;motore.c: 186: if (dir == 0) {
  1774  002DD2  0100               	movlb	0	; () banked
  1775  002DD4  51FA               	movf	_dir& (0+255),w,b	;volatile
  1776  002DD6  0100               	movlb	0	; () banked
  1777  002DD8  11FB               	iorwf	(_dir+1)& (0+255),w,b	;volatile
  1778  002DDA  A4D8               	btfss	status,2,c
  1779  002DDC  D005               	goto	l7502
  1780                           
  1781                           ; BSR set to: 0
  1782                           ;motore.c: 187: SetOutputEPWM1(0b11111111, 0b11111100);
  1783  002DDE  0EFC               	movlw	252
  1784  002DE0  6E1F               	movwf	SetOutputEPWM1@outputmode,c
  1785  002DE2  0EFF               	movlw	255
  1786  002DE4  EC88  F027         	call	_SetOutputEPWM1
  1787  002DE8                     l7502:
  1788                           
  1789                           ;motore.c: 188: }
  1790                           ;motore.c: 189: speed_fetched = 0;
  1791  002DE8  923F               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1792                           
  1793                           ;motore.c: 190: currentSpeed = ((left_speed + right_speed) / 2);
  1794  002DEA  0100               	movlb	0	; () banked
  1795  002DEC  51EC               	movf	_right_speed& (0+255),w,b	;volatile
  1796  002DEE  0100               	movlb	0	; () banked
  1797  002DF0  25E8               	addwf	_left_speed& (0+255),w,b	;volatile
  1798  002DF2  0101               	movlb	1	; () banked
  1799  002DF4  6F27               	movwf	??_rampe& (0+255),b
  1800  002DF6  0100               	movlb	0	; () banked
  1801  002DF8  51ED               	movf	(_right_speed+1)& (0+255),w,b	;volatile
  1802  002DFA  0100               	movlb	0	; () banked
  1803  002DFC  21E9               	addwfc	(_left_speed+1)& (0+255),w,b	;volatile
  1804  002DFE  0101               	movlb	1	; () banked
  1805  002E00  6F28               	movwf	(??_rampe+1)& (0+255),b
  1806  002E02  90D8               	bcf	status,0,c
  1807  002E04  0101               	movlb	1	; () banked
  1808  002E06  3128               	rrcf	(??_rampe+1)& (0+255),w,b
  1809  002E08  0101               	movlb	1	; () banked
  1810  002E0A  6F2A               	movwf	(??_rampe+3)& (0+255),b
  1811  002E0C  0101               	movlb	1	; () banked
  1812  002E0E  3127               	rrcf	??_rampe& (0+255),w,b
  1813  002E10  0101               	movlb	1	; () banked
  1814  002E12  6F29               	movwf	(??_rampe+2)& (0+255),b
  1815  002E14  C129  F0F6         	movff	??_rampe+2,_currentSpeed	;volatile
  1816  002E18  C12A  F0F7         	movff	??_rampe+3,_currentSpeed+1	;volatile
  1817  002E1C  0100               	movlb	0	; () banked
  1818  002E1E  6BF8               	clrf	(_currentSpeed+2)& (0+255),b	;volatile
  1819  002E20  6BF9               	clrf	(_currentSpeed+3)& (0+255),b	;volatile
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;motore.c: 191: errore = abs((currentSpeed - requestSpeed));
  1823  002E22  C0E0  F127         	movff	_requestSpeed,??_rampe	;volatile
  1824  002E26  C0E1  F128         	movff	_requestSpeed+1,??_rampe+1	;volatile
  1825  002E2A  0101               	movlb	1	; () banked
  1826  002E2C  1F27               	comf	??_rampe& (0+255),f,b
  1827  002E2E  1F28               	comf	(??_rampe+1)& (0+255),f,b
  1828  002E30  4B27               	infsnz	??_rampe& (0+255),f,b
  1829  002E32  2B28               	incf	(??_rampe+1)& (0+255),f,b
  1830  002E34  0100               	movlb	0	; () banked
  1831  002E36  51F6               	movf	_currentSpeed& (0+255),w,b	;volatile
  1832  002E38  0101               	movlb	1	; () banked
  1833  002E3A  2527               	addwf	??_rampe& (0+255),w,b
  1834  002E3C  6E1F               	movwf	abs@a,c
  1835  002E3E  0100               	movlb	0	; () banked
  1836  002E40  51F7               	movf	(_currentSpeed+1)& (0+255),w,b	;volatile
  1837  002E42  0101               	movlb	1	; () banked
  1838  002E44  2128               	addwfc	(??_rampe+1)& (0+255),w,b
  1839  002E46  6E20               	movwf	abs@a+1,c
  1840  002E48  ECF7  F027         	call	_abs	;wreg free
  1841  002E4C  C01F  F0E6         	movff	?_abs,_errore
  1842  002E50  C020  F0E7         	movff	?_abs+1,_errore+1
  1843                           
  1844                           ;motore.c: 193: if (errore > 1500) {
  1845  002E54  0EDD               	movlw	221
  1846  002E56  0100               	movlb	0	; () banked
  1847  002E58  5DE6               	subwf	_errore& (0+255),w,b
  1848  002E5A  0E05               	movlw	5
  1849  002E5C  0100               	movlb	0	; () banked
  1850  002E5E  59E7               	subwfb	(_errore+1)& (0+255),w,b
  1851  002E60  A0D8               	btfss	status,0,c
  1852  002E62  D055               	goto	l7514
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;motore.c: 194: correzione = pow(2, (errore / 200)) - 1;
  1856  002E64  0E00               	movlw	0
  1857  002E66  6E22               	movwf	___lwdiv@divisor+1,c
  1858  002E68  0EC8               	movlw	200
  1859  002E6A  6E21               	movwf	___lwdiv@divisor,c
  1860  002E6C  C0E6  F01F         	movff	_errore,___lwdiv@dividend
  1861  002E70  C0E7  F020         	movff	_errore+1,___lwdiv@dividend+1
  1862  002E74  EC14  F027         	call	___lwdiv	;wreg free
  1863  002E78  C01F  F060         	movff	?___lwdiv,___xxtofl@val
  1864  002E7C  C020  F061         	movff	?___lwdiv+1,___xxtofl@val+1
  1865  002E80  0100               	movlb	0	; () banked
  1866  002E82  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  1867  002E84  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  1868  002E86  0E00               	movlw	0
  1869  002E88  ECBD  F01F         	call	___xxtofl
  1870  002E8C  C060  F12F         	movff	?___xxtofl,_rampe$4053
  1871  002E90  C061  F130         	movff	?___xxtofl+1,_rampe$4053+1
  1872  002E94  C062  F131         	movff	?___xxtofl+2,_rampe$4053+2
  1873  002E98  C063  F132         	movff	?___xxtofl+3,_rampe$4053+3
  1874                           
  1875                           ;motore.c: 194: correzione = pow(2, (errore / 200)) - 1;
  1876  002E9C  C12F  F0C2         	movff	_rampe$4053,pow@y
  1877  002EA0  C130  F0C3         	movff	_rampe$4053+1,pow@y+1
  1878  002EA4  C131  F0C4         	movff	_rampe$4053+2,pow@y+2
  1879  002EA8  C132  F0C5         	movff	_rampe$4053+3,pow@y+3
  1880  002EAC  0E00               	movlw	0
  1881  002EAE  0100               	movlb	0	; () banked
  1882  002EB0  6FBE               	movwf	pow@x& (0+255),b
  1883  002EB2  0E00               	movlw	0
  1884  002EB4  6FBF               	movwf	(pow@x+1)& (0+255),b
  1885  002EB6  0E00               	movlw	0
  1886  002EB8  6FC0               	movwf	(pow@x+2)& (0+255),b
  1887  002EBA  0E40               	movlw	64
  1888  002EBC  6FC1               	movwf	(pow@x+3)& (0+255),b
  1889  002EBE  ECBD  F01E         	call	_pow	;wreg free
  1890  002EC2  C0BE  F133         	movff	?_pow,_rampe$4054
  1891  002EC6  C0BF  F134         	movff	?_pow+1,_rampe$4054+1
  1892  002ECA  C0C0  F135         	movff	?_pow+2,_rampe$4054+2
  1893  002ECE  C0C1  F136         	movff	?_pow+3,_rampe$4054+3
  1894                           
  1895                           ;motore.c: 194: correzione = pow(2, (errore / 200)) - 1;
  1896  002ED2  0E00               	movlw	0
  1897  002ED4  0100               	movlb	0	; () banked
  1898  002ED6  6F8B               	movwf	___fladd@a& (0+255),b
  1899  002ED8  0E00               	movlw	0
  1900  002EDA  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  1901  002EDC  0E80               	movlw	128
  1902  002EDE  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  1903  002EE0  0EBF               	movlw	191
  1904  002EE2  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  1905  002EE4  C133  F087         	movff	_rampe$4054,___fladd@b
  1906  002EE8  C134  F088         	movff	_rampe$4054+1,___fladd@b+1
  1907  002EEC  C135  F089         	movff	_rampe$4054+2,___fladd@b+2
  1908  002EF0  C136  F08A         	movff	_rampe$4054+3,___fladd@b+3
  1909  002EF4  EC0A  F012         	call	___fladd	;wreg free
  1910  002EF8  C087  F09B         	movff	?___fladd,___fltol@f1
  1911  002EFC  C088  F09C         	movff	?___fladd+1,___fltol@f1+1
  1912  002F00  C089  F09D         	movff	?___fladd+2,___fltol@f1+2
  1913  002F04  C08A  F09E         	movff	?___fladd+3,___fltol@f1+3
  1914  002F08  EC9C  F024         	call	___fltol	;wreg free
  1915  002F0C  D054               	goto	L1
  1916  002F0E                     l7514:
  1917                           
  1918                           ;motore.c: 196: correzione = pow(2, (errore / 20)) - 1;
  1919  002F0E  0E00               	movlw	0
  1920  002F10  6E22               	movwf	___lwdiv@divisor+1,c
  1921  002F12  0E14               	movlw	20
  1922  002F14  6E21               	movwf	___lwdiv@divisor,c
  1923  002F16  C0E6  F01F         	movff	_errore,___lwdiv@dividend
  1924  002F1A  C0E7  F020         	movff	_errore+1,___lwdiv@dividend+1
  1925  002F1E  EC14  F027         	call	___lwdiv	;wreg free
  1926  002F22  C01F  F060         	movff	?___lwdiv,___xxtofl@val
  1927  002F26  C020  F061         	movff	?___lwdiv+1,___xxtofl@val+1
  1928  002F2A  0100               	movlb	0	; () banked
  1929  002F2C  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  1930  002F2E  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  1931  002F30  0E00               	movlw	0
  1932  002F32  ECBD  F01F         	call	___xxtofl
  1933  002F36  C060  F12F         	movff	?___xxtofl,_rampe$4053
  1934  002F3A  C061  F130         	movff	?___xxtofl+1,_rampe$4053+1
  1935  002F3E  C062  F131         	movff	?___xxtofl+2,_rampe$4053+2
  1936  002F42  C063  F132         	movff	?___xxtofl+3,_rampe$4053+3
  1937                           
  1938                           ;motore.c: 196: correzione = pow(2, (errore / 20)) - 1;
  1939  002F46  C12F  F0C2         	movff	_rampe$4053,pow@y
  1940  002F4A  C130  F0C3         	movff	_rampe$4053+1,pow@y+1
  1941  002F4E  C131  F0C4         	movff	_rampe$4053+2,pow@y+2
  1942  002F52  C132  F0C5         	movff	_rampe$4053+3,pow@y+3
  1943  002F56  0E00               	movlw	0
  1944  002F58  0100               	movlb	0	; () banked
  1945  002F5A  6FBE               	movwf	pow@x& (0+255),b
  1946  002F5C  0E00               	movlw	0
  1947  002F5E  6FBF               	movwf	(pow@x+1)& (0+255),b
  1948  002F60  0E00               	movlw	0
  1949  002F62  6FC0               	movwf	(pow@x+2)& (0+255),b
  1950  002F64  0E40               	movlw	64
  1951  002F66  6FC1               	movwf	(pow@x+3)& (0+255),b
  1952  002F68  ECBD  F01E         	call	_pow	;wreg free
  1953  002F6C  C0BE  F133         	movff	?_pow,_rampe$4054
  1954  002F70  C0BF  F134         	movff	?_pow+1,_rampe$4054+1
  1955  002F74  C0C0  F135         	movff	?_pow+2,_rampe$4054+2
  1956  002F78  C0C1  F136         	movff	?_pow+3,_rampe$4054+3
  1957                           
  1958                           ;motore.c: 196: correzione = pow(2, (errore / 20)) - 1;
  1959  002F7C  0E00               	movlw	0
  1960  002F7E  0100               	movlb	0	; () banked
  1961  002F80  6F8B               	movwf	___fladd@a& (0+255),b
  1962  002F82  0E00               	movlw	0
  1963  002F84  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  1964  002F86  0E80               	movlw	128
  1965  002F88  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  1966  002F8A  0EBF               	movlw	191
  1967  002F8C  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  1968  002F8E  C133  F087         	movff	_rampe$4054,___fladd@b
  1969  002F92  C134  F088         	movff	_rampe$4054+1,___fladd@b+1
  1970  002F96  C135  F089         	movff	_rampe$4054+2,___fladd@b+2
  1971  002F9A  C136  F08A         	movff	_rampe$4054+3,___fladd@b+3
  1972  002F9E  EC0A  F012         	call	___fladd	;wreg free
  1973  002FA2  C087  F09B         	movff	?___fladd,___fltol@f1
  1974  002FA6  C088  F09C         	movff	?___fladd+1,___fltol@f1+1
  1975  002FAA  C089  F09D         	movff	?___fladd+2,___fltol@f1+2
  1976  002FAE  C08A  F09E         	movff	?___fladd+3,___fltol@f1+3
  1977  002FB2  EC9C  F024         	call	___fltol	;wreg free
  1978  002FB6                     L1:
  1979  002FB6  C09B  F0D4         	movff	?___fltol,_correzione
  1980  002FBA  C09C  F0D5         	movff	?___fltol+1,_correzione+1
  1981  002FBE  C09D  F0D6         	movff	?___fltol+2,_correzione+2
  1982  002FC2  C09E  F0D7         	movff	?___fltol+3,_correzione+3
  1983                           
  1984                           ;motore.c: 197: }
  1985                           ;motore.c: 203: if (correzione > 10) {
  1986  002FC6  0100               	movlb	0	; () banked
  1987  002FC8  BFD7               	btfsc	(_correzione+3)& (0+255),7,b
  1988  002FCA  D0A3               	goto	l7532
  1989  002FCC  0100               	movlb	0	; () banked
  1990  002FCE  51D7               	movf	(_correzione+3)& (0+255),w,b
  1991  002FD0  0100               	movlb	0	; () banked
  1992  002FD2  11D6               	iorwf	(_correzione+2)& (0+255),w,b
  1993  002FD4  0100               	movlb	0	; () banked
  1994  002FD6  11D5               	iorwf	(_correzione+1)& (0+255),w,b
  1995  002FD8  E105               	bnz	u10390
  1996  002FDA  0E0B               	movlw	11
  1997  002FDC  0100               	movlb	0	; () banked
  1998  002FDE  5DD4               	subwf	_correzione& (0+255),w,b
  1999  002FE0  A0D8               	btfss	status,0,c
  2000  002FE2  D097               	goto	l7532
  2001  002FE4                     u10390:
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;motore.c: 204: if (currentSpeed - requestSpeed > 0) {
  2005  002FE4  C0E0  F127         	movff	_requestSpeed,??_rampe	;volatile
  2006  002FE8  C0E1  F128         	movff	_requestSpeed+1,??_rampe+1	;volatile
  2007  002FEC  C0E2  F129         	movff	_requestSpeed+2,??_rampe+2	;volatile
  2008  002FF0  C0E3  F12A         	movff	_requestSpeed+3,??_rampe+3	;volatile
  2009  002FF4  0101               	movlb	1	; () banked
  2010  002FF6  1F27               	comf	??_rampe& (0+255),f,b
  2011  002FF8  1F28               	comf	(??_rampe+1)& (0+255),f,b
  2012  002FFA  1F29               	comf	(??_rampe+2)& (0+255),f,b
  2013  002FFC  1F2A               	comf	(??_rampe+3)& (0+255),f,b
  2014  002FFE  2B27               	incf	??_rampe& (0+255),f,b
  2015  003000  0E00               	movlw	0
  2016  003002  2328               	addwfc	(??_rampe+1)& (0+255),f,b
  2017  003004  2329               	addwfc	(??_rampe+2)& (0+255),f,b
  2018  003006  232A               	addwfc	(??_rampe+3)& (0+255),f,b
  2019  003008  0100               	movlb	0	; () banked
  2020  00300A  51F6               	movf	_currentSpeed& (0+255),w,b	;volatile
  2021  00300C  0101               	movlb	1	; () banked
  2022  00300E  2527               	addwf	??_rampe& (0+255),w,b
  2023  003010  0101               	movlb	1	; () banked
  2024  003012  6F2B               	movwf	(??_rampe+4)& (0+255),b
  2025  003014  0100               	movlb	0	; () banked
  2026  003016  51F7               	movf	(_currentSpeed+1)& (0+255),w,b	;volatile
  2027  003018  0101               	movlb	1	; () banked
  2028  00301A  2128               	addwfc	(??_rampe+1)& (0+255),w,b
  2029  00301C  0101               	movlb	1	; () banked
  2030  00301E  6F2C               	movwf	(??_rampe+5)& (0+255),b
  2031  003020  0100               	movlb	0	; () banked
  2032  003022  51F8               	movf	(_currentSpeed+2)& (0+255),w,b	;volatile
  2033  003024  0101               	movlb	1	; () banked
  2034  003026  2129               	addwfc	(??_rampe+2)& (0+255),w,b
  2035  003028  0101               	movlb	1	; () banked
  2036  00302A  6F2D               	movwf	(??_rampe+6)& (0+255),b
  2037  00302C  0100               	movlb	0	; () banked
  2038  00302E  51F9               	movf	(_currentSpeed+3)& (0+255),w,b	;volatile
  2039  003030  0101               	movlb	1	; () banked
  2040  003032  212A               	addwfc	(??_rampe+3)& (0+255),w,b
  2041  003034  0101               	movlb	1	; () banked
  2042  003036  6F2E               	movwf	(??_rampe+7)& (0+255),b
  2043  003038  0101               	movlb	1	; () banked
  2044  00303A  BF2E               	btfsc	(??_rampe+7)& (0+255),7,b
  2045  00303C  D03B               	goto	l7528
  2046  00303E  0101               	movlb	1	; () banked
  2047  003040  512E               	movf	(??_rampe+7)& (0+255),w,b
  2048  003042  0101               	movlb	1	; () banked
  2049  003044  112D               	iorwf	(??_rampe+6)& (0+255),w,b
  2050  003046  0101               	movlb	1	; () banked
  2051  003048  112C               	iorwf	(??_rampe+5)& (0+255),w,b
  2052  00304A  E104               	bnz	u10400
  2053  00304C  0101               	movlb	1	; () banked
  2054  00304E  052B               	decf	(??_rampe+4)& (0+255),w,b
  2055  003050  A0D8               	btfss	status,0,c
  2056  003052  D030               	goto	l7528
  2057  003054                     u10400:
  2058                           
  2059                           ; BSR set to: 1
  2060                           ;motore.c: 205: duty_set = previousPwm - correzione;
  2061  003054  C0D4  F127         	movff	_correzione,??_rampe
  2062  003058  C0D5  F128         	movff	_correzione+1,??_rampe+1
  2063  00305C  C0D6  F129         	movff	_correzione+2,??_rampe+2
  2064  003060  C0D7  F12A         	movff	_correzione+3,??_rampe+3
  2065  003064  0101               	movlb	1	; () banked
  2066  003066  1F27               	comf	??_rampe& (0+255),f,b
  2067  003068  1F28               	comf	(??_rampe+1)& (0+255),f,b
  2068  00306A  1F29               	comf	(??_rampe+2)& (0+255),f,b
  2069  00306C  1F2A               	comf	(??_rampe+3)& (0+255),f,b
  2070  00306E  2B27               	incf	??_rampe& (0+255),f,b
  2071  003070  0E00               	movlw	0
  2072  003072  2328               	addwfc	(??_rampe+1)& (0+255),f,b
  2073  003074  2329               	addwfc	(??_rampe+2)& (0+255),f,b
  2074  003076  232A               	addwfc	(??_rampe+3)& (0+255),f,b
  2075  003078  0100               	movlb	0	; () banked
  2076  00307A  51EA               	movf	_previousPwm& (0+255),w,b
  2077  00307C  0101               	movlb	1	; () banked
  2078  00307E  2527               	addwf	??_rampe& (0+255),w,b
  2079  003080  0100               	movlb	0	; () banked
  2080  003082  6FD8               	movwf	_duty_set& (0+255),b
  2081  003084  0100               	movlb	0	; () banked
  2082  003086  51EB               	movf	(_previousPwm+1)& (0+255),w,b
  2083  003088  0101               	movlb	1	; () banked
  2084  00308A  2128               	addwfc	(??_rampe+1)& (0+255),w,b
  2085  00308C  0100               	movlb	0	; () banked
  2086  00308E  6FD9               	movwf	(_duty_set+1)& (0+255),b
  2087  003090  0E00               	movlw	0
  2088  003092  0101               	movlb	1	; () banked
  2089  003094  2129               	addwfc	(??_rampe+2)& (0+255),w,b
  2090  003096  0100               	movlb	0	; () banked
  2091  003098  6FDA               	movwf	(_duty_set+2)& (0+255),b
  2092  00309A  0E00               	movlw	0
  2093  00309C  0101               	movlb	1	; () banked
  2094  00309E  212A               	addwfc	(??_rampe+3)& (0+255),w,b
  2095  0030A0  0100               	movlb	0	; () banked
  2096  0030A2  6FDB               	movwf	(_duty_set+3)& (0+255),b
  2097                           
  2098                           ;motore.c: 206: if (duty_set < 0) {
  2099  0030A4  0100               	movlb	0	; () banked
  2100  0030A6  AFDB               	btfss	(_duty_set+3)& (0+255),7,b
  2101  0030A8  D03B               	goto	l7534
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;motore.c: 207: duty_set = 0;
  2105  0030AA  0E00               	movlw	0
  2106  0030AC  0100               	movlb	0	; () banked
  2107  0030AE  6FD8               	movwf	_duty_set& (0+255),b
  2108  0030B0  0E00               	movlw	0
  2109  0030B2  D029               	goto	L2
  2110  0030B4                     l7528:
  2111                           
  2112                           ;motore.c: 210: duty_set = previousPwm + correzione;
  2113  0030B4  0100               	movlb	0	; () banked
  2114  0030B6  51EA               	movf	_previousPwm& (0+255),w,b
  2115  0030B8  0100               	movlb	0	; () banked
  2116  0030BA  25D4               	addwf	_correzione& (0+255),w,b
  2117  0030BC  0100               	movlb	0	; () banked
  2118  0030BE  6FD8               	movwf	_duty_set& (0+255),b
  2119  0030C0  0100               	movlb	0	; () banked
  2120  0030C2  51EB               	movf	(_previousPwm+1)& (0+255),w,b
  2121  0030C4  0100               	movlb	0	; () banked
  2122  0030C6  21D5               	addwfc	(_correzione+1)& (0+255),w,b
  2123  0030C8  0100               	movlb	0	; () banked
  2124  0030CA  6FD9               	movwf	(_duty_set+1)& (0+255),b
  2125  0030CC  0E00               	movlw	0
  2126  0030CE  0100               	movlb	0	; () banked
  2127  0030D0  21D6               	addwfc	(_correzione+2)& (0+255),w,b
  2128  0030D2  0100               	movlb	0	; () banked
  2129  0030D4  6FDA               	movwf	(_duty_set+2)& (0+255),b
  2130  0030D6  0E00               	movlw	0
  2131  0030D8  0100               	movlb	0	; () banked
  2132  0030DA  21D7               	addwfc	(_correzione+3)& (0+255),w,b
  2133  0030DC  0100               	movlb	0	; () banked
  2134  0030DE  6FDB               	movwf	(_duty_set+3)& (0+255),b
  2135                           
  2136                           ;motore.c: 211: if (duty_set > 1024) {
  2137  0030E0  0100               	movlb	0	; () banked
  2138  0030E2  BFDB               	btfsc	(_duty_set+3)& (0+255),7,b
  2139  0030E4  D01D               	goto	l7534
  2140  0030E6  0100               	movlb	0	; () banked
  2141  0030E8  51DB               	movf	(_duty_set+3)& (0+255),w,b
  2142  0030EA  0100               	movlb	0	; () banked
  2143  0030EC  11DA               	iorwf	(_duty_set+2)& (0+255),w,b
  2144  0030EE  E107               	bnz	u10420
  2145  0030F0  0100               	movlb	0	; () banked
  2146  0030F2  05D8               	decf	_duty_set& (0+255),w,b
  2147  0030F4  0E04               	movlw	4
  2148  0030F6  0100               	movlb	0	; () banked
  2149  0030F8  59D9               	subwfb	(_duty_set+1)& (0+255),w,b
  2150  0030FA  A0D8               	btfss	status,0,c
  2151  0030FC  D011               	goto	l7534
  2152  0030FE                     u10420:
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;motore.c: 212: duty_set = 1023;
  2156  0030FE  0EFF               	movlw	255
  2157  003100  0100               	movlb	0	; () banked
  2158  003102  6FD8               	movwf	_duty_set& (0+255),b
  2159  003104  0E03               	movlw	3
  2160  003106                     L2:
  2161  003106  6FD9               	movwf	(_duty_set+1)& (0+255),b
  2162  003108  0E00               	movlw	0
  2163  00310A  6FDA               	movwf	(_duty_set+2)& (0+255),b
  2164  00310C  0E00               	movlw	0
  2165  00310E  6FDB               	movwf	(_duty_set+3)& (0+255),b
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;motore.c: 213: }
  2169                           ;motore.c: 214: }
  2170                           ;motore.c: 215: } else {
  2171                           
  2172                           ; BSR set to: 0
  2173  003110  D007               	goto	l7534
  2174  003112                     l7532:
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;motore.c: 216: duty_set = previousPwm;
  2178  003112  C0EA  F0D8         	movff	_previousPwm,_duty_set
  2179  003116  C0EB  F0D9         	movff	_previousPwm+1,_duty_set+1
  2180  00311A  0100               	movlb	0	; () banked
  2181  00311C  6BDA               	clrf	(_duty_set+2)& (0+255),b
  2182  00311E  6BDB               	clrf	(_duty_set+3)& (0+255),b
  2183  003120                     l7534:
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;motore.c: 217: }
  2187                           ;motore.c: 218: previousPwm = duty_set;
  2188  003120  C0D8  F0EA         	movff	_duty_set,_previousPwm
  2189  003124  C0D9  F0EB         	movff	_duty_set+1,_previousPwm+1
  2190  003128                     l7536:
  2191                           
  2192                           ;motore.c: 219: }
  2193                           ;motore.c: 220: previousTimeCounter1 = timeCounter;
  2194  003128  C032  F02E         	movff	_timeCounter,_previousTimeCounter1	;volatile
  2195  00312C  C033  F02F         	movff	_timeCounter+1,_previousTimeCounter1+1	;volatile
  2196  003130  C034  F030         	movff	_timeCounter+2,_previousTimeCounter1+2	;volatile
  2197  003134  C035  F031         	movff	_timeCounter+3,_previousTimeCounter1+3	;volatile
  2198                           
  2199                           ;motore.c: 221: SetDCEPWM1(duty_set);
  2200  003138  C0D8  F01F         	movff	_duty_set,SetDCEPWM1@dutycycle
  2201  00313C  C0D9  F020         	movff	_duty_set+1,SetDCEPWM1@dutycycle+1
  2202  003140  ECAA  F027         	call	_SetDCEPWM1	;wreg free
  2203                           
  2204                           ;motore.c: 222: } else {
  2205  003144  0012               	return	
  2206  003146                     l7540:
  2207                           
  2208                           ;motore.c: 223: SetDCEPWM1(0);
  2209  003146  0E00               	movlw	0
  2210  003148  6E20               	movwf	SetDCEPWM1@dutycycle+1,c
  2211  00314A  0E00               	movlw	0
  2212  00314C  6E1F               	movwf	SetDCEPWM1@dutycycle,c
  2213  00314E  ECAA  F027         	call	_SetDCEPWM1	;wreg free
  2214  003152  0012               	return	
  2215  003154                     __end_of_rampe:
  2216                           	opt stack 0
  2217                           tblptru	equ	0xFF8
  2218                           tblptrh	equ	0xFF7
  2219                           tblptrl	equ	0xFF6
  2220                           tablat	equ	0xFF5
  2221                           postinc0	equ	0xFEE
  2222                           wreg	equ	0xFE8
  2223                           postdec1	equ	0xFE5
  2224                           fsr1l	equ	0xFE1
  2225                           status	equ	0xFD8
  2226                           
  2227 ;; *************** function _pow *****************
  2228 ;; Defined at:
  2229 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\pow.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  x               4   94[BANK0 ] int 
  2232 ;;  y               4   98[BANK0 ] int 
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  yi              4  111[BANK0 ] unsigned long 
  2235 ;;  sign            1  110[BANK0 ] unsigned char 
  2236 ;; Return value:  Size  Location     Type
  2237 ;;                  4   94[BANK0 ] unsigned char 
  2238 ;; Registers used:
  2239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2245 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2246 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2248 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2249 ;;Total ram usage:       21 bytes
  2250 ;; Hardware stack levels used:    1
  2251 ;; Hardware stack levels required when called:    5
  2252 ;; This function calls:
  2253 ;;		___flge
  2254 ;;		___flmul
  2255 ;;		___flneg
  2256 ;;		___fltol
  2257 ;;		___xxtofl
  2258 ;;		_exp
  2259 ;;		_log
  2260 ;; This function is called by:
  2261 ;;		_rampe
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text3
  2266  003D7A                     __ptext3:
  2267                           	opt stack 0
  2268  003D7A                     _pow:
  2269                           	opt stack 24
  2270                           
  2271                           ;incstack = 0
  2272  003D7A  0E00               	movlw	0
  2273  003D7C  0100               	movlb	0	; () banked
  2274  003D7E  6FCE               	movwf	pow@sign& (0+255),b
  2275                           
  2276                           ; BSR set to: 0
  2277  003D80  0100               	movlb	0	; () banked
  2278  003D82  51BE               	movf	pow@x& (0+255),w,b
  2279  003D84  0100               	movlb	0	; () banked
  2280  003D86  11BF               	iorwf	(pow@x+1)& (0+255),w,b
  2281  003D88  0100               	movlb	0	; () banked
  2282  003D8A  11C0               	iorwf	(pow@x+2)& (0+255),w,b
  2283  003D8C  0100               	movlb	0	; () banked
  2284  003D8E  11C1               	iorwf	(pow@x+3)& (0+255),w,b
  2285  003D90  A4D8               	btfss	status,2,c
  2286  003D92  D025               	goto	l7236
  2287                           
  2288                           ; BSR set to: 0
  2289  003D94  0E00               	movlw	0
  2290  003D96  0100               	movlb	0	; () banked
  2291  003D98  6F60               	movwf	___flge@ff1& (0+255),b
  2292  003D9A  0E00               	movlw	0
  2293  003D9C  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  2294  003D9E  0E00               	movlw	0
  2295  003DA0  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  2296  003DA2  0E00               	movlw	0
  2297  003DA4  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  2298  003DA6  C0C2  F064         	movff	pow@y,___flge@ff2
  2299  003DAA  C0C3  F065         	movff	pow@y+1,___flge@ff2+1
  2300  003DAE  C0C4  F066         	movff	pow@y+2,___flge@ff2+2
  2301  003DB2  C0C5  F067         	movff	pow@y+3,___flge@ff2+3
  2302  003DB6  EC40  F022         	call	___flge	;wreg free
  2303  003DBA  0100               	movlb	0	; () banked
  2304  003DBC  A0D8               	btfss	status,0,c
  2305  003DBE  D005               	goto	l1222
  2306                           
  2307                           ; BSR set to: 0
  2308  003DC0  0E00               	movlw	0
  2309  003DC2  0100               	movlb	0	; () banked
  2310  003DC4  6FE5               	movwf	(_errno+1)& (0+255),b
  2311  003DC6  0E21               	movlw	33
  2312  003DC8  6FE4               	movwf	_errno& (0+255),b
  2313  003DCA                     l1222:
  2314                           
  2315                           ; BSR set to: 0
  2316  003DCA  0E00               	movlw	0
  2317  003DCC  0100               	movlb	0	; () banked
  2318  003DCE  6FBE               	movwf	?_pow& (0+255),b
  2319  003DD0  0E00               	movlw	0
  2320  003DD2  6FBF               	movwf	(?_pow+1)& (0+255),b
  2321  003DD4  0E00               	movlw	0
  2322  003DD6  6FC0               	movwf	(?_pow+2)& (0+255),b
  2323  003DD8  0E00               	movlw	0
  2324  003DDA  6FC1               	movwf	(?_pow+3)& (0+255),b
  2325                           
  2326                           ; BSR set to: 0
  2327  003DDC  0012               	return	
  2328  003DDE                     l7236:
  2329                           
  2330                           ; BSR set to: 0
  2331  003DDE  0100               	movlb	0	; () banked
  2332  003DE0  51C2               	movf	pow@y& (0+255),w,b
  2333  003DE2  0100               	movlb	0	; () banked
  2334  003DE4  11C3               	iorwf	(pow@y+1)& (0+255),w,b
  2335  003DE6  0100               	movlb	0	; () banked
  2336  003DE8  11C4               	iorwf	(pow@y+2)& (0+255),w,b
  2337  003DEA  0100               	movlb	0	; () banked
  2338  003DEC  11C5               	iorwf	(pow@y+3)& (0+255),w,b
  2339  003DEE  A4D8               	btfss	status,2,c
  2340  003DF0  D00A               	goto	l7242
  2341                           
  2342                           ; BSR set to: 0
  2343  003DF2  0E00               	movlw	0
  2344  003DF4  0100               	movlb	0	; () banked
  2345  003DF6  6FBE               	movwf	?_pow& (0+255),b
  2346  003DF8  0E00               	movlw	0
  2347  003DFA  6FBF               	movwf	(?_pow+1)& (0+255),b
  2348  003DFC  0E80               	movlw	128
  2349  003DFE  6FC0               	movwf	(?_pow+2)& (0+255),b
  2350  003E00  0E3F               	movlw	63
  2351  003E02  6FC1               	movwf	(?_pow+3)& (0+255),b
  2352                           
  2353                           ; BSR set to: 0
  2354  003E04  0012               	return	
  2355  003E06                     l7242:
  2356                           
  2357                           ; BSR set to: 0
  2358  003E06  0100               	movlb	0	; () banked
  2359  003E08  AFC1               	btfss	(pow@x+3)& (0+255),7,b
  2360  003E0A  D058               	goto	l7254
  2361                           
  2362                           ; BSR set to: 0
  2363  003E0C  C0C2  F09B         	movff	pow@y,___fltol@f1
  2364  003E10  C0C3  F09C         	movff	pow@y+1,___fltol@f1+1
  2365  003E14  C0C4  F09D         	movff	pow@y+2,___fltol@f1+2
  2366  003E18  C0C5  F09E         	movff	pow@y+3,___fltol@f1+3
  2367  003E1C  EC9C  F024         	call	___fltol	;wreg free
  2368  003E20  C09B  F0CF         	movff	?___fltol,pow@yi
  2369  003E24  C09C  F0D0         	movff	?___fltol+1,pow@yi+1
  2370  003E28  C09D  F0D1         	movff	?___fltol+2,pow@yi+2
  2371  003E2C  C09E  F0D2         	movff	?___fltol+3,pow@yi+3
  2372  003E30  C0CF  F060         	movff	pow@yi,___xxtofl@val
  2373  003E34  C0D0  F061         	movff	pow@yi+1,___xxtofl@val+1
  2374  003E38  C0D1  F062         	movff	pow@yi+2,___xxtofl@val+2
  2375  003E3C  C0D2  F063         	movff	pow@yi+3,___xxtofl@val+3
  2376  003E40  0E00               	movlw	0
  2377  003E42  ECBD  F01F         	call	___xxtofl
  2378  003E46  0100               	movlb	0	; () banked
  2379  003E48  51C2               	movf	pow@y& (0+255),w,b
  2380  003E4A  0100               	movlb	0	; () banked
  2381  003E4C  1960               	xorwf	?___xxtofl& (0+255),w,b
  2382  003E4E  E110               	bnz	u10130
  2383  003E50  0100               	movlb	0	; () banked
  2384  003E52  51C3               	movf	(pow@y+1)& (0+255),w,b
  2385  003E54  0100               	movlb	0	; () banked
  2386  003E56  1961               	xorwf	(?___xxtofl+1)& (0+255),w,b
  2387  003E58  E10B               	bnz	u10130
  2388  003E5A  0100               	movlb	0	; () banked
  2389  003E5C  51C4               	movf	(pow@y+2)& (0+255),w,b
  2390  003E5E  0100               	movlb	0	; () banked
  2391  003E60  1962               	xorwf	(?___xxtofl+2)& (0+255),w,b
  2392  003E62  E106               	bnz	u10130
  2393  003E64  0100               	movlb	0	; () banked
  2394  003E66  51C5               	movf	(pow@y+3)& (0+255),w,b
  2395  003E68  0100               	movlb	0	; () banked
  2396  003E6A  1963               	xorwf	(?___xxtofl+3)& (0+255),w,b
  2397  003E6C  B4D8               	btfsc	status,2,c
  2398  003E6E  D00F               	goto	l7250
  2399  003E70                     u10130:
  2400                           
  2401                           ; BSR set to: 0
  2402  003E70  0E00               	movlw	0
  2403  003E72  0100               	movlb	0	; () banked
  2404  003E74  6FE5               	movwf	(_errno+1)& (0+255),b
  2405  003E76  0E21               	movlw	33
  2406  003E78  6FE4               	movwf	_errno& (0+255),b
  2407  003E7A  0E00               	movlw	0
  2408  003E7C  0100               	movlb	0	; () banked
  2409  003E7E  6FBE               	movwf	?_pow& (0+255),b
  2410  003E80  0E00               	movlw	0
  2411  003E82  6FBF               	movwf	(?_pow+1)& (0+255),b
  2412  003E84  0E00               	movlw	0
  2413  003E86  6FC0               	movwf	(?_pow+2)& (0+255),b
  2414  003E88  0E00               	movlw	0
  2415  003E8A  6FC1               	movwf	(?_pow+3)& (0+255),b
  2416                           
  2417                           ; BSR set to: 0
  2418  003E8C  0012               	return	
  2419  003E8E                     l7250:
  2420                           
  2421                           ; BSR set to: 0
  2422  003E8E  0100               	movlb	0	; () banked
  2423  003E90  51CF               	movf	pow@yi& (0+255),w,b
  2424  003E92  0B01               	andlw	1
  2425  003E94  0100               	movlb	0	; () banked
  2426  003E96  6FCE               	movwf	pow@sign& (0+255),b
  2427                           
  2428                           ; BSR set to: 0
  2429  003E98  C0BE  F01F         	movff	pow@x,___flneg@f1
  2430  003E9C  C0BF  F020         	movff	pow@x+1,___flneg@f1+1
  2431  003EA0  C0C0  F021         	movff	pow@x+2,___flneg@f1+2
  2432  003EA4  C0C1  F022         	movff	pow@x+3,___flneg@f1+3
  2433  003EA8  ECE0  F027         	call	___flneg	;wreg free
  2434  003EAC  C01F  F0BE         	movff	?___flneg,pow@x
  2435  003EB0  C020  F0BF         	movff	?___flneg+1,pow@x+1
  2436  003EB4  C021  F0C0         	movff	?___flneg+2,pow@x+2
  2437  003EB8  C022  F0C1         	movff	?___flneg+3,pow@x+3
  2438  003EBC                     l7254:
  2439  003EBC  C0BE  F0AB         	movff	pow@x,log@x
  2440  003EC0  C0BF  F0AC         	movff	pow@x+1,log@x+1
  2441  003EC4  C0C0  F0AD         	movff	pow@x+2,log@x+2
  2442  003EC8  C0C1  F0AE         	movff	pow@x+3,log@x+3
  2443  003ECC  EC7D  F021         	call	_log	;wreg free
  2444  003ED0  C0AB  F0C6         	movff	?_log,_pow$4055
  2445  003ED4  C0AC  F0C7         	movff	?_log+1,_pow$4055+1
  2446  003ED8  C0AD  F0C8         	movff	?_log+2,_pow$4055+2
  2447  003EDC  C0AE  F0C9         	movff	?_log+3,_pow$4055+3
  2448  003EE0  C0C6  F06E         	movff	_pow$4055,___flmul@b
  2449  003EE4  C0C7  F06F         	movff	_pow$4055+1,___flmul@b+1
  2450  003EE8  C0C8  F070         	movff	_pow$4055+2,___flmul@b+2
  2451  003EEC  C0C9  F071         	movff	_pow$4055+3,___flmul@b+3
  2452  003EF0  C0C2  F072         	movff	pow@y,___flmul@a
  2453  003EF4  C0C3  F073         	movff	pow@y+1,___flmul@a+1
  2454  003EF8  C0C4  F074         	movff	pow@y+2,___flmul@a+2
  2455  003EFC  C0C5  F075         	movff	pow@y+3,___flmul@a+3
  2456  003F00  EC5E  F014         	call	___flmul	;wreg free
  2457  003F04  C06E  F0CA         	movff	?___flmul,_pow$4056
  2458  003F08  C06F  F0CB         	movff	?___flmul+1,_pow$4056+1
  2459  003F0C  C070  F0CC         	movff	?___flmul+2,_pow$4056+2
  2460  003F10  C071  F0CD         	movff	?___flmul+3,_pow$4056+3
  2461  003F14  C0CA  F0B3         	movff	_pow$4056,exp@x
  2462  003F18  C0CB  F0B4         	movff	_pow$4056+1,exp@x+1
  2463  003F1C  C0CC  F0B5         	movff	_pow$4056+2,exp@x+2
  2464  003F20  C0CD  F0B6         	movff	_pow$4056+3,exp@x+3
  2465  003F24  EC27  F01C         	call	_exp	;wreg free
  2466  003F28  C0B3  F0BE         	movff	?_exp,pow@x
  2467  003F2C  C0B4  F0BF         	movff	?_exp+1,pow@x+1
  2468  003F30  C0B5  F0C0         	movff	?_exp+2,pow@x+2
  2469  003F34  C0B6  F0C1         	movff	?_exp+3,pow@x+3
  2470  003F38  0100               	movlb	0	; () banked
  2471  003F3A  51CE               	movf	pow@sign& (0+255),w,b
  2472  003F3C  0100               	movlb	0	; () banked
  2473  003F3E  B4D8               	btfsc	status,2,c
  2474  003F40  D013               	goto	l1227
  2475                           
  2476                           ; BSR set to: 0
  2477  003F42  C0BE  F01F         	movff	pow@x,___flneg@f1
  2478  003F46  C0BF  F020         	movff	pow@x+1,___flneg@f1+1
  2479  003F4A  C0C0  F021         	movff	pow@x+2,___flneg@f1+2
  2480  003F4E  C0C1  F022         	movff	pow@x+3,___flneg@f1+3
  2481  003F52  ECE0  F027         	call	___flneg	;wreg free
  2482  003F56  C01F  F0BE         	movff	?___flneg,?_pow
  2483  003F5A  C020  F0BF         	movff	?___flneg+1,?_pow+1
  2484  003F5E  C021  F0C0         	movff	?___flneg+2,?_pow+2
  2485  003F62  C022  F0C1         	movff	?___flneg+3,?_pow+3
  2486  003F66  0012               	return	
  2487  003F68                     l1227:
  2488                           
  2489                           ; BSR set to: 0
  2490  003F68  C0BE  F0BE         	movff	pow@x,?_pow
  2491  003F6C  C0BF  F0BF         	movff	pow@x+1,?_pow+1
  2492  003F70  C0C0  F0C0         	movff	pow@x+2,?_pow+2
  2493  003F74  C0C1  F0C1         	movff	pow@x+3,?_pow+3
  2494  003F78  0012               	return		;funcret
  2495  003F7A                     __end_of_pow:
  2496                           	opt stack 0
  2497                           tblptru	equ	0xFF8
  2498                           tblptrh	equ	0xFF7
  2499                           tblptrl	equ	0xFF6
  2500                           tablat	equ	0xFF5
  2501                           postinc0	equ	0xFEE
  2502                           wreg	equ	0xFE8
  2503                           postdec1	equ	0xFE5
  2504                           fsr1l	equ	0xFE1
  2505                           status	equ	0xFD8
  2506                           
  2507 ;; *************** function _log *****************
  2508 ;; Defined at:
  2509 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\log.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  x               4   75[BANK0 ] unsigned char 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  exponent        2   79[BANK0 ] int 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  4   75[BANK0 ] int 
  2516 ;; Registers used:
  2517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2523 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2524 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2526 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2527 ;;Total ram usage:        6 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    4
  2530 ;; This function calls:
  2531 ;;		___fladd
  2532 ;;		___flmul
  2533 ;;		___xxtofl
  2534 ;;		_eval_poly
  2535 ;;		_frexp
  2536 ;; This function is called by:
  2537 ;;		_pow
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text4
  2542  0042FA                     __ptext4:
  2543                           	opt stack 0
  2544  0042FA                     _log:
  2545                           	opt stack 24
  2546                           
  2547                           ;incstack = 0
  2548  0042FA  0100               	movlb	0	; () banked
  2549  0042FC  AFAE               	btfss	(log@x+3)& (0+255),7,b
  2550  0042FE  D00F               	goto	l6844
  2551                           
  2552                           ; BSR set to: 0
  2553  004300  0E00               	movlw	0
  2554  004302  0100               	movlb	0	; () banked
  2555  004304  6FE5               	movwf	(_errno+1)& (0+255),b
  2556  004306  0E21               	movlw	33
  2557  004308  6FE4               	movwf	_errno& (0+255),b
  2558  00430A  0E00               	movlw	0
  2559  00430C  0100               	movlb	0	; () banked
  2560  00430E  6FAB               	movwf	?_log& (0+255),b
  2561  004310  0E00               	movlw	0
  2562  004312  6FAC               	movwf	(?_log+1)& (0+255),b
  2563  004314  0E00               	movlw	0
  2564  004316  6FAD               	movwf	(?_log+2)& (0+255),b
  2565  004318  0E00               	movlw	0
  2566  00431A  6FAE               	movwf	(?_log+3)& (0+255),b
  2567                           
  2568                           ; BSR set to: 0
  2569  00431C  0012               	return	
  2570  00431E                     l6844:
  2571                           
  2572                           ; BSR set to: 0
  2573  00431E  0100               	movlb	0	; () banked
  2574  004320  51AB               	movf	log@x& (0+255),w,b
  2575  004322  0100               	movlb	0	; () banked
  2576  004324  11AC               	iorwf	(log@x+1)& (0+255),w,b
  2577  004326  0100               	movlb	0	; () banked
  2578  004328  11AD               	iorwf	(log@x+2)& (0+255),w,b
  2579  00432A  0100               	movlb	0	; () banked
  2580  00432C  11AE               	iorwf	(log@x+3)& (0+255),w,b
  2581  00432E  A4D8               	btfss	status,2,c
  2582  004330  D00F               	goto	l6850
  2583                           
  2584                           ; BSR set to: 0
  2585  004332  0E00               	movlw	0
  2586  004334  0100               	movlb	0	; () banked
  2587  004336  6FE5               	movwf	(_errno+1)& (0+255),b
  2588  004338  0E22               	movlw	34
  2589  00433A  6FE4               	movwf	_errno& (0+255),b
  2590  00433C  0E00               	movlw	0
  2591  00433E  0100               	movlb	0	; () banked
  2592  004340  6FAB               	movwf	?_log& (0+255),b
  2593  004342  0E00               	movlw	0
  2594  004344  6FAC               	movwf	(?_log+1)& (0+255),b
  2595  004346  0E00               	movlw	0
  2596  004348  6FAD               	movwf	(?_log+2)& (0+255),b
  2597  00434A  0E00               	movlw	0
  2598  00434C  6FAE               	movwf	(?_log+3)& (0+255),b
  2599                           
  2600                           ; BSR set to: 0
  2601  00434E  0012               	return	
  2602  004350                     l6850:
  2603                           
  2604                           ; BSR set to: 0
  2605  004350  0E00               	movlw	0
  2606  004352  0100               	movlb	0	; () banked
  2607  004354  6F72               	movwf	___flmul@a& (0+255),b
  2608  004356  0E00               	movlw	0
  2609  004358  6F73               	movwf	(___flmul@a+1)& (0+255),b
  2610  00435A  0E00               	movlw	0
  2611  00435C  6F74               	movwf	(___flmul@a+2)& (0+255),b
  2612  00435E  0E40               	movlw	64
  2613  004360  6F75               	movwf	(___flmul@a+3)& (0+255),b
  2614  004362  0EAF               	movlw	low log@exponent
  2615  004364  6E23               	movwf	frexp@eptr,c
  2616  004366  0E00               	movlw	high log@exponent
  2617  004368  6E24               	movwf	frexp@eptr+1,c
  2618  00436A  C0AB  F01F         	movff	log@x,frexp@value
  2619  00436E  C0AC  F020         	movff	log@x+1,frexp@value+1
  2620  004372  C0AD  F021         	movff	log@x+2,frexp@value+2
  2621  004376  C0AE  F022         	movff	log@x+3,frexp@value+3
  2622  00437A  EC4A  F026         	call	_frexp	;wreg free
  2623  00437E  C01F  F06E         	movff	?_frexp,___flmul@b
  2624  004382  C020  F06F         	movff	?_frexp+1,___flmul@b+1
  2625  004386  C021  F070         	movff	?_frexp+2,___flmul@b+2
  2626  00438A  C022  F071         	movff	?_frexp+3,___flmul@b+3
  2627  00438E  EC5E  F014         	call	___flmul	;wreg free
  2628  004392  C06E  F087         	movff	?___flmul,___fladd@b
  2629  004396  C06F  F088         	movff	?___flmul+1,___fladd@b+1
  2630  00439A  C070  F089         	movff	?___flmul+2,___fladd@b+2
  2631  00439E  C071  F08A         	movff	?___flmul+3,___fladd@b+3
  2632  0043A2  0E00               	movlw	0
  2633  0043A4  0100               	movlb	0	; () banked
  2634  0043A6  6F8B               	movwf	___fladd@a& (0+255),b
  2635  0043A8  0E00               	movlw	0
  2636  0043AA  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  2637  0043AC  0E80               	movlw	128
  2638  0043AE  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  2639  0043B0  0EBF               	movlw	191
  2640  0043B2  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  2641  0043B4  EC0A  F012         	call	___fladd	;wreg free
  2642  0043B8  C087  F0AB         	movff	?___fladd,log@x
  2643  0043BC  C088  F0AC         	movff	?___fladd+1,log@x+1
  2644  0043C0  C089  F0AD         	movff	?___fladd+2,log@x+2
  2645  0043C4  C08A  F0AE         	movff	?___fladd+3,log@x+3
  2646  0043C8  0100               	movlb	0	; () banked
  2647  0043CA  07AF               	decf	log@exponent& (0+255),f,b
  2648  0043CC  A0D8               	btfss	status,0,c
  2649  0043CE  07B0               	decf	(log@exponent+1)& (0+255),f,b
  2650                           
  2651                           ; BSR set to: 0
  2652  0043D0  C0AB  F09B         	movff	log@x,eval_poly@x
  2653  0043D4  C0AC  F09C         	movff	log@x+1,eval_poly@x+1
  2654  0043D8  C0AD  F09D         	movff	log@x+2,eval_poly@x+2
  2655  0043DC  C0AE  F09E         	movff	log@x+3,eval_poly@x+3
  2656  0043E0  0E29               	movlw	low log@coeff
  2657  0043E2  0100               	movlb	0	; () banked
  2658  0043E4  6F9F               	movwf	eval_poly@d& (0+255),b
  2659  0043E6  0E0D               	movlw	high log@coeff
  2660  0043E8  0100               	movlb	0	; () banked
  2661  0043EA  6FA0               	movwf	(eval_poly@d+1)& (0+255),b
  2662  0043EC  0E00               	movlw	0
  2663  0043EE  0100               	movlb	0	; () banked
  2664  0043F0  6FA2               	movwf	(eval_poly@n+1)& (0+255),b
  2665  0043F2  0E08               	movlw	8
  2666  0043F4  6FA1               	movwf	eval_poly@n& (0+255),b
  2667  0043F6  EC10  F024         	call	_eval_poly	;wreg free
  2668  0043FA  C09B  F0AB         	movff	?_eval_poly,log@x
  2669  0043FE  C09C  F0AC         	movff	?_eval_poly+1,log@x+1
  2670  004402  C09D  F0AD         	movff	?_eval_poly+2,log@x+2
  2671  004406  C09E  F0AE         	movff	?_eval_poly+3,log@x+3
  2672  00440A  0E18               	movlw	24
  2673  00440C  0100               	movlb	0	; () banked
  2674  00440E  6F72               	movwf	___flmul@a& (0+255),b
  2675  004410  0E72               	movlw	114
  2676  004412  6F73               	movwf	(___flmul@a+1)& (0+255),b
  2677  004414  0E31               	movlw	49
  2678  004416  6F74               	movwf	(___flmul@a+2)& (0+255),b
  2679  004418  0E3F               	movlw	63
  2680  00441A  6F75               	movwf	(___flmul@a+3)& (0+255),b
  2681  00441C  C0AF  F060         	movff	log@exponent,___xxtofl@val
  2682  004420  C0B0  F061         	movff	log@exponent+1,___xxtofl@val+1
  2683  004424  0100               	movlb	0	; () banked
  2684  004426  0E00               	movlw	0
  2685  004428  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2686  00442A  0EFF               	movlw	-1
  2687  00442C  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  2688  00442E  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  2689  004430  0E01               	movlw	1
  2690  004432  ECBD  F01F         	call	___xxtofl
  2691  004436  C060  F06E         	movff	?___xxtofl,___flmul@b
  2692  00443A  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  2693  00443E  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  2694  004442  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  2695  004446  EC5E  F014         	call	___flmul	;wreg free
  2696  00444A  C06E  F087         	movff	?___flmul,___fladd@b
  2697  00444E  C06F  F088         	movff	?___flmul+1,___fladd@b+1
  2698  004452  C070  F089         	movff	?___flmul+2,___fladd@b+2
  2699  004456  C071  F08A         	movff	?___flmul+3,___fladd@b+3
  2700  00445A  C0AB  F08B         	movff	log@x,___fladd@a
  2701  00445E  C0AC  F08C         	movff	log@x+1,___fladd@a+1
  2702  004462  C0AD  F08D         	movff	log@x+2,___fladd@a+2
  2703  004466  C0AE  F08E         	movff	log@x+3,___fladd@a+3
  2704  00446A  EC0A  F012         	call	___fladd	;wreg free
  2705  00446E  C087  F0AB         	movff	?___fladd,?_log
  2706  004472  C088  F0AC         	movff	?___fladd+1,?_log+1
  2707  004476  C089  F0AD         	movff	?___fladd+2,?_log+2
  2708  00447A  C08A  F0AE         	movff	?___fladd+3,?_log+3
  2709  00447E  0012               	return	
  2710  004480                     __end_of_log:
  2711                           	opt stack 0
  2712                           tblptru	equ	0xFF8
  2713                           tblptrh	equ	0xFF7
  2714                           tblptrl	equ	0xFF6
  2715                           tablat	equ	0xFF5
  2716                           postinc0	equ	0xFEE
  2717                           wreg	equ	0xFE8
  2718                           postdec1	equ	0xFE5
  2719                           fsr1l	equ	0xFE1
  2720                           status	equ	0xFD8
  2721                           
  2722 ;; *************** function _exp *****************
  2723 ;; Defined at:
  2724 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\exp.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  x               4   83[BANK0 ] int 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  exponent        2   91[BANK0 ] int 
  2729 ;;  sign            1   93[BANK0 ] unsigned char 
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  4   83[BANK0 ] unsigned char 
  2732 ;; Registers used:
  2733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2739 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2740 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2742 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2743 ;;Total ram usage:       11 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; Hardware stack levels required when called:    4
  2746 ;; This function calls:
  2747 ;;		___fldiv
  2748 ;;		___flge
  2749 ;;		___flmul
  2750 ;;		___flneg
  2751 ;;		___flsub
  2752 ;;		___fltol
  2753 ;;		___xxtofl
  2754 ;;		_eval_poly
  2755 ;;		_floor
  2756 ;;		_ldexp
  2757 ;; This function is called by:
  2758 ;;		_pow
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text5
  2763  00384E                     __ptext5:
  2764                           	opt stack 0
  2765  00384E                     _exp:
  2766                           	opt stack 24
  2767                           
  2768                           ;incstack = 0
  2769  00384E  0100               	movlb	0	; () banked
  2770  003850  51B3               	movf	exp@x& (0+255),w,b
  2771  003852  0100               	movlb	0	; () banked
  2772  003854  11B4               	iorwf	(exp@x+1)& (0+255),w,b
  2773  003856  0100               	movlb	0	; () banked
  2774  003858  11B5               	iorwf	(exp@x+2)& (0+255),w,b
  2775  00385A  0100               	movlb	0	; () banked
  2776  00385C  11B6               	iorwf	(exp@x+3)& (0+255),w,b
  2777  00385E  A4D8               	btfss	status,2,c
  2778  003860  D00A               	goto	l6866
  2779                           
  2780                           ; BSR set to: 0
  2781  003862  0E00               	movlw	0
  2782  003864  0100               	movlb	0	; () banked
  2783  003866  6FB3               	movwf	?_exp& (0+255),b
  2784  003868  0E00               	movlw	0
  2785  00386A  6FB4               	movwf	(?_exp+1)& (0+255),b
  2786  00386C  0E80               	movlw	128
  2787  00386E  6FB5               	movwf	(?_exp+2)& (0+255),b
  2788  003870  0E3F               	movlw	63
  2789  003872  6FB6               	movwf	(?_exp+3)& (0+255),b
  2790                           
  2791                           ; BSR set to: 0
  2792  003874  0012               	return	
  2793  003876                     l6866:
  2794                           
  2795                           ; BSR set to: 0
  2796  003876  0E18               	movlw	24
  2797  003878  0100               	movlb	0	; () banked
  2798  00387A  6F60               	movwf	___flge@ff1& (0+255),b
  2799  00387C  0E72               	movlw	114
  2800  00387E  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  2801  003880  0E31               	movlw	49
  2802  003882  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  2803  003884  0E44               	movlw	68
  2804  003886  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  2805  003888  C0B3  F064         	movff	exp@x,___flge@ff2
  2806  00388C  C0B4  F065         	movff	exp@x+1,___flge@ff2+1
  2807  003890  C0B5  F066         	movff	exp@x+2,___flge@ff2+2
  2808  003894  C0B6  F067         	movff	exp@x+3,___flge@ff2+3
  2809  003898  EC40  F022         	call	___flge	;wreg free
  2810  00389C  0100               	movlb	0	; () banked
  2811  00389E  B0D8               	btfsc	status,0,c
  2812  0038A0  D00F               	goto	l6872
  2813                           
  2814                           ; BSR set to: 0
  2815  0038A2  0E00               	movlw	0
  2816  0038A4  0100               	movlb	0	; () banked
  2817  0038A6  6FE5               	movwf	(_errno+1)& (0+255),b
  2818  0038A8  0E22               	movlw	34
  2819  0038AA  6FE4               	movwf	_errno& (0+255),b
  2820  0038AC  0EFF               	movlw	255
  2821  0038AE  0100               	movlb	0	; () banked
  2822  0038B0  6FB3               	movwf	?_exp& (0+255),b
  2823  0038B2  0EFF               	movlw	255
  2824  0038B4  6FB4               	movwf	(?_exp+1)& (0+255),b
  2825  0038B6  0E7F               	movlw	127
  2826  0038B8  6FB5               	movwf	(?_exp+2)& (0+255),b
  2827  0038BA  0E7F               	movlw	127
  2828  0038BC  6FB6               	movwf	(?_exp+3)& (0+255),b
  2829                           
  2830                           ; BSR set to: 0
  2831  0038BE  0012               	return	
  2832  0038C0                     l6872:
  2833                           
  2834                           ; BSR set to: 0
  2835  0038C0  C0B3  F060         	movff	exp@x,___flge@ff1
  2836  0038C4  C0B4  F061         	movff	exp@x+1,___flge@ff1+1
  2837  0038C8  C0B5  F062         	movff	exp@x+2,___flge@ff1+2
  2838  0038CC  C0B6  F063         	movff	exp@x+3,___flge@ff1+3
  2839  0038D0  0E87               	movlw	135
  2840  0038D2  0100               	movlb	0	; () banked
  2841  0038D4  6F64               	movwf	___flge@ff2& (0+255),b
  2842  0038D6  0E48               	movlw	72
  2843  0038D8  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2844  0038DA  0E3A               	movlw	58
  2845  0038DC  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2846  0038DE  0EC4               	movlw	196
  2847  0038E0  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2848  0038E2  EC40  F022         	call	___flge	;wreg free
  2849  0038E6  0100               	movlb	0	; () banked
  2850  0038E8  B0D8               	btfsc	status,0,c
  2851  0038EA  D00F               	goto	l6878
  2852                           
  2853                           ; BSR set to: 0
  2854  0038EC  0E00               	movlw	0
  2855  0038EE  0100               	movlb	0	; () banked
  2856  0038F0  6FE5               	movwf	(_errno+1)& (0+255),b
  2857  0038F2  0E22               	movlw	34
  2858  0038F4  6FE4               	movwf	_errno& (0+255),b
  2859  0038F6  0E00               	movlw	0
  2860  0038F8  0100               	movlb	0	; () banked
  2861  0038FA  6FB3               	movwf	?_exp& (0+255),b
  2862  0038FC  0E00               	movlw	0
  2863  0038FE  6FB4               	movwf	(?_exp+1)& (0+255),b
  2864  003900  0E00               	movlw	0
  2865  003902  6FB5               	movwf	(?_exp+2)& (0+255),b
  2866  003904  0E00               	movlw	0
  2867  003906  6FB6               	movwf	(?_exp+3)& (0+255),b
  2868                           
  2869                           ; BSR set to: 0
  2870  003908  0012               	return	
  2871  00390A                     l6878:
  2872                           
  2873                           ; BSR set to: 0
  2874  00390A  0100               	movlb	0	; () banked
  2875  00390C  AFB6               	btfss	(exp@x+3)& (0+255),7,b
  2876  00390E  D002               	goto	u9510
  2877  003910  0E01               	movlw	1
  2878  003912  D001               	goto	u9520
  2879  003914                     u9510:
  2880  003914  0E00               	movlw	0
  2881  003916                     u9520:
  2882  003916  0100               	movlb	0	; () banked
  2883  003918  6FBD               	movwf	exp@sign& (0+255),b
  2884                           
  2885                           ; BSR set to: 0
  2886  00391A  0100               	movlb	0	; () banked
  2887  00391C  51BD               	movf	exp@sign& (0+255),w,b
  2888  00391E  0100               	movlb	0	; () banked
  2889  003920  B4D8               	btfsc	status,2,c
  2890  003922  D012               	goto	l6884
  2891                           
  2892                           ; BSR set to: 0
  2893  003924  C0B3  F01F         	movff	exp@x,___flneg@f1
  2894  003928  C0B4  F020         	movff	exp@x+1,___flneg@f1+1
  2895  00392C  C0B5  F021         	movff	exp@x+2,___flneg@f1+2
  2896  003930  C0B6  F022         	movff	exp@x+3,___flneg@f1+3
  2897  003934  ECE0  F027         	call	___flneg	;wreg free
  2898  003938  C01F  F0B3         	movff	?___flneg,exp@x
  2899  00393C  C020  F0B4         	movff	?___flneg+1,exp@x+1
  2900  003940  C021  F0B5         	movff	?___flneg+2,exp@x+2
  2901  003944  C022  F0B6         	movff	?___flneg+3,exp@x+3
  2902  003948                     l6884:
  2903  003948  C0B3  F06E         	movff	exp@x,___flmul@b
  2904  00394C  C0B4  F06F         	movff	exp@x+1,___flmul@b+1
  2905  003950  C0B5  F070         	movff	exp@x+2,___flmul@b+2
  2906  003954  C0B6  F071         	movff	exp@x+3,___flmul@b+3
  2907  003958  0E3B               	movlw	59
  2908  00395A  0100               	movlb	0	; () banked
  2909  00395C  6F72               	movwf	___flmul@a& (0+255),b
  2910  00395E  0EAA               	movlw	170
  2911  003960  6F73               	movwf	(___flmul@a+1)& (0+255),b
  2912  003962  0EB8               	movlw	184
  2913  003964  6F74               	movwf	(___flmul@a+2)& (0+255),b
  2914  003966  0E3F               	movlw	63
  2915  003968  6F75               	movwf	(___flmul@a+3)& (0+255),b
  2916  00396A  EC5E  F014         	call	___flmul	;wreg free
  2917  00396E  C06E  F0B3         	movff	?___flmul,exp@x
  2918  003972  C06F  F0B4         	movff	?___flmul+1,exp@x+1
  2919  003976  C070  F0B5         	movff	?___flmul+2,exp@x+2
  2920  00397A  C071  F0B6         	movff	?___flmul+3,exp@x+3
  2921  00397E  C0B3  F0A5         	movff	exp@x,floor@x
  2922  003982  C0B4  F0A6         	movff	exp@x+1,floor@x+1
  2923  003986  C0B5  F0A7         	movff	exp@x+2,floor@x+2
  2924  00398A  C0B6  F0A8         	movff	exp@x+3,floor@x+3
  2925  00398E  EC80  F023         	call	_floor	;wreg free
  2926  003992  C0A5  F0B7         	movff	?_floor,_exp$4057
  2927  003996  C0A6  F0B8         	movff	?_floor+1,_exp$4057+1
  2928  00399A  C0A7  F0B9         	movff	?_floor+2,_exp$4057+2
  2929  00399E  C0A8  F0BA         	movff	?_floor+3,_exp$4057+3
  2930  0039A2  C0B7  F09B         	movff	_exp$4057,___fltol@f1
  2931  0039A6  C0B8  F09C         	movff	_exp$4057+1,___fltol@f1+1
  2932  0039AA  C0B9  F09D         	movff	_exp$4057+2,___fltol@f1+2
  2933  0039AE  C0BA  F09E         	movff	_exp$4057+3,___fltol@f1+3
  2934  0039B2  EC9C  F024         	call	___fltol	;wreg free
  2935  0039B6  C09B  F0BB         	movff	?___fltol,exp@exponent
  2936  0039BA  C09C  F0BC         	movff	?___fltol+1,exp@exponent+1
  2937  0039BE  C0B3  F09B         	movff	exp@x,___flsub@b
  2938  0039C2  C0B4  F09C         	movff	exp@x+1,___flsub@b+1
  2939  0039C6  C0B5  F09D         	movff	exp@x+2,___flsub@b+2
  2940  0039CA  C0B6  F09E         	movff	exp@x+3,___flsub@b+3
  2941  0039CE  C0BB  F060         	movff	exp@exponent,___xxtofl@val
  2942  0039D2  C0BC  F061         	movff	exp@exponent+1,___xxtofl@val+1
  2943  0039D6  0100               	movlb	0	; () banked
  2944  0039D8  0E00               	movlw	0
  2945  0039DA  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2946  0039DC  0EFF               	movlw	-1
  2947  0039DE  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  2948  0039E0  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  2949  0039E2  0E01               	movlw	1
  2950  0039E4  ECBD  F01F         	call	___xxtofl
  2951  0039E8  C060  F09F         	movff	?___xxtofl,___flsub@a
  2952  0039EC  C061  F0A0         	movff	?___xxtofl+1,___flsub@a+1
  2953  0039F0  C062  F0A1         	movff	?___xxtofl+2,___flsub@a+2
  2954  0039F4  C063  F0A2         	movff	?___xxtofl+3,___flsub@a+3
  2955  0039F8  EC64  F027         	call	___flsub	;wreg free
  2956  0039FC  C09B  F0B3         	movff	?___flsub,exp@x
  2957  003A00  C09C  F0B4         	movff	?___flsub+1,exp@x+1
  2958  003A04  C09D  F0B5         	movff	?___flsub+2,exp@x+2
  2959  003A08  C09E  F0B6         	movff	?___flsub+3,exp@x+3
  2960  003A0C  C0B3  F09B         	movff	exp@x,eval_poly@x
  2961  003A10  C0B4  F09C         	movff	exp@x+1,eval_poly@x+1
  2962  003A14  C0B5  F09D         	movff	exp@x+2,eval_poly@x+2
  2963  003A18  C0B6  F09E         	movff	exp@x+3,eval_poly@x+3
  2964  003A1C  0E01               	movlw	low exp@coeff
  2965  003A1E  0100               	movlb	0	; () banked
  2966  003A20  6F9F               	movwf	eval_poly@d& (0+255),b
  2967  003A22  0E0D               	movlw	high exp@coeff
  2968  003A24  0100               	movlb	0	; () banked
  2969  003A26  6FA0               	movwf	(eval_poly@d+1)& (0+255),b
  2970  003A28  0E00               	movlw	0
  2971  003A2A  0100               	movlb	0	; () banked
  2972  003A2C  6FA2               	movwf	(eval_poly@n+1)& (0+255),b
  2973  003A2E  0E09               	movlw	9
  2974  003A30  6FA1               	movwf	eval_poly@n& (0+255),b
  2975  003A32  EC10  F024         	call	_eval_poly	;wreg free
  2976  003A36  C09B  F0AB         	movff	?_eval_poly,ldexp@value
  2977  003A3A  C09C  F0AC         	movff	?_eval_poly+1,ldexp@value+1
  2978  003A3E  C09D  F0AD         	movff	?_eval_poly+2,ldexp@value+2
  2979  003A42  C09E  F0AE         	movff	?_eval_poly+3,ldexp@value+3
  2980  003A46  C0BB  F0AF         	movff	exp@exponent,ldexp@newexp
  2981  003A4A  C0BC  F0B0         	movff	exp@exponent+1,ldexp@newexp+1
  2982  003A4E  ECEE  F022         	call	_ldexp	;wreg free
  2983  003A52  C0AB  F0B3         	movff	?_ldexp,exp@x
  2984  003A56  C0AC  F0B4         	movff	?_ldexp+1,exp@x+1
  2985  003A5A  C0AD  F0B5         	movff	?_ldexp+2,exp@x+2
  2986  003A5E  C0AE  F0B6         	movff	?_ldexp+3,exp@x+3
  2987  003A62  0100               	movlb	0	; () banked
  2988  003A64  51BD               	movf	exp@sign& (0+255),w,b
  2989  003A66  0100               	movlb	0	; () banked
  2990  003A68  B4D8               	btfsc	status,2,c
  2991  003A6A  D035               	goto	l1386
  2992                           
  2993                           ; BSR set to: 0
  2994  003A6C  0100               	movlb	0	; () banked
  2995  003A6E  29B3               	incf	exp@x& (0+255),w,b
  2996  003A70  E116               	bnz	l6902
  2997  003A72  0100               	movlb	0	; () banked
  2998  003A74  29B4               	incf	(exp@x+1)& (0+255),w,b
  2999  003A76  E113               	bnz	l6902
  3000  003A78  0E7F               	movlw	127
  3001  003A7A  0100               	movlb	0	; () banked
  3002  003A7C  19B5               	xorwf	(exp@x+2)& (0+255),w,b
  3003  003A7E  E10F               	bnz	l6902
  3004  003A80  0E7F               	movlw	127
  3005  003A82  0100               	movlb	0	; () banked
  3006  003A84  19B6               	xorwf	(exp@x+3)& (0+255),w,b
  3007  003A86  A4D8               	btfss	status,2,c
  3008  003A88  D00A               	goto	l6902
  3009                           
  3010                           ; BSR set to: 0
  3011  003A8A  0E00               	movlw	0
  3012  003A8C  0100               	movlb	0	; () banked
  3013  003A8E  6FB3               	movwf	?_exp& (0+255),b
  3014  003A90  0E00               	movlw	0
  3015  003A92  6FB4               	movwf	(?_exp+1)& (0+255),b
  3016  003A94  0E00               	movlw	0
  3017  003A96  6FB5               	movwf	(?_exp+2)& (0+255),b
  3018  003A98  0E00               	movlw	0
  3019  003A9A  6FB6               	movwf	(?_exp+3)& (0+255),b
  3020                           
  3021                           ; BSR set to: 0
  3022  003A9C  0012               	return	
  3023  003A9E                     l6902:
  3024                           
  3025                           ; BSR set to: 0
  3026  003A9E  0E00               	movlw	0
  3027  003AA0  0100               	movlb	0	; () banked
  3028  003AA2  6F60               	movwf	___fldiv@b& (0+255),b
  3029  003AA4  0E00               	movlw	0
  3030  003AA6  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  3031  003AA8  0E80               	movlw	128
  3032  003AAA  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  3033  003AAC  0E3F               	movlw	63
  3034  003AAE  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  3035  003AB0  C0B3  F064         	movff	exp@x,___fldiv@a
  3036  003AB4  C0B4  F065         	movff	exp@x+1,___fldiv@a+1
  3037  003AB8  C0B5  F066         	movff	exp@x+2,___fldiv@a+2
  3038  003ABC  C0B6  F067         	movff	exp@x+3,___fldiv@a+3
  3039  003AC0  ECAA  F018         	call	___fldiv	;wreg free
  3040  003AC4  C060  F0B3         	movff	?___fldiv,?_exp
  3041  003AC8  C061  F0B4         	movff	?___fldiv+1,?_exp+1
  3042  003ACC  C062  F0B5         	movff	?___fldiv+2,?_exp+2
  3043  003AD0  C063  F0B6         	movff	?___fldiv+3,?_exp+3
  3044  003AD4  0012               	return	
  3045  003AD6                     l1386:
  3046                           
  3047                           ; BSR set to: 0
  3048  003AD6  C0B3  F0B3         	movff	exp@x,?_exp
  3049  003ADA  C0B4  F0B4         	movff	exp@x+1,?_exp+1
  3050  003ADE  C0B5  F0B5         	movff	exp@x+2,?_exp+2
  3051  003AE2  C0B6  F0B6         	movff	exp@x+3,?_exp+3
  3052  003AE6  0012               	return		;funcret
  3053  003AE8                     __end_of_exp:
  3054                           	opt stack 0
  3055                           tblptru	equ	0xFF8
  3056                           tblptrh	equ	0xFF7
  3057                           tblptrl	equ	0xFF6
  3058                           tablat	equ	0xFF5
  3059                           postinc0	equ	0xFEE
  3060                           wreg	equ	0xFE8
  3061                           postdec1	equ	0xFE5
  3062                           fsr1l	equ	0xFE1
  3063                           status	equ	0xFD8
  3064                           
  3065 ;; *************** function _ldexp *****************
  3066 ;; Defined at:
  3067 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  value           4   75[BANK0 ] unsigned char 
  3070 ;;  newexp          2   79[BANK0 ] int 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  4   75[BANK0 ] int 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3082 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3084 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3085 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3086 ;;Total ram usage:        8 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    2
  3089 ;; This function calls:
  3090 ;;		Nothing
  3091 ;; This function is called by:
  3092 ;;		_exp
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text6
  3097  0045DC                     __ptext6:
  3098                           	opt stack 0
  3099  0045DC                     _ldexp:
  3100                           	opt stack 25
  3101                           
  3102                           ;incstack = 0
  3103  0045DC  0100               	movlb	0	; () banked
  3104  0045DE  51AB               	movf	ldexp@value& (0+255),w,b
  3105  0045E0  0100               	movlb	0	; () banked
  3106  0045E2  11AC               	iorwf	(ldexp@value+1)& (0+255),w,b
  3107  0045E4  0100               	movlb	0	; () banked
  3108  0045E6  11AD               	iorwf	(ldexp@value+2)& (0+255),w,b
  3109  0045E8  0100               	movlb	0	; () banked
  3110  0045EA  11AE               	iorwf	(ldexp@value+3)& (0+255),w,b
  3111  0045EC  A4D8               	btfss	status,2,c
  3112  0045EE  D00A               	goto	l6390
  3113                           
  3114                           ; BSR set to: 0
  3115  0045F0  0E00               	movlw	0
  3116  0045F2  0100               	movlb	0	; () banked
  3117  0045F4  6FAB               	movwf	?_ldexp& (0+255),b
  3118  0045F6  0E00               	movlw	0
  3119  0045F8  6FAC               	movwf	(?_ldexp+1)& (0+255),b
  3120  0045FA  0E00               	movlw	0
  3121  0045FC  6FAD               	movwf	(?_ldexp+2)& (0+255),b
  3122  0045FE  0E00               	movlw	0
  3123  004600  6FAE               	movwf	(?_ldexp+3)& (0+255),b
  3124                           
  3125                           ; BSR set to: 0
  3126  004602  0012               	return	
  3127  004604                     l6390:
  3128                           
  3129                           ; BSR set to: 0
  3130  004604  0100               	movlb	0	; () banked
  3131  004606  51AE               	movf	(ldexp@value+3)& (0+255),w,b
  3132  004608  0B7F               	andlw	127
  3133  00460A  0100               	movlb	0	; () banked
  3134  00460C  6FB1               	movwf	??_ldexp& (0+255),b
  3135  00460E  6BB2               	clrf	(??_ldexp+1)& (0+255),b
  3136  004610  90D8               	bcf	status,0,c
  3137  004612  0100               	movlb	0	; () banked
  3138  004614  37B1               	rlcf	??_ldexp& (0+255),f,b
  3139  004616  37B2               	rlcf	(??_ldexp+1)& (0+255),f,b
  3140  004618  0100               	movlb	0	; () banked
  3141  00461A  51B1               	movf	??_ldexp& (0+255),w,b
  3142  00461C  0100               	movlb	0	; () banked
  3143  00461E  27AF               	addwf	ldexp@newexp& (0+255),f,b
  3144  004620  0100               	movlb	0	; () banked
  3145  004622  51B2               	movf	(??_ldexp+1)& (0+255),w,b
  3146  004624  0100               	movlb	0	; () banked
  3147  004626  23B0               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  3148  004628  0100               	movlb	0	; () banked
  3149  00462A  AFAD               	btfss	(ldexp@value+2)& (0+255),7,b
  3150  00462C  D004               	goto	u8450
  3151  00462E  0100               	movlb	0	; () banked
  3152  004630  6BB1               	clrf	??_ldexp& (0+255),b
  3153  004632  2BB1               	incf	??_ldexp& (0+255),f,b
  3154  004634  D002               	goto	u8458
  3155  004636                     u8450:
  3156  004636  0100               	movlb	0	; () banked
  3157  004638  6BB1               	clrf	??_ldexp& (0+255),b
  3158  00463A                     u8458:
  3159  00463A  0100               	movlb	0	; () banked
  3160  00463C  51B1               	movf	??_ldexp& (0+255),w,b
  3161  00463E  0100               	movlb	0	; () banked
  3162  004640  27AF               	addwf	ldexp@newexp& (0+255),f,b
  3163  004642  0E00               	movlw	0
  3164  004644  23B0               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  3165  004646  0100               	movlb	0	; () banked
  3166  004648  AFB0               	btfss	(ldexp@newexp+1)& (0+255),7,b
  3167  00464A  D00F               	goto	l6398
  3168                           
  3169                           ; BSR set to: 0
  3170  00464C  0E00               	movlw	0
  3171  00464E  0100               	movlb	0	; () banked
  3172  004650  6FE5               	movwf	(_errno+1)& (0+255),b
  3173  004652  0E22               	movlw	34
  3174  004654  6FE4               	movwf	_errno& (0+255),b
  3175  004656  0E00               	movlw	0
  3176  004658  0100               	movlb	0	; () banked
  3177  00465A  6FAB               	movwf	?_ldexp& (0+255),b
  3178  00465C  0E00               	movlw	0
  3179  00465E  6FAC               	movwf	(?_ldexp+1)& (0+255),b
  3180  004660  0E00               	movlw	0
  3181  004662  6FAD               	movwf	(?_ldexp+2)& (0+255),b
  3182  004664  0E00               	movlw	0
  3183  004666                     L3:
  3184  004666  6FAE               	movwf	(?_ldexp+3)& (0+255),b
  3185                           
  3186                           ; BSR set to: 0
  3187  004668  0012               	return	
  3188  00466A                     l6398:
  3189                           
  3190                           ; BSR set to: 0
  3191  00466A  0100               	movlb	0	; () banked
  3192  00466C  BFB0               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  3193  00466E  D01E               	goto	l6414
  3194  004670  0100               	movlb	0	; () banked
  3195  004672  05B0               	decf	(ldexp@newexp+1)& (0+255),w,b
  3196  004674  A0D8               	btfss	status,0,c
  3197  004676  D01A               	goto	l6414
  3198                           
  3199                           ; BSR set to: 0
  3200  004678  0E00               	movlw	0
  3201  00467A  0100               	movlb	0	; () banked
  3202  00467C  6FE5               	movwf	(_errno+1)& (0+255),b
  3203  00467E  0E22               	movlw	34
  3204  004680  6FE4               	movwf	_errno& (0+255),b
  3205                           
  3206                           ; BSR set to: 0
  3207  004682  0100               	movlb	0	; () banked
  3208  004684  AFAE               	btfss	(ldexp@value+3)& (0+255),7,b
  3209  004686  D009               	goto	l6410
  3210                           
  3211                           ; BSR set to: 0
  3212  004688  0EFF               	movlw	255
  3213  00468A  0100               	movlb	0	; () banked
  3214  00468C  6FAB               	movwf	?_ldexp& (0+255),b
  3215  00468E  0EFF               	movlw	255
  3216  004690  6FAC               	movwf	(?_ldexp+1)& (0+255),b
  3217  004692  0E7F               	movlw	127
  3218  004694  6FAD               	movwf	(?_ldexp+2)& (0+255),b
  3219  004696  0EFF               	movlw	255
  3220  004698  D7E6               	goto	L3
  3221  00469A                     l6410:
  3222                           
  3223                           ; BSR set to: 0
  3224  00469A  0EFF               	movlw	255
  3225  00469C  0100               	movlb	0	; () banked
  3226  00469E  6FAB               	movwf	?_ldexp& (0+255),b
  3227  0046A0  0EFF               	movlw	255
  3228  0046A2  6FAC               	movwf	(?_ldexp+1)& (0+255),b
  3229  0046A4  0E7F               	movlw	127
  3230  0046A6  6FAD               	movwf	(?_ldexp+2)& (0+255),b
  3231  0046A8  0E7F               	movlw	127
  3232  0046AA  D7DD               	goto	L3
  3233  0046AC                     l6414:
  3234                           
  3235                           ; BSR set to: 0
  3236  0046AC  0100               	movlb	0	; () banked
  3237  0046AE  35B0               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  3238  0046B0  31B0               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  3239  0046B2  0100               	movlb	0	; () banked
  3240  0046B4  6FB2               	movwf	(??_ldexp+1)& (0+255),b
  3241  0046B6  0100               	movlb	0	; () banked
  3242  0046B8  31AF               	rrcf	ldexp@newexp& (0+255),w,b
  3243  0046BA  0100               	movlb	0	; () banked
  3244  0046BC  6FB1               	movwf	??_ldexp& (0+255),b
  3245  0046BE  0100               	movlb	0	; () banked
  3246  0046C0  51AE               	movf	(ldexp@value+3)& (0+255),w,b
  3247  0046C2  0100               	movlb	0	; () banked
  3248  0046C4  19B1               	xorwf	??_ldexp& (0+255),w,b
  3249  0046C6  0B80               	andlw	-128
  3250  0046C8  19B1               	xorwf	??_ldexp& (0+255),w,b
  3251  0046CA  0100               	movlb	0	; () banked
  3252  0046CC  6FAE               	movwf	(ldexp@value+3)& (0+255),b
  3253  0046CE  C0AF  F0B1         	movff	ldexp@newexp,??_ldexp
  3254  0046D2  0E01               	movlw	1
  3255  0046D4  0100               	movlb	0	; () banked
  3256  0046D6  17B1               	andwf	??_ldexp& (0+255),f,b
  3257  0046D8  0100               	movlb	0	; () banked
  3258  0046DA  33B1               	rrcf	??_ldexp& (0+255),f,b
  3259  0046DC  33B1               	rrcf	??_ldexp& (0+255),f,b
  3260  0046DE  0100               	movlb	0	; () banked
  3261  0046E0  51AD               	movf	(ldexp@value+2)& (0+255),w,b
  3262  0046E2  0100               	movlb	0	; () banked
  3263  0046E4  19B1               	xorwf	??_ldexp& (0+255),w,b
  3264  0046E6  0B7F               	andlw	-129
  3265  0046E8  19B1               	xorwf	??_ldexp& (0+255),w,b
  3266  0046EA  0100               	movlb	0	; () banked
  3267  0046EC  6FAD               	movwf	(ldexp@value+2)& (0+255),b
  3268                           
  3269                           ; BSR set to: 0
  3270                           
  3271                           ; BSR set to: 0
  3272                           
  3273                           ; BSR set to: 0
  3274  0046EE  C0AB  F0AB         	movff	ldexp@value,?_ldexp
  3275  0046F2  C0AC  F0AC         	movff	ldexp@value+1,?_ldexp+1
  3276  0046F6  C0AD  F0AD         	movff	ldexp@value+2,?_ldexp+2
  3277  0046FA  C0AE  F0AE         	movff	ldexp@value+3,?_ldexp+3
  3278  0046FE  0012               	return	
  3279  004700                     __end_of_ldexp:
  3280                           	opt stack 0
  3281                           tblptru	equ	0xFF8
  3282                           tblptrh	equ	0xFF7
  3283                           tblptrl	equ	0xFF6
  3284                           tablat	equ	0xFF5
  3285                           postinc0	equ	0xFEE
  3286                           wreg	equ	0xFE8
  3287                           postdec1	equ	0xFE5
  3288                           fsr1l	equ	0xFE1
  3289                           status	equ	0xFD8
  3290                           
  3291 ;; *************** function _floor *****************
  3292 ;; Defined at:
  3293 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  x               4   69[BANK0 ] int 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;  i               4   73[BANK0 ] int 
  3298 ;;  expon           2   77[BANK0 ] int 
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  4   69[BANK0 ] int 
  3301 ;; Registers used:
  3302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3308 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3309 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3311 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3312 ;;Total ram usage:       10 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:    3
  3315 ;; This function calls:
  3316 ;;		___fladd
  3317 ;;		___flge
  3318 ;;		___fltol
  3319 ;;		___xxtofl
  3320 ;;		_frexp
  3321 ;; This function is called by:
  3322 ;;		_exp
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text7
  3327  004700                     __ptext7:
  3328                           	opt stack 0
  3329  004700                     _floor:
  3330                           	opt stack 24
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;incstack = 0
  3334  004700  C0A5  F01F         	movff	floor@x,frexp@value
  3335  004704  C0A6  F020         	movff	floor@x+1,frexp@value+1
  3336  004708  C0A7  F021         	movff	floor@x+2,frexp@value+2
  3337  00470C  C0A8  F022         	movff	floor@x+3,frexp@value+3
  3338  004710  0EAD               	movlw	low floor@expon
  3339  004712  6E23               	movwf	frexp@eptr,c
  3340  004714  0E00               	movlw	high floor@expon
  3341  004716  6E24               	movwf	frexp@eptr+1,c
  3342  004718  EC4A  F026         	call	_frexp	;wreg free
  3343  00471C  0100               	movlb	0	; () banked
  3344  00471E  AFAE               	btfss	(floor@expon+1)& (0+255),7,b
  3345  004720  D017               	goto	l6368
  3346                           
  3347                           ; BSR set to: 0
  3348  004722  0100               	movlb	0	; () banked
  3349  004724  AFA8               	btfss	(floor@x+3)& (0+255),7,b
  3350  004726  D00A               	goto	l6364
  3351                           
  3352                           ; BSR set to: 0
  3353  004728  0E00               	movlw	0
  3354  00472A  0100               	movlb	0	; () banked
  3355  00472C  6FA5               	movwf	?_floor& (0+255),b
  3356  00472E  0E00               	movlw	0
  3357  004730  6FA6               	movwf	(?_floor+1)& (0+255),b
  3358  004732  0E80               	movlw	128
  3359  004734  6FA7               	movwf	(?_floor+2)& (0+255),b
  3360  004736  0EBF               	movlw	191
  3361  004738  6FA8               	movwf	(?_floor+3)& (0+255),b
  3362                           
  3363                           ; BSR set to: 0
  3364  00473A  0012               	return	
  3365  00473C                     l6364:
  3366                           
  3367                           ; BSR set to: 0
  3368  00473C  0E00               	movlw	0
  3369  00473E  0100               	movlb	0	; () banked
  3370  004740  6FA5               	movwf	?_floor& (0+255),b
  3371  004742  0E00               	movlw	0
  3372  004744  6FA6               	movwf	(?_floor+1)& (0+255),b
  3373  004746  0E00               	movlw	0
  3374  004748  6FA7               	movwf	(?_floor+2)& (0+255),b
  3375  00474A  0E00               	movlw	0
  3376  00474C  6FA8               	movwf	(?_floor+3)& (0+255),b
  3377                           
  3378                           ; BSR set to: 0
  3379  00474E  0012               	return	
  3380  004750                     l6368:
  3381                           
  3382                           ; BSR set to: 0
  3383  004750  0100               	movlb	0	; () banked
  3384  004752  51AE               	movf	(floor@expon+1)& (0+255),w,b
  3385  004754  E105               	bnz	u8410
  3386  004756  0E1D               	movlw	29
  3387  004758  0100               	movlb	0	; () banked
  3388  00475A  5DAD               	subwf	floor@expon& (0+255),w,b
  3389  00475C  A0D8               	btfss	status,0,c
  3390  00475E  D009               	goto	l6372
  3391  004760                     u8410:
  3392                           
  3393                           ; BSR set to: 0
  3394  004760  C0A5  F0A5         	movff	floor@x,?_floor
  3395  004764  C0A6  F0A6         	movff	floor@x+1,?_floor+1
  3396  004768  C0A7  F0A7         	movff	floor@x+2,?_floor+2
  3397  00476C  C0A8  F0A8         	movff	floor@x+3,?_floor+3
  3398  004770  0012               	return	
  3399  004772                     l6372:
  3400                           
  3401                           ; BSR set to: 0
  3402  004772  C0A5  F09B         	movff	floor@x,___fltol@f1
  3403  004776  C0A6  F09C         	movff	floor@x+1,___fltol@f1+1
  3404  00477A  C0A7  F09D         	movff	floor@x+2,___fltol@f1+2
  3405  00477E  C0A8  F09E         	movff	floor@x+3,___fltol@f1+3
  3406  004782  EC9C  F024         	call	___fltol	;wreg free
  3407  004786  C09B  F060         	movff	?___fltol,___xxtofl@val
  3408  00478A  C09C  F061         	movff	?___fltol+1,___xxtofl@val+1
  3409  00478E  C09D  F062         	movff	?___fltol+2,___xxtofl@val+2
  3410  004792  C09E  F063         	movff	?___fltol+3,___xxtofl@val+3
  3411  004796  0E01               	movlw	1
  3412  004798  ECBD  F01F         	call	___xxtofl
  3413  00479C  C060  F0A9         	movff	?___xxtofl,floor@i
  3414  0047A0  C061  F0AA         	movff	?___xxtofl+1,floor@i+1
  3415  0047A4  C062  F0AB         	movff	?___xxtofl+2,floor@i+2
  3416  0047A8  C063  F0AC         	movff	?___xxtofl+3,floor@i+3
  3417  0047AC  C0A5  F060         	movff	floor@x,___flge@ff1
  3418  0047B0  C0A6  F061         	movff	floor@x+1,___flge@ff1+1
  3419  0047B4  C0A7  F062         	movff	floor@x+2,___flge@ff1+2
  3420  0047B8  C0A8  F063         	movff	floor@x+3,___flge@ff1+3
  3421  0047BC  C0A9  F064         	movff	floor@i,___flge@ff2
  3422  0047C0  C0AA  F065         	movff	floor@i+1,___flge@ff2+1
  3423  0047C4  C0AB  F066         	movff	floor@i+2,___flge@ff2+2
  3424  0047C8  C0AC  F067         	movff	floor@i+3,___flge@ff2+3
  3425  0047CC  EC40  F022         	call	___flge	;wreg free
  3426  0047D0  0100               	movlb	0	; () banked
  3427  0047D2  B0D8               	btfsc	status,0,c
  3428  0047D4  D01C               	goto	l1396
  3429                           
  3430                           ; BSR set to: 0
  3431  0047D6  C0A9  F087         	movff	floor@i,___fladd@b
  3432  0047DA  C0AA  F088         	movff	floor@i+1,___fladd@b+1
  3433  0047DE  C0AB  F089         	movff	floor@i+2,___fladd@b+2
  3434  0047E2  C0AC  F08A         	movff	floor@i+3,___fladd@b+3
  3435  0047E6  0E00               	movlw	0
  3436  0047E8  0100               	movlb	0	; () banked
  3437  0047EA  6F8B               	movwf	___fladd@a& (0+255),b
  3438  0047EC  0E00               	movlw	0
  3439  0047EE  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  3440  0047F0  0E80               	movlw	128
  3441  0047F2  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  3442  0047F4  0EBF               	movlw	191
  3443  0047F6  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  3444  0047F8  EC0A  F012         	call	___fladd	;wreg free
  3445  0047FC  C087  F0A5         	movff	?___fladd,?_floor
  3446  004800  C088  F0A6         	movff	?___fladd+1,?_floor+1
  3447  004804  C089  F0A7         	movff	?___fladd+2,?_floor+2
  3448  004808  C08A  F0A8         	movff	?___fladd+3,?_floor+3
  3449  00480C  0012               	return	
  3450  00480E                     l1396:
  3451                           
  3452                           ; BSR set to: 0
  3453  00480E  C0A9  F0A5         	movff	floor@i,?_floor
  3454  004812  C0AA  F0A6         	movff	floor@i+1,?_floor+1
  3455  004816  C0AB  F0A7         	movff	floor@i+2,?_floor+2
  3456  00481A  C0AC  F0A8         	movff	floor@i+3,?_floor+3
  3457  00481E  0012               	return		;funcret
  3458  004820                     __end_of_floor:
  3459                           	opt stack 0
  3460                           tblptru	equ	0xFF8
  3461                           tblptrh	equ	0xFF7
  3462                           tblptrl	equ	0xFF6
  3463                           tablat	equ	0xFF5
  3464                           postinc0	equ	0xFEE
  3465                           wreg	equ	0xFE8
  3466                           postdec1	equ	0xFE5
  3467                           fsr1l	equ	0xFE1
  3468                           status	equ	0xFD8
  3469                           
  3470 ;; *************** function _frexp *****************
  3471 ;; Defined at:
  3472 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  value           4   30[COMRAM] int 
  3475 ;;  eptr            2   34[COMRAM] PTR int 
  3476 ;;		 -> log@exponent(2), floor@expon(2), 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  4   30[COMRAM] PTR int 
  3481 ;; Registers used:
  3482 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3488 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3490 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3491 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3492 ;;Total ram usage:        8 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    2
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_floor
  3499 ;;		_log
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text8
  3504  004C94                     __ptext8:
  3505                           	opt stack 0
  3506  004C94                     _frexp:
  3507                           	opt stack 25
  3508                           
  3509                           ;incstack = 0
  3510  004C94  501F               	movf	frexp@value,w,c
  3511  004C96  1020               	iorwf	frexp@value+1,w,c
  3512  004C98  1021               	iorwf	frexp@value+2,w,c
  3513  004C9A  1022               	iorwf	frexp@value+3,w,c
  3514  004C9C  A4D8               	btfss	status,2,c
  3515  004C9E  D011               	goto	l6192
  3516  004CA0  C023  FFD9         	movff	frexp@eptr,fsr2l
  3517  004CA4  C024  FFDA         	movff	frexp@eptr+1,fsr2h
  3518  004CA8  0E00               	movlw	0
  3519  004CAA  6EDE               	movwf	postinc2,c
  3520  004CAC  0E00               	movlw	0
  3521  004CAE  6EDD               	movwf	postdec2,c
  3522  004CB0  0E00               	movlw	0
  3523  004CB2  6E1F               	movwf	?_frexp,c
  3524  004CB4  0E00               	movlw	0
  3525  004CB6  6E20               	movwf	?_frexp+1,c
  3526  004CB8  0E00               	movlw	0
  3527  004CBA  6E21               	movwf	?_frexp+2,c
  3528  004CBC  0E00               	movlw	0
  3529  004CBE  6E22               	movwf	?_frexp+3,c
  3530  004CC0  0012               	return	
  3531  004CC2                     l6192:
  3532  004CC2  5022               	movf	frexp@value+3,w,c
  3533  004CC4  0B7F               	andlw	127
  3534  004CC6  0100               	movlb	0	; () banked
  3535  004CC8  6F60               	movwf	??_frexp& (0+255),b
  3536  004CCA  6B61               	clrf	(??_frexp+1)& (0+255),b
  3537  004CCC  90D8               	bcf	status,0,c
  3538  004CCE  0100               	movlb	0	; () banked
  3539  004CD0  3760               	rlcf	??_frexp& (0+255),f,b
  3540  004CD2  3761               	rlcf	(??_frexp+1)& (0+255),f,b
  3541  004CD4  C023  FFD9         	movff	frexp@eptr,fsr2l
  3542  004CD8  C024  FFDA         	movff	frexp@eptr+1,fsr2h
  3543  004CDC  C060  FFDE         	movff	??_frexp,postinc2
  3544  004CE0  C061  FFDD         	movff	??_frexp+1,postdec2
  3545  004CE4  AE21               	btfss	frexp@value+2,7,c
  3546  004CE6  D004               	goto	u8140
  3547  004CE8  0100               	movlb	0	; () banked
  3548  004CEA  6B60               	clrf	??_frexp& (0+255),b
  3549  004CEC  2B60               	incf	??_frexp& (0+255),f,b
  3550  004CEE  D002               	goto	u8148
  3551  004CF0                     u8140:
  3552  004CF0  0100               	movlb	0	; () banked
  3553  004CF2  6B60               	clrf	??_frexp& (0+255),b
  3554  004CF4                     u8148:
  3555  004CF4  0100               	movlb	0	; () banked
  3556  004CF6  5160               	movf	??_frexp& (0+255),w,b
  3557  004CF8  C023  FFD9         	movff	frexp@eptr,fsr2l
  3558  004CFC  C024  FFDA         	movff	frexp@eptr+1,fsr2h
  3559  004D00  12DE               	iorwf	postinc2,f,c
  3560  004D02  0E00               	movlw	0
  3561  004D04  12DD               	iorwf	postdec2,f,c
  3562                           
  3563                           ; BSR set to: 0
  3564  004D06  C023  FFD9         	movff	frexp@eptr,fsr2l
  3565  004D0A  C024  FFDA         	movff	frexp@eptr+1,fsr2h
  3566  004D0E  0E82               	movlw	130
  3567  004D10  26DE               	addwf	postinc2,f,c
  3568  004D12  0EFF               	movlw	255
  3569  004D14  22DD               	addwfc	postdec2,f,c
  3570                           
  3571                           ; BSR set to: 0
  3572  004D16  8022               	bsf	frexp@value+3,0,c
  3573  004D18  8222               	bsf	frexp@value+3,1,c
  3574  004D1A  8422               	bsf	frexp@value+3,2,c
  3575  004D1C  8622               	bsf	frexp@value+3,3,c
  3576  004D1E  8822               	bsf	frexp@value+3,4,c
  3577  004D20  8A22               	bsf	frexp@value+3,5,c
  3578  004D22  9C22               	bcf	frexp@value+3,6,c
  3579                           
  3580                           ; BSR set to: 0
  3581  004D24  9E21               	bcf	frexp@value+2,7,c
  3582                           
  3583                           ; BSR set to: 0
  3584  004D26  C01F  F01F         	movff	frexp@value,?_frexp
  3585  004D2A  C020  F020         	movff	frexp@value+1,?_frexp+1
  3586  004D2E  C021  F021         	movff	frexp@value+2,?_frexp+2
  3587  004D32  C022  F022         	movff	frexp@value+3,?_frexp+3
  3588  004D36  0012               	return	
  3589  004D38                     __end_of_frexp:
  3590                           	opt stack 0
  3591                           tblptru	equ	0xFF8
  3592                           tblptrh	equ	0xFF7
  3593                           tblptrl	equ	0xFF6
  3594                           tablat	equ	0xFF5
  3595                           postinc0	equ	0xFEE
  3596                           wreg	equ	0xFE8
  3597                           postdec1	equ	0xFE5
  3598                           fsr1l	equ	0xFE1
  3599                           postinc2	equ	0xFDE
  3600                           postdec2	equ	0xFDD
  3601                           fsr2h	equ	0xFDA
  3602                           fsr2l	equ	0xFD9
  3603                           status	equ	0xFD8
  3604                           
  3605 ;; *************** function ___xxtofl *****************
  3606 ;; Defined at:
  3607 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  sign            1    wreg     unsigned char 
  3610 ;;  val             4    0[BANK0 ] long 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  sign            1    8[BANK0 ] unsigned char 
  3613 ;;  arg             4   10[BANK0 ] unsigned long 
  3614 ;;  exp             1    9[BANK0 ] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  4    0[BANK0 ] unsigned char 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2, status,0
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3624 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3625 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3628 ;;Total ram usage:       14 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    2
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_rampe
  3635 ;;		_pow
  3636 ;;		_exp
  3637 ;;		_floor
  3638 ;;		_log
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text9
  3643  003F7A                     __ptext9:
  3644                           	opt stack 0
  3645  003F7A                     ___xxtofl:
  3646                           	opt stack 25
  3647                           
  3648                           ;incstack = 0
  3649                           ;___xxtofl@sign stored from wreg
  3650  003F7A  0100               	movlb	0	; () banked
  3651  003F7C  6F68               	movwf	___xxtofl@sign& (0+255),b
  3652  003F7E  0100               	movlb	0	; () banked
  3653  003F80  5168               	movf	___xxtofl@sign& (0+255),w,b
  3654  003F82  0100               	movlb	0	; () banked
  3655  003F84  B4D8               	btfsc	status,2,c
  3656  003F86  D01E               	goto	l1350
  3657                           
  3658                           ; BSR set to: 0
  3659  003F88  0100               	movlb	0	; () banked
  3660  003F8A  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  3661  003F8C  D01B               	goto	l1350
  3662                           
  3663                           ; BSR set to: 0
  3664  003F8E  C060  F064         	movff	___xxtofl@val,??___xxtofl
  3665  003F92  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  3666  003F96  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  3667  003F9A  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  3668  003F9E  0100               	movlb	0	; () banked
  3669  003FA0  1F64               	comf	??___xxtofl& (0+255),f,b
  3670  003FA2  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  3671  003FA4  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  3672  003FA6  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  3673  003FA8  2B64               	incf	??___xxtofl& (0+255),f,b
  3674  003FAA  0E00               	movlw	0
  3675  003FAC  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  3676  003FAE  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  3677  003FB0  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  3678  003FB2  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  3679  003FB6  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  3680  003FBA  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  3681  003FBE  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  3682  003FC2  D008               	goto	l6148
  3683  003FC4                     l1350:
  3684                           
  3685                           ; BSR set to: 0
  3686  003FC4  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  3687  003FC8  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3688  003FCC  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3689  003FD0  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3690  003FD4                     l6148:
  3691                           
  3692                           ; BSR set to: 0
  3693  003FD4  0100               	movlb	0	; () banked
  3694  003FD6  5160               	movf	___xxtofl@val& (0+255),w,b
  3695  003FD8  0100               	movlb	0	; () banked
  3696  003FDA  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  3697  003FDC  0100               	movlb	0	; () banked
  3698  003FDE  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  3699  003FE0  0100               	movlb	0	; () banked
  3700  003FE2  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  3701  003FE4  A4D8               	btfss	status,2,c
  3702  003FE6  D00A               	goto	l6154
  3703                           
  3704                           ; BSR set to: 0
  3705  003FE8  0E00               	movlw	0
  3706  003FEA  0100               	movlb	0	; () banked
  3707  003FEC  6F60               	movwf	?___xxtofl& (0+255),b
  3708  003FEE  0E00               	movlw	0
  3709  003FF0  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  3710  003FF2  0E00               	movlw	0
  3711  003FF4  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  3712  003FF6  0E00               	movlw	0
  3713  003FF8  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  3714                           
  3715                           ; BSR set to: 0
  3716  003FFA  0012               	return	
  3717  003FFC                     l6154:
  3718                           
  3719                           ; BSR set to: 0
  3720  003FFC  0E96               	movlw	150
  3721  003FFE  0100               	movlb	0	; () banked
  3722  004000  6F69               	movwf	___xxtofl@exp& (0+255),b
  3723  004002  D008               	goto	l6158
  3724  004004                     l6156:
  3725                           
  3726                           ; BSR set to: 0
  3727  004004  0100               	movlb	0	; () banked
  3728  004006  2B69               	incf	___xxtofl@exp& (0+255),f,b
  3729  004008  0100               	movlb	0	; () banked
  3730  00400A  90D8               	bcf	status,0,c
  3731  00400C  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3732  00400E  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3733  004010  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3734  004012  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  3735  004014                     l6158:
  3736                           
  3737                           ; BSR set to: 0
  3738  004014  0E00               	movlw	0
  3739  004016  0100               	movlb	0	; () banked
  3740  004018  156A               	andwf	___xxtofl@arg& (0+255),w,b
  3741  00401A  0100               	movlb	0	; () banked
  3742  00401C  6F64               	movwf	??___xxtofl& (0+255),b
  3743  00401E  0E00               	movlw	0
  3744  004020  0100               	movlb	0	; () banked
  3745  004022  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3746  004024  0100               	movlb	0	; () banked
  3747  004026  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  3748  004028  0E00               	movlw	0
  3749  00402A  0100               	movlb	0	; () banked
  3750  00402C  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3751  00402E  0100               	movlb	0	; () banked
  3752  004030  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  3753  004032  0EFE               	movlw	254
  3754  004034  0100               	movlb	0	; () banked
  3755  004036  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3756  004038  0100               	movlb	0	; () banked
  3757  00403A  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  3758  00403C  0100               	movlb	0	; () banked
  3759  00403E  5164               	movf	??___xxtofl& (0+255),w,b
  3760  004040  0100               	movlb	0	; () banked
  3761  004042  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3762  004044  0100               	movlb	0	; () banked
  3763  004046  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3764  004048  0100               	movlb	0	; () banked
  3765  00404A  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3766  00404C  B4D8               	btfsc	status,2,c
  3767  00404E  D010               	goto	l1357
  3768  004050  D7D9               	goto	l6156
  3769  004052                     l6160:
  3770                           
  3771                           ; BSR set to: 0
  3772  004052  0100               	movlb	0	; () banked
  3773  004054  2B69               	incf	___xxtofl@exp& (0+255),f,b
  3774                           
  3775                           ; BSR set to: 0
  3776  004056  0E01               	movlw	1
  3777  004058  0100               	movlb	0	; () banked
  3778  00405A  276A               	addwf	___xxtofl@arg& (0+255),f,b
  3779  00405C  0E00               	movlw	0
  3780  00405E  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  3781  004060  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  3782  004062  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  3783                           
  3784                           ; BSR set to: 0
  3785  004064  0100               	movlb	0	; () banked
  3786  004066  90D8               	bcf	status,0,c
  3787  004068  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3788  00406A  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3789  00406C  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3790  00406E  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  3791  004070                     l1357:
  3792                           
  3793                           ; BSR set to: 0
  3794  004070  0E00               	movlw	0
  3795  004072  0100               	movlb	0	; () banked
  3796  004074  156A               	andwf	___xxtofl@arg& (0+255),w,b
  3797  004076  0100               	movlb	0	; () banked
  3798  004078  6F64               	movwf	??___xxtofl& (0+255),b
  3799  00407A  0E00               	movlw	0
  3800  00407C  0100               	movlb	0	; () banked
  3801  00407E  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3802  004080  0100               	movlb	0	; () banked
  3803  004082  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  3804  004084  0E00               	movlw	0
  3805  004086  0100               	movlb	0	; () banked
  3806  004088  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3807  00408A  0100               	movlb	0	; () banked
  3808  00408C  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  3809  00408E  0EFF               	movlw	255
  3810  004090  0100               	movlb	0	; () banked
  3811  004092  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3812  004094  0100               	movlb	0	; () banked
  3813  004096  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  3814  004098  0100               	movlb	0	; () banked
  3815  00409A  5164               	movf	??___xxtofl& (0+255),w,b
  3816  00409C  0100               	movlb	0	; () banked
  3817  00409E  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3818  0040A0  0100               	movlb	0	; () banked
  3819  0040A2  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3820  0040A4  0100               	movlb	0	; () banked
  3821  0040A6  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3822  0040A8  B4D8               	btfsc	status,2,c
  3823  0040AA  D009               	goto	l6168
  3824  0040AC  D7D2               	goto	l6160
  3825  0040AE                     l6166:
  3826                           
  3827                           ; BSR set to: 0
  3828  0040AE  0100               	movlb	0	; () banked
  3829  0040B0  0769               	decf	___xxtofl@exp& (0+255),f,b
  3830  0040B2  0100               	movlb	0	; () banked
  3831  0040B4  90D8               	bcf	status,0,c
  3832  0040B6  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  3833  0040B8  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  3834  0040BA  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  3835  0040BC  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  3836  0040BE                     l6168:
  3837                           
  3838                           ; BSR set to: 0
  3839  0040BE  0100               	movlb	0	; () banked
  3840  0040C0  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  3841  0040C2  D004               	goto	l1364
  3842                           
  3843                           ; BSR set to: 0
  3844  0040C4  0E02               	movlw	2
  3845  0040C6  0100               	movlb	0	; () banked
  3846  0040C8  6169               	cpfslt	___xxtofl@exp& (0+255),b
  3847  0040CA  D7F1               	goto	l6166
  3848  0040CC                     l1364:
  3849                           
  3850                           ; BSR set to: 0
  3851  0040CC  0100               	movlb	0	; () banked
  3852  0040CE  B169               	btfsc	___xxtofl@exp& (0+255),0,b
  3853  0040D0  D009               	goto	l1365
  3854                           
  3855                           ; BSR set to: 0
  3856  0040D2  0EFF               	movlw	255
  3857  0040D4  0100               	movlb	0	; () banked
  3858  0040D6  176A               	andwf	___xxtofl@arg& (0+255),f,b
  3859  0040D8  0EFF               	movlw	255
  3860  0040DA  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  3861  0040DC  0E7F               	movlw	127
  3862  0040DE  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  3863  0040E0  0EFF               	movlw	255
  3864  0040E2  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  3865  0040E4                     l1365:
  3866                           
  3867                           ; BSR set to: 0
  3868  0040E4  0100               	movlb	0	; () banked
  3869  0040E6  90D8               	bcf	status,0,c
  3870  0040E8  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  3871  0040EA  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  3872  0040EE  0100               	movlb	0	; () banked
  3873  0040F0  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  3874  0040F2  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  3875  0040F4  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  3876  0040F6  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  3877  0040FA  0100               	movlb	0	; () banked
  3878  0040FC  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  3879  0040FE  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  3880  004100  6B64               	clrf	??___xxtofl& (0+255),b
  3881  004102  0100               	movlb	0	; () banked
  3882  004104  5164               	movf	??___xxtofl& (0+255),w,b
  3883  004106  0100               	movlb	0	; () banked
  3884  004108  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  3885  00410A  0100               	movlb	0	; () banked
  3886  00410C  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  3887  00410E  0100               	movlb	0	; () banked
  3888  004110  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  3889  004112  0100               	movlb	0	; () banked
  3890  004114  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  3891  004116  0100               	movlb	0	; () banked
  3892  004118  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  3893  00411A  0100               	movlb	0	; () banked
  3894  00411C  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  3895  00411E  0100               	movlb	0	; () banked
  3896  004120  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  3897                           
  3898                           ; BSR set to: 0
  3899  004122  0100               	movlb	0	; () banked
  3900  004124  5168               	movf	___xxtofl@sign& (0+255),w,b
  3901  004126  0100               	movlb	0	; () banked
  3902  004128  B4D8               	btfsc	status,2,c
  3903  00412A  D005               	goto	l6180
  3904                           
  3905                           ; BSR set to: 0
  3906  00412C  0100               	movlb	0	; () banked
  3907  00412E  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  3908  004130  D002               	goto	l6180
  3909                           
  3910                           ; BSR set to: 0
  3911  004132  0100               	movlb	0	; () banked
  3912  004134  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  3913  004136                     l6180:
  3914                           
  3915                           ; BSR set to: 0
  3916  004136  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  3917  00413A  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  3918  00413E  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  3919  004142  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  3920  004146  0012               	return	
  3921  004148                     __end_of___xxtofl:
  3922                           	opt stack 0
  3923                           tblptru	equ	0xFF8
  3924                           tblptrh	equ	0xFF7
  3925                           tblptrl	equ	0xFF6
  3926                           tablat	equ	0xFF5
  3927                           postinc0	equ	0xFEE
  3928                           wreg	equ	0xFE8
  3929                           postdec1	equ	0xFE5
  3930                           fsr1l	equ	0xFE1
  3931                           postinc2	equ	0xFDE
  3932                           postdec2	equ	0xFDD
  3933                           fsr2h	equ	0xFDA
  3934                           fsr2l	equ	0xFD9
  3935                           status	equ	0xFD8
  3936                           
  3937 ;; *************** function ___fltol *****************
  3938 ;; Defined at:
  3939 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;  f1              4   59[BANK0 ] unsigned char 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  exp1            1   68[BANK0 ] unsigned char 
  3944 ;;  sign1           1   67[BANK0 ] unsigned char 
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  4   59[BANK0 ] long 
  3947 ;; Registers used:
  3948 ;;		wreg, status,2, status,0
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3954 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3955 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3956 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3957 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3958 ;;Total ram usage:       10 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:    2
  3961 ;; This function calls:
  3962 ;;		Nothing
  3963 ;; This function is called by:
  3964 ;;		_rampe
  3965 ;;		_pow
  3966 ;;		_exp
  3967 ;;		_floor
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           	psect	text10
  3972  004938                     __ptext10:
  3973                           	opt stack 0
  3974  004938                     ___fltol:
  3975                           	opt stack 24
  3976                           
  3977                           ; BSR set to: 0
  3978                           ;incstack = 0
  3979  004938  0100               	movlb	0	; () banked
  3980  00493A  359D               	rlcf	(___fltol@f1+2)& (0+255),w,b
  3981  00493C  359E               	rlcf	(___fltol@f1+3)& (0+255),w,b
  3982  00493E  0100               	movlb	0	; () banked
  3983  004940  6FA4               	movwf	___fltol@exp1& (0+255),b
  3984  004942  0100               	movlb	0	; () banked
  3985  004944  51A4               	movf	___fltol@exp1& (0+255),w,b
  3986  004946  A4D8               	btfss	status,2,c
  3987  004948  D00A               	goto	l6104
  3988                           
  3989                           ; BSR set to: 0
  3990  00494A  0E00               	movlw	0
  3991  00494C  0100               	movlb	0	; () banked
  3992  00494E  6F9B               	movwf	?___fltol& (0+255),b
  3993  004950  0E00               	movlw	0
  3994  004952  6F9C               	movwf	(?___fltol+1)& (0+255),b
  3995  004954  0E00               	movlw	0
  3996  004956  6F9D               	movwf	(?___fltol+2)& (0+255),b
  3997  004958  0E00               	movlw	0
  3998  00495A  6F9E               	movwf	(?___fltol+3)& (0+255),b
  3999                           
  4000                           ; BSR set to: 0
  4001  00495C  0012               	return	
  4002  00495E                     l6104:
  4003                           
  4004                           ; BSR set to: 0
  4005  00495E  C09B  F09F         	movff	___fltol@f1,??___fltol
  4006  004962  C09C  F0A0         	movff	___fltol@f1+1,??___fltol+1
  4007  004966  C09D  F0A1         	movff	___fltol@f1+2,??___fltol+2
  4008  00496A  C09E  F0A2         	movff	___fltol@f1+3,??___fltol+3
  4009  00496E  0E20               	movlw	32
  4010  004970  D006               	goto	u7970
  4011  004972                     u7975:
  4012  004972  0100               	movlb	0	; () banked
  4013  004974  90D8               	bcf	status,0,c
  4014  004976  33A2               	rrcf	(??___fltol+3)& (0+255),f,b
  4015  004978  33A1               	rrcf	(??___fltol+2)& (0+255),f,b
  4016  00497A  33A0               	rrcf	(??___fltol+1)& (0+255),f,b
  4017  00497C  339F               	rrcf	??___fltol& (0+255),f,b
  4018  00497E                     u7970:
  4019  00497E  2EE8               	decfsz	wreg,f,c
  4020  004980  D7F8               	goto	u7975
  4021  004982  0100               	movlb	0	; () banked
  4022  004984  519F               	movf	??___fltol& (0+255),w,b
  4023  004986  0100               	movlb	0	; () banked
  4024  004988  6FA3               	movwf	___fltol@sign1& (0+255),b
  4025                           
  4026                           ; BSR set to: 0
  4027  00498A  0100               	movlb	0	; () banked
  4028  00498C  8F9D               	bsf	(___fltol@f1+2)& (0+255),7,b
  4029                           
  4030                           ; BSR set to: 0
  4031  00498E  0EFF               	movlw	255
  4032  004990  0100               	movlb	0	; () banked
  4033  004992  179B               	andwf	___fltol@f1& (0+255),f,b
  4034  004994  0EFF               	movlw	255
  4035  004996  179C               	andwf	(___fltol@f1+1)& (0+255),f,b
  4036  004998  0EFF               	movlw	255
  4037  00499A  179D               	andwf	(___fltol@f1+2)& (0+255),f,b
  4038  00499C  0E00               	movlw	0
  4039  00499E  179E               	andwf	(___fltol@f1+3)& (0+255),f,b
  4040                           
  4041                           ; BSR set to: 0
  4042  0049A0  0E96               	movlw	150
  4043  0049A2  0100               	movlb	0	; () banked
  4044  0049A4  5FA4               	subwf	___fltol@exp1& (0+255),f,b
  4045                           
  4046                           ; BSR set to: 0
  4047  0049A6  0100               	movlb	0	; () banked
  4048  0049A8  AFA4               	btfss	___fltol@exp1& (0+255),7,b
  4049  0049AA  D01A               	goto	l6124
  4050                           
  4051                           ; BSR set to: 0
  4052  0049AC  0100               	movlb	0	; () banked
  4053  0049AE  51A4               	movf	___fltol@exp1& (0+255),w,b
  4054  0049B0  0A80               	xorlw	128
  4055  0049B2  0F97               	addlw	151
  4056  0049B4  B0D8               	btfsc	status,0,c
  4057  0049B6  D00A               	goto	l6120
  4058                           
  4059                           ; BSR set to: 0
  4060  0049B8  0E00               	movlw	0
  4061  0049BA  0100               	movlb	0	; () banked
  4062  0049BC  6F9B               	movwf	?___fltol& (0+255),b
  4063  0049BE  0E00               	movlw	0
  4064  0049C0  6F9C               	movwf	(?___fltol+1)& (0+255),b
  4065  0049C2  0E00               	movlw	0
  4066  0049C4  6F9D               	movwf	(?___fltol+2)& (0+255),b
  4067  0049C6  0E00               	movlw	0
  4068  0049C8  6F9E               	movwf	(?___fltol+3)& (0+255),b
  4069                           
  4070                           ; BSR set to: 0
  4071  0049CA  0012               	return	
  4072  0049CC                     l6120:
  4073                           
  4074                           ; BSR set to: 0
  4075  0049CC  0100               	movlb	0	; () banked
  4076  0049CE  90D8               	bcf	status,0,c
  4077  0049D0  339E               	rrcf	(___fltol@f1+3)& (0+255),f,b
  4078  0049D2  339D               	rrcf	(___fltol@f1+2)& (0+255),f,b
  4079  0049D4  339C               	rrcf	(___fltol@f1+1)& (0+255),f,b
  4080  0049D6  339B               	rrcf	___fltol@f1& (0+255),f,b
  4081                           
  4082                           ; BSR set to: 0
  4083  0049D8  0100               	movlb	0	; () banked
  4084  0049DA  3FA4               	incfsz	___fltol@exp1& (0+255),f,b
  4085  0049DC  D7F7               	goto	l6120
  4086                           
  4087                           ; BSR set to: 0
  4088  0049DE  D01B               	goto	l6134
  4089  0049E0                     l6124:
  4090                           
  4091                           ; BSR set to: 0
  4092  0049E0  0E1F               	movlw	31
  4093  0049E2  0100               	movlb	0	; () banked
  4094  0049E4  65A4               	cpfsgt	___fltol@exp1& (0+255),b
  4095  0049E6  D012               	goto	l6132
  4096                           
  4097                           ; BSR set to: 0
  4098  0049E8  0E00               	movlw	0
  4099  0049EA  0100               	movlb	0	; () banked
  4100  0049EC  6F9B               	movwf	?___fltol& (0+255),b
  4101  0049EE  0E00               	movlw	0
  4102  0049F0  6F9C               	movwf	(?___fltol+1)& (0+255),b
  4103  0049F2  0E00               	movlw	0
  4104  0049F4  6F9D               	movwf	(?___fltol+2)& (0+255),b
  4105  0049F6  0E00               	movlw	0
  4106  0049F8  6F9E               	movwf	(?___fltol+3)& (0+255),b
  4107                           
  4108                           ; BSR set to: 0
  4109  0049FA  0012               	return	
  4110  0049FC                     l6130:
  4111                           
  4112                           ; BSR set to: 0
  4113  0049FC  0100               	movlb	0	; () banked
  4114  0049FE  90D8               	bcf	status,0,c
  4115  004A00  379B               	rlcf	___fltol@f1& (0+255),f,b
  4116  004A02  379C               	rlcf	(___fltol@f1+1)& (0+255),f,b
  4117  004A04  379D               	rlcf	(___fltol@f1+2)& (0+255),f,b
  4118  004A06  379E               	rlcf	(___fltol@f1+3)& (0+255),f,b
  4119  004A08  0100               	movlb	0	; () banked
  4120  004A0A  07A4               	decf	___fltol@exp1& (0+255),f,b
  4121  004A0C                     l6132:
  4122                           
  4123                           ; BSR set to: 0
  4124  004A0C  0100               	movlb	0	; () banked
  4125  004A0E  51A4               	movf	___fltol@exp1& (0+255),w,b
  4126  004A10  0100               	movlb	0	; () banked
  4127  004A12  A4D8               	btfss	status,2,c
  4128  004A14  D7F3               	goto	l6130
  4129  004A16                     l6134:
  4130                           
  4131                           ; BSR set to: 0
  4132  004A16  0100               	movlb	0	; () banked
  4133  004A18  51A3               	movf	___fltol@sign1& (0+255),w,b
  4134  004A1A  0100               	movlb	0	; () banked
  4135  004A1C  B4D8               	btfsc	status,2,c
  4136  004A1E  D009               	goto	l6138
  4137                           
  4138                           ; BSR set to: 0
  4139  004A20  0100               	movlb	0	; () banked
  4140  004A22  1F9E               	comf	(___fltol@f1+3)& (0+255),f,b
  4141  004A24  1F9D               	comf	(___fltol@f1+2)& (0+255),f,b
  4142  004A26  1F9C               	comf	(___fltol@f1+1)& (0+255),f,b
  4143  004A28  6D9B               	negf	___fltol@f1& (0+255),b
  4144  004A2A  0E00               	movlw	0
  4145  004A2C  239C               	addwfc	(___fltol@f1+1)& (0+255),f,b
  4146  004A2E  239D               	addwfc	(___fltol@f1+2)& (0+255),f,b
  4147  004A30  239E               	addwfc	(___fltol@f1+3)& (0+255),f,b
  4148  004A32                     l6138:
  4149                           
  4150                           ; BSR set to: 0
  4151  004A32  C09B  F09B         	movff	___fltol@f1,?___fltol
  4152  004A36  C09C  F09C         	movff	___fltol@f1+1,?___fltol+1
  4153  004A3A  C09D  F09D         	movff	___fltol@f1+2,?___fltol+2
  4154  004A3E  C09E  F09E         	movff	___fltol@f1+3,?___fltol+3
  4155  004A42  0012               	return	
  4156  004A44                     __end_of___fltol:
  4157                           	opt stack 0
  4158                           tblptru	equ	0xFF8
  4159                           tblptrh	equ	0xFF7
  4160                           tblptrl	equ	0xFF6
  4161                           tablat	equ	0xFF5
  4162                           postinc0	equ	0xFEE
  4163                           wreg	equ	0xFE8
  4164                           postdec1	equ	0xFE5
  4165                           fsr1l	equ	0xFE1
  4166                           postinc2	equ	0xFDE
  4167                           postdec2	equ	0xFDD
  4168                           fsr2h	equ	0xFDA
  4169                           fsr2l	equ	0xFD9
  4170                           status	equ	0xFD8
  4171                           
  4172 ;; *************** function ___flge *****************
  4173 ;; Defined at:
  4174 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  ff1             4    0[BANK0 ] long 
  4177 ;;  ff2             4    4[BANK0 ] long 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;		None
  4180 ;; Return value:  Size  Location     Type
  4181 ;;		None               void
  4182 ;; Registers used:
  4183 ;;		wreg, status,2, status,0
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4189 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4191 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4192 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4193 ;;Total ram usage:       12 bytes
  4194 ;; Hardware stack levels used:    1
  4195 ;; Hardware stack levels required when called:    2
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_pow
  4200 ;;		_exp
  4201 ;;		_floor
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text11
  4206  004480                     __ptext11:
  4207                           	opt stack 0
  4208  004480                     ___flge:
  4209                           	opt stack 24
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;incstack = 0
  4213  004480  0E00               	movlw	0
  4214  004482  0100               	movlb	0	; () banked
  4215  004484  1560               	andwf	___flge@ff1& (0+255),w,b
  4216  004486  6E1F               	movwf	??___flge& (0+255),c
  4217  004488  0E00               	movlw	0
  4218  00448A  0100               	movlb	0	; () banked
  4219  00448C  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
  4220  00448E  6E20               	movwf	(??___flge+1)& (0+255),c
  4221  004490  0E80               	movlw	128
  4222  004492  0100               	movlb	0	; () banked
  4223  004494  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
  4224  004496  6E21               	movwf	(??___flge+2)& (0+255),c
  4225  004498  0E7F               	movlw	127
  4226  00449A  0100               	movlb	0	; () banked
  4227  00449C  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
  4228  00449E  6E22               	movwf	(??___flge+3)& (0+255),c
  4229  0044A0  501F               	movf	??___flge,w,c
  4230  0044A2  1020               	iorwf	??___flge+1,w,c
  4231  0044A4  1021               	iorwf	??___flge+2,w,c
  4232  0044A6  1022               	iorwf	??___flge+3,w,c
  4233  0044A8  A4D8               	btfss	status,2,c
  4234  0044AA  D009               	goto	l6080
  4235                           
  4236                           ; BSR set to: 0
  4237  0044AC  0E00               	movlw	0
  4238  0044AE  0100               	movlb	0	; () banked
  4239  0044B0  6F60               	movwf	___flge@ff1& (0+255),b
  4240  0044B2  0E00               	movlw	0
  4241  0044B4  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  4242  0044B6  0E00               	movlw	0
  4243  0044B8  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  4244  0044BA  0E00               	movlw	0
  4245  0044BC  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  4246  0044BE                     l6080:
  4247                           
  4248                           ; BSR set to: 0
  4249  0044BE  0E00               	movlw	0
  4250  0044C0  0100               	movlb	0	; () banked
  4251  0044C2  1564               	andwf	___flge@ff2& (0+255),w,b
  4252  0044C4  6E1F               	movwf	??___flge& (0+255),c
  4253  0044C6  0E00               	movlw	0
  4254  0044C8  0100               	movlb	0	; () banked
  4255  0044CA  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
  4256  0044CC  6E20               	movwf	(??___flge+1)& (0+255),c
  4257  0044CE  0E80               	movlw	128
  4258  0044D0  0100               	movlb	0	; () banked
  4259  0044D2  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
  4260  0044D4  6E21               	movwf	(??___flge+2)& (0+255),c
  4261  0044D6  0E7F               	movlw	127
  4262  0044D8  0100               	movlb	0	; () banked
  4263  0044DA  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
  4264  0044DC  6E22               	movwf	(??___flge+3)& (0+255),c
  4265  0044DE  501F               	movf	??___flge,w,c
  4266  0044E0  1020               	iorwf	??___flge+1,w,c
  4267  0044E2  1021               	iorwf	??___flge+2,w,c
  4268  0044E4  1022               	iorwf	??___flge+3,w,c
  4269  0044E6  A4D8               	btfss	status,2,c
  4270  0044E8  D009               	goto	l6084
  4271                           
  4272                           ; BSR set to: 0
  4273  0044EA  0E00               	movlw	0
  4274  0044EC  0100               	movlb	0	; () banked
  4275  0044EE  6F64               	movwf	___flge@ff2& (0+255),b
  4276  0044F0  0E00               	movlw	0
  4277  0044F2  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  4278  0044F4  0E00               	movlw	0
  4279  0044F6  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  4280  0044F8  0E00               	movlw	0
  4281  0044FA  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  4282  0044FC                     l6084:
  4283                           
  4284                           ; BSR set to: 0
  4285  0044FC  0100               	movlb	0	; () banked
  4286  0044FE  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
  4287  004500  D021               	goto	l6088
  4288                           
  4289                           ; BSR set to: 0
  4290  004502  C060  F01F         	movff	___flge@ff1,??___flge
  4291  004506  C061  F020         	movff	___flge@ff1+1,??___flge+1
  4292  00450A  C062  F021         	movff	___flge@ff1+2,??___flge+2
  4293  00450E  C063  F022         	movff	___flge@ff1+3,??___flge+3
  4294  004512  1E1F               	comf	??___flge,f,c
  4295  004514  1E20               	comf	??___flge+1,f,c
  4296  004516  1E21               	comf	??___flge+2,f,c
  4297  004518  1E22               	comf	??___flge+3,f,c
  4298  00451A  2A1F               	incf	??___flge,f,c
  4299  00451C  0E00               	movlw	0
  4300  00451E  2220               	addwfc	??___flge+1,f,c
  4301  004520  2221               	addwfc	??___flge+2,f,c
  4302  004522  2222               	addwfc	??___flge+3,f,c
  4303  004524  0E00               	movlw	0
  4304  004526  241F               	addwf	??___flge,w,c
  4305  004528  0100               	movlb	0	; () banked
  4306  00452A  6F60               	movwf	___flge@ff1& (0+255),b
  4307  00452C  0E00               	movlw	0
  4308  00452E  2020               	addwfc	??___flge+1,w,c
  4309  004530  0100               	movlb	0	; () banked
  4310  004532  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  4311  004534  0E00               	movlw	0
  4312  004536  2021               	addwfc	??___flge+2,w,c
  4313  004538  0100               	movlb	0	; () banked
  4314  00453A  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  4315  00453C  0E80               	movlw	128
  4316  00453E  2022               	addwfc	??___flge+3,w,c
  4317  004540  0100               	movlb	0	; () banked
  4318  004542  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  4319  004544                     l6088:
  4320                           
  4321                           ; BSR set to: 0
  4322  004544  0100               	movlb	0	; () banked
  4323  004546  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
  4324  004548  D021               	goto	l990
  4325                           
  4326                           ; BSR set to: 0
  4327  00454A  C064  F01F         	movff	___flge@ff2,??___flge
  4328  00454E  C065  F020         	movff	___flge@ff2+1,??___flge+1
  4329  004552  C066  F021         	movff	___flge@ff2+2,??___flge+2
  4330  004556  C067  F022         	movff	___flge@ff2+3,??___flge+3
  4331  00455A  1E1F               	comf	??___flge,f,c
  4332  00455C  1E20               	comf	??___flge+1,f,c
  4333  00455E  1E21               	comf	??___flge+2,f,c
  4334  004560  1E22               	comf	??___flge+3,f,c
  4335  004562  2A1F               	incf	??___flge,f,c
  4336  004564  0E00               	movlw	0
  4337  004566  2220               	addwfc	??___flge+1,f,c
  4338  004568  2221               	addwfc	??___flge+2,f,c
  4339  00456A  2222               	addwfc	??___flge+3,f,c
  4340  00456C  0E00               	movlw	0
  4341  00456E  241F               	addwf	??___flge,w,c
  4342  004570  0100               	movlb	0	; () banked
  4343  004572  6F64               	movwf	___flge@ff2& (0+255),b
  4344  004574  0E00               	movlw	0
  4345  004576  2020               	addwfc	??___flge+1,w,c
  4346  004578  0100               	movlb	0	; () banked
  4347  00457A  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  4348  00457C  0E00               	movlw	0
  4349  00457E  2021               	addwfc	??___flge+2,w,c
  4350  004580  0100               	movlb	0	; () banked
  4351  004582  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  4352  004584  0E80               	movlw	128
  4353  004586  2022               	addwfc	??___flge+3,w,c
  4354  004588  0100               	movlb	0	; () banked
  4355  00458A  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  4356  00458C                     l990:
  4357                           
  4358                           ; BSR set to: 0
  4359  00458C  0E00               	movlw	0
  4360  00458E  0100               	movlb	0	; () banked
  4361  004590  1B60               	xorwf	___flge@ff1& (0+255),f,b
  4362  004592  0E00               	movlw	0
  4363  004594  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
  4364  004596  0E00               	movlw	0
  4365  004598  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
  4366  00459A  0E80               	movlw	128
  4367  00459C  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
  4368  00459E  0E00               	movlw	0
  4369  0045A0  0100               	movlb	0	; () banked
  4370  0045A2  1B64               	xorwf	___flge@ff2& (0+255),f,b
  4371  0045A4  0E00               	movlw	0
  4372  0045A6  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
  4373  0045A8  0E00               	movlw	0
  4374  0045AA  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
  4375  0045AC  0E80               	movlw	128
  4376  0045AE  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
  4377  0045B0  0100               	movlb	0	; () banked
  4378  0045B2  5164               	movf	___flge@ff2& (0+255),w,b
  4379  0045B4  0100               	movlb	0	; () banked
  4380  0045B6  5D60               	subwf	___flge@ff1& (0+255),w,b
  4381  0045B8  0100               	movlb	0	; () banked
  4382  0045BA  5165               	movf	(___flge@ff2+1)& (0+255),w,b
  4383  0045BC  0100               	movlb	0	; () banked
  4384  0045BE  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
  4385  0045C0  0100               	movlb	0	; () banked
  4386  0045C2  5166               	movf	(___flge@ff2+2)& (0+255),w,b
  4387  0045C4  0100               	movlb	0	; () banked
  4388  0045C6  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
  4389  0045C8  0100               	movlb	0	; () banked
  4390  0045CA  5167               	movf	(___flge@ff2+3)& (0+255),w,b
  4391  0045CC  0100               	movlb	0	; () banked
  4392  0045CE  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
  4393  0045D0  B0D8               	btfsc	status,0,c
  4394  0045D2  D002               	goto	l6094
  4395                           
  4396                           ; BSR set to: 0
  4397  0045D4  90D8               	bcf	status,0,c
  4398  0045D6  0012               	return	
  4399  0045D8                     l6094:
  4400                           
  4401                           ; BSR set to: 0
  4402  0045D8  80D8               	bsf	status,0,c
  4403                           
  4404                           ; BSR set to: 0
  4405  0045DA  0012               	return	
  4406  0045DC                     __end_of___flge:
  4407                           	opt stack 0
  4408                           tblptru	equ	0xFF8
  4409                           tblptrh	equ	0xFF7
  4410                           tblptrl	equ	0xFF6
  4411                           tablat	equ	0xFF5
  4412                           postinc0	equ	0xFEE
  4413                           wreg	equ	0xFE8
  4414                           postdec1	equ	0xFE5
  4415                           fsr1l	equ	0xFE1
  4416                           postinc2	equ	0xFDE
  4417                           postdec2	equ	0xFDD
  4418                           fsr2h	equ	0xFDA
  4419                           fsr2l	equ	0xFD9
  4420                           status	equ	0xFD8
  4421                           
  4422 ;; *************** function _eval_poly *****************
  4423 ;; Defined at:
  4424 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  x               4   59[BANK0 ] long 
  4427 ;;  d               2   63[BANK0 ] PTR const 
  4428 ;;		 -> log@coeff(36), exp@coeff(40), 
  4429 ;;  n               2   65[BANK0 ] int 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  res             4   71[BANK0 ] int 
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  4   59[BANK0 ] int 
  4434 ;; Registers used:
  4435 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4441 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4442 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4443 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4444 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4445 ;;Total ram usage:       16 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; Hardware stack levels required when called:    3
  4448 ;; This function calls:
  4449 ;;		___fladd
  4450 ;;		___flmul
  4451 ;; This function is called by:
  4452 ;;		_exp
  4453 ;;		_log
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text12
  4458  004820                     __ptext12:
  4459                           	opt stack 0
  4460  004820                     _eval_poly:
  4461                           	opt stack 24
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;incstack = 0
  4465  004820  C0A1  F0A3         	movff	eval_poly@n,??_eval_poly
  4466  004824  C0A2  F0A4         	movff	eval_poly@n+1,??_eval_poly+1
  4467  004828  0100               	movlb	0	; () banked
  4468  00482A  90D8               	bcf	status,0,c
  4469  00482C  37A3               	rlcf	??_eval_poly& (0+255),f,b
  4470  00482E  37A4               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4471  004830  0100               	movlb	0	; () banked
  4472  004832  90D8               	bcf	status,0,c
  4473  004834  37A3               	rlcf	??_eval_poly& (0+255),f,b
  4474  004836  37A4               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4475  004838  C09F  F0A5         	movff	eval_poly@d,??_eval_poly+2
  4476  00483C  C0A0  F0A6         	movff	eval_poly@d+1,??_eval_poly+3
  4477  004840  0100               	movlb	0	; () banked
  4478  004842  51A3               	movf	??_eval_poly& (0+255),w,b
  4479  004844  0100               	movlb	0	; () banked
  4480  004846  27A5               	addwf	(??_eval_poly+2)& (0+255),f,b
  4481  004848  0100               	movlb	0	; () banked
  4482  00484A  51A4               	movf	(??_eval_poly+1)& (0+255),w,b
  4483  00484C  0100               	movlb	0	; () banked
  4484  00484E  23A6               	addwfc	(??_eval_poly+3)& (0+255),f,b
  4485  004850  C0A5  FFF6         	movff	??_eval_poly+2,tblptrl
  4486  004854  C0A6  FFF7         	movff	??_eval_poly+3,tblptrh
  4487  004858                     	if	0	;tblptru may be non-zero
  4488  004858                     	endif
  4489  004858                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4490  004858  0E00               	movlw	low (__mediumconst shr (0+16))
  4491  00485A  6EF8               	movwf	tblptru,c
  4492  00485C                     	endif
  4493  00485C  0009               	tblrd		*+
  4494  00485E  CFF5 F0A7          	movff	tablat,eval_poly@res
  4495  004862  0009               	tblrd		*+
  4496  004864  CFF5 F0A8          	movff	tablat,eval_poly@res+1
  4497  004868  0009               	tblrd		*+
  4498  00486A  CFF5 F0A9          	movff	tablat,eval_poly@res+2
  4499  00486E  000A               	tblrd		*-
  4500  004870  CFF5 F0AA          	movff	tablat,eval_poly@res+3
  4501  004874  D052               	goto	l6382
  4502  004876                     l6380:
  4503                           
  4504                           ; BSR set to: 0
  4505  004876  C0A7  F072         	movff	eval_poly@res,___flmul@a
  4506  00487A  C0A8  F073         	movff	eval_poly@res+1,___flmul@a+1
  4507  00487E  C0A9  F074         	movff	eval_poly@res+2,___flmul@a+2
  4508  004882  C0AA  F075         	movff	eval_poly@res+3,___flmul@a+3
  4509  004886  C09B  F06E         	movff	eval_poly@x,___flmul@b
  4510  00488A  C09C  F06F         	movff	eval_poly@x+1,___flmul@b+1
  4511  00488E  C09D  F070         	movff	eval_poly@x+2,___flmul@b+2
  4512  004892  C09E  F071         	movff	eval_poly@x+3,___flmul@b+3
  4513  004896  EC5E  F014         	call	___flmul	;wreg free
  4514  00489A  C06E  F087         	movff	?___flmul,___fladd@b
  4515  00489E  C06F  F088         	movff	?___flmul+1,___fladd@b+1
  4516  0048A2  C070  F089         	movff	?___flmul+2,___fladd@b+2
  4517  0048A6  C071  F08A         	movff	?___flmul+3,___fladd@b+3
  4518  0048AA  0100               	movlb	0	; () banked
  4519  0048AC  07A1               	decf	eval_poly@n& (0+255),f,b
  4520  0048AE  A0D8               	btfss	status,0,c
  4521  0048B0  07A2               	decf	(eval_poly@n+1)& (0+255),f,b
  4522  0048B2  C0A1  F0A3         	movff	eval_poly@n,??_eval_poly
  4523  0048B6  C0A2  F0A4         	movff	eval_poly@n+1,??_eval_poly+1
  4524  0048BA  0100               	movlb	0	; () banked
  4525  0048BC  90D8               	bcf	status,0,c
  4526  0048BE  37A3               	rlcf	??_eval_poly& (0+255),f,b
  4527  0048C0  37A4               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4528  0048C2  0100               	movlb	0	; () banked
  4529  0048C4  90D8               	bcf	status,0,c
  4530  0048C6  37A3               	rlcf	??_eval_poly& (0+255),f,b
  4531  0048C8  37A4               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4532  0048CA  C09F  F0A5         	movff	eval_poly@d,??_eval_poly+2
  4533  0048CE  C0A0  F0A6         	movff	eval_poly@d+1,??_eval_poly+3
  4534  0048D2  0100               	movlb	0	; () banked
  4535  0048D4  51A3               	movf	??_eval_poly& (0+255),w,b
  4536  0048D6  0100               	movlb	0	; () banked
  4537  0048D8  27A5               	addwf	(??_eval_poly+2)& (0+255),f,b
  4538  0048DA  0100               	movlb	0	; () banked
  4539  0048DC  51A4               	movf	(??_eval_poly+1)& (0+255),w,b
  4540  0048DE  0100               	movlb	0	; () banked
  4541  0048E0  23A6               	addwfc	(??_eval_poly+3)& (0+255),f,b
  4542  0048E2  C0A5  FFF6         	movff	??_eval_poly+2,tblptrl
  4543  0048E6  C0A6  FFF7         	movff	??_eval_poly+3,tblptrh
  4544  0048EA                     	if	0	;tblptru may be non-zero
  4545  0048EA                     	endif
  4546  0048EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4547  0048EA  0E00               	movlw	low (__mediumconst shr (0+16))
  4548  0048EC  6EF8               	movwf	tblptru,c
  4549  0048EE                     	endif
  4550  0048EE  0009               	tblrd		*+
  4551  0048F0  CFF5 F08B          	movff	tablat,___fladd@a
  4552  0048F4  0009               	tblrd		*+
  4553  0048F6  CFF5 F08C          	movff	tablat,___fladd@a+1
  4554  0048FA  0009               	tblrd		*+
  4555  0048FC  CFF5 F08D          	movff	tablat,___fladd@a+2
  4556  004900  000A               	tblrd		*-
  4557  004902  CFF5 F08E          	movff	tablat,___fladd@a+3
  4558  004906  EC0A  F012         	call	___fladd	;wreg free
  4559  00490A  C087  F0A7         	movff	?___fladd,eval_poly@res
  4560  00490E  C088  F0A8         	movff	?___fladd+1,eval_poly@res+1
  4561  004912  C089  F0A9         	movff	?___fladd+2,eval_poly@res+2
  4562  004916  C08A  F0AA         	movff	?___fladd+3,eval_poly@res+3
  4563  00491A                     l6382:
  4564  00491A  0100               	movlb	0	; () banked
  4565  00491C  51A1               	movf	eval_poly@n& (0+255),w,b
  4566  00491E  0100               	movlb	0	; () banked
  4567  004920  11A2               	iorwf	(eval_poly@n+1)& (0+255),w,b
  4568  004922  A4D8               	btfss	status,2,c
  4569  004924  D7A8               	goto	l6380
  4570                           
  4571                           ; BSR set to: 0
  4572  004926  C0A7  F09B         	movff	eval_poly@res,?_eval_poly
  4573  00492A  C0A8  F09C         	movff	eval_poly@res+1,?_eval_poly+1
  4574  00492E  C0A9  F09D         	movff	eval_poly@res+2,?_eval_poly+2
  4575  004932  C0AA  F09E         	movff	eval_poly@res+3,?_eval_poly+3
  4576                           
  4577                           ; BSR set to: 0
  4578  004936  0012               	return		;funcret
  4579  004938                     __end_of_eval_poly:
  4580                           	opt stack 0
  4581                           tblptru	equ	0xFF8
  4582                           tblptrh	equ	0xFF7
  4583                           tblptrl	equ	0xFF6
  4584                           tablat	equ	0xFF5
  4585                           postinc0	equ	0xFEE
  4586                           wreg	equ	0xFE8
  4587                           postdec1	equ	0xFE5
  4588                           fsr1l	equ	0xFE1
  4589                           postinc2	equ	0xFDE
  4590                           postdec2	equ	0xFDD
  4591                           fsr2h	equ	0xFDA
  4592                           fsr2l	equ	0xFD9
  4593                           status	equ	0xFD8
  4594                           
  4595 ;; *************** function ___flmul *****************
  4596 ;; Defined at:
  4597 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;  b               4   14[BANK0 ] int 
  4600 ;;  a               4   18[BANK0 ] int 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  prod            4   33[BANK0 ] struct .
  4603 ;;  grs             4   28[BANK0 ] unsigned long 
  4604 ;;  temp            2   37[BANK0 ] struct .
  4605 ;;  bexp            1   32[BANK0 ] unsigned char 
  4606 ;;  aexp            1   27[BANK0 ] unsigned char 
  4607 ;;  sign            1   26[BANK0 ] unsigned char 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  4   14[BANK0 ] unsigned char 
  4610 ;; Registers used:
  4611 ;;		wreg, status,2, status,0, prodl, prodh
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4617 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4618 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4619 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4620 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4621 ;;Total ram usage:       25 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; Hardware stack levels required when called:    2
  4624 ;; This function calls:
  4625 ;;		Nothing
  4626 ;; This function is called by:
  4627 ;;		_pow
  4628 ;;		_exp
  4629 ;;		_log
  4630 ;;		_eval_poly
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           	psect	text13
  4635  0028BC                     __ptext13:
  4636                           	opt stack 0
  4637  0028BC                     ___flmul:
  4638                           	opt stack 24
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;incstack = 0
  4642  0028BC  0100               	movlb	0	; () banked
  4643  0028BE  5171               	movf	(___flmul@b+3)& (0+255),w,b
  4644  0028C0  0B80               	andlw	128
  4645  0028C2  0100               	movlb	0	; () banked
  4646  0028C4  6F7A               	movwf	___flmul@sign& (0+255),b
  4647  0028C6  0100               	movlb	0	; () banked
  4648  0028C8  5171               	movf	(___flmul@b+3)& (0+255),w,b
  4649  0028CA  2571               	addwf	(___flmul@b+3)& (0+255),w,b
  4650  0028CC  0100               	movlb	0	; () banked
  4651  0028CE  6F80               	movwf	___flmul@bexp& (0+255),b
  4652                           
  4653                           ; BSR set to: 0
  4654  0028D0  0100               	movlb	0	; () banked
  4655  0028D2  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
  4656  0028D4  D002               	goto	l5952
  4657                           
  4658                           ; BSR set to: 0
  4659  0028D6  0100               	movlb	0	; () banked
  4660  0028D8  8180               	bsf	___flmul@bexp& (0+255),0,b
  4661  0028DA                     l5952:
  4662                           
  4663                           ; BSR set to: 0
  4664  0028DA  0100               	movlb	0	; () banked
  4665  0028DC  5180               	movf	___flmul@bexp& (0+255),w,b
  4666  0028DE  0100               	movlb	0	; () banked
  4667  0028E0  B4D8               	btfsc	status,2,c
  4668  0028E2  D010               	goto	l5960
  4669                           
  4670                           ; BSR set to: 0
  4671  0028E4  0100               	movlb	0	; () banked
  4672  0028E6  2980               	incf	___flmul@bexp& (0+255),w,b
  4673  0028E8  A4D8               	btfss	status,2,c
  4674  0028EA  D009               	goto	l5958
  4675                           
  4676                           ; BSR set to: 0
  4677  0028EC  0E00               	movlw	0
  4678  0028EE  0100               	movlb	0	; () banked
  4679  0028F0  6F6E               	movwf	___flmul@b& (0+255),b
  4680  0028F2  0E00               	movlw	0
  4681  0028F4  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  4682  0028F6  0E00               	movlw	0
  4683  0028F8  6F70               	movwf	(___flmul@b+2)& (0+255),b
  4684  0028FA  0E00               	movlw	0
  4685  0028FC  6F71               	movwf	(___flmul@b+3)& (0+255),b
  4686  0028FE                     l5958:
  4687                           
  4688                           ; BSR set to: 0
  4689  0028FE  0100               	movlb	0	; () banked
  4690  002900  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
  4691  002902  D009               	goto	l5962
  4692  002904                     l5960:
  4693                           
  4694                           ; BSR set to: 0
  4695  002904  0E00               	movlw	0
  4696  002906  0100               	movlb	0	; () banked
  4697  002908  6F6E               	movwf	___flmul@b& (0+255),b
  4698  00290A  0E00               	movlw	0
  4699  00290C  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  4700  00290E  0E00               	movlw	0
  4701  002910  6F70               	movwf	(___flmul@b+2)& (0+255),b
  4702  002912  0E00               	movlw	0
  4703  002914  6F71               	movwf	(___flmul@b+3)& (0+255),b
  4704  002916                     l5962:
  4705                           
  4706                           ; BSR set to: 0
  4707  002916  0100               	movlb	0	; () banked
  4708  002918  5175               	movf	(___flmul@a+3)& (0+255),w,b
  4709  00291A  0B80               	andlw	128
  4710  00291C  0100               	movlb	0	; () banked
  4711  00291E  1B7A               	xorwf	___flmul@sign& (0+255),f,b
  4712                           
  4713                           ; BSR set to: 0
  4714  002920  0100               	movlb	0	; () banked
  4715  002922  5175               	movf	(___flmul@a+3)& (0+255),w,b
  4716  002924  2575               	addwf	(___flmul@a+3)& (0+255),w,b
  4717  002926  0100               	movlb	0	; () banked
  4718  002928  6F7B               	movwf	___flmul@aexp& (0+255),b
  4719                           
  4720                           ; BSR set to: 0
  4721  00292A  0100               	movlb	0	; () banked
  4722  00292C  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
  4723  00292E  D002               	goto	l5970
  4724                           
  4725                           ; BSR set to: 0
  4726  002930  0100               	movlb	0	; () banked
  4727  002932  817B               	bsf	___flmul@aexp& (0+255),0,b
  4728  002934                     l5970:
  4729                           
  4730                           ; BSR set to: 0
  4731  002934  0100               	movlb	0	; () banked
  4732  002936  517B               	movf	___flmul@aexp& (0+255),w,b
  4733  002938  0100               	movlb	0	; () banked
  4734  00293A  B4D8               	btfsc	status,2,c
  4735  00293C  D010               	goto	l5978
  4736                           
  4737                           ; BSR set to: 0
  4738  00293E  0100               	movlb	0	; () banked
  4739  002940  297B               	incf	___flmul@aexp& (0+255),w,b
  4740  002942  A4D8               	btfss	status,2,c
  4741  002944  D009               	goto	l5976
  4742                           
  4743                           ; BSR set to: 0
  4744  002946  0E00               	movlw	0
  4745  002948  0100               	movlb	0	; () banked
  4746  00294A  6F72               	movwf	___flmul@a& (0+255),b
  4747  00294C  0E00               	movlw	0
  4748  00294E  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4749  002950  0E00               	movlw	0
  4750  002952  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4751  002954  0E00               	movlw	0
  4752  002956  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4753  002958                     l5976:
  4754                           
  4755                           ; BSR set to: 0
  4756  002958  0100               	movlb	0	; () banked
  4757  00295A  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
  4758  00295C  D009               	goto	l1328
  4759  00295E                     l5978:
  4760                           
  4761                           ; BSR set to: 0
  4762  00295E  0E00               	movlw	0
  4763  002960  0100               	movlb	0	; () banked
  4764  002962  6F72               	movwf	___flmul@a& (0+255),b
  4765  002964  0E00               	movlw	0
  4766  002966  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4767  002968  0E00               	movlw	0
  4768  00296A  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4769  00296C  0E00               	movlw	0
  4770  00296E  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4771  002970                     l1328:
  4772                           
  4773                           ; BSR set to: 0
  4774  002970  0100               	movlb	0	; () banked
  4775  002972  517B               	movf	___flmul@aexp& (0+255),w,b
  4776  002974  0100               	movlb	0	; () banked
  4777  002976  B4D8               	btfsc	status,2,c
  4778  002978  D005               	goto	l5982
  4779                           
  4780                           ; BSR set to: 0
  4781  00297A  0100               	movlb	0	; () banked
  4782  00297C  5180               	movf	___flmul@bexp& (0+255),w,b
  4783  00297E  0100               	movlb	0	; () banked
  4784  002980  A4D8               	btfss	status,2,c
  4785  002982  D00A               	goto	l5986
  4786  002984                     l5982:
  4787                           
  4788                           ; BSR set to: 0
  4789  002984  0E00               	movlw	0
  4790  002986  0100               	movlb	0	; () banked
  4791  002988  6F6E               	movwf	?___flmul& (0+255),b
  4792  00298A  0E00               	movlw	0
  4793  00298C  6F6F               	movwf	(?___flmul+1)& (0+255),b
  4794  00298E  0E00               	movlw	0
  4795  002990  6F70               	movwf	(?___flmul+2)& (0+255),b
  4796  002992  0E00               	movlw	0
  4797  002994  6F71               	movwf	(?___flmul+3)& (0+255),b
  4798                           
  4799                           ; BSR set to: 0
  4800  002996  0012               	return	
  4801  002998                     l5986:
  4802                           
  4803                           ; BSR set to: 0
  4804  002998  0100               	movlb	0	; () banked
  4805  00299A  5174               	movf	(___flmul@a+2)& (0+255),w,b
  4806  00299C  0100               	movlb	0	; () banked
  4807  00299E  036E               	mulwf	___flmul@b& (0+255),b
  4808  0029A0  CFF3 F085          	movff	prodl,___flmul@temp
  4809  0029A4  CFF4 F086          	movff	prodh,___flmul@temp+1
  4810                           
  4811                           ; BSR set to: 0
  4812  0029A8  0100               	movlb	0	; () banked
  4813  0029AA  5185               	movf	___flmul@temp& (0+255),w,b
  4814  0029AC  0100               	movlb	0	; () banked
  4815  0029AE  6F7C               	movwf	___flmul@grs& (0+255),b
  4816  0029B0  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
  4817  0029B2  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
  4818  0029B4  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
  4819                           
  4820                           ; BSR set to: 0
  4821  0029B6  0100               	movlb	0	; () banked
  4822  0029B8  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  4823  0029BA  0100               	movlb	0	; () banked
  4824  0029BC  6F81               	movwf	___flmul@prod& (0+255),b
  4825  0029BE  6B82               	clrf	(___flmul@prod+1)& (0+255),b
  4826  0029C0  6B83               	clrf	(___flmul@prod+2)& (0+255),b
  4827  0029C2  6B84               	clrf	(___flmul@prod+3)& (0+255),b
  4828  0029C4  0100               	movlb	0	; () banked
  4829  0029C6  5173               	movf	(___flmul@a+1)& (0+255),w,b
  4830  0029C8  0100               	movlb	0	; () banked
  4831  0029CA  036F               	mulwf	(___flmul@b+1)& (0+255),b
  4832  0029CC  CFF3 F085          	movff	prodl,___flmul@temp
  4833  0029D0  CFF4 F086          	movff	prodh,___flmul@temp+1
  4834                           
  4835                           ; BSR set to: 0
  4836  0029D4  0100               	movlb	0	; () banked
  4837  0029D6  5185               	movf	___flmul@temp& (0+255),w,b
  4838  0029D8  0100               	movlb	0	; () banked
  4839  0029DA  277C               	addwf	___flmul@grs& (0+255),f,b
  4840  0029DC  0E00               	movlw	0
  4841  0029DE  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4842  0029E0  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4843  0029E2  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4844                           
  4845                           ; BSR set to: 0
  4846  0029E4  0100               	movlb	0	; () banked
  4847  0029E6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  4848  0029E8  0100               	movlb	0	; () banked
  4849  0029EA  2781               	addwf	___flmul@prod& (0+255),f,b
  4850  0029EC  0E00               	movlw	0
  4851  0029EE  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4852  0029F0  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4853  0029F2  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4854  0029F4  0100               	movlb	0	; () banked
  4855  0029F6  5172               	movf	___flmul@a& (0+255),w,b
  4856  0029F8  0100               	movlb	0	; () banked
  4857  0029FA  0370               	mulwf	(___flmul@b+2)& (0+255),b
  4858  0029FC  CFF3 F085          	movff	prodl,___flmul@temp
  4859  002A00  CFF4 F086          	movff	prodh,___flmul@temp+1
  4860                           
  4861                           ; BSR set to: 0
  4862  002A04  0100               	movlb	0	; () banked
  4863  002A06  5185               	movf	___flmul@temp& (0+255),w,b
  4864  002A08  0100               	movlb	0	; () banked
  4865  002A0A  277C               	addwf	___flmul@grs& (0+255),f,b
  4866  002A0C  0E00               	movlw	0
  4867  002A0E  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4868  002A10  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4869  002A12  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4870                           
  4871                           ; BSR set to: 0
  4872  002A14  0100               	movlb	0	; () banked
  4873  002A16  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  4874  002A18  0100               	movlb	0	; () banked
  4875  002A1A  2781               	addwf	___flmul@prod& (0+255),f,b
  4876  002A1C  0E00               	movlw	0
  4877  002A1E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4878  002A20  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4879  002A22  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4880                           
  4881                           ; BSR set to: 0
  4882  002A24  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  4883  002A28  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  4884  002A2C  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  4885  002A30  0100               	movlb	0	; () banked
  4886  002A32  6B7C               	clrf	___flmul@grs& (0+255),b
  4887                           
  4888                           ; BSR set to: 0
  4889  002A34  0100               	movlb	0	; () banked
  4890  002A36  5172               	movf	___flmul@a& (0+255),w,b
  4891  002A38  0100               	movlb	0	; () banked
  4892  002A3A  036F               	mulwf	(___flmul@b+1)& (0+255),b
  4893  002A3C  CFF3 F085          	movff	prodl,___flmul@temp
  4894  002A40  CFF4 F086          	movff	prodh,___flmul@temp+1
  4895                           
  4896                           ; BSR set to: 0
  4897  002A44  0100               	movlb	0	; () banked
  4898  002A46  5185               	movf	___flmul@temp& (0+255),w,b
  4899  002A48  0100               	movlb	0	; () banked
  4900  002A4A  277C               	addwf	___flmul@grs& (0+255),f,b
  4901  002A4C  0100               	movlb	0	; () banked
  4902  002A4E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  4903  002A50  0100               	movlb	0	; () banked
  4904  002A52  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4905  002A54  0E00               	movlw	0
  4906  002A56  0100               	movlb	0	; () banked
  4907  002A58  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4908  002A5A  0E00               	movlw	0
  4909  002A5C  0100               	movlb	0	; () banked
  4910  002A5E  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4911                           
  4912                           ; BSR set to: 0
  4913  002A60  0100               	movlb	0	; () banked
  4914  002A62  5173               	movf	(___flmul@a+1)& (0+255),w,b
  4915  002A64  0100               	movlb	0	; () banked
  4916  002A66  036E               	mulwf	___flmul@b& (0+255),b
  4917  002A68  CFF3 F085          	movff	prodl,___flmul@temp
  4918  002A6C  CFF4 F086          	movff	prodh,___flmul@temp+1
  4919                           
  4920                           ; BSR set to: 0
  4921  002A70  0100               	movlb	0	; () banked
  4922  002A72  5185               	movf	___flmul@temp& (0+255),w,b
  4923  002A74  0100               	movlb	0	; () banked
  4924  002A76  277C               	addwf	___flmul@grs& (0+255),f,b
  4925  002A78  0100               	movlb	0	; () banked
  4926  002A7A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  4927  002A7C  0100               	movlb	0	; () banked
  4928  002A7E  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4929  002A80  0E00               	movlw	0
  4930  002A82  0100               	movlb	0	; () banked
  4931  002A84  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4932  002A86  0E00               	movlw	0
  4933  002A88  0100               	movlb	0	; () banked
  4934  002A8A  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4935                           
  4936                           ; BSR set to: 0
  4937  002A8C  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  4938  002A90  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  4939  002A94  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  4940  002A98  0100               	movlb	0	; () banked
  4941  002A9A  6B7C               	clrf	___flmul@grs& (0+255),b
  4942  002A9C  0100               	movlb	0	; () banked
  4943  002A9E  5172               	movf	___flmul@a& (0+255),w,b
  4944  002AA0  0100               	movlb	0	; () banked
  4945  002AA2  036E               	mulwf	___flmul@b& (0+255),b
  4946  002AA4  CFF3 F085          	movff	prodl,___flmul@temp
  4947  002AA8  CFF4 F086          	movff	prodh,___flmul@temp+1
  4948                           
  4949                           ; BSR set to: 0
  4950  002AAC  0100               	movlb	0	; () banked
  4951  002AAE  5185               	movf	___flmul@temp& (0+255),w,b
  4952  002AB0  0100               	movlb	0	; () banked
  4953  002AB2  277C               	addwf	___flmul@grs& (0+255),f,b
  4954  002AB4  0100               	movlb	0	; () banked
  4955  002AB6  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  4956  002AB8  0100               	movlb	0	; () banked
  4957  002ABA  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4958  002ABC  0E00               	movlw	0
  4959  002ABE  0100               	movlb	0	; () banked
  4960  002AC0  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4961  002AC2  0E00               	movlw	0
  4962  002AC4  0100               	movlb	0	; () banked
  4963  002AC6  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4964                           
  4965                           ; BSR set to: 0
  4966  002AC8  0100               	movlb	0	; () banked
  4967  002ACA  5174               	movf	(___flmul@a+2)& (0+255),w,b
  4968  002ACC  0100               	movlb	0	; () banked
  4969  002ACE  036F               	mulwf	(___flmul@b+1)& (0+255),b
  4970  002AD0  CFF3 F085          	movff	prodl,___flmul@temp
  4971  002AD4  CFF4 F086          	movff	prodh,___flmul@temp+1
  4972  002AD8  0100               	movlb	0	; () banked
  4973  002ADA  5185               	movf	___flmul@temp& (0+255),w,b
  4974  002ADC  0100               	movlb	0	; () banked
  4975  002ADE  2781               	addwf	___flmul@prod& (0+255),f,b
  4976  002AE0  0100               	movlb	0	; () banked
  4977  002AE2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  4978  002AE4  0100               	movlb	0	; () banked
  4979  002AE6  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4980  002AE8  0E00               	movlw	0
  4981  002AEA  0100               	movlb	0	; () banked
  4982  002AEC  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4983  002AEE  0E00               	movlw	0
  4984  002AF0  0100               	movlb	0	; () banked
  4985  002AF2  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4986                           
  4987                           ; BSR set to: 0
  4988  002AF4  0100               	movlb	0	; () banked
  4989  002AF6  5173               	movf	(___flmul@a+1)& (0+255),w,b
  4990  002AF8  0100               	movlb	0	; () banked
  4991  002AFA  0370               	mulwf	(___flmul@b+2)& (0+255),b
  4992  002AFC  CFF3 F085          	movff	prodl,___flmul@temp
  4993  002B00  CFF4 F086          	movff	prodh,___flmul@temp+1
  4994                           
  4995                           ; BSR set to: 0
  4996  002B04  0100               	movlb	0	; () banked
  4997  002B06  5185               	movf	___flmul@temp& (0+255),w,b
  4998  002B08  0100               	movlb	0	; () banked
  4999  002B0A  2781               	addwf	___flmul@prod& (0+255),f,b
  5000  002B0C  0100               	movlb	0	; () banked
  5001  002B0E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5002  002B10  0100               	movlb	0	; () banked
  5003  002B12  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5004  002B14  0E00               	movlw	0
  5005  002B16  0100               	movlb	0	; () banked
  5006  002B18  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5007  002B1A  0E00               	movlw	0
  5008  002B1C  0100               	movlb	0	; () banked
  5009  002B1E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5010  002B20  0100               	movlb	0	; () banked
  5011  002B22  5174               	movf	(___flmul@a+2)& (0+255),w,b
  5012  002B24  0100               	movlb	0	; () banked
  5013  002B26  0370               	mulwf	(___flmul@b+2)& (0+255),b
  5014  002B28  CFF3 F085          	movff	prodl,___flmul@temp
  5015  002B2C  CFF4 F086          	movff	prodh,___flmul@temp+1
  5016                           
  5017                           ; BSR set to: 0
  5018  002B30  0100               	movlb	0	; () banked
  5019  002B32  5185               	movf	___flmul@temp& (0+255),w,b
  5020  002B34  0100               	movlb	0	; () banked
  5021  002B36  6F76               	movwf	??___flmul& (0+255),b
  5022  002B38  0100               	movlb	0	; () banked
  5023  002B3A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5024  002B3C  0100               	movlb	0	; () banked
  5025  002B3E  6F77               	movwf	(??___flmul+1)& (0+255),b
  5026  002B40  0100               	movlb	0	; () banked
  5027  002B42  6B78               	clrf	(??___flmul+2)& (0+255),b
  5028  002B44  0100               	movlb	0	; () banked
  5029  002B46  6B79               	clrf	(??___flmul+3)& (0+255),b
  5030  002B48  C078  F079         	movff	??___flmul+2,??___flmul+3
  5031  002B4C  C077  F078         	movff	??___flmul+1,??___flmul+2
  5032  002B50  C076  F077         	movff	??___flmul,??___flmul+1
  5033  002B54  0100               	movlb	0	; () banked
  5034  002B56  6B76               	clrf	??___flmul& (0+255),b
  5035  002B58  0100               	movlb	0	; () banked
  5036  002B5A  5176               	movf	??___flmul& (0+255),w,b
  5037  002B5C  0100               	movlb	0	; () banked
  5038  002B5E  2781               	addwf	___flmul@prod& (0+255),f,b
  5039  002B60  0100               	movlb	0	; () banked
  5040  002B62  5177               	movf	(??___flmul+1)& (0+255),w,b
  5041  002B64  0100               	movlb	0	; () banked
  5042  002B66  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5043  002B68  0100               	movlb	0	; () banked
  5044  002B6A  5178               	movf	(??___flmul+2)& (0+255),w,b
  5045  002B6C  0100               	movlb	0	; () banked
  5046  002B6E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5047  002B70  0100               	movlb	0	; () banked
  5048  002B72  5179               	movf	(??___flmul+3)& (0+255),w,b
  5049  002B74  0100               	movlb	0	; () banked
  5050  002B76  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5051                           
  5052                           ; BSR set to: 0
  5053  002B78  C07C  F076         	movff	___flmul@grs,??___flmul
  5054  002B7C  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
  5055  002B80  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
  5056  002B84  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
  5057  002B88  0E19               	movlw	25
  5058  002B8A  D006               	goto	u7800
  5059  002B8C                     u7805:
  5060  002B8C  0100               	movlb	0	; () banked
  5061  002B8E  90D8               	bcf	status,0,c
  5062  002B90  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  5063  002B92  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  5064  002B94  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  5065  002B96  3376               	rrcf	??___flmul& (0+255),f,b
  5066  002B98                     u7800:
  5067  002B98  2EE8               	decfsz	wreg,f,c
  5068  002B9A  D7F8               	goto	u7805
  5069  002B9C  0100               	movlb	0	; () banked
  5070  002B9E  5176               	movf	??___flmul& (0+255),w,b
  5071  002BA0  0100               	movlb	0	; () banked
  5072  002BA2  2781               	addwf	___flmul@prod& (0+255),f,b
  5073  002BA4  0100               	movlb	0	; () banked
  5074  002BA6  5177               	movf	(??___flmul+1)& (0+255),w,b
  5075  002BA8  0100               	movlb	0	; () banked
  5076  002BAA  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5077  002BAC  0100               	movlb	0	; () banked
  5078  002BAE  5178               	movf	(??___flmul+2)& (0+255),w,b
  5079  002BB0  0100               	movlb	0	; () banked
  5080  002BB2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5081  002BB4  0100               	movlb	0	; () banked
  5082  002BB6  5179               	movf	(??___flmul+3)& (0+255),w,b
  5083  002BB8  0100               	movlb	0	; () banked
  5084  002BBA  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5085                           
  5086                           ; BSR set to: 0
  5087  002BBC  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  5088  002BC0  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  5089  002BC4  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  5090  002BC8  0100               	movlb	0	; () banked
  5091  002BCA  6B7C               	clrf	___flmul@grs& (0+255),b
  5092                           
  5093                           ; BSR set to: 0
  5094  002BCC  0100               	movlb	0	; () banked
  5095  002BCE  517B               	movf	___flmul@aexp& (0+255),w,b
  5096  002BD0  C080  F076         	movff	___flmul@bexp,??___flmul
  5097  002BD4  0100               	movlb	0	; () banked
  5098  002BD6  6B77               	clrf	(??___flmul+1)& (0+255),b
  5099  002BD8  0100               	movlb	0	; () banked
  5100  002BDA  2776               	addwf	??___flmul& (0+255),f,b
  5101  002BDC  0E00               	movlw	0
  5102  002BDE  2377               	addwfc	(??___flmul+1)& (0+255),f,b
  5103  002BE0  0E82               	movlw	130
  5104  002BE2  0100               	movlb	0	; () banked
  5105  002BE4  2576               	addwf	??___flmul& (0+255),w,b
  5106  002BE6  0100               	movlb	0	; () banked
  5107  002BE8  6F85               	movwf	___flmul@temp& (0+255),b
  5108  002BEA  0EFF               	movlw	255
  5109  002BEC  0100               	movlb	0	; () banked
  5110  002BEE  2177               	addwfc	(??___flmul+1)& (0+255),w,b
  5111  002BF0  0100               	movlb	0	; () banked
  5112  002BF2  6F86               	movwf	(___flmul@temp+1)& (0+255),b
  5113  002BF4  D015               	goto	l6034
  5114  002BF6                     l6028:
  5115                           
  5116                           ; BSR set to: 0
  5117  002BF6  0100               	movlb	0	; () banked
  5118  002BF8  90D8               	bcf	status,0,c
  5119  002BFA  3781               	rlcf	___flmul@prod& (0+255),f,b
  5120  002BFC  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5121  002BFE  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5122  002C00  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5123                           
  5124                           ; BSR set to: 0
  5125  002C02  0100               	movlb	0	; () banked
  5126  002C04  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
  5127  002C06  D002               	goto	l1335
  5128                           
  5129                           ; BSR set to: 0
  5130  002C08  0100               	movlb	0	; () banked
  5131  002C0A  8181               	bsf	___flmul@prod& (0+255),0,b
  5132  002C0C                     l1335:
  5133                           
  5134                           ; BSR set to: 0
  5135  002C0C  0100               	movlb	0	; () banked
  5136  002C0E  90D8               	bcf	status,0,c
  5137  002C10  377C               	rlcf	___flmul@grs& (0+255),f,b
  5138  002C12  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5139  002C14  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5140  002C16  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5141  002C18  0100               	movlb	0	; () banked
  5142  002C1A  0785               	decf	___flmul@temp& (0+255),f,b
  5143  002C1C  A0D8               	btfss	status,0,c
  5144  002C1E  0786               	decf	(___flmul@temp+1)& (0+255),f,b
  5145  002C20                     l6034:
  5146                           
  5147                           ; BSR set to: 0
  5148  002C20  0100               	movlb	0	; () banked
  5149  002C22  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
  5150  002C24  D7E8               	goto	l6028
  5151                           
  5152                           ; BSR set to: 0
  5153                           
  5154                           ; BSR set to: 0
  5155  002C26  0E00               	movlw	0
  5156  002C28  0100               	movlb	0	; () banked
  5157  002C2A  6F7B               	movwf	___flmul@aexp& (0+255),b
  5158                           
  5159                           ; BSR set to: 0
  5160  002C2C  0100               	movlb	0	; () banked
  5161  002C2E  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
  5162  002C30  D024               	goto	l1337
  5163                           
  5164                           ; BSR set to: 0
  5165  002C32  0EFF               	movlw	255
  5166  002C34  0100               	movlb	0	; () banked
  5167  002C36  157C               	andwf	___flmul@grs& (0+255),w,b
  5168  002C38  0100               	movlb	0	; () banked
  5169  002C3A  6F76               	movwf	??___flmul& (0+255),b
  5170  002C3C  0EFF               	movlw	255
  5171  002C3E  0100               	movlb	0	; () banked
  5172  002C40  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
  5173  002C42  0100               	movlb	0	; () banked
  5174  002C44  6F77               	movwf	(??___flmul+1)& (0+255),b
  5175  002C46  0EFF               	movlw	255
  5176  002C48  0100               	movlb	0	; () banked
  5177  002C4A  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
  5178  002C4C  0100               	movlb	0	; () banked
  5179  002C4E  6F78               	movwf	(??___flmul+2)& (0+255),b
  5180  002C50  0E7F               	movlw	127
  5181  002C52  0100               	movlb	0	; () banked
  5182  002C54  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
  5183  002C56  0100               	movlb	0	; () banked
  5184  002C58  6F79               	movwf	(??___flmul+3)& (0+255),b
  5185  002C5A  0100               	movlb	0	; () banked
  5186  002C5C  5176               	movf	??___flmul& (0+255),w,b
  5187  002C5E  0100               	movlb	0	; () banked
  5188  002C60  1177               	iorwf	(??___flmul+1)& (0+255),w,b
  5189  002C62  0100               	movlb	0	; () banked
  5190  002C64  1178               	iorwf	(??___flmul+2)& (0+255),w,b
  5191  002C66  0100               	movlb	0	; () banked
  5192  002C68  1179               	iorwf	(??___flmul+3)& (0+255),w,b
  5193  002C6A  A4D8               	btfss	status,2,c
  5194  002C6C  D003               	goto	l6044
  5195                           
  5196                           ; BSR set to: 0
  5197                           
  5198                           ; BSR set to: 0
  5199  002C6E  0100               	movlb	0	; () banked
  5200  002C70  A181               	btfss	___flmul@prod& (0+255),0,b
  5201  002C72  D003               	goto	l1337
  5202  002C74                     l6044:
  5203                           
  5204                           ; BSR set to: 0
  5205  002C74  0E01               	movlw	1
  5206  002C76  0100               	movlb	0	; () banked
  5207  002C78  6F7B               	movwf	___flmul@aexp& (0+255),b
  5208  002C7A                     l1337:
  5209                           
  5210                           ; BSR set to: 0
  5211  002C7A  0100               	movlb	0	; () banked
  5212  002C7C  517B               	movf	___flmul@aexp& (0+255),w,b
  5213  002C7E  0100               	movlb	0	; () banked
  5214  002C80  B4D8               	btfsc	status,2,c
  5215  002C82  D023               	goto	l6054
  5216                           
  5217                           ; BSR set to: 0
  5218  002C84  0E01               	movlw	1
  5219  002C86  0100               	movlb	0	; () banked
  5220  002C88  2781               	addwf	___flmul@prod& (0+255),f,b
  5221  002C8A  0E00               	movlw	0
  5222  002C8C  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5223  002C8E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5224  002C90  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5225                           
  5226                           ; BSR set to: 0
  5227  002C92  0100               	movlb	0	; () banked
  5228  002C94  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
  5229  002C96  D019               	goto	l6054
  5230                           
  5231                           ; BSR set to: 0
  5232  002C98  C081  F076         	movff	___flmul@prod,??___flmul
  5233  002C9C  C082  F077         	movff	___flmul@prod+1,??___flmul+1
  5234  002CA0  C083  F078         	movff	___flmul@prod+2,??___flmul+2
  5235  002CA4  C084  F079         	movff	___flmul@prod+3,??___flmul+3
  5236  002CA8  0100               	movlb	0	; () banked
  5237  002CAA  3579               	rlcf	(??___flmul+3)& (0+255),w,b
  5238  002CAC  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  5239  002CAE  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  5240  002CB0  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  5241  002CB2  3376               	rrcf	??___flmul& (0+255),f,b
  5242  002CB4  C076  F081         	movff	??___flmul,___flmul@prod
  5243  002CB8  C077  F082         	movff	??___flmul+1,___flmul@prod+1
  5244  002CBC  C078  F083         	movff	??___flmul+2,___flmul@prod+2
  5245  002CC0  C079  F084         	movff	??___flmul+3,___flmul@prod+3
  5246                           
  5247                           ; BSR set to: 0
  5248  002CC4  0100               	movlb	0	; () banked
  5249  002CC6  4B85               	infsnz	___flmul@temp& (0+255),f,b
  5250  002CC8  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
  5251  002CCA                     l6054:
  5252                           
  5253                           ; BSR set to: 0
  5254  002CCA  0100               	movlb	0	; () banked
  5255  002CCC  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5256  002CCE  D010               	goto	l6058
  5257  002CD0  0100               	movlb	0	; () banked
  5258  002CD2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5259  002CD4  E104               	bnz	u7880
  5260  002CD6  0100               	movlb	0	; () banked
  5261  002CD8  2985               	incf	___flmul@temp& (0+255),w,b
  5262  002CDA  A0D8               	btfss	status,0,c
  5263  002CDC  D009               	goto	l6058
  5264  002CDE                     u7880:
  5265                           
  5266                           ; BSR set to: 0
  5267  002CDE  0E00               	movlw	0
  5268  002CE0  0100               	movlb	0	; () banked
  5269  002CE2  6F81               	movwf	___flmul@prod& (0+255),b
  5270  002CE4  0E00               	movlw	0
  5271  002CE6  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  5272  002CE8  0E80               	movlw	128
  5273  002CEA  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  5274  002CEC  0E7F               	movlw	127
  5275  002CEE  D02B               	goto	L4
  5276  002CF0                     l6058:
  5277                           
  5278                           ; BSR set to: 0
  5279  002CF0  0100               	movlb	0	; () banked
  5280  002CF2  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5281  002CF4  D007               	goto	l6060
  5282  002CF6  0100               	movlb	0	; () banked
  5283  002CF8  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  5284  002CFA  E111               	bnz	l1345
  5285  002CFC  0100               	movlb	0	; () banked
  5286  002CFE  0585               	decf	___flmul@temp& (0+255),w,b
  5287  002D00  B0D8               	btfsc	status,0,c
  5288  002D02  D00D               	goto	l1345
  5289  002D04                     l6060:
  5290                           
  5291                           ; BSR set to: 0
  5292  002D04  0E00               	movlw	0
  5293  002D06  0100               	movlb	0	; () banked
  5294  002D08  6F81               	movwf	___flmul@prod& (0+255),b
  5295  002D0A  0E00               	movlw	0
  5296  002D0C  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  5297  002D0E  0E00               	movlw	0
  5298  002D10  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  5299  002D12  0E00               	movlw	0
  5300  002D14  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  5301  002D16  0E00               	movlw	0
  5302  002D18  0100               	movlb	0	; () banked
  5303  002D1A  6F7A               	movwf	___flmul@sign& (0+255),b
  5304  002D1C  D015               	goto	l6070
  5305  002D1E                     l1345:
  5306                           
  5307                           ; BSR set to: 0
  5308  002D1E  C085  F080         	movff	___flmul@temp,___flmul@bexp
  5309                           
  5310                           ; BSR set to: 0
  5311  002D22  0EFF               	movlw	255
  5312  002D24  0100               	movlb	0	; () banked
  5313  002D26  1781               	andwf	___flmul@prod& (0+255),f,b
  5314  002D28  0EFF               	movlw	255
  5315  002D2A  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
  5316  002D2C  0E7F               	movlw	127
  5317  002D2E  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
  5318  002D30  0E00               	movlw	0
  5319  002D32  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
  5320                           
  5321                           ; BSR set to: 0
  5322  002D34  0100               	movlb	0	; () banked
  5323  002D36  A180               	btfss	___flmul@bexp& (0+255),0,b
  5324  002D38  D002               	goto	l6068
  5325                           
  5326                           ; BSR set to: 0
  5327  002D3A  0100               	movlb	0	; () banked
  5328  002D3C  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
  5329  002D3E                     l6068:
  5330                           
  5331                           ; BSR set to: 0
  5332  002D3E  0100               	movlb	0	; () banked
  5333  002D40  90D8               	bcf	status,0,c
  5334  002D42  3180               	rrcf	___flmul@bexp& (0+255),w,b
  5335  002D44  0100               	movlb	0	; () banked
  5336  002D46                     L4:
  5337  002D46  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  5338  002D48                     l6070:
  5339                           
  5340                           ; BSR set to: 0
  5341  002D48  0100               	movlb	0	; () banked
  5342  002D4A  517A               	movf	___flmul@sign& (0+255),w,b
  5343  002D4C  0100               	movlb	0	; () banked
  5344  002D4E  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5345                           
  5346                           ; BSR set to: 0
  5347  002D50  C081  F06E         	movff	___flmul@prod,?___flmul
  5348  002D54  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
  5349  002D58  C083  F070         	movff	___flmul@prod+2,?___flmul+2
  5350  002D5C  C084  F071         	movff	___flmul@prod+3,?___flmul+3
  5351  002D60  0012               	return	
  5352  002D62                     __end_of___flmul:
  5353                           	opt stack 0
  5354                           tblptru	equ	0xFF8
  5355                           tblptrh	equ	0xFF7
  5356                           tblptrl	equ	0xFF6
  5357                           tablat	equ	0xFF5
  5358                           prodh	equ	0xFF4
  5359                           prodl	equ	0xFF3
  5360                           postinc0	equ	0xFEE
  5361                           wreg	equ	0xFE8
  5362                           postdec1	equ	0xFE5
  5363                           fsr1l	equ	0xFE1
  5364                           postinc2	equ	0xFDE
  5365                           postdec2	equ	0xFDD
  5366                           fsr2h	equ	0xFDA
  5367                           fsr2l	equ	0xFD9
  5368                           status	equ	0xFD8
  5369                           
  5370 ;; *************** function ___flsub *****************
  5371 ;; Defined at:
  5372 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;  b               4   59[BANK0 ] unsigned char 
  5375 ;;  a               4   63[BANK0 ] unsigned char 
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;		None
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  4   59[BANK0 ] unsigned char 
  5380 ;; Registers used:
  5381 ;;		wreg, status,2, status,0, cstack
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5387 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5390 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5391 ;;Total ram usage:        8 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; Hardware stack levels required when called:    3
  5394 ;; This function calls:
  5395 ;;		___fladd
  5396 ;; This function is called by:
  5397 ;;		_exp
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           	psect	text14
  5402  004EC8                     __ptext14:
  5403                           	opt stack 0
  5404  004EC8                     ___flsub:
  5405                           	opt stack 24
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;incstack = 0
  5409  004EC8  0E00               	movlw	0
  5410  004ECA  0100               	movlb	0	; () banked
  5411  004ECC  1B9F               	xorwf	___flsub@a& (0+255),f,b
  5412  004ECE  0E00               	movlw	0
  5413  004ED0  1BA0               	xorwf	(___flsub@a+1)& (0+255),f,b
  5414  004ED2  0E00               	movlw	0
  5415  004ED4  1BA1               	xorwf	(___flsub@a+2)& (0+255),f,b
  5416  004ED6  0E80               	movlw	128
  5417  004ED8  1BA2               	xorwf	(___flsub@a+3)& (0+255),f,b
  5418                           
  5419                           ; BSR set to: 0
  5420  004EDA  C09B  F087         	movff	___flsub@b,___fladd@b
  5421  004EDE  C09C  F088         	movff	___flsub@b+1,___fladd@b+1
  5422  004EE2  C09D  F089         	movff	___flsub@b+2,___fladd@b+2
  5423  004EE6  C09E  F08A         	movff	___flsub@b+3,___fladd@b+3
  5424  004EEA  C09F  F08B         	movff	___flsub@a,___fladd@a
  5425  004EEE  C0A0  F08C         	movff	___flsub@a+1,___fladd@a+1
  5426  004EF2  C0A1  F08D         	movff	___flsub@a+2,___fladd@a+2
  5427  004EF6  C0A2  F08E         	movff	___flsub@a+3,___fladd@a+3
  5428  004EFA  EC0A  F012         	call	___fladd	;wreg free
  5429  004EFE  C087  F09B         	movff	?___fladd,?___flsub
  5430  004F02  C088  F09C         	movff	?___fladd+1,?___flsub+1
  5431  004F06  C089  F09D         	movff	?___fladd+2,?___flsub+2
  5432  004F0A  C08A  F09E         	movff	?___fladd+3,?___flsub+3
  5433  004F0E  0012               	return	
  5434  004F10                     __end_of___flsub:
  5435                           	opt stack 0
  5436                           tblptru	equ	0xFF8
  5437                           tblptrh	equ	0xFF7
  5438                           tblptrl	equ	0xFF6
  5439                           tablat	equ	0xFF5
  5440                           prodh	equ	0xFF4
  5441                           prodl	equ	0xFF3
  5442                           postinc0	equ	0xFEE
  5443                           wreg	equ	0xFE8
  5444                           postdec1	equ	0xFE5
  5445                           fsr1l	equ	0xFE1
  5446                           postinc2	equ	0xFDE
  5447                           postdec2	equ	0xFDD
  5448                           fsr2h	equ	0xFDA
  5449                           fsr2l	equ	0xFD9
  5450                           status	equ	0xFD8
  5451                           
  5452 ;; *************** function ___fladd *****************
  5453 ;; Defined at:
  5454 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;  b               4   39[BANK0 ] unsigned char 
  5457 ;;  a               4   43[BANK0 ] unsigned char 
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;  grs             1   58[BANK0 ] unsigned char 
  5460 ;;  bexp            1   57[BANK0 ] unsigned char 
  5461 ;;  aexp            1   56[BANK0 ] unsigned char 
  5462 ;;  signs           1   55[BANK0 ] unsigned char 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  4   39[BANK0 ] unsigned char 
  5465 ;; Registers used:
  5466 ;;		wreg, status,2, status,0
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5472 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5473 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5474 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5475 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5476 ;;Total ram usage:       20 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    2
  5479 ;; This function calls:
  5480 ;;		Nothing
  5481 ;; This function is called by:
  5482 ;;		_rampe
  5483 ;;		___flsub
  5484 ;;		_floor
  5485 ;;		_log
  5486 ;;		_eval_poly
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           	psect	text15
  5491  002414                     __ptext15:
  5492                           	opt stack 0
  5493  002414                     ___fladd:
  5494                           	opt stack 24
  5495                           
  5496                           ;incstack = 0
  5497  002414  0100               	movlb	0	; () banked
  5498  002416  518A               	movf	(___fladd@b+3)& (0+255),w,b
  5499  002418  0B80               	andlw	128
  5500  00241A  0100               	movlb	0	; () banked
  5501  00241C  6F97               	movwf	___fladd@signs& (0+255),b
  5502  00241E  0100               	movlb	0	; () banked
  5503  002420  518A               	movf	(___fladd@b+3)& (0+255),w,b
  5504  002422  258A               	addwf	(___fladd@b+3)& (0+255),w,b
  5505  002424  0100               	movlb	0	; () banked
  5506  002426  6F99               	movwf	___fladd@bexp& (0+255),b
  5507                           
  5508                           ; BSR set to: 0
  5509  002428  0100               	movlb	0	; () banked
  5510  00242A  AF89               	btfss	(___fladd@b+2)& (0+255),7,b
  5511  00242C  D002               	goto	l5750
  5512                           
  5513                           ; BSR set to: 0
  5514  00242E  0100               	movlb	0	; () banked
  5515  002430  8199               	bsf	___fladd@bexp& (0+255),0,b
  5516  002432                     l5750:
  5517                           
  5518                           ; BSR set to: 0
  5519  002432  0100               	movlb	0	; () banked
  5520  002434  5199               	movf	___fladd@bexp& (0+255),w,b
  5521  002436  0100               	movlb	0	; () banked
  5522  002438  B4D8               	btfsc	status,2,c
  5523  00243A  D012               	goto	l5760
  5524                           
  5525                           ; BSR set to: 0
  5526  00243C  0100               	movlb	0	; () banked
  5527  00243E  2999               	incf	___fladd@bexp& (0+255),w,b
  5528  002440  A4D8               	btfss	status,2,c
  5529  002442  D009               	goto	l5756
  5530                           
  5531                           ; BSR set to: 0
  5532  002444  0E00               	movlw	0
  5533  002446  0100               	movlb	0	; () banked
  5534  002448  6F87               	movwf	___fladd@b& (0+255),b
  5535  00244A  0E00               	movlw	0
  5536  00244C  6F88               	movwf	(___fladd@b+1)& (0+255),b
  5537  00244E  0E00               	movlw	0
  5538  002450  6F89               	movwf	(___fladd@b+2)& (0+255),b
  5539  002452  0E00               	movlw	0
  5540  002454  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  5541  002456                     l5756:
  5542                           
  5543                           ; BSR set to: 0
  5544  002456  0100               	movlb	0	; () banked
  5545  002458  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  5546                           
  5547                           ; BSR set to: 0
  5548  00245A  0E00               	movlw	0
  5549  00245C  0100               	movlb	0	; () banked
  5550  00245E  D008               	goto	L5
  5551  002460                     l5760:
  5552                           
  5553                           ; BSR set to: 0
  5554  002460  0E00               	movlw	0
  5555  002462  0100               	movlb	0	; () banked
  5556  002464  6F87               	movwf	___fladd@b& (0+255),b
  5557  002466  0E00               	movlw	0
  5558  002468  6F88               	movwf	(___fladd@b+1)& (0+255),b
  5559  00246A  0E00               	movlw	0
  5560  00246C  6F89               	movwf	(___fladd@b+2)& (0+255),b
  5561  00246E  0E00               	movlw	0
  5562  002470                     L5:
  5563  002470  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  5564                           
  5565                           ; BSR set to: 0
  5566                           
  5567                           ; BSR set to: 0
  5568  002472  0100               	movlb	0	; () banked
  5569  002474  518E               	movf	(___fladd@a+3)& (0+255),w,b
  5570  002476  0B80               	andlw	128
  5571  002478  0100               	movlb	0	; () banked
  5572  00247A  6F98               	movwf	___fladd@aexp& (0+255),b
  5573                           
  5574                           ; BSR set to: 0
  5575  00247C  0100               	movlb	0	; () banked
  5576  00247E  5197               	movf	___fladd@signs& (0+255),w,b
  5577  002480  0100               	movlb	0	; () banked
  5578  002482  1998               	xorwf	___fladd@aexp& (0+255),w,b
  5579  002484  B4D8               	btfsc	status,2,c
  5580  002486  D002               	goto	l5768
  5581                           
  5582                           ; BSR set to: 0
  5583  002488  0100               	movlb	0	; () banked
  5584  00248A  8D97               	bsf	___fladd@signs& (0+255),6,b
  5585  00248C                     l5768:
  5586                           
  5587                           ; BSR set to: 0
  5588  00248C  0100               	movlb	0	; () banked
  5589  00248E  518E               	movf	(___fladd@a+3)& (0+255),w,b
  5590  002490  258E               	addwf	(___fladd@a+3)& (0+255),w,b
  5591  002492  0100               	movlb	0	; () banked
  5592  002494  6F98               	movwf	___fladd@aexp& (0+255),b
  5593                           
  5594                           ; BSR set to: 0
  5595  002496  0100               	movlb	0	; () banked
  5596  002498  AF8D               	btfss	(___fladd@a+2)& (0+255),7,b
  5597  00249A  D002               	goto	l5774
  5598                           
  5599                           ; BSR set to: 0
  5600  00249C  0100               	movlb	0	; () banked
  5601  00249E  8198               	bsf	___fladd@aexp& (0+255),0,b
  5602  0024A0                     l5774:
  5603                           
  5604                           ; BSR set to: 0
  5605  0024A0  0100               	movlb	0	; () banked
  5606  0024A2  5198               	movf	___fladd@aexp& (0+255),w,b
  5607  0024A4  0100               	movlb	0	; () banked
  5608  0024A6  B4D8               	btfsc	status,2,c
  5609  0024A8  D012               	goto	l5784
  5610                           
  5611                           ; BSR set to: 0
  5612  0024AA  0100               	movlb	0	; () banked
  5613  0024AC  2998               	incf	___fladd@aexp& (0+255),w,b
  5614  0024AE  A4D8               	btfss	status,2,c
  5615  0024B0  D009               	goto	l5780
  5616                           
  5617                           ; BSR set to: 0
  5618  0024B2  0E00               	movlw	0
  5619  0024B4  0100               	movlb	0	; () banked
  5620  0024B6  6F8B               	movwf	___fladd@a& (0+255),b
  5621  0024B8  0E00               	movlw	0
  5622  0024BA  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  5623  0024BC  0E00               	movlw	0
  5624  0024BE  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  5625  0024C0  0E00               	movlw	0
  5626  0024C2  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  5627  0024C4                     l5780:
  5628                           
  5629                           ; BSR set to: 0
  5630  0024C4  0100               	movlb	0	; () banked
  5631  0024C6  8F8D               	bsf	(___fladd@a+2)& (0+255),7,b
  5632                           
  5633                           ; BSR set to: 0
  5634  0024C8  0E00               	movlw	0
  5635  0024CA  0100               	movlb	0	; () banked
  5636  0024CC  D008               	goto	L6
  5637  0024CE                     l5784:
  5638                           
  5639                           ; BSR set to: 0
  5640  0024CE  0E00               	movlw	0
  5641  0024D0  0100               	movlb	0	; () banked
  5642  0024D2  6F8B               	movwf	___fladd@a& (0+255),b
  5643  0024D4  0E00               	movlw	0
  5644  0024D6  6F8C               	movwf	(___fladd@a+1)& (0+255),b
  5645  0024D8  0E00               	movlw	0
  5646  0024DA  6F8D               	movwf	(___fladd@a+2)& (0+255),b
  5647  0024DC  0E00               	movlw	0
  5648  0024DE                     L6:
  5649  0024DE  6F8E               	movwf	(___fladd@a+3)& (0+255),b
  5650                           
  5651                           ; BSR set to: 0
  5652                           
  5653                           ; BSR set to: 0
  5654  0024E0  0100               	movlb	0	; () banked
  5655  0024E2  5199               	movf	___fladd@bexp& (0+255),w,b
  5656  0024E4  0100               	movlb	0	; () banked
  5657  0024E6  5D98               	subwf	___fladd@aexp& (0+255),w,b
  5658  0024E8  B0D8               	btfsc	status,0,c
  5659  0024EA  D024               	goto	l5822
  5660                           
  5661                           ; BSR set to: 0
  5662  0024EC  0100               	movlb	0	; () banked
  5663  0024EE  AD97               	btfss	___fladd@signs& (0+255),6,b
  5664  0024F0  D003               	goto	l5792
  5665                           
  5666                           ; BSR set to: 0
  5667  0024F2  0E80               	movlw	128
  5668  0024F4  0100               	movlb	0	; () banked
  5669  0024F6  1B97               	xorwf	___fladd@signs& (0+255),f,b
  5670  0024F8                     l5792:
  5671                           
  5672                           ; BSR set to: 0
  5673  0024F8  C099  F09A         	movff	___fladd@bexp,___fladd@grs
  5674                           
  5675                           ; BSR set to: 0
  5676  0024FC  C098  F099         	movff	___fladd@aexp,___fladd@bexp
  5677                           
  5678                           ; BSR set to: 0
  5679  002500  C09A  F098         	movff	___fladd@grs,___fladd@aexp
  5680                           
  5681                           ; BSR set to: 0
  5682  002504  C087  F09A         	movff	___fladd@b,___fladd@grs
  5683                           
  5684                           ; BSR set to: 0
  5685  002508  C08B  F087         	movff	___fladd@a,___fladd@b
  5686                           
  5687                           ; BSR set to: 0
  5688  00250C  C09A  F08B         	movff	___fladd@grs,___fladd@a
  5689                           
  5690                           ; BSR set to: 0
  5691  002510  C088  F09A         	movff	___fladd@b+1,___fladd@grs
  5692                           
  5693                           ; BSR set to: 0
  5694  002514  C08C  F088         	movff	___fladd@a+1,___fladd@b+1
  5695                           
  5696                           ; BSR set to: 0
  5697  002518  C09A  F08C         	movff	___fladd@grs,___fladd@a+1
  5698                           
  5699                           ; BSR set to: 0
  5700  00251C  C089  F09A         	movff	___fladd@b+2,___fladd@grs
  5701                           
  5702                           ; BSR set to: 0
  5703  002520  C08D  F089         	movff	___fladd@a+2,___fladd@b+2
  5704                           
  5705                           ; BSR set to: 0
  5706  002524  C09A  F08D         	movff	___fladd@grs,___fladd@a+2
  5707                           
  5708                           ; BSR set to: 0
  5709  002528  C08A  F09A         	movff	___fladd@b+3,___fladd@grs
  5710                           
  5711                           ; BSR set to: 0
  5712  00252C  C08E  F08A         	movff	___fladd@a+3,___fladd@b+3
  5713                           
  5714                           ; BSR set to: 0
  5715  002530  C09A  F08E         	movff	___fladd@grs,___fladd@a+3
  5716  002534                     l5822:
  5717                           
  5718                           ; BSR set to: 0
  5719  002534  0E00               	movlw	0
  5720  002536  0100               	movlb	0	; () banked
  5721  002538  6F9A               	movwf	___fladd@grs& (0+255),b
  5722                           
  5723                           ; BSR set to: 0
  5724  00253A  0100               	movlb	0	; () banked
  5725  00253C  5199               	movf	___fladd@bexp& (0+255),w,b
  5726  00253E  0100               	movlb	0	; () banked
  5727  002540  6F8F               	movwf	??___fladd& (0+255),b
  5728  002542  6B90               	clrf	(??___fladd+1)& (0+255),b
  5729  002544  0100               	movlb	0	; () banked
  5730  002546  1F8F               	comf	??___fladd& (0+255),f,b
  5731  002548  1F90               	comf	(??___fladd+1)& (0+255),f,b
  5732  00254A  4B8F               	infsnz	??___fladd& (0+255),f,b
  5733  00254C  2B90               	incf	(??___fladd+1)& (0+255),f,b
  5734  00254E  0100               	movlb	0	; () banked
  5735  002550  5198               	movf	___fladd@aexp& (0+255),w,b
  5736  002552  0100               	movlb	0	; () banked
  5737  002554  6F91               	movwf	(??___fladd+2)& (0+255),b
  5738  002556  6B92               	clrf	(??___fladd+3)& (0+255),b
  5739  002558  0100               	movlb	0	; () banked
  5740  00255A  518F               	movf	??___fladd& (0+255),w,b
  5741  00255C  0100               	movlb	0	; () banked
  5742  00255E  2791               	addwf	(??___fladd+2)& (0+255),f,b
  5743  002560  0100               	movlb	0	; () banked
  5744  002562  5190               	movf	(??___fladd+1)& (0+255),w,b
  5745  002564  0100               	movlb	0	; () banked
  5746  002566  2392               	addwfc	(??___fladd+3)& (0+255),f,b
  5747  002568  0100               	movlb	0	; () banked
  5748  00256A  BF92               	btfsc	(??___fladd+3)& (0+255),7,b
  5749  00256C  D03D               	goto	l1243
  5750  00256E  0100               	movlb	0	; () banked
  5751  002570  5192               	movf	(??___fladd+3)& (0+255),w,b
  5752  002572  E105               	bnz	u7420
  5753  002574  0E1A               	movlw	26
  5754  002576  0100               	movlb	0	; () banked
  5755  002578  5D91               	subwf	(??___fladd+2)& (0+255),w,b
  5756  00257A  A0D8               	btfss	status,0,c
  5757  00257C  D035               	goto	l1243
  5758  00257E                     u7420:
  5759                           
  5760                           ; BSR set to: 0
  5761  00257E  0100               	movlb	0	; () banked
  5762  002580  5187               	movf	___fladd@b& (0+255),w,b
  5763  002582  0100               	movlb	0	; () banked
  5764  002584  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
  5765  002586  0100               	movlb	0	; () banked
  5766  002588  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
  5767  00258A  0100               	movlb	0	; () banked
  5768  00258C  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
  5769  00258E  B4D8               	btfsc	status,2,c
  5770  002590  D002               	goto	u7430
  5771  002592  0E01               	movlw	1
  5772  002594  D001               	goto	u7440
  5773  002596                     u7430:
  5774  002596  0E00               	movlw	0
  5775  002598                     u7440:
  5776  002598  0100               	movlb	0	; () banked
  5777  00259A  6F9A               	movwf	___fladd@grs& (0+255),b
  5778                           
  5779                           ; BSR set to: 0
  5780  00259C  0E00               	movlw	0
  5781  00259E  0100               	movlb	0	; () banked
  5782  0025A0  6F87               	movwf	___fladd@b& (0+255),b
  5783  0025A2  0E00               	movlw	0
  5784  0025A4  6F88               	movwf	(___fladd@b+1)& (0+255),b
  5785  0025A6  0E00               	movlw	0
  5786  0025A8  6F89               	movwf	(___fladd@b+2)& (0+255),b
  5787  0025AA  0E00               	movlw	0
  5788  0025AC  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  5789                           
  5790                           ; BSR set to: 0
  5791  0025AE  C098  F099         	movff	___fladd@aexp,___fladd@bexp
  5792  0025B2  D020               	goto	l1242
  5793  0025B4                     l1244:
  5794                           
  5795                           ; BSR set to: 0
  5796  0025B4  0100               	movlb	0	; () banked
  5797  0025B6  A19A               	btfss	___fladd@grs& (0+255),0,b
  5798  0025B8  D007               	goto	l5834
  5799                           
  5800                           ; BSR set to: 0
  5801  0025BA  0100               	movlb	0	; () banked
  5802  0025BC  90D8               	bcf	status,0,c
  5803  0025BE  319A               	rrcf	___fladd@grs& (0+255),w,b
  5804  0025C0  0901               	iorlw	1
  5805  0025C2  0100               	movlb	0	; () banked
  5806  0025C4  6F9A               	movwf	___fladd@grs& (0+255),b
  5807  0025C6  D003               	goto	l5836
  5808  0025C8                     l5834:
  5809                           
  5810                           ; BSR set to: 0
  5811  0025C8  0100               	movlb	0	; () banked
  5812  0025CA  90D8               	bcf	status,0,c
  5813  0025CC  339A               	rrcf	___fladd@grs& (0+255),f,b
  5814  0025CE                     l5836:
  5815                           
  5816                           ; BSR set to: 0
  5817  0025CE  0100               	movlb	0	; () banked
  5818  0025D0  A187               	btfss	___fladd@b& (0+255),0,b
  5819  0025D2  D002               	goto	l5840
  5820                           
  5821                           ; BSR set to: 0
  5822  0025D4  0100               	movlb	0	; () banked
  5823  0025D6  8F9A               	bsf	___fladd@grs& (0+255),7,b
  5824  0025D8                     l5840:
  5825                           
  5826                           ; BSR set to: 0
  5827  0025D8  0100               	movlb	0	; () banked
  5828  0025DA  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
  5829  0025DC  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
  5830  0025DE  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
  5831  0025E0  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
  5832  0025E2  3387               	rrcf	___fladd@b& (0+255),f,b
  5833                           
  5834                           ; BSR set to: 0
  5835  0025E4  0100               	movlb	0	; () banked
  5836  0025E6  2B99               	incf	___fladd@bexp& (0+255),f,b
  5837  0025E8                     l1243:
  5838                           
  5839                           ; BSR set to: 0
  5840  0025E8  0100               	movlb	0	; () banked
  5841  0025EA  5198               	movf	___fladd@aexp& (0+255),w,b
  5842  0025EC  0100               	movlb	0	; () banked
  5843  0025EE  5D99               	subwf	___fladd@bexp& (0+255),w,b
  5844  0025F0  A0D8               	btfss	status,0,c
  5845  0025F2  D7E0               	goto	l1244
  5846  0025F4                     l1242:
  5847                           
  5848                           ; BSR set to: 0
  5849  0025F4  0100               	movlb	0	; () banked
  5850  0025F6  BD97               	btfsc	___fladd@signs& (0+255),6,b
  5851  0025F8  D03F               	goto	l5868
  5852                           
  5853                           ; BSR set to: 0
  5854  0025FA  0100               	movlb	0	; () banked
  5855  0025FC  5199               	movf	___fladd@bexp& (0+255),w,b
  5856  0025FE  0100               	movlb	0	; () banked
  5857  002600  A4D8               	btfss	status,2,c
  5858  002602  D00A               	goto	l5850
  5859                           
  5860                           ; BSR set to: 0
  5861  002604  0E00               	movlw	0
  5862  002606  0100               	movlb	0	; () banked
  5863  002608  6F87               	movwf	?___fladd& (0+255),b
  5864  00260A  0E00               	movlw	0
  5865  00260C  6F88               	movwf	(?___fladd+1)& (0+255),b
  5866  00260E  0E00               	movlw	0
  5867  002610  6F89               	movwf	(?___fladd+2)& (0+255),b
  5868  002612  0E00               	movlw	0
  5869  002614  6F8A               	movwf	(?___fladd+3)& (0+255),b
  5870                           
  5871                           ; BSR set to: 0
  5872  002616  0012               	return	
  5873  002618                     l5850:
  5874                           
  5875                           ; BSR set to: 0
  5876  002618  0100               	movlb	0	; () banked
  5877  00261A  518B               	movf	___fladd@a& (0+255),w,b
  5878  00261C  0100               	movlb	0	; () banked
  5879  00261E  2787               	addwf	___fladd@b& (0+255),f,b
  5880  002620  0100               	movlb	0	; () banked
  5881  002622  518C               	movf	(___fladd@a+1)& (0+255),w,b
  5882  002624  0100               	movlb	0	; () banked
  5883  002626  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  5884  002628  0100               	movlb	0	; () banked
  5885  00262A  518D               	movf	(___fladd@a+2)& (0+255),w,b
  5886  00262C  0100               	movlb	0	; () banked
  5887  00262E  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  5888  002630  0100               	movlb	0	; () banked
  5889  002632  518E               	movf	(___fladd@a+3)& (0+255),w,b
  5890  002634  0100               	movlb	0	; () banked
  5891  002636  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  5892                           
  5893                           ; BSR set to: 0
  5894  002638  0100               	movlb	0	; () banked
  5895  00263A  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
  5896  00263C  D0CC               	goto	l5904
  5897                           
  5898                           ; BSR set to: 0
  5899  00263E  0100               	movlb	0	; () banked
  5900  002640  A19A               	btfss	___fladd@grs& (0+255),0,b
  5901  002642  D009               	goto	l5858
  5902                           
  5903                           ; BSR set to: 0
  5904  002644  0100               	movlb	0	; () banked
  5905  002646  90D8               	bcf	status,0,c
  5906  002648  339A               	rrcf	___fladd@grs& (0+255),f,b
  5907  00264A  0100               	movlb	0	; () banked
  5908  00264C  519A               	movf	___fladd@grs& (0+255),w,b
  5909  00264E  0901               	iorlw	1
  5910  002650  0100               	movlb	0	; () banked
  5911  002652  6F9A               	movwf	___fladd@grs& (0+255),b
  5912  002654  D003               	goto	l5860
  5913  002656                     l5858:
  5914                           
  5915                           ; BSR set to: 0
  5916  002656  0100               	movlb	0	; () banked
  5917  002658  90D8               	bcf	status,0,c
  5918  00265A  339A               	rrcf	___fladd@grs& (0+255),f,b
  5919  00265C                     l5860:
  5920                           
  5921                           ; BSR set to: 0
  5922  00265C  0100               	movlb	0	; () banked
  5923  00265E  A187               	btfss	___fladd@b& (0+255),0,b
  5924  002660  D002               	goto	l5864
  5925                           
  5926                           ; BSR set to: 0
  5927  002662  0100               	movlb	0	; () banked
  5928  002664  8F9A               	bsf	___fladd@grs& (0+255),7,b
  5929  002666                     l5864:
  5930                           
  5931                           ; BSR set to: 0
  5932  002666  0100               	movlb	0	; () banked
  5933  002668  358A               	rlcf	(___fladd@b+3)& (0+255),w,b
  5934  00266A  338A               	rrcf	(___fladd@b+3)& (0+255),f,b
  5935  00266C  3389               	rrcf	(___fladd@b+2)& (0+255),f,b
  5936  00266E  3388               	rrcf	(___fladd@b+1)& (0+255),f,b
  5937  002670  3387               	rrcf	___fladd@b& (0+255),f,b
  5938                           
  5939                           ; BSR set to: 0
  5940  002672  0100               	movlb	0	; () banked
  5941  002674  2B99               	incf	___fladd@bexp& (0+255),f,b
  5942                           
  5943                           ; BSR set to: 0
  5944  002676  D0AF               	goto	l5904
  5945  002678                     l5868:
  5946                           
  5947                           ; BSR set to: 0
  5948  002678  0100               	movlb	0	; () banked
  5949  00267A  518B               	movf	___fladd@a& (0+255),w,b
  5950  00267C  0100               	movlb	0	; () banked
  5951  00267E  5D87               	subwf	___fladd@b& (0+255),w,b
  5952  002680  0100               	movlb	0	; () banked
  5953  002682  518C               	movf	(___fladd@a+1)& (0+255),w,b
  5954  002684  0100               	movlb	0	; () banked
  5955  002686  5988               	subwfb	(___fladd@b+1)& (0+255),w,b
  5956  002688  0100               	movlb	0	; () banked
  5957  00268A  518D               	movf	(___fladd@a+2)& (0+255),w,b
  5958  00268C  0100               	movlb	0	; () banked
  5959  00268E  5989               	subwfb	(___fladd@b+2)& (0+255),w,b
  5960  002690  0100               	movlb	0	; () banked
  5961  002692  518A               	movf	(___fladd@b+3)& (0+255),w,b
  5962  002694  0A80               	xorlw	128
  5963  002696  0100               	movlb	0	; () banked
  5964  002698  6F8F               	movwf	??___fladd& (0+255),b
  5965  00269A  0100               	movlb	0	; () banked
  5966  00269C  518E               	movf	(___fladd@a+3)& (0+255),w,b
  5967  00269E  0A80               	xorlw	128
  5968  0026A0  0100               	movlb	0	; () banked
  5969  0026A2  598F               	subwfb	??___fladd& (0+255),w,b
  5970  0026A4  B0D8               	btfsc	status,0,c
  5971  0026A6  D050               	goto	l5878
  5972                           
  5973                           ; BSR set to: 0
  5974  0026A8  C087  F08F         	movff	___fladd@b,??___fladd
  5975  0026AC  C088  F090         	movff	___fladd@b+1,??___fladd+1
  5976  0026B0  C089  F091         	movff	___fladd@b+2,??___fladd+2
  5977  0026B4  C08A  F092         	movff	___fladd@b+3,??___fladd+3
  5978  0026B8  0100               	movlb	0	; () banked
  5979  0026BA  1F8F               	comf	??___fladd& (0+255),f,b
  5980  0026BC  1F90               	comf	(??___fladd+1)& (0+255),f,b
  5981  0026BE  1F91               	comf	(??___fladd+2)& (0+255),f,b
  5982  0026C0  1F92               	comf	(??___fladd+3)& (0+255),f,b
  5983  0026C2  2B8F               	incf	??___fladd& (0+255),f,b
  5984  0026C4  0E00               	movlw	0
  5985  0026C6  2390               	addwfc	(??___fladd+1)& (0+255),f,b
  5986  0026C8  2391               	addwfc	(??___fladd+2)& (0+255),f,b
  5987  0026CA  2392               	addwfc	(??___fladd+3)& (0+255),f,b
  5988  0026CC  0100               	movlb	0	; () banked
  5989  0026CE  518B               	movf	___fladd@a& (0+255),w,b
  5990  0026D0  0100               	movlb	0	; () banked
  5991  0026D2  258F               	addwf	??___fladd& (0+255),w,b
  5992  0026D4  0100               	movlb	0	; () banked
  5993  0026D6  6F93               	movwf	(??___fladd+4)& (0+255),b
  5994  0026D8  0100               	movlb	0	; () banked
  5995  0026DA  518C               	movf	(___fladd@a+1)& (0+255),w,b
  5996  0026DC  0100               	movlb	0	; () banked
  5997  0026DE  2190               	addwfc	(??___fladd+1)& (0+255),w,b
  5998  0026E0  0100               	movlb	0	; () banked
  5999  0026E2  6F94               	movwf	(??___fladd+5)& (0+255),b
  6000  0026E4  0100               	movlb	0	; () banked
  6001  0026E6  518D               	movf	(___fladd@a+2)& (0+255),w,b
  6002  0026E8  0100               	movlb	0	; () banked
  6003  0026EA  2191               	addwfc	(??___fladd+2)& (0+255),w,b
  6004  0026EC  0100               	movlb	0	; () banked
  6005  0026EE  6F95               	movwf	(??___fladd+6)& (0+255),b
  6006  0026F0  0100               	movlb	0	; () banked
  6007  0026F2  518E               	movf	(___fladd@a+3)& (0+255),w,b
  6008  0026F4  0100               	movlb	0	; () banked
  6009  0026F6  2192               	addwfc	(??___fladd+3)& (0+255),w,b
  6010  0026F8  0100               	movlb	0	; () banked
  6011  0026FA  6F96               	movwf	(??___fladd+7)& (0+255),b
  6012  0026FC  0EFF               	movlw	255
  6013  0026FE  0100               	movlb	0	; () banked
  6014  002700  2593               	addwf	(??___fladd+4)& (0+255),w,b
  6015  002702  0100               	movlb	0	; () banked
  6016  002704  6F87               	movwf	___fladd@b& (0+255),b
  6017  002706  0EFF               	movlw	255
  6018  002708  0100               	movlb	0	; () banked
  6019  00270A  2194               	addwfc	(??___fladd+5)& (0+255),w,b
  6020  00270C  0100               	movlb	0	; () banked
  6021  00270E  6F88               	movwf	(___fladd@b+1)& (0+255),b
  6022  002710  0EFF               	movlw	255
  6023  002712  0100               	movlb	0	; () banked
  6024  002714  2195               	addwfc	(??___fladd+6)& (0+255),w,b
  6025  002716  0100               	movlb	0	; () banked
  6026  002718  6F89               	movwf	(___fladd@b+2)& (0+255),b
  6027  00271A  0EFF               	movlw	255
  6028  00271C  0100               	movlb	0	; () banked
  6029  00271E  2196               	addwfc	(??___fladd+7)& (0+255),w,b
  6030  002720  0100               	movlb	0	; () banked
  6031  002722  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  6032  002724  0E80               	movlw	128
  6033  002726  0100               	movlb	0	; () banked
  6034  002728  1B97               	xorwf	___fladd@signs& (0+255),f,b
  6035                           
  6036                           ; BSR set to: 0
  6037  00272A  0100               	movlb	0	; () banked
  6038  00272C  6D9A               	negf	___fladd@grs& (0+255),b
  6039                           
  6040                           ; BSR set to: 0
  6041  00272E  0100               	movlb	0	; () banked
  6042  002730  519A               	movf	___fladd@grs& (0+255),w,b
  6043  002732  0100               	movlb	0	; () banked
  6044  002734  A4D8               	btfss	status,2,c
  6045  002736  D018               	goto	l1259
  6046                           
  6047                           ; BSR set to: 0
  6048  002738  0E01               	movlw	1
  6049  00273A  0100               	movlb	0	; () banked
  6050  00273C  2787               	addwf	___fladd@b& (0+255),f,b
  6051  00273E  0E00               	movlw	0
  6052  002740  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  6053  002742  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  6054  002744  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  6055                           
  6056                           ; BSR set to: 0
  6057  002746  D010               	goto	l1259
  6058  002748                     l5878:
  6059                           
  6060                           ; BSR set to: 0
  6061  002748  0100               	movlb	0	; () banked
  6062  00274A  518B               	movf	___fladd@a& (0+255),w,b
  6063  00274C  0100               	movlb	0	; () banked
  6064  00274E  5F87               	subwf	___fladd@b& (0+255),f,b
  6065  002750  0100               	movlb	0	; () banked
  6066  002752  518C               	movf	(___fladd@a+1)& (0+255),w,b
  6067  002754  0100               	movlb	0	; () banked
  6068  002756  5B88               	subwfb	(___fladd@b+1)& (0+255),f,b
  6069  002758  0100               	movlb	0	; () banked
  6070  00275A  518D               	movf	(___fladd@a+2)& (0+255),w,b
  6071  00275C  0100               	movlb	0	; () banked
  6072  00275E  5B89               	subwfb	(___fladd@b+2)& (0+255),f,b
  6073  002760  0100               	movlb	0	; () banked
  6074  002762  518E               	movf	(___fladd@a+3)& (0+255),w,b
  6075  002764  0100               	movlb	0	; () banked
  6076  002766  5B8A               	subwfb	(___fladd@b+3)& (0+255),f,b
  6077  002768                     l1259:
  6078                           
  6079                           ; BSR set to: 0
  6080  002768  0100               	movlb	0	; () banked
  6081  00276A  5187               	movf	___fladd@b& (0+255),w,b
  6082  00276C  0100               	movlb	0	; () banked
  6083  00276E  1188               	iorwf	(___fladd@b+1)& (0+255),w,b
  6084  002770  0100               	movlb	0	; () banked
  6085  002772  1189               	iorwf	(___fladd@b+2)& (0+255),w,b
  6086  002774  0100               	movlb	0	; () banked
  6087  002776  118A               	iorwf	(___fladd@b+3)& (0+255),w,b
  6088  002778  A4D8               	btfss	status,2,c
  6089  00277A  D02A               	goto	l5902
  6090                           
  6091                           ; BSR set to: 0
  6092  00277C  0100               	movlb	0	; () banked
  6093  00277E  519A               	movf	___fladd@grs& (0+255),w,b
  6094  002780  0100               	movlb	0	; () banked
  6095  002782  A4D8               	btfss	status,2,c
  6096  002784  D025               	goto	l5902
  6097                           
  6098                           ; BSR set to: 0
  6099  002786  0E00               	movlw	0
  6100  002788  0100               	movlb	0	; () banked
  6101  00278A  6F87               	movwf	?___fladd& (0+255),b
  6102  00278C  0E00               	movlw	0
  6103  00278E  6F88               	movwf	(?___fladd+1)& (0+255),b
  6104  002790  0E00               	movlw	0
  6105  002792  6F89               	movwf	(?___fladd+2)& (0+255),b
  6106  002794  0E00               	movlw	0
  6107  002796  6F8A               	movwf	(?___fladd+3)& (0+255),b
  6108                           
  6109                           ; BSR set to: 0
  6110  002798  0012               	return	
  6111  00279A                     l5886:
  6112                           
  6113                           ; BSR set to: 0
  6114  00279A  0100               	movlb	0	; () banked
  6115  00279C  90D8               	bcf	status,0,c
  6116  00279E  3787               	rlcf	___fladd@b& (0+255),f,b
  6117  0027A0  3788               	rlcf	(___fladd@b+1)& (0+255),f,b
  6118  0027A2  3789               	rlcf	(___fladd@b+2)& (0+255),f,b
  6119  0027A4  378A               	rlcf	(___fladd@b+3)& (0+255),f,b
  6120                           
  6121                           ; BSR set to: 0
  6122  0027A6  0100               	movlb	0	; () banked
  6123  0027A8  AF9A               	btfss	___fladd@grs& (0+255),7,b
  6124  0027AA  D002               	goto	l5892
  6125                           
  6126                           ; BSR set to: 0
  6127  0027AC  0100               	movlb	0	; () banked
  6128  0027AE  8187               	bsf	___fladd@b& (0+255),0,b
  6129  0027B0                     l5892:
  6130                           
  6131                           ; BSR set to: 0
  6132  0027B0  0100               	movlb	0	; () banked
  6133  0027B2  A19A               	btfss	___fladd@grs& (0+255),0,b
  6134  0027B4  D003               	goto	l5896
  6135                           
  6136                           ; BSR set to: 0
  6137  0027B6  80D8               	bsf	status,0,c
  6138  0027B8  0100               	movlb	0	; () banked
  6139  0027BA  D002               	goto	L7
  6140  0027BC                     l5896:
  6141                           
  6142                           ; BSR set to: 0
  6143  0027BC  0100               	movlb	0	; () banked
  6144  0027BE  90D8               	bcf	status,0,c
  6145  0027C0                     L7:
  6146  0027C0  379A               	rlcf	___fladd@grs& (0+255),f,b
  6147                           
  6148                           ; BSR set to: 0
  6149                           
  6150                           ; BSR set to: 0
  6151  0027C2  0100               	movlb	0	; () banked
  6152  0027C4  5199               	movf	___fladd@bexp& (0+255),w,b
  6153  0027C6  0100               	movlb	0	; () banked
  6154  0027C8  B4D8               	btfsc	status,2,c
  6155  0027CA  D002               	goto	l5902
  6156                           
  6157                           ; BSR set to: 0
  6158  0027CC  0100               	movlb	0	; () banked
  6159  0027CE  0799               	decf	___fladd@bexp& (0+255),f,b
  6160  0027D0                     l5902:
  6161                           
  6162                           ; BSR set to: 0
  6163  0027D0  0100               	movlb	0	; () banked
  6164  0027D2  AF89               	btfss	(___fladd@b+2)& (0+255),7,b
  6165  0027D4  D7E2               	goto	l5886
  6166  0027D6                     l5904:
  6167                           
  6168                           ; BSR set to: 0
  6169  0027D6  0E00               	movlw	0
  6170  0027D8  0100               	movlb	0	; () banked
  6171  0027DA  6F98               	movwf	___fladd@aexp& (0+255),b
  6172                           
  6173                           ; BSR set to: 0
  6174  0027DC  0100               	movlb	0	; () banked
  6175  0027DE  AF9A               	btfss	___fladd@grs& (0+255),7,b
  6176  0027E0  D00D               	goto	l1268
  6177                           
  6178                           ; BSR set to: 0
  6179  0027E2  C09A  F08F         	movff	___fladd@grs,??___fladd
  6180  0027E6  0E7F               	movlw	127
  6181  0027E8  0100               	movlb	0	; () banked
  6182  0027EA  178F               	andwf	??___fladd& (0+255),f,b
  6183  0027EC  A4D8               	btfss	status,2,c
  6184  0027EE  D003               	goto	l5912
  6185                           
  6186                           ; BSR set to: 0
  6187                           
  6188                           ; BSR set to: 0
  6189  0027F0  0100               	movlb	0	; () banked
  6190  0027F2  A187               	btfss	___fladd@b& (0+255),0,b
  6191  0027F4  D003               	goto	l1268
  6192  0027F6                     l5912:
  6193                           
  6194                           ; BSR set to: 0
  6195  0027F6  0E01               	movlw	1
  6196  0027F8  0100               	movlb	0	; () banked
  6197  0027FA  6F98               	movwf	___fladd@aexp& (0+255),b
  6198  0027FC                     l1268:
  6199                           
  6200                           ; BSR set to: 0
  6201  0027FC  0100               	movlb	0	; () banked
  6202  0027FE  5198               	movf	___fladd@aexp& (0+255),w,b
  6203  002800  0100               	movlb	0	; () banked
  6204  002802  B4D8               	btfsc	status,2,c
  6205  002804  D026               	goto	l5922
  6206                           
  6207                           ; BSR set to: 0
  6208  002806  0E01               	movlw	1
  6209  002808  0100               	movlb	0	; () banked
  6210  00280A  2787               	addwf	___fladd@b& (0+255),f,b
  6211  00280C  0E00               	movlw	0
  6212  00280E  2388               	addwfc	(___fladd@b+1)& (0+255),f,b
  6213  002810  2389               	addwfc	(___fladd@b+2)& (0+255),f,b
  6214  002812  238A               	addwfc	(___fladd@b+3)& (0+255),f,b
  6215                           
  6216                           ; BSR set to: 0
  6217  002814  0100               	movlb	0	; () banked
  6218  002816  A18A               	btfss	(___fladd@b+3)& (0+255),0,b
  6219  002818  D01C               	goto	l5922
  6220                           
  6221                           ; BSR set to: 0
  6222  00281A  C087  F08F         	movff	___fladd@b,??___fladd
  6223  00281E  C088  F090         	movff	___fladd@b+1,??___fladd+1
  6224  002822  C089  F091         	movff	___fladd@b+2,??___fladd+2
  6225  002826  C08A  F092         	movff	___fladd@b+3,??___fladd+3
  6226  00282A  0100               	movlb	0	; () banked
  6227  00282C  3592               	rlcf	(??___fladd+3)& (0+255),w,b
  6228  00282E  3392               	rrcf	(??___fladd+3)& (0+255),f,b
  6229  002830  3391               	rrcf	(??___fladd+2)& (0+255),f,b
  6230  002832  3390               	rrcf	(??___fladd+1)& (0+255),f,b
  6231  002834  338F               	rrcf	??___fladd& (0+255),f,b
  6232  002836  C08F  F087         	movff	??___fladd,___fladd@b
  6233  00283A  C090  F088         	movff	??___fladd+1,___fladd@b+1
  6234  00283E  C091  F089         	movff	??___fladd+2,___fladd@b+2
  6235  002842  C092  F08A         	movff	??___fladd+3,___fladd@b+3
  6236  002846  0100               	movlb	0	; () banked
  6237  002848  2999               	incf	___fladd@bexp& (0+255),w,b
  6238  00284A  B4D8               	btfsc	status,2,c
  6239  00284C  D002               	goto	l5922
  6240                           
  6241                           ; BSR set to: 0
  6242  00284E  0100               	movlb	0	; () banked
  6243  002850  2B99               	incf	___fladd@bexp& (0+255),f,b
  6244  002852                     l5922:
  6245                           
  6246                           ; BSR set to: 0
  6247  002852  0100               	movlb	0	; () banked
  6248  002854  2999               	incf	___fladd@bexp& (0+255),w,b
  6249  002856  B4D8               	btfsc	status,2,c
  6250  002858  D005               	goto	l5926
  6251                           
  6252                           ; BSR set to: 0
  6253  00285A  0100               	movlb	0	; () banked
  6254  00285C  5199               	movf	___fladd@bexp& (0+255),w,b
  6255  00285E  0100               	movlb	0	; () banked
  6256  002860  A4D8               	btfss	status,2,c
  6257  002862  D011               	goto	l5930
  6258  002864                     l5926:
  6259                           
  6260                           ; BSR set to: 0
  6261  002864  0E00               	movlw	0
  6262  002866  0100               	movlb	0	; () banked
  6263  002868  6F87               	movwf	___fladd@b& (0+255),b
  6264  00286A  0E00               	movlw	0
  6265  00286C  6F88               	movwf	(___fladd@b+1)& (0+255),b
  6266  00286E  0E00               	movlw	0
  6267  002870  6F89               	movwf	(___fladd@b+2)& (0+255),b
  6268  002872  0E00               	movlw	0
  6269  002874  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  6270  002876  0100               	movlb	0	; () banked
  6271  002878  5199               	movf	___fladd@bexp& (0+255),w,b
  6272  00287A  0100               	movlb	0	; () banked
  6273  00287C  A4D8               	btfss	status,2,c
  6274  00287E  D003               	goto	l5930
  6275                           
  6276                           ; BSR set to: 0
  6277  002880  0E00               	movlw	0
  6278  002882  0100               	movlb	0	; () banked
  6279  002884  6F97               	movwf	___fladd@signs& (0+255),b
  6280  002886                     l5930:
  6281                           
  6282                           ; BSR set to: 0
  6283  002886  0100               	movlb	0	; () banked
  6284  002888  A199               	btfss	___fladd@bexp& (0+255),0,b
  6285  00288A  D003               	goto	l5934
  6286                           
  6287                           ; BSR set to: 0
  6288  00288C  0100               	movlb	0	; () banked
  6289  00288E  8F89               	bsf	(___fladd@b+2)& (0+255),7,b
  6290  002890  D002               	goto	l5936
  6291  002892                     l5934:
  6292                           
  6293                           ; BSR set to: 0
  6294  002892  0100               	movlb	0	; () banked
  6295  002894  9F89               	bcf	(___fladd@b+2)& (0+255),7,b
  6296  002896                     l5936:
  6297                           
  6298                           ; BSR set to: 0
  6299  002896  0100               	movlb	0	; () banked
  6300  002898  90D8               	bcf	status,0,c
  6301  00289A  3199               	rrcf	___fladd@bexp& (0+255),w,b
  6302  00289C  0100               	movlb	0	; () banked
  6303  00289E  6F8A               	movwf	(___fladd@b+3)& (0+255),b
  6304                           
  6305                           ; BSR set to: 0
  6306  0028A0  0100               	movlb	0	; () banked
  6307  0028A2  AF97               	btfss	___fladd@signs& (0+255),7,b
  6308  0028A4  D002               	goto	l5942
  6309                           
  6310                           ; BSR set to: 0
  6311  0028A6  0100               	movlb	0	; () banked
  6312  0028A8  8F8A               	bsf	(___fladd@b+3)& (0+255),7,b
  6313  0028AA                     l5942:
  6314                           
  6315                           ; BSR set to: 0
  6316  0028AA  C087  F087         	movff	___fladd@b,?___fladd
  6317  0028AE  C088  F088         	movff	___fladd@b+1,?___fladd+1
  6318  0028B2  C089  F089         	movff	___fladd@b+2,?___fladd+2
  6319  0028B6  C08A  F08A         	movff	___fladd@b+3,?___fladd+3
  6320  0028BA  0012               	return	
  6321  0028BC                     __end_of___fladd:
  6322                           	opt stack 0
  6323                           tblptru	equ	0xFF8
  6324                           tblptrh	equ	0xFF7
  6325                           tblptrl	equ	0xFF6
  6326                           tablat	equ	0xFF5
  6327                           prodh	equ	0xFF4
  6328                           prodl	equ	0xFF3
  6329                           postinc0	equ	0xFEE
  6330                           wreg	equ	0xFE8
  6331                           postdec1	equ	0xFE5
  6332                           fsr1l	equ	0xFE1
  6333                           postinc2	equ	0xFDE
  6334                           postdec2	equ	0xFDD
  6335                           fsr2h	equ	0xFDA
  6336                           fsr2l	equ	0xFD9
  6337                           status	equ	0xFD8
  6338                           
  6339 ;; *************** function ___flneg *****************
  6340 ;; Defined at:
  6341 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  f1              4   30[COMRAM] unsigned char 
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;		None
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  4   30[COMRAM] unsigned char 
  6348 ;; Registers used:
  6349 ;;		wreg, status,2, status,0
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6355 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6358 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6359 ;;Total ram usage:        4 bytes
  6360 ;; Hardware stack levels used:    1
  6361 ;; Hardware stack levels required when called:    2
  6362 ;; This function calls:
  6363 ;;		Nothing
  6364 ;; This function is called by:
  6365 ;;		_pow
  6366 ;;		_exp
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           	psect	text16
  6371  004FC0                     __ptext16:
  6372                           	opt stack 0
  6373  004FC0                     ___flneg:
  6374                           	opt stack 25
  6375                           
  6376                           ; BSR set to: 0
  6377                           ;incstack = 0
  6378  004FC0  501F               	movf	___flneg@f1,w,c
  6379  004FC2  1020               	iorwf	___flneg@f1+1,w,c
  6380  004FC4  1021               	iorwf	___flneg@f1+2,w,c
  6381  004FC6  1022               	iorwf	___flneg@f1+3,w,c
  6382  004FC8  B4D8               	btfsc	status,2,c
  6383  004FCA  D008               	goto	l6350
  6384  004FCC  0E00               	movlw	0
  6385  004FCE  1A1F               	xorwf	___flneg@f1,f,c
  6386  004FD0  0E00               	movlw	0
  6387  004FD2  1A20               	xorwf	___flneg@f1+1,f,c
  6388  004FD4  0E00               	movlw	0
  6389  004FD6  1A21               	xorwf	___flneg@f1+2,f,c
  6390  004FD8  0E80               	movlw	128
  6391  004FDA  1A22               	xorwf	___flneg@f1+3,f,c
  6392  004FDC                     l6350:
  6393  004FDC  C01F  F01F         	movff	___flneg@f1,?___flneg
  6394  004FE0  C020  F020         	movff	___flneg@f1+1,?___flneg+1
  6395  004FE4  C021  F021         	movff	___flneg@f1+2,?___flneg+2
  6396  004FE8  C022  F022         	movff	___flneg@f1+3,?___flneg+3
  6397  004FEC  0012               	return	
  6398  004FEE                     __end_of___flneg:
  6399                           	opt stack 0
  6400                           tblptru	equ	0xFF8
  6401                           tblptrh	equ	0xFF7
  6402                           tblptrl	equ	0xFF6
  6403                           tablat	equ	0xFF5
  6404                           prodh	equ	0xFF4
  6405                           prodl	equ	0xFF3
  6406                           postinc0	equ	0xFEE
  6407                           wreg	equ	0xFE8
  6408                           postdec1	equ	0xFE5
  6409                           fsr1l	equ	0xFE1
  6410                           postinc2	equ	0xFDE
  6411                           postdec2	equ	0xFDD
  6412                           fsr2h	equ	0xFDA
  6413                           fsr2l	equ	0xFD9
  6414                           status	equ	0xFD8
  6415                           
  6416 ;; *************** function ___fldiv *****************
  6417 ;; Defined at:
  6418 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;  b               4    0[BANK0 ] unsigned char 
  6421 ;;  a               4    4[BANK0 ] unsigned char 
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;  grs             4   15[BANK0 ] unsigned long 
  6424 ;;  rem             4    9[BANK0 ] unsigned long 
  6425 ;;  new_exp         2   13[BANK0 ] int 
  6426 ;;  aexp            1   20[BANK0 ] unsigned char 
  6427 ;;  bexp            1   19[BANK0 ] unsigned char 
  6428 ;;  sign            1    8[BANK0 ] unsigned char 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  4    0[BANK0 ] unsigned char 
  6431 ;; Registers used:
  6432 ;;		wreg, status,2, status,0
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6438 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6439 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6440 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6441 ;;      Totals:         4      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6442 ;;Total ram usage:       25 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; Hardware stack levels required when called:    2
  6445 ;; This function calls:
  6446 ;;		Nothing
  6447 ;; This function is called by:
  6448 ;;		_exp
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           	psect	text17
  6453  003154                     __ptext17:
  6454                           	opt stack 0
  6455  003154                     ___fldiv:
  6456                           	opt stack 25
  6457                           
  6458                           ;incstack = 0
  6459  003154  0100               	movlb	0	; () banked
  6460  003156  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6461  003158  0B80               	andlw	128
  6462  00315A  0100               	movlb	0	; () banked
  6463  00315C  6F68               	movwf	___fldiv@sign& (0+255),b
  6464  00315E  0100               	movlb	0	; () banked
  6465  003160  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6466  003162  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  6467  003164  0100               	movlb	0	; () banked
  6468  003166  6F73               	movwf	___fldiv@bexp& (0+255),b
  6469                           
  6470                           ; BSR set to: 0
  6471  003168  0100               	movlb	0	; () banked
  6472  00316A  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  6473  00316C  D002               	goto	l6210
  6474                           
  6475                           ; BSR set to: 0
  6476  00316E  0100               	movlb	0	; () banked
  6477  003170  8173               	bsf	___fldiv@bexp& (0+255),0,b
  6478  003172                     l6210:
  6479                           
  6480                           ; BSR set to: 0
  6481  003172  0100               	movlb	0	; () banked
  6482  003174  5173               	movf	___fldiv@bexp& (0+255),w,b
  6483  003176  0100               	movlb	0	; () banked
  6484  003178  B4D8               	btfsc	status,2,c
  6485  00317A  D012               	goto	l6220
  6486                           
  6487                           ; BSR set to: 0
  6488  00317C  0100               	movlb	0	; () banked
  6489  00317E  2973               	incf	___fldiv@bexp& (0+255),w,b
  6490  003180  A4D8               	btfss	status,2,c
  6491  003182  D009               	goto	l6216
  6492                           
  6493                           ; BSR set to: 0
  6494  003184  0E00               	movlw	0
  6495  003186  0100               	movlb	0	; () banked
  6496  003188  6F60               	movwf	___fldiv@b& (0+255),b
  6497  00318A  0E00               	movlw	0
  6498  00318C  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6499  00318E  0E00               	movlw	0
  6500  003190  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6501  003192  0E00               	movlw	0
  6502  003194  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6503  003196                     l6216:
  6504                           
  6505                           ; BSR set to: 0
  6506  003196  0100               	movlb	0	; () banked
  6507  003198  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6508                           
  6509                           ; BSR set to: 0
  6510  00319A  0E00               	movlw	0
  6511  00319C  0100               	movlb	0	; () banked
  6512  00319E  D008               	goto	L8
  6513  0031A0                     l6220:
  6514                           
  6515                           ; BSR set to: 0
  6516  0031A0  0E00               	movlw	0
  6517  0031A2  0100               	movlb	0	; () banked
  6518  0031A4  6F60               	movwf	___fldiv@b& (0+255),b
  6519  0031A6  0E00               	movlw	0
  6520  0031A8  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6521  0031AA  0E00               	movlw	0
  6522  0031AC  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6523  0031AE  0E00               	movlw	0
  6524  0031B0                     L8:
  6525  0031B0  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6526                           
  6527                           ; BSR set to: 0
  6528                           
  6529                           ; BSR set to: 0
  6530  0031B2  0100               	movlb	0	; () banked
  6531  0031B4  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6532  0031B6  0B80               	andlw	128
  6533  0031B8  0100               	movlb	0	; () banked
  6534  0031BA  1B68               	xorwf	___fldiv@sign& (0+255),f,b
  6535                           
  6536                           ; BSR set to: 0
  6537  0031BC  0100               	movlb	0	; () banked
  6538  0031BE  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6539  0031C0  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  6540  0031C2  0100               	movlb	0	; () banked
  6541  0031C4  6F74               	movwf	___fldiv@aexp& (0+255),b
  6542                           
  6543                           ; BSR set to: 0
  6544  0031C6  0100               	movlb	0	; () banked
  6545  0031C8  AF66               	btfss	(___fldiv@a+2)& (0+255),7,b
  6546  0031CA  D002               	goto	l6230
  6547                           
  6548                           ; BSR set to: 0
  6549  0031CC  0100               	movlb	0	; () banked
  6550  0031CE  8174               	bsf	___fldiv@aexp& (0+255),0,b
  6551  0031D0                     l6230:
  6552                           
  6553                           ; BSR set to: 0
  6554  0031D0  0100               	movlb	0	; () banked
  6555  0031D2  5174               	movf	___fldiv@aexp& (0+255),w,b
  6556  0031D4  0100               	movlb	0	; () banked
  6557  0031D6  B4D8               	btfsc	status,2,c
  6558  0031D8  D012               	goto	l6240
  6559                           
  6560                           ; BSR set to: 0
  6561  0031DA  0100               	movlb	0	; () banked
  6562  0031DC  2974               	incf	___fldiv@aexp& (0+255),w,b
  6563  0031DE  A4D8               	btfss	status,2,c
  6564  0031E0  D009               	goto	l6236
  6565                           
  6566                           ; BSR set to: 0
  6567  0031E2  0E00               	movlw	0
  6568  0031E4  0100               	movlb	0	; () banked
  6569  0031E6  6F64               	movwf	___fldiv@a& (0+255),b
  6570  0031E8  0E00               	movlw	0
  6571  0031EA  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6572  0031EC  0E00               	movlw	0
  6573  0031EE  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6574  0031F0  0E00               	movlw	0
  6575  0031F2  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6576  0031F4                     l6236:
  6577                           
  6578                           ; BSR set to: 0
  6579  0031F4  0100               	movlb	0	; () banked
  6580  0031F6  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  6581                           
  6582                           ; BSR set to: 0
  6583  0031F8  0E00               	movlw	0
  6584  0031FA  0100               	movlb	0	; () banked
  6585  0031FC  D008               	goto	L9
  6586  0031FE                     l6240:
  6587                           
  6588                           ; BSR set to: 0
  6589  0031FE  0E00               	movlw	0
  6590  003200  0100               	movlb	0	; () banked
  6591  003202  6F64               	movwf	___fldiv@a& (0+255),b
  6592  003204  0E00               	movlw	0
  6593  003206  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6594  003208  0E00               	movlw	0
  6595  00320A  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6596  00320C  0E00               	movlw	0
  6597  00320E                     L9:
  6598  00320E  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6599                           
  6600                           ; BSR set to: 0
  6601                           
  6602                           ; BSR set to: 0
  6603  003210  0100               	movlb	0	; () banked
  6604  003212  5164               	movf	___fldiv@a& (0+255),w,b
  6605  003214  0100               	movlb	0	; () banked
  6606  003216  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  6607  003218  0100               	movlb	0	; () banked
  6608  00321A  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  6609  00321C  0100               	movlb	0	; () banked
  6610  00321E  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  6611  003220  A4D8               	btfss	status,2,c
  6612  003222  D017               	goto	l6252
  6613                           
  6614                           ; BSR set to: 0
  6615  003224  0E00               	movlw	0
  6616  003226  0100               	movlb	0	; () banked
  6617  003228  6F60               	movwf	___fldiv@b& (0+255),b
  6618  00322A  0E00               	movlw	0
  6619  00322C  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6620  00322E  0E00               	movlw	0
  6621  003230  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6622  003232  0E00               	movlw	0
  6623  003234  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6624                           
  6625                           ; BSR set to: 0
  6626  003236  0100               	movlb	0	; () banked
  6627  003238  0E80               	movlw	128
  6628  00323A  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  6629  00323C  0E7F               	movlw	127
  6630  00323E  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6631                           
  6632                           ; BSR set to: 0
  6633  003240  C060  F060         	movff	___fldiv@b,?___fldiv
  6634  003244  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  6635  003248  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  6636  00324C  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  6637                           
  6638                           ; BSR set to: 0
  6639  003250  0012               	return	
  6640  003252                     l6252:
  6641                           
  6642                           ; BSR set to: 0
  6643  003252  0100               	movlb	0	; () banked
  6644  003254  5173               	movf	___fldiv@bexp& (0+255),w,b
  6645  003256  0100               	movlb	0	; () banked
  6646  003258  A4D8               	btfss	status,2,c
  6647  00325A  D012               	goto	l6260
  6648                           
  6649                           ; BSR set to: 0
  6650  00325C  0E00               	movlw	0
  6651  00325E  0100               	movlb	0	; () banked
  6652  003260  6F60               	movwf	___fldiv@b& (0+255),b
  6653  003262  0E00               	movlw	0
  6654  003264  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6655  003266  0E00               	movlw	0
  6656  003268  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6657  00326A  0E00               	movlw	0
  6658  00326C  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6659                           
  6660                           ; BSR set to: 0
  6661  00326E  C060  F060         	movff	___fldiv@b,?___fldiv
  6662  003272  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  6663  003276  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  6664  00327A  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  6665                           
  6666                           ; BSR set to: 0
  6667  00327E  0012               	return	
  6668  003280                     l6260:
  6669                           
  6670                           ; BSR set to: 0
  6671  003280  0100               	movlb	0	; () banked
  6672  003282  5174               	movf	___fldiv@aexp& (0+255),w,b
  6673  003284  6E1F               	movwf	??___fldiv& (0+255),c
  6674  003286  6A20               	clrf	(??___fldiv+1)& (0+255),c
  6675  003288  1E1F               	comf	??___fldiv,f,c
  6676  00328A  1E20               	comf	??___fldiv+1,f,c
  6677  00328C  4A1F               	infsnz	??___fldiv,f,c
  6678  00328E  2A20               	incf	??___fldiv+1,f,c
  6679  003290  0100               	movlb	0	; () banked
  6680  003292  5173               	movf	___fldiv@bexp& (0+255),w,b
  6681  003294  6E21               	movwf	(??___fldiv+2)& (0+255),c
  6682  003296  6A22               	clrf	(??___fldiv+3)& (0+255),c
  6683  003298  501F               	movf	??___fldiv,w,c
  6684  00329A  2621               	addwf	??___fldiv+2,f,c
  6685  00329C  5020               	movf	??___fldiv+1,w,c
  6686  00329E  2222               	addwfc	??___fldiv+3,f,c
  6687  0032A0  0E7F               	movlw	127
  6688  0032A2  2421               	addwf	??___fldiv+2,w,c
  6689  0032A4  0100               	movlb	0	; () banked
  6690  0032A6  6F6D               	movwf	___fldiv@new_exp& (0+255),b
  6691  0032A8  0E00               	movlw	0
  6692  0032AA  2022               	addwfc	??___fldiv+3,w,c
  6693  0032AC  0100               	movlb	0	; () banked
  6694  0032AE  6F6E               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6695                           
  6696                           ; BSR set to: 0
  6697  0032B0  C060  F069         	movff	___fldiv@b,___fldiv@rem
  6698  0032B4  C061  F06A         	movff	___fldiv@b+1,___fldiv@rem+1
  6699  0032B8  C062  F06B         	movff	___fldiv@b+2,___fldiv@rem+2
  6700  0032BC  C063  F06C         	movff	___fldiv@b+3,___fldiv@rem+3
  6701                           
  6702                           ; BSR set to: 0
  6703  0032C0  0E00               	movlw	0
  6704  0032C2  0100               	movlb	0	; () banked
  6705  0032C4  6F60               	movwf	___fldiv@b& (0+255),b
  6706  0032C6  0E00               	movlw	0
  6707  0032C8  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6708  0032CA  0E00               	movlw	0
  6709  0032CC  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6710  0032CE  0E00               	movlw	0
  6711  0032D0  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6712                           
  6713                           ; BSR set to: 0
  6714  0032D2  0E00               	movlw	0
  6715  0032D4  0100               	movlb	0	; () banked
  6716  0032D6  6F6F               	movwf	___fldiv@grs& (0+255),b
  6717  0032D8  0E00               	movlw	0
  6718  0032DA  6F70               	movwf	(___fldiv@grs+1)& (0+255),b
  6719  0032DC  0E00               	movlw	0
  6720  0032DE  6F71               	movwf	(___fldiv@grs+2)& (0+255),b
  6721  0032E0  0E00               	movlw	0
  6722  0032E2  6F72               	movwf	(___fldiv@grs+3)& (0+255),b
  6723                           
  6724                           ; BSR set to: 0
  6725  0032E4  0E00               	movlw	0
  6726  0032E6  0100               	movlb	0	; () banked
  6727  0032E8  6F74               	movwf	___fldiv@aexp& (0+255),b
  6728  0032EA  D042               	goto	l1298
  6729  0032EC                     l6270:
  6730                           
  6731                           ; BSR set to: 0
  6732  0032EC  0100               	movlb	0	; () banked
  6733  0032EE  5174               	movf	___fldiv@aexp& (0+255),w,b
  6734  0032F0  0100               	movlb	0	; () banked
  6735  0032F2  B4D8               	btfsc	status,2,c
  6736  0032F4  D017               	goto	l6278
  6737                           
  6738                           ; BSR set to: 0
  6739  0032F6  0100               	movlb	0	; () banked
  6740  0032F8  90D8               	bcf	status,0,c
  6741  0032FA  3769               	rlcf	___fldiv@rem& (0+255),f,b
  6742  0032FC  376A               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  6743  0032FE  376B               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  6744  003300  376C               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  6745  003302  0100               	movlb	0	; () banked
  6746  003304  90D8               	bcf	status,0,c
  6747  003306  3760               	rlcf	___fldiv@b& (0+255),f,b
  6748  003308  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6749  00330A  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6750  00330C  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6751                           
  6752                           ; BSR set to: 0
  6753  00330E  0100               	movlb	0	; () banked
  6754  003310  AF72               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6755  003312  D002               	goto	l1301
  6756                           
  6757                           ; BSR set to: 0
  6758  003314  0100               	movlb	0	; () banked
  6759  003316  8160               	bsf	___fldiv@b& (0+255),0,b
  6760  003318                     l1301:
  6761                           
  6762                           ; BSR set to: 0
  6763  003318  0100               	movlb	0	; () banked
  6764  00331A  90D8               	bcf	status,0,c
  6765  00331C  376F               	rlcf	___fldiv@grs& (0+255),f,b
  6766  00331E  3770               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6767  003320  3771               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6768  003322  3772               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6769  003324                     l6278:
  6770                           
  6771                           ; BSR set to: 0
  6772  003324  0100               	movlb	0	; () banked
  6773  003326  5164               	movf	___fldiv@a& (0+255),w,b
  6774  003328  0100               	movlb	0	; () banked
  6775  00332A  5D69               	subwf	___fldiv@rem& (0+255),w,b
  6776  00332C  0100               	movlb	0	; () banked
  6777  00332E  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6778  003330  0100               	movlb	0	; () banked
  6779  003332  596A               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  6780  003334  0100               	movlb	0	; () banked
  6781  003336  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6782  003338  0100               	movlb	0	; () banked
  6783  00333A  596B               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  6784  00333C  0100               	movlb	0	; () banked
  6785  00333E  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6786  003340  0100               	movlb	0	; () banked
  6787  003342  596C               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  6788  003344  A0D8               	btfss	status,0,c
  6789  003346  D012               	goto	l6284
  6790                           
  6791                           ; BSR set to: 0
  6792  003348  0100               	movlb	0	; () banked
  6793  00334A  8D72               	bsf	(___fldiv@grs+3)& (0+255),6,b
  6794                           
  6795                           ; BSR set to: 0
  6796  00334C  0100               	movlb	0	; () banked
  6797  00334E  5164               	movf	___fldiv@a& (0+255),w,b
  6798  003350  0100               	movlb	0	; () banked
  6799  003352  5F69               	subwf	___fldiv@rem& (0+255),f,b
  6800  003354  0100               	movlb	0	; () banked
  6801  003356  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6802  003358  0100               	movlb	0	; () banked
  6803  00335A  5B6A               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  6804  00335C  0100               	movlb	0	; () banked
  6805  00335E  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6806  003360  0100               	movlb	0	; () banked
  6807  003362  5B6B               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  6808  003364  0100               	movlb	0	; () banked
  6809  003366  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6810  003368  0100               	movlb	0	; () banked
  6811  00336A  5B6C               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  6812  00336C                     l6284:
  6813                           
  6814                           ; BSR set to: 0
  6815  00336C  0100               	movlb	0	; () banked
  6816  00336E  2B74               	incf	___fldiv@aexp& (0+255),f,b
  6817  003370                     l1298:
  6818                           
  6819                           ; BSR set to: 0
  6820  003370  0E19               	movlw	25
  6821  003372  0100               	movlb	0	; () banked
  6822  003374  6574               	cpfsgt	___fldiv@aexp& (0+255),b
  6823  003376  D7BA               	goto	l6270
  6824                           
  6825                           ; BSR set to: 0
  6826                           
  6827                           ; BSR set to: 0
  6828  003378  0100               	movlb	0	; () banked
  6829  00337A  5169               	movf	___fldiv@rem& (0+255),w,b
  6830  00337C  0100               	movlb	0	; () banked
  6831  00337E  116A               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  6832  003380  0100               	movlb	0	; () banked
  6833  003382  116B               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  6834  003384  0100               	movlb	0	; () banked
  6835  003386  116C               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  6836  003388  B4D8               	btfsc	status,2,c
  6837  00338A  D018               	goto	l6296
  6838                           
  6839                           ; BSR set to: 0
  6840  00338C  0100               	movlb	0	; () banked
  6841  00338E  816F               	bsf	___fldiv@grs& (0+255),0,b
  6842                           
  6843                           ; BSR set to: 0
  6844  003390  D015               	goto	l6296
  6845  003392                     l6290:
  6846                           
  6847                           ; BSR set to: 0
  6848  003392  0100               	movlb	0	; () banked
  6849  003394  90D8               	bcf	status,0,c
  6850  003396  3760               	rlcf	___fldiv@b& (0+255),f,b
  6851  003398  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6852  00339A  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6853  00339C  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6854                           
  6855                           ; BSR set to: 0
  6856  00339E  0100               	movlb	0	; () banked
  6857  0033A0  AF72               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6858  0033A2  D002               	goto	l1307
  6859                           
  6860                           ; BSR set to: 0
  6861  0033A4  0100               	movlb	0	; () banked
  6862  0033A6  8160               	bsf	___fldiv@b& (0+255),0,b
  6863  0033A8                     l1307:
  6864                           
  6865                           ; BSR set to: 0
  6866  0033A8  0100               	movlb	0	; () banked
  6867  0033AA  90D8               	bcf	status,0,c
  6868  0033AC  376F               	rlcf	___fldiv@grs& (0+255),f,b
  6869  0033AE  3770               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6870  0033B0  3771               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6871  0033B2  3772               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6872  0033B4  0100               	movlb	0	; () banked
  6873  0033B6  076D               	decf	___fldiv@new_exp& (0+255),f,b
  6874  0033B8  A0D8               	btfss	status,0,c
  6875  0033BA  076E               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  6876  0033BC                     l6296:
  6877                           
  6878                           ; BSR set to: 0
  6879  0033BC  0100               	movlb	0	; () banked
  6880  0033BE  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  6881  0033C0  D7E8               	goto	l6290
  6882                           
  6883                           ; BSR set to: 0
  6884                           
  6885                           ; BSR set to: 0
  6886  0033C2  0E00               	movlw	0
  6887  0033C4  0100               	movlb	0	; () banked
  6888  0033C6  6F74               	movwf	___fldiv@aexp& (0+255),b
  6889                           
  6890                           ; BSR set to: 0
  6891  0033C8  0100               	movlb	0	; () banked
  6892  0033CA  AF72               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6893  0033CC  D01C               	goto	l1309
  6894                           
  6895                           ; BSR set to: 0
  6896  0033CE  0EFF               	movlw	255
  6897  0033D0  0100               	movlb	0	; () banked
  6898  0033D2  156F               	andwf	___fldiv@grs& (0+255),w,b
  6899  0033D4  6E1F               	movwf	??___fldiv& (0+255),c
  6900  0033D6  0EFF               	movlw	255
  6901  0033D8  0100               	movlb	0	; () banked
  6902  0033DA  1570               	andwf	(___fldiv@grs+1)& (0+255),w,b
  6903  0033DC  6E20               	movwf	(??___fldiv+1)& (0+255),c
  6904  0033DE  0EFF               	movlw	255
  6905  0033E0  0100               	movlb	0	; () banked
  6906  0033E2  1571               	andwf	(___fldiv@grs+2)& (0+255),w,b
  6907  0033E4  6E21               	movwf	(??___fldiv+2)& (0+255),c
  6908  0033E6  0E7F               	movlw	127
  6909  0033E8  0100               	movlb	0	; () banked
  6910  0033EA  1572               	andwf	(___fldiv@grs+3)& (0+255),w,b
  6911  0033EC  6E22               	movwf	(??___fldiv+3)& (0+255),c
  6912  0033EE  501F               	movf	??___fldiv,w,c
  6913  0033F0  1020               	iorwf	??___fldiv+1,w,c
  6914  0033F2  1021               	iorwf	??___fldiv+2,w,c
  6915  0033F4  1022               	iorwf	??___fldiv+3,w,c
  6916  0033F6  A4D8               	btfss	status,2,c
  6917  0033F8  D003               	goto	l6306
  6918                           
  6919                           ; BSR set to: 0
  6920                           
  6921                           ; BSR set to: 0
  6922  0033FA  0100               	movlb	0	; () banked
  6923  0033FC  A160               	btfss	___fldiv@b& (0+255),0,b
  6924  0033FE  D003               	goto	l1309
  6925  003400                     l6306:
  6926                           
  6927                           ; BSR set to: 0
  6928  003400  0E01               	movlw	1
  6929  003402  0100               	movlb	0	; () banked
  6930  003404  6F74               	movwf	___fldiv@aexp& (0+255),b
  6931  003406                     l1309:
  6932                           
  6933                           ; BSR set to: 0
  6934  003406  0100               	movlb	0	; () banked
  6935  003408  5174               	movf	___fldiv@aexp& (0+255),w,b
  6936  00340A  0100               	movlb	0	; () banked
  6937  00340C  B4D8               	btfsc	status,2,c
  6938  00340E  D022               	goto	l6316
  6939                           
  6940                           ; BSR set to: 0
  6941  003410  0E01               	movlw	1
  6942  003412  0100               	movlb	0	; () banked
  6943  003414  2760               	addwf	___fldiv@b& (0+255),f,b
  6944  003416  0E00               	movlw	0
  6945  003418  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  6946  00341A  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  6947  00341C  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  6948                           
  6949                           ; BSR set to: 0
  6950  00341E  0100               	movlb	0	; () banked
  6951  003420  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  6952  003422  D018               	goto	l6316
  6953                           
  6954                           ; BSR set to: 0
  6955  003424  C060  F01F         	movff	___fldiv@b,??___fldiv
  6956  003428  C061  F020         	movff	___fldiv@b+1,??___fldiv+1
  6957  00342C  C062  F021         	movff	___fldiv@b+2,??___fldiv+2
  6958  003430  C063  F022         	movff	___fldiv@b+3,??___fldiv+3
  6959  003434  3422               	rlcf	??___fldiv+3,w,c
  6960  003436  3222               	rrcf	??___fldiv+3,f,c
  6961  003438  3221               	rrcf	??___fldiv+2,f,c
  6962  00343A  3220               	rrcf	??___fldiv+1,f,c
  6963  00343C  321F               	rrcf	??___fldiv,f,c
  6964  00343E  C01F  F060         	movff	??___fldiv,___fldiv@b
  6965  003442  C020  F061         	movff	??___fldiv+1,___fldiv@b+1
  6966  003446  C021  F062         	movff	??___fldiv+2,___fldiv@b+2
  6967  00344A  C022  F063         	movff	??___fldiv+3,___fldiv@b+3
  6968                           
  6969                           ; BSR set to: 0
  6970  00344E  0100               	movlb	0	; () banked
  6971  003450  4B6D               	infsnz	___fldiv@new_exp& (0+255),f,b
  6972  003452  2B6E               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  6973  003454                     l6316:
  6974                           
  6975                           ; BSR set to: 0
  6976  003454  0100               	movlb	0	; () banked
  6977  003456  BF6E               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  6978  003458  D014               	goto	l6320
  6979  00345A  0100               	movlb	0	; () banked
  6980  00345C  516E               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  6981  00345E  E104               	bnz	u8350
  6982  003460  0100               	movlb	0	; () banked
  6983  003462  296D               	incf	___fldiv@new_exp& (0+255),w,b
  6984  003464  A0D8               	btfss	status,0,c
  6985  003466  D00D               	goto	l6320
  6986  003468                     u8350:
  6987                           
  6988                           ; BSR set to: 0
  6989  003468  0E00               	movlw	0
  6990  00346A  0100               	movlb	0	; () banked
  6991  00346C  6F6E               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6992  00346E  696D               	setf	___fldiv@new_exp& (0+255),b
  6993  003470  0E00               	movlw	0
  6994  003472  0100               	movlb	0	; () banked
  6995  003474  6F60               	movwf	___fldiv@b& (0+255),b
  6996  003476  0E00               	movlw	0
  6997  003478  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6998  00347A  0E00               	movlw	0
  6999  00347C  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7000  00347E  0E00               	movlw	0
  7001  003480  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7002  003482                     l6320:
  7003                           
  7004                           ; BSR set to: 0
  7005  003482  0100               	movlb	0	; () banked
  7006  003484  BF6E               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7007  003486  D007               	goto	l6322
  7008  003488  0100               	movlb	0	; () banked
  7009  00348A  516E               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7010  00348C  E115               	bnz	l6324
  7011  00348E  0100               	movlb	0	; () banked
  7012  003490  056D               	decf	___fldiv@new_exp& (0+255),w,b
  7013  003492  B0D8               	btfsc	status,0,c
  7014  003494  D011               	goto	l6324
  7015  003496                     l6322:
  7016                           
  7017                           ; BSR set to: 0
  7018  003496  0E00               	movlw	0
  7019  003498  0100               	movlb	0	; () banked
  7020  00349A  6F6E               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7021  00349C  0E00               	movlw	0
  7022  00349E  6F6D               	movwf	___fldiv@new_exp& (0+255),b
  7023  0034A0  0E00               	movlw	0
  7024  0034A2  0100               	movlb	0	; () banked
  7025  0034A4  6F60               	movwf	___fldiv@b& (0+255),b
  7026  0034A6  0E00               	movlw	0
  7027  0034A8  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7028  0034AA  0E00               	movlw	0
  7029  0034AC  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7030  0034AE  0E00               	movlw	0
  7031  0034B0  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7032  0034B2  0E00               	movlw	0
  7033  0034B4  0100               	movlb	0	; () banked
  7034  0034B6  6F68               	movwf	___fldiv@sign& (0+255),b
  7035  0034B8                     l6324:
  7036                           
  7037                           ; BSR set to: 0
  7038  0034B8  C06D  F073         	movff	___fldiv@new_exp,___fldiv@bexp
  7039                           
  7040                           ; BSR set to: 0
  7041  0034BC  0100               	movlb	0	; () banked
  7042  0034BE  A173               	btfss	___fldiv@bexp& (0+255),0,b
  7043  0034C0  D003               	goto	l6330
  7044                           
  7045                           ; BSR set to: 0
  7046  0034C2  0100               	movlb	0	; () banked
  7047  0034C4  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  7048  0034C6  D002               	goto	l6332
  7049  0034C8                     l6330:
  7050                           
  7051                           ; BSR set to: 0
  7052  0034C8  0100               	movlb	0	; () banked
  7053  0034CA  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  7054  0034CC                     l6332:
  7055                           
  7056                           ; BSR set to: 0
  7057  0034CC  0100               	movlb	0	; () banked
  7058  0034CE  90D8               	bcf	status,0,c
  7059  0034D0  3173               	rrcf	___fldiv@bexp& (0+255),w,b
  7060  0034D2  0100               	movlb	0	; () banked
  7061  0034D4  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7062                           
  7063                           ; BSR set to: 0
  7064  0034D6  0100               	movlb	0	; () banked
  7065  0034D8  5168               	movf	___fldiv@sign& (0+255),w,b
  7066  0034DA  0100               	movlb	0	; () banked
  7067  0034DC  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7068                           
  7069                           ; BSR set to: 0
  7070  0034DE  C060  F060         	movff	___fldiv@b,?___fldiv
  7071  0034E2  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  7072  0034E6  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  7073  0034EA  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  7074  0034EE  0012               	return	
  7075  0034F0                     __end_of___fldiv:
  7076                           	opt stack 0
  7077                           tblptru	equ	0xFF8
  7078                           tblptrh	equ	0xFF7
  7079                           tblptrl	equ	0xFF6
  7080                           tablat	equ	0xFF5
  7081                           prodh	equ	0xFF4
  7082                           prodl	equ	0xFF3
  7083                           postinc0	equ	0xFEE
  7084                           wreg	equ	0xFE8
  7085                           postdec1	equ	0xFE5
  7086                           fsr1l	equ	0xFE1
  7087                           postinc2	equ	0xFDE
  7088                           postdec2	equ	0xFDD
  7089                           fsr2h	equ	0xFDA
  7090                           fsr2l	equ	0xFD9
  7091                           status	equ	0xFD8
  7092                           
  7093 ;; *************** function _abs *****************
  7094 ;; Defined at:
  7095 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  a               2   30[COMRAM] int 
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;		None
  7100 ;; Return value:  Size  Location     Type
  7101 ;;                  2   30[COMRAM] int 
  7102 ;; Registers used:
  7103 ;;		wreg, status,2, status,0
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7111 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7112 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7113 ;;Total ram usage:        4 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; Hardware stack levels required when called:    2
  7116 ;; This function calls:
  7117 ;;		Nothing
  7118 ;; This function is called by:
  7119 ;;		_rampe
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           	psect	text18
  7124  004FEE                     __ptext18:
  7125                           	opt stack 0
  7126  004FEE                     _abs:
  7127                           	opt stack 27
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;incstack = 0
  7131  004FEE  AE20               	btfss	abs@a+1,7,c
  7132  004FF0  D00D               	goto	l833
  7133  004FF2  C01F  F021         	movff	abs@a,??_abs
  7134  004FF6  C020  F022         	movff	abs@a+1,??_abs+1
  7135  004FFA  1E21               	comf	??_abs,f,c
  7136  004FFC  1E22               	comf	??_abs+1,f,c
  7137  004FFE  4A21               	infsnz	??_abs,f,c
  7138  005000  2A22               	incf	??_abs+1,f,c
  7139  005002  C021  F01F         	movff	??_abs,?_abs
  7140  005006  C022  F020         	movff	??_abs+1,?_abs+1
  7141  00500A  0012               	return	
  7142  00500C                     l833:
  7143  00500C  C01F  F01F         	movff	abs@a,?_abs
  7144  005010  C020  F020         	movff	abs@a+1,?_abs+1
  7145  005014  0012               	return		;funcret
  7146  005016                     __end_of_abs:
  7147                           	opt stack 0
  7148                           tblptru	equ	0xFF8
  7149                           tblptrh	equ	0xFF7
  7150                           tblptrl	equ	0xFF6
  7151                           tablat	equ	0xFF5
  7152                           prodh	equ	0xFF4
  7153                           prodl	equ	0xFF3
  7154                           postinc0	equ	0xFEE
  7155                           wreg	equ	0xFE8
  7156                           postdec1	equ	0xFE5
  7157                           fsr1l	equ	0xFE1
  7158                           postinc2	equ	0xFDE
  7159                           postdec2	equ	0xFDD
  7160                           fsr2h	equ	0xFDA
  7161                           fsr2l	equ	0xFD9
  7162                           status	equ	0xFD8
  7163                           
  7164 ;; *************** function ___lwdiv *****************
  7165 ;; Defined at:
  7166 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  7167 ;; Parameters:    Size  Location     Type
  7168 ;;  dividend        2   30[COMRAM] unsigned int 
  7169 ;;  divisor         2   32[COMRAM] unsigned int 
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;  quotient        2   35[COMRAM] unsigned int 
  7172 ;;  counter         1   34[COMRAM] unsigned char 
  7173 ;; Return value:  Size  Location     Type
  7174 ;;                  2   30[COMRAM] unsigned int 
  7175 ;; Registers used:
  7176 ;;		wreg, status,2, status,0
  7177 ;; Tracked objects:
  7178 ;;		On entry : 0/0
  7179 ;;		On exit  : 0/0
  7180 ;;		Unchanged: 0/0
  7181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7182 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7183 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7185 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7186 ;;Total ram usage:        7 bytes
  7187 ;; Hardware stack levels used:    1
  7188 ;; Hardware stack levels required when called:    2
  7189 ;; This function calls:
  7190 ;;		Nothing
  7191 ;; This function is called by:
  7192 ;;		_rampe
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           	psect	text19
  7197  004E28                     __ptext19:
  7198                           	opt stack 0
  7199  004E28                     ___lwdiv:
  7200                           	opt stack 27
  7201                           
  7202                           ;incstack = 0
  7203  004E28  0E00               	movlw	0
  7204  004E2A  6E25               	movwf	___lwdiv@quotient+1,c
  7205  004E2C  0E00               	movlw	0
  7206  004E2E  6E24               	movwf	___lwdiv@quotient,c
  7207  004E30  5021               	movf	___lwdiv@divisor,w,c
  7208  004E32  1022               	iorwf	___lwdiv@divisor+1,w,c
  7209  004E34  B4D8               	btfsc	status,2,c
  7210  004E36  D01C               	goto	l1190
  7211  004E38  0E01               	movlw	1
  7212  004E3A  6E23               	movwf	___lwdiv@counter,c
  7213  004E3C  D004               	goto	l7318
  7214  004E3E                     l7316:
  7215  004E3E  90D8               	bcf	status,0,c
  7216  004E40  3621               	rlcf	___lwdiv@divisor,f,c
  7217  004E42  3622               	rlcf	___lwdiv@divisor+1,f,c
  7218  004E44  2A23               	incf	___lwdiv@counter,f,c
  7219  004E46                     l7318:
  7220  004E46  AE22               	btfss	___lwdiv@divisor+1,7,c
  7221  004E48  D7FA               	goto	l7316
  7222  004E4A                     l7320:
  7223  004E4A  90D8               	bcf	status,0,c
  7224  004E4C  3624               	rlcf	___lwdiv@quotient,f,c
  7225  004E4E  3625               	rlcf	___lwdiv@quotient+1,f,c
  7226  004E50  5021               	movf	___lwdiv@divisor,w,c
  7227  004E52  5C1F               	subwf	___lwdiv@dividend,w,c
  7228  004E54  5022               	movf	___lwdiv@divisor+1,w,c
  7229  004E56  5820               	subwfb	___lwdiv@dividend+1,w,c
  7230  004E58  A0D8               	btfss	status,0,c
  7231  004E5A  D005               	goto	l7328
  7232  004E5C  5021               	movf	___lwdiv@divisor,w,c
  7233  004E5E  5E1F               	subwf	___lwdiv@dividend,f,c
  7234  004E60  5022               	movf	___lwdiv@divisor+1,w,c
  7235  004E62  5A20               	subwfb	___lwdiv@dividend+1,f,c
  7236  004E64  8024               	bsf	___lwdiv@quotient,0,c
  7237  004E66                     l7328:
  7238  004E66  90D8               	bcf	status,0,c
  7239  004E68  3222               	rrcf	___lwdiv@divisor+1,f,c
  7240  004E6A  3221               	rrcf	___lwdiv@divisor,f,c
  7241  004E6C  2E23               	decfsz	___lwdiv@counter,f,c
  7242  004E6E  D7ED               	goto	l7320
  7243  004E70                     l1190:
  7244  004E70  C024  F01F         	movff	___lwdiv@quotient,?___lwdiv
  7245  004E74  C025  F020         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7246  004E78  0012               	return		;funcret
  7247  004E7A                     __end_of___lwdiv:
  7248                           	opt stack 0
  7249                           tblptru	equ	0xFF8
  7250                           tblptrh	equ	0xFF7
  7251                           tblptrl	equ	0xFF6
  7252                           tablat	equ	0xFF5
  7253                           prodh	equ	0xFF4
  7254                           prodl	equ	0xFF3
  7255                           postinc0	equ	0xFEE
  7256                           wreg	equ	0xFE8
  7257                           postdec1	equ	0xFE5
  7258                           fsr1l	equ	0xFE1
  7259                           postinc2	equ	0xFDE
  7260                           postdec2	equ	0xFDD
  7261                           fsr2h	equ	0xFDA
  7262                           fsr2l	equ	0xFD9
  7263                           status	equ	0xFD8
  7264                           
  7265 ;; *************** function _SetDCEPWM1 *****************
  7266 ;; Defined at:
  7267 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;  dutycycle       2   30[COMRAM] unsigned int 
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;  DCycle          2   34[COMRAM] struct PWMDC
  7272 ;; Return value:  Size  Location     Type
  7273 ;;		None               void
  7274 ;; Registers used:
  7275 ;;		wreg, status,2, status,0
  7276 ;; Tracked objects:
  7277 ;;		On entry : 0/0
  7278 ;;		On exit  : 0/0
  7279 ;;		Unchanged: 0/0
  7280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7281 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7282 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7283 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7284 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7285 ;;Total ram usage:        6 bytes
  7286 ;; Hardware stack levels used:    1
  7287 ;; Hardware stack levels required when called:    2
  7288 ;; This function calls:
  7289 ;;		Nothing
  7290 ;; This function is called by:
  7291 ;;		_main
  7292 ;;		_rampe
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           	psect	text20
  7297  004F54                     __ptext20:
  7298                           	opt stack 0
  7299  004F54                     _SetDCEPWM1:
  7300                           	opt stack 27
  7301                           
  7302                           ;incstack = 0
  7303  004F54  C01F  F021         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  7304  004F58  C020  F022         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  7305  004F5C  0E06               	movlw	6
  7306  004F5E                     u10075:
  7307  004F5E  90D8               	bcf	status,0,c
  7308  004F60  3621               	rlcf	??_SetDCEPWM1,f,c
  7309  004F62  3622               	rlcf	??_SetDCEPWM1+1,f,c
  7310  004F64  2EE8               	decfsz	wreg,f,c
  7311  004F66  D7FB               	goto	u10075
  7312  004F68  C021  F023         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  7313  004F6C  C022  F024         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  7314  004F70  C024  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  7315  004F74  C023  F021         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  7316  004F78  90D8               	bcf	status,0,c
  7317  004F7A  3221               	rrcf	??_SetDCEPWM1,f,c
  7318  004F7C  90D8               	bcf	status,0,c
  7319  004F7E  3221               	rrcf	??_SetDCEPWM1,f,c
  7320  004F80  0E30               	movlw	48
  7321  004F82  1621               	andwf	??_SetDCEPWM1,f,c
  7322  004F84  50BA               	movf	4026,w,c	;volatile
  7323  004F86  0BCF               	andlw	207
  7324  004F88  1021               	iorwf	??_SetDCEPWM1,w,c
  7325  004F8A  6EBA               	movwf	4026,c	;volatile
  7326  004F8C  0012               	return		;funcret
  7327  004F8E                     __end_of_SetDCEPWM1:
  7328                           	opt stack 0
  7329                           tblptru	equ	0xFF8
  7330                           tblptrh	equ	0xFF7
  7331                           tblptrl	equ	0xFF6
  7332                           tablat	equ	0xFF5
  7333                           prodh	equ	0xFF4
  7334                           prodl	equ	0xFF3
  7335                           postinc0	equ	0xFEE
  7336                           wreg	equ	0xFE8
  7337                           postdec1	equ	0xFE5
  7338                           fsr1l	equ	0xFE1
  7339                           postinc2	equ	0xFDE
  7340                           postdec2	equ	0xFDD
  7341                           fsr2h	equ	0xFDA
  7342                           fsr2l	equ	0xFD9
  7343                           status	equ	0xFD8
  7344                           
  7345 ;; *************** function _configurazione_iniziale *****************
  7346 ;; Defined at:
  7347 ;;		line 301 in file "motore.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;		None
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;		None
  7352 ;; Return value:  Size  Location     Type
  7353 ;;		None               void
  7354 ;; Registers used:
  7355 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7365 ;;Total ram usage:        0 bytes
  7366 ;; Hardware stack levels used:    1
  7367 ;; Hardware stack levels required when called:    4
  7368 ;; This function calls:
  7369 ;;		_CANInitialize
  7370 ;;		_SetOutputEPWM1
  7371 ;;		_delay_ms
  7372 ;; This function is called by:
  7373 ;;		_main
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           	psect	text21
  7378  004BE6                     __ptext21:
  7379                           	opt stack 0
  7380  004BE6                     _configurazione_iniziale:
  7381                           	opt stack 26
  7382                           
  7383                           ;motore.c: 304: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  7384                           
  7385                           ;incstack = 0
  7386  004BE6  0E06               	movlw	6
  7387  004BE8  0100               	movlb	0	; () banked
  7388  004BEA  6F69               	movwf	CANInitialize@phaseSeg1& (0+255),b
  7389  004BEC  0E05               	movlw	5
  7390  004BEE  0100               	movlb	0	; () banked
  7391  004BF0  6F6A               	movwf	CANInitialize@phaseSeg2& (0+255),b
  7392  004BF2  0E01               	movlw	1
  7393  004BF4  0100               	movlb	0	; () banked
  7394  004BF6  6F6B               	movwf	CANInitialize@SJW& (0+255),b
  7395  004BF8  0E03               	movlw	3
  7396  004BFA  0100               	movlb	0	; () banked
  7397  004BFC  6F6C               	movwf	CANInitialize@BRP& (0+255),b
  7398  004BFE  0E9D               	movlw	157
  7399  004C00  0100               	movlb	0	; () banked
  7400  004C02  6F6D               	movwf	CANInitialize@flags& (0+255),b
  7401  004C04  0E04               	movlw	4
  7402  004C06  ECA4  F020         	call	_CANInitialize
  7403                           
  7404                           ;motore.c: 305: RCONbits.IPEN = 1;
  7405  004C0A  8ED0               	bsf	4048,7,c	;volatile
  7406                           
  7407                           ;motore.c: 306: INTCONbits.INT0IF = 0;
  7408  004C0C  92F2               	bcf	intcon,1,c	;volatile
  7409                           
  7410                           ;motore.c: 307: PIR3bits.RXB1IF = 0;
  7411  004C0E  92A4               	bcf	4004,1,c	;volatile
  7412                           
  7413                           ;motore.c: 308: PIR3bits.RXB0IF = 0;
  7414  004C10  90A4               	bcf	4004,0,c	;volatile
  7415                           
  7416                           ;motore.c: 310: IPR3bits.RXB1IP = 0;
  7417  004C12  92A5               	bcf	4005,1,c	;volatile
  7418                           
  7419                           ;motore.c: 311: IPR3bits.RXB0IP = 0;
  7420  004C14  90A5               	bcf	4005,0,c	;volatile
  7421                           
  7422                           ;motore.c: 312: INTCONbits.GIEH = 1;
  7423  004C16  8EF2               	bsf	intcon,7,c	;volatile
  7424                           
  7425                           ;motore.c: 313: INTCONbits.GIEL = 1;
  7426  004C18  8CF2               	bsf	intcon,6,c	;volatile
  7427                           
  7428                           ;motore.c: 316: T3CON = 0x01;
  7429  004C1A  0E01               	movlw	1
  7430  004C1C  6EB1               	movwf	4017,c	;volatile
  7431                           
  7432                           ;motore.c: 317: PIR2bits.TMR3IF = 0;
  7433  004C1E  92A1               	bcf	4001,1,c	;volatile
  7434                           
  7435                           ;motore.c: 318: IPR2bits.TMR3IP = 0;
  7436  004C20  92A2               	bcf	4002,1,c	;volatile
  7437                           
  7438                           ;motore.c: 319: TMR3H = 0x63;
  7439  004C22  0E63               	movlw	99
  7440  004C24  6EB3               	movwf	4019,c	;volatile
  7441                           
  7442                           ;motore.c: 320: TMR3L = 0xC0;
  7443  004C26  0EC0               	movlw	192
  7444  004C28  6EB2               	movwf	4018,c	;volatile
  7445                           
  7446                           ;motore.c: 325: ADCON0bits.ADON = 1;
  7447  004C2A  80C2               	bsf	4034,0,c	;volatile
  7448                           
  7449                           ;motore.c: 326: ADCON0bits.CHS0 = 0;
  7450  004C2C  94C2               	bcf	4034,2,c	;volatile
  7451                           
  7452                           ;motore.c: 327: ADCON0bits.CHS1 = 0;
  7453  004C2E  96C2               	bcf	4034,3,c	;volatile
  7454                           
  7455                           ;motore.c: 328: ADCON0bits.CHS2 = 0;
  7456  004C30  98C2               	bcf	4034,4,c	;volatile
  7457                           
  7458                           ;motore.c: 329: ADCON0bits.CHS3 = 0;
  7459  004C32  9AC2               	bcf	4034,5,c	;volatile
  7460                           
  7461                           ;motore.c: 330: ADCON1bits.PCFG0 = 0;
  7462  004C34  90C1               	bcf	4033,0,c	;volatile
  7463                           
  7464                           ;motore.c: 331: ADCON1bits.PCFG1 = 1;
  7465  004C36  82C1               	bsf	4033,1,c	;volatile
  7466                           
  7467                           ;motore.c: 332: ADCON1bits.PCFG2 = 1;
  7468  004C38  84C1               	bsf	4033,2,c	;volatile
  7469                           
  7470                           ;motore.c: 333: ADCON1bits.PCFG3 = 1;
  7471  004C3A  86C1               	bsf	4033,3,c	;volatile
  7472                           
  7473                           ;motore.c: 334: ADCON1bits.VCFG0 = 0;
  7474  004C3C  98C1               	bcf	4033,4,c	;volatile
  7475                           
  7476                           ;motore.c: 335: ADCON1bits.VCFG1 = 0;
  7477  004C3E  9AC1               	bcf	4033,5,c	;volatile
  7478                           
  7479                           ;motore.c: 336: ADCON2bits.ADCS0 = 1;
  7480  004C40  80C0               	bsf	4032,0,c	;volatile
  7481                           
  7482                           ;motore.c: 337: ADCON2bits.ADCS1 = 0;
  7483  004C42  92C0               	bcf	4032,1,c	;volatile
  7484                           
  7485                           ;motore.c: 338: ADCON2bits.ADCS2 = 1;
  7486  004C44  84C0               	bsf	4032,2,c	;volatile
  7487                           
  7488                           ;motore.c: 339: ADCON2bits.ACQT0 = 0;
  7489  004C46  96C0               	bcf	4032,3,c	;volatile
  7490                           
  7491                           ;motore.c: 340: ADCON2bits.ACQT1 = 1;
  7492  004C48  88C0               	bsf	4032,4,c	;volatile
  7493                           
  7494                           ;motore.c: 341: ADCON2bits.ACQT2 = 1;
  7495  004C4A  8AC0               	bsf	4032,5,c	;volatile
  7496                           
  7497                           ;motore.c: 342: ADCON2bits.ADFM = 0;
  7498  004C4C  9EC0               	bcf	4032,7,c	;volatile
  7499                           
  7500                           ;motore.c: 345: PIE3bits.RXB1IE = 1;
  7501  004C4E  82A3               	bsf	4003,1,c	;volatile
  7502                           
  7503                           ;motore.c: 346: PIE3bits.RXB0IE = 1;
  7504  004C50  80A3               	bsf	4003,0,c	;volatile
  7505                           
  7506                           ;motore.c: 347: PIE2bits.TMR3IE = 1;
  7507  004C52  82A0               	bsf	4000,1,c	;volatile
  7508                           
  7509                           ;motore.c: 349: LATA = 0x00;
  7510  004C54  0E00               	movlw	0
  7511  004C56  6E89               	movwf	3977,c	;volatile
  7512                           
  7513                           ;motore.c: 350: TRISA = 0b01111101;
  7514  004C58  0E7D               	movlw	125
  7515  004C5A  6E92               	movwf	3986,c	;volatile
  7516                           
  7517                           ;motore.c: 352: LATB = 0x00;
  7518  004C5C  0E00               	movlw	0
  7519  004C5E  6E8A               	movwf	3978,c	;volatile
  7520                           
  7521                           ;motore.c: 353: TRISB = 0b11111011;
  7522  004C60  0EFB               	movlw	251
  7523  004C62  6E93               	movwf	3987,c	;volatile
  7524                           
  7525                           ;motore.c: 355: LATC = 0x00;
  7526  004C64  0E00               	movlw	0
  7527  004C66  6E8B               	movwf	3979,c	;volatile
  7528                           
  7529                           ;motore.c: 356: TRISC = 0x00;
  7530  004C68  0E00               	movlw	0
  7531  004C6A  6E94               	movwf	3988,c	;volatile
  7532                           
  7533                           ;motore.c: 358: LATD = 0x00;
  7534  004C6C  0E00               	movlw	0
  7535  004C6E  6E8C               	movwf	3980,c	;volatile
  7536                           
  7537                           ;motore.c: 359: TRISD = 0x00;
  7538  004C70  0E00               	movlw	0
  7539  004C72  6E95               	movwf	3989,c	;volatile
  7540                           
  7541                           ;motore.c: 361: LATE = 0x00;
  7542  004C74  0E00               	movlw	0
  7543  004C76  6E8D               	movwf	3981,c	;volatile
  7544                           
  7545                           ;motore.c: 362: TRISE = 0xFF;
  7546  004C78  6896               	setf	3990,c	;volatile
  7547                           
  7548                           ;motore.c: 363: delay_ms(2);
  7549  004C7A  0E00               	movlw	0
  7550  004C7C  0100               	movlb	0	; () banked
  7551  004C7E  6F61               	movwf	(delay_ms@value_ms+1)& (0+255),b
  7552  004C80  0E02               	movlw	2
  7553  004C82  6F60               	movwf	delay_ms@value_ms& (0+255),b
  7554  004C84  ECC7  F027         	call	_delay_ms	;wreg free
  7555                           
  7556                           ;motore.c: 364: SetOutputEPWM1(0b01111111, 0b11111100);
  7557  004C88  0EFC               	movlw	252
  7558  004C8A  6E1F               	movwf	SetOutputEPWM1@outputmode,c
  7559  004C8C  0E7F               	movlw	127
  7560  004C8E  EC88  F027         	call	_SetOutputEPWM1
  7561  004C92  0012               	return		;funcret
  7562  004C94                     __end_of_configurazione_iniziale:
  7563                           	opt stack 0
  7564                           tblptru	equ	0xFF8
  7565                           tblptrh	equ	0xFF7
  7566                           tblptrl	equ	0xFF6
  7567                           tablat	equ	0xFF5
  7568                           prodh	equ	0xFF4
  7569                           prodl	equ	0xFF3
  7570                           intcon	equ	0xFF2
  7571                           postinc0	equ	0xFEE
  7572                           wreg	equ	0xFE8
  7573                           postdec1	equ	0xFE5
  7574                           fsr1l	equ	0xFE1
  7575                           postinc2	equ	0xFDE
  7576                           postdec2	equ	0xFDD
  7577                           fsr2h	equ	0xFDA
  7578                           fsr2l	equ	0xFD9
  7579                           status	equ	0xFD8
  7580                           
  7581 ;; *************** function _delay_ms *****************
  7582 ;; Defined at:
  7583 ;;		line 61 in file "delay.c"
  7584 ;; Parameters:    Size  Location     Type
  7585 ;;  value_ms        2    0[BANK0 ] unsigned int 
  7586 ;; Auto vars:     Size  Location     Type
  7587 ;;		None
  7588 ;; Return value:  Size  Location     Type
  7589 ;;		None               void
  7590 ;; Registers used:
  7591 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7592 ;; Tracked objects:
  7593 ;;		On entry : 0/0
  7594 ;;		On exit  : 0/0
  7595 ;;		Unchanged: 0/0
  7596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7597 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7600 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7601 ;;Total ram usage:        2 bytes
  7602 ;; Hardware stack levels used:    1
  7603 ;; Hardware stack levels required when called:    3
  7604 ;; This function calls:
  7605 ;;		___wmul
  7606 ;; This function is called by:
  7607 ;;		_main
  7608 ;;		_configurazione_iniziale
  7609 ;;		_delay_s
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613                           	psect	text22
  7614  004F8E                     __ptext22:
  7615                           	opt stack 0
  7616  004F8E                     _delay_ms:
  7617                           	opt stack 27
  7618                           
  7619                           ;delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  7620                           
  7621                           ;incstack = 0
  7622  004F8E  C040  F01F         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  7623  004F92  6A20               	clrf	___wmul@multiplier+1,c
  7624  004F94  C060  F021         	movff	delay_ms@value_ms,___wmul@multiplicand
  7625  004F98  C061  F022         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  7626  004F9C  EC0B  F028         	call	___wmul	;wreg free
  7627  004FA0  C01F  F036         	movff	?___wmul,_clock_counter_reference	;volatile
  7628  004FA4  C020  F037         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  7629                           
  7630                           ;delay.c: 75: while (clock_counter_reference) {
  7631  004FA8  D006               	goto	l575
  7632  004FAA                     l7202:
  7633                           
  7634                           ;delay.c: 85: _delay(240);
  7635  004FAA  0E50               	movlw	80
  7636  004FAC                     u10647:
  7637  004FAC  2EE8               	decfsz	wreg,f,c
  7638  004FAE  D7FE               	goto	u10647
  7639                           
  7640                           ;delay.c: 88: clock_counter_reference--;
  7641  004FB0  0636               	decf	_clock_counter_reference,f,c	;volatile
  7642  004FB2  A0D8               	btfss	status,0,c
  7643  004FB4  0637               	decf	_clock_counter_reference+1,f,c	;volatile
  7644  004FB6                     l575:
  7645  004FB6  5036               	movf	_clock_counter_reference,w,c	;volatile
  7646  004FB8  1037               	iorwf	_clock_counter_reference+1,w,c	;volatile
  7647  004FBA  B4D8               	btfsc	status,2,c
  7648  004FBC  0012               	return	
  7649  004FBE  D7F5               	goto	l7202
  7650  004FC0                     __end_of_delay_ms:
  7651                           	opt stack 0
  7652                           tblptru	equ	0xFF8
  7653                           tblptrh	equ	0xFF7
  7654                           tblptrl	equ	0xFF6
  7655                           tablat	equ	0xFF5
  7656                           prodh	equ	0xFF4
  7657                           prodl	equ	0xFF3
  7658                           intcon	equ	0xFF2
  7659                           postinc0	equ	0xFEE
  7660                           wreg	equ	0xFE8
  7661                           postdec1	equ	0xFE5
  7662                           fsr1l	equ	0xFE1
  7663                           postinc2	equ	0xFDE
  7664                           postdec2	equ	0xFDD
  7665                           fsr2h	equ	0xFDA
  7666                           fsr2l	equ	0xFD9
  7667                           status	equ	0xFD8
  7668                           
  7669 ;; *************** function _SetOutputEPWM1 *****************
  7670 ;; Defined at:
  7671 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;  outputconfig    1    wreg     unsigned char 
  7674 ;;  outputmode      1   30[COMRAM] unsigned char 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;  outputconfig    1   31[COMRAM] unsigned char 
  7677 ;; Return value:  Size  Location     Type
  7678 ;;		None               void
  7679 ;; Registers used:
  7680 ;;		wreg, status,2, status,0
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7686 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7689 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7690 ;;Total ram usage:        2 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; Hardware stack levels required when called:    2
  7693 ;; This function calls:
  7694 ;;		Nothing
  7695 ;; This function is called by:
  7696 ;;		_main
  7697 ;;		_rampe
  7698 ;;		_configurazione_iniziale
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           	psect	text23
  7703  004F10                     __ptext23:
  7704                           	opt stack 0
  7705  004F10                     _SetOutputEPWM1:
  7706                           	opt stack 27
  7707                           
  7708                           ;incstack = 0
  7709                           ;SetOutputEPWM1@outputconfig stored from wreg
  7710  004F10  6E20               	movwf	SetOutputEPWM1@outputconfig,c
  7711  004F12  50BA               	movf	4026,w,c	;volatile
  7712  004F14  09C0               	iorlw	192
  7713  004F16  1420               	andwf	SetOutputEPWM1@outputconfig,w,c
  7714  004F18  6EBA               	movwf	4026,c	;volatile
  7715  004F1A  50BA               	movf	4026,w,c	;volatile
  7716  004F1C  090F               	iorlw	15
  7717  004F1E  141F               	andwf	SetOutputEPWM1@outputmode,w,c
  7718  004F20  6EBA               	movwf	4026,c	;volatile
  7719  004F22  0E3F               	movlw	63
  7720  004F24  1820               	xorwf	SetOutputEPWM1@outputconfig,w,c
  7721  004F26  A4D8               	btfss	status,2,c
  7722  004F28  D002               	goto	l7210
  7723  004F2A  9895               	bcf	3989,4,c	;volatile
  7724  004F2C  0012               	return	
  7725  004F2E                     l7210:
  7726  004F2E  0EBF               	movlw	191
  7727  004F30  1820               	xorwf	SetOutputEPWM1@outputconfig,w,c
  7728  004F32  A4D8               	btfss	status,2,c
  7729  004F34  D003               	goto	l7214
  7730  004F36  9895               	bcf	3989,4,c	;volatile
  7731  004F38  9A95               	bcf	3989,5,c	;volatile
  7732  004F3A  0012               	return	
  7733  004F3C                     l7214:
  7734  004F3C  0E7F               	movlw	127
  7735  004F3E  1820               	xorwf	SetOutputEPWM1@outputconfig,w,c
  7736  004F40  B4D8               	btfsc	status,2,c
  7737  004F42  D003               	goto	l767
  7738  004F44  2820               	incf	SetOutputEPWM1@outputconfig,w,c
  7739  004F46  A4D8               	btfss	status,2,c
  7740  004F48  0012               	return	
  7741  004F4A                     l767:
  7742  004F4A  9895               	bcf	3989,4,c	;volatile
  7743  004F4C  9A95               	bcf	3989,5,c	;volatile
  7744  004F4E  9C95               	bcf	3989,6,c	;volatile
  7745  004F50  9E95               	bcf	3989,7,c	;volatile
  7746  004F52  0012               	return	
  7747  004F54                     __end_of_SetOutputEPWM1:
  7748                           	opt stack 0
  7749                           tblptru	equ	0xFF8
  7750                           tblptrh	equ	0xFF7
  7751                           tblptrl	equ	0xFF6
  7752                           tablat	equ	0xFF5
  7753                           prodh	equ	0xFF4
  7754                           prodl	equ	0xFF3
  7755                           intcon	equ	0xFF2
  7756                           postinc0	equ	0xFEE
  7757                           wreg	equ	0xFE8
  7758                           postdec1	equ	0xFE5
  7759                           fsr1l	equ	0xFE1
  7760                           postinc2	equ	0xFDE
  7761                           postdec2	equ	0xFDD
  7762                           fsr2h	equ	0xFDA
  7763                           fsr2l	equ	0xFD9
  7764                           status	equ	0xFD8
  7765                           
  7766 ;; *************** function _CANInitialize *****************
  7767 ;; Defined at:
  7768 ;;		line 218 in file "CANlib.h"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;  propSeg         1    wreg     unsigned char 
  7771 ;;  phaseSeg1       1    9[BANK0 ] unsigned char 
  7772 ;;  phaseSeg2       1   10[BANK0 ] unsigned char 
  7773 ;;  SJW             1   11[BANK0 ] unsigned char 
  7774 ;;  BRP             1   12[BANK0 ] unsigned char 
  7775 ;;  flags           1   13[BANK0 ] enum E16887
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;  propSeg         1   18[BANK0 ] unsigned char 
  7778 ;;  FilterConfig    1   20[BANK0 ] unsigned char 
  7779 ;;  FilterConfig    1   19[BANK0 ] unsigned char 
  7780 ;; Return value:  Size  Location     Type
  7781 ;;		None               void
  7782 ;; Registers used:
  7783 ;;		wreg, status,2, status,0, cstack
  7784 ;; Tracked objects:
  7785 ;;		On entry : 0/0
  7786 ;;		On exit  : 0/0
  7787 ;;		Unchanged: 0/0
  7788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7789 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7790 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7791 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7792 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7793 ;;Total ram usage:       12 bytes
  7794 ;; Hardware stack levels used:    1
  7795 ;; Hardware stack levels required when called:    3
  7796 ;; This function calls:
  7797 ;;		_CANOperationMode
  7798 ;;		_CANSetFilter
  7799 ;;		_CANSetMask
  7800 ;; This function is called by:
  7801 ;;		_configurazione_iniziale
  7802 ;; This function uses a non-reentrant model
  7803 ;;
  7804                           
  7805                           	psect	text24
  7806  004148                     __ptext24:
  7807                           	opt stack 0
  7808  004148                     _CANInitialize:
  7809                           	opt stack 26
  7810                           
  7811                           ;incstack = 0
  7812                           ;CANInitialize@propSeg stored from wreg
  7813  004148  0100               	movlb	0	; () banked
  7814  00414A  6F72               	movwf	CANInitialize@propSeg& (0+255),b
  7815                           
  7816                           ;CANlib.h: 220: BYTE FilterConfig1;
  7817                           ;CANlib.h: 221: BYTE FilterConfig2;
  7818                           ;CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  7819  00414C  0E80               	movlw	128
  7820  00414E  EC46  F028         	call	_CANOperationMode
  7821                           
  7822                           ;CANlib.h: 225: BRGCON1 = 0x00;
  7823  004152  0E00               	movlw	0
  7824  004154  6E70               	movwf	3952,c	;volatile
  7825                           
  7826                           ;CANlib.h: 226: BRGCON2 = 0x00;
  7827  004156  0E00               	movlw	0
  7828  004158  6E71               	movwf	3953,c	;volatile
  7829                           
  7830                           ;CANlib.h: 227: BRGCON3 = 0x00;
  7831  00415A  0E00               	movlw	0
  7832  00415C  6E72               	movwf	3954,c	;volatile
  7833                           
  7834                           ;CANlib.h: 229: SJW= SJW << 6;
  7835  00415E  0100               	movlb	0	; () banked
  7836  004160  416B               	rrncf	CANInitialize@SJW& (0+255),w,b
  7837  004162  42E8               	rrncf	wreg,f,c
  7838  004164  0BC0               	andlw	192
  7839  004166  0100               	movlb	0	; () banked
  7840  004168  6F6B               	movwf	CANInitialize@SJW& (0+255),b
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;CANlib.h: 230: BRGCON1 |= SJW;
  7844  00416A  0100               	movlb	0	; () banked
  7845  00416C  516B               	movf	CANInitialize@SJW& (0+255),w,b
  7846  00416E  1270               	iorwf	3952,f,c	;volatile
  7847                           
  7848                           ; BSR set to: 0
  7849                           ;CANlib.h: 231: BRGCON1 |= BRP;
  7850  004170  0100               	movlb	0	; () banked
  7851  004172  516C               	movf	CANInitialize@BRP& (0+255),w,b
  7852  004174  1270               	iorwf	3952,f,c	;volatile
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;CANlib.h: 233: BRGCON2 |= propSeg;
  7856  004176  0100               	movlb	0	; () banked
  7857  004178  5172               	movf	CANInitialize@propSeg& (0+255),w,b
  7858  00417A  1271               	iorwf	3953,f,c	;volatile
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  7862  00417C  0100               	movlb	0	; () banked
  7863  00417E  3969               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  7864  004180  42E8               	rrncf	wreg,f,c
  7865  004182  0BF8               	andlw	248
  7866  004184  0100               	movlb	0	; () banked
  7867  004186  6F69               	movwf	CANInitialize@phaseSeg1& (0+255),b
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;CANlib.h: 235: BRGCON2 |= phaseSeg1;
  7871  004188  0100               	movlb	0	; () banked
  7872  00418A  5169               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  7873  00418C  1271               	iorwf	3953,f,c	;volatile
  7874                           
  7875                           ; BSR set to: 0
  7876                           ;CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  7877  00418E  0100               	movlb	0	; () banked
  7878  004190  A56D               	btfss	CANInitialize@flags& (0+255),2,b
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;CANlib.h: 238: BRGCON2bits.SAM= 1;
  7882  004192  8C71               	bsf	3953,6,c	;volatile
  7883                           
  7884                           ; BSR set to: 0
  7885                           ;CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  7886  004194  0100               	movlb	0	; () banked
  7887  004196  B16D               	btfsc	CANInitialize@flags& (0+255),0,b
  7888                           
  7889                           ; BSR set to: 0
  7890                           ;CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  7891  004198  8E71               	bsf	3953,7,c	;volatile
  7892                           
  7893                           ; BSR set to: 0
  7894                           ;CANlib.h: 243: BRGCON3 |= phaseSeg2;
  7895                           
  7896                           ; BSR set to: 0
  7897  00419A  0100               	movlb	0	; () banked
  7898  00419C  516A               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  7899  00419E  1272               	iorwf	3954,f,c	;volatile
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  7903  0041A0  0100               	movlb	0	; () banked
  7904  0041A2  B36D               	btfsc	CANInitialize@flags& (0+255),1,b
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  7908  0041A4  8C72               	bsf	3954,6,c	;volatile
  7909                           
  7910                           ; BSR set to: 0
  7911                           ;CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  7912                           
  7913                           ; BSR set to: 0
  7914  0041A6  0100               	movlb	0	; () banked
  7915  0041A8  516D               	movf	CANInitialize@flags& (0+255),w,b
  7916  0041AA  0B60               	andlw	96
  7917  0041AC  6E60               	movwf	3936,c	;volatile
  7918                           
  7919                           ;CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON )
  7920  0041AE  0100               	movlb	0	; () banked
  7921  0041B0  516D               	movf	CANInitialize@flags& (0+255),w,b
  7922  0041B2  0B10               	andlw	16
  7923  0041B4  0AFF               	xorlw	255
  7924  0041B6  B4D8               	btfsc	status,2,c
  7925                           
  7926                           ; BSR set to: 0
  7927                           ;CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  7928  0041B8  8460               	bsf	3936,2,c	;volatile
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;CANlib.h: 255: RXB1CON = RXB0CON;
  7932  0041BA  CF60 FF50          	movff	3936,3920	;volatile
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  7936  0041BE  0E00               	movlw	0
  7937  0041C0  6E1F               	movwf	CANSetMask@mask,c
  7938  0041C2  0E00               	movlw	0
  7939  0041C4  6E20               	movwf	CANSetMask@mask+1,c
  7940  0041C6  0E00               	movlw	0
  7941  0041C8  6E21               	movwf	CANSetMask@mask+2,c
  7942  0041CA  0E00               	movlw	0
  7943  0041CC  6E22               	movwf	CANSetMask@mask+3,c
  7944  0041CE  0EF7               	movlw	247
  7945  0041D0  6E23               	movwf	CANSetMask@type,c
  7946  0041D2  0E01               	movlw	1
  7947  0041D4  EC78  F01A         	call	_CANSetMask
  7948                           
  7949                           ;CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  7950  0041D8  0E00               	movlw	0
  7951  0041DA  6E1F               	movwf	CANSetMask@mask,c
  7952  0041DC  0E00               	movlw	0
  7953  0041DE  6E20               	movwf	CANSetMask@mask+1,c
  7954  0041E0  0E00               	movlw	0
  7955  0041E2  6E21               	movwf	CANSetMask@mask+2,c
  7956  0041E4  0E00               	movlw	0
  7957  0041E6  6E22               	movwf	CANSetMask@mask+3,c
  7958  0041E8  0EF7               	movlw	247
  7959  0041EA  6E23               	movwf	CANSetMask@type,c
  7960  0041EC  0E02               	movlw	2
  7961  0041EE  EC78  F01A         	call	_CANSetMask
  7962                           
  7963                           ;CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  7964  0041F2  D00F               	goto	l6950
  7965  0041F4                     l6944:
  7966                           
  7967                           ;CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  7968  0041F4  0EF7               	movlw	247
  7969  0041F6  0100               	movlb	0	; () banked
  7970  0041F8  6F73               	movwf	CANInitialize@FilterConfig1& (0+255),b
  7971  0041FA  D007               	goto	l6946
  7972  0041FC                     l364:
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  7976  0041FC  0100               	movlb	0	; () banked
  7977  0041FE  6973               	setf	CANInitialize@FilterConfig1& (0+255),b
  7978                           
  7979                           ;CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  7980  004200  0100               	movlb	0	; () banked
  7981  004202  6974               	setf	CANInitialize@FilterConfig2& (0+255),b
  7982                           
  7983                           ;CANlib.h: 273: break;
  7984  004204  D028               	goto	l6952
  7985  004206                     l365:
  7986                           
  7987                           ; BSR set to: 0
  7988                           ;CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  7989  004206  0100               	movlb	0	; () banked
  7990  004208  6973               	setf	CANInitialize@FilterConfig1& (0+255),b
  7991  00420A                     l6946:
  7992                           
  7993                           ; BSR set to: 0
  7994                           ;CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  7995  00420A  0EF7               	movlw	247
  7996  00420C  0100               	movlb	0	; () banked
  7997  00420E  6F74               	movwf	CANInitialize@FilterConfig2& (0+255),b
  7998                           
  7999                           ; BSR set to: 0
  8000                           ;CANlib.h: 278: }
  8001                           
  8002                           ;CANlib.h: 277: break;
  8003  004210  D022               	goto	l6952
  8004  004212                     l6950:
  8005  004212  0E9F               	movlw	159
  8006  004214  0100               	movlb	0	; () banked
  8007  004216  6F6E               	movwf	??_CANInitialize& (0+255),b
  8008  004218  0EFF               	movlw	255
  8009  00421A  0100               	movlb	0	; () banked
  8010  00421C  6F6F               	movwf	(??_CANInitialize+1)& (0+255),b
  8011  00421E  0100               	movlb	0	; () banked
  8012  004220  516D               	movf	CANInitialize@flags& (0+255),w,b
  8013  004222  0B60               	andlw	96
  8014  004224  0100               	movlb	0	; () banked
  8015  004226  6F70               	movwf	(??_CANInitialize+2)& (0+255),b
  8016  004228  6B71               	clrf	(??_CANInitialize+3)& (0+255),b
  8017  00422A  0100               	movlb	0	; () banked
  8018  00422C  516E               	movf	??_CANInitialize& (0+255),w,b
  8019  00422E  0100               	movlb	0	; () banked
  8020  004230  1370               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  8021  004232  0100               	movlb	0	; () banked
  8022  004234  516F               	movf	(??_CANInitialize+1)& (0+255),w,b
  8023  004236  0100               	movlb	0	; () banked
  8024  004238  1371               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  8025                           
  8026                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8027                           ; Switch size 1, requested type "space"
  8028                           ; Number of cases is 1, Range of values is 0 to 0
  8029                           ; switch strategies available:
  8030                           ; Name         Instructions Cycles
  8031                           ; simple_byte            4     3 (average)
  8032                           ;	Chosen strategy is simple_byte
  8033  00423A  0100               	movlb	0	; () banked
  8034  00423C  5171               	movf	(??_CANInitialize+3)& (0+255),w,b
  8035  00423E  0A00               	xorlw	0	; case 0
  8036  004240  A4D8               	btfss	status,2,c
  8037  004242  D7E1               	goto	l365
  8038                           
  8039                           ; BSR set to: 0
  8040                           ; Switch size 1, requested type "space"
  8041                           ; Number of cases is 2, Range of values is 191 to 223
  8042                           ; switch strategies available:
  8043                           ; Name         Instructions Cycles
  8044                           ; simple_byte            7     4 (average)
  8045                           ;	Chosen strategy is simple_byte
  8046  004244  0100               	movlb	0	; () banked
  8047  004246  5170               	movf	(??_CANInitialize+2)& (0+255),w,b
  8048  004248  0ABF               	xorlw	191	; case 191
  8049  00424A  B4D8               	btfsc	status,2,c
  8050  00424C  D7D7               	goto	l364
  8051  00424E  0A60               	xorlw	96	; case 223
  8052  004250  B4D8               	btfsc	status,2,c
  8053  004252  D7D0               	goto	l6944
  8054  004254  D7D8               	goto	l365
  8055  004256                     l6952:
  8056                           
  8057                           ; BSR set to: 0
  8058                           ;CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  8059  004256  0E00               	movlw	0
  8060  004258  6E1F               	movwf	CANSetFilter@filter,c
  8061  00425A  0E00               	movlw	0
  8062  00425C  6E20               	movwf	CANSetFilter@filter+1,c
  8063  00425E  0E00               	movlw	0
  8064  004260  6E21               	movwf	CANSetFilter@filter+2,c
  8065  004262  0E00               	movlw	0
  8066  004264  6E22               	movwf	CANSetFilter@filter+3,c
  8067  004266  C073  F023         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  8068  00426A  0E00               	movlw	0
  8069  00426C  ECA7  F006         	call	_CANSetFilter
  8070                           
  8071                           ;CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  8072  004270  0E00               	movlw	0
  8073  004272  6E1F               	movwf	CANSetFilter@filter,c
  8074  004274  0E00               	movlw	0
  8075  004276  6E20               	movwf	CANSetFilter@filter+1,c
  8076  004278  0E00               	movlw	0
  8077  00427A  6E21               	movwf	CANSetFilter@filter+2,c
  8078  00427C  0E00               	movlw	0
  8079  00427E  6E22               	movwf	CANSetFilter@filter+3,c
  8080  004280  C073  F023         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  8081  004284  0E01               	movlw	1
  8082  004286  ECA7  F006         	call	_CANSetFilter
  8083                           
  8084                           ;CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  8085  00428A  0E00               	movlw	0
  8086  00428C  6E1F               	movwf	CANSetFilter@filter,c
  8087  00428E  0E00               	movlw	0
  8088  004290  6E20               	movwf	CANSetFilter@filter+1,c
  8089  004292  0E00               	movlw	0
  8090  004294  6E21               	movwf	CANSetFilter@filter+2,c
  8091  004296  0E00               	movlw	0
  8092  004298  6E22               	movwf	CANSetFilter@filter+3,c
  8093  00429A  C074  F023         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8094  00429E  0E02               	movlw	2
  8095  0042A0  ECA7  F006         	call	_CANSetFilter
  8096                           
  8097                           ;CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  8098  0042A4  0E00               	movlw	0
  8099  0042A6  6E1F               	movwf	CANSetFilter@filter,c
  8100  0042A8  0E00               	movlw	0
  8101  0042AA  6E20               	movwf	CANSetFilter@filter+1,c
  8102  0042AC  0E00               	movlw	0
  8103  0042AE  6E21               	movwf	CANSetFilter@filter+2,c
  8104  0042B0  0E00               	movlw	0
  8105  0042B2  6E22               	movwf	CANSetFilter@filter+3,c
  8106  0042B4  C074  F023         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8107  0042B8  0E03               	movlw	3
  8108  0042BA  ECA7  F006         	call	_CANSetFilter
  8109                           
  8110                           ;CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  8111  0042BE  0E00               	movlw	0
  8112  0042C0  6E1F               	movwf	CANSetFilter@filter,c
  8113  0042C2  0E00               	movlw	0
  8114  0042C4  6E20               	movwf	CANSetFilter@filter+1,c
  8115  0042C6  0E00               	movlw	0
  8116  0042C8  6E21               	movwf	CANSetFilter@filter+2,c
  8117  0042CA  0E00               	movlw	0
  8118  0042CC  6E22               	movwf	CANSetFilter@filter+3,c
  8119  0042CE  C074  F023         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8120  0042D2  0E04               	movlw	4
  8121  0042D4  ECA7  F006         	call	_CANSetFilter
  8122                           
  8123                           ;CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  8124  0042D8  0E00               	movlw	0
  8125  0042DA  6E1F               	movwf	CANSetFilter@filter,c
  8126  0042DC  0E00               	movlw	0
  8127  0042DE  6E20               	movwf	CANSetFilter@filter+1,c
  8128  0042E0  0E00               	movlw	0
  8129  0042E2  6E21               	movwf	CANSetFilter@filter+2,c
  8130  0042E4  0E00               	movlw	0
  8131  0042E6  6E22               	movwf	CANSetFilter@filter+3,c
  8132  0042E8  C074  F023         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8133  0042EC  0E05               	movlw	5
  8134  0042EE  ECA7  F006         	call	_CANSetFilter
  8135                           
  8136                           ;CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  8137  0042F2  0E00               	movlw	0
  8138  0042F4  EC46  F028         	call	_CANOperationMode
  8139  0042F8  0012               	return		;funcret
  8140  0042FA                     __end_of_CANInitialize:
  8141                           	opt stack 0
  8142                           tblptru	equ	0xFF8
  8143                           tblptrh	equ	0xFF7
  8144                           tblptrl	equ	0xFF6
  8145                           tablat	equ	0xFF5
  8146                           prodh	equ	0xFF4
  8147                           prodl	equ	0xFF3
  8148                           intcon	equ	0xFF2
  8149                           postinc0	equ	0xFEE
  8150                           wreg	equ	0xFE8
  8151                           postdec1	equ	0xFE5
  8152                           fsr1l	equ	0xFE1
  8153                           postinc2	equ	0xFDE
  8154                           postdec2	equ	0xFDD
  8155                           fsr2h	equ	0xFDA
  8156                           fsr2l	equ	0xFD9
  8157                           status	equ	0xFD8
  8158                           
  8159 ;; *************** function _CANSetMask *****************
  8160 ;; Defined at:
  8161 ;;		line 640 in file "CANlib.h"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;  numBuffer       1    wreg     enum E16921
  8164 ;;  mask            4   30[COMRAM] unsigned long 
  8165 ;;  type            1   34[COMRAM] enum E16887
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;  numBuffer       1    4[BANK0 ] enum E16921
  8168 ;;  tamp            4    5[BANK0 ] unsigned long 
  8169 ;; Return value:  Size  Location     Type
  8170 ;;		None               void
  8171 ;; Registers used:
  8172 ;;		wreg, status,2, status,0
  8173 ;; Tracked objects:
  8174 ;;		On entry : 0/0
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8178 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8179 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8180 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8181 ;;      Totals:         5       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;Total ram usage:       14 bytes
  8183 ;; Hardware stack levels used:    1
  8184 ;; Hardware stack levels required when called:    2
  8185 ;; This function calls:
  8186 ;;		Nothing
  8187 ;; This function is called by:
  8188 ;;		_CANInitialize
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           	psect	text25
  8193  0034F0                     __ptext25:
  8194                           	opt stack 0
  8195  0034F0                     _CANSetMask:
  8196                           	opt stack 26
  8197                           
  8198                           ;incstack = 0
  8199                           ;CANSetMask@numBuffer stored from wreg
  8200  0034F0  0100               	movlb	0	; () banked
  8201  0034F2  6F64               	movwf	CANSetMask@numBuffer& (0+255),b
  8202                           
  8203                           ;CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  8204  0034F4  0100               	movlb	0	; () banked
  8205  0034F6  0564               	decf	CANSetMask@numBuffer& (0+255),w,b
  8206  0034F8  A4D8               	btfss	status,2,c
  8207  0034FA  D051               	goto	l6440
  8208                           
  8209                           ; BSR set to: 0
  8210  0034FC  2823               	incf	CANSetMask@type,w,c
  8211  0034FE  A4D8               	btfss	status,2,c
  8212  003500  D04E               	goto	l6440
  8213                           
  8214                           ; BSR set to: 0
  8215                           ;CANlib.h: 644: {
  8216                           ;CANlib.h: 645: tamp = (mask >> 3);
  8217  003502  C01F  F060         	movff	CANSetMask@mask,??_CANSetMask
  8218  003506  C020  F061         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8219  00350A  C021  F062         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8220  00350E  C022  F063         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8221  003512  0E04               	movlw	4
  8222  003514  D006               	goto	u8520
  8223  003516                     u8525:
  8224  003516  0100               	movlb	0	; () banked
  8225  003518  90D8               	bcf	status,0,c
  8226  00351A  3363               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8227  00351C  3362               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8228  00351E  3361               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8229  003520  3360               	rrcf	??_CANSetMask& (0+255),f,b
  8230  003522                     u8520:
  8231  003522  2EE8               	decfsz	wreg,f,c
  8232  003524  D7F8               	goto	u8525
  8233  003526  C060  F065         	movff	??_CANSetMask,CANSetMask@tamp
  8234  00352A  C061  F066         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8235  00352E  C062  F067         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8236  003532  C063  F068         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;CANlib.h: 646: tamp = tamp & 0x000000FF;
  8240  003536  0100               	movlb	0	; () banked
  8241  003538  5165               	movf	CANSetMask@tamp& (0+255),w,b
  8242  00353A  0100               	movlb	0	; () banked
  8243  00353C  6F65               	movwf	CANSetMask@tamp& (0+255),b
  8244  00353E  6B66               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8245  003540  6B67               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8246  003542  6B68               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8247                           
  8248                           ; BSR set to: 0
  8249                           ;CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  8250  003544  C065  FF18         	movff	CANSetMask@tamp,3864	;volatile
  8251                           
  8252                           ; BSR set to: 0
  8253                           ;CANlib.h: 649: tamp = mask & 0x00000007;
  8254  003548  0E07               	movlw	7
  8255  00354A  141F               	andwf	CANSetMask@mask,w,c
  8256  00354C  0100               	movlb	0	; () banked
  8257  00354E  6F65               	movwf	CANSetMask@tamp& (0+255),b
  8258  003550  0E00               	movlw	0
  8259  003552  1420               	andwf	CANSetMask@mask+1,w,c
  8260  003554  0100               	movlb	0	; () banked
  8261  003556  6F66               	movwf	(CANSetMask@tamp+1)& (0+255),b
  8262  003558  0E00               	movlw	0
  8263  00355A  1421               	andwf	CANSetMask@mask+2,w,c
  8264  00355C  0100               	movlb	0	; () banked
  8265  00355E  6F67               	movwf	(CANSetMask@tamp+2)& (0+255),b
  8266  003560  0E00               	movlw	0
  8267  003562  1422               	andwf	CANSetMask@mask+3,w,c
  8268  003564  0100               	movlb	0	; () banked
  8269  003566  6F68               	movwf	(CANSetMask@tamp+3)& (0+255),b
  8270                           
  8271                           ; BSR set to: 0
  8272                           ;CANlib.h: 650: tamp = tamp << 5;
  8273  003568  C065  F060         	movff	CANSetMask@tamp,??_CANSetMask
  8274  00356C  C066  F061         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  8275  003570  C067  F062         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  8276  003574  C068  F063         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  8277  003578  0E05               	movlw	5
  8278  00357A                     u8535:
  8279  00357A  90D8               	bcf	status,0,c
  8280  00357C  0100               	movlb	0	; () banked
  8281  00357E  3760               	rlcf	??_CANSetMask& (0+255),f,b
  8282  003580  3761               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  8283  003582  3762               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  8284  003584  3763               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  8285  003586  2EE8               	decfsz	wreg,f,c
  8286  003588  D7F8               	goto	u8535
  8287  00358A  C060  F065         	movff	??_CANSetMask,CANSetMask@tamp
  8288  00358E  C061  F066         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8289  003592  C062  F067         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8290  003596  C063  F068         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  8294  00359A  C065  FF19         	movff	CANSetMask@tamp,3865	;volatile
  8295  00359E                     l6440:
  8296                           
  8297                           ; BSR set to: 0
  8298                           ;CANlib.h: 652: }
  8299                           ;CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  8300  00359E  0E02               	movlw	2
  8301  0035A0  0100               	movlb	0	; () banked
  8302  0035A2  1964               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  8303  0035A4  A4D8               	btfss	status,2,c
  8304  0035A6  D051               	goto	l6456
  8305                           
  8306                           ; BSR set to: 0
  8307  0035A8  2823               	incf	CANSetMask@type,w,c
  8308  0035AA  A4D8               	btfss	status,2,c
  8309  0035AC  D04E               	goto	l6456
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;CANlib.h: 655: {
  8313                           ;CANlib.h: 656: tamp = (mask >> 3);
  8314  0035AE  C01F  F060         	movff	CANSetMask@mask,??_CANSetMask
  8315  0035B2  C020  F061         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8316  0035B6  C021  F062         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8317  0035BA  C022  F063         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8318  0035BE  0E04               	movlw	4
  8319  0035C0  D006               	goto	u8560
  8320  0035C2                     u8565:
  8321  0035C2  0100               	movlb	0	; () banked
  8322  0035C4  90D8               	bcf	status,0,c
  8323  0035C6  3363               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8324  0035C8  3362               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8325  0035CA  3361               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8326  0035CC  3360               	rrcf	??_CANSetMask& (0+255),f,b
  8327  0035CE                     u8560:
  8328  0035CE  2EE8               	decfsz	wreg,f,c
  8329  0035D0  D7F8               	goto	u8565
  8330  0035D2  C060  F065         	movff	??_CANSetMask,CANSetMask@tamp
  8331  0035D6  C061  F066         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8332  0035DA  C062  F067         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8333  0035DE  C063  F068         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8334                           
  8335                           ; BSR set to: 0
  8336                           ;CANlib.h: 657: tamp = tamp & 0x000000FF;
  8337  0035E2  0100               	movlb	0	; () banked
  8338  0035E4  5165               	movf	CANSetMask@tamp& (0+255),w,b
  8339  0035E6  0100               	movlb	0	; () banked
  8340  0035E8  6F65               	movwf	CANSetMask@tamp& (0+255),b
  8341  0035EA  6B66               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8342  0035EC  6B67               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8343  0035EE  6B68               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8344                           
  8345                           ; BSR set to: 0
  8346                           ;CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  8347  0035F0  C065  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;CANlib.h: 660: tamp = mask & 0x00000007;
  8351  0035F4  0E07               	movlw	7
  8352  0035F6  141F               	andwf	CANSetMask@mask,w,c
  8353  0035F8  0100               	movlb	0	; () banked
  8354  0035FA  6F65               	movwf	CANSetMask@tamp& (0+255),b
  8355  0035FC  0E00               	movlw	0
  8356  0035FE  1420               	andwf	CANSetMask@mask+1,w,c
  8357  003600  0100               	movlb	0	; () banked
  8358  003602  6F66               	movwf	(CANSetMask@tamp+1)& (0+255),b
  8359  003604  0E00               	movlw	0
  8360  003606  1421               	andwf	CANSetMask@mask+2,w,c
  8361  003608  0100               	movlb	0	; () banked
  8362  00360A  6F67               	movwf	(CANSetMask@tamp+2)& (0+255),b
  8363  00360C  0E00               	movlw	0
  8364  00360E  1422               	andwf	CANSetMask@mask+3,w,c
  8365  003610  0100               	movlb	0	; () banked
  8366  003612  6F68               	movwf	(CANSetMask@tamp+3)& (0+255),b
  8367                           
  8368                           ; BSR set to: 0
  8369                           ;CANlib.h: 661: tamp = tamp << 5;
  8370  003614  C065  F060         	movff	CANSetMask@tamp,??_CANSetMask
  8371  003618  C066  F061         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  8372  00361C  C067  F062         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  8373  003620  C068  F063         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  8374  003624  0E05               	movlw	5
  8375  003626                     u8575:
  8376  003626  90D8               	bcf	status,0,c
  8377  003628  0100               	movlb	0	; () banked
  8378  00362A  3760               	rlcf	??_CANSetMask& (0+255),f,b
  8379  00362C  3761               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  8380  00362E  3762               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  8381  003630  3763               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  8382  003632  2EE8               	decfsz	wreg,f,c
  8383  003634  D7F8               	goto	u8575
  8384  003636  C060  F065         	movff	??_CANSetMask,CANSetMask@tamp
  8385  00363A  C061  F066         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8386  00363E  C062  F067         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8387  003642  C063  F068         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8388                           
  8389                           ; BSR set to: 0
  8390                           ;CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  8391  003646  C065  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  8392  00364A                     l6456:
  8393                           
  8394                           ; BSR set to: 0
  8395                           ;CANlib.h: 663: }
  8396                           ;CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  8397  00364A  0100               	movlb	0	; () banked
  8398  00364C  0564               	decf	CANSetMask@numBuffer& (0+255),w,b
  8399  00364E  A4D8               	btfss	status,2,c
  8400  003650  D07C               	goto	l6488
  8401                           
  8402                           ; BSR set to: 0
  8403  003652  0EF7               	movlw	247
  8404  003654  1823               	xorwf	CANSetMask@type,w,c
  8405  003656  A4D8               	btfss	status,2,c
  8406  003658  D078               	goto	l6488
  8407                           
  8408                           ; BSR set to: 0
  8409                           ;CANlib.h: 666: {
  8410                           ;CANlib.h: 667: tamp = mask & 0x000000FF;
  8411  00365A  501F               	movf	CANSetMask@mask,w,c
  8412  00365C  0100               	movlb	0	; () banked
  8413  00365E  6F65               	movwf	CANSetMask@tamp& (0+255),b
  8414  003660  6B66               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8415  003662  6B67               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8416  003664  6B68               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  8420  003666  C065  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  8421                           
  8422                           ; BSR set to: 0
  8423                           ;CANlib.h: 670: tamp = mask & 0x0000FF00;
  8424  00366A  0E00               	movlw	0
  8425  00366C  141F               	andwf	CANSetMask@mask,w,c
  8426  00366E  0100               	movlb	0	; () banked
  8427  003670  6F65               	movwf	CANSetMask@tamp& (0+255),b
  8428  003672  0EFF               	movlw	255
  8429  003674  1420               	andwf	CANSetMask@mask+1,w,c
  8430  003676  0100               	movlb	0	; () banked
  8431  003678  6F66               	movwf	(CANSetMask@tamp+1)& (0+255),b
  8432  00367A  0E00               	movlw	0
  8433  00367C  1421               	andwf	CANSetMask@mask+2,w,c
  8434  00367E  0100               	movlb	0	; () banked
  8435  003680  6F67               	movwf	(CANSetMask@tamp+2)& (0+255),b
  8436  003682  0E00               	movlw	0
  8437  003684  1422               	andwf	CANSetMask@mask+3,w,c
  8438  003686  0100               	movlb	0	; () banked
  8439  003688  6F68               	movwf	(CANSetMask@tamp+3)& (0+255),b
  8440                           
  8441                           ; BSR set to: 0
  8442                           ;CANlib.h: 671: tamp = tamp >> 8;
  8443  00368A  C065  F060         	movff	CANSetMask@tamp,??_CANSetMask
  8444  00368E  C066  F061         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  8445  003692  C067  F062         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  8446  003696  C068  F063         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  8447  00369A  C061  F060         	movff	??_CANSetMask+1,??_CANSetMask
  8448  00369E  C062  F061         	movff	??_CANSetMask+2,??_CANSetMask+1
  8449  0036A2  C063  F062         	movff	??_CANSetMask+3,??_CANSetMask+2
  8450  0036A6  0100               	movlb	0	; () banked
  8451  0036A8  6B63               	clrf	(??_CANSetMask+3)& (0+255),b
  8452  0036AA  C060  F065         	movff	??_CANSetMask,CANSetMask@tamp
  8453  0036AE  C061  F066         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8454  0036B2  C062  F067         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8455  0036B6  C063  F068         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  8459  0036BA  C065  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  8460                           
  8461                           ; BSR set to: 0
  8462                           ;CANlib.h: 674: if (mask & 0x00010000)
  8463  0036BE  A021               	btfss	CANSetMask@mask+2,0,c
  8464  0036C0  D003               	goto	l438
  8465                           
  8466                           ; BSR set to: 0
  8467                           ;CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  8468  0036C2  010F               	movlb	15	; () banked
  8469  0036C4  8119               	bsf	25,0,b	;volatile
  8470  0036C6  D002               	goto	l439
  8471  0036C8                     l438:
  8472                           
  8473                           ; BSR set to: 0
  8474                           ;CANlib.h: 676: else
  8475                           ;CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  8476  0036C8  010F               	movlb	15	; () banked
  8477  0036CA  9119               	bcf	25,0,b	;volatile
  8478  0036CC                     l439:
  8479                           
  8480                           ; BSR set to: 15
  8481                           ;CANlib.h: 679: if (mask & 0x00020000)
  8482  0036CC  A221               	btfss	CANSetMask@mask+2,1,c
  8483  0036CE  D003               	goto	l440
  8484                           
  8485                           ; BSR set to: 15
  8486                           ;CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  8487  0036D0  010F               	movlb	15	; () banked
  8488  0036D2  8319               	bsf	25,1,b	;volatile
  8489  0036D4  D002               	goto	l441
  8490  0036D6                     l440:
  8491                           
  8492                           ; BSR set to: 15
  8493                           ;CANlib.h: 681: else
  8494                           ;CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  8495  0036D6  010F               	movlb	15	; () banked
  8496  0036D8  9319               	bcf	25,1,b	;volatile
  8497  0036DA                     l441:
  8498                           
  8499                           ; BSR set to: 15
  8500                           ;CANlib.h: 684: if (mask & 0x00040000)
  8501  0036DA  A421               	btfss	CANSetMask@mask+2,2,c
  8502  0036DC  D003               	goto	l442
  8503                           
  8504                           ; BSR set to: 15
  8505                           ;CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  8506  0036DE  010F               	movlb	15	; () banked
  8507  0036E0  8B19               	bsf	25,5,b	;volatile
  8508  0036E2  D002               	goto	l443
  8509  0036E4                     l442:
  8510                           
  8511                           ; BSR set to: 15
  8512                           ;CANlib.h: 686: else
  8513                           ;CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  8514  0036E4  010F               	movlb	15	; () banked
  8515  0036E6  9B19               	bcf	25,5,b	;volatile
  8516  0036E8                     l443:
  8517                           
  8518                           ; BSR set to: 15
  8519                           ;CANlib.h: 689: if (mask & 0x00080000)
  8520  0036E8  A621               	btfss	CANSetMask@mask+2,3,c
  8521  0036EA  D003               	goto	l444
  8522                           
  8523                           ; BSR set to: 15
  8524                           ;CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  8525  0036EC  010F               	movlb	15	; () banked
  8526  0036EE  8D19               	bsf	25,6,b	;volatile
  8527  0036F0  D002               	goto	l445
  8528  0036F2                     l444:
  8529                           
  8530                           ; BSR set to: 15
  8531                           ;CANlib.h: 691: else
  8532                           ;CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  8533  0036F2  010F               	movlb	15	; () banked
  8534  0036F4  9D19               	bcf	25,6,b	;volatile
  8535  0036F6                     l445:
  8536                           
  8537                           ; BSR set to: 15
  8538                           ;CANlib.h: 694: if (mask & 0x00100000)
  8539  0036F6  A821               	btfss	CANSetMask@mask+2,4,c
  8540  0036F8  D003               	goto	l446
  8541                           
  8542                           ; BSR set to: 15
  8543                           ;CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  8544  0036FA  010F               	movlb	15	; () banked
  8545  0036FC  8F19               	bsf	25,7,b	;volatile
  8546  0036FE  D002               	goto	l6482
  8547  003700                     l446:
  8548                           
  8549                           ; BSR set to: 15
  8550                           ;CANlib.h: 696: else
  8551                           ;CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  8552  003700  010F               	movlb	15	; () banked
  8553  003702  9F19               	bcf	25,7,b	;volatile
  8554  003704                     l6482:
  8555                           
  8556                           ; BSR set to: 15
  8557                           ;CANlib.h: 699: tamp = (mask >> 21);
  8558  003704  C01F  F060         	movff	CANSetMask@mask,??_CANSetMask
  8559  003708  C020  F061         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8560  00370C  C021  F062         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8561  003710  C022  F063         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8562  003714  0E16               	movlw	22
  8563  003716  D006               	goto	u8650
  8564  003718                     u8655:
  8565  003718  0100               	movlb	0	; () banked
  8566  00371A  90D8               	bcf	status,0,c
  8567  00371C  3363               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8568  00371E  3362               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8569  003720  3361               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8570  003722  3360               	rrcf	??_CANSetMask& (0+255),f,b
  8571  003724                     u8650:
  8572  003724  2EE8               	decfsz	wreg,f,c
  8573  003726  D7F8               	goto	u8655
  8574  003728  C060  F065         	movff	??_CANSetMask,CANSetMask@tamp
  8575  00372C  C061  F066         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8576  003730  C062  F067         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8577  003734  C063  F068         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8578                           
  8579                           ; BSR set to: 0
  8580                           ;CANlib.h: 700: tamp = tamp & 0x000000FF;
  8581  003738  0100               	movlb	0	; () banked
  8582  00373A  5165               	movf	CANSetMask@tamp& (0+255),w,b
  8583  00373C  0100               	movlb	0	; () banked
  8584  00373E  6F65               	movwf	CANSetMask@tamp& (0+255),b
  8585  003740  6B66               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8586  003742  6B67               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8587  003744  6B68               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8588                           
  8589                           ; BSR set to: 0
  8590                           ;CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  8591  003746  C065  FF18         	movff	CANSetMask@tamp,3864	;volatile
  8592  00374A                     l6488:
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;CANlib.h: 702: }
  8596                           ;CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  8597  00374A  0E02               	movlw	2
  8598  00374C  0100               	movlb	0	; () banked
  8599  00374E  1964               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  8600  003750  A4D8               	btfss	status,2,c
  8601  003752  0012               	return	
  8602                           
  8603                           ; BSR set to: 0
  8604  003754  0EF7               	movlw	247
  8605  003756  1823               	xorwf	CANSetMask@type,w,c
  8606  003758  A4D8               	btfss	status,2,c
  8607  00375A  0012               	return	
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;CANlib.h: 705: {
  8611                           ;CANlib.h: 706: tamp = mask & 0x000000FF;
  8612  00375C  501F               	movf	CANSetMask@mask,w,c
  8613  00375E  0100               	movlb	0	; () banked
  8614  003760  6F65               	movwf	CANSetMask@tamp& (0+255),b
  8615  003762  6B66               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8616  003764  6B67               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8617  003766  6B68               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8618                           
  8619                           ; BSR set to: 0
  8620                           ;CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  8621  003768  C065  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  8622                           
  8623                           ; BSR set to: 0
  8624                           ;CANlib.h: 709: tamp = mask & 0x0000FF00;
  8625  00376C  0E00               	movlw	0
  8626  00376E  141F               	andwf	CANSetMask@mask,w,c
  8627  003770  0100               	movlb	0	; () banked
  8628  003772  6F65               	movwf	CANSetMask@tamp& (0+255),b
  8629  003774  0EFF               	movlw	255
  8630  003776  1420               	andwf	CANSetMask@mask+1,w,c
  8631  003778  0100               	movlb	0	; () banked
  8632  00377A  6F66               	movwf	(CANSetMask@tamp+1)& (0+255),b
  8633  00377C  0E00               	movlw	0
  8634  00377E  1421               	andwf	CANSetMask@mask+2,w,c
  8635  003780  0100               	movlb	0	; () banked
  8636  003782  6F67               	movwf	(CANSetMask@tamp+2)& (0+255),b
  8637  003784  0E00               	movlw	0
  8638  003786  1422               	andwf	CANSetMask@mask+3,w,c
  8639  003788  0100               	movlb	0	; () banked
  8640  00378A  6F68               	movwf	(CANSetMask@tamp+3)& (0+255),b
  8641                           
  8642                           ; BSR set to: 0
  8643                           ;CANlib.h: 710: tamp = tamp >> 8;
  8644  00378C  C065  F060         	movff	CANSetMask@tamp,??_CANSetMask
  8645  003790  C066  F061         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  8646  003794  C067  F062         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  8647  003798  C068  F063         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  8648  00379C  C061  F060         	movff	??_CANSetMask+1,??_CANSetMask
  8649  0037A0  C062  F061         	movff	??_CANSetMask+2,??_CANSetMask+1
  8650  0037A4  C063  F062         	movff	??_CANSetMask+3,??_CANSetMask+2
  8651  0037A8  0100               	movlb	0	; () banked
  8652  0037AA  6B63               	clrf	(??_CANSetMask+3)& (0+255),b
  8653  0037AC  C060  F065         	movff	??_CANSetMask,CANSetMask@tamp
  8654  0037B0  C061  F066         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8655  0037B4  C062  F067         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8656  0037B8  C063  F068         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8657                           
  8658                           ; BSR set to: 0
  8659                           ;CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  8660  0037BC  C065  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;CANlib.h: 713: if (mask & 0x00010000)
  8664  0037C0  A021               	btfss	CANSetMask@mask+2,0,c
  8665  0037C2  D003               	goto	l449
  8666                           
  8667                           ; BSR set to: 0
  8668                           ;CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  8669  0037C4  010F               	movlb	15	; () banked
  8670  0037C6  811D               	bsf	29,0,b	;volatile
  8671  0037C8  D002               	goto	l450
  8672  0037CA                     l449:
  8673                           
  8674                           ; BSR set to: 0
  8675                           ;CANlib.h: 715: else
  8676                           ;CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  8677  0037CA  010F               	movlb	15	; () banked
  8678  0037CC  911D               	bcf	29,0,b	;volatile
  8679  0037CE                     l450:
  8680                           
  8681                           ; BSR set to: 15
  8682                           ;CANlib.h: 718: if (mask & 0x00020000)
  8683  0037CE  A221               	btfss	CANSetMask@mask+2,1,c
  8684  0037D0  D003               	goto	l451
  8685                           
  8686                           ; BSR set to: 15
  8687                           ;CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  8688  0037D2  010F               	movlb	15	; () banked
  8689  0037D4  831D               	bsf	29,1,b	;volatile
  8690  0037D6  D002               	goto	l452
  8691  0037D8                     l451:
  8692                           
  8693                           ; BSR set to: 15
  8694                           ;CANlib.h: 720: else
  8695                           ;CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  8696  0037D8  010F               	movlb	15	; () banked
  8697  0037DA  931D               	bcf	29,1,b	;volatile
  8698  0037DC                     l452:
  8699                           
  8700                           ; BSR set to: 15
  8701                           ;CANlib.h: 723: if (mask & 0x00040000)
  8702  0037DC  A421               	btfss	CANSetMask@mask+2,2,c
  8703  0037DE  D003               	goto	l453
  8704                           
  8705                           ; BSR set to: 15
  8706                           ;CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  8707  0037E0  010F               	movlb	15	; () banked
  8708  0037E2  8B1D               	bsf	29,5,b	;volatile
  8709  0037E4  D002               	goto	l454
  8710  0037E6                     l453:
  8711                           
  8712                           ; BSR set to: 15
  8713                           ;CANlib.h: 725: else
  8714                           ;CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  8715  0037E6  010F               	movlb	15	; () banked
  8716  0037E8  9B1D               	bcf	29,5,b	;volatile
  8717  0037EA                     l454:
  8718                           
  8719                           ; BSR set to: 15
  8720                           ;CANlib.h: 728: if (mask & 0x00080000)
  8721  0037EA  A621               	btfss	CANSetMask@mask+2,3,c
  8722  0037EC  D003               	goto	l455
  8723                           
  8724                           ; BSR set to: 15
  8725                           ;CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  8726  0037EE  010F               	movlb	15	; () banked
  8727  0037F0  8D1D               	bsf	29,6,b	;volatile
  8728  0037F2  D002               	goto	l456
  8729  0037F4                     l455:
  8730                           
  8731                           ; BSR set to: 15
  8732                           ;CANlib.h: 730: else
  8733                           ;CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  8734  0037F4  010F               	movlb	15	; () banked
  8735  0037F6  9D1D               	bcf	29,6,b	;volatile
  8736  0037F8                     l456:
  8737                           
  8738                           ; BSR set to: 15
  8739                           ;CANlib.h: 733: if (mask & 0x00100000)
  8740  0037F8  A821               	btfss	CANSetMask@mask+2,4,c
  8741  0037FA  D003               	goto	l457
  8742                           
  8743                           ; BSR set to: 15
  8744                           ;CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  8745  0037FC  010F               	movlb	15	; () banked
  8746  0037FE  8F1D               	bsf	29,7,b	;volatile
  8747  003800  D002               	goto	l6514
  8748  003802                     l457:
  8749                           
  8750                           ; BSR set to: 15
  8751                           ;CANlib.h: 735: else
  8752                           ;CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  8753  003802  010F               	movlb	15	; () banked
  8754  003804  9F1D               	bcf	29,7,b	;volatile
  8755  003806                     l6514:
  8756                           
  8757                           ; BSR set to: 15
  8758                           ;CANlib.h: 738: tamp = (mask >> 21);
  8759  003806  C01F  F060         	movff	CANSetMask@mask,??_CANSetMask
  8760  00380A  C020  F061         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8761  00380E  C021  F062         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8762  003812  C022  F063         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8763  003816  0E16               	movlw	22
  8764  003818  D006               	goto	u8730
  8765  00381A                     u8735:
  8766  00381A  0100               	movlb	0	; () banked
  8767  00381C  90D8               	bcf	status,0,c
  8768  00381E  3363               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8769  003820  3362               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8770  003822  3361               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8771  003824  3360               	rrcf	??_CANSetMask& (0+255),f,b
  8772  003826                     u8730:
  8773  003826  2EE8               	decfsz	wreg,f,c
  8774  003828  D7F8               	goto	u8735
  8775  00382A  C060  F065         	movff	??_CANSetMask,CANSetMask@tamp
  8776  00382E  C061  F066         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8777  003832  C062  F067         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8778  003836  C063  F068         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8779                           
  8780                           ; BSR set to: 0
  8781                           ;CANlib.h: 739: tamp = tamp & 0x000000FF;
  8782  00383A  0100               	movlb	0	; () banked
  8783  00383C  5165               	movf	CANSetMask@tamp& (0+255),w,b
  8784  00383E  0100               	movlb	0	; () banked
  8785  003840  6F65               	movwf	CANSetMask@tamp& (0+255),b
  8786  003842  6B66               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8787  003844  6B67               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8788  003846  6B68               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8789                           
  8790                           ; BSR set to: 0
  8791                           ;CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  8792  003848  C065  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  8793  00384C  0012               	return	
  8794  00384E                     __end_of_CANSetMask:
  8795                           	opt stack 0
  8796                           tblptru	equ	0xFF8
  8797                           tblptrh	equ	0xFF7
  8798                           tblptrl	equ	0xFF6
  8799                           tablat	equ	0xFF5
  8800                           prodh	equ	0xFF4
  8801                           prodl	equ	0xFF3
  8802                           intcon	equ	0xFF2
  8803                           postinc0	equ	0xFEE
  8804                           wreg	equ	0xFE8
  8805                           postdec1	equ	0xFE5
  8806                           fsr1l	equ	0xFE1
  8807                           postinc2	equ	0xFDE
  8808                           postdec2	equ	0xFDD
  8809                           fsr2h	equ	0xFDA
  8810                           fsr2l	equ	0xFD9
  8811                           status	equ	0xFD8
  8812                           
  8813 ;; *************** function _CANSetFilter *****************
  8814 ;; Defined at:
  8815 ;;		line 748 in file "CANlib.h"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;  numBuffer       1    wreg     enum E16924
  8818 ;;  filter          4   30[COMRAM] unsigned long 
  8819 ;;  type            1   34[COMRAM] enum E16887
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;  numBuffer       1    4[BANK0 ] enum E16924
  8822 ;;  tamp            4    5[BANK0 ] unsigned long 
  8823 ;; Return value:  Size  Location     Type
  8824 ;;		None               void
  8825 ;; Registers used:
  8826 ;;		wreg, status,2, status,0
  8827 ;; Tracked objects:
  8828 ;;		On entry : 0/0
  8829 ;;		On exit  : 0/0
  8830 ;;		Unchanged: 0/0
  8831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8832 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8833 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8834 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8835 ;;      Totals:         5       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8836 ;;Total ram usage:       14 bytes
  8837 ;; Hardware stack levels used:    1
  8838 ;; Hardware stack levels required when called:    2
  8839 ;; This function calls:
  8840 ;;		Nothing
  8841 ;; This function is called by:
  8842 ;;		_CANInitialize
  8843 ;; This function uses a non-reentrant model
  8844 ;;
  8845                           
  8846                           	psect	text26
  8847  000D4E                     __ptext26:
  8848                           	opt stack 0
  8849  000D4E                     _CANSetFilter:
  8850                           	opt stack 26
  8851                           
  8852                           ; BSR set to: 0
  8853                           ;incstack = 0
  8854                           ;CANSetFilter@numBuffer stored from wreg
  8855  000D4E  0100               	movlb	0	; () banked
  8856  000D50  6F64               	movwf	CANSetFilter@numBuffer& (0+255),b
  8857                           
  8858                           ;CANlib.h: 750: unsigned long tamp;
  8859                           ;CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  8860  000D52  0100               	movlb	0	; () banked
  8861  000D54  5164               	movf	CANSetFilter@numBuffer& (0+255),w,b
  8862  000D56  0100               	movlb	0	; () banked
  8863  000D58  A4D8               	btfss	status,2,c
  8864  000D5A  D053               	goto	l6538
  8865                           
  8866                           ; BSR set to: 0
  8867  000D5C  2823               	incf	CANSetFilter@type,w,c
  8868  000D5E  A4D8               	btfss	status,2,c
  8869  000D60  D050               	goto	l6538
  8870                           
  8871                           ; BSR set to: 0
  8872                           ;CANlib.h: 753: {
  8873                           ;CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  8874  000D62  010F               	movlb	15	; () banked
  8875  000D64  9701               	bcf	1,3,b	;volatile
  8876                           
  8877                           ; BSR set to: 15
  8878                           ;CANlib.h: 756: tamp = (filter >> 3);
  8879  000D66  C01F  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  8880  000D6A  C020  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8881  000D6E  C021  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8882  000D72  C022  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8883  000D76  0E04               	movlw	4
  8884  000D78  D006               	goto	u8760
  8885  000D7A                     u8765:
  8886  000D7A  0100               	movlb	0	; () banked
  8887  000D7C  90D8               	bcf	status,0,c
  8888  000D7E  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8889  000D80  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8890  000D82  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8891  000D84  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  8892  000D86                     u8760:
  8893  000D86  2EE8               	decfsz	wreg,f,c
  8894  000D88  D7F8               	goto	u8765
  8895  000D8A  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  8896  000D8E  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8897  000D92  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8898  000D96  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8899                           
  8900                           ; BSR set to: 0
  8901                           ;CANlib.h: 757: tamp = tamp & 0x000000FF;
  8902  000D9A  0100               	movlb	0	; () banked
  8903  000D9C  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  8904  000D9E  0100               	movlb	0	; () banked
  8905  000DA0  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  8906  000DA2  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  8907  000DA4  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  8908  000DA6  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  8912  000DA8  C065  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;CANlib.h: 760: tamp = filter & 0x00000007;
  8916  000DAC  0E07               	movlw	7
  8917  000DAE  141F               	andwf	CANSetFilter@filter,w,c
  8918  000DB0  0100               	movlb	0	; () banked
  8919  000DB2  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  8920  000DB4  0E00               	movlw	0
  8921  000DB6  1420               	andwf	CANSetFilter@filter+1,w,c
  8922  000DB8  0100               	movlb	0	; () banked
  8923  000DBA  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  8924  000DBC  0E00               	movlw	0
  8925  000DBE  1421               	andwf	CANSetFilter@filter+2,w,c
  8926  000DC0  0100               	movlb	0	; () banked
  8927  000DC2  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  8928  000DC4  0E00               	movlw	0
  8929  000DC6  1422               	andwf	CANSetFilter@filter+3,w,c
  8930  000DC8  0100               	movlb	0	; () banked
  8931  000DCA  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  8932                           
  8933                           ; BSR set to: 0
  8934                           ;CANlib.h: 761: tamp = tamp << 5;
  8935  000DCC  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  8936  000DD0  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  8937  000DD4  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  8938  000DD8  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  8939  000DDC  0E05               	movlw	5
  8940  000DDE                     u8775:
  8941  000DDE  90D8               	bcf	status,0,c
  8942  000DE0  0100               	movlb	0	; () banked
  8943  000DE2  3760               	rlcf	??_CANSetFilter& (0+255),f,b
  8944  000DE4  3761               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  8945  000DE6  3762               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  8946  000DE8  3763               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  8947  000DEA  2EE8               	decfsz	wreg,f,c
  8948  000DEC  D7F8               	goto	u8775
  8949  000DEE  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  8950  000DF2  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8951  000DF6  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8952  000DFA  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8953                           
  8954                           ; BSR set to: 0
  8955                           ;CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  8956  000DFE  C065  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  8957  000E02                     l6538:
  8958                           
  8959                           ; BSR set to: 0
  8960                           ;CANlib.h: 763: }
  8961                           ;CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  8962  000E02  0100               	movlb	0	; () banked
  8963  000E04  0564               	decf	CANSetFilter@numBuffer& (0+255),w,b
  8964  000E06  A4D8               	btfss	status,2,c
  8965  000E08  D053               	goto	l6556
  8966                           
  8967                           ; BSR set to: 0
  8968  000E0A  2823               	incf	CANSetFilter@type,w,c
  8969  000E0C  A4D8               	btfss	status,2,c
  8970  000E0E  D050               	goto	l6556
  8971                           
  8972                           ; BSR set to: 0
  8973                           ;CANlib.h: 766: {
  8974                           ;CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  8975  000E10  010F               	movlb	15	; () banked
  8976  000E12  9705               	bcf	5,3,b	;volatile
  8977                           
  8978                           ; BSR set to: 15
  8979                           ;CANlib.h: 769: tamp = (filter >> 3);
  8980  000E14  C01F  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  8981  000E18  C020  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8982  000E1C  C021  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8983  000E20  C022  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8984  000E24  0E04               	movlw	4
  8985  000E26  D006               	goto	u8800
  8986  000E28                     u8805:
  8987  000E28  0100               	movlb	0	; () banked
  8988  000E2A  90D8               	bcf	status,0,c
  8989  000E2C  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8990  000E2E  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8991  000E30  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8992  000E32  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  8993  000E34                     u8800:
  8994  000E34  2EE8               	decfsz	wreg,f,c
  8995  000E36  D7F8               	goto	u8805
  8996  000E38  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  8997  000E3C  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8998  000E40  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8999  000E44  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;CANlib.h: 770: tamp = tamp & 0x000000FF;
  9003  000E48  0100               	movlb	0	; () banked
  9004  000E4A  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  9005  000E4C  0100               	movlb	0	; () banked
  9006  000E4E  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9007  000E50  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9008  000E52  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9009  000E54  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9010                           
  9011                           ; BSR set to: 0
  9012                           ;CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  9013  000E56  C065  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  9014                           
  9015                           ; BSR set to: 0
  9016                           ;CANlib.h: 773: tamp = filter & 0x00000007;
  9017  000E5A  0E07               	movlw	7
  9018  000E5C  141F               	andwf	CANSetFilter@filter,w,c
  9019  000E5E  0100               	movlb	0	; () banked
  9020  000E60  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9021  000E62  0E00               	movlw	0
  9022  000E64  1420               	andwf	CANSetFilter@filter+1,w,c
  9023  000E66  0100               	movlb	0	; () banked
  9024  000E68  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9025  000E6A  0E00               	movlw	0
  9026  000E6C  1421               	andwf	CANSetFilter@filter+2,w,c
  9027  000E6E  0100               	movlb	0	; () banked
  9028  000E70  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9029  000E72  0E00               	movlw	0
  9030  000E74  1422               	andwf	CANSetFilter@filter+3,w,c
  9031  000E76  0100               	movlb	0	; () banked
  9032  000E78  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;CANlib.h: 774: tamp = tamp << 5;
  9036  000E7A  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  9037  000E7E  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9038  000E82  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9039  000E86  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9040  000E8A  0E05               	movlw	5
  9041  000E8C                     u8815:
  9042  000E8C  90D8               	bcf	status,0,c
  9043  000E8E  0100               	movlb	0	; () banked
  9044  000E90  3760               	rlcf	??_CANSetFilter& (0+255),f,b
  9045  000E92  3761               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9046  000E94  3762               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9047  000E96  3763               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9048  000E98  2EE8               	decfsz	wreg,f,c
  9049  000E9A  D7F8               	goto	u8815
  9050  000E9C  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  9051  000EA0  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9052  000EA4  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9053  000EA8  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  9057  000EAC  C065  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  9058  000EB0                     l6556:
  9059                           
  9060                           ; BSR set to: 0
  9061                           ;CANlib.h: 776: }
  9062                           ;CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  9063  000EB0  0E02               	movlw	2
  9064  000EB2  0100               	movlb	0	; () banked
  9065  000EB4  1964               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9066  000EB6  A4D8               	btfss	status,2,c
  9067  000EB8  D053               	goto	l6574
  9068                           
  9069                           ; BSR set to: 0
  9070  000EBA  2823               	incf	CANSetFilter@type,w,c
  9071  000EBC  A4D8               	btfss	status,2,c
  9072  000EBE  D050               	goto	l6574
  9073                           
  9074                           ; BSR set to: 0
  9075                           ;CANlib.h: 779: {
  9076                           ;CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  9077  000EC0  010F               	movlb	15	; () banked
  9078  000EC2  9709               	bcf	9,3,b	;volatile
  9079                           
  9080                           ; BSR set to: 15
  9081                           ;CANlib.h: 782: tamp = (filter >> 3);
  9082  000EC4  C01F  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  9083  000EC8  C020  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9084  000ECC  C021  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9085  000ED0  C022  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9086  000ED4  0E04               	movlw	4
  9087  000ED6  D006               	goto	u8840
  9088  000ED8                     u8845:
  9089  000ED8  0100               	movlb	0	; () banked
  9090  000EDA  90D8               	bcf	status,0,c
  9091  000EDC  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9092  000EDE  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9093  000EE0  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9094  000EE2  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  9095  000EE4                     u8840:
  9096  000EE4  2EE8               	decfsz	wreg,f,c
  9097  000EE6  D7F8               	goto	u8845
  9098  000EE8  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  9099  000EEC  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9100  000EF0  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9101  000EF4  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;CANlib.h: 783: tamp = tamp & 0x000000FF;
  9105  000EF8  0100               	movlb	0	; () banked
  9106  000EFA  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  9107  000EFC  0100               	movlb	0	; () banked
  9108  000EFE  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9109  000F00  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9110  000F02  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9111  000F04  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9112                           
  9113                           ; BSR set to: 0
  9114                           ;CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  9115  000F06  C065  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  9116                           
  9117                           ; BSR set to: 0
  9118                           ;CANlib.h: 786: tamp = filter & 0x00000007;
  9119  000F0A  0E07               	movlw	7
  9120  000F0C  141F               	andwf	CANSetFilter@filter,w,c
  9121  000F0E  0100               	movlb	0	; () banked
  9122  000F10  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9123  000F12  0E00               	movlw	0
  9124  000F14  1420               	andwf	CANSetFilter@filter+1,w,c
  9125  000F16  0100               	movlb	0	; () banked
  9126  000F18  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9127  000F1A  0E00               	movlw	0
  9128  000F1C  1421               	andwf	CANSetFilter@filter+2,w,c
  9129  000F1E  0100               	movlb	0	; () banked
  9130  000F20  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9131  000F22  0E00               	movlw	0
  9132  000F24  1422               	andwf	CANSetFilter@filter+3,w,c
  9133  000F26  0100               	movlb	0	; () banked
  9134  000F28  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9135                           
  9136                           ; BSR set to: 0
  9137                           ;CANlib.h: 787: tamp = tamp << 5;
  9138  000F2A  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  9139  000F2E  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9140  000F32  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9141  000F36  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9142  000F3A  0E05               	movlw	5
  9143  000F3C                     u8855:
  9144  000F3C  90D8               	bcf	status,0,c
  9145  000F3E  0100               	movlb	0	; () banked
  9146  000F40  3760               	rlcf	??_CANSetFilter& (0+255),f,b
  9147  000F42  3761               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9148  000F44  3762               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9149  000F46  3763               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9150  000F48  2EE8               	decfsz	wreg,f,c
  9151  000F4A  D7F8               	goto	u8855
  9152  000F4C  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  9153  000F50  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9154  000F54  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9155  000F58  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9156                           
  9157                           ; BSR set to: 0
  9158                           ;CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  9159  000F5C  C065  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  9160  000F60                     l6574:
  9161                           
  9162                           ; BSR set to: 0
  9163                           ;CANlib.h: 789: }
  9164                           ;CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  9165  000F60  0E03               	movlw	3
  9166  000F62  0100               	movlb	0	; () banked
  9167  000F64  1964               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9168  000F66  A4D8               	btfss	status,2,c
  9169  000F68  D053               	goto	l6592
  9170                           
  9171                           ; BSR set to: 0
  9172  000F6A  2823               	incf	CANSetFilter@type,w,c
  9173  000F6C  A4D8               	btfss	status,2,c
  9174  000F6E  D050               	goto	l6592
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;CANlib.h: 792: {
  9178                           ;CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  9179  000F70  010F               	movlb	15	; () banked
  9180  000F72  970D               	bcf	13,3,b	;volatile
  9181                           
  9182                           ; BSR set to: 15
  9183                           ;CANlib.h: 795: tamp = (filter >> 3);
  9184  000F74  C01F  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  9185  000F78  C020  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9186  000F7C  C021  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9187  000F80  C022  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9188  000F84  0E04               	movlw	4
  9189  000F86  D006               	goto	u8880
  9190  000F88                     u8885:
  9191  000F88  0100               	movlb	0	; () banked
  9192  000F8A  90D8               	bcf	status,0,c
  9193  000F8C  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9194  000F8E  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9195  000F90  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9196  000F92  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  9197  000F94                     u8880:
  9198  000F94  2EE8               	decfsz	wreg,f,c
  9199  000F96  D7F8               	goto	u8885
  9200  000F98  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  9201  000F9C  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9202  000FA0  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9203  000FA4  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;CANlib.h: 796: tamp = tamp & 0x000000FF;
  9207  000FA8  0100               	movlb	0	; () banked
  9208  000FAA  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  9209  000FAC  0100               	movlb	0	; () banked
  9210  000FAE  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9211  000FB0  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9212  000FB2  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9213  000FB4  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  9217  000FB6  C065  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;CANlib.h: 799: tamp = filter & 0x00000007;
  9221  000FBA  0E07               	movlw	7
  9222  000FBC  141F               	andwf	CANSetFilter@filter,w,c
  9223  000FBE  0100               	movlb	0	; () banked
  9224  000FC0  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9225  000FC2  0E00               	movlw	0
  9226  000FC4  1420               	andwf	CANSetFilter@filter+1,w,c
  9227  000FC6  0100               	movlb	0	; () banked
  9228  000FC8  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9229  000FCA  0E00               	movlw	0
  9230  000FCC  1421               	andwf	CANSetFilter@filter+2,w,c
  9231  000FCE  0100               	movlb	0	; () banked
  9232  000FD0  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9233  000FD2  0E00               	movlw	0
  9234  000FD4  1422               	andwf	CANSetFilter@filter+3,w,c
  9235  000FD6  0100               	movlb	0	; () banked
  9236  000FD8  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;CANlib.h: 800: tamp = tamp << 5;
  9240  000FDA  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  9241  000FDE  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9242  000FE2  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9243  000FE6  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9244  000FEA  0E05               	movlw	5
  9245  000FEC                     u8895:
  9246  000FEC  90D8               	bcf	status,0,c
  9247  000FEE  0100               	movlb	0	; () banked
  9248  000FF0  3760               	rlcf	??_CANSetFilter& (0+255),f,b
  9249  000FF2  3761               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9250  000FF4  3762               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9251  000FF6  3763               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9252  000FF8  2EE8               	decfsz	wreg,f,c
  9253  000FFA  D7F8               	goto	u8895
  9254  000FFC  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  9255  001000  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9256  001004  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9257  001008  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9258                           
  9259                           ; BSR set to: 0
  9260                           ;CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  9261  00100C  C065  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  9262  001010                     l6592:
  9263                           
  9264                           ; BSR set to: 0
  9265                           ;CANlib.h: 802: }
  9266                           ;CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  9267  001010  0E04               	movlw	4
  9268  001012  0100               	movlb	0	; () banked
  9269  001014  1964               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9270  001016  A4D8               	btfss	status,2,c
  9271  001018  D053               	goto	l6610
  9272                           
  9273                           ; BSR set to: 0
  9274  00101A  2823               	incf	CANSetFilter@type,w,c
  9275  00101C  A4D8               	btfss	status,2,c
  9276  00101E  D050               	goto	l6610
  9277                           
  9278                           ; BSR set to: 0
  9279                           ;CANlib.h: 805: {
  9280                           ;CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  9281  001020  010F               	movlb	15	; () banked
  9282  001022  9711               	bcf	17,3,b	;volatile
  9283                           
  9284                           ; BSR set to: 15
  9285                           ;CANlib.h: 808: tamp = (filter >> 3);
  9286  001024  C01F  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  9287  001028  C020  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9288  00102C  C021  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9289  001030  C022  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9290  001034  0E04               	movlw	4
  9291  001036  D006               	goto	u8920
  9292  001038                     u8925:
  9293  001038  0100               	movlb	0	; () banked
  9294  00103A  90D8               	bcf	status,0,c
  9295  00103C  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9296  00103E  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9297  001040  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9298  001042  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  9299  001044                     u8920:
  9300  001044  2EE8               	decfsz	wreg,f,c
  9301  001046  D7F8               	goto	u8925
  9302  001048  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  9303  00104C  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9304  001050  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9305  001054  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;CANlib.h: 809: tamp = tamp & 0x000000FF;
  9309  001058  0100               	movlb	0	; () banked
  9310  00105A  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  9311  00105C  0100               	movlb	0	; () banked
  9312  00105E  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9313  001060  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9314  001062  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9315  001064  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9316                           
  9317                           ; BSR set to: 0
  9318                           ;CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  9319  001066  C065  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  9320                           
  9321                           ; BSR set to: 0
  9322                           ;CANlib.h: 812: tamp = filter & 0x00000007;
  9323  00106A  0E07               	movlw	7
  9324  00106C  141F               	andwf	CANSetFilter@filter,w,c
  9325  00106E  0100               	movlb	0	; () banked
  9326  001070  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9327  001072  0E00               	movlw	0
  9328  001074  1420               	andwf	CANSetFilter@filter+1,w,c
  9329  001076  0100               	movlb	0	; () banked
  9330  001078  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9331  00107A  0E00               	movlw	0
  9332  00107C  1421               	andwf	CANSetFilter@filter+2,w,c
  9333  00107E  0100               	movlb	0	; () banked
  9334  001080  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9335  001082  0E00               	movlw	0
  9336  001084  1422               	andwf	CANSetFilter@filter+3,w,c
  9337  001086  0100               	movlb	0	; () banked
  9338  001088  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9339                           
  9340                           ; BSR set to: 0
  9341                           ;CANlib.h: 813: tamp = tamp << 5;
  9342  00108A  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  9343  00108E  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9344  001092  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9345  001096  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9346  00109A  0E05               	movlw	5
  9347  00109C                     u8935:
  9348  00109C  90D8               	bcf	status,0,c
  9349  00109E  0100               	movlb	0	; () banked
  9350  0010A0  3760               	rlcf	??_CANSetFilter& (0+255),f,b
  9351  0010A2  3761               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9352  0010A4  3762               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9353  0010A6  3763               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9354  0010A8  2EE8               	decfsz	wreg,f,c
  9355  0010AA  D7F8               	goto	u8935
  9356  0010AC  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  9357  0010B0  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9358  0010B4  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9359  0010B8  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9360                           
  9361                           ; BSR set to: 0
  9362                           ;CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  9363  0010BC  C065  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  9364  0010C0                     l6610:
  9365                           
  9366                           ; BSR set to: 0
  9367                           ;CANlib.h: 815: }
  9368                           ;CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  9369  0010C0  0E05               	movlw	5
  9370  0010C2  0100               	movlb	0	; () banked
  9371  0010C4  1964               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9372  0010C6  A4D8               	btfss	status,2,c
  9373  0010C8  D053               	goto	l6628
  9374                           
  9375                           ; BSR set to: 0
  9376  0010CA  2823               	incf	CANSetFilter@type,w,c
  9377  0010CC  A4D8               	btfss	status,2,c
  9378  0010CE  D050               	goto	l6628
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;CANlib.h: 818: {
  9382                           ;CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  9383  0010D0  010F               	movlb	15	; () banked
  9384  0010D2  9715               	bcf	21,3,b	;volatile
  9385                           
  9386                           ; BSR set to: 15
  9387                           ;CANlib.h: 821: tamp = (filter >> 3);
  9388  0010D4  C01F  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  9389  0010D8  C020  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9390  0010DC  C021  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9391  0010E0  C022  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9392  0010E4  0E04               	movlw	4
  9393  0010E6  D006               	goto	u8960
  9394  0010E8                     u8965:
  9395  0010E8  0100               	movlb	0	; () banked
  9396  0010EA  90D8               	bcf	status,0,c
  9397  0010EC  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9398  0010EE  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9399  0010F0  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9400  0010F2  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  9401  0010F4                     u8960:
  9402  0010F4  2EE8               	decfsz	wreg,f,c
  9403  0010F6  D7F8               	goto	u8965
  9404  0010F8  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  9405  0010FC  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9406  001100  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9407  001104  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;CANlib.h: 822: tamp = tamp & 0x000000FF;
  9411  001108  0100               	movlb	0	; () banked
  9412  00110A  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  9413  00110C  0100               	movlb	0	; () banked
  9414  00110E  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9415  001110  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9416  001112  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9417  001114  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  9421  001116  C065  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  9422                           
  9423                           ; BSR set to: 0
  9424                           ;CANlib.h: 825: tamp = filter & 0x00000007;
  9425  00111A  0E07               	movlw	7
  9426  00111C  141F               	andwf	CANSetFilter@filter,w,c
  9427  00111E  0100               	movlb	0	; () banked
  9428  001120  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9429  001122  0E00               	movlw	0
  9430  001124  1420               	andwf	CANSetFilter@filter+1,w,c
  9431  001126  0100               	movlb	0	; () banked
  9432  001128  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9433  00112A  0E00               	movlw	0
  9434  00112C  1421               	andwf	CANSetFilter@filter+2,w,c
  9435  00112E  0100               	movlb	0	; () banked
  9436  001130  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9437  001132  0E00               	movlw	0
  9438  001134  1422               	andwf	CANSetFilter@filter+3,w,c
  9439  001136  0100               	movlb	0	; () banked
  9440  001138  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;CANlib.h: 826: tamp = tamp << 5;
  9444  00113A  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  9445  00113E  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9446  001142  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9447  001146  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9448  00114A  0E05               	movlw	5
  9449  00114C                     u8975:
  9450  00114C  90D8               	bcf	status,0,c
  9451  00114E  0100               	movlb	0	; () banked
  9452  001150  3760               	rlcf	??_CANSetFilter& (0+255),f,b
  9453  001152  3761               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9454  001154  3762               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9455  001156  3763               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9456  001158  2EE8               	decfsz	wreg,f,c
  9457  00115A  D7F8               	goto	u8975
  9458  00115C  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  9459  001160  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9460  001164  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9461  001168  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9462                           
  9463                           ; BSR set to: 0
  9464                           ;CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  9465  00116C  C065  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  9466  001170                     l6628:
  9467                           
  9468                           ; BSR set to: 0
  9469                           ;CANlib.h: 828: }
  9470                           ;CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  9471  001170  0100               	movlb	0	; () banked
  9472  001172  5164               	movf	CANSetFilter@numBuffer& (0+255),w,b
  9473  001174  0100               	movlb	0	; () banked
  9474  001176  A4D8               	btfss	status,2,c
  9475  001178  D07E               	goto	l6662
  9476                           
  9477                           ; BSR set to: 0
  9478  00117A  0EF7               	movlw	247
  9479  00117C  1823               	xorwf	CANSetFilter@type,w,c
  9480  00117E  A4D8               	btfss	status,2,c
  9481  001180  D07A               	goto	l6662
  9482                           
  9483                           ; BSR set to: 0
  9484                           ;CANlib.h: 832: {
  9485                           ;CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  9486  001182  010F               	movlb	15	; () banked
  9487  001184  8701               	bsf	1,3,b	;volatile
  9488                           
  9489                           ; BSR set to: 15
  9490                           ;CANlib.h: 835: tamp = filter & 0x000000FF;
  9491  001186  501F               	movf	CANSetFilter@filter,w,c
  9492  001188  0100               	movlb	0	; () banked
  9493  00118A  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9494  00118C  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9495  00118E  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9496  001190  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9497                           
  9498                           ; BSR set to: 0
  9499                           ;CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  9500  001192  C065  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  9501                           
  9502                           ; BSR set to: 0
  9503                           ;CANlib.h: 838: tamp = filter & 0x0000FF00;
  9504  001196  0E00               	movlw	0
  9505  001198  141F               	andwf	CANSetFilter@filter,w,c
  9506  00119A  0100               	movlb	0	; () banked
  9507  00119C  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9508  00119E  0EFF               	movlw	255
  9509  0011A0  1420               	andwf	CANSetFilter@filter+1,w,c
  9510  0011A2  0100               	movlb	0	; () banked
  9511  0011A4  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9512  0011A6  0E00               	movlw	0
  9513  0011A8  1421               	andwf	CANSetFilter@filter+2,w,c
  9514  0011AA  0100               	movlb	0	; () banked
  9515  0011AC  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9516  0011AE  0E00               	movlw	0
  9517  0011B0  1422               	andwf	CANSetFilter@filter+3,w,c
  9518  0011B2  0100               	movlb	0	; () banked
  9519  0011B4  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9520                           
  9521                           ; BSR set to: 0
  9522                           ;CANlib.h: 839: tamp = tamp >> 8;
  9523  0011B6  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  9524  0011BA  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9525  0011BE  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9526  0011C2  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9527  0011C6  C061  F060         	movff	??_CANSetFilter+1,??_CANSetFilter
  9528  0011CA  C062  F061         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  9529  0011CE  C063  F062         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  9530  0011D2  0100               	movlb	0	; () banked
  9531  0011D4  6B63               	clrf	(??_CANSetFilter+3)& (0+255),b
  9532  0011D6  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  9533  0011DA  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9534  0011DE  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9535  0011E2  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9536                           
  9537                           ; BSR set to: 0
  9538                           ;CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  9539  0011E6  C065  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  9540                           
  9541                           ; BSR set to: 0
  9542                           ;CANlib.h: 842: if (filter & 0x00010000)
  9543  0011EA  A021               	btfss	CANSetFilter@filter+2,0,c
  9544  0011EC  D003               	goto	l469
  9545                           
  9546                           ; BSR set to: 0
  9547                           ;CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  9548  0011EE  010F               	movlb	15	; () banked
  9549  0011F0  8101               	bsf	1,0,b	;volatile
  9550  0011F2  D002               	goto	l470
  9551  0011F4                     l469:
  9552                           
  9553                           ; BSR set to: 0
  9554                           ;CANlib.h: 844: else
  9555                           ;CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  9556  0011F4  010F               	movlb	15	; () banked
  9557  0011F6  9101               	bcf	1,0,b	;volatile
  9558  0011F8                     l470:
  9559                           
  9560                           ; BSR set to: 15
  9561                           ;CANlib.h: 847: if (filter & 0x00020000)
  9562  0011F8  A221               	btfss	CANSetFilter@filter+2,1,c
  9563  0011FA  D003               	goto	l471
  9564                           
  9565                           ; BSR set to: 15
  9566                           ;CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  9567  0011FC  010F               	movlb	15	; () banked
  9568  0011FE  8301               	bsf	1,1,b	;volatile
  9569  001200  D002               	goto	l472
  9570  001202                     l471:
  9571                           
  9572                           ; BSR set to: 15
  9573                           ;CANlib.h: 849: else
  9574                           ;CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  9575  001202  010F               	movlb	15	; () banked
  9576  001204  9301               	bcf	1,1,b	;volatile
  9577  001206                     l472:
  9578                           
  9579                           ; BSR set to: 15
  9580                           ;CANlib.h: 852: if (filter & 0x00040000)
  9581  001206  A421               	btfss	CANSetFilter@filter+2,2,c
  9582  001208  D003               	goto	l473
  9583                           
  9584                           ; BSR set to: 15
  9585                           ;CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  9586  00120A  010F               	movlb	15	; () banked
  9587  00120C  8B01               	bsf	1,5,b	;volatile
  9588  00120E  D002               	goto	l474
  9589  001210                     l473:
  9590                           
  9591                           ; BSR set to: 15
  9592                           ;CANlib.h: 854: else
  9593                           ;CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  9594  001210  010F               	movlb	15	; () banked
  9595  001212  9B01               	bcf	1,5,b	;volatile
  9596  001214                     l474:
  9597                           
  9598                           ; BSR set to: 15
  9599                           ;CANlib.h: 857: if (filter & 0x00080000)
  9600  001214  A621               	btfss	CANSetFilter@filter+2,3,c
  9601  001216  D003               	goto	l475
  9602                           
  9603                           ; BSR set to: 15
  9604                           ;CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  9605  001218  010F               	movlb	15	; () banked
  9606  00121A  8D01               	bsf	1,6,b	;volatile
  9607  00121C  D002               	goto	l476
  9608  00121E                     l475:
  9609                           
  9610                           ; BSR set to: 15
  9611                           ;CANlib.h: 859: else
  9612                           ;CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  9613  00121E  010F               	movlb	15	; () banked
  9614  001220  9D01               	bcf	1,6,b	;volatile
  9615  001222                     l476:
  9616                           
  9617                           ; BSR set to: 15
  9618                           ;CANlib.h: 862: if (filter & 0x00100000)
  9619  001222  A821               	btfss	CANSetFilter@filter+2,4,c
  9620  001224  D003               	goto	l477
  9621                           
  9622                           ; BSR set to: 15
  9623                           ;CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  9624  001226  010F               	movlb	15	; () banked
  9625  001228  8F01               	bsf	1,7,b	;volatile
  9626  00122A  D002               	goto	l6656
  9627  00122C                     l477:
  9628                           
  9629                           ; BSR set to: 15
  9630                           ;CANlib.h: 864: else
  9631                           ;CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  9632  00122C  010F               	movlb	15	; () banked
  9633  00122E  9F01               	bcf	1,7,b	;volatile
  9634  001230                     l6656:
  9635                           
  9636                           ; BSR set to: 15
  9637                           ;CANlib.h: 867: tamp = (filter >> 21);
  9638  001230  C01F  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  9639  001234  C020  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9640  001238  C021  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9641  00123C  C022  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9642  001240  0E16               	movlw	22
  9643  001242  D006               	goto	u9050
  9644  001244                     u9055:
  9645  001244  0100               	movlb	0	; () banked
  9646  001246  90D8               	bcf	status,0,c
  9647  001248  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9648  00124A  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9649  00124C  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9650  00124E  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  9651  001250                     u9050:
  9652  001250  2EE8               	decfsz	wreg,f,c
  9653  001252  D7F8               	goto	u9055
  9654  001254  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  9655  001258  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9656  00125C  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9657  001260  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9658                           
  9659                           ; BSR set to: 0
  9660                           ;CANlib.h: 868: tamp = tamp & 0x000000FF;
  9661  001264  0100               	movlb	0	; () banked
  9662  001266  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  9663  001268  0100               	movlb	0	; () banked
  9664  00126A  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9665  00126C  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9666  00126E  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9667  001270  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9668                           
  9669                           ; BSR set to: 0
  9670                           ;CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  9671  001272  C065  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  9672  001276                     l6662:
  9673                           
  9674                           ; BSR set to: 0
  9675                           ;CANlib.h: 870: }
  9676                           ;CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  9677  001276  0100               	movlb	0	; () banked
  9678  001278  0564               	decf	CANSetFilter@numBuffer& (0+255),w,b
  9679  00127A  A4D8               	btfss	status,2,c
  9680  00127C  D07E               	goto	l6696
  9681                           
  9682                           ; BSR set to: 0
  9683  00127E  0EF7               	movlw	247
  9684  001280  1823               	xorwf	CANSetFilter@type,w,c
  9685  001282  A4D8               	btfss	status,2,c
  9686  001284  D07A               	goto	l6696
  9687                           
  9688                           ; BSR set to: 0
  9689                           ;CANlib.h: 873: {
  9690                           ;CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  9691  001286  010F               	movlb	15	; () banked
  9692  001288  8705               	bsf	5,3,b	;volatile
  9693                           
  9694                           ; BSR set to: 15
  9695                           ;CANlib.h: 876: tamp = filter & 0x000000FF;
  9696  00128A  501F               	movf	CANSetFilter@filter,w,c
  9697  00128C  0100               	movlb	0	; () banked
  9698  00128E  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9699  001290  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9700  001292  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9701  001294  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  9705  001296  C065  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  9706                           
  9707                           ; BSR set to: 0
  9708                           ;CANlib.h: 879: tamp = filter & 0x0000FF00;
  9709  00129A  0E00               	movlw	0
  9710  00129C  141F               	andwf	CANSetFilter@filter,w,c
  9711  00129E  0100               	movlb	0	; () banked
  9712  0012A0  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9713  0012A2  0EFF               	movlw	255
  9714  0012A4  1420               	andwf	CANSetFilter@filter+1,w,c
  9715  0012A6  0100               	movlb	0	; () banked
  9716  0012A8  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9717  0012AA  0E00               	movlw	0
  9718  0012AC  1421               	andwf	CANSetFilter@filter+2,w,c
  9719  0012AE  0100               	movlb	0	; () banked
  9720  0012B0  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9721  0012B2  0E00               	movlw	0
  9722  0012B4  1422               	andwf	CANSetFilter@filter+3,w,c
  9723  0012B6  0100               	movlb	0	; () banked
  9724  0012B8  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9725                           
  9726                           ; BSR set to: 0
  9727                           ;CANlib.h: 880: tamp = tamp >> 8;
  9728  0012BA  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  9729  0012BE  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9730  0012C2  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9731  0012C6  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9732  0012CA  C061  F060         	movff	??_CANSetFilter+1,??_CANSetFilter
  9733  0012CE  C062  F061         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  9734  0012D2  C063  F062         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  9735  0012D6  0100               	movlb	0	; () banked
  9736  0012D8  6B63               	clrf	(??_CANSetFilter+3)& (0+255),b
  9737  0012DA  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  9738  0012DE  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9739  0012E2  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9740  0012E6  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9741                           
  9742                           ; BSR set to: 0
  9743                           ;CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  9744  0012EA  C065  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  9745                           
  9746                           ; BSR set to: 0
  9747                           ;CANlib.h: 883: if (filter & 0x00010000)
  9748  0012EE  A021               	btfss	CANSetFilter@filter+2,0,c
  9749  0012F0  D003               	goto	l480
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  9753  0012F2  010F               	movlb	15	; () banked
  9754  0012F4  8105               	bsf	5,0,b	;volatile
  9755  0012F6  D002               	goto	l481
  9756  0012F8                     l480:
  9757                           
  9758                           ; BSR set to: 0
  9759                           ;CANlib.h: 885: else
  9760                           ;CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  9761  0012F8  010F               	movlb	15	; () banked
  9762  0012FA  9105               	bcf	5,0,b	;volatile
  9763  0012FC                     l481:
  9764                           
  9765                           ; BSR set to: 15
  9766                           ;CANlib.h: 888: if (filter & 0x00020000)
  9767  0012FC  A221               	btfss	CANSetFilter@filter+2,1,c
  9768  0012FE  D003               	goto	l482
  9769                           
  9770                           ; BSR set to: 15
  9771                           ;CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  9772  001300  010F               	movlb	15	; () banked
  9773  001302  8305               	bsf	5,1,b	;volatile
  9774  001304  D002               	goto	l483
  9775  001306                     l482:
  9776                           
  9777                           ; BSR set to: 15
  9778                           ;CANlib.h: 890: else
  9779                           ;CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  9780  001306  010F               	movlb	15	; () banked
  9781  001308  9305               	bcf	5,1,b	;volatile
  9782  00130A                     l483:
  9783                           
  9784                           ; BSR set to: 15
  9785                           ;CANlib.h: 893: if (filter & 0x00040000)
  9786  00130A  A421               	btfss	CANSetFilter@filter+2,2,c
  9787  00130C  D003               	goto	l484
  9788                           
  9789                           ; BSR set to: 15
  9790                           ;CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  9791  00130E  010F               	movlb	15	; () banked
  9792  001310  8B05               	bsf	5,5,b	;volatile
  9793  001312  D002               	goto	l485
  9794  001314                     l484:
  9795                           
  9796                           ; BSR set to: 15
  9797                           ;CANlib.h: 895: else
  9798                           ;CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  9799  001314  010F               	movlb	15	; () banked
  9800  001316  9B05               	bcf	5,5,b	;volatile
  9801  001318                     l485:
  9802                           
  9803                           ; BSR set to: 15
  9804                           ;CANlib.h: 898: if (filter & 0x00080000)
  9805  001318  A621               	btfss	CANSetFilter@filter+2,3,c
  9806  00131A  D003               	goto	l486
  9807                           
  9808                           ; BSR set to: 15
  9809                           ;CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  9810  00131C  010F               	movlb	15	; () banked
  9811  00131E  8D05               	bsf	5,6,b	;volatile
  9812  001320  D002               	goto	l487
  9813  001322                     l486:
  9814                           
  9815                           ; BSR set to: 15
  9816                           ;CANlib.h: 900: else
  9817                           ;CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  9818  001322  010F               	movlb	15	; () banked
  9819  001324  9D05               	bcf	5,6,b	;volatile
  9820  001326                     l487:
  9821                           
  9822                           ; BSR set to: 15
  9823                           ;CANlib.h: 903: if (filter & 0x00100000)
  9824  001326  A821               	btfss	CANSetFilter@filter+2,4,c
  9825  001328  D003               	goto	l488
  9826                           
  9827                           ; BSR set to: 15
  9828                           ;CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  9829  00132A  010F               	movlb	15	; () banked
  9830  00132C  8F05               	bsf	5,7,b	;volatile
  9831  00132E  D002               	goto	l6690
  9832  001330                     l488:
  9833                           
  9834                           ; BSR set to: 15
  9835                           ;CANlib.h: 905: else
  9836                           ;CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  9837  001330  010F               	movlb	15	; () banked
  9838  001332  9F05               	bcf	5,7,b	;volatile
  9839  001334                     l6690:
  9840                           
  9841                           ; BSR set to: 15
  9842                           ;CANlib.h: 908: tamp = (filter >> 21);
  9843  001334  C01F  F060         	movff	CANSetFilter@filter,??_CANSetFilter
  9844  001338  C020  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9845  00133C  C021  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9846  001340  C022  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9847  001344  0E16               	movlw	22
  9848  001346  D006               	goto	u9130
  9849  001348                     u9135:
  9850  001348  0100               	movlb	0	; () banked
  9851  00134A  90D8               	bcf	status,0,c
  9852  00134C  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9853  00134E  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9854  001350  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9855  001352  3360               	rrcf	??_CANSetFilter& (0+255),f,b
  9856  001354                     u9130:
  9857  001354  2EE8               	decfsz	wreg,f,c
  9858  001356  D7F8               	goto	u9135
  9859  001358  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  9860  00135C  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9861  001360  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9862  001364  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9863                           
  9864                           ; BSR set to: 0
  9865                           ;CANlib.h: 909: tamp = tamp & 0x000000FF;
  9866  001368  0100               	movlb	0	; () banked
  9867  00136A  5165               	movf	CANSetFilter@tamp& (0+255),w,b
  9868  00136C  0100               	movlb	0	; () banked
  9869  00136E  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9870  001370  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9871  001372  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9872  001374  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9873                           
  9874                           ; BSR set to: 0
  9875                           ;CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  9876  001376  C065  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  9877  00137A                     l6696:
  9878                           
  9879                           ; BSR set to: 0
  9880                           ;CANlib.h: 911: }
  9881                           ;CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  9882  00137A  0E02               	movlw	2
  9883  00137C  0100               	movlb	0	; () banked
  9884  00137E  1964               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9885  001380  A4D8               	btfss	status,2,c
  9886  001382  D07E               	goto	l6730
  9887                           
  9888                           ; BSR set to: 0
  9889  001384  0EF7               	movlw	247
  9890  001386  1823               	xorwf	CANSetFilter@type,w,c
  9891  001388  A4D8               	btfss	status,2,c
  9892  00138A  D07A               	goto	l6730
  9893                           
  9894                           ; BSR set to: 0
  9895                           ;CANlib.h: 915: {
  9896                           ;CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  9897  00138C  010F               	movlb	15	; () banked
  9898  00138E  8709               	bsf	9,3,b	;volatile
  9899                           
  9900                           ; BSR set to: 15
  9901                           ;CANlib.h: 918: tamp = filter & 0x000000FF;
  9902  001390  501F               	movf	CANSetFilter@filter,w,c
  9903  001392  0100               	movlb	0	; () banked
  9904  001394  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9905  001396  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9906  001398  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9907  00139A  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9908                           
  9909                           ; BSR set to: 0
  9910                           ;CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  9911  00139C  C065  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;CANlib.h: 921: tamp = filter & 0x0000FF00;
  9915  0013A0  0E00               	movlw	0
  9916  0013A2  141F               	andwf	CANSetFilter@filter,w,c
  9917  0013A4  0100               	movlb	0	; () banked
  9918  0013A6  6F65               	movwf	CANSetFilter@tamp& (0+255),b
  9919  0013A8  0EFF               	movlw	255
  9920  0013AA  1420               	andwf	CANSetFilter@filter+1,w,c
  9921  0013AC  0100               	movlb	0	; () banked
  9922  0013AE  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9923  0013B0  0E00               	movlw	0
  9924  0013B2  1421               	andwf	CANSetFilter@filter+2,w,c
  9925  0013B4  0100               	movlb	0	; () banked
  9926  0013B6  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9927  0013B8  0E00               	movlw	0
  9928  0013BA  1422               	andwf	CANSetFilter@filter+3,w,c
  9929  0013BC  0100               	movlb	0	; () banked
  9930  0013BE  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9931                           
  9932                           ; BSR set to: 0
  9933                           ;CANlib.h: 922: tamp = tamp >> 8;
  9934  0013C0  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
  9935  0013C4  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9936  0013C8  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9937  0013CC  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9938  0013D0  C061  F060         	movff	??_CANSetFilter+1,??_CANSetFilter
  9939  0013D4  C062  F061         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  9940  0013D8  C063  F062         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  9941  0013DC  0100               	movlb	0	; () banked
  9942  0013DE  6B63               	clrf	(??_CANSetFilter+3)& (0+255),b
  9943  0013E0  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
  9944  0013E4  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9945  0013E8  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9946  0013EC  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9947                           
  9948                           ; BSR set to: 0
  9949                           ;CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  9950  0013F0  C065  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  9951                           
  9952                           ; BSR set to: 0
  9953                           ;CANlib.h: 925: if (filter & 0x00010000)
  9954  0013F4  A021               	btfss	CANSetFilter@filter+2,0,c
  9955  0013F6  D003               	goto	l491
  9956                           
  9957                           ; BSR set to: 0
  9958                           ;CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  9959  0013F8  010F               	movlb	15	; () banked
  9960  0013FA  8109               	bsf	9,0,b	;volatile
  9961  0013FC  D002               	goto	l492
  9962  0013FE                     l491:
  9963                           
  9964                           ; BSR set to: 0
  9965                           ;CANlib.h: 927: else
  9966                           ;CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  9967  0013FE  010F               	movlb	15	; () banked
  9968  001400  9109               	bcf	9,0,b	;volatile
  9969  001402                     l492:
  9970                           
  9971                           ; BSR set to: 15
  9972                           ;CANlib.h: 930: if (filter & 0x00020000)
  9973  001402  A221               	btfss	CANSetFilter@filter+2,1,c
  9974  001404  D003               	goto	l493
  9975                           
  9976                           ; BSR set to: 15
  9977                           ;CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  9978  001406  010F               	movlb	15	; () banked
  9979  001408  8309               	bsf	9,1,b	;volatile
  9980  00140A  D002               	goto	l494
  9981  00140C                     l493:
  9982                           
  9983                           ; BSR set to: 15
  9984                           ;CANlib.h: 932: else
  9985                           ;CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  9986  00140C  010F               	movlb	15	; () banked
  9987  00140E  9309               	bcf	9,1,b	;volatile
  9988  001410                     l494:
  9989                           
  9990                           ; BSR set to: 15
  9991                           ;CANlib.h: 935: if (filter & 0x00040000)
  9992  001410  A421               	btfss	CANSetFilter@filter+2,2,c
  9993  001412  D003               	goto	l495
  9994                           
  9995                           ; BSR set to: 15
  9996                           ;CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  9997  001414  010F               	movlb	15	; () banked
  9998  001416  8B09               	bsf	9,5,b	;volatile
  9999  001418  D002               	goto	l496
 10000  00141A                     l495:
 10001                           
 10002                           ; BSR set to: 15
 10003                           ;CANlib.h: 937: else
 10004                           ;CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
 10005  00141A  010F               	movlb	15	; () banked
 10006  00141C  9B09               	bcf	9,5,b	;volatile
 10007  00141E                     l496:
 10008                           
 10009                           ; BSR set to: 15
 10010                           ;CANlib.h: 940: if (filter & 0x00080000)
 10011  00141E  A621               	btfss	CANSetFilter@filter+2,3,c
 10012  001420  D003               	goto	l497
 10013                           
 10014                           ; BSR set to: 15
 10015                           ;CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
 10016  001422  010F               	movlb	15	; () banked
 10017  001424  8D09               	bsf	9,6,b	;volatile
 10018  001426  D002               	goto	l498
 10019  001428                     l497:
 10020                           
 10021                           ; BSR set to: 15
 10022                           ;CANlib.h: 942: else
 10023                           ;CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
 10024  001428  010F               	movlb	15	; () banked
 10025  00142A  9D09               	bcf	9,6,b	;volatile
 10026  00142C                     l498:
 10027                           
 10028                           ; BSR set to: 15
 10029                           ;CANlib.h: 945: if (filter & 0x00100000)
 10030  00142C  A821               	btfss	CANSetFilter@filter+2,4,c
 10031  00142E  D003               	goto	l499
 10032                           
 10033                           ; BSR set to: 15
 10034                           ;CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
 10035  001430  010F               	movlb	15	; () banked
 10036  001432  8F09               	bsf	9,7,b	;volatile
 10037  001434  D002               	goto	l6724
 10038  001436                     l499:
 10039                           
 10040                           ; BSR set to: 15
 10041                           ;CANlib.h: 947: else
 10042                           ;CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
 10043  001436  010F               	movlb	15	; () banked
 10044  001438  9F09               	bcf	9,7,b	;volatile
 10045  00143A                     l6724:
 10046                           
 10047                           ; BSR set to: 15
 10048                           ;CANlib.h: 950: tamp = (filter >> 21);
 10049  00143A  C01F  F060         	movff	CANSetFilter@filter,??_CANSetFilter
 10050  00143E  C020  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10051  001442  C021  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10052  001446  C022  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10053  00144A  0E16               	movlw	22
 10054  00144C  D006               	goto	u9210
 10055  00144E                     u9215:
 10056  00144E  0100               	movlb	0	; () banked
 10057  001450  90D8               	bcf	status,0,c
 10058  001452  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10059  001454  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10060  001456  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10061  001458  3360               	rrcf	??_CANSetFilter& (0+255),f,b
 10062  00145A                     u9210:
 10063  00145A  2EE8               	decfsz	wreg,f,c
 10064  00145C  D7F8               	goto	u9215
 10065  00145E  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
 10066  001462  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10067  001466  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10068  00146A  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10069                           
 10070                           ; BSR set to: 0
 10071                           ;CANlib.h: 951: tamp = tamp & 0x000000FF;
 10072  00146E  0100               	movlb	0	; () banked
 10073  001470  5165               	movf	CANSetFilter@tamp& (0+255),w,b
 10074  001472  0100               	movlb	0	; () banked
 10075  001474  6F65               	movwf	CANSetFilter@tamp& (0+255),b
 10076  001476  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10077  001478  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10078  00147A  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10079                           
 10080                           ; BSR set to: 0
 10081                           ;CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
 10082  00147C  C065  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 10083  001480                     l6730:
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;CANlib.h: 953: }
 10087                           ;CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 10088  001480  0E03               	movlw	3
 10089  001482  0100               	movlb	0	; () banked
 10090  001484  1964               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10091  001486  A4D8               	btfss	status,2,c
 10092  001488  D07E               	goto	l6764
 10093                           
 10094                           ; BSR set to: 0
 10095  00148A  0EF7               	movlw	247
 10096  00148C  1823               	xorwf	CANSetFilter@type,w,c
 10097  00148E  A4D8               	btfss	status,2,c
 10098  001490  D07A               	goto	l6764
 10099                           
 10100                           ; BSR set to: 0
 10101                           ;CANlib.h: 956: {
 10102                           ;CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
 10103  001492  010F               	movlb	15	; () banked
 10104  001494  870D               	bsf	13,3,b	;volatile
 10105                           
 10106                           ; BSR set to: 15
 10107                           ;CANlib.h: 959: tamp = filter & 0x000000FF;
 10108  001496  501F               	movf	CANSetFilter@filter,w,c
 10109  001498  0100               	movlb	0	; () banked
 10110  00149A  6F65               	movwf	CANSetFilter@tamp& (0+255),b
 10111  00149C  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10112  00149E  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10113  0014A0  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
 10117  0014A2  C065  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 10118                           
 10119                           ; BSR set to: 0
 10120                           ;CANlib.h: 962: tamp = filter & 0x0000FF00;
 10121  0014A6  0E00               	movlw	0
 10122  0014A8  141F               	andwf	CANSetFilter@filter,w,c
 10123  0014AA  0100               	movlb	0	; () banked
 10124  0014AC  6F65               	movwf	CANSetFilter@tamp& (0+255),b
 10125  0014AE  0EFF               	movlw	255
 10126  0014B0  1420               	andwf	CANSetFilter@filter+1,w,c
 10127  0014B2  0100               	movlb	0	; () banked
 10128  0014B4  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10129  0014B6  0E00               	movlw	0
 10130  0014B8  1421               	andwf	CANSetFilter@filter+2,w,c
 10131  0014BA  0100               	movlb	0	; () banked
 10132  0014BC  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10133  0014BE  0E00               	movlw	0
 10134  0014C0  1422               	andwf	CANSetFilter@filter+3,w,c
 10135  0014C2  0100               	movlb	0	; () banked
 10136  0014C4  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10137                           
 10138                           ; BSR set to: 0
 10139                           ;CANlib.h: 963: tamp = tamp >> 8;
 10140  0014C6  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
 10141  0014CA  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10142  0014CE  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10143  0014D2  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10144  0014D6  C061  F060         	movff	??_CANSetFilter+1,??_CANSetFilter
 10145  0014DA  C062  F061         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10146  0014DE  C063  F062         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10147  0014E2  0100               	movlb	0	; () banked
 10148  0014E4  6B63               	clrf	(??_CANSetFilter+3)& (0+255),b
 10149  0014E6  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
 10150  0014EA  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10151  0014EE  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10152  0014F2  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10153                           
 10154                           ; BSR set to: 0
 10155                           ;CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
 10156  0014F6  C065  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 10157                           
 10158                           ; BSR set to: 0
 10159                           ;CANlib.h: 966: if (filter & 0x00010000)
 10160  0014FA  A021               	btfss	CANSetFilter@filter+2,0,c
 10161  0014FC  D003               	goto	l502
 10162                           
 10163                           ; BSR set to: 0
 10164                           ;CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
 10165  0014FE  010F               	movlb	15	; () banked
 10166  001500  810D               	bsf	13,0,b	;volatile
 10167  001502  D002               	goto	l503
 10168  001504                     l502:
 10169                           
 10170                           ; BSR set to: 0
 10171                           ;CANlib.h: 968: else
 10172                           ;CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
 10173  001504  010F               	movlb	15	; () banked
 10174  001506  910D               	bcf	13,0,b	;volatile
 10175  001508                     l503:
 10176                           
 10177                           ; BSR set to: 15
 10178                           ;CANlib.h: 971: if (filter & 0x00020000)
 10179  001508  A221               	btfss	CANSetFilter@filter+2,1,c
 10180  00150A  D003               	goto	l504
 10181                           
 10182                           ; BSR set to: 15
 10183                           ;CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
 10184  00150C  010F               	movlb	15	; () banked
 10185  00150E  830D               	bsf	13,1,b	;volatile
 10186  001510  D002               	goto	l505
 10187  001512                     l504:
 10188                           
 10189                           ; BSR set to: 15
 10190                           ;CANlib.h: 973: else
 10191                           ;CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
 10192  001512  010F               	movlb	15	; () banked
 10193  001514  930D               	bcf	13,1,b	;volatile
 10194  001516                     l505:
 10195                           
 10196                           ; BSR set to: 15
 10197                           ;CANlib.h: 976: if (filter & 0x00040000)
 10198  001516  A421               	btfss	CANSetFilter@filter+2,2,c
 10199  001518  D003               	goto	l506
 10200                           
 10201                           ; BSR set to: 15
 10202                           ;CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
 10203  00151A  010F               	movlb	15	; () banked
 10204  00151C  8B0D               	bsf	13,5,b	;volatile
 10205  00151E  D002               	goto	l507
 10206  001520                     l506:
 10207                           
 10208                           ; BSR set to: 15
 10209                           ;CANlib.h: 978: else
 10210                           ;CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
 10211  001520  010F               	movlb	15	; () banked
 10212  001522  9B0D               	bcf	13,5,b	;volatile
 10213  001524                     l507:
 10214                           
 10215                           ; BSR set to: 15
 10216                           ;CANlib.h: 981: if (filter & 0x00080000)
 10217  001524  A621               	btfss	CANSetFilter@filter+2,3,c
 10218  001526  D003               	goto	l508
 10219                           
 10220                           ; BSR set to: 15
 10221                           ;CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
 10222  001528  010F               	movlb	15	; () banked
 10223  00152A  8D0D               	bsf	13,6,b	;volatile
 10224  00152C  D002               	goto	l509
 10225  00152E                     l508:
 10226                           
 10227                           ; BSR set to: 15
 10228                           ;CANlib.h: 983: else
 10229                           ;CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
 10230  00152E  010F               	movlb	15	; () banked
 10231  001530  9D0D               	bcf	13,6,b	;volatile
 10232  001532                     l509:
 10233                           
 10234                           ; BSR set to: 15
 10235                           ;CANlib.h: 986: if (filter & 0x00100000)
 10236  001532  A821               	btfss	CANSetFilter@filter+2,4,c
 10237  001534  D003               	goto	l510
 10238                           
 10239                           ; BSR set to: 15
 10240                           ;CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
 10241  001536  010F               	movlb	15	; () banked
 10242  001538  8F0D               	bsf	13,7,b	;volatile
 10243  00153A  D002               	goto	l6758
 10244  00153C                     l510:
 10245                           
 10246                           ; BSR set to: 15
 10247                           ;CANlib.h: 988: else
 10248                           ;CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
 10249  00153C  010F               	movlb	15	; () banked
 10250  00153E  9F0D               	bcf	13,7,b	;volatile
 10251  001540                     l6758:
 10252                           
 10253                           ; BSR set to: 15
 10254                           ;CANlib.h: 991: tamp = (filter >> 21);
 10255  001540  C01F  F060         	movff	CANSetFilter@filter,??_CANSetFilter
 10256  001544  C020  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10257  001548  C021  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10258  00154C  C022  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10259  001550  0E16               	movlw	22
 10260  001552  D006               	goto	u9290
 10261  001554                     u9295:
 10262  001554  0100               	movlb	0	; () banked
 10263  001556  90D8               	bcf	status,0,c
 10264  001558  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10265  00155A  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10266  00155C  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10267  00155E  3360               	rrcf	??_CANSetFilter& (0+255),f,b
 10268  001560                     u9290:
 10269  001560  2EE8               	decfsz	wreg,f,c
 10270  001562  D7F8               	goto	u9295
 10271  001564  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
 10272  001568  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10273  00156C  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10274  001570  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10275                           
 10276                           ; BSR set to: 0
 10277                           ;CANlib.h: 992: tamp = tamp & 0x000000FF;
 10278  001574  0100               	movlb	0	; () banked
 10279  001576  5165               	movf	CANSetFilter@tamp& (0+255),w,b
 10280  001578  0100               	movlb	0	; () banked
 10281  00157A  6F65               	movwf	CANSetFilter@tamp& (0+255),b
 10282  00157C  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10283  00157E  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10284  001580  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10285                           
 10286                           ; BSR set to: 0
 10287                           ;CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
 10288  001582  C065  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 10289  001586                     l6764:
 10290                           
 10291                           ; BSR set to: 0
 10292                           ;CANlib.h: 994: }
 10293                           ;CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 10294  001586  0E04               	movlw	4
 10295  001588  0100               	movlb	0	; () banked
 10296  00158A  1964               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10297  00158C  A4D8               	btfss	status,2,c
 10298  00158E  D07E               	goto	l6798
 10299                           
 10300                           ; BSR set to: 0
 10301  001590  0EF7               	movlw	247
 10302  001592  1823               	xorwf	CANSetFilter@type,w,c
 10303  001594  A4D8               	btfss	status,2,c
 10304  001596  D07A               	goto	l6798
 10305                           
 10306                           ; BSR set to: 0
 10307                           ;CANlib.h: 997: {
 10308                           ;CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
 10309  001598  010F               	movlb	15	; () banked
 10310  00159A  8711               	bsf	17,3,b	;volatile
 10311                           
 10312                           ; BSR set to: 15
 10313                           ;CANlib.h: 1000: tamp = filter & 0x000000FF;
 10314  00159C  501F               	movf	CANSetFilter@filter,w,c
 10315  00159E  0100               	movlb	0	; () banked
 10316  0015A0  6F65               	movwf	CANSetFilter@tamp& (0+255),b
 10317  0015A2  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10318  0015A4  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10319  0015A6  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10320                           
 10321                           ; BSR set to: 0
 10322                           ;CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
 10323  0015A8  C065  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;CANlib.h: 1003: tamp = filter & 0x0000FF00;
 10327  0015AC  0E00               	movlw	0
 10328  0015AE  141F               	andwf	CANSetFilter@filter,w,c
 10329  0015B0  0100               	movlb	0	; () banked
 10330  0015B2  6F65               	movwf	CANSetFilter@tamp& (0+255),b
 10331  0015B4  0EFF               	movlw	255
 10332  0015B6  1420               	andwf	CANSetFilter@filter+1,w,c
 10333  0015B8  0100               	movlb	0	; () banked
 10334  0015BA  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10335  0015BC  0E00               	movlw	0
 10336  0015BE  1421               	andwf	CANSetFilter@filter+2,w,c
 10337  0015C0  0100               	movlb	0	; () banked
 10338  0015C2  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10339  0015C4  0E00               	movlw	0
 10340  0015C6  1422               	andwf	CANSetFilter@filter+3,w,c
 10341  0015C8  0100               	movlb	0	; () banked
 10342  0015CA  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10343                           
 10344                           ; BSR set to: 0
 10345                           ;CANlib.h: 1004: tamp = tamp >> 8;
 10346  0015CC  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
 10347  0015D0  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10348  0015D4  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10349  0015D8  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10350  0015DC  C061  F060         	movff	??_CANSetFilter+1,??_CANSetFilter
 10351  0015E0  C062  F061         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10352  0015E4  C063  F062         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10353  0015E8  0100               	movlb	0	; () banked
 10354  0015EA  6B63               	clrf	(??_CANSetFilter+3)& (0+255),b
 10355  0015EC  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
 10356  0015F0  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10357  0015F4  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10358  0015F8  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
 10362  0015FC  C065  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 10363                           
 10364                           ; BSR set to: 0
 10365                           ;CANlib.h: 1007: if (filter & 0x00010000)
 10366  001600  A021               	btfss	CANSetFilter@filter+2,0,c
 10367  001602  D003               	goto	l513
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 10371  001604  010F               	movlb	15	; () banked
 10372  001606  8111               	bsf	17,0,b	;volatile
 10373  001608  D002               	goto	l514
 10374  00160A                     l513:
 10375                           
 10376                           ; BSR set to: 0
 10377                           ;CANlib.h: 1009: else
 10378                           ;CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 10379  00160A  010F               	movlb	15	; () banked
 10380  00160C  9111               	bcf	17,0,b	;volatile
 10381  00160E                     l514:
 10382                           
 10383                           ; BSR set to: 15
 10384                           ;CANlib.h: 1012: if (filter & 0x00020000)
 10385  00160E  A221               	btfss	CANSetFilter@filter+2,1,c
 10386  001610  D003               	goto	l515
 10387                           
 10388                           ; BSR set to: 15
 10389                           ;CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 10390  001612  010F               	movlb	15	; () banked
 10391  001614  8311               	bsf	17,1,b	;volatile
 10392  001616  D002               	goto	l516
 10393  001618                     l515:
 10394                           
 10395                           ; BSR set to: 15
 10396                           ;CANlib.h: 1014: else
 10397                           ;CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 10398  001618  010F               	movlb	15	; () banked
 10399  00161A  9311               	bcf	17,1,b	;volatile
 10400  00161C                     l516:
 10401                           
 10402                           ; BSR set to: 15
 10403                           ;CANlib.h: 1017: if (filter & 0x00040000)
 10404  00161C  A421               	btfss	CANSetFilter@filter+2,2,c
 10405  00161E  D003               	goto	l517
 10406                           
 10407                           ; BSR set to: 15
 10408                           ;CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 10409  001620  010F               	movlb	15	; () banked
 10410  001622  8B11               	bsf	17,5,b	;volatile
 10411  001624  D002               	goto	l518
 10412  001626                     l517:
 10413                           
 10414                           ; BSR set to: 15
 10415                           ;CANlib.h: 1019: else
 10416                           ;CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 10417  001626  010F               	movlb	15	; () banked
 10418  001628  9B11               	bcf	17,5,b	;volatile
 10419  00162A                     l518:
 10420                           
 10421                           ; BSR set to: 15
 10422                           ;CANlib.h: 1022: if (filter & 0x00080000)
 10423  00162A  A621               	btfss	CANSetFilter@filter+2,3,c
 10424  00162C  D003               	goto	l519
 10425                           
 10426                           ; BSR set to: 15
 10427                           ;CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 10428  00162E  010F               	movlb	15	; () banked
 10429  001630  8D11               	bsf	17,6,b	;volatile
 10430  001632  D002               	goto	l520
 10431  001634                     l519:
 10432                           
 10433                           ; BSR set to: 15
 10434                           ;CANlib.h: 1024: else
 10435                           ;CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 10436  001634  010F               	movlb	15	; () banked
 10437  001636  9D11               	bcf	17,6,b	;volatile
 10438  001638                     l520:
 10439                           
 10440                           ; BSR set to: 15
 10441                           ;CANlib.h: 1027: if (filter & 0x00100000)
 10442  001638  A821               	btfss	CANSetFilter@filter+2,4,c
 10443  00163A  D003               	goto	l521
 10444                           
 10445                           ; BSR set to: 15
 10446                           ;CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 10447  00163C  010F               	movlb	15	; () banked
 10448  00163E  8F11               	bsf	17,7,b	;volatile
 10449  001640  D002               	goto	l6792
 10450  001642                     l521:
 10451                           
 10452                           ; BSR set to: 15
 10453                           ;CANlib.h: 1029: else
 10454                           ;CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 10455  001642  010F               	movlb	15	; () banked
 10456  001644  9F11               	bcf	17,7,b	;volatile
 10457  001646                     l6792:
 10458                           
 10459                           ; BSR set to: 15
 10460                           ;CANlib.h: 1032: tamp = (filter >> 21);
 10461  001646  C01F  F060         	movff	CANSetFilter@filter,??_CANSetFilter
 10462  00164A  C020  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10463  00164E  C021  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10464  001652  C022  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10465  001656  0E16               	movlw	22
 10466  001658  D006               	goto	u9370
 10467  00165A                     u9375:
 10468  00165A  0100               	movlb	0	; () banked
 10469  00165C  90D8               	bcf	status,0,c
 10470  00165E  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10471  001660  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10472  001662  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10473  001664  3360               	rrcf	??_CANSetFilter& (0+255),f,b
 10474  001666                     u9370:
 10475  001666  2EE8               	decfsz	wreg,f,c
 10476  001668  D7F8               	goto	u9375
 10477  00166A  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
 10478  00166E  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10479  001672  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10480  001676  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10481                           
 10482                           ; BSR set to: 0
 10483                           ;CANlib.h: 1033: tamp = tamp & 0x000000FF;
 10484  00167A  0100               	movlb	0	; () banked
 10485  00167C  5165               	movf	CANSetFilter@tamp& (0+255),w,b
 10486  00167E  0100               	movlb	0	; () banked
 10487  001680  6F65               	movwf	CANSetFilter@tamp& (0+255),b
 10488  001682  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10489  001684  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10490  001686  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10491                           
 10492                           ; BSR set to: 0
 10493                           ;CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 10494  001688  C065  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 10495  00168C                     l6798:
 10496                           
 10497                           ; BSR set to: 0
 10498                           ;CANlib.h: 1035: }
 10499                           ;CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 10500  00168C  0E05               	movlw	5
 10501  00168E  0100               	movlb	0	; () banked
 10502  001690  1964               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10503  001692  A4D8               	btfss	status,2,c
 10504  001694  0012               	return	
 10505                           
 10506                           ; BSR set to: 0
 10507  001696  0EF7               	movlw	247
 10508  001698  1823               	xorwf	CANSetFilter@type,w,c
 10509  00169A  A4D8               	btfss	status,2,c
 10510  00169C  0012               	return	
 10511                           
 10512                           ; BSR set to: 0
 10513                           ;CANlib.h: 1038: {
 10514                           ;CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 10515  00169E  010F               	movlb	15	; () banked
 10516  0016A0  8715               	bsf	21,3,b	;volatile
 10517                           
 10518                           ; BSR set to: 15
 10519                           ;CANlib.h: 1041: tamp = filter & 0x000000FF;
 10520  0016A2  501F               	movf	CANSetFilter@filter,w,c
 10521  0016A4  0100               	movlb	0	; () banked
 10522  0016A6  6F65               	movwf	CANSetFilter@tamp& (0+255),b
 10523  0016A8  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10524  0016AA  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10525  0016AC  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10526                           
 10527                           ; BSR set to: 0
 10528                           ;CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 10529  0016AE  C065  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 10530                           
 10531                           ; BSR set to: 0
 10532                           ;CANlib.h: 1044: tamp = filter & 0x0000FF00;
 10533  0016B2  0E00               	movlw	0
 10534  0016B4  141F               	andwf	CANSetFilter@filter,w,c
 10535  0016B6  0100               	movlb	0	; () banked
 10536  0016B8  6F65               	movwf	CANSetFilter@tamp& (0+255),b
 10537  0016BA  0EFF               	movlw	255
 10538  0016BC  1420               	andwf	CANSetFilter@filter+1,w,c
 10539  0016BE  0100               	movlb	0	; () banked
 10540  0016C0  6F66               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10541  0016C2  0E00               	movlw	0
 10542  0016C4  1421               	andwf	CANSetFilter@filter+2,w,c
 10543  0016C6  0100               	movlb	0	; () banked
 10544  0016C8  6F67               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10545  0016CA  0E00               	movlw	0
 10546  0016CC  1422               	andwf	CANSetFilter@filter+3,w,c
 10547  0016CE  0100               	movlb	0	; () banked
 10548  0016D0  6F68               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10549                           
 10550                           ; BSR set to: 0
 10551                           ;CANlib.h: 1045: tamp = tamp >> 8;
 10552  0016D2  C065  F060         	movff	CANSetFilter@tamp,??_CANSetFilter
 10553  0016D6  C066  F061         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10554  0016DA  C067  F062         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10555  0016DE  C068  F063         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10556  0016E2  C061  F060         	movff	??_CANSetFilter+1,??_CANSetFilter
 10557  0016E6  C062  F061         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10558  0016EA  C063  F062         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10559  0016EE  0100               	movlb	0	; () banked
 10560  0016F0  6B63               	clrf	(??_CANSetFilter+3)& (0+255),b
 10561  0016F2  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
 10562  0016F6  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10563  0016FA  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10564  0016FE  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10565                           
 10566                           ; BSR set to: 0
 10567                           ;CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 10568  001702  C065  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 10569                           
 10570                           ; BSR set to: 0
 10571                           ;CANlib.h: 1048: if (filter & 0x00010000)
 10572  001706  A021               	btfss	CANSetFilter@filter+2,0,c
 10573  001708  D003               	goto	l524
 10574                           
 10575                           ; BSR set to: 0
 10576                           ;CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 10577  00170A  010F               	movlb	15	; () banked
 10578  00170C  8115               	bsf	21,0,b	;volatile
 10579  00170E  D002               	goto	l525
 10580  001710                     l524:
 10581                           
 10582                           ; BSR set to: 0
 10583                           ;CANlib.h: 1050: else
 10584                           ;CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 10585  001710  010F               	movlb	15	; () banked
 10586  001712  9115               	bcf	21,0,b	;volatile
 10587  001714                     l525:
 10588                           
 10589                           ; BSR set to: 15
 10590                           ;CANlib.h: 1053: if (filter & 0x00020000)
 10591  001714  A221               	btfss	CANSetFilter@filter+2,1,c
 10592  001716  D003               	goto	l526
 10593                           
 10594                           ; BSR set to: 15
 10595                           ;CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 10596  001718  010F               	movlb	15	; () banked
 10597  00171A  8315               	bsf	21,1,b	;volatile
 10598  00171C  D002               	goto	l527
 10599  00171E                     l526:
 10600                           
 10601                           ; BSR set to: 15
 10602                           ;CANlib.h: 1055: else
 10603                           ;CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 10604  00171E  010F               	movlb	15	; () banked
 10605  001720  9315               	bcf	21,1,b	;volatile
 10606  001722                     l527:
 10607                           
 10608                           ; BSR set to: 15
 10609                           ;CANlib.h: 1058: if (filter & 0x00040000)
 10610  001722  A421               	btfss	CANSetFilter@filter+2,2,c
 10611  001724  D003               	goto	l528
 10612                           
 10613                           ; BSR set to: 15
 10614                           ;CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 10615  001726  010F               	movlb	15	; () banked
 10616  001728  8B15               	bsf	21,5,b	;volatile
 10617  00172A  D002               	goto	l529
 10618  00172C                     l528:
 10619                           
 10620                           ; BSR set to: 15
 10621                           ;CANlib.h: 1060: else
 10622                           ;CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 10623  00172C  010F               	movlb	15	; () banked
 10624  00172E  9B15               	bcf	21,5,b	;volatile
 10625  001730                     l529:
 10626                           
 10627                           ; BSR set to: 15
 10628                           ;CANlib.h: 1063: if (filter & 0x00080000)
 10629  001730  A621               	btfss	CANSetFilter@filter+2,3,c
 10630  001732  D003               	goto	l530
 10631                           
 10632                           ; BSR set to: 15
 10633                           ;CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 10634  001734  010F               	movlb	15	; () banked
 10635  001736  8D15               	bsf	21,6,b	;volatile
 10636  001738  D002               	goto	l531
 10637  00173A                     l530:
 10638                           
 10639                           ; BSR set to: 15
 10640                           ;CANlib.h: 1065: else
 10641                           ;CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 10642  00173A  010F               	movlb	15	; () banked
 10643  00173C  9D15               	bcf	21,6,b	;volatile
 10644  00173E                     l531:
 10645                           
 10646                           ; BSR set to: 15
 10647                           ;CANlib.h: 1068: if (filter & 0x00100000)
 10648  00173E  A821               	btfss	CANSetFilter@filter+2,4,c
 10649  001740  D003               	goto	l532
 10650                           
 10651                           ; BSR set to: 15
 10652                           ;CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 10653  001742  010F               	movlb	15	; () banked
 10654  001744  8F15               	bsf	21,7,b	;volatile
 10655  001746  D002               	goto	l6826
 10656  001748                     l532:
 10657                           
 10658                           ; BSR set to: 15
 10659                           ;CANlib.h: 1070: else
 10660                           ;CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 10661  001748  010F               	movlb	15	; () banked
 10662  00174A  9F15               	bcf	21,7,b	;volatile
 10663  00174C                     l6826:
 10664                           
 10665                           ; BSR set to: 15
 10666                           ;CANlib.h: 1073: tamp = (filter >> 21);
 10667  00174C  C01F  F060         	movff	CANSetFilter@filter,??_CANSetFilter
 10668  001750  C020  F061         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10669  001754  C021  F062         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10670  001758  C022  F063         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10671  00175C  0E16               	movlw	22
 10672  00175E  D006               	goto	u9450
 10673  001760                     u9455:
 10674  001760  0100               	movlb	0	; () banked
 10675  001762  90D8               	bcf	status,0,c
 10676  001764  3363               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10677  001766  3362               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10678  001768  3361               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10679  00176A  3360               	rrcf	??_CANSetFilter& (0+255),f,b
 10680  00176C                     u9450:
 10681  00176C  2EE8               	decfsz	wreg,f,c
 10682  00176E  D7F8               	goto	u9455
 10683  001770  C060  F065         	movff	??_CANSetFilter,CANSetFilter@tamp
 10684  001774  C061  F066         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10685  001778  C062  F067         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10686  00177C  C063  F068         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10687                           
 10688                           ; BSR set to: 0
 10689                           ;CANlib.h: 1074: tamp = tamp & 0x000000FF;
 10690  001780  0100               	movlb	0	; () banked
 10691  001782  5165               	movf	CANSetFilter@tamp& (0+255),w,b
 10692  001784  0100               	movlb	0	; () banked
 10693  001786  6F65               	movwf	CANSetFilter@tamp& (0+255),b
 10694  001788  6B66               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10695  00178A  6B67               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10696  00178C  6B68               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10697                           
 10698                           ; BSR set to: 0
 10699                           ;CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 10700  00178E  C065  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 10701  001792  0012               	return	
 10702  001794                     __end_of_CANSetFilter:
 10703                           	opt stack 0
 10704                           tblptru	equ	0xFF8
 10705                           tblptrh	equ	0xFF7
 10706                           tblptrl	equ	0xFF6
 10707                           tablat	equ	0xFF5
 10708                           prodh	equ	0xFF4
 10709                           prodl	equ	0xFF3
 10710                           intcon	equ	0xFF2
 10711                           postinc0	equ	0xFEE
 10712                           wreg	equ	0xFE8
 10713                           postdec1	equ	0xFE5
 10714                           fsr1l	equ	0xFE1
 10715                           postinc2	equ	0xFDE
 10716                           postdec2	equ	0xFDD
 10717                           fsr2h	equ	0xFDA
 10718                           fsr2l	equ	0xFD9
 10719                           status	equ	0xFD8
 10720                           
 10721 ;; *************** function _CANOperationMode *****************
 10722 ;; Defined at:
 10723 ;;		line 206 in file "CANlib.h"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;  mode            1    wreg     enum E16881
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;  mode            1   30[COMRAM] enum E16881
 10728 ;; Return value:  Size  Location     Type
 10729 ;;		None               void
 10730 ;; Registers used:
 10731 ;;		wreg, status,2, status,0
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10738 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10741 ;;Total ram usage:        1 bytes
 10742 ;; Hardware stack levels used:    1
 10743 ;; Hardware stack levels required when called:    2
 10744 ;; This function calls:
 10745 ;;		Nothing
 10746 ;; This function is called by:
 10747 ;;		_CANInitialize
 10748 ;; This function uses a non-reentrant model
 10749 ;;
 10750                           
 10751                           	psect	text27
 10752  00508C                     __ptext27:
 10753                           	opt stack 0
 10754  00508C                     _CANOperationMode:
 10755                           	opt stack 26
 10756                           
 10757                           ; BSR set to: 0
 10758                           ;incstack = 0
 10759                           ;CANOperationMode@mode stored from wreg
 10760  00508C  6E1F               	movwf	CANOperationMode@mode,c
 10761                           
 10762                           ;CANlib.h: 208: CANCON = mode;
 10763  00508E  C01F  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 10764  005092                     l6422:
 10765  005092  506E               	movf	3950,w,c	;volatile
 10766  005094  0BE0               	andlw	224
 10767  005096  181F               	xorwf	CANOperationMode@mode,w,c
 10768  005098  B4D8               	btfsc	status,2,c
 10769  00509A  0012               	return	
 10770  00509C  D7FA               	goto	l6422
 10771  00509E                     __end_of_CANOperationMode:
 10772                           	opt stack 0
 10773                           tblptru	equ	0xFF8
 10774                           tblptrh	equ	0xFF7
 10775                           tblptrl	equ	0xFF6
 10776                           tablat	equ	0xFF5
 10777                           prodh	equ	0xFF4
 10778                           prodl	equ	0xFF3
 10779                           intcon	equ	0xFF2
 10780                           postinc0	equ	0xFEE
 10781                           wreg	equ	0xFE8
 10782                           postdec1	equ	0xFE5
 10783                           fsr1l	equ	0xFE1
 10784                           postinc2	equ	0xFDE
 10785                           postdec2	equ	0xFDD
 10786                           fsr2h	equ	0xFDA
 10787                           fsr2l	equ	0xFD9
 10788                           status	equ	0xFD8
 10789                           
 10790 ;; *************** function _can_interpreter *****************
 10791 ;; Defined at:
 10792 ;;		line 255 in file "motore.c"
 10793 ;; Parameters:    Size  Location     Type
 10794 ;;		None
 10795 ;; Auto vars:     Size  Location     Type
 10796 ;;		None
 10797 ;; Return value:  Size  Location     Type
 10798 ;;		None               void
 10799 ;; Registers used:
 10800 ;;		wreg, status,2, status,0
 10801 ;; Tracked objects:
 10802 ;;		On entry : 0/0
 10803 ;;		On exit  : 0/0
 10804 ;;		Unchanged: 0/0
 10805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;Total ram usage:        4 bytes
 10811 ;; Hardware stack levels used:    1
 10812 ;; Hardware stack levels required when called:    2
 10813 ;; This function calls:
 10814 ;;		Nothing
 10815 ;; This function is called by:
 10816 ;;		_main
 10817 ;; This function uses a non-reentrant model
 10818 ;;
 10819                           
 10820                           	psect	text28
 10821  004A44                     __ptext28:
 10822                           	opt stack 0
 10823  004A44                     _can_interpreter:
 10824                           	opt stack 28
 10825                           
 10826                           ;motore.c: 256: if (new_message == 1) {
 10827                           
 10828                           ;incstack = 0
 10829  004A44  AA3E               	btfss	_new_message/(0+8),_new_message& (0+7),c	;volatile
 10830  004A46  D06E               	goto	l727
 10831                           
 10832                           ;motore.c: 257: if (id == 0b00000000011) {
 10833  004A48  0E03               	movlw	3
 10834  004A4A  1826               	xorwf	_id,w,c	;volatile
 10835  004A4C  1027               	iorwf	_id+1,w,c	;volatile
 10836  004A4E  1028               	iorwf	_id+2,w,c	;volatile
 10837  004A50  1029               	iorwf	_id+3,w,c	;volatile
 10838  004A52  A4D8               	btfss	status,2,c
 10839  004A54  D020               	goto	l7454
 10840                           
 10841                           ;motore.c: 258: requestSpeed = data_array[1];
 10842  004A56  0100               	movlb	0	; () banked
 10843  004A58  51EF               	movf	(_data_array+1)& (0+255),w,b
 10844  004A5A  0100               	movlb	0	; () banked
 10845  004A5C  6FE0               	movwf	_requestSpeed& (0+255),b	;volatile
 10846  004A5E  6BE1               	clrf	(_requestSpeed+1)& (0+255),b	;volatile
 10847  004A60  6BE2               	clrf	(_requestSpeed+2)& (0+255),b	;volatile
 10848  004A62  6BE3               	clrf	(_requestSpeed+3)& (0+255),b	;volatile
 10849                           
 10850                           ; BSR set to: 0
 10851                           ;motore.c: 259: requestSpeed = ((requestSpeed << 8) | msg.data[0]);
 10852  004A64  0101               	movlb	1	; () banked
 10853  004A66  5114               	movf	(_msg+4)& (0+255),w,b
 10854  004A68  C0E0  F020         	movff	_requestSpeed,??_can_interpreter+1	;volatile
 10855  004A6C  C0E1  F021         	movff	_requestSpeed+1,??_can_interpreter+2	;volatile
 10856  004A70  C0E2  F022         	movff	_requestSpeed+2,??_can_interpreter+3	;volatile
 10857  004A74  6A1F               	clrf	??_can_interpreter& (0+255),c
 10858  004A76  101F               	iorwf	??_can_interpreter,w,c
 10859  004A78  0100               	movlb	0	; () banked
 10860  004A7A  6FE0               	movwf	_requestSpeed& (0+255),b	;volatile
 10861  004A7C  5020               	movf	??_can_interpreter+1,w,c
 10862  004A7E  0100               	movlb	0	; () banked
 10863  004A80  6FE1               	movwf	(_requestSpeed+1)& (0+255),b	;volatile
 10864  004A82  5021               	movf	??_can_interpreter+2,w,c
 10865  004A84  0100               	movlb	0	; () banked
 10866  004A86  6FE2               	movwf	(_requestSpeed+2)& (0+255),b	;volatile
 10867  004A88  5022               	movf	??_can_interpreter+3,w,c
 10868  004A8A  0100               	movlb	0	; () banked
 10869  004A8C  6FE3               	movwf	(_requestSpeed+3)& (0+255),b	;volatile
 10870                           
 10871                           ; BSR set to: 0
 10872                           ;motore.c: 260: dir = data_array[2];
 10873  004A8E  C0F0  F0FA         	movff	_data_array+2,_dir	;volatile
 10874  004A92  0100               	movlb	0	; () banked
 10875  004A94  6BFB               	clrf	(_dir+1)& (0+255),b	;volatile
 10876  004A96                     l7454:
 10877                           
 10878                           ;motore.c: 262: }
 10879                           ;motore.c: 264: if (id == 0b00000000001) {
 10880  004A96  0426               	decf	_id,w,c	;volatile
 10881  004A98  1027               	iorwf	_id+1,w,c	;volatile
 10882  004A9A  1028               	iorwf	_id+2,w,c	;volatile
 10883  004A9C  1029               	iorwf	_id+3,w,c	;volatile
 10884  004A9E  A4D8               	btfss	status,2,c
 10885  004AA0  D00A               	goto	l7460
 10886                           
 10887                           ;motore.c: 265: requestSpeed = 0;
 10888  004AA2  0E00               	movlw	0
 10889  004AA4  0100               	movlb	0	; () banked
 10890  004AA6  6FE0               	movwf	_requestSpeed& (0+255),b	;volatile
 10891  004AA8  0E00               	movlw	0
 10892  004AAA  6FE1               	movwf	(_requestSpeed+1)& (0+255),b	;volatile
 10893  004AAC  0E00               	movlw	0
 10894  004AAE  6FE2               	movwf	(_requestSpeed+2)& (0+255),b	;volatile
 10895  004AB0  0E00               	movlw	0
 10896  004AB2  6FE3               	movwf	(_requestSpeed+3)& (0+255),b	;volatile
 10897                           
 10898                           ; BSR set to: 0
 10899                           ;motore.c: 266: PORTAbits.RA1 = 1;
 10900  004AB4  8280               	bsf	3968,1,c	;volatile
 10901  004AB6                     l7460:
 10902                           
 10903                           ;motore.c: 267: }
 10904                           ;motore.c: 269: if (id == 0b00000000110) {
 10905  004AB6  0E06               	movlw	6
 10906  004AB8  1826               	xorwf	_id,w,c	;volatile
 10907  004ABA  1027               	iorwf	_id+1,w,c	;volatile
 10908  004ABC  1028               	iorwf	_id+2,w,c	;volatile
 10909  004ABE  1029               	iorwf	_id+3,w,c	;volatile
 10910  004AC0  A4D8               	btfss	status,2,c
 10911  004AC2  D01B               	goto	l7470
 10912                           
 10913                           ;motore.c: 275: left_speed = data_array[1];
 10914  004AC4  C0EF  F0E8         	movff	_data_array+1,_left_speed	;volatile
 10915  004AC8  0100               	movlb	0	; () banked
 10916  004ACA  6BE9               	clrf	(_left_speed+1)& (0+255),b	;volatile
 10917                           
 10918                           ; BSR set to: 0
 10919                           ;motore.c: 276: left_speed = ((left_speed << 8) | (data_array[0]));
 10920  004ACC  0100               	movlb	0	; () banked
 10921  004ACE  51E8               	movf	_left_speed& (0+255),w,b	;volatile
 10922  004AD0  6E1F               	movwf	??_can_interpreter& (0+255),c
 10923  004AD2  0100               	movlb	0	; () banked
 10924  004AD4  51EE               	movf	_data_array& (0+255),w,b
 10925  004AD6  0100               	movlb	0	; () banked
 10926  004AD8  6FE8               	movwf	_left_speed& (0+255),b	;volatile
 10927  004ADA  C01F  F0E9         	movff	??_can_interpreter,_left_speed+1	;volatile
 10928                           
 10929                           ; BSR set to: 0
 10930                           ;motore.c: 277: right_speed = data_array[3];
 10931  004ADE  C0F1  F0EC         	movff	_data_array+3,_right_speed	;volatile
 10932  004AE2  0100               	movlb	0	; () banked
 10933  004AE4  6BED               	clrf	(_right_speed+1)& (0+255),b	;volatile
 10934                           
 10935                           ;motore.c: 278: right_speed = ((right_speed << 8) | (data_array[2]));
 10936  004AE6  0100               	movlb	0	; () banked
 10937  004AE8  51EC               	movf	_right_speed& (0+255),w,b	;volatile
 10938  004AEA  6E1F               	movwf	??_can_interpreter& (0+255),c
 10939  004AEC  0100               	movlb	0	; () banked
 10940  004AEE  51F0               	movf	(_data_array+2)& (0+255),w,b
 10941  004AF0  0100               	movlb	0	; () banked
 10942  004AF2  6FEC               	movwf	_right_speed& (0+255),b	;volatile
 10943  004AF4  C01F  F0ED         	movff	??_can_interpreter,_right_speed+1	;volatile
 10944                           
 10945                           ; BSR set to: 0
 10946                           ;motore.c: 279: speed_fetched = 1;
 10947  004AF8  823F               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
 10948  004AFA                     l7470:
 10949                           
 10950                           ;motore.c: 280: }
 10951                           ;motore.c: 282: if (id == 0b00000000010) {
 10952  004AFA  0E02               	movlw	2
 10953  004AFC  1826               	xorwf	_id,w,c	;volatile
 10954  004AFE  1027               	iorwf	_id+1,w,c	;volatile
 10955  004B00  1028               	iorwf	_id+2,w,c	;volatile
 10956  004B02  1029               	iorwf	_id+3,w,c	;volatile
 10957  004B04  A4D8               	btfss	status,2,c
 10958  004B06  D00E               	goto	l727
 10959                           
 10960                           ;motore.c: 283: if (data_array[0] == 0x01) {
 10961  004B08  0100               	movlb	0	; () banked
 10962  004B0A  05EE               	decf	_data_array& (0+255),w,b
 10963  004B0C  B4D8               	btfsc	status,2,c
 10964                           
 10965                           ; BSR set to: 0
 10966                           ;motore.c: 284: centralina_abs = 1;
 10967  004B0E  823E               	bsf	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
 10968                           
 10969                           ; BSR set to: 0
 10970                           ;motore.c: 286: }
 10971                           ;motore.c: 287: if (data_array[0] == 0x02) {
 10972                           
 10973                           ; BSR set to: 0
 10974  004B10  0E02               	movlw	2
 10975  004B12  0100               	movlb	0	; () banked
 10976  004B14  19EE               	xorwf	_data_array& (0+255),w,b
 10977  004B16  B4D8               	btfsc	status,2,c
 10978                           
 10979                           ; BSR set to: 0
 10980                           ;motore.c: 288: centralina_sterzo = 1;
 10981  004B18  863E               	bsf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
 10982                           
 10983                           ; BSR set to: 0
 10984                           ;motore.c: 292: }
 10985                           ;motore.c: 293: if (data_array[0] == 0x03) {
 10986                           
 10987                           ; BSR set to: 0
 10988  004B1A  0E03               	movlw	3
 10989  004B1C  0100               	movlb	0	; () banked
 10990  004B1E  19EE               	xorwf	_data_array& (0+255),w,b
 10991  004B20  B4D8               	btfsc	status,2,c
 10992                           
 10993                           ; BSR set to: 0
 10994                           ;motore.c: 294: centralina_comando = 1;
 10995  004B22  843E               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
 10996  004B24                     l727:
 10997                           
 10998                           ;motore.c: 295: }
 10999                           ;motore.c: 296: }
 11000                           ;motore.c: 297: }
 11001                           ;motore.c: 298: new_message = 0;
 11002  004B24  9A3E               	bcf	_new_message/(0+8),_new_message& (0+7),c	;volatile
 11003  004B26  0012               	return		;funcret
 11004  004B28                     __end_of_can_interpreter:
 11005                           	opt stack 0
 11006                           tblptru	equ	0xFF8
 11007                           tblptrh	equ	0xFF7
 11008                           tblptrl	equ	0xFF6
 11009                           tablat	equ	0xFF5
 11010                           prodh	equ	0xFF4
 11011                           prodl	equ	0xFF3
 11012                           intcon	equ	0xFF2
 11013                           postinc0	equ	0xFEE
 11014                           wreg	equ	0xFE8
 11015                           postdec1	equ	0xFE5
 11016                           fsr1l	equ	0xFE1
 11017                           postinc2	equ	0xFDE
 11018                           postdec2	equ	0xFDD
 11019                           fsr2h	equ	0xFDA
 11020                           fsr2l	equ	0xFD9
 11021                           status	equ	0xFD8
 11022                           
 11023 ;; *************** function _battery_measure *****************
 11024 ;; Defined at:
 11025 ;;		line 241 in file "motore.c"
 11026 ;; Parameters:    Size  Location     Type
 11027 ;;		None
 11028 ;; Auto vars:     Size  Location     Type
 11029 ;;		None
 11030 ;; Return value:  Size  Location     Type
 11031 ;;		None               void
 11032 ;; Registers used:
 11033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11034 ;; Tracked objects:
 11035 ;;		On entry : 0/0
 11036 ;;		On exit  : 0/0
 11037 ;;		Unchanged: 0/0
 11038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11043 ;;Total ram usage:        0 bytes
 11044 ;; Hardware stack levels used:    1
 11045 ;; Hardware stack levels required when called:    3
 11046 ;; This function calls:
 11047 ;;		_CANisTxReady
 11048 ;;		_CANsendMessage
 11049 ;;		___awdiv
 11050 ;;		___wmul
 11051 ;; This function is called by:
 11052 ;;		_main
 11053 ;; This function uses a non-reentrant model
 11054 ;;
 11055                           
 11056                           	psect	text29
 11057  004D38                     __ptext29:
 11058                           	opt stack 0
 11059  004D38                     _battery_measure:
 11060                           	opt stack 27
 11061                           
 11062                           ;motore.c: 242: ADCON0bits.GO = 1;
 11063                           
 11064                           ;incstack = 0
 11065  004D38  82C2               	bsf	4034,1,c	;volatile
 11066  004D3A                     l716:
 11067  004D3A  B2C2               	btfsc	4034,1,c	;volatile
 11068  004D3C  D7FE               	goto	l716
 11069                           
 11070                           ;motore.c: 244: vBatt = ADRESH;
 11071  004D3E  CFC4 F03A          	movff	4036,_vBatt	;volatile
 11072  004D42  6A3B               	clrf	_vBatt+1,c
 11073                           
 11074                           ;motore.c: 245: vBatt = (vBatt * 14) / 255;
 11075  004D44  C03A  F01F         	movff	_vBatt,___wmul@multiplier
 11076  004D48  C03B  F020         	movff	_vBatt+1,___wmul@multiplier+1
 11077  004D4C  0E00               	movlw	0
 11078  004D4E  6E22               	movwf	___wmul@multiplicand+1,c
 11079  004D50  0E0E               	movlw	14
 11080  004D52  6E21               	movwf	___wmul@multiplicand,c
 11081  004D54  EC0B  F028         	call	___wmul	;wreg free
 11082  004D58  C01F  F060         	movff	?___wmul,___awdiv@dividend
 11083  004D5C  C020  F061         	movff	?___wmul+1,___awdiv@dividend+1
 11084  004D60  0E00               	movlw	0
 11085  004D62  0100               	movlb	0	; () banked
 11086  004D64  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 11087  004D66  6962               	setf	___awdiv@divisor& (0+255),b
 11088  004D68  EC94  F025         	call	___awdiv	;wreg free
 11089  004D6C  C060  F03A         	movff	?___awdiv,_vBatt
 11090  004D70  C061  F03B         	movff	?___awdiv+1,_vBatt+1
 11091                           
 11092                           ;motore.c: 246: if (vBatt < 8) {
 11093  004D74  BE3B               	btfsc	_vBatt+1,7,c
 11094  004D76  D006               	goto	l7562
 11095  004D78  503B               	movf	_vBatt+1,w,c
 11096  004D7A  E122               	bnz	l719
 11097  004D7C  0E08               	movlw	8
 11098  004D7E  5C3A               	subwf	_vBatt,w,c
 11099  004D80  B0D8               	btfsc	status,0,c
 11100  004D82  D01E               	goto	l719
 11101  004D84                     l7562:
 11102  004D84  EC1E  F028         	call	_CANisTxReady	;wreg free
 11103  004D88  06E8               	decf	wreg,f,c
 11104  004D8A  A4D8               	btfss	status,2,c
 11105  004D8C  D7FB               	goto	l7562
 11106                           
 11107                           ;motore.c: 248: CANsendMessage(0b00000001001, data_array, 8, CAN_CONFIG_STD_MSG & CAN_RE
      +                          MOTE_TX_FRAME & CAN_TX_PRIORITY_0);
 11108  004D8E  0E09               	movlw	9
 11109  004D90  0100               	movlb	0	; () banked
 11110  004D92  6F60               	movwf	CANsendMessage@identifier& (0+255),b
 11111  004D94  0E00               	movlw	0
 11112  004D96  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 11113  004D98  0E00               	movlw	0
 11114  004D9A  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 11115  004D9C  0E00               	movlw	0
 11116  004D9E  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 11117  004DA0  0EEE               	movlw	low _data_array
 11118  004DA2  0100               	movlb	0	; () banked
 11119  004DA4  6F64               	movwf	CANsendMessage@data& (0+255),b
 11120  004DA6  0E00               	movlw	high _data_array
 11121  004DA8  0100               	movlb	0	; () banked
 11122  004DAA  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
 11123  004DAC  0E08               	movlw	8
 11124  004DAE  0100               	movlb	0	; () banked
 11125  004DB0  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
 11126  004DB2  0EFC               	movlw	252
 11127  004DB4  0100               	movlb	0	; () banked
 11128  004DB6  6F67               	movwf	CANsendMessage@flags& (0+255),b
 11129  004DB8  ECCA  F00B         	call	_CANsendMessage	;wreg free
 11130                           
 11131                           ;motore.c: 249: PORTCbits.RC1 = 1;
 11132  004DBC  8282               	bsf	3970,1,c	;volatile
 11133                           
 11134                           ;motore.c: 250: } else {
 11135  004DBE  0012               	return	
 11136  004DC0                     l719:
 11137                           
 11138                           ;motore.c: 251: PORTCbits.RC1 = 0;
 11139  004DC0  9282               	bcf	3970,1,c	;volatile
 11140  004DC2  0012               	return	
 11141  004DC4                     __end_of_battery_measure:
 11142                           	opt stack 0
 11143                           tblptru	equ	0xFF8
 11144                           tblptrh	equ	0xFF7
 11145                           tblptrl	equ	0xFF6
 11146                           tablat	equ	0xFF5
 11147                           prodh	equ	0xFF4
 11148                           prodl	equ	0xFF3
 11149                           intcon	equ	0xFF2
 11150                           postinc0	equ	0xFEE
 11151                           wreg	equ	0xFE8
 11152                           postdec1	equ	0xFE5
 11153                           fsr1l	equ	0xFE1
 11154                           postinc2	equ	0xFDE
 11155                           postdec2	equ	0xFDD
 11156                           fsr2h	equ	0xFDA
 11157                           fsr2l	equ	0xFD9
 11158                           status	equ	0xFD8
 11159                           
 11160 ;; *************** function ___wmul *****************
 11161 ;; Defined at:
 11162 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 11163 ;; Parameters:    Size  Location     Type
 11164 ;;  multiplier      2   30[COMRAM] unsigned int 
 11165 ;;  multiplicand    2   32[COMRAM] unsigned int 
 11166 ;; Auto vars:     Size  Location     Type
 11167 ;;  product         2   34[COMRAM] unsigned int 
 11168 ;; Return value:  Size  Location     Type
 11169 ;;                  2   30[COMRAM] unsigned int 
 11170 ;; Registers used:
 11171 ;;		wreg, status,2, status,0, prodl, prodh
 11172 ;; Tracked objects:
 11173 ;;		On entry : 0/0
 11174 ;;		On exit  : 0/0
 11175 ;;		Unchanged: 0/0
 11176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11177 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11178 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11180 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11181 ;;Total ram usage:        6 bytes
 11182 ;; Hardware stack levels used:    1
 11183 ;; Hardware stack levels required when called:    2
 11184 ;; This function calls:
 11185 ;;		Nothing
 11186 ;; This function is called by:
 11187 ;;		_delay_ms
 11188 ;;		_battery_measure
 11189 ;; This function uses a non-reentrant model
 11190 ;;
 11191                           
 11192                           	psect	text30
 11193  005016                     __ptext30:
 11194                           	opt stack 0
 11195  005016                     ___wmul:
 11196                           	opt stack 27
 11197                           
 11198                           ;incstack = 0
 11199  005016  501F               	movf	___wmul@multiplier,w,c
 11200  005018  0221               	mulwf	___wmul@multiplicand,c
 11201  00501A  CFF3 F023          	movff	prodl,___wmul@product
 11202  00501E  CFF4 F024          	movff	prodh,___wmul@product+1
 11203  005022  501F               	movf	___wmul@multiplier,w,c
 11204  005024  0222               	mulwf	___wmul@multiplicand+1,c
 11205  005026  50F3               	movf	prodl,w,c
 11206  005028  2624               	addwf	___wmul@product+1,f,c
 11207  00502A  5020               	movf	___wmul@multiplier+1,w,c
 11208  00502C  0221               	mulwf	___wmul@multiplicand,c
 11209  00502E  50F3               	movf	prodl,w,c
 11210  005030  2624               	addwf	___wmul@product+1,f,c
 11211  005032  C023  F01F         	movff	___wmul@product,?___wmul
 11212  005036  C024  F020         	movff	___wmul@product+1,?___wmul+1
 11213  00503A  0012               	return	
 11214  00503C                     __end_of___wmul:
 11215                           	opt stack 0
 11216                           tblptru	equ	0xFF8
 11217                           tblptrh	equ	0xFF7
 11218                           tblptrl	equ	0xFF6
 11219                           tablat	equ	0xFF5
 11220                           prodh	equ	0xFF4
 11221                           prodl	equ	0xFF3
 11222                           intcon	equ	0xFF2
 11223                           postinc0	equ	0xFEE
 11224                           wreg	equ	0xFE8
 11225                           postdec1	equ	0xFE5
 11226                           fsr1l	equ	0xFE1
 11227                           postinc2	equ	0xFDE
 11228                           postdec2	equ	0xFDD
 11229                           fsr2h	equ	0xFDA
 11230                           fsr2l	equ	0xFD9
 11231                           status	equ	0xFD8
 11232                           
 11233 ;; *************** function ___awdiv *****************
 11234 ;; Defined at:
 11235 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;  dividend        2    0[BANK0 ] int 
 11238 ;;  divisor         2    2[BANK0 ] int 
 11239 ;; Auto vars:     Size  Location     Type
 11240 ;;  quotient        2    6[BANK0 ] int 
 11241 ;;  sign            1    5[BANK0 ] unsigned char 
 11242 ;;  counter         1    4[BANK0 ] unsigned char 
 11243 ;; Return value:  Size  Location     Type
 11244 ;;                  2    0[BANK0 ] int 
 11245 ;; Registers used:
 11246 ;;		wreg, status,2, status,0
 11247 ;; Tracked objects:
 11248 ;;		On entry : 0/0
 11249 ;;		On exit  : 0/0
 11250 ;;		Unchanged: 0/0
 11251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11252 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11253 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11255 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11256 ;;Total ram usage:        8 bytes
 11257 ;; Hardware stack levels used:    1
 11258 ;; Hardware stack levels required when called:    2
 11259 ;; This function calls:
 11260 ;;		Nothing
 11261 ;; This function is called by:
 11262 ;;		_battery_measure
 11263 ;; This function uses a non-reentrant model
 11264 ;;
 11265                           
 11266                           	psect	text31
 11267  004B28                     __ptext31:
 11268                           	opt stack 0
 11269  004B28                     ___awdiv:
 11270                           	opt stack 27
 11271                           
 11272                           ;incstack = 0
 11273  004B28  0E00               	movlw	0
 11274  004B2A  0100               	movlb	0	; () banked
 11275  004B2C  6F65               	movwf	___awdiv@sign& (0+255),b
 11276                           
 11277                           ; BSR set to: 0
 11278  004B2E  0100               	movlb	0	; () banked
 11279  004B30  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11280  004B32  D008               	goto	l7274
 11281                           
 11282                           ; BSR set to: 0
 11283  004B34  0100               	movlb	0	; () banked
 11284  004B36  6D62               	negf	___awdiv@divisor& (0+255),b
 11285  004B38  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11286  004B3A  B0D8               	btfsc	status,0,c
 11287  004B3C  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11288                           
 11289                           ; BSR set to: 0
 11290  004B3E  0E01               	movlw	1
 11291  004B40  0100               	movlb	0	; () banked
 11292  004B42  6F65               	movwf	___awdiv@sign& (0+255),b
 11293  004B44                     l7274:
 11294                           
 11295                           ; BSR set to: 0
 11296  004B44  0100               	movlb	0	; () banked
 11297  004B46  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11298  004B48  D008               	goto	l7280
 11299                           
 11300                           ; BSR set to: 0
 11301  004B4A  0100               	movlb	0	; () banked
 11302  004B4C  6D60               	negf	___awdiv@dividend& (0+255),b
 11303  004B4E  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11304  004B50  B0D8               	btfsc	status,0,c
 11305  004B52  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11306                           
 11307                           ; BSR set to: 0
 11308  004B54  0E01               	movlw	1
 11309  004B56  0100               	movlb	0	; () banked
 11310  004B58  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 11311  004B5A                     l7280:
 11312                           
 11313                           ; BSR set to: 0
 11314  004B5A  0E00               	movlw	0
 11315  004B5C  0100               	movlb	0	; () banked
 11316  004B5E  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 11317  004B60  0E00               	movlw	0
 11318  004B62  6F66               	movwf	___awdiv@quotient& (0+255),b
 11319                           
 11320                           ; BSR set to: 0
 11321  004B64  0100               	movlb	0	; () banked
 11322  004B66  5162               	movf	___awdiv@divisor& (0+255),w,b
 11323  004B68  0100               	movlb	0	; () banked
 11324  004B6A  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11325  004B6C  B4D8               	btfsc	status,2,c
 11326  004B6E  D02C               	goto	l7302
 11327                           
 11328                           ; BSR set to: 0
 11329  004B70  0E01               	movlw	1
 11330  004B72  0100               	movlb	0	; () banked
 11331  004B74  6F64               	movwf	___awdiv@counter& (0+255),b
 11332  004B76  D006               	goto	l7288
 11333  004B78                     l7286:
 11334                           
 11335                           ; BSR set to: 0
 11336  004B78  0100               	movlb	0	; () banked
 11337  004B7A  90D8               	bcf	status,0,c
 11338  004B7C  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 11339  004B7E  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11340  004B80  0100               	movlb	0	; () banked
 11341  004B82  2B64               	incf	___awdiv@counter& (0+255),f,b
 11342  004B84                     l7288:
 11343                           
 11344                           ; BSR set to: 0
 11345  004B84  0100               	movlb	0	; () banked
 11346  004B86  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11347  004B88  D7F7               	goto	l7286
 11348  004B8A                     l7290:
 11349                           
 11350                           ; BSR set to: 0
 11351  004B8A  0100               	movlb	0	; () banked
 11352  004B8C  90D8               	bcf	status,0,c
 11353  004B8E  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 11354  004B90  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 11355                           
 11356                           ; BSR set to: 0
 11357  004B92  0100               	movlb	0	; () banked
 11358  004B94  5162               	movf	___awdiv@divisor& (0+255),w,b
 11359  004B96  0100               	movlb	0	; () banked
 11360  004B98  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 11361  004B9A  0100               	movlb	0	; () banked
 11362  004B9C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11363  004B9E  0100               	movlb	0	; () banked
 11364  004BA0  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11365  004BA2  A0D8               	btfss	status,0,c
 11366  004BA4  D00A               	goto	l7298
 11367                           
 11368                           ; BSR set to: 0
 11369  004BA6  0100               	movlb	0	; () banked
 11370  004BA8  5162               	movf	___awdiv@divisor& (0+255),w,b
 11371  004BAA  0100               	movlb	0	; () banked
 11372  004BAC  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 11373  004BAE  0100               	movlb	0	; () banked
 11374  004BB0  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11375  004BB2  0100               	movlb	0	; () banked
 11376  004BB4  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11377                           
 11378                           ; BSR set to: 0
 11379  004BB6  0100               	movlb	0	; () banked
 11380  004BB8  8166               	bsf	___awdiv@quotient& (0+255),0,b
 11381  004BBA                     l7298:
 11382                           
 11383                           ; BSR set to: 0
 11384  004BBA  0100               	movlb	0	; () banked
 11385  004BBC  90D8               	bcf	status,0,c
 11386  004BBE  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11387  004BC0  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 11388                           
 11389                           ; BSR set to: 0
 11390  004BC2  0100               	movlb	0	; () banked
 11391  004BC4  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 11392  004BC6  D7E1               	goto	l7290
 11393  004BC8                     l7302:
 11394                           
 11395                           ; BSR set to: 0
 11396  004BC8  0100               	movlb	0	; () banked
 11397  004BCA  5165               	movf	___awdiv@sign& (0+255),w,b
 11398  004BCC  0100               	movlb	0	; () banked
 11399  004BCE  B4D8               	btfsc	status,2,c
 11400  004BD0  D005               	goto	l7306
 11401                           
 11402                           ; BSR set to: 0
 11403  004BD2  0100               	movlb	0	; () banked
 11404  004BD4  6D66               	negf	___awdiv@quotient& (0+255),b
 11405  004BD6  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11406  004BD8  B0D8               	btfsc	status,0,c
 11407  004BDA  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11408  004BDC                     l7306:
 11409                           
 11410                           ; BSR set to: 0
 11411  004BDC  C066  F060         	movff	___awdiv@quotient,?___awdiv
 11412  004BE0  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 11413  004BE4  0012               	return	
 11414  004BE6                     __end_of___awdiv:
 11415                           	opt stack 0
 11416                           tblptru	equ	0xFF8
 11417                           tblptrh	equ	0xFF7
 11418                           tblptrl	equ	0xFF6
 11419                           tablat	equ	0xFF5
 11420                           prodh	equ	0xFF4
 11421                           prodl	equ	0xFF3
 11422                           intcon	equ	0xFF2
 11423                           postinc0	equ	0xFEE
 11424                           wreg	equ	0xFE8
 11425                           postdec1	equ	0xFE5
 11426                           fsr1l	equ	0xFE1
 11427                           postinc2	equ	0xFDE
 11428                           postdec2	equ	0xFDD
 11429                           fsr2h	equ	0xFDA
 11430                           fsr2l	equ	0xFD9
 11431                           status	equ	0xFD8
 11432                           
 11433 ;; *************** function _CANsendMessage *****************
 11434 ;; Defined at:
 11435 ;;		line 294 in file "CANlib.h"
 11436 ;; Parameters:    Size  Location     Type
 11437 ;;  identifier      4    0[BANK0 ] unsigned long 
 11438 ;;  data            2    4[BANK0 ] PTR unsigned char 
 11439 ;;		 -> data_array_debug(8), data_array(8), 
 11440 ;;  dataLength      1    6[BANK0 ] unsigned char 
 11441 ;;  flags           1    7[BANK0 ] enum E16909
 11442 ;; Auto vars:     Size  Location     Type
 11443 ;;  tamp            4    8[BANK0 ] unsigned long 
 11444 ;; Return value:  Size  Location     Type
 11445 ;;		None               void
 11446 ;; Registers used:
 11447 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11448 ;; Tracked objects:
 11449 ;;		On entry : 0/0
 11450 ;;		On exit  : 0/0
 11451 ;;		Unchanged: 0/0
 11452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11453 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11454 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11455 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11456 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11457 ;;Total ram usage:       16 bytes
 11458 ;; Hardware stack levels used:    1
 11459 ;; Hardware stack levels required when called:    2
 11460 ;; This function calls:
 11461 ;;		Nothing
 11462 ;; This function is called by:
 11463 ;;		_main
 11464 ;;		_rampe
 11465 ;;		_send_data
 11466 ;;		_battery_measure
 11467 ;; This function uses a non-reentrant model
 11468 ;;
 11469                           
 11470                           	psect	text32
 11471  001794                     __ptext32:
 11472                           	opt stack 0
 11473  001794                     _CANsendMessage:
 11474                           	opt stack 27
 11475                           
 11476                           ;CANlib.h: 296: unsigned long tamp;
 11477                           ;CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 11478                           
 11479                           ; BSR set to: 0
 11480                           ;incstack = 0
 11481  001794  010F               	movlb	15	; () banked
 11482  001796  B740               	btfsc	64,3,b	;volatile
 11483  001798  D13B               	goto	l369
 11484                           
 11485                           ; BSR set to: 15
 11486                           ;CANlib.h: 299: { TXB0DLC = dataLength;
 11487  00179A  C066  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 11488                           
 11489                           ;CANlib.h: 300: if (0b01000000 & flags)
 11490  00179E  0100               	movlb	0	; () banked
 11491  0017A0  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
 11492  0017A2  D003               	goto	l370
 11493                           
 11494                           ; BSR set to: 0
 11495                           ;CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 11496  0017A4  010F               	movlb	15	; () banked
 11497  0017A6  8D45               	bsf	69,6,b	;volatile
 11498  0017A8  D002               	goto	l371
 11499  0017AA                     l370:
 11500                           
 11501                           ; BSR set to: 0
 11502                           ;CANlib.h: 302: else
 11503                           ;CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 11504  0017AA  010F               	movlb	15	; () banked
 11505  0017AC  9D45               	bcf	69,6,b	;volatile
 11506  0017AE                     l371:
 11507                           
 11508                           ; BSR set to: 15
 11509                           ;CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 11510  0017AE  0100               	movlb	0	; () banked
 11511  0017B0  A767               	btfss	CANsendMessage@flags& (0+255),3,b
 11512  0017B2  D077               	goto	l372
 11513                           
 11514                           ; BSR set to: 0
 11515                           ;CANlib.h: 306: {
 11516                           ;CANlib.h: 308: tamp = identifier & 0x000000FF;
 11517  0017B4  0100               	movlb	0	; () banked
 11518  0017B6  5160               	movf	CANsendMessage@identifier& (0+255),w,b
 11519  0017B8  0100               	movlb	0	; () banked
 11520  0017BA  6F68               	movwf	CANsendMessage@tamp& (0+255),b
 11521  0017BC  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11522  0017BE  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11523  0017C0  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11524                           
 11525                           ; BSR set to: 0
 11526                           ;CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 11527  0017C2  C068  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 11528                           
 11529                           ; BSR set to: 0
 11530                           ;CANlib.h: 311: tamp = identifier & 0x0000FF00;
 11531  0017C6  0E00               	movlw	0
 11532  0017C8  0100               	movlb	0	; () banked
 11533  0017CA  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 11534  0017CC  0100               	movlb	0	; () banked
 11535  0017CE  6F68               	movwf	CANsendMessage@tamp& (0+255),b
 11536  0017D0  0EFF               	movlw	255
 11537  0017D2  0100               	movlb	0	; () banked
 11538  0017D4  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 11539  0017D6  0100               	movlb	0	; () banked
 11540  0017D8  6F69               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 11541  0017DA  0E00               	movlw	0
 11542  0017DC  0100               	movlb	0	; () banked
 11543  0017DE  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 11544  0017E0  0100               	movlb	0	; () banked
 11545  0017E2  6F6A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 11546  0017E4  0E00               	movlw	0
 11547  0017E6  0100               	movlb	0	; () banked
 11548  0017E8  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 11549  0017EA  0100               	movlb	0	; () banked
 11550  0017EC  6F6B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 11551                           
 11552                           ; BSR set to: 0
 11553                           ;CANlib.h: 312: tamp = tamp >> 8;
 11554  0017EE  C068  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
 11555  0017F2  C069  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 11556  0017F6  C06A  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 11557  0017FA  C06B  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 11558  0017FE  C020  F01F         	movff	??_CANsendMessage+1,??_CANsendMessage
 11559  001802  C021  F020         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 11560  001806  C022  F021         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 11561  00180A  6A22               	clrf	??_CANsendMessage+3,c
 11562  00180C  C01F  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
 11563  001810  C020  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11564  001814  C021  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11565  001818  C022  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11566                           
 11567                           ; BSR set to: 0
 11568                           ;CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 11569  00181C  C068  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 11570                           
 11571                           ; BSR set to: 0
 11572                           ;CANlib.h: 315: TXB0SIDL = 0x00;
 11573  001820  0E00               	movlw	0
 11574  001822  010F               	movlb	15	; () banked
 11575  001824  6F42               	movwf	66,b	;volatile
 11576                           
 11577                           ; BSR set to: 15
 11578                           ;CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 11579  001826  010F               	movlb	15	; () banked
 11580  001828  8742               	bsf	66,3,b	;volatile
 11581                           
 11582                           ; BSR set to: 15
 11583                           ;CANlib.h: 318: if (identifier & 0x00010000)
 11584  00182A  0100               	movlb	0	; () banked
 11585  00182C  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 11586  00182E  D002               	goto	l373
 11587                           
 11588                           ; BSR set to: 0
 11589                           ;CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 11590  001830  010F               	movlb	15	; () banked
 11591  001832  8142               	bsf	66,0,b	;volatile
 11592  001834                     l373:
 11593                           
 11594                           ;CANlib.h: 320: if (identifier & 0x00020000)
 11595  001834  0100               	movlb	0	; () banked
 11596  001836  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 11597  001838  D002               	goto	l374
 11598                           
 11599                           ; BSR set to: 0
 11600                           ;CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 11601  00183A  010F               	movlb	15	; () banked
 11602  00183C  8342               	bsf	66,1,b	;volatile
 11603  00183E                     l374:
 11604                           
 11605                           ;CANlib.h: 322: if (identifier & 0x00040000)
 11606  00183E  0100               	movlb	0	; () banked
 11607  001840  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 11608  001842  D002               	goto	l375
 11609                           
 11610                           ; BSR set to: 0
 11611                           ;CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 11612  001844  010F               	movlb	15	; () banked
 11613  001846  8B42               	bsf	66,5,b	;volatile
 11614  001848                     l375:
 11615                           
 11616                           ;CANlib.h: 324: if (identifier & 0x00080000)
 11617  001848  0100               	movlb	0	; () banked
 11618  00184A  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 11619  00184C  D002               	goto	l376
 11620                           
 11621                           ; BSR set to: 0
 11622                           ;CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 11623  00184E  010F               	movlb	15	; () banked
 11624  001850  8D42               	bsf	66,6,b	;volatile
 11625  001852                     l376:
 11626                           
 11627                           ;CANlib.h: 326: if (identifier & 0x00100000)
 11628  001852  0100               	movlb	0	; () banked
 11629  001854  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 11630  001856  D002               	goto	l6990
 11631                           
 11632                           ; BSR set to: 0
 11633                           ;CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 11634  001858  010F               	movlb	15	; () banked
 11635  00185A  8F42               	bsf	66,7,b	;volatile
 11636  00185C                     l6990:
 11637                           
 11638                           ;CANlib.h: 329: tamp = (identifier >> 21);
 11639  00185C  C060  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
 11640  001860  C061  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 11641  001864  C062  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 11642  001868  C063  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 11643  00186C  0E16               	movlw	22
 11644  00186E  D005               	goto	u9680
 11645  001870                     u9685:
 11646  001870  90D8               	bcf	status,0,c
 11647  001872  3222               	rrcf	??_CANsendMessage+3,f,c
 11648  001874  3221               	rrcf	??_CANsendMessage+2,f,c
 11649  001876  3220               	rrcf	??_CANsendMessage+1,f,c
 11650  001878  321F               	rrcf	??_CANsendMessage,f,c
 11651  00187A                     u9680:
 11652  00187A  2EE8               	decfsz	wreg,f,c
 11653  00187C  D7F9               	goto	u9685
 11654  00187E  C01F  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
 11655  001882  C020  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11656  001886  C021  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11657  00188A  C022  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11658                           
 11659                           ;CANlib.h: 330: tamp = tamp & 0x000000FF;
 11660  00188E  0100               	movlb	0	; () banked
 11661  001890  5168               	movf	CANsendMessage@tamp& (0+255),w,b
 11662  001892  0100               	movlb	0	; () banked
 11663  001894  6F68               	movwf	CANsendMessage@tamp& (0+255),b
 11664  001896  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11665  001898  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11666  00189A  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11667                           
 11668                           ; BSR set to: 0
 11669                           ;CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 11670  00189C  C068  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 11671                           
 11672                           ;CANlib.h: 332: }
 11673  0018A0  D057               	goto	l7010
 11674  0018A2                     l372:
 11675                           
 11676                           ; BSR set to: 0
 11677                           ;CANlib.h: 334: else
 11678                           ;CANlib.h: 336: {
 11679                           ;CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 11680  0018A2  010F               	movlb	15	; () banked
 11681  0018A4  9742               	bcf	66,3,b	;volatile
 11682                           
 11683                           ; BSR set to: 15
 11684                           ;CANlib.h: 339: tamp = (identifier >> 3);
 11685  0018A6  C060  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
 11686  0018AA  C061  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 11687  0018AE  C062  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 11688  0018B2  C063  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 11689  0018B6  0E04               	movlw	4
 11690  0018B8  D005               	goto	u9690
 11691  0018BA                     u9695:
 11692  0018BA  90D8               	bcf	status,0,c
 11693  0018BC  3222               	rrcf	??_CANsendMessage+3,f,c
 11694  0018BE  3221               	rrcf	??_CANsendMessage+2,f,c
 11695  0018C0  3220               	rrcf	??_CANsendMessage+1,f,c
 11696  0018C2  321F               	rrcf	??_CANsendMessage,f,c
 11697  0018C4                     u9690:
 11698  0018C4  2EE8               	decfsz	wreg,f,c
 11699  0018C6  D7F9               	goto	u9695
 11700  0018C8  C01F  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
 11701  0018CC  C020  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11702  0018D0  C021  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11703  0018D4  C022  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11704                           
 11705                           ; BSR set to: 15
 11706                           ;CANlib.h: 340: tamp = tamp & 0x000000FF;
 11707  0018D8  0100               	movlb	0	; () banked
 11708  0018DA  5168               	movf	CANsendMessage@tamp& (0+255),w,b
 11709  0018DC  0100               	movlb	0	; () banked
 11710  0018DE  6F68               	movwf	CANsendMessage@tamp& (0+255),b
 11711  0018E0  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11712  0018E2  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11713  0018E4  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11714                           
 11715                           ; BSR set to: 0
 11716                           ;CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 11717  0018E6  C068  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 11718                           
 11719                           ; BSR set to: 0
 11720                           ;CANlib.h: 343: tamp = identifier & 0x00000007;
 11721  0018EA  0E07               	movlw	7
 11722  0018EC  0100               	movlb	0	; () banked
 11723  0018EE  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 11724  0018F0  0100               	movlb	0	; () banked
 11725  0018F2  6F68               	movwf	CANsendMessage@tamp& (0+255),b
 11726  0018F4  0E00               	movlw	0
 11727  0018F6  0100               	movlb	0	; () banked
 11728  0018F8  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 11729  0018FA  0100               	movlb	0	; () banked
 11730  0018FC  6F69               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 11731  0018FE  0E00               	movlw	0
 11732  001900  0100               	movlb	0	; () banked
 11733  001902  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 11734  001904  0100               	movlb	0	; () banked
 11735  001906  6F6A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 11736  001908  0E00               	movlw	0
 11737  00190A  0100               	movlb	0	; () banked
 11738  00190C  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 11739  00190E  0100               	movlb	0	; () banked
 11740  001910  6F6B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 11741                           
 11742                           ; BSR set to: 0
 11743                           ;CANlib.h: 344: tamp = tamp << 5;
 11744  001912  C068  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
 11745  001916  C069  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 11746  00191A  C06A  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 11747  00191E  C06B  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 11748  001922  0E05               	movlw	5
 11749  001924                     u9705:
 11750  001924  90D8               	bcf	status,0,c
 11751  001926  361F               	rlcf	??_CANsendMessage,f,c
 11752  001928  3620               	rlcf	??_CANsendMessage+1,f,c
 11753  00192A  3621               	rlcf	??_CANsendMessage+2,f,c
 11754  00192C  3622               	rlcf	??_CANsendMessage+3,f,c
 11755  00192E  2EE8               	decfsz	wreg,f,c
 11756  001930  D7F9               	goto	u9705
 11757  001932  C01F  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
 11758  001936  C020  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11759  00193A  C021  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11760  00193E  C022  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11761                           
 11762                           ; BSR set to: 0
 11763                           ;CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 11764  001942  010F               	movlb	15	; () banked
 11765  001944  5142               	movf	66,w,b	;volatile
 11766  001946  0B1F               	andlw	31
 11767  001948  010F               	movlb	15	; () banked
 11768  00194A  6F42               	movwf	66,b	;volatile
 11769                           
 11770                           ; BSR set to: 15
 11771                           ;CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 11772  00194C  C068  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 11773  001950                     l7010:
 11774                           
 11775                           ;CANlib.h: 347: }
 11776                           ;CANlib.h: 349: if (0b00000001 & flags)
 11777  001950  0100               	movlb	0	; () banked
 11778  001952  A167               	btfss	CANsendMessage@flags& (0+255),0,b
 11779  001954  D003               	goto	l379
 11780                           
 11781                           ; BSR set to: 0
 11782                           ;CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 11783  001956  010F               	movlb	15	; () banked
 11784  001958  8140               	bsf	64,0,b	;volatile
 11785  00195A  D002               	goto	l380
 11786  00195C                     l379:
 11787                           
 11788                           ; BSR set to: 0
 11789                           ;CANlib.h: 351: else
 11790                           ;CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 11791  00195C  010F               	movlb	15	; () banked
 11792  00195E  9140               	bcf	64,0,b	;volatile
 11793  001960                     l380:
 11794                           
 11795                           ; BSR set to: 15
 11796                           ;CANlib.h: 353: if (0b00000010 & flags)
 11797  001960  0100               	movlb	0	; () banked
 11798  001962  A367               	btfss	CANsendMessage@flags& (0+255),1,b
 11799  001964  D003               	goto	l381
 11800                           
 11801                           ; BSR set to: 0
 11802                           ;CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 11803  001966  010F               	movlb	15	; () banked
 11804  001968  8340               	bsf	64,1,b	;volatile
 11805  00196A  D002               	goto	l7016
 11806  00196C                     l381:
 11807                           
 11808                           ; BSR set to: 0
 11809                           ;CANlib.h: 355: else
 11810                           ;CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 11811  00196C  010F               	movlb	15	; () banked
 11812  00196E  9340               	bcf	64,1,b	;volatile
 11813  001970                     l7016:
 11814                           
 11815                           ; BSR set to: 15
 11816                           ;CANlib.h: 358: TXB0D0 = data[0];
 11817  001970  C064  FFD9         	movff	CANsendMessage@data,fsr2l
 11818  001974  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
 11819  001978  50DF               	movf	indf2,w,c
 11820  00197A  010F               	movlb	15	; () banked
 11821  00197C  6F46               	movwf	70,b	;volatile
 11822                           
 11823                           ; BSR set to: 15
 11824                           ;CANlib.h: 359: TXB0D1 = data[1];
 11825  00197E  0100               	movlb	0	; () banked
 11826  001980  EE20 F001          	lfsr	2,1
 11827  001984  5164               	movf	CANsendMessage@data& (0+255),w,b
 11828  001986  26D9               	addwf	fsr2l,f,c
 11829  001988  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11830  00198A  22DA               	addwfc	fsr2h,f,c
 11831  00198C  50DF               	movf	indf2,w,c
 11832  00198E  010F               	movlb	15	; () banked
 11833  001990  6F47               	movwf	71,b	;volatile
 11834                           
 11835                           ; BSR set to: 15
 11836                           ;CANlib.h: 360: TXB0D2 = data[2];
 11837  001992  0100               	movlb	0	; () banked
 11838  001994  EE20 F002          	lfsr	2,2
 11839  001998  5164               	movf	CANsendMessage@data& (0+255),w,b
 11840  00199A  26D9               	addwf	fsr2l,f,c
 11841  00199C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11842  00199E  22DA               	addwfc	fsr2h,f,c
 11843  0019A0  50DF               	movf	indf2,w,c
 11844  0019A2  010F               	movlb	15	; () banked
 11845  0019A4  6F48               	movwf	72,b	;volatile
 11846                           
 11847                           ; BSR set to: 15
 11848                           ;CANlib.h: 361: TXB0D3 = data[3];
 11849  0019A6  0100               	movlb	0	; () banked
 11850  0019A8  EE20 F003          	lfsr	2,3
 11851  0019AC  5164               	movf	CANsendMessage@data& (0+255),w,b
 11852  0019AE  26D9               	addwf	fsr2l,f,c
 11853  0019B0  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11854  0019B2  22DA               	addwfc	fsr2h,f,c
 11855  0019B4  50DF               	movf	indf2,w,c
 11856  0019B6  010F               	movlb	15	; () banked
 11857  0019B8  6F49               	movwf	73,b	;volatile
 11858                           
 11859                           ; BSR set to: 15
 11860                           ;CANlib.h: 362: TXB0D4 = data[4];
 11861  0019BA  0100               	movlb	0	; () banked
 11862  0019BC  EE20 F004          	lfsr	2,4
 11863  0019C0  5164               	movf	CANsendMessage@data& (0+255),w,b
 11864  0019C2  26D9               	addwf	fsr2l,f,c
 11865  0019C4  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11866  0019C6  22DA               	addwfc	fsr2h,f,c
 11867  0019C8  50DF               	movf	indf2,w,c
 11868  0019CA  010F               	movlb	15	; () banked
 11869  0019CC  6F4A               	movwf	74,b	;volatile
 11870                           
 11871                           ; BSR set to: 15
 11872                           ;CANlib.h: 363: TXB0D5 = data[5];
 11873  0019CE  0100               	movlb	0	; () banked
 11874  0019D0  EE20 F005          	lfsr	2,5
 11875  0019D4  5164               	movf	CANsendMessage@data& (0+255),w,b
 11876  0019D6  26D9               	addwf	fsr2l,f,c
 11877  0019D8  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11878  0019DA  22DA               	addwfc	fsr2h,f,c
 11879  0019DC  50DF               	movf	indf2,w,c
 11880  0019DE  010F               	movlb	15	; () banked
 11881  0019E0  6F4B               	movwf	75,b	;volatile
 11882                           
 11883                           ; BSR set to: 15
 11884                           ;CANlib.h: 364: TXB0D6 = data[6];
 11885  0019E2  0100               	movlb	0	; () banked
 11886  0019E4  EE20 F006          	lfsr	2,6
 11887  0019E8  5164               	movf	CANsendMessage@data& (0+255),w,b
 11888  0019EA  26D9               	addwf	fsr2l,f,c
 11889  0019EC  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11890  0019EE  22DA               	addwfc	fsr2h,f,c
 11891  0019F0  50DF               	movf	indf2,w,c
 11892  0019F2  010F               	movlb	15	; () banked
 11893  0019F4  6F4C               	movwf	76,b	;volatile
 11894                           
 11895                           ; BSR set to: 15
 11896                           ;CANlib.h: 365: TXB0D7 = data[7];
 11897  0019F6  0100               	movlb	0	; () banked
 11898  0019F8  EE20 F007          	lfsr	2,7
 11899  0019FC  5164               	movf	CANsendMessage@data& (0+255),w,b
 11900  0019FE  26D9               	addwf	fsr2l,f,c
 11901  001A00  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11902  001A02  22DA               	addwfc	fsr2h,f,c
 11903  001A04  50DF               	movf	indf2,w,c
 11904  001A06  010F               	movlb	15	; () banked
 11905  001A08  6F4D               	movwf	77,b	;volatile
 11906                           
 11907                           ; BSR set to: 15
 11908                           ;CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 11909  001A0A  010F               	movlb	15	; () banked
 11910  001A0C  8740               	bsf	64,3,b	;volatile
 11911                           
 11912                           ; BSR set to: 15
 11913                           ;CANlib.h: 368: return;
 11914  001A0E  0012               	return	
 11915  001A10                     l369:
 11916                           
 11917                           ; BSR set to: 15
 11918                           ;CANlib.h: 369: }
 11919                           ;CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 11920  001A10  010F               	movlb	15	; () banked
 11921  001A12  B730               	btfsc	48,3,b	;volatile
 11922  001A14  D13B               	goto	l384
 11923                           
 11924                           ; BSR set to: 15
 11925                           ;CANlib.h: 374: { TXB1DLC = dataLength;
 11926  001A16  C066  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 11927                           
 11928                           ;CANlib.h: 376: if (0b01000000 & flags)
 11929  001A1A  0100               	movlb	0	; () banked
 11930  001A1C  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
 11931  001A1E  D003               	goto	l385
 11932                           
 11933                           ; BSR set to: 0
 11934                           ;CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 11935  001A20  010F               	movlb	15	; () banked
 11936  001A22  8D35               	bsf	53,6,b	;volatile
 11937  001A24  D002               	goto	l386
 11938  001A26                     l385:
 11939                           
 11940                           ; BSR set to: 0
 11941                           ;CANlib.h: 378: else
 11942                           ;CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 11943  001A26  010F               	movlb	15	; () banked
 11944  001A28  9D35               	bcf	53,6,b	;volatile
 11945  001A2A                     l386:
 11946                           
 11947                           ; BSR set to: 15
 11948                           ;CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 11949  001A2A  0100               	movlb	0	; () banked
 11950  001A2C  A767               	btfss	CANsendMessage@flags& (0+255),3,b
 11951  001A2E  D077               	goto	l387
 11952                           
 11953                           ; BSR set to: 0
 11954                           ;CANlib.h: 382: {
 11955                           ;CANlib.h: 383: tamp = identifier & 0x000000FF;
 11956  001A30  0100               	movlb	0	; () banked
 11957  001A32  5160               	movf	CANsendMessage@identifier& (0+255),w,b
 11958  001A34  0100               	movlb	0	; () banked
 11959  001A36  6F68               	movwf	CANsendMessage@tamp& (0+255),b
 11960  001A38  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11961  001A3A  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11962  001A3C  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11963                           
 11964                           ; BSR set to: 0
 11965                           ;CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 11966  001A3E  C068  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 11967                           
 11968                           ; BSR set to: 0
 11969                           ;CANlib.h: 386: tamp = identifier & 0x0000FF00;
 11970  001A42  0E00               	movlw	0
 11971  001A44  0100               	movlb	0	; () banked
 11972  001A46  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 11973  001A48  0100               	movlb	0	; () banked
 11974  001A4A  6F68               	movwf	CANsendMessage@tamp& (0+255),b
 11975  001A4C  0EFF               	movlw	255
 11976  001A4E  0100               	movlb	0	; () banked
 11977  001A50  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 11978  001A52  0100               	movlb	0	; () banked
 11979  001A54  6F69               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 11980  001A56  0E00               	movlw	0
 11981  001A58  0100               	movlb	0	; () banked
 11982  001A5A  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 11983  001A5C  0100               	movlb	0	; () banked
 11984  001A5E  6F6A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 11985  001A60  0E00               	movlw	0
 11986  001A62  0100               	movlb	0	; () banked
 11987  001A64  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 11988  001A66  0100               	movlb	0	; () banked
 11989  001A68  6F6B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 11990                           
 11991                           ; BSR set to: 0
 11992                           ;CANlib.h: 387: tamp = tamp >> 8;
 11993  001A6A  C068  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
 11994  001A6E  C069  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 11995  001A72  C06A  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 11996  001A76  C06B  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 11997  001A7A  C020  F01F         	movff	??_CANsendMessage+1,??_CANsendMessage
 11998  001A7E  C021  F020         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 11999  001A82  C022  F021         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 12000  001A86  6A22               	clrf	??_CANsendMessage+3,c
 12001  001A88  C01F  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
 12002  001A8C  C020  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12003  001A90  C021  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12004  001A94  C022  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12005                           
 12006                           ; BSR set to: 0
 12007                           ;CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 12008  001A98  C068  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 12009                           
 12010                           ; BSR set to: 0
 12011                           ;CANlib.h: 390: TXB1SIDL = 0x00;
 12012  001A9C  0E00               	movlw	0
 12013  001A9E  010F               	movlb	15	; () banked
 12014  001AA0  6F32               	movwf	50,b	;volatile
 12015                           
 12016                           ; BSR set to: 15
 12017                           ;CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 12018  001AA2  010F               	movlb	15	; () banked
 12019  001AA4  8732               	bsf	50,3,b	;volatile
 12020                           
 12021                           ; BSR set to: 15
 12022                           ;CANlib.h: 393: if (identifier & 0x00010000)
 12023  001AA6  0100               	movlb	0	; () banked
 12024  001AA8  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 12025  001AAA  D002               	goto	l388
 12026                           
 12027                           ; BSR set to: 0
 12028                           ;CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 12029  001AAC  010F               	movlb	15	; () banked
 12030  001AAE  8132               	bsf	50,0,b	;volatile
 12031  001AB0                     l388:
 12032                           
 12033                           ;CANlib.h: 395: if (identifier & 0x00020000)
 12034  001AB0  0100               	movlb	0	; () banked
 12035  001AB2  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 12036  001AB4  D002               	goto	l389
 12037                           
 12038                           ; BSR set to: 0
 12039                           ;CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 12040  001AB6  010F               	movlb	15	; () banked
 12041  001AB8  8332               	bsf	50,1,b	;volatile
 12042  001ABA                     l389:
 12043                           
 12044                           ;CANlib.h: 397: if (identifier & 0x00040000)
 12045  001ABA  0100               	movlb	0	; () banked
 12046  001ABC  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 12047  001ABE  D002               	goto	l390
 12048                           
 12049                           ; BSR set to: 0
 12050                           ;CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 12051  001AC0  010F               	movlb	15	; () banked
 12052  001AC2  8B32               	bsf	50,5,b	;volatile
 12053  001AC4                     l390:
 12054                           
 12055                           ;CANlib.h: 399: if (identifier & 0x00080000)
 12056  001AC4  0100               	movlb	0	; () banked
 12057  001AC6  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 12058  001AC8  D002               	goto	l391
 12059                           
 12060                           ; BSR set to: 0
 12061                           ;CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 12062  001ACA  010F               	movlb	15	; () banked
 12063  001ACC  8D32               	bsf	50,6,b	;volatile
 12064  001ACE                     l391:
 12065                           
 12066                           ;CANlib.h: 401: if (identifier & 0x00100000)
 12067  001ACE  0100               	movlb	0	; () banked
 12068  001AD0  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 12069  001AD2  D002               	goto	l7066
 12070                           
 12071                           ; BSR set to: 0
 12072                           ;CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 12073  001AD4  010F               	movlb	15	; () banked
 12074  001AD6  8F32               	bsf	50,7,b	;volatile
 12075  001AD8                     l7066:
 12076                           
 12077                           ;CANlib.h: 404: tamp = (identifier >> 21);
 12078  001AD8  C060  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
 12079  001ADC  C061  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 12080  001AE0  C062  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 12081  001AE4  C063  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 12082  001AE8  0E16               	movlw	22
 12083  001AEA  D005               	goto	u9810
 12084  001AEC                     u9815:
 12085  001AEC  90D8               	bcf	status,0,c
 12086  001AEE  3222               	rrcf	??_CANsendMessage+3,f,c
 12087  001AF0  3221               	rrcf	??_CANsendMessage+2,f,c
 12088  001AF2  3220               	rrcf	??_CANsendMessage+1,f,c
 12089  001AF4  321F               	rrcf	??_CANsendMessage,f,c
 12090  001AF6                     u9810:
 12091  001AF6  2EE8               	decfsz	wreg,f,c
 12092  001AF8  D7F9               	goto	u9815
 12093  001AFA  C01F  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
 12094  001AFE  C020  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12095  001B02  C021  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12096  001B06  C022  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12097                           
 12098                           ;CANlib.h: 405: tamp = tamp & 0x000000FF;
 12099  001B0A  0100               	movlb	0	; () banked
 12100  001B0C  5168               	movf	CANsendMessage@tamp& (0+255),w,b
 12101  001B0E  0100               	movlb	0	; () banked
 12102  001B10  6F68               	movwf	CANsendMessage@tamp& (0+255),b
 12103  001B12  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 12104  001B14  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 12105  001B16  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 12106                           
 12107                           ; BSR set to: 0
 12108                           ;CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 12109  001B18  C068  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 12110                           
 12111                           ;CANlib.h: 407: }
 12112  001B1C  D057               	goto	l7086
 12113  001B1E                     l387:
 12114                           
 12115                           ; BSR set to: 0
 12116                           ;CANlib.h: 409: else
 12117                           ;CANlib.h: 411: {
 12118                           ;CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 12119  001B1E  010F               	movlb	15	; () banked
 12120  001B20  9732               	bcf	50,3,b	;volatile
 12121                           
 12122                           ; BSR set to: 15
 12123                           ;CANlib.h: 414: tamp = (identifier >> 3);
 12124  001B22  C060  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
 12125  001B26  C061  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 12126  001B2A  C062  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 12127  001B2E  C063  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 12128  001B32  0E04               	movlw	4
 12129  001B34  D005               	goto	u9820
 12130  001B36                     u9825:
 12131  001B36  90D8               	bcf	status,0,c
 12132  001B38  3222               	rrcf	??_CANsendMessage+3,f,c
 12133  001B3A  3221               	rrcf	??_CANsendMessage+2,f,c
 12134  001B3C  3220               	rrcf	??_CANsendMessage+1,f,c
 12135  001B3E  321F               	rrcf	??_CANsendMessage,f,c
 12136  001B40                     u9820:
 12137  001B40  2EE8               	decfsz	wreg,f,c
 12138  001B42  D7F9               	goto	u9825
 12139  001B44  C01F  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
 12140  001B48  C020  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12141  001B4C  C021  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12142  001B50  C022  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12143                           
 12144                           ; BSR set to: 15
 12145                           ;CANlib.h: 415: tamp = tamp & 0x000000FF;
 12146  001B54  0100               	movlb	0	; () banked
 12147  001B56  5168               	movf	CANsendMessage@tamp& (0+255),w,b
 12148  001B58  0100               	movlb	0	; () banked
 12149  001B5A  6F68               	movwf	CANsendMessage@tamp& (0+255),b
 12150  001B5C  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 12151  001B5E  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 12152  001B60  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 12153                           
 12154                           ; BSR set to: 0
 12155                           ;CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 12156  001B62  C068  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 12157                           
 12158                           ; BSR set to: 0
 12159                           ;CANlib.h: 418: tamp = identifier & 0x00000007;
 12160  001B66  0E07               	movlw	7
 12161  001B68  0100               	movlb	0	; () banked
 12162  001B6A  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 12163  001B6C  0100               	movlb	0	; () banked
 12164  001B6E  6F68               	movwf	CANsendMessage@tamp& (0+255),b
 12165  001B70  0E00               	movlw	0
 12166  001B72  0100               	movlb	0	; () banked
 12167  001B74  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 12168  001B76  0100               	movlb	0	; () banked
 12169  001B78  6F69               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 12170  001B7A  0E00               	movlw	0
 12171  001B7C  0100               	movlb	0	; () banked
 12172  001B7E  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 12173  001B80  0100               	movlb	0	; () banked
 12174  001B82  6F6A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 12175  001B84  0E00               	movlw	0
 12176  001B86  0100               	movlb	0	; () banked
 12177  001B88  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 12178  001B8A  0100               	movlb	0	; () banked
 12179  001B8C  6F6B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 12180                           
 12181                           ; BSR set to: 0
 12182                           ;CANlib.h: 419: tamp = tamp << 5;
 12183  001B8E  C068  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
 12184  001B92  C069  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 12185  001B96  C06A  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 12186  001B9A  C06B  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 12187  001B9E  0E05               	movlw	5
 12188  001BA0                     u9835:
 12189  001BA0  90D8               	bcf	status,0,c
 12190  001BA2  361F               	rlcf	??_CANsendMessage,f,c
 12191  001BA4  3620               	rlcf	??_CANsendMessage+1,f,c
 12192  001BA6  3621               	rlcf	??_CANsendMessage+2,f,c
 12193  001BA8  3622               	rlcf	??_CANsendMessage+3,f,c
 12194  001BAA  2EE8               	decfsz	wreg,f,c
 12195  001BAC  D7F9               	goto	u9835
 12196  001BAE  C01F  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
 12197  001BB2  C020  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12198  001BB6  C021  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12199  001BBA  C022  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12200                           
 12201                           ; BSR set to: 0
 12202                           ;CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 12203  001BBE  010F               	movlb	15	; () banked
 12204  001BC0  5132               	movf	50,w,b	;volatile
 12205  001BC2  0B1F               	andlw	31
 12206  001BC4  010F               	movlb	15	; () banked
 12207  001BC6  6F32               	movwf	50,b	;volatile
 12208                           
 12209                           ; BSR set to: 15
 12210                           ;CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 12211  001BC8  C068  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 12212  001BCC                     l7086:
 12213                           
 12214                           ;CANlib.h: 422: }
 12215                           ;CANlib.h: 424: if (0b00000001 & flags)
 12216  001BCC  0100               	movlb	0	; () banked
 12217  001BCE  A167               	btfss	CANsendMessage@flags& (0+255),0,b
 12218  001BD0  D003               	goto	l394
 12219                           
 12220                           ; BSR set to: 0
 12221                           ;CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 12222  001BD2  010F               	movlb	15	; () banked
 12223  001BD4  8130               	bsf	48,0,b	;volatile
 12224  001BD6  D002               	goto	l395
 12225  001BD8                     l394:
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;CANlib.h: 426: else
 12229                           ;CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 12230  001BD8  010F               	movlb	15	; () banked
 12231  001BDA  9130               	bcf	48,0,b	;volatile
 12232  001BDC                     l395:
 12233                           
 12234                           ; BSR set to: 15
 12235                           ;CANlib.h: 428: if (0b00000010 & flags)
 12236  001BDC  0100               	movlb	0	; () banked
 12237  001BDE  A367               	btfss	CANsendMessage@flags& (0+255),1,b
 12238  001BE0  D003               	goto	l396
 12239                           
 12240                           ; BSR set to: 0
 12241                           ;CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 12242  001BE2  010F               	movlb	15	; () banked
 12243  001BE4  8330               	bsf	48,1,b	;volatile
 12244  001BE6  D002               	goto	l7092
 12245  001BE8                     l396:
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;CANlib.h: 430: else
 12249                           ;CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 12250  001BE8  010F               	movlb	15	; () banked
 12251  001BEA  9330               	bcf	48,1,b	;volatile
 12252  001BEC                     l7092:
 12253                           
 12254                           ; BSR set to: 15
 12255                           ;CANlib.h: 433: TXB1D0 = data[0];
 12256  001BEC  C064  FFD9         	movff	CANsendMessage@data,fsr2l
 12257  001BF0  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
 12258  001BF4  50DF               	movf	indf2,w,c
 12259  001BF6  010F               	movlb	15	; () banked
 12260  001BF8  6F36               	movwf	54,b	;volatile
 12261                           
 12262                           ; BSR set to: 15
 12263                           ;CANlib.h: 434: TXB1D1 = data[1];
 12264  001BFA  0100               	movlb	0	; () banked
 12265  001BFC  EE20 F001          	lfsr	2,1
 12266  001C00  5164               	movf	CANsendMessage@data& (0+255),w,b
 12267  001C02  26D9               	addwf	fsr2l,f,c
 12268  001C04  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12269  001C06  22DA               	addwfc	fsr2h,f,c
 12270  001C08  50DF               	movf	indf2,w,c
 12271  001C0A  010F               	movlb	15	; () banked
 12272  001C0C  6F37               	movwf	55,b	;volatile
 12273                           
 12274                           ; BSR set to: 15
 12275                           ;CANlib.h: 435: TXB1D2 = data[2];
 12276  001C0E  0100               	movlb	0	; () banked
 12277  001C10  EE20 F002          	lfsr	2,2
 12278  001C14  5164               	movf	CANsendMessage@data& (0+255),w,b
 12279  001C16  26D9               	addwf	fsr2l,f,c
 12280  001C18  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12281  001C1A  22DA               	addwfc	fsr2h,f,c
 12282  001C1C  50DF               	movf	indf2,w,c
 12283  001C1E  010F               	movlb	15	; () banked
 12284  001C20  6F38               	movwf	56,b	;volatile
 12285                           
 12286                           ; BSR set to: 15
 12287                           ;CANlib.h: 436: TXB1D3 = data[3];
 12288  001C22  0100               	movlb	0	; () banked
 12289  001C24  EE20 F003          	lfsr	2,3
 12290  001C28  5164               	movf	CANsendMessage@data& (0+255),w,b
 12291  001C2A  26D9               	addwf	fsr2l,f,c
 12292  001C2C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12293  001C2E  22DA               	addwfc	fsr2h,f,c
 12294  001C30  50DF               	movf	indf2,w,c
 12295  001C32  010F               	movlb	15	; () banked
 12296  001C34  6F39               	movwf	57,b	;volatile
 12297                           
 12298                           ; BSR set to: 15
 12299                           ;CANlib.h: 437: TXB1D4 = data[4];
 12300  001C36  0100               	movlb	0	; () banked
 12301  001C38  EE20 F004          	lfsr	2,4
 12302  001C3C  5164               	movf	CANsendMessage@data& (0+255),w,b
 12303  001C3E  26D9               	addwf	fsr2l,f,c
 12304  001C40  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12305  001C42  22DA               	addwfc	fsr2h,f,c
 12306  001C44  50DF               	movf	indf2,w,c
 12307  001C46  010F               	movlb	15	; () banked
 12308  001C48  6F3A               	movwf	58,b	;volatile
 12309                           
 12310                           ; BSR set to: 15
 12311                           ;CANlib.h: 438: TXB1D5 = data[5];
 12312  001C4A  0100               	movlb	0	; () banked
 12313  001C4C  EE20 F005          	lfsr	2,5
 12314  001C50  5164               	movf	CANsendMessage@data& (0+255),w,b
 12315  001C52  26D9               	addwf	fsr2l,f,c
 12316  001C54  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12317  001C56  22DA               	addwfc	fsr2h,f,c
 12318  001C58  50DF               	movf	indf2,w,c
 12319  001C5A  010F               	movlb	15	; () banked
 12320  001C5C  6F3B               	movwf	59,b	;volatile
 12321                           
 12322                           ; BSR set to: 15
 12323                           ;CANlib.h: 439: TXB1D6 = data[6];
 12324  001C5E  0100               	movlb	0	; () banked
 12325  001C60  EE20 F006          	lfsr	2,6
 12326  001C64  5164               	movf	CANsendMessage@data& (0+255),w,b
 12327  001C66  26D9               	addwf	fsr2l,f,c
 12328  001C68  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12329  001C6A  22DA               	addwfc	fsr2h,f,c
 12330  001C6C  50DF               	movf	indf2,w,c
 12331  001C6E  010F               	movlb	15	; () banked
 12332  001C70  6F3C               	movwf	60,b	;volatile
 12333                           
 12334                           ; BSR set to: 15
 12335                           ;CANlib.h: 440: TXB1D7 = data[7];
 12336  001C72  0100               	movlb	0	; () banked
 12337  001C74  EE20 F007          	lfsr	2,7
 12338  001C78  5164               	movf	CANsendMessage@data& (0+255),w,b
 12339  001C7A  26D9               	addwf	fsr2l,f,c
 12340  001C7C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12341  001C7E  22DA               	addwfc	fsr2h,f,c
 12342  001C80  50DF               	movf	indf2,w,c
 12343  001C82  010F               	movlb	15	; () banked
 12344  001C84  6F3D               	movwf	61,b	;volatile
 12345                           
 12346                           ; BSR set to: 15
 12347                           ;CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 12348  001C86  010F               	movlb	15	; () banked
 12349  001C88  8730               	bsf	48,3,b	;volatile
 12350                           
 12351                           ; BSR set to: 15
 12352                           ;CANlib.h: 444: return;
 12353  001C8A  0012               	return	
 12354  001C8C                     l384:
 12355                           
 12356                           ; BSR set to: 15
 12357                           ;CANlib.h: 445: }
 12358                           ;CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 12359  001C8C  010F               	movlb	15	; () banked
 12360  001C8E  B720               	btfsc	32,3,b	;volatile
 12361  001C90  0012               	return	
 12362                           
 12363                           ; BSR set to: 15
 12364                           ;CANlib.h: 450: { TXB2DLC = dataLength;
 12365  001C92  C066  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 12366                           
 12367                           ;CANlib.h: 452: if (0b01000000 & flags)
 12368  001C96  0100               	movlb	0	; () banked
 12369  001C98  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
 12370  001C9A  D003               	goto	l399
 12371                           
 12372                           ; BSR set to: 0
 12373                           ;CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 12374  001C9C  010F               	movlb	15	; () banked
 12375  001C9E  8D25               	bsf	37,6,b	;volatile
 12376  001CA0  D002               	goto	l400
 12377  001CA2                     l399:
 12378                           
 12379                           ; BSR set to: 0
 12380                           ;CANlib.h: 454: else
 12381                           ;CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 12382  001CA2  010F               	movlb	15	; () banked
 12383  001CA4  9D25               	bcf	37,6,b	;volatile
 12384  001CA6                     l400:
 12385                           
 12386                           ; BSR set to: 15
 12387                           ;CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 12388  001CA6  0100               	movlb	0	; () banked
 12389  001CA8  A767               	btfss	CANsendMessage@flags& (0+255),3,b
 12390  001CAA  D077               	goto	l401
 12391                           
 12392                           ; BSR set to: 0
 12393                           ;CANlib.h: 458: {
 12394                           ;CANlib.h: 459: tamp = identifier & 0x000000FF;
 12395  001CAC  0100               	movlb	0	; () banked
 12396  001CAE  5160               	movf	CANsendMessage@identifier& (0+255),w,b
 12397  001CB0  0100               	movlb	0	; () banked
 12398  001CB2  6F68               	movwf	CANsendMessage@tamp& (0+255),b
 12399  001CB4  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 12400  001CB6  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 12401  001CB8  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 12402                           
 12403                           ; BSR set to: 0
 12404                           ;CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 12405  001CBA  C068  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 12406                           
 12407                           ; BSR set to: 0
 12408                           ;CANlib.h: 462: tamp = identifier & 0x0000FF00;
 12409  001CBE  0E00               	movlw	0
 12410  001CC0  0100               	movlb	0	; () banked
 12411  001CC2  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 12412  001CC4  0100               	movlb	0	; () banked
 12413  001CC6  6F68               	movwf	CANsendMessage@tamp& (0+255),b
 12414  001CC8  0EFF               	movlw	255
 12415  001CCA  0100               	movlb	0	; () banked
 12416  001CCC  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 12417  001CCE  0100               	movlb	0	; () banked
 12418  001CD0  6F69               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 12419  001CD2  0E00               	movlw	0
 12420  001CD4  0100               	movlb	0	; () banked
 12421  001CD6  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 12422  001CD8  0100               	movlb	0	; () banked
 12423  001CDA  6F6A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 12424  001CDC  0E00               	movlw	0
 12425  001CDE  0100               	movlb	0	; () banked
 12426  001CE0  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 12427  001CE2  0100               	movlb	0	; () banked
 12428  001CE4  6F6B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 12429                           
 12430                           ; BSR set to: 0
 12431                           ;CANlib.h: 463: tamp = tamp >> 8;
 12432  001CE6  C068  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
 12433  001CEA  C069  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 12434  001CEE  C06A  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 12435  001CF2  C06B  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 12436  001CF6  C020  F01F         	movff	??_CANsendMessage+1,??_CANsendMessage
 12437  001CFA  C021  F020         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 12438  001CFE  C022  F021         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 12439  001D02  6A22               	clrf	??_CANsendMessage+3,c
 12440  001D04  C01F  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
 12441  001D08  C020  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12442  001D0C  C021  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12443  001D10  C022  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12444                           
 12445                           ; BSR set to: 0
 12446                           ;CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 12447  001D14  C068  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 12448                           
 12449                           ; BSR set to: 0
 12450                           ;CANlib.h: 466: TXB2SIDL = 0x00;
 12451  001D18  0E00               	movlw	0
 12452  001D1A  010F               	movlb	15	; () banked
 12453  001D1C  6F22               	movwf	34,b	;volatile
 12454                           
 12455                           ; BSR set to: 15
 12456                           ;CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 12457  001D1E  010F               	movlb	15	; () banked
 12458  001D20  8722               	bsf	34,3,b	;volatile
 12459                           
 12460                           ; BSR set to: 15
 12461                           ;CANlib.h: 469: if (identifier & 0x00010000)
 12462  001D22  0100               	movlb	0	; () banked
 12463  001D24  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 12464  001D26  D002               	goto	l402
 12465                           
 12466                           ; BSR set to: 0
 12467                           ;CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 12468  001D28  010F               	movlb	15	; () banked
 12469  001D2A  8122               	bsf	34,0,b	;volatile
 12470  001D2C                     l402:
 12471                           
 12472                           ;CANlib.h: 471: if (identifier & 0x00020000)
 12473  001D2C  0100               	movlb	0	; () banked
 12474  001D2E  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 12475  001D30  D002               	goto	l403
 12476                           
 12477                           ; BSR set to: 0
 12478                           ;CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 12479  001D32  010F               	movlb	15	; () banked
 12480  001D34  8322               	bsf	34,1,b	;volatile
 12481  001D36                     l403:
 12482                           
 12483                           ;CANlib.h: 473: if (identifier & 0x00040000)
 12484  001D36  0100               	movlb	0	; () banked
 12485  001D38  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 12486  001D3A  D002               	goto	l404
 12487                           
 12488                           ; BSR set to: 0
 12489                           ;CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 12490  001D3C  010F               	movlb	15	; () banked
 12491  001D3E  8B22               	bsf	34,5,b	;volatile
 12492  001D40                     l404:
 12493                           
 12494                           ;CANlib.h: 475: if (identifier & 0x00080000)
 12495  001D40  0100               	movlb	0	; () banked
 12496  001D42  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 12497  001D44  D002               	goto	l405
 12498                           
 12499                           ; BSR set to: 0
 12500                           ;CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 12501  001D46  010F               	movlb	15	; () banked
 12502  001D48  8D22               	bsf	34,6,b	;volatile
 12503  001D4A                     l405:
 12504                           
 12505                           ;CANlib.h: 477: if (identifier & 0x00100000)
 12506  001D4A  0100               	movlb	0	; () banked
 12507  001D4C  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 12508  001D4E  D002               	goto	l7142
 12509                           
 12510                           ; BSR set to: 0
 12511                           ;CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 12512  001D50  010F               	movlb	15	; () banked
 12513  001D52  8F22               	bsf	34,7,b	;volatile
 12514  001D54                     l7142:
 12515                           
 12516                           ;CANlib.h: 480: tamp = (identifier >> 21);
 12517  001D54  C060  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
 12518  001D58  C061  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 12519  001D5C  C062  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 12520  001D60  C063  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 12521  001D64  0E16               	movlw	22
 12522  001D66  D005               	goto	u9940
 12523  001D68                     u9945:
 12524  001D68  90D8               	bcf	status,0,c
 12525  001D6A  3222               	rrcf	??_CANsendMessage+3,f,c
 12526  001D6C  3221               	rrcf	??_CANsendMessage+2,f,c
 12527  001D6E  3220               	rrcf	??_CANsendMessage+1,f,c
 12528  001D70  321F               	rrcf	??_CANsendMessage,f,c
 12529  001D72                     u9940:
 12530  001D72  2EE8               	decfsz	wreg,f,c
 12531  001D74  D7F9               	goto	u9945
 12532  001D76  C01F  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
 12533  001D7A  C020  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12534  001D7E  C021  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12535  001D82  C022  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12536                           
 12537                           ;CANlib.h: 481: tamp = tamp & 0x000000FF;
 12538  001D86  0100               	movlb	0	; () banked
 12539  001D88  5168               	movf	CANsendMessage@tamp& (0+255),w,b
 12540  001D8A  0100               	movlb	0	; () banked
 12541  001D8C  6F68               	movwf	CANsendMessage@tamp& (0+255),b
 12542  001D8E  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 12543  001D90  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 12544  001D92  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 12545                           
 12546                           ; BSR set to: 0
 12547                           ;CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 12548  001D94  C068  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 12549                           
 12550                           ;CANlib.h: 483: }
 12551  001D98  D057               	goto	l7162
 12552  001D9A                     l401:
 12553                           
 12554                           ; BSR set to: 0
 12555                           ;CANlib.h: 485: else
 12556                           ;CANlib.h: 487: {
 12557                           ;CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 12558  001D9A  010F               	movlb	15	; () banked
 12559  001D9C  9722               	bcf	34,3,b	;volatile
 12560                           
 12561                           ; BSR set to: 15
 12562                           ;CANlib.h: 490: tamp = (identifier >> 3);
 12563  001D9E  C060  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
 12564  001DA2  C061  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 12565  001DA6  C062  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 12566  001DAA  C063  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 12567  001DAE  0E04               	movlw	4
 12568  001DB0  D005               	goto	u9950
 12569  001DB2                     u9955:
 12570  001DB2  90D8               	bcf	status,0,c
 12571  001DB4  3222               	rrcf	??_CANsendMessage+3,f,c
 12572  001DB6  3221               	rrcf	??_CANsendMessage+2,f,c
 12573  001DB8  3220               	rrcf	??_CANsendMessage+1,f,c
 12574  001DBA  321F               	rrcf	??_CANsendMessage,f,c
 12575  001DBC                     u9950:
 12576  001DBC  2EE8               	decfsz	wreg,f,c
 12577  001DBE  D7F9               	goto	u9955
 12578  001DC0  C01F  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
 12579  001DC4  C020  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12580  001DC8  C021  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12581  001DCC  C022  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12582                           
 12583                           ; BSR set to: 15
 12584                           ;CANlib.h: 491: tamp = tamp & 0x000000FF;
 12585  001DD0  0100               	movlb	0	; () banked
 12586  001DD2  5168               	movf	CANsendMessage@tamp& (0+255),w,b
 12587  001DD4  0100               	movlb	0	; () banked
 12588  001DD6  6F68               	movwf	CANsendMessage@tamp& (0+255),b
 12589  001DD8  6B69               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 12590  001DDA  6B6A               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 12591  001DDC  6B6B               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 12592                           
 12593                           ; BSR set to: 0
 12594                           ;CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 12595  001DDE  C068  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 12596                           
 12597                           ; BSR set to: 0
 12598                           ;CANlib.h: 494: tamp = identifier & 0x00000007;
 12599  001DE2  0E07               	movlw	7
 12600  001DE4  0100               	movlb	0	; () banked
 12601  001DE6  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 12602  001DE8  0100               	movlb	0	; () banked
 12603  001DEA  6F68               	movwf	CANsendMessage@tamp& (0+255),b
 12604  001DEC  0E00               	movlw	0
 12605  001DEE  0100               	movlb	0	; () banked
 12606  001DF0  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 12607  001DF2  0100               	movlb	0	; () banked
 12608  001DF4  6F69               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 12609  001DF6  0E00               	movlw	0
 12610  001DF8  0100               	movlb	0	; () banked
 12611  001DFA  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 12612  001DFC  0100               	movlb	0	; () banked
 12613  001DFE  6F6A               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 12614  001E00  0E00               	movlw	0
 12615  001E02  0100               	movlb	0	; () banked
 12616  001E04  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 12617  001E06  0100               	movlb	0	; () banked
 12618  001E08  6F6B               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 12619                           
 12620                           ; BSR set to: 0
 12621                           ;CANlib.h: 495: tamp = tamp << 5;
 12622  001E0A  C068  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
 12623  001E0E  C069  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 12624  001E12  C06A  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 12625  001E16  C06B  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 12626  001E1A  0E05               	movlw	5
 12627  001E1C                     u9965:
 12628  001E1C  90D8               	bcf	status,0,c
 12629  001E1E  361F               	rlcf	??_CANsendMessage,f,c
 12630  001E20  3620               	rlcf	??_CANsendMessage+1,f,c
 12631  001E22  3621               	rlcf	??_CANsendMessage+2,f,c
 12632  001E24  3622               	rlcf	??_CANsendMessage+3,f,c
 12633  001E26  2EE8               	decfsz	wreg,f,c
 12634  001E28  D7F9               	goto	u9965
 12635  001E2A  C01F  F068         	movff	??_CANsendMessage,CANsendMessage@tamp
 12636  001E2E  C020  F069         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12637  001E32  C021  F06A         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12638  001E36  C022  F06B         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12639                           
 12640                           ; BSR set to: 0
 12641                           ;CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 12642  001E3A  010F               	movlb	15	; () banked
 12643  001E3C  5122               	movf	34,w,b	;volatile
 12644  001E3E  0B1F               	andlw	31
 12645  001E40  010F               	movlb	15	; () banked
 12646  001E42  6F22               	movwf	34,b	;volatile
 12647                           
 12648                           ; BSR set to: 15
 12649                           ;CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 12650  001E44  C068  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 12651  001E48                     l7162:
 12652                           
 12653                           ;CANlib.h: 498: }
 12654                           ;CANlib.h: 500: if (0b00000001 & flags)
 12655  001E48  0100               	movlb	0	; () banked
 12656  001E4A  A167               	btfss	CANsendMessage@flags& (0+255),0,b
 12657  001E4C  D003               	goto	l408
 12658                           
 12659                           ; BSR set to: 0
 12660                           ;CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 12661  001E4E  010F               	movlb	15	; () banked
 12662  001E50  8120               	bsf	32,0,b	;volatile
 12663  001E52  D002               	goto	l409
 12664  001E54                     l408:
 12665                           
 12666                           ; BSR set to: 0
 12667                           ;CANlib.h: 502: else
 12668                           ;CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 12669  001E54  010F               	movlb	15	; () banked
 12670  001E56  9120               	bcf	32,0,b	;volatile
 12671  001E58                     l409:
 12672                           
 12673                           ; BSR set to: 15
 12674                           ;CANlib.h: 504: if (0b00000010 & flags)
 12675  001E58  0100               	movlb	0	; () banked
 12676  001E5A  A367               	btfss	CANsendMessage@flags& (0+255),1,b
 12677  001E5C  D003               	goto	l410
 12678                           
 12679                           ; BSR set to: 0
 12680                           ;CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 12681  001E5E  010F               	movlb	15	; () banked
 12682  001E60  8320               	bsf	32,1,b	;volatile
 12683  001E62  D002               	goto	l7168
 12684  001E64                     l410:
 12685                           
 12686                           ; BSR set to: 0
 12687                           ;CANlib.h: 506: else
 12688                           ;CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 12689  001E64  010F               	movlb	15	; () banked
 12690  001E66  9320               	bcf	32,1,b	;volatile
 12691  001E68                     l7168:
 12692                           
 12693                           ; BSR set to: 15
 12694                           ;CANlib.h: 509: TXB2D0 = data[0];
 12695  001E68  C064  FFD9         	movff	CANsendMessage@data,fsr2l
 12696  001E6C  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
 12697  001E70  50DF               	movf	indf2,w,c
 12698  001E72  010F               	movlb	15	; () banked
 12699  001E74  6F26               	movwf	38,b	;volatile
 12700                           
 12701                           ; BSR set to: 15
 12702                           ;CANlib.h: 510: TXB2D1 = data[1];
 12703  001E76  0100               	movlb	0	; () banked
 12704  001E78  EE20 F001          	lfsr	2,1
 12705  001E7C  5164               	movf	CANsendMessage@data& (0+255),w,b
 12706  001E7E  26D9               	addwf	fsr2l,f,c
 12707  001E80  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12708  001E82  22DA               	addwfc	fsr2h,f,c
 12709  001E84  50DF               	movf	indf2,w,c
 12710  001E86  010F               	movlb	15	; () banked
 12711  001E88  6F27               	movwf	39,b	;volatile
 12712                           
 12713                           ; BSR set to: 15
 12714                           ;CANlib.h: 511: TXB2D2 = data[2];
 12715  001E8A  0100               	movlb	0	; () banked
 12716  001E8C  EE20 F002          	lfsr	2,2
 12717  001E90  5164               	movf	CANsendMessage@data& (0+255),w,b
 12718  001E92  26D9               	addwf	fsr2l,f,c
 12719  001E94  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12720  001E96  22DA               	addwfc	fsr2h,f,c
 12721  001E98  50DF               	movf	indf2,w,c
 12722  001E9A  010F               	movlb	15	; () banked
 12723  001E9C  6F28               	movwf	40,b	;volatile
 12724                           
 12725                           ; BSR set to: 15
 12726                           ;CANlib.h: 512: TXB2D3 = data[3];
 12727  001E9E  0100               	movlb	0	; () banked
 12728  001EA0  EE20 F003          	lfsr	2,3
 12729  001EA4  5164               	movf	CANsendMessage@data& (0+255),w,b
 12730  001EA6  26D9               	addwf	fsr2l,f,c
 12731  001EA8  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12732  001EAA  22DA               	addwfc	fsr2h,f,c
 12733  001EAC  50DF               	movf	indf2,w,c
 12734  001EAE  010F               	movlb	15	; () banked
 12735  001EB0  6F29               	movwf	41,b	;volatile
 12736                           
 12737                           ; BSR set to: 15
 12738                           ;CANlib.h: 513: TXB2D4 = data[4];
 12739  001EB2  0100               	movlb	0	; () banked
 12740  001EB4  EE20 F004          	lfsr	2,4
 12741  001EB8  5164               	movf	CANsendMessage@data& (0+255),w,b
 12742  001EBA  26D9               	addwf	fsr2l,f,c
 12743  001EBC  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12744  001EBE  22DA               	addwfc	fsr2h,f,c
 12745  001EC0  50DF               	movf	indf2,w,c
 12746  001EC2  010F               	movlb	15	; () banked
 12747  001EC4  6F2A               	movwf	42,b	;volatile
 12748                           
 12749                           ; BSR set to: 15
 12750                           ;CANlib.h: 514: TXB2D5 = data[5];
 12751  001EC6  0100               	movlb	0	; () banked
 12752  001EC8  EE20 F005          	lfsr	2,5
 12753  001ECC  5164               	movf	CANsendMessage@data& (0+255),w,b
 12754  001ECE  26D9               	addwf	fsr2l,f,c
 12755  001ED0  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12756  001ED2  22DA               	addwfc	fsr2h,f,c
 12757  001ED4  50DF               	movf	indf2,w,c
 12758  001ED6  010F               	movlb	15	; () banked
 12759  001ED8  6F2B               	movwf	43,b	;volatile
 12760                           
 12761                           ; BSR set to: 15
 12762                           ;CANlib.h: 515: TXB2D6 = data[6];
 12763  001EDA  0100               	movlb	0	; () banked
 12764  001EDC  EE20 F006          	lfsr	2,6
 12765  001EE0  5164               	movf	CANsendMessage@data& (0+255),w,b
 12766  001EE2  26D9               	addwf	fsr2l,f,c
 12767  001EE4  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12768  001EE6  22DA               	addwfc	fsr2h,f,c
 12769  001EE8  50DF               	movf	indf2,w,c
 12770  001EEA  010F               	movlb	15	; () banked
 12771  001EEC  6F2C               	movwf	44,b	;volatile
 12772                           
 12773                           ; BSR set to: 15
 12774                           ;CANlib.h: 516: TXB2D7 = data[7];
 12775  001EEE  0100               	movlb	0	; () banked
 12776  001EF0  EE20 F007          	lfsr	2,7
 12777  001EF4  5164               	movf	CANsendMessage@data& (0+255),w,b
 12778  001EF6  26D9               	addwf	fsr2l,f,c
 12779  001EF8  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12780  001EFA  22DA               	addwfc	fsr2h,f,c
 12781  001EFC  50DF               	movf	indf2,w,c
 12782  001EFE  010F               	movlb	15	; () banked
 12783  001F00  6F2D               	movwf	45,b	;volatile
 12784                           
 12785                           ; BSR set to: 15
 12786                           ;CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 12787  001F02  010F               	movlb	15	; () banked
 12788  001F04  8720               	bsf	32,3,b	;volatile
 12789                           
 12790                           ; BSR set to: 15
 12791                           ;CANlib.h: 520: return;
 12792  001F06  0012               	return	
 12793  001F08                     __end_of_CANsendMessage:
 12794                           	opt stack 0
 12795                           tblptru	equ	0xFF8
 12796                           tblptrh	equ	0xFF7
 12797                           tblptrl	equ	0xFF6
 12798                           tablat	equ	0xFF5
 12799                           prodh	equ	0xFF4
 12800                           prodl	equ	0xFF3
 12801                           intcon	equ	0xFF2
 12802                           postinc0	equ	0xFEE
 12803                           wreg	equ	0xFE8
 12804                           postdec1	equ	0xFE5
 12805                           fsr1l	equ	0xFE1
 12806                           indf2	equ	0xFDF
 12807                           postinc2	equ	0xFDE
 12808                           postdec2	equ	0xFDD
 12809                           fsr2h	equ	0xFDA
 12810                           fsr2l	equ	0xFD9
 12811                           status	equ	0xFD8
 12812                           
 12813 ;; *************** function _CANisTxReady *****************
 12814 ;; Defined at:
 12815 ;;		line 1154 in file "CANlib.h"
 12816 ;; Parameters:    Size  Location     Type
 12817 ;;		None
 12818 ;; Auto vars:     Size  Location     Type
 12819 ;;		None
 12820 ;; Return value:  Size  Location     Type
 12821 ;;                  1    wreg      unsigned char 
 12822 ;; Registers used:
 12823 ;;		wreg, status,2
 12824 ;; Tracked objects:
 12825 ;;		On entry : 0/0
 12826 ;;		On exit  : 0/0
 12827 ;;		Unchanged: 0/0
 12828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12832 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12833 ;;Total ram usage:        1 bytes
 12834 ;; Hardware stack levels used:    1
 12835 ;; Hardware stack levels required when called:    2
 12836 ;; This function calls:
 12837 ;;		Nothing
 12838 ;; This function is called by:
 12839 ;;		_main
 12840 ;;		_rampe
 12841 ;;		_send_data
 12842 ;;		_battery_measure
 12843 ;; This function uses a non-reentrant model
 12844 ;;
 12845                           
 12846                           	psect	text33
 12847  00503C                     __ptext33:
 12848                           	opt stack 0
 12849  00503C                     _CANisTxReady:
 12850                           	opt stack 27
 12851                           
 12852                           ;CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TXREQ)
      +                          ;
 12853                           
 12854                           ; BSR set to: 15
 12855                           ;incstack = 0
 12856  00503C  0E01               	movlw	1
 12857  00503E  6E1F               	movwf	_CANisTxReady$3005,c
 12858  005040  010F               	movlb	15	; () banked
 12859  005042  A740               	btfss	64,3,b	;volatile
 12860  005044  D008               	goto	l562
 12861                           
 12862                           ; BSR set to: 15
 12863  005046  010F               	movlb	15	; () banked
 12864  005048  A730               	btfss	48,3,b	;volatile
 12865  00504A  D005               	goto	l562
 12866                           
 12867                           ; BSR set to: 15
 12868  00504C  010F               	movlb	15	; () banked
 12869  00504E  A720               	btfss	32,3,b	;volatile
 12870  005050  D002               	goto	l562
 12871                           
 12872                           ; BSR set to: 15
 12873  005052  0E00               	movlw	0
 12874  005054  6E1F               	movwf	_CANisTxReady$3005,c
 12875  005056                     l562:
 12876                           
 12877                           ; BSR set to: 15
 12878  005056  501F               	movf	_CANisTxReady$3005,w,c
 12879  005058  0012               	return	
 12880  00505A                     __end_of_CANisTxReady:
 12881                           	opt stack 0
 12882                           tblptru	equ	0xFF8
 12883                           tblptrh	equ	0xFF7
 12884                           tblptrl	equ	0xFF6
 12885                           tablat	equ	0xFF5
 12886                           prodh	equ	0xFF4
 12887                           prodl	equ	0xFF3
 12888                           intcon	equ	0xFF2
 12889                           postinc0	equ	0xFEE
 12890                           wreg	equ	0xFE8
 12891                           postdec1	equ	0xFE5
 12892                           fsr1l	equ	0xFE1
 12893                           indf2	equ	0xFDF
 12894                           postinc2	equ	0xFDE
 12895                           postdec2	equ	0xFDD
 12896                           fsr2h	equ	0xFDA
 12897                           fsr2l	equ	0xFD9
 12898                           status	equ	0xFD8
 12899                           
 12900 ;; *************** function _OpenTimer2 *****************
 12901 ;; Defined at:
 12902 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
 12903 ;; Parameters:    Size  Location     Type
 12904 ;;  config          1    wreg     unsigned char 
 12905 ;; Auto vars:     Size  Location     Type
 12906 ;;  config          1   30[COMRAM] unsigned char 
 12907 ;; Return value:  Size  Location     Type
 12908 ;;		None               void
 12909 ;; Registers used:
 12910 ;;		wreg, status,2, status,0
 12911 ;; Tracked objects:
 12912 ;;		On entry : 0/0
 12913 ;;		On exit  : 0/0
 12914 ;;		Unchanged: 0/0
 12915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12917 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12919 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12920 ;;Total ram usage:        1 bytes
 12921 ;; Hardware stack levels used:    1
 12922 ;; Hardware stack levels required when called:    2
 12923 ;; This function calls:
 12924 ;;		Nothing
 12925 ;; This function is called by:
 12926 ;;		_main
 12927 ;; This function uses a non-reentrant model
 12928 ;;
 12929                           
 12930                           	psect	text34
 12931  00505A                     __ptext34:
 12932                           	opt stack 0
 12933  00505A                     _OpenTimer2:
 12934                           	opt stack 28
 12935                           
 12936                           ; BSR set to: 15
 12937                           ;incstack = 0
 12938                           ;OpenTimer2@config stored from wreg
 12939  00505A  6E1F               	movwf	OpenTimer2@config,c
 12940  00505C  501F               	movf	OpenTimer2@config,w,c
 12941  00505E  0BFB               	andlw	251
 12942  005060  6ECA               	movwf	4042,c	;volatile
 12943  005062  0E00               	movlw	0
 12944  005064  6ECC               	movwf	4044,c	;volatile
 12945  005066  929E               	bcf	3998,1,c	;volatile
 12946  005068  AE1F               	btfss	OpenTimer2@config,7,c
 12947  00506A  D002               	goto	l781
 12948  00506C  829D               	bsf	3997,1,c	;volatile
 12949  00506E  D001               	goto	l782
 12950  005070                     l781:
 12951  005070  929D               	bcf	3997,1,c	;volatile
 12952  005072                     l782:
 12953  005072  84CA               	bsf	4042,2,c	;volatile
 12954  005074  0012               	return		;funcret
 12955  005076                     __end_of_OpenTimer2:
 12956                           	opt stack 0
 12957                           tblptru	equ	0xFF8
 12958                           tblptrh	equ	0xFF7
 12959                           tblptrl	equ	0xFF6
 12960                           tablat	equ	0xFF5
 12961                           prodh	equ	0xFF4
 12962                           prodl	equ	0xFF3
 12963                           intcon	equ	0xFF2
 12964                           postinc0	equ	0xFEE
 12965                           wreg	equ	0xFE8
 12966                           postdec1	equ	0xFE5
 12967                           fsr1l	equ	0xFE1
 12968                           indf2	equ	0xFDF
 12969                           postinc2	equ	0xFDE
 12970                           postdec2	equ	0xFDD
 12971                           fsr2h	equ	0xFDA
 12972                           fsr2l	equ	0xFD9
 12973                           status	equ	0xFD8
 12974                           
 12975 ;; *************** function _OpenEPWM1 *****************
 12976 ;; Defined at:
 12977 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
 12978 ;; Parameters:    Size  Location     Type
 12979 ;;  period          1    wreg     unsigned char 
 12980 ;; Auto vars:     Size  Location     Type
 12981 ;;  period          1   30[COMRAM] unsigned char 
 12982 ;; Return value:  Size  Location     Type
 12983 ;;		None               void
 12984 ;; Registers used:
 12985 ;;		wreg, status,2
 12986 ;; Tracked objects:
 12987 ;;		On entry : 0/0
 12988 ;;		On exit  : 0/0
 12989 ;;		Unchanged: 0/0
 12990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12994 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12995 ;;Total ram usage:        1 bytes
 12996 ;; Hardware stack levels used:    1
 12997 ;; Hardware stack levels required when called:    2
 12998 ;; This function calls:
 12999 ;;		Nothing
 13000 ;; This function is called by:
 13001 ;;		_main
 13002 ;; This function uses a non-reentrant model
 13003 ;;
 13004                           
 13005                           	psect	text35
 13006  00509E                     __ptext35:
 13007                           	opt stack 0
 13008  00509E                     _OpenEPWM1:
 13009                           	opt stack 28
 13010                           
 13011                           ;incstack = 0
 13012                           ;OpenEPWM1@period stored from wreg
 13013  00509E  6E1F               	movwf	OpenEPWM1@period,c
 13014  0050A0  0E0C               	movlw	12
 13015  0050A2  6EBA               	movwf	4026,c	;volatile
 13016  0050A4  94CA               	bcf	4042,2,c	;volatile
 13017  0050A6  C01F  FFCB         	movff	OpenEPWM1@period,4043	;volatile
 13018  0050AA  84CA               	bsf	4042,2,c	;volatile
 13019  0050AC  0012               	return		;funcret
 13020  0050AE                     __end_of_OpenEPWM1:
 13021                           	opt stack 0
 13022                           tblptru	equ	0xFF8
 13023                           tblptrh	equ	0xFF7
 13024                           tblptrl	equ	0xFF6
 13025                           tablat	equ	0xFF5
 13026                           prodh	equ	0xFF4
 13027                           prodl	equ	0xFF3
 13028                           intcon	equ	0xFF2
 13029                           postinc0	equ	0xFEE
 13030                           wreg	equ	0xFE8
 13031                           postdec1	equ	0xFE5
 13032                           fsr1l	equ	0xFE1
 13033                           indf2	equ	0xFDF
 13034                           postinc2	equ	0xFDE
 13035                           postdec2	equ	0xFDD
 13036                           fsr2h	equ	0xFDA
 13037                           fsr2l	equ	0xFD9
 13038                           status	equ	0xFD8
 13039                           
 13040 ;; *************** function _ISR_bassa *****************
 13041 ;; Defined at:
 13042 ;;		line 93 in file "motore.c"
 13043 ;; Parameters:    Size  Location     Type
 13044 ;;		None
 13045 ;; Auto vars:     Size  Location     Type
 13046 ;;  i               1   29[COMRAM] unsigned char 
 13047 ;; Return value:  Size  Location     Type
 13048 ;;		None               void
 13049 ;; Registers used:
 13050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13051 ;; Tracked objects:
 13052 ;;		On entry : 0/0
 13053 ;;		On exit  : 0/0
 13054 ;;		Unchanged: 0/0
 13055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13058 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13059 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13060 ;;Total ram usage:       18 bytes
 13061 ;; Hardware stack levels used:    1
 13062 ;; Hardware stack levels required when called:    1
 13063 ;; This function calls:
 13064 ;;		_CANisRxReady
 13065 ;;		_CANreceiveMessage
 13066 ;; This function is called by:
 13067 ;;		Interrupt level 1
 13068 ;; This function uses a non-reentrant model
 13069 ;;
 13070                           
 13071                           	psect	intcodelo
 13072  000018                     __pintcodelo:
 13073                           	opt stack 0
 13074  000018                     _ISR_bassa:
 13075                           	opt stack 24
 13076                           
 13077                           ;incstack = 0
 13078  000018  8041               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13079  00001A  CFD8 F00D          	movff	status,??_ISR_bassa
 13080  00001E  CFE8 F00E          	movff	wreg,??_ISR_bassa+1
 13081  000022  CFE0 F00F          	movff	bsr,??_ISR_bassa+2
 13082  000026  CFFA F010          	movff	pclath,??_ISR_bassa+3
 13083  00002A  CFFB F011          	movff	pclatu,??_ISR_bassa+4
 13084  00002E  CFE9 F012          	movff	fsr0l,??_ISR_bassa+5
 13085  000032  CFEA F013          	movff	fsr0h,??_ISR_bassa+6
 13086  000036  CFE1 F014          	movff	fsr1l,??_ISR_bassa+7
 13087  00003A  CFE2 F015          	movff	fsr1h,??_ISR_bassa+8
 13088  00003E  CFD9 F016          	movff	fsr2l,??_ISR_bassa+9
 13089  000042  CFDA F017          	movff	fsr2h,??_ISR_bassa+10
 13090  000046  CFF3 F018          	movff	prodl,??_ISR_bassa+11
 13091  00004A  CFF4 F019          	movff	prodh,??_ISR_bassa+12
 13092  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_bassa+13
 13093  000052  CFF7 F01B          	movff	tblptrh,??_ISR_bassa+14
 13094  000056  CFF8 F01C          	movff	tblptru,??_ISR_bassa+15
 13095  00005A  CFF5 F01D          	movff	tablat,??_ISR_bassa+16
 13096                           
 13097                           ;motore.c: 94: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 13098  00005E  B0A4               	btfsc	4004,0,c	;volatile
 13099  000060  D002               	goto	i1l658
 13100  000062  A2A4               	btfss	4004,1,c	;volatile
 13101  000064  D038               	goto	i1l656
 13102  000066                     i1l658:
 13103                           
 13104                           ;motore.c: 95: if (PIR3bits.RXB0IF == 1) {
 13105  000066  B0A4               	btfsc	4004,0,c	;volatile
 13106                           
 13107                           ;motore.c: 96: PORTCbits.RC1 = 1;
 13108  000068  8282               	bsf	3970,1,c	;volatile
 13109                           
 13110                           ;motore.c: 97: }
 13111                           ;motore.c: 98: if (CANisRxReady()) {
 13112  00006A  EC3B  F028         	call	_CANisRxReady	;wreg free
 13113  00006E  0900               	iorlw	0
 13114  000070  B4D8               	btfsc	status,2,c
 13115  000072  D02F               	goto	i1l660
 13116                           
 13117                           ;motore.c: 99: CANreceiveMessage(&msg);
 13118  000074  0E10               	movlw	low _msg
 13119  000076  6E01               	movwf	CANreceiveMessage@msg,c
 13120  000078  0E01               	movlw	high _msg
 13121  00007A  6E02               	movwf	CANreceiveMessage@msg+1,c
 13122  00007C  EC84  F00F         	call	_CANreceiveMessage	;wreg free
 13123                           
 13124                           ;motore.c: 100: remote_frame = msg.RTR;
 13125  000080  0101               	movlb	1	; () banked
 13126  000082  A11E               	btfss	(_msg+14)& (0+255),0,b
 13127  000084  D002               	goto	i1u715_20
 13128  000086  8C3E               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
 13129  000088  D001               	goto	i1l5626
 13130  00008A                     i1u715_20:
 13131  00008A  9C3E               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
 13132  00008C                     i1l5626:
 13133                           
 13134                           ;motore.c: 101: id = msg.identifier;
 13135  00008C  C110  F026         	movff	_msg,_id	;volatile
 13136  000090  C111  F027         	movff	_msg+1,_id+1	;volatile
 13137  000094  C112  F028         	movff	_msg+2,_id+2	;volatile
 13138  000098  C113  F029         	movff	_msg+3,_id+3	;volatile
 13139                           
 13140                           ;motore.c: 102: for (char i = 0; i < 8; i++) {
 13141  00009C  0E00               	movlw	0
 13142  00009E  6E1E               	movwf	ISR_bassa@i,c
 13143  0000A0                     i1l5630:
 13144  0000A0  0E07               	movlw	7
 13145  0000A2  641E               	cpfsgt	ISR_bassa@i,c
 13146  0000A4  D001               	goto	i1l5634
 13147  0000A6  D014               	goto	i1l662
 13148  0000A8                     i1l5634:
 13149                           
 13150                           ;motore.c: 103: data_array[i] = msg.data[i];
 13151  0000A8  501E               	movf	ISR_bassa@i,w,c
 13152  0000AA  0D01               	mullw	1
 13153  0000AC  0E14               	movlw	low (_msg+4)
 13154  0000AE  24F3               	addwf	prodl,w,c
 13155  0000B0  6ED9               	movwf	fsr2l,c
 13156  0000B2  0E01               	movlw	high (_msg+4)
 13157  0000B4  20F4               	addwfc	prodh,w,c
 13158  0000B6  6EDA               	movwf	fsr2h,c
 13159  0000B8  501E               	movf	ISR_bassa@i,w,c
 13160  0000BA  0D01               	mullw	1
 13161  0000BC  0EEE               	movlw	low _data_array
 13162  0000BE  24F3               	addwf	prodl,w,c
 13163  0000C0  6EE1               	movwf	fsr1l,c
 13164  0000C2  0E00               	movlw	high _data_array
 13165  0000C4  20F4               	addwfc	prodh,w,c
 13166  0000C6  6EE2               	movwf	fsr1h,c
 13167  0000C8  CFDF FFE7          	movff	indf2,indf1
 13168  0000CC  2A1E               	incf	ISR_bassa@i,f,c
 13169  0000CE  D7E8               	goto	i1l5630
 13170  0000D0                     i1l662:
 13171                           
 13172                           ;motore.c: 104: }
 13173                           ;motore.c: 105: new_message = 1;
 13174  0000D0  8A3E               	bsf	_new_message/(0+8),_new_message& (0+7),c	;volatile
 13175  0000D2                     i1l660:
 13176                           
 13177                           ;motore.c: 106: }
 13178                           ;motore.c: 107: PIR3bits.RXB0IF = 0;
 13179  0000D2  90A4               	bcf	4004,0,c	;volatile
 13180                           
 13181                           ;motore.c: 108: PIR3bits.RXB1IF = 0;
 13182  0000D4  92A4               	bcf	4004,1,c	;volatile
 13183  0000D6                     i1l656:
 13184                           
 13185                           ;motore.c: 109: }
 13186                           ;motore.c: 111: if (PIR2bits.TMR3IF) {
 13187  0000D6  A2A1               	btfss	4001,1,c	;volatile
 13188  0000D8  D00B               	goto	i1l664
 13189                           
 13190                           ;motore.c: 112: timeCounter++;
 13191  0000DA  0E01               	movlw	1
 13192  0000DC  2632               	addwf	_timeCounter,f,c	;volatile
 13193  0000DE  0E00               	movlw	0
 13194  0000E0  2233               	addwfc	_timeCounter+1,f,c	;volatile
 13195  0000E2  2234               	addwfc	_timeCounter+2,f,c	;volatile
 13196  0000E4  2235               	addwfc	_timeCounter+3,f,c	;volatile
 13197                           
 13198                           ;motore.c: 113: TMR3H = 0x63;
 13199  0000E6  0E63               	movlw	99
 13200  0000E8  6EB3               	movwf	4019,c	;volatile
 13201                           
 13202                           ;motore.c: 114: TMR3L = 0xC0;
 13203  0000EA  0EC0               	movlw	192
 13204  0000EC  6EB2               	movwf	4018,c	;volatile
 13205                           
 13206                           ;motore.c: 115: PIR2bits.TMR3IF = 0;
 13207  0000EE  92A1               	bcf	4001,1,c	;volatile
 13208  0000F0                     i1l664:
 13209  0000F0  C01D  FFF5         	movff	??_ISR_bassa+16,tablat
 13210  0000F4  C01C  FFF8         	movff	??_ISR_bassa+15,tblptru
 13211  0000F8  C01B  FFF7         	movff	??_ISR_bassa+14,tblptrh
 13212  0000FC  C01A  FFF6         	movff	??_ISR_bassa+13,tblptrl
 13213  000100  C019  FFF4         	movff	??_ISR_bassa+12,prodh
 13214  000104  C018  FFF3         	movff	??_ISR_bassa+11,prodl
 13215  000108  C017  FFDA         	movff	??_ISR_bassa+10,fsr2h
 13216  00010C  C016  FFD9         	movff	??_ISR_bassa+9,fsr2l
 13217  000110  C015  FFE2         	movff	??_ISR_bassa+8,fsr1h
 13218  000114  C014  FFE1         	movff	??_ISR_bassa+7,fsr1l
 13219  000118  C013  FFEA         	movff	??_ISR_bassa+6,fsr0h
 13220  00011C  C012  FFE9         	movff	??_ISR_bassa+5,fsr0l
 13221  000120  C011  FFFB         	movff	??_ISR_bassa+4,pclatu
 13222  000124  C010  FFFA         	movff	??_ISR_bassa+3,pclath
 13223  000128  C00F  FFE0         	movff	??_ISR_bassa+2,bsr
 13224  00012C  C00E  FFE8         	movff	??_ISR_bassa+1,wreg
 13225  000130  C00D  FFD8         	movff	??_ISR_bassa,status
 13226  000134  9041               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13227  000136  0010               	retfie	
 13228  000138                     __end_of_ISR_bassa:
 13229                           	opt stack 0
 13230                           pclatu	equ	0xFFB
 13231                           pclath	equ	0xFFA
 13232                           tblptru	equ	0xFF8
 13233                           tblptrh	equ	0xFF7
 13234                           tblptrl	equ	0xFF6
 13235                           tablat	equ	0xFF5
 13236                           prodh	equ	0xFF4
 13237                           prodl	equ	0xFF3
 13238                           intcon	equ	0xFF2
 13239                           postinc0	equ	0xFEE
 13240                           fsr0h	equ	0xFEA
 13241                           fsr0l	equ	0xFE9
 13242                           wreg	equ	0xFE8
 13243                           indf1	equ	0xFE7
 13244                           postdec1	equ	0xFE5
 13245                           fsr1h	equ	0xFE2
 13246                           fsr1l	equ	0xFE1
 13247                           bsr	equ	0xFE0
 13248                           indf2	equ	0xFDF
 13249                           postinc2	equ	0xFDE
 13250                           postdec2	equ	0xFDD
 13251                           fsr2h	equ	0xFDA
 13252                           fsr2l	equ	0xFD9
 13253                           status	equ	0xFD8
 13254                           
 13255 ;; *************** function _CANreceiveMessage *****************
 13256 ;; Defined at:
 13257 ;;		line 528 in file "CANlib.h"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;  msg             2    0[COMRAM] PTR struct .
 13260 ;;		 -> msg(15), 
 13261 ;; Auto vars:     Size  Location     Type
 13262 ;;  tamp            1   11[COMRAM] unsigned char 
 13263 ;;  error           1   10[COMRAM] unsigned char 
 13264 ;; Return value:  Size  Location     Type
 13265 ;;                  1    wreg      unsigned char 
 13266 ;; Registers used:
 13267 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13268 ;; Tracked objects:
 13269 ;;		On entry : 0/0
 13270 ;;		On exit  : 0/0
 13271 ;;		Unchanged: 0/0
 13272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13274 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13275 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13276 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13277 ;;Total ram usage:       12 bytes
 13278 ;; Hardware stack levels used:    1
 13279 ;; This function calls:
 13280 ;;		Nothing
 13281 ;; This function is called by:
 13282 ;;		_ISR_bassa
 13283 ;; This function uses a non-reentrant model
 13284 ;;
 13285                           
 13286                           	psect	text37
 13287  001F08                     __ptext37:
 13288                           	opt stack 0
 13289  001F08                     _CANreceiveMessage:
 13290                           	opt stack 24
 13291                           
 13292                           ;CANlib.h: 530: BYTE tamp;
 13293                           ;CANlib.h: 531: BYTE error = 0;
 13294                           
 13295                           ;incstack = 0
 13296  001F08  0E00               	movlw	0
 13297  001F0A  6E0B               	movwf	CANreceiveMessage@error,c
 13298                           
 13299                           ;CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 13300  001F0C  BE74               	btfsc	3956,7,c	;volatile
 13301                           
 13302                           ;CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 13303  001F0E  800B               	bsf	CANreceiveMessage@error,0,c
 13304                           
 13305                           ;CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 13306  001F10  BC74               	btfsc	3956,6,c	;volatile
 13307                           
 13308                           ;CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 13309  001F12  820B               	bsf	CANreceiveMessage@error,1,c
 13310                           
 13311                           ;CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 13312  001F14  010F               	movlb	15	; () banked
 13313  001F16  AF50               	btfss	80,7,b	;volatile
 13314  001F18  D143               	goto	i1l416
 13315                           
 13316                           ; BSR set to: 15
 13317                           ;CANlib.h: 541: {
 13318                           ;CANlib.h: 542: msg->identifier = 0;
 13319  001F1A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13320  001F1E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13321  001F22  6ADE               	clrf	postinc2,c
 13322  001F24  6ADE               	clrf	postinc2,c
 13323  001F26  6ADE               	clrf	postinc2,c
 13324  001F28  6ADD               	clrf	postdec2,c
 13325                           
 13326                           ; BSR set to: 15
 13327                           ;CANlib.h: 543: msg->data[0] =RXB1D0;
 13328  001F2A  EE20 F004          	lfsr	2,4
 13329  001F2E  5001               	movf	CANreceiveMessage@msg,w,c
 13330  001F30  26D9               	addwf	fsr2l,f,c
 13331  001F32  5002               	movf	CANreceiveMessage@msg+1,w,c
 13332  001F34  22DA               	addwfc	fsr2h,f,c
 13333  001F36  CF56 FFDF          	movff	3926,indf2	;volatile
 13334                           
 13335                           ; BSR set to: 15
 13336                           ;CANlib.h: 544: msg->data[1] =RXB1D1;
 13337  001F3A  EE20 F005          	lfsr	2,5
 13338  001F3E  5001               	movf	CANreceiveMessage@msg,w,c
 13339  001F40  26D9               	addwf	fsr2l,f,c
 13340  001F42  5002               	movf	CANreceiveMessage@msg+1,w,c
 13341  001F44  22DA               	addwfc	fsr2h,f,c
 13342  001F46  CF57 FFDF          	movff	3927,indf2	;volatile
 13343                           
 13344                           ; BSR set to: 15
 13345                           ;CANlib.h: 545: msg->data[2] =RXB1D2;
 13346  001F4A  EE20 F006          	lfsr	2,6
 13347  001F4E  5001               	movf	CANreceiveMessage@msg,w,c
 13348  001F50  26D9               	addwf	fsr2l,f,c
 13349  001F52  5002               	movf	CANreceiveMessage@msg+1,w,c
 13350  001F54  22DA               	addwfc	fsr2h,f,c
 13351  001F56  CF58 FFDF          	movff	3928,indf2	;volatile
 13352                           
 13353                           ; BSR set to: 15
 13354                           ;CANlib.h: 546: msg->data[3] =RXB1D3;
 13355  001F5A  EE20 F007          	lfsr	2,7
 13356  001F5E  5001               	movf	CANreceiveMessage@msg,w,c
 13357  001F60  26D9               	addwf	fsr2l,f,c
 13358  001F62  5002               	movf	CANreceiveMessage@msg+1,w,c
 13359  001F64  22DA               	addwfc	fsr2h,f,c
 13360  001F66  CF59 FFDF          	movff	3929,indf2	;volatile
 13361                           
 13362                           ; BSR set to: 15
 13363                           ;CANlib.h: 547: msg->data[4] =RXB1D4;
 13364  001F6A  EE20 F008          	lfsr	2,8
 13365  001F6E  5001               	movf	CANreceiveMessage@msg,w,c
 13366  001F70  26D9               	addwf	fsr2l,f,c
 13367  001F72  5002               	movf	CANreceiveMessage@msg+1,w,c
 13368  001F74  22DA               	addwfc	fsr2h,f,c
 13369  001F76  CF5A FFDF          	movff	3930,indf2	;volatile
 13370                           
 13371                           ; BSR set to: 15
 13372                           ;CANlib.h: 548: msg->data[5] =RXB1D5;
 13373  001F7A  EE20 F009          	lfsr	2,9
 13374  001F7E  5001               	movf	CANreceiveMessage@msg,w,c
 13375  001F80  26D9               	addwf	fsr2l,f,c
 13376  001F82  5002               	movf	CANreceiveMessage@msg+1,w,c
 13377  001F84  22DA               	addwfc	fsr2h,f,c
 13378  001F86  CF5B FFDF          	movff	3931,indf2	;volatile
 13379                           
 13380                           ; BSR set to: 15
 13381                           ;CANlib.h: 549: msg->data[6] =RXB1D6;
 13382  001F8A  EE20 F00A          	lfsr	2,10
 13383  001F8E  5001               	movf	CANreceiveMessage@msg,w,c
 13384  001F90  26D9               	addwf	fsr2l,f,c
 13385  001F92  5002               	movf	CANreceiveMessage@msg+1,w,c
 13386  001F94  22DA               	addwfc	fsr2h,f,c
 13387  001F96  CF5C FFDF          	movff	3932,indf2	;volatile
 13388                           
 13389                           ; BSR set to: 15
 13390                           ;CANlib.h: 550: msg->data[7] =RXB1D7;
 13391  001F9A  EE20 F00B          	lfsr	2,11
 13392  001F9E  5001               	movf	CANreceiveMessage@msg,w,c
 13393  001FA0  26D9               	addwf	fsr2l,f,c
 13394  001FA2  5002               	movf	CANreceiveMessage@msg+1,w,c
 13395  001FA4  22DA               	addwfc	fsr2h,f,c
 13396  001FA6  CF5D FFDF          	movff	3933,indf2	;volatile
 13397                           
 13398                           ; BSR set to: 15
 13399                           ;CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 13400  001FAA  EE20 F00E          	lfsr	2,14
 13401  001FAE  5001               	movf	CANreceiveMessage@msg,w,c
 13402  001FB0  26D9               	addwf	fsr2l,f,c
 13403  001FB2  5002               	movf	CANreceiveMessage@msg+1,w,c
 13404  001FB4  22DA               	addwfc	fsr2h,f,c
 13405  001FB6  010F               	movlb	15	; () banked
 13406  001FB8  AD55               	btfss	85,6,b	;volatile
 13407  001FBA  D002               	goto	i1u661_20
 13408  001FBC  0E01               	movlw	1
 13409  001FBE  D001               	goto	i1u661_26
 13410  001FC0                     i1u661_20:
 13411  001FC0  0E00               	movlw	0
 13412  001FC2                     i1u661_26:
 13413  001FC2  6EDF               	movwf	indf2,c
 13414                           
 13415                           ; BSR set to: 15
 13416                           ;CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 13417  001FC4  EE20 F00D          	lfsr	2,13
 13418  001FC8  5001               	movf	CANreceiveMessage@msg,w,c
 13419  001FCA  26D9               	addwf	fsr2l,f,c
 13420  001FCC  5002               	movf	CANreceiveMessage@msg+1,w,c
 13421  001FCE  22DA               	addwfc	fsr2h,f,c
 13422  001FD0  010F               	movlb	15	; () banked
 13423  001FD2  5155               	movf	85,w,b	;volatile
 13424  001FD4  0B0F               	andlw	15
 13425  001FD6  6EDF               	movwf	indf2,c
 13426                           
 13427                           ; BSR set to: 15
 13428                           ;CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 13429  001FD8  EE20 F00C          	lfsr	2,12
 13430  001FDC  5001               	movf	CANreceiveMessage@msg,w,c
 13431  001FDE  26D9               	addwf	fsr2l,f,c
 13432  001FE0  5002               	movf	CANreceiveMessage@msg+1,w,c
 13433  001FE2  22DA               	addwfc	fsr2h,f,c
 13434  001FE4  010F               	movlb	15	; () banked
 13435  001FE6  A752               	btfss	82,3,b	;volatile
 13436  001FE8  D002               	goto	i1u662_20
 13437  001FEA  0E01               	movlw	1
 13438  001FEC  D001               	goto	i1u662_26
 13439  001FEE                     i1u662_20:
 13440  001FEE  0E00               	movlw	0
 13441  001FF0                     i1u662_26:
 13442  001FF0  6EDF               	movwf	indf2,c
 13443                           
 13444                           ; BSR set to: 15
 13445                           ;CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 13446  001FF2  010F               	movlb	15	; () banked
 13447  001FF4  B752               	btfsc	82,3,b	;volatile
 13448  001FF6  D044               	goto	i1l5268
 13449                           
 13450                           ; BSR set to: 15
 13451                           ;CANlib.h: 559: {
 13452                           ;CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 13453  001FF8  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 13454  001FFC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13455  001FFE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13456  002000  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13457  002002  0E03               	movlw	3
 13458  002004                     i1u664_25:
 13459  002004  90D8               	bcf	status,0,c
 13460  002006  3603               	rlcf	??_CANreceiveMessage,f,c
 13461  002008  3604               	rlcf	??_CANreceiveMessage+1,f,c
 13462  00200A  3605               	rlcf	??_CANreceiveMessage+2,f,c
 13463  00200C  3606               	rlcf	??_CANreceiveMessage+3,f,c
 13464  00200E  2EE8               	decfsz	wreg,f,c
 13465  002010  D7F9               	goto	i1u664_25
 13466  002012  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13467  002016  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13468  00201A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 13469  00201E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 13470  002022  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 13471  002026  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 13472                           
 13473                           ; BSR set to: 15
 13474                           ;CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 13475  00202A  010F               	movlb	15	; () banked
 13476  00202C  3952               	swapf	82,w,b	;volatile
 13477  00202E  42E8               	rrncf	wreg,f,c
 13478  002030  0B07               	andlw	7
 13479  002032  0B07               	andlw	7
 13480  002034  6E0C               	movwf	CANreceiveMessage@tamp,c
 13481                           
 13482                           ; BSR set to: 15
 13483                           ;CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 13484  002036  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13485  00203A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13486  00203E  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 13487  002042  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 13488  002046  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 13489  00204A  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 13490  00204E  500C               	movf	CANreceiveMessage@tamp,w,c
 13491  002050  2403               	addwf	??_CANreceiveMessage,w,c
 13492  002052  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 13493  002054  0E00               	movlw	0
 13494  002056  2004               	addwfc	??_CANreceiveMessage+1,w,c
 13495  002058  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 13496  00205A  0E00               	movlw	0
 13497  00205C  2005               	addwfc	??_CANreceiveMessage+2,w,c
 13498  00205E  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 13499  002060  0E00               	movlw	0
 13500  002062  2006               	addwfc	??_CANreceiveMessage+3,w,c
 13501  002064  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 13502  002066  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13503  00206A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13504  00206E  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 13505  002072  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 13506  002076  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 13507  00207A  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 13508                           
 13509                           ;CANlib.h: 563: }
 13510  00207E  D08D               	goto	i1l5294
 13511  002080                     i1l5268:
 13512                           
 13513                           ; BSR set to: 15
 13514                           ;CANlib.h: 564: else
 13515                           ;CANlib.h: 565: {
 13516                           ;CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 13517  002080  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 13518  002084  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13519  002086  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13520  002088  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13521  00208A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13522  00208E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13523  002092  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 13524  002096  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 13525  00209A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 13526  00209E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 13527                           
 13528                           ; BSR set to: 15
 13529                           ;CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 13530  0020A2  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 13531  0020A6  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13532  0020A8  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13533  0020AA  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13534  0020AC  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 13535  0020B0  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 13536  0020B4  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 13537  0020B8  6A03               	clrf	??_CANreceiveMessage,c
 13538  0020BA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13539  0020BE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13540  0020C2  5003               	movf	??_CANreceiveMessage,w,c
 13541  0020C4  26DE               	addwf	postinc2,f,c
 13542  0020C6  5004               	movf	??_CANreceiveMessage+1,w,c
 13543  0020C8  22DE               	addwfc	postinc2,f,c
 13544  0020CA  5005               	movf	??_CANreceiveMessage+2,w,c
 13545  0020CC  22DE               	addwfc	postinc2,f,c
 13546  0020CE  5006               	movf	??_CANreceiveMessage+3,w,c
 13547  0020D0  22DE               	addwfc	postinc2,f,c
 13548                           
 13549                           ; BSR set to: 15
 13550                           ;CANlib.h: 569: if (RXB1SIDLbits.EID16)
 13551  0020D2  010F               	movlb	15	; () banked
 13552  0020D4  A152               	btfss	82,0,b	;volatile
 13553  0020D6  D00C               	goto	i1l5276
 13554                           
 13555                           ; BSR set to: 15
 13556                           ;CANlib.h: 570: msg->identifier |= 0x00010000;
 13557  0020D8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13558  0020DC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13559  0020E0  0E00               	movlw	0
 13560  0020E2  12DE               	iorwf	postinc2,f,c
 13561  0020E4  0E00               	movlw	0
 13562  0020E6  12DE               	iorwf	postinc2,f,c
 13563  0020E8  0E01               	movlw	1
 13564  0020EA  12DE               	iorwf	postinc2,f,c
 13565  0020EC  0E00               	movlw	0
 13566  0020EE  12DE               	iorwf	postinc2,f,c
 13567  0020F0                     i1l5276:
 13568                           
 13569                           ; BSR set to: 15
 13570                           ;CANlib.h: 571: if (RXB1SIDLbits.EID17)
 13571  0020F0  010F               	movlb	15	; () banked
 13572  0020F2  A352               	btfss	82,1,b	;volatile
 13573  0020F4  D00C               	goto	i1l5280
 13574                           
 13575                           ; BSR set to: 15
 13576                           ;CANlib.h: 572: msg->identifier |= 0x00020000;
 13577  0020F6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13578  0020FA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13579  0020FE  0E00               	movlw	0
 13580  002100  12DE               	iorwf	postinc2,f,c
 13581  002102  0E00               	movlw	0
 13582  002104  12DE               	iorwf	postinc2,f,c
 13583  002106  0E02               	movlw	2
 13584  002108  12DE               	iorwf	postinc2,f,c
 13585  00210A  0E00               	movlw	0
 13586  00210C  12DE               	iorwf	postinc2,f,c
 13587  00210E                     i1l5280:
 13588                           
 13589                           ; BSR set to: 15
 13590                           ;CANlib.h: 573: if (RXB1SIDLbits.SID0)
 13591  00210E  010F               	movlb	15	; () banked
 13592  002110  AB52               	btfss	82,5,b	;volatile
 13593  002112  D00C               	goto	i1l5284
 13594                           
 13595                           ; BSR set to: 15
 13596                           ;CANlib.h: 574: msg->identifier |= 0x00040000;
 13597  002114  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13598  002118  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13599  00211C  0E00               	movlw	0
 13600  00211E  12DE               	iorwf	postinc2,f,c
 13601  002120  0E00               	movlw	0
 13602  002122  12DE               	iorwf	postinc2,f,c
 13603  002124  0E04               	movlw	4
 13604  002126  12DE               	iorwf	postinc2,f,c
 13605  002128  0E00               	movlw	0
 13606  00212A  12DE               	iorwf	postinc2,f,c
 13607  00212C                     i1l5284:
 13608                           
 13609                           ; BSR set to: 15
 13610                           ;CANlib.h: 575: if (RXB1SIDLbits.SID1)
 13611  00212C  010F               	movlb	15	; () banked
 13612  00212E  AD52               	btfss	82,6,b	;volatile
 13613  002130  D00C               	goto	i1l5288
 13614                           
 13615                           ; BSR set to: 15
 13616                           ;CANlib.h: 576: msg->identifier |= 0x00080000;
 13617  002132  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13618  002136  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13619  00213A  0E00               	movlw	0
 13620  00213C  12DE               	iorwf	postinc2,f,c
 13621  00213E  0E00               	movlw	0
 13622  002140  12DE               	iorwf	postinc2,f,c
 13623  002142  0E08               	movlw	8
 13624  002144  12DE               	iorwf	postinc2,f,c
 13625  002146  0E00               	movlw	0
 13626  002148  12DE               	iorwf	postinc2,f,c
 13627  00214A                     i1l5288:
 13628                           
 13629                           ; BSR set to: 15
 13630                           ;CANlib.h: 577: if (RXB1SIDLbits.SID2)
 13631  00214A  010F               	movlb	15	; () banked
 13632  00214C  AF52               	btfss	82,7,b	;volatile
 13633  00214E  D00C               	goto	i1l5292
 13634                           
 13635                           ; BSR set to: 15
 13636                           ;CANlib.h: 578: msg->identifier |= 0x00100000;
 13637  002150  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13638  002154  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13639  002158  0E00               	movlw	0
 13640  00215A  12DE               	iorwf	postinc2,f,c
 13641  00215C  0E00               	movlw	0
 13642  00215E  12DE               	iorwf	postinc2,f,c
 13643  002160  0E10               	movlw	16
 13644  002162  12DE               	iorwf	postinc2,f,c
 13645  002164  0E00               	movlw	0
 13646  002166  12DE               	iorwf	postinc2,f,c
 13647  002168                     i1l5292:
 13648                           
 13649                           ; BSR set to: 15
 13650                           ;CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 13651  002168  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 13652  00216C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13653  00216E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13654  002170  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13655  002172  0E15               	movlw	21
 13656  002174                     i1u670_25:
 13657  002174  90D8               	bcf	status,0,c
 13658  002176  3603               	rlcf	??_CANreceiveMessage,f,c
 13659  002178  3604               	rlcf	??_CANreceiveMessage+1,f,c
 13660  00217A  3605               	rlcf	??_CANreceiveMessage+2,f,c
 13661  00217C  3606               	rlcf	??_CANreceiveMessage+3,f,c
 13662  00217E  2EE8               	decfsz	wreg,f,c
 13663  002180  D7F9               	goto	i1u670_25
 13664  002182  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13665  002186  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13666  00218A  5003               	movf	??_CANreceiveMessage,w,c
 13667  00218C  12DE               	iorwf	postinc2,f,c
 13668  00218E  5004               	movf	??_CANreceiveMessage+1,w,c
 13669  002190  12DE               	iorwf	postinc2,f,c
 13670  002192  5005               	movf	??_CANreceiveMessage+2,w,c
 13671  002194  12DE               	iorwf	postinc2,f,c
 13672  002196  5006               	movf	??_CANreceiveMessage+3,w,c
 13673  002198  12DE               	iorwf	postinc2,f,c
 13674  00219A                     i1l5294:
 13675                           
 13676                           ; BSR set to: 15
 13677                           ;CANlib.h: 581: }
 13678                           ;CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 13679  00219A  010F               	movlb	15	; () banked
 13680  00219C  9F50               	bcf	80,7,b	;volatile
 13681                           
 13682                           ; BSR set to: 15
 13683                           ;CANlib.h: 584: return (error);
 13684                           ;	Return value of _CANreceiveMessage is never used
 13685  00219E  0012               	return	
 13686  0021A0                     i1l416:
 13687                           
 13688                           ; BSR set to: 15
 13689                           ;CANlib.h: 585: }
 13690                           ;CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 13691  0021A0  AE60               	btfss	3936,7,c	;volatile
 13692  0021A2  0012               	return	
 13693                           
 13694                           ; BSR set to: 15
 13695                           ;CANlib.h: 588: {
 13696                           ;CANlib.h: 589: msg->identifier = 0;
 13697  0021A4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13698  0021A8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13699  0021AC  6ADE               	clrf	postinc2,c
 13700  0021AE  6ADE               	clrf	postinc2,c
 13701  0021B0  6ADE               	clrf	postinc2,c
 13702  0021B2  6ADD               	clrf	postdec2,c
 13703                           
 13704                           ; BSR set to: 15
 13705                           ;CANlib.h: 590: msg->data[0] =RXB0D0;
 13706  0021B4  EE20 F004          	lfsr	2,4
 13707  0021B8  5001               	movf	CANreceiveMessage@msg,w,c
 13708  0021BA  26D9               	addwf	fsr2l,f,c
 13709  0021BC  5002               	movf	CANreceiveMessage@msg+1,w,c
 13710  0021BE  22DA               	addwfc	fsr2h,f,c
 13711  0021C0  CF66 FFDF          	movff	3942,indf2	;volatile
 13712                           
 13713                           ; BSR set to: 15
 13714                           ;CANlib.h: 591: msg->data[1] =RXB0D1;
 13715  0021C4  EE20 F005          	lfsr	2,5
 13716  0021C8  5001               	movf	CANreceiveMessage@msg,w,c
 13717  0021CA  26D9               	addwf	fsr2l,f,c
 13718  0021CC  5002               	movf	CANreceiveMessage@msg+1,w,c
 13719  0021CE  22DA               	addwfc	fsr2h,f,c
 13720  0021D0  CF67 FFDF          	movff	3943,indf2	;volatile
 13721                           
 13722                           ; BSR set to: 15
 13723                           ;CANlib.h: 592: msg->data[2] =RXB0D2;
 13724  0021D4  EE20 F006          	lfsr	2,6
 13725  0021D8  5001               	movf	CANreceiveMessage@msg,w,c
 13726  0021DA  26D9               	addwf	fsr2l,f,c
 13727  0021DC  5002               	movf	CANreceiveMessage@msg+1,w,c
 13728  0021DE  22DA               	addwfc	fsr2h,f,c
 13729  0021E0  CF68 FFDF          	movff	3944,indf2	;volatile
 13730                           
 13731                           ; BSR set to: 15
 13732                           ;CANlib.h: 593: msg->data[3] =RXB0D3;
 13733  0021E4  EE20 F007          	lfsr	2,7
 13734  0021E8  5001               	movf	CANreceiveMessage@msg,w,c
 13735  0021EA  26D9               	addwf	fsr2l,f,c
 13736  0021EC  5002               	movf	CANreceiveMessage@msg+1,w,c
 13737  0021EE  22DA               	addwfc	fsr2h,f,c
 13738  0021F0  CF69 FFDF          	movff	3945,indf2	;volatile
 13739                           
 13740                           ; BSR set to: 15
 13741                           ;CANlib.h: 594: msg->data[4] =RXB0D4;
 13742  0021F4  EE20 F008          	lfsr	2,8
 13743  0021F8  5001               	movf	CANreceiveMessage@msg,w,c
 13744  0021FA  26D9               	addwf	fsr2l,f,c
 13745  0021FC  5002               	movf	CANreceiveMessage@msg+1,w,c
 13746  0021FE  22DA               	addwfc	fsr2h,f,c
 13747  002200  CF6A FFDF          	movff	3946,indf2	;volatile
 13748                           
 13749                           ; BSR set to: 15
 13750                           ;CANlib.h: 595: msg->data[5] =RXB0D5;
 13751  002204  EE20 F009          	lfsr	2,9
 13752  002208  5001               	movf	CANreceiveMessage@msg,w,c
 13753  00220A  26D9               	addwf	fsr2l,f,c
 13754  00220C  5002               	movf	CANreceiveMessage@msg+1,w,c
 13755  00220E  22DA               	addwfc	fsr2h,f,c
 13756  002210  CF6B FFDF          	movff	3947,indf2	;volatile
 13757                           
 13758                           ; BSR set to: 15
 13759                           ;CANlib.h: 596: msg->data[6] =RXB0D6;
 13760  002214  EE20 F00A          	lfsr	2,10
 13761  002218  5001               	movf	CANreceiveMessage@msg,w,c
 13762  00221A  26D9               	addwf	fsr2l,f,c
 13763  00221C  5002               	movf	CANreceiveMessage@msg+1,w,c
 13764  00221E  22DA               	addwfc	fsr2h,f,c
 13765  002220  CF6C FFDF          	movff	3948,indf2	;volatile
 13766                           
 13767                           ; BSR set to: 15
 13768                           ;CANlib.h: 597: msg->data[7] =RXB0D7;
 13769  002224  EE20 F00B          	lfsr	2,11
 13770  002228  5001               	movf	CANreceiveMessage@msg,w,c
 13771  00222A  26D9               	addwf	fsr2l,f,c
 13772  00222C  5002               	movf	CANreceiveMessage@msg+1,w,c
 13773  00222E  22DA               	addwfc	fsr2h,f,c
 13774  002230  CF6D FFDF          	movff	3949,indf2	;volatile
 13775                           
 13776                           ; BSR set to: 15
 13777                           ;CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 13778  002234  EE20 F00E          	lfsr	2,14
 13779  002238  5001               	movf	CANreceiveMessage@msg,w,c
 13780  00223A  26D9               	addwf	fsr2l,f,c
 13781  00223C  5002               	movf	CANreceiveMessage@msg+1,w,c
 13782  00223E  22DA               	addwfc	fsr2h,f,c
 13783  002240  AC65               	btfss	3941,6,c	;volatile
 13784  002242  D002               	goto	i1u672_20
 13785  002244  0E01               	movlw	1
 13786  002246  D001               	goto	i1u672_26
 13787  002248                     i1u672_20:
 13788  002248  0E00               	movlw	0
 13789  00224A                     i1u672_26:
 13790  00224A  6EDF               	movwf	indf2,c
 13791                           
 13792                           ; BSR set to: 15
 13793                           ;CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 13794  00224C  EE20 F00D          	lfsr	2,13
 13795  002250  5001               	movf	CANreceiveMessage@msg,w,c
 13796  002252  26D9               	addwf	fsr2l,f,c
 13797  002254  5002               	movf	CANreceiveMessage@msg+1,w,c
 13798  002256  22DA               	addwfc	fsr2h,f,c
 13799  002258  5065               	movf	3941,w,c	;volatile
 13800  00225A  0B0F               	andlw	15
 13801  00225C  6EDF               	movwf	indf2,c
 13802                           
 13803                           ; BSR set to: 15
 13804                           ;CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 13805  00225E  EE20 F00C          	lfsr	2,12
 13806  002262  5001               	movf	CANreceiveMessage@msg,w,c
 13807  002264  26D9               	addwf	fsr2l,f,c
 13808  002266  5002               	movf	CANreceiveMessage@msg+1,w,c
 13809  002268  22DA               	addwfc	fsr2h,f,c
 13810  00226A  A662               	btfss	3938,3,c	;volatile
 13811  00226C  D002               	goto	i1u673_20
 13812  00226E  0E01               	movlw	1
 13813  002270  D001               	goto	i1u673_26
 13814  002272                     i1u673_20:
 13815  002272  0E00               	movlw	0
 13816  002274                     i1u673_26:
 13817  002274  6EDF               	movwf	indf2,c
 13818                           
 13819                           ; BSR set to: 15
 13820                           ;CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 13821  002276  B662               	btfsc	3938,3,c	;volatile
 13822  002278  D043               	goto	i1l5330
 13823                           
 13824                           ; BSR set to: 15
 13825                           ;CANlib.h: 606: {
 13826                           ;CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 13827  00227A  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 13828  00227E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13829  002280  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13830  002282  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13831  002284  0E03               	movlw	3
 13832  002286                     i1u675_25:
 13833  002286  90D8               	bcf	status,0,c
 13834  002288  3603               	rlcf	??_CANreceiveMessage,f,c
 13835  00228A  3604               	rlcf	??_CANreceiveMessage+1,f,c
 13836  00228C  3605               	rlcf	??_CANreceiveMessage+2,f,c
 13837  00228E  3606               	rlcf	??_CANreceiveMessage+3,f,c
 13838  002290  2EE8               	decfsz	wreg,f,c
 13839  002292  D7F9               	goto	i1u675_25
 13840  002294  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13841  002298  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13842  00229C  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 13843  0022A0  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 13844  0022A4  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 13845  0022A8  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 13846                           
 13847                           ; BSR set to: 15
 13848                           ;CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 13849  0022AC  3862               	swapf	3938,w,c	;volatile
 13850  0022AE  42E8               	rrncf	wreg,f,c
 13851  0022B0  0B07               	andlw	7
 13852  0022B2  0B07               	andlw	7
 13853  0022B4  6E0C               	movwf	CANreceiveMessage@tamp,c
 13854                           
 13855                           ; BSR set to: 15
 13856                           ;CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 13857  0022B6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13858  0022BA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13859  0022BE  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 13860  0022C2  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 13861  0022C6  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 13862  0022CA  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 13863  0022CE  500C               	movf	CANreceiveMessage@tamp,w,c
 13864  0022D0  2403               	addwf	??_CANreceiveMessage,w,c
 13865  0022D2  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 13866  0022D4  0E00               	movlw	0
 13867  0022D6  2004               	addwfc	??_CANreceiveMessage+1,w,c
 13868  0022D8  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 13869  0022DA  0E00               	movlw	0
 13870  0022DC  2005               	addwfc	??_CANreceiveMessage+2,w,c
 13871  0022DE  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 13872  0022E0  0E00               	movlw	0
 13873  0022E2  2006               	addwfc	??_CANreceiveMessage+3,w,c
 13874  0022E4  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 13875  0022E6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13876  0022EA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13877  0022EE  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 13878  0022F2  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 13879  0022F6  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 13880  0022FA  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 13881                           
 13882                           ;CANlib.h: 610: }
 13883  0022FE  D088               	goto	i1l5356
 13884  002300                     i1l5330:
 13885                           
 13886                           ; BSR set to: 15
 13887                           ;CANlib.h: 611: else
 13888                           ;CANlib.h: 612: {
 13889                           ;CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 13890  002300  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 13891  002304  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13892  002306  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13893  002308  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13894  00230A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13895  00230E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13896  002312  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 13897  002316  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 13898  00231A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 13899  00231E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 13900                           
 13901                           ; BSR set to: 15
 13902                           ;CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 13903  002322  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 13904  002326  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13905  002328  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13906  00232A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13907  00232C  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 13908  002330  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 13909  002334  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 13910  002338  6A03               	clrf	??_CANreceiveMessage,c
 13911  00233A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13912  00233E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13913  002342  5003               	movf	??_CANreceiveMessage,w,c
 13914  002344  26DE               	addwf	postinc2,f,c
 13915  002346  5004               	movf	??_CANreceiveMessage+1,w,c
 13916  002348  22DE               	addwfc	postinc2,f,c
 13917  00234A  5005               	movf	??_CANreceiveMessage+2,w,c
 13918  00234C  22DE               	addwfc	postinc2,f,c
 13919  00234E  5006               	movf	??_CANreceiveMessage+3,w,c
 13920  002350  22DE               	addwfc	postinc2,f,c
 13921                           
 13922                           ; BSR set to: 15
 13923                           ;CANlib.h: 616: if (RXB0SIDLbits.EID16)
 13924  002352  A062               	btfss	3938,0,c	;volatile
 13925  002354  D00C               	goto	i1l5338
 13926                           
 13927                           ; BSR set to: 15
 13928                           ;CANlib.h: 617: msg->identifier |= 0x00010000;
 13929  002356  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13930  00235A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13931  00235E  0E00               	movlw	0
 13932  002360  12DE               	iorwf	postinc2,f,c
 13933  002362  0E00               	movlw	0
 13934  002364  12DE               	iorwf	postinc2,f,c
 13935  002366  0E01               	movlw	1
 13936  002368  12DE               	iorwf	postinc2,f,c
 13937  00236A  0E00               	movlw	0
 13938  00236C  12DE               	iorwf	postinc2,f,c
 13939  00236E                     i1l5338:
 13940                           
 13941                           ; BSR set to: 15
 13942                           ;CANlib.h: 618: if (RXB0SIDLbits.EID17)
 13943  00236E  A262               	btfss	3938,1,c	;volatile
 13944  002370  D00C               	goto	i1l5342
 13945                           
 13946                           ; BSR set to: 15
 13947                           ;CANlib.h: 619: msg->identifier |= 0x00020000;
 13948  002372  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13949  002376  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13950  00237A  0E00               	movlw	0
 13951  00237C  12DE               	iorwf	postinc2,f,c
 13952  00237E  0E00               	movlw	0
 13953  002380  12DE               	iorwf	postinc2,f,c
 13954  002382  0E02               	movlw	2
 13955  002384  12DE               	iorwf	postinc2,f,c
 13956  002386  0E00               	movlw	0
 13957  002388  12DE               	iorwf	postinc2,f,c
 13958  00238A                     i1l5342:
 13959                           
 13960                           ; BSR set to: 15
 13961                           ;CANlib.h: 620: if (RXB0SIDLbits.SID0)
 13962  00238A  AA62               	btfss	3938,5,c	;volatile
 13963  00238C  D00C               	goto	i1l5346
 13964                           
 13965                           ; BSR set to: 15
 13966                           ;CANlib.h: 621: msg->identifier |= 0x00040000;
 13967  00238E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13968  002392  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13969  002396  0E00               	movlw	0
 13970  002398  12DE               	iorwf	postinc2,f,c
 13971  00239A  0E00               	movlw	0
 13972  00239C  12DE               	iorwf	postinc2,f,c
 13973  00239E  0E04               	movlw	4
 13974  0023A0  12DE               	iorwf	postinc2,f,c
 13975  0023A2  0E00               	movlw	0
 13976  0023A4  12DE               	iorwf	postinc2,f,c
 13977  0023A6                     i1l5346:
 13978                           
 13979                           ; BSR set to: 15
 13980                           ;CANlib.h: 622: if (RXB0SIDLbits.SID1)
 13981  0023A6  AC62               	btfss	3938,6,c	;volatile
 13982  0023A8  D00C               	goto	i1l5350
 13983                           
 13984                           ; BSR set to: 15
 13985                           ;CANlib.h: 623: msg->identifier |= 0x00080000;
 13986  0023AA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13987  0023AE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13988  0023B2  0E00               	movlw	0
 13989  0023B4  12DE               	iorwf	postinc2,f,c
 13990  0023B6  0E00               	movlw	0
 13991  0023B8  12DE               	iorwf	postinc2,f,c
 13992  0023BA  0E08               	movlw	8
 13993  0023BC  12DE               	iorwf	postinc2,f,c
 13994  0023BE  0E00               	movlw	0
 13995  0023C0  12DE               	iorwf	postinc2,f,c
 13996  0023C2                     i1l5350:
 13997                           
 13998                           ; BSR set to: 15
 13999                           ;CANlib.h: 624: if (RXB0SIDLbits.SID2)
 14000  0023C2  AE62               	btfss	3938,7,c	;volatile
 14001  0023C4  D00C               	goto	i1l5354
 14002                           
 14003                           ; BSR set to: 15
 14004                           ;CANlib.h: 625: msg->identifier |= 0x00100000;
 14005  0023C6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14006  0023CA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14007  0023CE  0E00               	movlw	0
 14008  0023D0  12DE               	iorwf	postinc2,f,c
 14009  0023D2  0E00               	movlw	0
 14010  0023D4  12DE               	iorwf	postinc2,f,c
 14011  0023D6  0E10               	movlw	16
 14012  0023D8  12DE               	iorwf	postinc2,f,c
 14013  0023DA  0E00               	movlw	0
 14014  0023DC  12DE               	iorwf	postinc2,f,c
 14015  0023DE                     i1l5354:
 14016                           
 14017                           ; BSR set to: 15
 14018                           ;CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 14019  0023DE  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 14020  0023E2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14021  0023E4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14022  0023E6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14023  0023E8  0E15               	movlw	21
 14024  0023EA                     i1u681_25:
 14025  0023EA  90D8               	bcf	status,0,c
 14026  0023EC  3603               	rlcf	??_CANreceiveMessage,f,c
 14027  0023EE  3604               	rlcf	??_CANreceiveMessage+1,f,c
 14028  0023F0  3605               	rlcf	??_CANreceiveMessage+2,f,c
 14029  0023F2  3606               	rlcf	??_CANreceiveMessage+3,f,c
 14030  0023F4  2EE8               	decfsz	wreg,f,c
 14031  0023F6  D7F9               	goto	i1u681_25
 14032  0023F8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14033  0023FC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14034  002400  5003               	movf	??_CANreceiveMessage,w,c
 14035  002402  12DE               	iorwf	postinc2,f,c
 14036  002404  5004               	movf	??_CANreceiveMessage+1,w,c
 14037  002406  12DE               	iorwf	postinc2,f,c
 14038  002408  5005               	movf	??_CANreceiveMessage+2,w,c
 14039  00240A  12DE               	iorwf	postinc2,f,c
 14040  00240C  5006               	movf	??_CANreceiveMessage+3,w,c
 14041  00240E  12DE               	iorwf	postinc2,f,c
 14042  002410                     i1l5356:
 14043                           
 14044                           ; BSR set to: 15
 14045                           ;CANlib.h: 629: }
 14046                           ;CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 14047  002410  9E60               	bcf	3936,7,c	;volatile
 14048                           
 14049                           ; BSR set to: 15
 14050                           ;CANlib.h: 632: return (error);
 14051                           ;	Return value of _CANreceiveMessage is never used
 14052  002412  0012               	return	
 14053  002414                     __end_of_CANreceiveMessage:
 14054                           	opt stack 0
 14055                           pclatu	equ	0xFFB
 14056                           pclath	equ	0xFFA
 14057                           tblptru	equ	0xFF8
 14058                           tblptrh	equ	0xFF7
 14059                           tblptrl	equ	0xFF6
 14060                           tablat	equ	0xFF5
 14061                           prodh	equ	0xFF4
 14062                           prodl	equ	0xFF3
 14063                           intcon	equ	0xFF2
 14064                           postinc0	equ	0xFEE
 14065                           fsr0h	equ	0xFEA
 14066                           fsr0l	equ	0xFE9
 14067                           wreg	equ	0xFE8
 14068                           indf1	equ	0xFE7
 14069                           postdec1	equ	0xFE5
 14070                           fsr1h	equ	0xFE2
 14071                           fsr1l	equ	0xFE1
 14072                           bsr	equ	0xFE0
 14073                           indf2	equ	0xFDF
 14074                           postinc2	equ	0xFDE
 14075                           postdec2	equ	0xFDD
 14076                           fsr2h	equ	0xFDA
 14077                           fsr2l	equ	0xFD9
 14078                           status	equ	0xFD8
 14079                           
 14080 ;; *************** function _CANisRxReady *****************
 14081 ;; Defined at:
 14082 ;;		line 1163 in file "CANlib.h"
 14083 ;; Parameters:    Size  Location     Type
 14084 ;;		None
 14085 ;; Auto vars:     Size  Location     Type
 14086 ;;		None
 14087 ;; Return value:  Size  Location     Type
 14088 ;;                  1    wreg      unsigned char 
 14089 ;; Registers used:
 14090 ;;		wreg, status,2
 14091 ;; Tracked objects:
 14092 ;;		On entry : 0/0
 14093 ;;		On exit  : 0/0
 14094 ;;		Unchanged: 0/0
 14095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14099 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14100 ;;Total ram usage:        1 bytes
 14101 ;; Hardware stack levels used:    1
 14102 ;; This function calls:
 14103 ;;		Nothing
 14104 ;; This function is called by:
 14105 ;;		_ISR_bassa
 14106 ;; This function uses a non-reentrant model
 14107 ;;
 14108                           
 14109                           	psect	text38
 14110  005076                     __ptext38:
 14111                           	opt stack 0
 14112  005076                     _CANisRxReady:
 14113                           	opt stack 24
 14114                           
 14115                           ;CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 14116                           
 14117                           ; BSR set to: 15
 14118                           ;incstack = 0
 14119  005076  0E01               	movlw	1
 14120  005078  6E01               	movwf	_CANisRxReady$3007,c
 14121  00507A  BE60               	btfsc	3936,7,c	;volatile
 14122  00507C  D005               	goto	i1l567
 14123  00507E  010F               	movlb	15	; () banked
 14124  005080  BF50               	btfsc	80,7,b	;volatile
 14125  005082  D002               	goto	i1l567
 14126                           
 14127                           ; BSR set to: 15
 14128  005084  0E00               	movlw	0
 14129  005086  6E01               	movwf	_CANisRxReady$3007,c
 14130  005088                     i1l567:
 14131  005088  5001               	movf	_CANisRxReady$3007,w,c
 14132  00508A  0012               	return	
 14133  00508C                     __end_of_CANisRxReady:
 14134                           	opt stack 0
 14135                           pclatu	equ	0xFFB
 14136                           pclath	equ	0xFFA
 14137                           tblptru	equ	0xFF8
 14138                           tblptrh	equ	0xFF7
 14139                           tblptrl	equ	0xFF6
 14140                           tablat	equ	0xFF5
 14141                           prodh	equ	0xFF4
 14142                           prodl	equ	0xFF3
 14143                           intcon	equ	0xFF2
 14144                           postinc0	equ	0xFEE
 14145                           fsr0h	equ	0xFEA
 14146                           fsr0l	equ	0xFE9
 14147                           wreg	equ	0xFE8
 14148                           indf1	equ	0xFE7
 14149                           postdec1	equ	0xFE5
 14150                           fsr1h	equ	0xFE2
 14151                           fsr1l	equ	0xFE1
 14152                           bsr	equ	0xFE0
 14153                           indf2	equ	0xFDF
 14154                           postinc2	equ	0xFDE
 14155                           postdec2	equ	0xFDD
 14156                           fsr2h	equ	0xFDA
 14157                           fsr2l	equ	0xFD9
 14158                           status	equ	0xFD8
 14159                           pclatu	equ	0xFFB
 14160                           pclath	equ	0xFFA
 14161                           tblptru	equ	0xFF8
 14162                           tblptrh	equ	0xFF7
 14163                           tblptrl	equ	0xFF6
 14164                           tablat	equ	0xFF5
 14165                           prodh	equ	0xFF4
 14166                           prodl	equ	0xFF3
 14167                           intcon	equ	0xFF2
 14168                           postinc0	equ	0xFEE
 14169                           fsr0h	equ	0xFEA
 14170                           fsr0l	equ	0xFE9
 14171                           wreg	equ	0xFE8
 14172                           indf1	equ	0xFE7
 14173                           postdec1	equ	0xFE5
 14174                           fsr1h	equ	0xFE2
 14175                           fsr1l	equ	0xFE1
 14176                           bsr	equ	0xFE0
 14177                           indf2	equ	0xFDF
 14178                           postinc2	equ	0xFDE
 14179                           postdec2	equ	0xFDD
 14180                           fsr2h	equ	0xFDA
 14181                           fsr2l	equ	0xFD9
 14182                           status	equ	0xFD8
 14183                           
 14184                           	psect	rparam
 14185  0000                     pclatu	equ	0xFFB
 14186                           pclath	equ	0xFFA
 14187                           tblptru	equ	0xFF8
 14188                           tblptrh	equ	0xFF7
 14189                           tblptrl	equ	0xFF6
 14190                           tablat	equ	0xFF5
 14191                           prodh	equ	0xFF4
 14192                           prodl	equ	0xFF3
 14193                           intcon	equ	0xFF2
 14194                           postinc0	equ	0xFEE
 14195                           fsr0h	equ	0xFEA
 14196                           fsr0l	equ	0xFE9
 14197                           wreg	equ	0xFE8
 14198                           indf1	equ	0xFE7
 14199                           postdec1	equ	0xFE5
 14200                           fsr1h	equ	0xFE2
 14201                           fsr1l	equ	0xFE1
 14202                           bsr	equ	0xFE0
 14203                           indf2	equ	0xFDF
 14204                           postinc2	equ	0xFDE
 14205                           postdec2	equ	0xFDD
 14206                           fsr2h	equ	0xFDA
 14207                           fsr2l	equ	0xFD9
 14208                           status	equ	0xFD8
 14209                           
 14210                           	psect	temp
 14211  000041                     btemp:
 14212                           	opt stack 0
 14213  000041                     	ds	1
 14214  0000                     int$flags	set	btemp
 14215                           pclatu	equ	0xFFB
 14216                           pclath	equ	0xFFA
 14217                           tblptru	equ	0xFF8
 14218                           tblptrh	equ	0xFF7
 14219                           tblptrl	equ	0xFF6
 14220                           tablat	equ	0xFF5
 14221                           prodh	equ	0xFF4
 14222                           prodl	equ	0xFF3
 14223                           intcon	equ	0xFF2
 14224                           postinc0	equ	0xFEE
 14225                           fsr0h	equ	0xFEA
 14226                           fsr0l	equ	0xFE9
 14227                           wreg	equ	0xFE8
 14228                           indf1	equ	0xFE7
 14229                           postdec1	equ	0xFE5
 14230                           fsr1h	equ	0xFE2
 14231                           fsr1l	equ	0xFE1
 14232                           bsr	equ	0xFE0
 14233                           indf2	equ	0xFDF
 14234                           postinc2	equ	0xFDE
 14235                           postdec2	equ	0xFDD
 14236                           fsr2h	equ	0xFDA
 14237                           fsr2l	equ	0xFD9
 14238                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    76
    Data        7
    BSS         97
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      64
    BANK0           160    116     156
    BANK1           256     24      63
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array_debug(BANK1[8]), data_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    _send_data->_CANsendMessage
    _rampe->___lwdiv
    _pow->___lwdiv
    ___xxtofl->___lwdiv
    ___fltol->___lwdiv
    ___fladd->___lwdiv
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->___wmul
    ___awdiv->___wmul

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _rampe->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___fltol
    ___fltol->___fladd
    _eval_poly->___fladd
    ___flmul->___xxtofl
    ___flsub->___fladd
    ___fladd->___flmul
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->_CANsendMessage

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_rampe

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   91102
                                            115 BANK0      1     1      0
                                             16 BANK1      8     8      0
                       _CANisTxReady
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                    _battery_measure
                    _can_interpreter
            _configurazione_iniziale
                           _delay_ms
                              _rampe
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    4326
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (1) _rampe                                               24    24      0   65416
                                              0 BANK1     16    16      0
                       _CANisTxReady
                     _CANsendMessage
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___fladd
                            ___fltol
                            ___lwdiv
                           ___xxtofl
                                _abs
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 21    13      8   53481
                                             94 BANK0     21    13      8
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                            ___lwdiv (ARG)
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   17318
                                             75 BANK0      6     2      4
                            ___fladd
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                 11     7      4   29309
                                             83 BANK0     11     7      4
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                8     2      6     513
                                             75 BANK0      8     2      6
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                               10     6      4    7751
                                             69 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                8     2      6     630
                                             30 COMRAM     6     0      6
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     938
                                              0 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     722
                                             59 BANK0     10     6      4
                            ___fladd (ARG)
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     882
                                             30 COMRAM     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     8      8    8041
                                             59 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3191
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4467
                                             59 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    4134
                                             39 BANK0     20    12      8
                            ___flmul (ARG)
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     296
                                             30 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1883
                                             30 COMRAM     4     4      0
                                              0 BANK0     21    13      8
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     170
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     549
                                             30 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _SetDCEPWM1                                           6     4      2     330
                                             30 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    9662
                      _CANInitialize
                     _SetOutputEPWM1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     956
                                              0 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _SetOutputEPWM1                                       2     1      1     494
                                             30 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                              9 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             30 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             30 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             30 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0    5465
                       _CANisTxReady
                     _CANsendMessage
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     540
                                             30 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     599
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4289
                                             30 COMRAM     4     4      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      37
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      62
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      31
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_bassa                                           18    18      0    1251
                                             12 COMRAM    18    18      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (7) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (7) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   _battery_measure
     _CANisTxReady
     _CANsendMessage
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _can_interpreter
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _SetOutputEPWM1
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul
   _rampe
     _CANisTxReady
     _CANsendMessage
     _SetDCEPWM1
     _SetOutputEPWM1
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _frexp (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
       _frexp (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _frexp (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _frexp (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
     _abs
     _pow
       ___flge
       ___flmul
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _frexp (ARG)
       ___flneg
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _frexp (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
       _exp (ARG)
         ___fldiv
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _frexp (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _eval_poly
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
         _floor
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___flge
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _frexp (ARG)
               ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _frexp (ARG)
               ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
         _log (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _eval_poly
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _frexp (ARG)
               ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
           _frexp
       _log (ARG)
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _frexp (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _frexp (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _eval_poly
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
         _frexp
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     18      3F       7       24.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     74      9C       5       97.5%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     25      40       1       68.1%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11B      20        0.0%
DATA                 0      0     11B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Mar 26 22:23:03 2016

                    ___fldiv@aexp 0074                      ___fldiv@bexp 0073  
            __end_of_CANSetFilter 1794                      ___fldiv@sign 0068  
                    ___awdiv@sign 0065                                _id 0026  
                              bsr 000FE0               ___wmul@multiplicand 0021  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 4F10  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                     __CFG_OSC$HS 000000                      __CFG_CP4$OFF 000000  
                    __CFG_CP5$OFF 000000              _previousTimeCounter1 002E  
            _previousTimeCounter2 00DC                               l400 1CA6  
                             l401 1D9A                               l410 1E64  
                             l402 1D2C                               l403 1D36  
                             l404 1D40                               l405 1D4A  
                             l510 153C                               l502 1504  
                             l503 1508                               l408 1E54  
                             l520 1638                               l504 1512  
                             l440 36D6                               l409 1E58  
                             l521 1642                               l513 160A  
                             l505 1516                               l441 36DA  
                             l370 17AA                               l530 173A  
                             l514 160E                               l506 1520  
                             l450 37CE                               l442 36E4  
                             l371 17AE                               l531 173E  
                             l515 1618                               l507 1524  
                             l451 37D8                               l443 36E8  
                             l380 1960                               l372 18A2  
                             l532 1748                               l524 1710  
                             l516 161C                               l508 152E  
                             l452 37DC                               l444 36F2  
                             l364 41FC                               l381 196C  
                             l373 1834                               l525 1714  
                             l517 1626                               l509 1532  
                             l453 37E6                               l445 36F6  
                             l365 4206                               l390 1AC4  
                             l374 183E                               l526 171E  
                             l518 162A                               l470 11F8  
                             l454 37EA                               l446 3700  
                             l438 36C8                               l391 1ACE  
                             l375 1848                               l527 1722  
                             l519 1634                               l471 1202  
                             l455 37F4                               l439 36CC  
                             l711 4EC0                               l384 1C8C  
                             l376 1852                               l528 172C  
                             l480 12F8                               l472 1206  
                             l456 37F8                               l385 1A26  
                             l369 1A10                               l529 1730  
                             l481 12FC                               l473 1210  
                             l457 3802                               l449 37CA  
                             l562 5056                               l394 1BD8  
                             l386 1A2A                               l482 1306  
                             l474 1214                               l395 1BDC  
                             l387 1B1E                               l379 195C  
                             l491 13FE                               l483 130A  
                             l475 121E                               l396 1BE8  
                             l388 1AB0                               l716 4D3A  
                             l492 1402                               l484 1314  
                             l476 1222                               l389 1ABA  
                             l493 140C                               l485 1318  
                             l477 122C                               l469 11F4  
                             l709 4EC4                               l494 1410  
                             l486 1322                               l399 1CA2  
                             l719 4DC0                               l727 4B24  
                             l495 141A                               l487 1326  
                             l575 4FB6                               l496 141E  
                             l488 1330                               l680 3CCC  
                             l497 1428                               l833 500C  
                             l498 142C                               l674 3C78  
                             l499 1436                               l675 3CB8  
                             l781 5070                               l782 5072  
                             l767 4F4A                               l990 458C  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                               _abs 4FEE  
                             _dir 00FA                               _exp 384E  
                             _log 42FA                               _msg 0110  
                             _pow 3D7A                               prod 000FF3  
                             wreg 000FE8                      ___flmul@aexp 007B  
                    ___flmul@bexp 0080                      ___flmul@sign 007A  
                    ___flmul@temp 0085                      ___flmul@prod 0081  
                    __CFG_LVP$OFF 000000                      ___fltol@exp1 00A4  
                    __CFG_WDT$OFF 000000                              ?_abs 001F  
                            l1301 3318                              l1222 3DCA  
                            l1242 25F4                              l1307 33A8  
                            l1243 25E8                              l1227 3F68  
                            l1244 25B4                              l1309 3406  
                            l1190 4E70                              l1350 3FC4  
                            l1335 2C0C                              l1328 2970  
                            l1345 2D1E                              l1337 2C7A  
                            l1259 2768                              l1268 27FC  
                            l1364 40CC                              l1365 40E4  
                            l1357 4070                              l1298 3370  
                            l1386 3AD6                              l1396 480E  
                            l6120 49CC                              l6104 495E  
                            l7010 1950                              l6210 3172  
                            l6034 2C20                              l6130 49FC  
                            l6220 31A0                              l6060 2D04  
                            l6044 2C74                              l6028 2BF6  
                            l6132 4A0C                              l6124 49E0  
                            l6230 31D0                              l6070 2D48  
                            l6054 2CCA                              l6134 4A16  
                            l7016 1970                              l6320 3482  
                            l6240 31FE                              l6216 3196  
                            l6080 44BE                              l6160 4052  
                            l7210 4F2E                              l7202 4FAA  
                            l6330 34C8                              l6322 3496  
                            l6306 3400                              l6058 2CF0  
                            l6138 4A32                              l6154 3FFC  
                            l6410 469A                              l6332 34CC  
                            l6324 34B8                              l6316 3454  
                            l6260 3280                              l6252 3252  
                            l6236 31F4                              l6068 2D3E  
                            l6084 44FC                              l6180 4136  
                            l6156 4004                              l6148 3FD4  
                            l7142 1D54                              l7302 4BC8  
                            l6422 5092                              l7214 4F3C  
                            l6270 32EC                              l6350 4FDC  
                            l6094 45D8                              l6166 40AE  
                            l6158 4014                              l6414 46AC  
                            l6440 359E                              l7320 4E4A  
                            l6088 4544                              l6168 40BE  
                            l6192 4CC2                              l7162 1E48  
                            l7066 1AD8                              l7306 4BDC  
                            l6610 10C0                              l6514 3806  
                            l6290 3392                              l7250 3E8E  
                            l7242 3E06                              l7092 1BEC  
                            l7316 4E3E                              l6284 336C  
                            l6380 4876                              l6372 4772  
                            l6364 473C                              l7236 3DDE  
                            ?_exp 00B3                              ?_log 00AB  
                            l7086 1BCC                              l7318 4E46  
                            l6278 3324                              l5902 27D0  
                            l5822 2534                              l5750 2432  
                            l6382 491A                              l6390 4604  
                            l7254 3EBC                              l7502 2DE8  
                            l7168 1E68                              l7280 4B5A  
                            l6456 364A                              l7328 4E66  
                            l6296 33BC                              l5912 27F6  
                            l5904 27D6                              l5840 25D8  
                            l5760 2460                              l6368 4750  
                            l7290 4B8A                              l7274 4B44  
                            l6730 1480                              l6538 0E02  
                            l6482 3704                              l5930 2886  
                            l5922 2852                              l5850 2618  
                            l5834 25C8                              l7514 2F0E  
                            l7460 4AB6                              l6724 143A  
                            l6628 1170                              l6556 0EB0  
                            l5860 265C                              l5836 25CE  
                            l5780 24C4                              l5756 2456  
                            l7532 3112                              l7540 3146  
                            l7620 3C7C                              l7612 3BAA  
                            l7604 3B94                              l7286 4B78  
                            l7470 4AFA                              l7454 4A96  
                            l6662 1276                              l6574 0F60  
                            l5942 28AA                              l5934 2892  
                            l5926 2864                              l5774 24A0  
                            l6398 466A                              l6902 3A9E  
                            l7534 3120                              l7550 4EB4  
                            l7606 3BA0                              l7288 4B84  
                            l6656 1230                              l6592 1010  
                            l6488 374A                              l5936 2896  
                            l5864 2666                              l5792 24F8  
                            l5784 24CE                              l5768 248C  
                            l5960 2904                              l5952 28DA  
                            l7528 30B4                              l7536 3128  
                            l7640 3CF0                              l7298 4BBA  
                            l7562 4D84                              l6826 174C  
                            l6690 1334                              l5858 2656  
                            l5970 2934                              l5962 2916  
                            l6850 4350                              l7642 3D00  
                            l6764 1586                              l5892 27B0  
                            l5868 2678                              l6844 431E  
                            l6758 1540                              l6950 4212  
                            l5886 279A                              l5878 2748  
                            l5982 2984                              l5958 28FE  
                            l7638 3CEE                              l6792 1646  
                            l6696 137A                              l6952 4256  
                            l6944 41F4                              l5896 27BC  
                            l5976 2958                              l6872 38C0  
                            l7488 2D80                              l6946 420A  
                            l5986 2998                              l5978 295E  
                            l6866 3876                              l7498 2DD2  
                            l6884 3948                              l7596 3B22  
                            l6990 185C                              l6798 168C  
                            l6878 390A                              ?_pow 00BE  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u7420 257E  
                            u8140 4CF0                              u7430 2596  
                            u7440 2598                              u9210 145A  
                            u9130 1354                              u9050 1250  
                            u8410 4760                              u8148 4CF4  
                            u8350 3468                              u9215 144E  
                            u9135 1348                              u9055 1244  
                            u8520 3522                              u7800 2B98  
                            u8450 4636                              u8525 3516  
                            u7805 2B8C                              u9510 3914  
                            u8535 357A                              u8800 0E34  
                            u8560 35CE                              u9520 3916  
                            u9450 176C                              u9370 1666  
                            u9290 1560                              u8730 3826  
                            u8650 3724                              u8458 463A  
                            u8805 0E28                              u8565 35C2  
                            u9455 1760                              u9375 165A  
                            u9295 1554                              u8815 0E8C  
                            u8735 381A                              u8655 3718  
                            u8575 3626                              u8920 1044  
                            u8840 0EE4                              u8760 0D86  
                            u7880 2CDE                              u9705 1924  
                            u9810 1AF6                              u7970 497E  
                            u9820 1B40                              u8925 1038  
                            u8845 0ED8                              u8765 0D7A  
                            u9815 1AEC                              u8935 109C  
                            u8855 0F3C                              u8775 0DDE  
                            u7975 4972                              u9680 187A  
                            u8960 10F4                              u8880 0F94  
                            u9825 1B36                              u9690 18C4  
                            u9835 1BA0                              u9940 1D72  
                            u9685 1870                              u8965 10E8  
                            u8885 0F88                              u9950 1DBC  
                            u9695 18BA                              u8975 114C  
                            u8895 0FEC                              u9945 1D68  
                            _TMR2 000FCC                              u9955 1DB2  
                            u9965 1E1C               __size_of_CANSetMask 035E  
                            abs@a 001F                              _main 3AE8  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 0041                              exp@x 00B3  
                            log@x 00AB                              pclat 000FFA  
                            pow@x 00BE                              pow@y 00C2  
                            prodh 000FF4                              prodl 000FF3  
                            start 0138                     __CFG_IESO$OFF 000000  
                 ___fldiv@new_exp 006D                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000010                  _CANOperationMode 508C  
          __end_of_SetOutputEPWM1 4F54                             ??_abs 0021  
                           ??_exp 0026                             ??_log 0026  
                           ??_pow 0026        __size_of_CANreceiveMessage 050C  
                   ___fltol@sign1 00A3                   __end_of___fladd 28BC  
                           ?_main 0001                   __end_of___fldiv 34F0  
                 __end_of___awdiv 4BE6                   __end_of___flneg 4FEE  
                 __end_of___flmul 2D62                   __end_of___flsub 4F10  
                 __end_of___fltol 4A44                             u10130 3E70  
                           u10400 3054                             u10075 4F5E  
                           u10420 30FE                             u10520 3B8E  
                 ___awdiv@divisor 0062                             u10390 2FE4  
                           u10630 3D64                             u10570 3C78  
                           u10647 4FAC                             _T2CON 000FCA  
                           _T3CON 000FB1                   __end_of___lwdiv 4E7A  
                           i1l416 21A0                             i1l660 00D2  
                           i1l662 00D0                             i1l567 5088  
                           i1l664 00F0                             i1l656 00D6  
                           i1l658 0066                   ___awdiv@counter 0064  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
               _CANisRxReady$3007 0001                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
                   __CFG_WRT3$OFF 000000                     __CFG_WRT4$OFF 000000  
              __size_of_ISR_bassa 0120                     __CFG_WRT5$OFF 000000  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                CANInitialize@flags 006D  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
                  __CFG_EBTR4$OFF 000000                    __CFG_EBTR5$OFF 000000  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           _vBatt 003A                             _floor 4700  
                           _ldexp 45DC                             _frexp 4C94  
                           _errno 00E4                             _rampe 2D62  
                  __pbitbssCOMRAM 01F0              __end_of_CANisRxReady 508C  
                           tablat 000FF5              __end_of_CANisTxReady 505A  
                           pow@yi 00CF                             status 000FD8  
                     exp@exponent 00BB                        _SetDCEPWM1 4F54  
                     ldexp@newexp 00AF                   __initialization 4DC4  
                     log@exponent 00AF          __size_of_battery_measure 008C  
                    __end_of_main 3D7A                   ?_SetOutputEPWM1 001F  
                          ??_main 0137                     __activetblptr 000003  
               _CANisTxReady$3005 001F                     _counter_array 0100  
                          ?_floor 00A5                            ?_ldexp 00AB  
                          ?_frexp 001F                            _CANCON 000F6F  
                          _ADRESH 000FC4                            ?_rampe 0001  
                ___awdiv@dividend 0060                   __CFG_BBSIZ$1024 000000  
                          i1l5330 2300                            i1l5350 23C2  
                          i1l5342 238A                            i1l5280 210E  
                          i1l5354 23DE                            i1l5346 23A6  
                          i1l5338 236E                            i1l5356 2410  
                          i1l5292 2168                            i1l5284 212C  
                          i1l5276 20F0                            i1l5268 2080  
                          i1l5294 219A                            i1l5630 00A0  
                          i1l5288 214A                            i1l5634 00A8  
                          i1l5626 008C                        _OpenTimer2 505A  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 0064                CANsendMessage@tamp 0068  
                __end_of___xxtofl 4148                  __end_of_delay_ms 4FC0  
           __size_of_CANSetFilter 0A46                    __CFG_XINST$OFF 000000  
              __size_of_OpenEPWM1 0010                 __end_of_ISR_bassa 0138  
                          ___flge 4480                         ??___fladd 008F  
                          ___wmul 5016                         ??___fldiv 001F  
                       ??___awdiv 0025                         ??___flneg 0023  
                  __CFG_STVREN$ON 000000                         ??___flmul 0076  
                       ??___flsub 0026                         ??___fltol 009F  
                       ??___lwdiv 0023                      ??_CANSetMask 0060  
                          _errore 00E6                  OpenTimer2@config 001F  
                          clear_0 4DCA                            clear_1 4DD6  
                          clear_2 4DE6                  ___awdiv@quotient 0066  
        ?_configurazione_iniziale 0001                            floor@i 00A9  
                          floor@x 00A5                   __CFG_BOREN$BOHW 000000  
                    __pdataCOMRAM 0040                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                      _CANSetFilter 0D4E  
                      ___flge@ff1 0060                        ___flge@ff2 0064  
                    ___xxtofl@arg 006A                  __end_ofexp@coeff 0D29  
                    ___xxtofl@exp 0069                      ___xxtofl@val 0060  
                __end_oflog@coeff 0D4D                        __accesstop 0060  
         __end_of__initialization 4E1E                __end_of_CANSetMask 384E  
                 __CFG_PBADEN$OFF 000000                        ___flneg@f1 001F  
                    eval_poly@res 00A7                     ___rparam_used 000001  
                      ___fltol@f1 009B                       ?_SetDCEPWM1 001F  
                  __pcstackCOMRAM 0001                      __pidataBANK0 50AE  
                   __end_of_floor 4820                     __end_of_ldexp 4700  
                   __end_of_frexp 4D38                     __end_of_rampe 3154  
               ??_battery_measure 0025             CANSetFilter@numBuffer 0064  
                 OpenEPWM1@period 001F             __size_of_CANisRxReady 0016  
           __size_of_CANisTxReady 001E                 __end_of_OpenEPWM1 50AE  
                         ??_floor 0026                           ??_ldexp 00B1  
                         ??_frexp 0060                           ??_rampe 0127  
        __end_of_CANOperationMode 509E                        __pbssBANK0 00D4  
                      __pbssBANK1 0100                       ?_OpenTimer2 0001  
              __size_of_eval_poly 0118                        _data_array 00EE  
         __size_of_CANsendMessage 0774          __size_of_can_interpreter 00E4  
                         ?___flge 0060                           ?___wmul 001F  
              __size_of_send_data 004E                      _CANisRxReady 5076  
                         _ECCPR1L 000FBB                           _CANSTAT 000F6E  
                    _CANisTxReady 503C                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
                       ?___xxtofl 0060            __size_of_CANInitialize 01B2  
                       ?_delay_ms 0060                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
             __size_of_SetDCEPWM1 003A                           _RXB1CON 000F50  
                         _TXB0DLC 000F45                           _TXB1DLC 000F35  
                         _TXB2DLC 000F25               CANsendMessage@flags 0067  
                _data_array_debug 011F          SetOutputEPWM1@outputmode 001F  
                      _correzione 00D4                  ??_SetOutputEPWM1 0020  
                         __Hparam 0000                        _left_speed 00E8  
                         __Lparam 0000                  delay_ms@value_ms 0060  
                 __size_of___flge 015C                           ___fladd 2414  
                         ___fldiv 3154                           ___awdiv 4B28  
                         ___flneg 4FC0                           ___flmul 28BC  
                         ___flsub 4EC8                           ___fltol 4938  
                 __size_of___wmul 0026                           ___lwdiv 4E28  
                      _rampe$4053 012F                        _rampe$4054 0133  
                    __psmallconst 0D00              CANInitialize@propSeg 0072  
                         __pcinit 4DC4                 __end_of_eval_poly 4938  
                         __ramtop 0D00               __size_of_OpenTimer2 001C  
                         __ptext0 3AE8                           __ptext1 4E7A  
                         __ptext2 2D62                           __ptext3 3D7A  
                         __ptext4 42FA                           __ptext5 384E  
                         __ptext6 45DC                           __ptext7 4700  
                         __ptext8 4C94                           __ptext9 3F7A  
                       _T2CONbits 000FCA                      __size_of_abs 0028  
                         _current 003C                      __size_of_exp 029A  
                    __size_of_log 0186                      __size_of_pow 0200  
                      ??___xxtofl 0064                        _duty_cycle 0038  
                      ??_delay_ms 0025            CANreceiveMessage@error 000B  
            end_of_initialization 4E1E                           exp@sign 00BD  
               __end_of_send_data 4EC8                     _CANInitialize 4148  
                         pow@sign 00CE                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                         _ISR_bassa 0018  
               ??_can_interpreter 001F                         _PORTAbits 000F80  
                  CANSetMask@mask 001F                         _PORTCbits 000F82  
                  CANSetMask@tamp 0065                    _centralina_abs 01F1  
                  CANSetMask@type 0023                       ___fladd@grs 009A  
                   ___xxtofl@sign 0068                         _TRISDbits 000F95  
                     ___fldiv@grs 006F                       ___fldiv@rem 0069  
__size_of_configurazione_iniziale 00AE               _previousTimeCounter 002A  
         _clock_counter_reference 0036                       ___flmul@grs 007C  
                  _CANsendMessage 1794                  CANInitialize@BRP 006C  
                CANInitialize@SJW 006B                    ?_CANInitialize 0069  
                      main@period 00D3                      ??_SetDCEPWM1 0021  
                 _battery_measure 4D38                    __end_of___flge 45DC  
                      ?_ISR_bassa 0001                    __end_of___wmul 503C  
                   __pidataCOMRAM 50B4                        floor@expon 00AD  
             start_initialization 4DC4                        eval_poly@d 009F  
                      eval_poly@n 00A1                        eval_poly@x 009B  
                      ldexp@value 00AB                       __end_of_abs 5016  
                     __end_of_exp 3AE8                       __end_of_log 4480  
                     __end_of_pow 3F7A                __end_of_SetDCEPWM1 4F8E  
             CANSetMask@numBuffer 0064            __end_of_CANsendMessage 1F08  
               ?_CANOperationMode 0001                      ??_OpenTimer2 001F  
                       _OpenEPWM1 509E                        frexp@value 001F  
              ??_CANOperationMode 001F        CANInitialize@FilterConfig1 0073  
      CANInitialize@FilterConfig2 0074                          ??___flge 001F  
                        ??___wmul 0023                       __pdataBANK0 00F6  
                __CFG_LPT1OSC$OFF 000000                __end_of_OpenTimer2 5076  
                       ___fladd@a 008B                         ___fladd@b 0087  
          CANInitialize@phaseSeg1 0069            CANInitialize@phaseSeg2 006A  
                       ___fldiv@a 0064                         ___fldiv@b 0060  
                       ___flmul@a 0072                         ___flmul@b 006E  
                     __pbssCOMRAM 0026                         ___flsub@a 009F  
                       ___flsub@b 009B                     __pcstackBANK0 0060  
                   __pcstackBANK1 0127                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72                 __size_of___xxtofl 01CE  
             SetDCEPWM1@dutycycle 001F                 __size_of_delay_ms 0032  
                 ?_CANsendMessage 0060                        ?_OpenEPWM1 0001  
         __end_of_battery_measure 4DC4                   ??_CANInitialize 006E  
                       _can_retry 01F0                      _currentSpeed 00F6  
              CANSetFilter@filter 001F                  ___lwdiv@dividend 001F  
                        ?___fladd 0087                          ?___fldiv 0060  
                        ?___awdiv 0060                          ?___flneg 001F  
                        ?___flmul 006E                          ?___flsub 009B  
                        ?___fltol 009B                          ?___lwdiv 001F  
                     ??_ISR_bassa 000D                       __pintcodelo 0018  
                     __smallconst 0D00                          _ECCP1CON 000FBA  
                     _COMSTATbits 000F74        SetOutputEPWM1@outputconfig 0020  
                       _eval_poly 4820                        ISR_bassa@i 001E  
                   _remote_frame1 01F7                  ___lwdiv@quotient 0024  
         _configurazione_iniziale 4BE6                    __size_of_floor 0120  
                  __size_of_ldexp 0124                    __size_of_frexp 00A4  
                  __size_of_rampe 03F2                      _message_sent 01F4  
           CANreceiveMessage@tamp 000C                    ___wmul@product 0023  
                 _can_interpreter 4A44                          _IPR2bits 000FA2  
    _delay_quartz_frequency_value 0040                          _PIE1bits 000F9D  
                        _IPR3bits 000FA5                          _PIE2bits 000FA0  
                       _send_data 4E7A                          _PIE3bits 000FA3  
                        i1u715_20 008A                          i1u661_20 1FC0  
                        i1u661_26 1FC2                          i1u662_20 1FEE  
                        i1u670_25 2174                          i1u662_26 1FF0  
                        i1u672_20 2248                          i1u664_25 2004  
                        i1u672_26 224A                          i1u673_20 2272  
                        i1u681_25 23EA                          i1u673_26 2274  
                        _PIR1bits 000F9E                          i1u675_25 2286  
                        _PIR2bits 000FA1                          _PIR3bits 000FA4  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                        _RXB0SIDH 000F61                         _scrittura 003D  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
                        _TXERRCNT 000F76                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                        _ADCON2bits 000FC0  
               ___wmul@multiplier 001F                        ?_eval_poly 009B  
                   ?_CANSetFilter 001F                         copy_data0 4E00  
                      _CANCONbits 000F6F                       ??_OpenEPWM1 001F  
                ?_battery_measure 0001                         frexp@eptr 0023  
                      ?_send_data 0001                          __Hrparam 0000  
                    _RXB0SIDLbits 000F62                  SetDCEPWM1@DCycle 0023  
                        __Lrparam 0000                      _RXB1SIDLbits 000F52  
              _centralina_comando 01F2                  __size_of___fladd 04A8  
                      _CANSetMask 34F0                  __size_of___fldiv 039C  
                __size_of___awdiv 00BE                  __size_of___flneg 002E  
                __size_of___flmul 04A6                  __size_of___flsub 0048  
                __size_of___fltol 010C                  __size_of___lwdiv 0052  
         __size_of_SetOutputEPWM1 0044                _currentSpeed_array 0108  
                        _exp$4057 00B7                          ___xxtofl 3F7A  
       ??_configurazione_iniziale 0025                      _RXF0SIDLbits 000F01  
                        _delay_ms 4F8E                   ___lwdiv@divisor 0021  
                    _RXF1SIDLbits 000F05                   ___lwdiv@counter 0023  
                  ??_CANSetFilter 0060                          __ptext10 4938  
                        __ptext11 4480                          __ptext20 4F54  
                        __ptext12 4820                          __ptext21 4BE6  
                        __ptext13 28BC                          __ptext30 5016  
                        __ptext22 4F8E                          __ptext14 4EC8  
                        __ptext31 4B28                          __ptext23 4F10  
                        __ptext15 2414                          __ptext32 1794  
                        __ptext24 4148                          __ptext16 4FC0  
                        __ptext33 503C                          __ptext25 34F0  
                        __ptext17 3154                          __ptext34 505A  
                        __ptext26 0D4E                          __ptext18 4FEE  
                        __ptext35 509E                          __ptext27 508C  
                        __ptext19 4E28                          __ptext28 4A44  
                        __ptext37 1F08                          __ptext29 4D38  
                        __ptext38 5076                      _RXF2SIDLbits 000F09  
         __end_of_can_interpreter 4B28                      _RXF3SIDLbits 000F0D  
                        _pow$4055 00C6                          _pow$4056 00CA  
                    _RXF4SIDLbits 000F11                     _speed_fetched 01F9  
                    _RXF5SIDLbits 000F15          CANsendMessage@dataLength 0066  
                    _remote_frame 01F6                     __size_of_main 0292  
                        _duty_set 00D8              CANreceiveMessage@msg 0001  
                    _TXB0SIDLbits 000F42                       _new_message 01F5  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 0041         __size_of_CANOperationMode 0012  
                   ?_CANisRxReady 0001                     ?_CANisTxReady 0001  
                     _RXB0DLCbits 000F65                          exp@coeff 0D01  
                        log@coeff 0D29                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 1F08  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                     ??_eval_poly 00A3                  ??_CANsendMessage 001F  
                    _requestSpeed 00E0                ?_CANreceiveMessage 0001  
                    _request_sent 01F8          CANsendMessage@identifier 0060  
                        intlevel1 0000                 _centralina_sterzo 01F3  
                CANSetFilter@tamp 0065                  CANSetFilter@type 0023  
             ??_CANreceiveMessage 0003                       _TXB0DLCbits 000F45  
                     _right_speed 00EC                       _TXB1DLCbits 000F35  
                     _TXB0CONbits 000F40                       ??_send_data 0023  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 4C94  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
                     _timeCounter 0032              CANOperationMode@mode 001F  
                  ??_CANisRxReady 0001                       ?_CANSetMask 001F  
                  ??_CANisTxReady 001F         __end_of_CANreceiveMessage 2414  
                   ___fladd@signs 0097                  ?_can_interpreter 0001  
                     _previousPwm 00EA                      ___fladd@aexp 0098  
                    ___fladd@bexp 0099             __end_of_CANInitialize 42FA  
