

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Feb 06 21:53:57 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	idataCOMRAM
    40  002816                     __pidataCOMRAM:
    41                           	opt stack 0
    42                           
    43                           ;initializer for _currentSpeed
    44  002816  0001               	dw	1
    45  002818  0000               	dw	0
    46                           
    47                           ;initializer for _dir
    48  00281A  0001               	dw	1
    49                           
    50                           ;initializer for _delay_quartz_frequency_value
    51  00281C  10                 	db	16
    52  0000                     _RXB1CON	set	3920
    53  0000                     _RXB1CONbits	set	3920
    54  0000                     _RXB1D0	set	3926
    55  0000                     _RXB1D1	set	3927
    56  0000                     _RXB1D2	set	3928
    57  0000                     _RXB1D3	set	3929
    58  0000                     _RXB1D4	set	3930
    59  0000                     _RXB1D5	set	3931
    60  0000                     _RXB1D6	set	3932
    61  0000                     _RXB1D7	set	3933
    62  0000                     _RXB1DLC	set	3925
    63  0000                     _RXB1DLCbits	set	3925
    64  0000                     _RXB1EIDH	set	3923
    65  0000                     _RXB1EIDL	set	3924
    66  0000                     _RXB1SIDH	set	3921
    67  0000                     _RXB1SIDL	set	3922
    68  0000                     _RXB1SIDLbits	set	3922
    69  0000                     _RXF0EIDH	set	3842
    70  0000                     _RXF0EIDL	set	3843
    71  0000                     _RXF0SIDH	set	3840
    72  0000                     _RXF0SIDL	set	3841
    73  0000                     _RXF0SIDLbits	set	3841
    74  0000                     _RXF1EIDH	set	3846
    75  0000                     _RXF1EIDL	set	3847
    76  0000                     _RXF1SIDH	set	3844
    77  0000                     _RXF1SIDL	set	3845
    78  0000                     _RXF1SIDLbits	set	3845
    79  0000                     _RXF2EIDH	set	3850
    80  0000                     _RXF2EIDL	set	3851
    81  0000                     _RXF2SIDH	set	3848
    82  0000                     _RXF2SIDL	set	3849
    83  0000                     _RXF2SIDLbits	set	3849
    84  0000                     _RXF3EIDH	set	3854
    85  0000                     _RXF3EIDL	set	3855
    86  0000                     _RXF3SIDH	set	3852
    87  0000                     _RXF3SIDL	set	3853
    88  0000                     _RXF3SIDLbits	set	3853
    89  0000                     _RXF4EIDH	set	3858
    90  0000                     _RXF4EIDL	set	3859
    91  0000                     _RXF4SIDH	set	3856
    92  0000                     _RXF4SIDL	set	3857
    93  0000                     _RXF4SIDLbits	set	3857
    94  0000                     _RXF5EIDH	set	3862
    95  0000                     _RXF5EIDL	set	3863
    96  0000                     _RXF5SIDH	set	3860
    97  0000                     _RXF5SIDL	set	3861
    98  0000                     _RXF5SIDLbits	set	3861
    99  0000                     _RXM0EIDH	set	3866
   100  0000                     _RXM0EIDL	set	3867
   101  0000                     _RXM0SIDH	set	3864
   102  0000                     _RXM0SIDL	set	3865
   103  0000                     _RXM0SIDLbits	set	3865
   104  0000                     _RXM1EIDH	set	3870
   105  0000                     _RXM1EIDL	set	3871
   106  0000                     _RXM1SIDH	set	3868
   107  0000                     _RXM1SIDL	set	3869
   108  0000                     _RXM1SIDLbits	set	3869
   109  0000                     _TXB0CONbits	set	3904
   110  0000                     _TXB0D0	set	3910
   111  0000                     _TXB0D1	set	3911
   112  0000                     _TXB0D2	set	3912
   113  0000                     _TXB0D3	set	3913
   114  0000                     _TXB0D4	set	3914
   115  0000                     _TXB0D5	set	3915
   116  0000                     _TXB0D6	set	3916
   117  0000                     _TXB0D7	set	3917
   118  0000                     _TXB0DLC	set	3909
   119  0000                     _TXB0DLCbits	set	3909
   120  0000                     _TXB0EIDH	set	3907
   121  0000                     _TXB0EIDL	set	3908
   122  0000                     _TXB0SIDH	set	3905
   123  0000                     _TXB0SIDL	set	3906
   124  0000                     _TXB0SIDLbits	set	3906
   125  0000                     _TXB1CONbits	set	3888
   126  0000                     _TXB1D0	set	3894
   127  0000                     _TXB1D1	set	3895
   128  0000                     _TXB1D2	set	3896
   129  0000                     _TXB1D3	set	3897
   130  0000                     _TXB1D4	set	3898
   131  0000                     _TXB1D5	set	3899
   132  0000                     _TXB1D6	set	3900
   133  0000                     _TXB1D7	set	3901
   134  0000                     _TXB1DLC	set	3893
   135  0000                     _TXB1DLCbits	set	3893
   136  0000                     _TXB1EIDH	set	3891
   137  0000                     _TXB1EIDL	set	3892
   138  0000                     _TXB1SIDH	set	3889
   139  0000                     _TXB1SIDL	set	3890
   140  0000                     _TXB1SIDLbits	set	3890
   141  0000                     _TXB2CONbits	set	3872
   142  0000                     _TXB2D0	set	3878
   143  0000                     _TXB2D1	set	3879
   144  0000                     _TXB2D2	set	3880
   145  0000                     _TXB2D3	set	3881
   146  0000                     _TXB2D4	set	3882
   147  0000                     _TXB2D5	set	3883
   148  0000                     _TXB2D6	set	3884
   149  0000                     _TXB2D7	set	3885
   150  0000                     _TXB2DLC	set	3877
   151  0000                     _TXB2DLCbits	set	3877
   152  0000                     _TXB2EIDH	set	3875
   153  0000                     _TXB2EIDL	set	3876
   154  0000                     _TXB2SIDH	set	3873
   155  0000                     _TXB2SIDL	set	3874
   156  0000                     _TXB2SIDLbits	set	3874
   157  0000                     _ADCON0bits	set	4034
   158  0000                     _ADCON1bits	set	4033
   159  0000                     _ADCON2bits	set	4032
   160  0000                     _ADRESH	set	4036
   161  0000                     _BRGCON1	set	3952
   162  0000                     _BRGCON2	set	3953
   163  0000                     _BRGCON2bits	set	3953
   164  0000                     _BRGCON3	set	3954
   165  0000                     _BRGCON3bits	set	3954
   166  0000                     _CANCON	set	3951
   167  0000                     _CANCONbits	set	3951
   168  0000                     _CANSTAT	set	3950
   169  0000                     _COMSTATbits	set	3956
   170  0000                     _ECCP1CON	set	4026
   171  0000                     _ECCPR1L	set	4027
   172  0000                     _INTCONbits	set	4082
   173  0000                     _IPR2bits	set	4002
   174  0000                     _IPR3bits	set	4005
   175  0000                     _LATA	set	3977
   176  0000                     _LATB	set	3978
   177  0000                     _LATC	set	3979
   178  0000                     _LATD	set	3980
   179  0000                     _LATE	set	3981
   180  0000                     _PIE1bits	set	3997
   181  0000                     _PIE2bits	set	4000
   182  0000                     _PIE3bits	set	4003
   183  0000                     _PIR1bits	set	3998
   184  0000                     _PIR2bits	set	4001
   185  0000                     _PIR3bits	set	4004
   186  0000                     _PORTAbits	set	3968
   187  0000                     _PORTCbits	set	3970
   188  0000                     _PR2	set	4043
   189  0000                     _RCONbits	set	4048
   190  0000                     _RXB0CON	set	3936
   191  0000                     _RXB0CONbits	set	3936
   192  0000                     _RXB0D0	set	3942
   193  0000                     _RXB0D1	set	3943
   194  0000                     _RXB0D2	set	3944
   195  0000                     _RXB0D3	set	3945
   196  0000                     _RXB0D4	set	3946
   197  0000                     _RXB0D5	set	3947
   198  0000                     _RXB0D6	set	3948
   199  0000                     _RXB0D7	set	3949
   200  0000                     _RXB0DLC	set	3941
   201  0000                     _RXB0DLCbits	set	3941
   202  0000                     _RXB0EIDH	set	3939
   203  0000                     _RXB0EIDL	set	3940
   204  0000                     _RXB0SIDH	set	3937
   205  0000                     _RXB0SIDL	set	3938
   206  0000                     _RXB0SIDLbits	set	3938
   207  0000                     _RXERRCNT	set	3957
   208  0000                     _T2CON	set	4042
   209  0000                     _T2CONbits	set	4042
   210  0000                     _T3CON	set	4017
   211  0000                     _TMR2	set	4044
   212  0000                     _TMR3H	set	4019
   213  0000                     _TMR3L	set	4018
   214  0000                     _TRISA	set	3986
   215  0000                     _TRISB	set	3987
   216  0000                     _TRISC	set	3988
   217  0000                     _TRISD	set	3989
   218  0000                     _TRISDbits	set	3989
   219  0000                     _TRISE	set	3990
   220  0000                     _TXERRCNT	set	3958
   221                           
   222                           ; #config settings
   223  0000                     
   224                           	psect	cinit
   225  00262A                     __pcinit:
   226                           	opt stack 0
   227  00262A                     start_initialization:
   228                           	opt stack 0
   229  00262A                     __initialization:
   230                           	opt stack 0
   231                           
   232                           ; Clear objects allocated to BANK0 (91 bytes)
   233  00262A  EE00  F060         	lfsr	0,__pbssBANK0
   234  00262E  0E5B               	movlw	91
   235  002630                     clear_0:
   236  002630  6AEE               	clrf	postinc0,c
   237  002632  06E8               	decf	wreg,f,c
   238  002634  E1FD               	bnz	clear_0
   239                           
   240                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   241  002636  6A3B               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   242  002638  6A3A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   243                           
   244                           ; Clear objects allocated to COMRAM (26 bytes)
   245  00263A  EE00  F020         	lfsr	0,__pbssCOMRAM
   246  00263E  0E1A               	movlw	26
   247  002640                     clear_1:
   248  002640  6AEE               	clrf	postinc0,c
   249  002642  06E8               	decf	wreg,f,c
   250  002644  E1FD               	bnz	clear_1
   251                           
   252                           ; Initialize objects allocated to COMRAM (7 bytes)
   253                           ; load TBLPTR registers with __pidataCOMRAM
   254  002646  0E16               	movlw	low __pidataCOMRAM
   255  002648  6EF6               	movwf	tblptrl,c
   256  00264A  0E28               	movlw	high __pidataCOMRAM
   257  00264C  6EF7               	movwf	tblptrh,c
   258  00264E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   259  002650  6EF8               	movwf	tblptru,c
   260  002652  EE00  F03C         	lfsr	0,__pdataCOMRAM
   261  002656  EE10 F007          	lfsr	1,7
   262  00265A                     copy_data0:
   263  00265A  0009               	tblrd		*+
   264  00265C  CFF5 FFEE          	movff	tablat,postinc0
   265  002660  50E5               	movf	postdec1,w,c
   266  002662  50E1               	movf	fsr1l,w,c
   267  002664  E1FA               	bnz	copy_data0
   268  002666                     end_of_initialization:
   269                           	opt stack 0
   270  002666                     __end_of__initialization:
   271                           	opt stack 0
   272  002666  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   273  002668  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   274  00266A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   275  00266C  6EF8               	movwf	tblptru,c
   276  00266E  0100               	movlb	0
   277  002670  EFC6  F00C         	goto	_main	;jump to C main() function
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           postdec1	equ	0xFE5
   285                           fsr1l	equ	0xFE1
   286                           
   287                           	psect	bitbssCOMRAM
   288  0001D0                     __pbitbssCOMRAM:
   289                           	opt stack 0
   290  0001D0                     _can_retry:
   291                           	opt stack 0
   292  0001D0                     	ds	1
   293  0001D1                     _centralina_abs:
   294                           	opt stack 0
   295  0001D1                     	ds	1
   296  0001D2                     _centralina_comando:
   297                           	opt stack 0
   298  0001D2                     	ds	1
   299  0001D3                     _centralina_sterzo:
   300                           	opt stack 0
   301  0001D3                     	ds	1
   302  0001D4                     _message_sent:
   303                           	opt stack 0
   304  0001D4                     	ds	1
   305  0001D5                     _remote_frame:
   306                           	opt stack 0
   307  0001D5                     	ds	1
   308  0001D6                     _remote_frame1:
   309                           	opt stack 0
   310  0001D6                     	ds	1
   311  0001D7                     _request_sent:
   312                           	opt stack 0
   313  0001D7                     	ds	1
   314  0001D8                     _speed_fetched:
   315                           	opt stack 0
   316  0001D8                     	ds	1
   317                           tblptru	equ	0xFF8
   318                           tblptrh	equ	0xFF7
   319                           tblptrl	equ	0xFF6
   320                           tablat	equ	0xFF5
   321                           postinc0	equ	0xFEE
   322                           wreg	equ	0xFE8
   323                           postdec1	equ	0xFE5
   324                           fsr1l	equ	0xFE1
   325                           
   326                           	psect	bssCOMRAM
   327  000020                     __pbssCOMRAM:
   328                           	opt stack 0
   329  000020                     _duty_set:
   330                           	opt stack 0
   331  000020                     	ds	4
   332  000024                     _requestSpeed:
   333                           	opt stack 0
   334  000024                     	ds	4
   335  000028                     _timeCounter:
   336                           	opt stack 0
   337  000028                     	ds	4
   338  00002C                     _clock_counter_reference:
   339                           	opt stack 0
   340  00002C                     	ds	2
   341  00002E                     _errore:
   342                           	opt stack 0
   343  00002E                     	ds	2
   344  000030                     _left_speed:
   345                           	opt stack 0
   346  000030                     	ds	2
   347  000032                     _previousPwm:
   348                           	opt stack 0
   349  000032                     	ds	2
   350  000034                     _right_speed:
   351                           	opt stack 0
   352  000034                     	ds	2
   353  000036                     _UART1Config:
   354                           	opt stack 0
   355  000036                     	ds	1
   356  000037                     _baud:
   357                           	opt stack 0
   358  000037                     	ds	1
   359  000038                     _current:
   360                           	opt stack 0
   361  000038                     	ds	1
   362  000039                     _scrittura:
   363                           	opt stack 0
   364  000039                     	ds	1
   365                           tblptru	equ	0xFF8
   366                           tblptrh	equ	0xFF7
   367                           tblptrl	equ	0xFF6
   368                           tablat	equ	0xFF5
   369                           postinc0	equ	0xFEE
   370                           wreg	equ	0xFE8
   371                           postdec1	equ	0xFE5
   372                           fsr1l	equ	0xFE1
   373                           
   374                           	psect	dataCOMRAM
   375  00003C                     __pdataCOMRAM:
   376                           	opt stack 0
   377  00003C                     _currentSpeed:
   378                           	opt stack 0
   379  00003C                     	ds	4
   380  000040                     _dir:
   381                           	opt stack 0
   382  000040                     	ds	2
   383  000042                     _delay_quartz_frequency_value:
   384                           	opt stack 0
   385  000042                     	ds	1
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           postdec1	equ	0xFE5
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	bssBANK0
   396  000060                     __pbssBANK0:
   397                           	opt stack 0
   398  000060                     _counter_array:
   399                           	opt stack 0
   400  000060                     	ds	8
   401  000068                     _currentSpeed_array:
   402                           	opt stack 0
   403  000068                     	ds	8
   404  000070                     _data_debug1:
   405                           	opt stack 0
   406  000070                     	ds	8
   407  000078                     _correzione:
   408                           	opt stack 0
   409  000078                     	ds	4
   410  00007C                     _id:
   411                           	opt stack 0
   412  00007C                     	ds	4
   413  000080                     _id1:
   414                           	opt stack 0
   415  000080                     	ds	4
   416  000084                     _previousTimeCounter:
   417                           	opt stack 0
   418  000084                     	ds	4
   419  000088                     _previousTimeCounter1:
   420                           	opt stack 0
   421  000088                     	ds	4
   422  00008C                     _previousTimeCounter2:
   423                           	opt stack 0
   424  00008C                     	ds	4
   425  000090                     _duty_cycle:
   426                           	opt stack 0
   427  000090                     	ds	2
   428  000092                     _vBatt:
   429                           	opt stack 0
   430  000092                     	ds	2
   431  000094                     _msg:
   432                           	opt stack 0
   433  000094                     	ds	15
   434  0000A3                     _data_array:
   435                           	opt stack 0
   436  0000A3                     	ds	8
   437  0000AB                     _data_array1:
   438                           	opt stack 0
   439  0000AB                     	ds	8
   440  0000B3                     _data_array_debug:
   441                           	opt stack 0
   442  0000B3                     	ds	8
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           postdec1	equ	0xFE5
   450                           fsr1l	equ	0xFE1
   451                           
   452                           	psect	cstackBANK0
   453  0000BB                     __pcstackBANK0:
   454                           	opt stack 0
   455  0000BB                     ?_abs:
   456                           	opt stack 0
   457  0000BB                     ?___lwdiv:
   458                           	opt stack 0
   459  0000BB                     CANOperationMode@mode:
   460                           	opt stack 0
   461  0000BB                     _CANisTxReady$2989:
   462                           	opt stack 0
   463  0000BB                     OpenEPWM1@period:
   464                           	opt stack 0
   465  0000BB                     SetOutputEPWM1@outputmode:
   466                           	opt stack 0
   467  0000BB                     OpenTimer2@config:
   468                           	opt stack 0
   469  0000BB                     SetDCEPWM1@dutycycle:
   470                           	opt stack 0
   471  0000BB                     abs@a:
   472                           	opt stack 0
   473  0000BB                     ___lwdiv@dividend:
   474                           	opt stack 0
   475  0000BB                     CANsendMessage@identifier:
   476                           	opt stack 0
   477  0000BB                     CANSetMask@mask:
   478                           	opt stack 0
   479  0000BB                     CANSetFilter@filter:
   480                           	opt stack 0
   481                           
   482                           ; 4 bytes @ 0x0
   483  0000BB                     	ds	1
   484  0000BC                     SetOutputEPWM1@outputconfig:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x1
   488  0000BC                     	ds	1
   489  0000BD                     ??_abs:
   490  0000BD                     ??_SetDCEPWM1:
   491  0000BD                     ___lwdiv@divisor:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x2
   495  0000BD                     	ds	2
   496  0000BF                     CANSetMask@type:
   497                           	opt stack 0
   498  0000BF                     CANSetFilter@type:
   499                           	opt stack 0
   500  0000BF                     ___lwdiv@counter:
   501                           	opt stack 0
   502  0000BF                     CANsendMessage@data:
   503                           	opt stack 0
   504  0000BF                     SetDCEPWM1@DCycle:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x4
   508  0000BF                     	ds	1
   509  0000C0                     ??_CANSetMask:
   510  0000C0                     ??_CANSetFilter:
   511  0000C0                     ___lwdiv@quotient:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x5
   515  0000C0                     	ds	1
   516  0000C1                     CANsendMessage@dataLength:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x6
   520  0000C1                     	ds	1
   521  0000C2                     ?___wmul:
   522                           	opt stack 0
   523  0000C2                     CANsendMessage@flags:
   524                           	opt stack 0
   525  0000C2                     ___wmul@multiplier:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x7
   529  0000C2                     	ds	1
   530  0000C3                     ??_CANsendMessage:
   531                           
   532                           ; 0 bytes @ 0x8
   533  0000C3                     	ds	1
   534  0000C4                     CANSetMask@numBuffer:
   535                           	opt stack 0
   536  0000C4                     CANSetFilter@numBuffer:
   537                           	opt stack 0
   538  0000C4                     ___wmul@multiplicand:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x9
   542  0000C4                     	ds	1
   543  0000C5                     CANSetMask@tamp:
   544                           	opt stack 0
   545  0000C5                     CANSetFilter@tamp:
   546                           	opt stack 0
   547                           
   548                           ; 4 bytes @ 0xA
   549  0000C5                     	ds	1
   550  0000C6                     ___wmul@product:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0xB
   554  0000C6                     	ds	1
   555  0000C7                     CANsendMessage@tamp:
   556                           	opt stack 0
   557                           
   558                           ; 4 bytes @ 0xC
   559  0000C7                     	ds	1
   560  0000C8                     ?___awdiv:
   561                           	opt stack 0
   562  0000C8                     delay_ms@value_ms:
   563                           	opt stack 0
   564  0000C8                     ___awdiv@dividend:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0xD
   568  0000C8                     	ds	1
   569  0000C9                     CANInitialize@phaseSeg1:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0xE
   573  0000C9                     	ds	1
   574  0000CA                     CANInitialize@phaseSeg2:
   575                           	opt stack 0
   576  0000CA                     ___awdiv@divisor:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0xF
   580  0000CA                     	ds	1
   581  0000CB                     CANInitialize@SJW:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x10
   585  0000CB                     	ds	1
   586  0000CC                     CANInitialize@BRP:
   587                           	opt stack 0
   588  0000CC                     ___awdiv@counter:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x11
   592  0000CC                     	ds	1
   593  0000CD                     CANInitialize@flags:
   594                           	opt stack 0
   595  0000CD                     ___awdiv@sign:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x12
   599  0000CD                     	ds	1
   600  0000CE                     ??_CANInitialize:
   601  0000CE                     ___awdiv@quotient:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x13
   605  0000CE                     	ds	2
   606  0000D0                     
   607                           ; 0 bytes @ 0x15
   608  0000D0                     	ds	2
   609  0000D2                     CANInitialize@propSeg:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x17
   613  0000D2                     	ds	1
   614  0000D3                     CANInitialize@FilterConfig1:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x18
   618  0000D3                     	ds	1
   619  0000D4                     CANInitialize@FilterConfig2:
   620                           	opt stack 0
   621                           
   622                           ; 1 bytes @ 0x19
   623  0000D4                     	ds	1
   624  0000D5                     ??_main:
   625                           
   626                           ; 0 bytes @ 0x1A
   627  0000D5                     	ds	8
   628  0000DD                     main@period:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x22
   632  0000DD                     	ds	1
   633                           tblptru	equ	0xFF8
   634                           tblptrh	equ	0xFF7
   635                           tblptrl	equ	0xFF6
   636                           tablat	equ	0xFF5
   637                           postinc0	equ	0xFEE
   638                           wreg	equ	0xFE8
   639                           postdec1	equ	0xFE5
   640                           fsr1l	equ	0xFE1
   641                           
   642                           	psect	cstackCOMRAM
   643  000001                     __pcstackCOMRAM:
   644                           	opt stack 0
   645  000001                     _CANisRxReady$2991:
   646                           	opt stack 0
   647  000001                     i1SetOutputEPWM1@outputmode:
   648                           	opt stack 0
   649  000001                     CANreceiveMessage@msg:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x0
   653  000001                     	ds	1
   654  000002                     i1SetOutputEPWM1@outputconfig:
   655                           	opt stack 0
   656                           
   657                           ; 1 bytes @ 0x1
   658  000002                     	ds	1
   659  000003                     ??_CANreceiveMessage:
   660                           
   661                           ; 0 bytes @ 0x2
   662  000003                     	ds	8
   663  00000B                     CANreceiveMessage@error:
   664                           	opt stack 0
   665                           
   666                           ; 1 bytes @ 0xA
   667  00000B                     	ds	1
   668  00000C                     CANreceiveMessage@tamp:
   669                           	opt stack 0
   670                           
   671                           ; 1 bytes @ 0xB
   672  00000C                     	ds	1
   673  00000D                     ??_ISR_bassa:
   674                           
   675                           ; 0 bytes @ 0xC
   676  00000D                     	ds	19
   677                           tblptru	equ	0xFF8
   678                           tblptrh	equ	0xFF7
   679                           tblptrl	equ	0xFF6
   680                           tablat	equ	0xFF5
   681                           postinc0	equ	0xFEE
   682                           wreg	equ	0xFE8
   683                           postdec1	equ	0xFE5
   684                           fsr1l	equ	0xFE1
   685                           
   686 ;;
   687 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   688 ;;
   689 ;; *************** function _main *****************
   690 ;; Defined at:
   691 ;;		line 163 in file "motore.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  period          1   34[BANK0 ] unsigned char 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  2  672[None  ] int 
   698 ;; Registers used:
   699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   705 ;;      Params:         0       0       0       0
   706 ;;      Locals:         0       1       0       0
   707 ;;      Temps:          0       8       0       0
   708 ;;      Totals:         0       9       0       0
   709 ;;Total ram usage:        9 bytes
   710 ;; Hardware stack levels required when called:    5
   711 ;; This function calls:
   712 ;;		_CANisTxReady
   713 ;;		_CANsendMessage
   714 ;;		_OpenEPWM1
   715 ;;		_OpenTimer2
   716 ;;		_SetDCEPWM1
   717 ;;		_SetOutputEPWM1
   718 ;;		___lwdiv
   719 ;;		___wmul
   720 ;;		_abs
   721 ;;		_battery_measure
   722 ;;		_configurazione_iniziale
   723 ;;		_delay_ms
   724 ;; This function is called by:
   725 ;;		Startup code after reset
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text0
   730  00198C                     __ptext0:
   731                           	opt stack 0
   732  00198C                     _main:
   733                           	opt stack 26
   734                           
   735                           ;motore.c: 165: unsigned char period;
   736                           ;motore.c: 166: configurazione_iniziale();
   737                           
   738                           ;incstack = 0
   739  00198C  EC08  F012         	call	_configurazione_iniziale	;wreg free
   740                           
   741                           ;motore.c: 167: PORTAbits.RA1 = 1;
   742  001990  8280               	bsf	3968,1,c	;volatile
   743                           
   744                           ;motore.c: 168: PORTCbits.RC1 = 1;
   745  001992  8282               	bsf	3970,1,c	;volatile
   746                           
   747                           ;motore.c: 169: delay_ms(500);
   748  001994  0E01               	movlw	1
   749  001996  0100               	movlb	0	; () banked
   750  001998  6FC9               	movwf	(delay_ms@value_ms+1)& (0+255),b
   751  00199A  0EF4               	movlw	244
   752  00199C  6FC8               	movwf	delay_ms@value_ms& (0+255),b
   753  00199E  EC99  F013         	call	_delay_ms	;wreg free
   754                           
   755                           ;motore.c: 170: PORTAbits.RA1 = 0;
   756  0019A2  9280               	bcf	3968,1,c	;volatile
   757                           
   758                           ;motore.c: 171: PORTCbits.RC1 = 0;
   759  0019A4  9282               	bcf	3970,1,c	;volatile
   760                           
   761                           ;motore.c: 172: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
   762  0019A6  0E06               	movlw	6
   763  0019A8  ECDB  F013         	call	_OpenTimer2
   764                           
   765                           ;motore.c: 173: period = 0xFE;
   766  0019AC  0EFE               	movlw	254
   767  0019AE  0100               	movlb	0	; () banked
   768  0019B0  6FDD               	movwf	main@period& (0+255),b
   769                           
   770                           ; BSR set to: 0
   771                           ;motore.c: 174: OpenEPWM1(period);
   772  0019B2  0100               	movlb	0	; () banked
   773  0019B4  51DD               	movf	main@period& (0+255),w,b
   774  0019B6  EC02  F014         	call	_OpenEPWM1
   775                           
   776                           ;motore.c: 175: speed_fetched = 1;
   777  0019BA  803B               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
   778                           
   779                           ;motore.c: 176: SetOutputEPWM1(0b01111111, 0b11111100);
   780  0019BC  0EFC               	movlw	252
   781  0019BE  0100               	movlb	0	; () banked
   782  0019C0  6FBB               	movwf	SetOutputEPWM1@outputmode& (0+255),b
   783  0019C2  0E7F               	movlw	127
   784  0019C4  ECEC  F012         	call	_SetOutputEPWM1
   785                           
   786                           ;motore.c: 177: PORTCbits.RC5 = 1;
   787  0019C8  8A82               	bsf	3970,5,c	;volatile
   788                           
   789                           ;motore.c: 178: PORTCbits.RC4 = 1;
   790  0019CA  8882               	bsf	3970,4,c	;volatile
   791  0019CC                     l4960:
   792                           
   793                           ;motore.c: 185: if ((timeCounter - previousTimeCounter1 >= 30)) {
   794  0019CC  C088  F0D5         	movff	_previousTimeCounter1,??_main
   795  0019D0  C089  F0D6         	movff	_previousTimeCounter1+1,??_main+1
   796  0019D4  C08A  F0D7         	movff	_previousTimeCounter1+2,??_main+2
   797  0019D8  C08B  F0D8         	movff	_previousTimeCounter1+3,??_main+3
   798  0019DC  0100               	movlb	0	; () banked
   799  0019DE  1FD5               	comf	??_main& (0+255),f,b
   800  0019E0  1FD6               	comf	(??_main+1)& (0+255),f,b
   801  0019E2  1FD7               	comf	(??_main+2)& (0+255),f,b
   802  0019E4  1FD8               	comf	(??_main+3)& (0+255),f,b
   803  0019E6  2BD5               	incf	??_main& (0+255),f,b
   804  0019E8  0E00               	movlw	0
   805  0019EA  23D6               	addwfc	(??_main+1)& (0+255),f,b
   806  0019EC  23D7               	addwfc	(??_main+2)& (0+255),f,b
   807  0019EE  23D8               	addwfc	(??_main+3)& (0+255),f,b
   808  0019F0  5028               	movf	_timeCounter,w,c	;volatile
   809  0019F2  0100               	movlb	0	; () banked
   810  0019F4  25D5               	addwf	??_main& (0+255),w,b
   811  0019F6  0100               	movlb	0	; () banked
   812  0019F8  6FD9               	movwf	(??_main+4)& (0+255),b
   813  0019FA  5029               	movf	_timeCounter+1,w,c	;volatile
   814  0019FC  0100               	movlb	0	; () banked
   815  0019FE  21D6               	addwfc	(??_main+1)& (0+255),w,b
   816  001A00  0100               	movlb	0	; () banked
   817  001A02  6FDA               	movwf	(??_main+5)& (0+255),b
   818  001A04  502A               	movf	_timeCounter+2,w,c	;volatile
   819  001A06  0100               	movlb	0	; () banked
   820  001A08  21D7               	addwfc	(??_main+2)& (0+255),w,b
   821  001A0A  0100               	movlb	0	; () banked
   822  001A0C  6FDB               	movwf	(??_main+6)& (0+255),b
   823  001A0E  502B               	movf	_timeCounter+3,w,c	;volatile
   824  001A10  0100               	movlb	0	; () banked
   825  001A12  21D8               	addwfc	(??_main+3)& (0+255),w,b
   826  001A14  0100               	movlb	0	; () banked
   827  001A16  6FDC               	movwf	(??_main+7)& (0+255),b
   828  001A18  0100               	movlb	0	; () banked
   829  001A1A  51DC               	movf	(??_main+7)& (0+255),w,b
   830  001A1C  0100               	movlb	0	; () banked
   831  001A1E  11DB               	iorwf	(??_main+6)& (0+255),w,b
   832  001A20  0100               	movlb	0	; () banked
   833  001A22  11DA               	iorwf	(??_main+5)& (0+255),w,b
   834  001A24  E105               	bnz	l4964
   835  001A26  0E1E               	movlw	30
   836  001A28  0100               	movlb	0	; () banked
   837  001A2A  5DD9               	subwf	(??_main+4)& (0+255),w,b
   838  001A2C  A0D8               	btfss	status,0,c
   839  001A2E  D12B               	goto	l5000
   840  001A30                     l4964:
   841  001A30  ECC9  F013         	call	_CANisTxReady	;wreg free
   842  001A34  06E8               	decf	wreg,f,c
   843  001A36  A4D8               	btfss	status,2,c
   844  001A38  D7FB               	goto	l4964
   845                           
   846                           ;motore.c: 187: }
   847                           ;motore.c: 188: CANsendMessage(0b00000000000000000000000000110, data_array_debug, 8, CAN
      +                          _CONFIG_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   848  001A3A  0E06               	movlw	6
   849  001A3C  0100               	movlb	0	; () banked
   850  001A3E  6FBB               	movwf	CANsendMessage@identifier& (0+255),b
   851  001A40  0E00               	movlw	0
   852  001A42  6FBC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   853  001A44  0E00               	movlw	0
   854  001A46  6FBD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   855  001A48  0E00               	movlw	0
   856  001A4A  6FBE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   857  001A4C  0EB3               	movlw	low _data_array_debug
   858  001A4E  0100               	movlb	0	; () banked
   859  001A50  6FBF               	movwf	CANsendMessage@data& (0+255),b
   860  001A52  0E00               	movlw	high _data_array_debug
   861  001A54  0100               	movlb	0	; () banked
   862  001A56  6FC0               	movwf	(CANsendMessage@data+1)& (0+255),b
   863  001A58  0E08               	movlw	8
   864  001A5A  0100               	movlb	0	; () banked
   865  001A5C  6FC1               	movwf	CANsendMessage@dataLength& (0+255),b
   866  001A5E  0EFC               	movlw	252
   867  001A60  0100               	movlb	0	; () banked
   868  001A62  6FC2               	movwf	CANsendMessage@flags& (0+255),b
   869  001A64  EC7A  F006         	call	_CANsendMessage	;wreg free
   870                           
   871                           ;motore.c: 189: if (speed_fetched == 1) {
   872  001A68  A03B               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
   873  001A6A  D0FF               	goto	l4996
   874                           
   875                           ;motore.c: 198: speed_fetched = 0;
   876  001A6C  903B               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
   877                           
   878                           ;motore.c: 199: currentSpeed = ((left_speed + right_speed) / 2);
   879  001A6E  5034               	movf	_right_speed,w,c	;volatile
   880  001A70  2430               	addwf	_left_speed,w,c	;volatile
   881  001A72  0100               	movlb	0	; () banked
   882  001A74  6FD5               	movwf	??_main& (0+255),b
   883  001A76  5035               	movf	_right_speed+1,w,c	;volatile
   884  001A78  2031               	addwfc	_left_speed+1,w,c	;volatile
   885  001A7A  0100               	movlb	0	; () banked
   886  001A7C  6FD6               	movwf	(??_main+1)& (0+255),b
   887  001A7E  90D8               	bcf	status,0,c
   888  001A80  0100               	movlb	0	; () banked
   889  001A82  31D6               	rrcf	(??_main+1)& (0+255),w,b
   890  001A84  0100               	movlb	0	; () banked
   891  001A86  6FD8               	movwf	(??_main+3)& (0+255),b
   892  001A88  0100               	movlb	0	; () banked
   893  001A8A  31D5               	rrcf	??_main& (0+255),w,b
   894  001A8C  0100               	movlb	0	; () banked
   895  001A8E  6FD7               	movwf	(??_main+2)& (0+255),b
   896  001A90  C0D7  F03C         	movff	??_main+2,_currentSpeed	;volatile
   897  001A94  C0D8  F03D         	movff	??_main+3,_currentSpeed+1	;volatile
   898  001A98  6A3E               	clrf	_currentSpeed+2,c	;volatile
   899  001A9A  6A3F               	clrf	_currentSpeed+3,c	;volatile
   900                           
   901                           ; BSR set to: 0
   902                           ;motore.c: 201: requestSpeed = 1500;
   903  001A9C  0EDC               	movlw	220
   904  001A9E  6E24               	movwf	_requestSpeed,c	;volatile
   905  001AA0  0E05               	movlw	5
   906  001AA2  6E25               	movwf	_requestSpeed+1,c	;volatile
   907  001AA4  0E00               	movlw	0
   908  001AA6  6E26               	movwf	_requestSpeed+2,c	;volatile
   909  001AA8  0E00               	movlw	0
   910  001AAA  6E27               	movwf	_requestSpeed+3,c	;volatile
   911                           
   912                           ; BSR set to: 0
   913                           ;motore.c: 202: errore = abs((currentSpeed - requestSpeed));
   914  001AAC  C024  F0D5         	movff	_requestSpeed,??_main	;volatile
   915  001AB0  C025  F0D6         	movff	_requestSpeed+1,??_main+1	;volatile
   916  001AB4  0100               	movlb	0	; () banked
   917  001AB6  1FD5               	comf	??_main& (0+255),f,b
   918  001AB8  1FD6               	comf	(??_main+1)& (0+255),f,b
   919  001ABA  4BD5               	infsnz	??_main& (0+255),f,b
   920  001ABC  2BD6               	incf	(??_main+1)& (0+255),f,b
   921  001ABE  503C               	movf	_currentSpeed,w,c	;volatile
   922  001AC0  0100               	movlb	0	; () banked
   923  001AC2  25D5               	addwf	??_main& (0+255),w,b
   924  001AC4  0100               	movlb	0	; () banked
   925  001AC6  6FBB               	movwf	abs@a& (0+255),b
   926  001AC8  503D               	movf	_currentSpeed+1,w,c	;volatile
   927  001ACA  0100               	movlb	0	; () banked
   928  001ACC  21D6               	addwfc	(??_main+1)& (0+255),w,b
   929  001ACE  0100               	movlb	0	; () banked
   930  001AD0  6FBC               	movwf	(abs@a+1)& (0+255),b
   931  001AD2  ECB3  F013         	call	_abs	;wreg free
   932  001AD6  C0BB  F02E         	movff	?_abs,_errore
   933  001ADA  C0BC  F02F         	movff	?_abs+1,_errore+1
   934                           
   935                           ;motore.c: 203: correzione = ((errore / 150)*(errore / 150))*2;
   936  001ADE  0E00               	movlw	0
   937  001AE0  0100               	movlb	0	; () banked
   938  001AE2  6FBE               	movwf	(___lwdiv@divisor+1)& (0+255),b
   939  001AE4  0E96               	movlw	150
   940  001AE6  6FBD               	movwf	___lwdiv@divisor& (0+255),b
   941  001AE8  C02E  F0BB         	movff	_errore,___lwdiv@dividend
   942  001AEC  C02F  F0BC         	movff	_errore+1,___lwdiv@dividend+1
   943  001AF0  ECB0  F012         	call	___lwdiv	;wreg free
   944  001AF4  C0BB  F0C2         	movff	?___lwdiv,___wmul@multiplier
   945  001AF8  C0BC  F0C3         	movff	?___lwdiv+1,___wmul@multiplier+1
   946  001AFC  0E00               	movlw	0
   947  001AFE  0100               	movlb	0	; () banked
   948  001B00  6FBE               	movwf	(___lwdiv@divisor+1)& (0+255),b
   949  001B02  0E96               	movlw	150
   950  001B04  6FBD               	movwf	___lwdiv@divisor& (0+255),b
   951  001B06  C02E  F0BB         	movff	_errore,___lwdiv@dividend
   952  001B0A  C02F  F0BC         	movff	_errore+1,___lwdiv@dividend+1
   953  001B0E  ECB0  F012         	call	___lwdiv	;wreg free
   954  001B12  C0BB  F0C4         	movff	?___lwdiv,___wmul@multiplicand
   955  001B16  C0BC  F0C5         	movff	?___lwdiv+1,___wmul@multiplicand+1
   956  001B1A  EC7E  F013         	call	___wmul	;wreg free
   957  001B1E  90D8               	bcf	status,0,c
   958  001B20  0100               	movlb	0	; () banked
   959  001B22  37C2               	rlcf	?___wmul& (0+255),f,b
   960  001B24  0100               	movlb	0	; () banked
   961  001B26  37C3               	rlcf	(?___wmul+1)& (0+255),f,b
   962  001B28  0100               	movlb	0	; () banked
   963  001B2A  C0C2  F078         	movff	?___wmul,_correzione
   964  001B2E  0100               	movlb	0	; () banked
   965  001B30  C0C3  F079         	movff	?___wmul+1,_correzione+1
   966  001B34  0100               	movlb	0	; () banked
   967  001B36  6B7A               	clrf	(_correzione+2)& (0+255),b
   968  001B38  6B7B               	clrf	(_correzione+3)& (0+255),b
   969                           
   970                           ; BSR set to: 0
   971                           ;motore.c: 204: if (correzione > 1) {
   972  001B3A  0100               	movlb	0	; () banked
   973  001B3C  BF7B               	btfsc	(_correzione+3)& (0+255),7,b
   974  001B3E  D08B               	goto	l4992
   975  001B40  0100               	movlb	0	; () banked
   976  001B42  517B               	movf	(_correzione+3)& (0+255),w,b
   977  001B44  0100               	movlb	0	; () banked
   978  001B46  117A               	iorwf	(_correzione+2)& (0+255),w,b
   979  001B48  0100               	movlb	0	; () banked
   980  001B4A  1179               	iorwf	(_correzione+1)& (0+255),w,b
   981  001B4C  E105               	bnz	u6220
   982  001B4E  0E02               	movlw	2
   983  001B50  0100               	movlb	0	; () banked
   984  001B52  5D78               	subwf	_correzione& (0+255),w,b
   985  001B54  A0D8               	btfss	status,0,c
   986  001B56  D07F               	goto	l4992
   987  001B58                     u6220:
   988                           
   989                           ; BSR set to: 0
   990                           ;motore.c: 205: if (currentSpeed - requestSpeed > 0) {
   991  001B58  C024  F0D5         	movff	_requestSpeed,??_main	;volatile
   992  001B5C  C025  F0D6         	movff	_requestSpeed+1,??_main+1	;volatile
   993  001B60  C026  F0D7         	movff	_requestSpeed+2,??_main+2	;volatile
   994  001B64  C027  F0D8         	movff	_requestSpeed+3,??_main+3	;volatile
   995  001B68  0100               	movlb	0	; () banked
   996  001B6A  1FD5               	comf	??_main& (0+255),f,b
   997  001B6C  1FD6               	comf	(??_main+1)& (0+255),f,b
   998  001B6E  1FD7               	comf	(??_main+2)& (0+255),f,b
   999  001B70  1FD8               	comf	(??_main+3)& (0+255),f,b
  1000  001B72  2BD5               	incf	??_main& (0+255),f,b
  1001  001B74  0E00               	movlw	0
  1002  001B76  23D6               	addwfc	(??_main+1)& (0+255),f,b
  1003  001B78  23D7               	addwfc	(??_main+2)& (0+255),f,b
  1004  001B7A  23D8               	addwfc	(??_main+3)& (0+255),f,b
  1005  001B7C  503C               	movf	_currentSpeed,w,c	;volatile
  1006  001B7E  0100               	movlb	0	; () banked
  1007  001B80  25D5               	addwf	??_main& (0+255),w,b
  1008  001B82  0100               	movlb	0	; () banked
  1009  001B84  6FD9               	movwf	(??_main+4)& (0+255),b
  1010  001B86  503D               	movf	_currentSpeed+1,w,c	;volatile
  1011  001B88  0100               	movlb	0	; () banked
  1012  001B8A  21D6               	addwfc	(??_main+1)& (0+255),w,b
  1013  001B8C  0100               	movlb	0	; () banked
  1014  001B8E  6FDA               	movwf	(??_main+5)& (0+255),b
  1015  001B90  503E               	movf	_currentSpeed+2,w,c	;volatile
  1016  001B92  0100               	movlb	0	; () banked
  1017  001B94  21D7               	addwfc	(??_main+2)& (0+255),w,b
  1018  001B96  0100               	movlb	0	; () banked
  1019  001B98  6FDB               	movwf	(??_main+6)& (0+255),b
  1020  001B9A  503F               	movf	_currentSpeed+3,w,c	;volatile
  1021  001B9C  0100               	movlb	0	; () banked
  1022  001B9E  21D8               	addwfc	(??_main+3)& (0+255),w,b
  1023  001BA0  0100               	movlb	0	; () banked
  1024  001BA2  6FDC               	movwf	(??_main+7)& (0+255),b
  1025  001BA4  0100               	movlb	0	; () banked
  1026  001BA6  BFDC               	btfsc	(??_main+7)& (0+255),7,b
  1027  001BA8  D033               	goto	l4988
  1028  001BAA  0100               	movlb	0	; () banked
  1029  001BAC  51DC               	movf	(??_main+7)& (0+255),w,b
  1030  001BAE  0100               	movlb	0	; () banked
  1031  001BB0  11DB               	iorwf	(??_main+6)& (0+255),w,b
  1032  001BB2  0100               	movlb	0	; () banked
  1033  001BB4  11DA               	iorwf	(??_main+5)& (0+255),w,b
  1034  001BB6  E104               	bnz	u6230
  1035  001BB8  0100               	movlb	0	; () banked
  1036  001BBA  05D9               	decf	(??_main+4)& (0+255),w,b
  1037  001BBC  A0D8               	btfss	status,0,c
  1038  001BBE  D028               	goto	l4988
  1039  001BC0                     u6230:
  1040                           
  1041                           ; BSR set to: 0
  1042                           ;motore.c: 206: duty_set = previousPwm - correzione;
  1043  001BC0  C078  F0D5         	movff	_correzione,??_main
  1044  001BC4  C079  F0D6         	movff	_correzione+1,??_main+1
  1045  001BC8  C07A  F0D7         	movff	_correzione+2,??_main+2
  1046  001BCC  C07B  F0D8         	movff	_correzione+3,??_main+3
  1047  001BD0  0100               	movlb	0	; () banked
  1048  001BD2  1FD5               	comf	??_main& (0+255),f,b
  1049  001BD4  1FD6               	comf	(??_main+1)& (0+255),f,b
  1050  001BD6  1FD7               	comf	(??_main+2)& (0+255),f,b
  1051  001BD8  1FD8               	comf	(??_main+3)& (0+255),f,b
  1052  001BDA  2BD5               	incf	??_main& (0+255),f,b
  1053  001BDC  0E00               	movlw	0
  1054  001BDE  23D6               	addwfc	(??_main+1)& (0+255),f,b
  1055  001BE0  23D7               	addwfc	(??_main+2)& (0+255),f,b
  1056  001BE2  23D8               	addwfc	(??_main+3)& (0+255),f,b
  1057  001BE4  5032               	movf	_previousPwm,w,c
  1058  001BE6  0100               	movlb	0	; () banked
  1059  001BE8  25D5               	addwf	??_main& (0+255),w,b
  1060  001BEA  6E20               	movwf	_duty_set,c
  1061  001BEC  5033               	movf	_previousPwm+1,w,c
  1062  001BEE  0100               	movlb	0	; () banked
  1063  001BF0  21D6               	addwfc	(??_main+1)& (0+255),w,b
  1064  001BF2  6E21               	movwf	_duty_set+1,c
  1065  001BF4  0E00               	movlw	0
  1066  001BF6  0100               	movlb	0	; () banked
  1067  001BF8  21D7               	addwfc	(??_main+2)& (0+255),w,b
  1068  001BFA  6E22               	movwf	_duty_set+2,c
  1069  001BFC  0E00               	movlw	0
  1070  001BFE  0100               	movlb	0	; () banked
  1071  001C00  21D8               	addwfc	(??_main+3)& (0+255),w,b
  1072  001C02  6E23               	movwf	_duty_set+3,c
  1073                           
  1074                           ;motore.c: 207: if (duty_set < 0) {
  1075  001C04  AE23               	btfss	_duty_set+3,7,c
  1076  001C06  D02D               	goto	l4994
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;motore.c: 208: duty_set = 0;
  1080  001C08  0E00               	movlw	0
  1081  001C0A  6E20               	movwf	_duty_set,c
  1082  001C0C  0E00               	movlw	0
  1083  001C0E  D01D               	goto	L1
  1084  001C10                     l4988:
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;motore.c: 211: duty_set = previousPwm + correzione;
  1088  001C10  5032               	movf	_previousPwm,w,c
  1089  001C12  0100               	movlb	0	; () banked
  1090  001C14  2578               	addwf	_correzione& (0+255),w,b
  1091  001C16  6E20               	movwf	_duty_set,c
  1092  001C18  5033               	movf	_previousPwm+1,w,c
  1093  001C1A  0100               	movlb	0	; () banked
  1094  001C1C  2179               	addwfc	(_correzione+1)& (0+255),w,b
  1095  001C1E  6E21               	movwf	_duty_set+1,c
  1096  001C20  0E00               	movlw	0
  1097  001C22  0100               	movlb	0	; () banked
  1098  001C24  217A               	addwfc	(_correzione+2)& (0+255),w,b
  1099  001C26  6E22               	movwf	_duty_set+2,c
  1100  001C28  0E00               	movlw	0
  1101  001C2A  0100               	movlb	0	; () banked
  1102  001C2C  217B               	addwfc	(_correzione+3)& (0+255),w,b
  1103  001C2E  6E23               	movwf	_duty_set+3,c
  1104                           
  1105                           ;motore.c: 212: if (duty_set > 1024) {
  1106  001C30  BE23               	btfsc	_duty_set+3,7,c
  1107  001C32  D017               	goto	l4994
  1108  001C34  5023               	movf	_duty_set+3,w,c
  1109  001C36  1022               	iorwf	_duty_set+2,w,c
  1110  001C38  E105               	bnz	u6250
  1111  001C3A  0420               	decf	_duty_set,w,c
  1112  001C3C  0E04               	movlw	4
  1113  001C3E  5821               	subwfb	_duty_set+1,w,c
  1114  001C40  A0D8               	btfss	status,0,c
  1115  001C42  D00F               	goto	l4994
  1116  001C44                     u6250:
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;motore.c: 213: duty_set = 1023;
  1120  001C44  0EFF               	movlw	255
  1121  001C46  6E20               	movwf	_duty_set,c
  1122  001C48  0E03               	movlw	3
  1123  001C4A                     L1:
  1124  001C4A  6E21               	movwf	_duty_set+1,c
  1125  001C4C  0E00               	movlw	0
  1126  001C4E  6E22               	movwf	_duty_set+2,c
  1127  001C50  0E00               	movlw	0
  1128  001C52  6E23               	movwf	_duty_set+3,c
  1129                           
  1130                           ; BSR set to: 0
  1131                           ;motore.c: 214: }
  1132                           ;motore.c: 215: }
  1133                           ;motore.c: 216: } else {
  1134                           
  1135                           ; BSR set to: 0
  1136  001C54  D006               	goto	l4994
  1137  001C56                     l4992:
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;motore.c: 217: duty_set = previousPwm;
  1141  001C56  C032  F020         	movff	_previousPwm,_duty_set
  1142  001C5A  C033  F021         	movff	_previousPwm+1,_duty_set+1
  1143  001C5E  6A22               	clrf	_duty_set+2,c
  1144  001C60  6A23               	clrf	_duty_set+3,c
  1145  001C62                     l4994:
  1146                           
  1147                           ; BSR set to: 0
  1148                           ;motore.c: 218: }
  1149                           ;motore.c: 219: previousPwm = duty_set;
  1150  001C62  C020  F032         	movff	_duty_set,_previousPwm
  1151  001C66  C021  F033         	movff	_duty_set+1,_previousPwm+1
  1152  001C6A                     l4996:
  1153                           
  1154                           ;motore.c: 220: }
  1155                           ;motore.c: 221: previousTimeCounter1 = timeCounter;
  1156  001C6A  C028  F088         	movff	_timeCounter,_previousTimeCounter1	;volatile
  1157  001C6E  C029  F089         	movff	_timeCounter+1,_previousTimeCounter1+1	;volatile
  1158  001C72  C02A  F08A         	movff	_timeCounter+2,_previousTimeCounter1+2	;volatile
  1159  001C76  C02B  F08B         	movff	_timeCounter+3,_previousTimeCounter1+3	;volatile
  1160                           
  1161                           ;motore.c: 222: SetDCEPWM1(duty_set);
  1162  001C7A  C020  F0BB         	movff	_duty_set,SetDCEPWM1@dutycycle
  1163  001C7E  C021  F0BC         	movff	_duty_set+1,SetDCEPWM1@dutycycle+1
  1164  001C82  EC3A  F013         	call	_SetDCEPWM1	;wreg free
  1165  001C86                     l5000:
  1166                           
  1167                           ;motore.c: 223: }
  1168                           ;motore.c: 244: if ((timeCounter - previousTimeCounter) > 500) {
  1169  001C86  C084  F0D5         	movff	_previousTimeCounter,??_main
  1170  001C8A  C085  F0D6         	movff	_previousTimeCounter+1,??_main+1
  1171  001C8E  C086  F0D7         	movff	_previousTimeCounter+2,??_main+2
  1172  001C92  C087  F0D8         	movff	_previousTimeCounter+3,??_main+3
  1173  001C96  0100               	movlb	0	; () banked
  1174  001C98  1FD5               	comf	??_main& (0+255),f,b
  1175  001C9A  1FD6               	comf	(??_main+1)& (0+255),f,b
  1176  001C9C  1FD7               	comf	(??_main+2)& (0+255),f,b
  1177  001C9E  1FD8               	comf	(??_main+3)& (0+255),f,b
  1178  001CA0  2BD5               	incf	??_main& (0+255),f,b
  1179  001CA2  0E00               	movlw	0
  1180  001CA4  23D6               	addwfc	(??_main+1)& (0+255),f,b
  1181  001CA6  23D7               	addwfc	(??_main+2)& (0+255),f,b
  1182  001CA8  23D8               	addwfc	(??_main+3)& (0+255),f,b
  1183  001CAA  5028               	movf	_timeCounter,w,c	;volatile
  1184  001CAC  0100               	movlb	0	; () banked
  1185  001CAE  25D5               	addwf	??_main& (0+255),w,b
  1186  001CB0  0100               	movlb	0	; () banked
  1187  001CB2  6FD9               	movwf	(??_main+4)& (0+255),b
  1188  001CB4  5029               	movf	_timeCounter+1,w,c	;volatile
  1189  001CB6  0100               	movlb	0	; () banked
  1190  001CB8  21D6               	addwfc	(??_main+1)& (0+255),w,b
  1191  001CBA  0100               	movlb	0	; () banked
  1192  001CBC  6FDA               	movwf	(??_main+5)& (0+255),b
  1193  001CBE  502A               	movf	_timeCounter+2,w,c	;volatile
  1194  001CC0  0100               	movlb	0	; () banked
  1195  001CC2  21D7               	addwfc	(??_main+2)& (0+255),w,b
  1196  001CC4  0100               	movlb	0	; () banked
  1197  001CC6  6FDB               	movwf	(??_main+6)& (0+255),b
  1198  001CC8  502B               	movf	_timeCounter+3,w,c	;volatile
  1199  001CCA  0100               	movlb	0	; () banked
  1200  001CCC  21D8               	addwfc	(??_main+3)& (0+255),w,b
  1201  001CCE  0100               	movlb	0	; () banked
  1202  001CD0  6FDC               	movwf	(??_main+7)& (0+255),b
  1203  001CD2  0100               	movlb	0	; () banked
  1204  001CD4  51DC               	movf	(??_main+7)& (0+255),w,b
  1205  001CD6  0100               	movlb	0	; () banked
  1206  001CD8  11DB               	iorwf	(??_main+6)& (0+255),w,b
  1207  001CDA  E108               	bnz	u6260
  1208  001CDC  0EF5               	movlw	245
  1209  001CDE  0100               	movlb	0	; () banked
  1210  001CE0  5DD9               	subwf	(??_main+4)& (0+255),w,b
  1211  001CE2  0E01               	movlw	1
  1212  001CE4  0100               	movlb	0	; () banked
  1213  001CE6  59DA               	subwfb	(??_main+5)& (0+255),w,b
  1214  001CE8  A0D8               	btfss	status,0,c
  1215  001CEA  D044               	goto	l5028
  1216  001CEC                     u6260:
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;motore.c: 245: if (request_sent == 0) {
  1220  001CEC  BE3A               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1221  001CEE  D01E               	goto	l686
  1222  001CF0                     l5006:
  1223  001CF0  ECC9  F013         	call	_CANisTxReady	;wreg free
  1224  001CF4  06E8               	decf	wreg,f,c
  1225  001CF6  A4D8               	btfss	status,2,c
  1226  001CF8  D7FB               	goto	l5006
  1227                           
  1228                           ;motore.c: 247: }
  1229                           ;motore.c: 248: CANsendMessage(0b00000000000000000000000000010, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1230  001CFA  0E02               	movlw	2
  1231  001CFC  0100               	movlb	0	; () banked
  1232  001CFE  6FBB               	movwf	CANsendMessage@identifier& (0+255),b
  1233  001D00  0E00               	movlw	0
  1234  001D02  6FBC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1235  001D04  0E00               	movlw	0
  1236  001D06  6FBD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1237  001D08  0E00               	movlw	0
  1238  001D0A  6FBE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1239  001D0C  0EA3               	movlw	low _data_array
  1240  001D0E  0100               	movlb	0	; () banked
  1241  001D10  6FBF               	movwf	CANsendMessage@data& (0+255),b
  1242  001D12  0E00               	movlw	high _data_array
  1243  001D14  0100               	movlb	0	; () banked
  1244  001D16  6FC0               	movwf	(CANsendMessage@data+1)& (0+255),b
  1245  001D18  0E08               	movlw	8
  1246  001D1A  0100               	movlb	0	; () banked
  1247  001D1C  6FC1               	movwf	CANsendMessage@dataLength& (0+255),b
  1248  001D1E  0EFC               	movlw	252
  1249  001D20  0100               	movlb	0	; () banked
  1250  001D22  6FC2               	movwf	CANsendMessage@flags& (0+255),b
  1251  001D24  EC7A  F006         	call	_CANsendMessage	;wreg free
  1252                           
  1253                           ;motore.c: 249: request_sent = 1;
  1254  001D28  8E3A               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1255                           
  1256                           ;motore.c: 250: } else {
  1257  001D2A  D01C               	goto	l5026
  1258  001D2C                     l686:
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;motore.c: 251: if ((centralina_abs == 1)&&(centralina_sterzo == 1)&&(centralina_comando
      +                           == 1)) {
  1262  001D2C  B23A               	btfsc	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
  1263                           
  1264                           ; BSR set to: 0
  1265  001D2E  A63A               	btfss	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
  1266  001D30  D007               	goto	l691
  1267                           
  1268                           ; BSR set to: 0
  1269  001D32  A43A               	btfss	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  1270  001D34  D005               	goto	l691
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;motore.c: 252: centralina_abs = 0;
  1274  001D36  923A               	bcf	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
  1275                           
  1276                           ;motore.c: 253: centralina_sterzo = 0;
  1277  001D38  963A               	bcf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
  1278                           
  1279                           ;motore.c: 254: centralina_comando = 0;
  1280  001D3A  943A               	bcf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  1281                           
  1282                           ;motore.c: 255: PORTAbits.RA1 = 0;
  1283  001D3C  9280               	bcf	3968,1,c	;volatile
  1284  001D3E  D011               	goto	l5024
  1285  001D40                     l691:
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;motore.c: 259: PORTAbits.RA1 = 1;
  1289  001D40  8280               	bsf	3968,1,c	;volatile
  1290                           
  1291                           ; BSR set to: 0
  1292                           ;motore.c: 260: delay_ms(200);
  1293  001D42  0E00               	movlw	0
  1294  001D44  0100               	movlb	0	; () banked
  1295  001D46  6FC9               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1296  001D48  0EC8               	movlw	200
  1297  001D4A  6FC8               	movwf	delay_ms@value_ms& (0+255),b
  1298  001D4C  EC99  F013         	call	_delay_ms	;wreg free
  1299                           
  1300                           ;motore.c: 261: PORTAbits.RA1 = 0;
  1301  001D50  9280               	bcf	3968,1,c	;volatile
  1302                           
  1303                           ;motore.c: 262: delay_ms(200);
  1304  001D52  0E00               	movlw	0
  1305  001D54  0100               	movlb	0	; () banked
  1306  001D56  6FC9               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1307  001D58  0EC8               	movlw	200
  1308  001D5A  6FC8               	movwf	delay_ms@value_ms& (0+255),b
  1309  001D5C  EC99  F013         	call	_delay_ms	;wreg free
  1310                           
  1311                           ;motore.c: 263: PORTAbits.RA1 = 1;
  1312  001D60  8280               	bsf	3968,1,c	;volatile
  1313  001D62                     l5024:
  1314                           
  1315                           ;motore.c: 264: request_sent = 0;
  1316  001D62  9E3A               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1317  001D64                     l5026:
  1318                           
  1319                           ;motore.c: 265: }
  1320                           ;motore.c: 266: }
  1321                           ;motore.c: 267: previousTimeCounter = timeCounter;
  1322  001D64  C028  F084         	movff	_timeCounter,_previousTimeCounter	;volatile
  1323  001D68  C029  F085         	movff	_timeCounter+1,_previousTimeCounter+1	;volatile
  1324  001D6C  C02A  F086         	movff	_timeCounter+2,_previousTimeCounter+2	;volatile
  1325  001D70  C02B  F087         	movff	_timeCounter+3,_previousTimeCounter+3	;volatile
  1326  001D74                     l5028:
  1327                           
  1328                           ;motore.c: 268: }
  1329                           ;motore.c: 269: if ((timeCounter - previousTimeCounter2 > 100)) {
  1330  001D74  C08C  F0D5         	movff	_previousTimeCounter2,??_main
  1331  001D78  C08D  F0D6         	movff	_previousTimeCounter2+1,??_main+1
  1332  001D7C  C08E  F0D7         	movff	_previousTimeCounter2+2,??_main+2
  1333  001D80  C08F  F0D8         	movff	_previousTimeCounter2+3,??_main+3
  1334  001D84  0100               	movlb	0	; () banked
  1335  001D86  1FD5               	comf	??_main& (0+255),f,b
  1336  001D88  1FD6               	comf	(??_main+1)& (0+255),f,b
  1337  001D8A  1FD7               	comf	(??_main+2)& (0+255),f,b
  1338  001D8C  1FD8               	comf	(??_main+3)& (0+255),f,b
  1339  001D8E  2BD5               	incf	??_main& (0+255),f,b
  1340  001D90  0E00               	movlw	0
  1341  001D92  23D6               	addwfc	(??_main+1)& (0+255),f,b
  1342  001D94  23D7               	addwfc	(??_main+2)& (0+255),f,b
  1343  001D96  23D8               	addwfc	(??_main+3)& (0+255),f,b
  1344  001D98  5028               	movf	_timeCounter,w,c	;volatile
  1345  001D9A  0100               	movlb	0	; () banked
  1346  001D9C  25D5               	addwf	??_main& (0+255),w,b
  1347  001D9E  0100               	movlb	0	; () banked
  1348  001DA0  6FD9               	movwf	(??_main+4)& (0+255),b
  1349  001DA2  5029               	movf	_timeCounter+1,w,c	;volatile
  1350  001DA4  0100               	movlb	0	; () banked
  1351  001DA6  21D6               	addwfc	(??_main+1)& (0+255),w,b
  1352  001DA8  0100               	movlb	0	; () banked
  1353  001DAA  6FDA               	movwf	(??_main+5)& (0+255),b
  1354  001DAC  502A               	movf	_timeCounter+2,w,c	;volatile
  1355  001DAE  0100               	movlb	0	; () banked
  1356  001DB0  21D7               	addwfc	(??_main+2)& (0+255),w,b
  1357  001DB2  0100               	movlb	0	; () banked
  1358  001DB4  6FDB               	movwf	(??_main+6)& (0+255),b
  1359  001DB6  502B               	movf	_timeCounter+3,w,c	;volatile
  1360  001DB8  0100               	movlb	0	; () banked
  1361  001DBA  21D8               	addwfc	(??_main+3)& (0+255),w,b
  1362  001DBC  0100               	movlb	0	; () banked
  1363  001DBE  6FDC               	movwf	(??_main+7)& (0+255),b
  1364  001DC0  0100               	movlb	0	; () banked
  1365  001DC2  51DC               	movf	(??_main+7)& (0+255),w,b
  1366  001DC4  0100               	movlb	0	; () banked
  1367  001DC6  11DB               	iorwf	(??_main+6)& (0+255),w,b
  1368  001DC8  0100               	movlb	0	; () banked
  1369  001DCA  11DA               	iorwf	(??_main+5)& (0+255),w,b
  1370  001DCC  E105               	bnz	u6320
  1371  001DCE  0E65               	movlw	101
  1372  001DD0  0100               	movlb	0	; () banked
  1373  001DD2  5DD9               	subwf	(??_main+4)& (0+255),w,b
  1374  001DD4  A0D8               	btfss	status,0,c
  1375  001DD6  D5FA               	goto	l4960
  1376  001DD8                     u6320:
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;motore.c: 270: battery_measure();
  1380  001DD8  EC60  F012         	call	_battery_measure	;wreg free
  1381                           
  1382                           ;motore.c: 271: previousTimeCounter2 = timeCounter;
  1383  001DDC  C028  F08C         	movff	_timeCounter,_previousTimeCounter2	;volatile
  1384  001DE0  C029  F08D         	movff	_timeCounter+1,_previousTimeCounter2+1	;volatile
  1385  001DE4  C02A  F08E         	movff	_timeCounter+2,_previousTimeCounter2+2	;volatile
  1386  001DE8  C02B  F08F         	movff	_timeCounter+3,_previousTimeCounter2+3	;volatile
  1387  001DEC  D5EF               	goto	l4960
  1388  001DEE                     __end_of_main:
  1389                           	opt stack 0
  1390                           tblptru	equ	0xFF8
  1391                           tblptrh	equ	0xFF7
  1392                           tblptrl	equ	0xFF6
  1393                           tablat	equ	0xFF5
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           postdec1	equ	0xFE5
  1397                           fsr1l	equ	0xFE1
  1398                           status	equ	0xFD8
  1399                           
  1400 ;; *************** function _configurazione_iniziale *****************
  1401 ;; Defined at:
  1402 ;;		line 329 in file "motore.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;		None               void
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1416 ;;      Params:         0       0       0       0
  1417 ;;      Locals:         0       0       0       0
  1418 ;;      Temps:          0       0       0       0
  1419 ;;      Totals:         0       0       0       0
  1420 ;;Total ram usage:        0 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    4
  1423 ;; This function calls:
  1424 ;;		_CANInitialize
  1425 ;;		_SetOutputEPWM1
  1426 ;;		_delay_ms
  1427 ;; This function is called by:
  1428 ;;		_main
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           	psect	text1
  1433  002410                     __ptext1:
  1434                           	opt stack 0
  1435  002410                     _configurazione_iniziale:
  1436                           	opt stack 26
  1437                           
  1438                           ;motore.c: 332: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1439                           
  1440                           ;incstack = 0
  1441  002410  0E06               	movlw	6
  1442  002412  0100               	movlb	0	; () banked
  1443  002414  6FC9               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1444  002416  0E05               	movlw	5
  1445  002418  0100               	movlb	0	; () banked
  1446  00241A  6FCA               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1447  00241C  0E01               	movlw	1
  1448  00241E  0100               	movlb	0	; () banked
  1449  002420  6FCB               	movwf	CANInitialize@SJW& (0+255),b
  1450  002422  0E03               	movlw	3
  1451  002424  0100               	movlb	0	; () banked
  1452  002426  6FCC               	movwf	CANInitialize@BRP& (0+255),b
  1453  002428  0E9D               	movlw	157
  1454  00242A  0100               	movlb	0	; () banked
  1455  00242C  6FCD               	movwf	CANInitialize@flags& (0+255),b
  1456  00242E  0E04               	movlw	4
  1457  002430  ECC6  F010         	call	_CANInitialize
  1458                           
  1459                           ;motore.c: 333: RCONbits.IPEN = 1;
  1460  002434  8ED0               	bsf	4048,7,c	;volatile
  1461                           
  1462                           ;motore.c: 334: INTCONbits.INT0IF = 0;
  1463  002436  92F2               	bcf	intcon,1,c	;volatile
  1464                           
  1465                           ;motore.c: 335: PIR3bits.RXB1IF = 0;
  1466  002438  92A4               	bcf	4004,1,c	;volatile
  1467                           
  1468                           ;motore.c: 336: PIR3bits.RXB0IF = 0;
  1469  00243A  90A4               	bcf	4004,0,c	;volatile
  1470                           
  1471                           ;motore.c: 338: IPR3bits.RXB1IP = 0;
  1472  00243C  92A5               	bcf	4005,1,c	;volatile
  1473                           
  1474                           ;motore.c: 339: IPR3bits.RXB0IP = 0;
  1475  00243E  90A5               	bcf	4005,0,c	;volatile
  1476                           
  1477                           ;motore.c: 340: INTCONbits.GIEH = 1;
  1478  002440  8EF2               	bsf	intcon,7,c	;volatile
  1479                           
  1480                           ;motore.c: 341: INTCONbits.GIEL = 1;
  1481  002442  8CF2               	bsf	intcon,6,c	;volatile
  1482                           
  1483                           ;motore.c: 344: T3CON = 0x01;
  1484  002444  0E01               	movlw	1
  1485  002446  6EB1               	movwf	4017,c	;volatile
  1486                           
  1487                           ;motore.c: 345: PIR2bits.TMR3IF = 0;
  1488  002448  92A1               	bcf	4001,1,c	;volatile
  1489                           
  1490                           ;motore.c: 346: IPR2bits.TMR3IP = 0;
  1491  00244A  92A2               	bcf	4002,1,c	;volatile
  1492                           
  1493                           ;motore.c: 347: TMR3H = 0x63;
  1494  00244C  0E63               	movlw	99
  1495  00244E  6EB3               	movwf	4019,c	;volatile
  1496                           
  1497                           ;motore.c: 348: TMR3L = 0xC0;
  1498  002450  0EC0               	movlw	192
  1499  002452  6EB2               	movwf	4018,c	;volatile
  1500                           
  1501                           ;motore.c: 353: ADCON0bits.ADON = 1;
  1502  002454  80C2               	bsf	4034,0,c	;volatile
  1503                           
  1504                           ;motore.c: 354: ADCON0bits.CHS0 = 0;
  1505  002456  94C2               	bcf	4034,2,c	;volatile
  1506                           
  1507                           ;motore.c: 355: ADCON0bits.CHS1 = 0;
  1508  002458  96C2               	bcf	4034,3,c	;volatile
  1509                           
  1510                           ;motore.c: 356: ADCON0bits.CHS2 = 0;
  1511  00245A  98C2               	bcf	4034,4,c	;volatile
  1512                           
  1513                           ;motore.c: 357: ADCON0bits.CHS3 = 0;
  1514  00245C  9AC2               	bcf	4034,5,c	;volatile
  1515                           
  1516                           ;motore.c: 358: ADCON1bits.PCFG0 = 0;
  1517  00245E  90C1               	bcf	4033,0,c	;volatile
  1518                           
  1519                           ;motore.c: 359: ADCON1bits.PCFG1 = 1;
  1520  002460  82C1               	bsf	4033,1,c	;volatile
  1521                           
  1522                           ;motore.c: 360: ADCON1bits.PCFG2 = 1;
  1523  002462  84C1               	bsf	4033,2,c	;volatile
  1524                           
  1525                           ;motore.c: 361: ADCON1bits.PCFG3 = 1;
  1526  002464  86C1               	bsf	4033,3,c	;volatile
  1527                           
  1528                           ;motore.c: 362: ADCON1bits.VCFG0 = 0;
  1529  002466  98C1               	bcf	4033,4,c	;volatile
  1530                           
  1531                           ;motore.c: 363: ADCON1bits.VCFG1 = 0;
  1532  002468  9AC1               	bcf	4033,5,c	;volatile
  1533                           
  1534                           ;motore.c: 364: ADCON2bits.ADCS0 = 1;
  1535  00246A  80C0               	bsf	4032,0,c	;volatile
  1536                           
  1537                           ;motore.c: 365: ADCON2bits.ADCS1 = 0;
  1538  00246C  92C0               	bcf	4032,1,c	;volatile
  1539                           
  1540                           ;motore.c: 366: ADCON2bits.ADCS2 = 1;
  1541  00246E  84C0               	bsf	4032,2,c	;volatile
  1542                           
  1543                           ;motore.c: 367: ADCON2bits.ACQT0 = 0;
  1544  002470  96C0               	bcf	4032,3,c	;volatile
  1545                           
  1546                           ;motore.c: 368: ADCON2bits.ACQT1 = 1;
  1547  002472  88C0               	bsf	4032,4,c	;volatile
  1548                           
  1549                           ;motore.c: 369: ADCON2bits.ACQT2 = 1;
  1550  002474  8AC0               	bsf	4032,5,c	;volatile
  1551                           
  1552                           ;motore.c: 370: ADCON2bits.ADFM = 0;
  1553  002476  9EC0               	bcf	4032,7,c	;volatile
  1554                           
  1555                           ;motore.c: 373: PIE3bits.RXB1IE = 1;
  1556  002478  82A3               	bsf	4003,1,c	;volatile
  1557                           
  1558                           ;motore.c: 374: PIE3bits.RXB0IE = 1;
  1559  00247A  80A3               	bsf	4003,0,c	;volatile
  1560                           
  1561                           ;motore.c: 375: PIE2bits.TMR3IE = 1;
  1562  00247C  82A0               	bsf	4000,1,c	;volatile
  1563                           
  1564                           ;motore.c: 377: LATA = 0x00;
  1565  00247E  0E00               	movlw	0
  1566  002480  6E89               	movwf	3977,c	;volatile
  1567                           
  1568                           ;motore.c: 378: TRISA = 0b01111101;
  1569  002482  0E7D               	movlw	125
  1570  002484  6E92               	movwf	3986,c	;volatile
  1571                           
  1572                           ;motore.c: 380: LATB = 0x00;
  1573  002486  0E00               	movlw	0
  1574  002488  6E8A               	movwf	3978,c	;volatile
  1575                           
  1576                           ;motore.c: 381: TRISB = 0b11111011;
  1577  00248A  0EFB               	movlw	251
  1578  00248C  6E93               	movwf	3987,c	;volatile
  1579                           
  1580                           ;motore.c: 383: LATC = 0x00;
  1581  00248E  0E00               	movlw	0
  1582  002490  6E8B               	movwf	3979,c	;volatile
  1583                           
  1584                           ;motore.c: 384: TRISC = 0x00;
  1585  002492  0E00               	movlw	0
  1586  002494  6E94               	movwf	3988,c	;volatile
  1587                           
  1588                           ;motore.c: 386: LATD = 0x00;
  1589  002496  0E00               	movlw	0
  1590  002498  6E8C               	movwf	3980,c	;volatile
  1591                           
  1592                           ;motore.c: 387: TRISD = 0x00;
  1593  00249A  0E00               	movlw	0
  1594  00249C  6E95               	movwf	3989,c	;volatile
  1595                           
  1596                           ;motore.c: 389: LATE = 0x00;
  1597  00249E  0E00               	movlw	0
  1598  0024A0  6E8D               	movwf	3981,c	;volatile
  1599                           
  1600                           ;motore.c: 390: TRISE = 0xFF;
  1601  0024A2  6896               	setf	3990,c	;volatile
  1602                           
  1603                           ;motore.c: 391: delay_ms(2);
  1604  0024A4  0E00               	movlw	0
  1605  0024A6  0100               	movlb	0	; () banked
  1606  0024A8  6FC9               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1607  0024AA  0E02               	movlw	2
  1608  0024AC  6FC8               	movwf	delay_ms@value_ms& (0+255),b
  1609  0024AE  EC99  F013         	call	_delay_ms	;wreg free
  1610                           
  1611                           ;motore.c: 392: SetOutputEPWM1(0b01111111, 0b11111100);
  1612  0024B2  0EFC               	movlw	252
  1613  0024B4  0100               	movlb	0	; () banked
  1614  0024B6  6FBB               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  1615  0024B8  0E7F               	movlw	127
  1616  0024BA  ECEC  F012         	call	_SetOutputEPWM1
  1617  0024BE  0012               	return		;funcret
  1618  0024C0                     __end_of_configurazione_iniziale:
  1619                           	opt stack 0
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           intcon	equ	0xFF2
  1625                           postinc0	equ	0xFEE
  1626                           wreg	equ	0xFE8
  1627                           postdec1	equ	0xFE5
  1628                           fsr1l	equ	0xFE1
  1629                           status	equ	0xFD8
  1630                           
  1631 ;; *************** function _SetOutputEPWM1 *****************
  1632 ;; Defined at:
  1633 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  outputconfig    1    wreg     unsigned char 
  1636 ;;  outputmode      1    0[BANK0 ] unsigned char 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  outputconfig    1    1[BANK0 ] unsigned char 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;		None               void
  1641 ;; Registers used:
  1642 ;;		wreg, status,2, status,0
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1648 ;;      Params:         0       1       0       0
  1649 ;;      Locals:         0       1       0       0
  1650 ;;      Temps:          0       0       0       0
  1651 ;;      Totals:         0       2       0       0
  1652 ;;Total ram usage:        2 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:    2
  1655 ;; This function calls:
  1656 ;;		Nothing
  1657 ;; This function is called by:
  1658 ;;		_main
  1659 ;;		_configurazione_iniziale
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text2
  1664  0025D8                     __ptext2:
  1665                           	opt stack 0
  1666  0025D8                     _SetOutputEPWM1:
  1667                           	opt stack 27
  1668                           
  1669                           ;incstack = 0
  1670                           ;SetOutputEPWM1@outputconfig stored from wreg
  1671  0025D8  0100               	movlb	0	; () banked
  1672  0025DA  6FBC               	movwf	SetOutputEPWM1@outputconfig& (0+255),b
  1673  0025DC  50BA               	movf	4026,w,c	;volatile
  1674  0025DE  09C0               	iorlw	192
  1675  0025E0  0100               	movlb	0	; () banked
  1676  0025E2  15BC               	andwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  1677  0025E4  6EBA               	movwf	4026,c	;volatile
  1678  0025E6  50BA               	movf	4026,w,c	;volatile
  1679  0025E8  090F               	iorlw	15
  1680  0025EA  0100               	movlb	0	; () banked
  1681  0025EC  15BB               	andwf	SetOutputEPWM1@outputmode& (0+255),w,b
  1682  0025EE  6EBA               	movwf	4026,c	;volatile
  1683  0025F0  0E3F               	movlw	63
  1684  0025F2  0100               	movlb	0	; () banked
  1685  0025F4  19BC               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  1686  0025F6  A4D8               	btfss	status,2,c
  1687  0025F8  D002               	goto	l4720
  1688                           
  1689                           ; BSR set to: 0
  1690  0025FA  9895               	bcf	3989,4,c	;volatile
  1691  0025FC  0012               	return	
  1692  0025FE                     l4720:
  1693                           
  1694                           ; BSR set to: 0
  1695  0025FE  0EBF               	movlw	191
  1696  002600  0100               	movlb	0	; () banked
  1697  002602  19BC               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  1698  002604  A4D8               	btfss	status,2,c
  1699  002606  D003               	goto	l4724
  1700                           
  1701                           ; BSR set to: 0
  1702  002608  9895               	bcf	3989,4,c	;volatile
  1703  00260A  9A95               	bcf	3989,5,c	;volatile
  1704  00260C  0012               	return	
  1705  00260E                     l4724:
  1706                           
  1707                           ; BSR set to: 0
  1708  00260E  0E7F               	movlw	127
  1709  002610  0100               	movlb	0	; () banked
  1710  002612  19BC               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  1711  002614  B4D8               	btfsc	status,2,c
  1712  002616  D004               	goto	l748
  1713                           
  1714                           ; BSR set to: 0
  1715  002618  0100               	movlb	0	; () banked
  1716  00261A  29BC               	incf	SetOutputEPWM1@outputconfig& (0+255),w,b
  1717  00261C  A4D8               	btfss	status,2,c
  1718  00261E  0012               	return	
  1719  002620                     l748:
  1720                           
  1721                           ; BSR set to: 0
  1722  002620  9895               	bcf	3989,4,c	;volatile
  1723  002622  9A95               	bcf	3989,5,c	;volatile
  1724  002624  9C95               	bcf	3989,6,c	;volatile
  1725  002626  9E95               	bcf	3989,7,c	;volatile
  1726                           
  1727                           ; BSR set to: 0
  1728                           
  1729                           ; BSR set to: 0
  1730  002628  0012               	return	
  1731  00262A                     __end_of_SetOutputEPWM1:
  1732                           	opt stack 0
  1733                           tblptru	equ	0xFF8
  1734                           tblptrh	equ	0xFF7
  1735                           tblptrl	equ	0xFF6
  1736                           tablat	equ	0xFF5
  1737                           intcon	equ	0xFF2
  1738                           postinc0	equ	0xFEE
  1739                           wreg	equ	0xFE8
  1740                           postdec1	equ	0xFE5
  1741                           fsr1l	equ	0xFE1
  1742                           status	equ	0xFD8
  1743                           
  1744 ;; *************** function _CANInitialize *****************
  1745 ;; Defined at:
  1746 ;;		line 218 in file "CANlib.h"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  propSeg         1    wreg     unsigned char 
  1749 ;;  phaseSeg1       1   14[BANK0 ] unsigned char 
  1750 ;;  phaseSeg2       1   15[BANK0 ] unsigned char 
  1751 ;;  SJW             1   16[BANK0 ] unsigned char 
  1752 ;;  BRP             1   17[BANK0 ] unsigned char 
  1753 ;;  flags           1   18[BANK0 ] enum E16844
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  propSeg         1   23[BANK0 ] unsigned char 
  1756 ;;  FilterConfig    1   25[BANK0 ] unsigned char 
  1757 ;;  FilterConfig    1   24[BANK0 ] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;		None               void
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1767 ;;      Params:         0       5       0       0
  1768 ;;      Locals:         0       3       0       0
  1769 ;;      Temps:          0       4       0       0
  1770 ;;      Totals:         0      12       0       0
  1771 ;;Total ram usage:       12 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    3
  1774 ;; This function calls:
  1775 ;;		_CANOperationMode
  1776 ;;		_CANSetFilter
  1777 ;;		_CANSetMask
  1778 ;; This function is called by:
  1779 ;;		_configurazione_iniziale
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text3
  1784  00218C                     __ptext3:
  1785                           	opt stack 0
  1786  00218C                     _CANInitialize:
  1787                           	opt stack 26
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;incstack = 0
  1791                           ;CANInitialize@propSeg stored from wreg
  1792  00218C  0100               	movlb	0	; () banked
  1793  00218E  6FD2               	movwf	CANInitialize@propSeg& (0+255),b
  1794                           
  1795                           ;CANlib.h: 220: BYTE FilterConfig1;
  1796                           ;CANlib.h: 221: BYTE FilterConfig2;
  1797                           ;CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  1798  002190  0E80               	movlw	128
  1799  002192  ECEC  F013         	call	_CANOperationMode
  1800                           
  1801                           ;CANlib.h: 225: BRGCON1 = 0x00;
  1802  002196  0E00               	movlw	0
  1803  002198  6E70               	movwf	3952,c	;volatile
  1804                           
  1805                           ;CANlib.h: 226: BRGCON2 = 0x00;
  1806  00219A  0E00               	movlw	0
  1807  00219C  6E71               	movwf	3953,c	;volatile
  1808                           
  1809                           ;CANlib.h: 227: BRGCON3 = 0x00;
  1810  00219E  0E00               	movlw	0
  1811  0021A0  6E72               	movwf	3954,c	;volatile
  1812                           
  1813                           ;CANlib.h: 229: SJW= SJW << 6;
  1814  0021A2  0100               	movlb	0	; () banked
  1815  0021A4  41CB               	rrncf	CANInitialize@SJW& (0+255),w,b
  1816  0021A6  42E8               	rrncf	wreg,f,c
  1817  0021A8  0BC0               	andlw	192
  1818  0021AA  0100               	movlb	0	; () banked
  1819  0021AC  6FCB               	movwf	CANInitialize@SJW& (0+255),b
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;CANlib.h: 230: BRGCON1 |= SJW;
  1823  0021AE  0100               	movlb	0	; () banked
  1824  0021B0  51CB               	movf	CANInitialize@SJW& (0+255),w,b
  1825  0021B2  1270               	iorwf	3952,f,c	;volatile
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;CANlib.h: 231: BRGCON1 |= BRP;
  1829  0021B4  0100               	movlb	0	; () banked
  1830  0021B6  51CC               	movf	CANInitialize@BRP& (0+255),w,b
  1831  0021B8  1270               	iorwf	3952,f,c	;volatile
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;CANlib.h: 233: BRGCON2 |= propSeg;
  1835  0021BA  0100               	movlb	0	; () banked
  1836  0021BC  51D2               	movf	CANInitialize@propSeg& (0+255),w,b
  1837  0021BE  1271               	iorwf	3953,f,c	;volatile
  1838                           
  1839                           ; BSR set to: 0
  1840                           ;CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  1841  0021C0  0100               	movlb	0	; () banked
  1842  0021C2  39C9               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  1843  0021C4  42E8               	rrncf	wreg,f,c
  1844  0021C6  0BF8               	andlw	248
  1845  0021C8  0100               	movlb	0	; () banked
  1846  0021CA  6FC9               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;CANlib.h: 235: BRGCON2 |= phaseSeg1;
  1850  0021CC  0100               	movlb	0	; () banked
  1851  0021CE  51C9               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  1852  0021D0  1271               	iorwf	3953,f,c	;volatile
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  1856  0021D2  0100               	movlb	0	; () banked
  1857  0021D4  A5CD               	btfss	CANInitialize@flags& (0+255),2,b
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;CANlib.h: 238: BRGCON2bits.SAM= 1;
  1861  0021D6  8C71               	bsf	3953,6,c	;volatile
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  1865  0021D8  0100               	movlb	0	; () banked
  1866  0021DA  B1CD               	btfsc	CANInitialize@flags& (0+255),0,b
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  1870  0021DC  8E71               	bsf	3953,7,c	;volatile
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;CANlib.h: 243: BRGCON3 |= phaseSeg2;
  1874                           
  1875                           ; BSR set to: 0
  1876  0021DE  0100               	movlb	0	; () banked
  1877  0021E0  51CA               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  1878  0021E2  1272               	iorwf	3954,f,c	;volatile
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  1882  0021E4  0100               	movlb	0	; () banked
  1883  0021E6  B3CD               	btfsc	CANInitialize@flags& (0+255),1,b
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  1887  0021E8  8C72               	bsf	3954,6,c	;volatile
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  1891                           
  1892                           ; BSR set to: 0
  1893  0021EA  0100               	movlb	0	; () banked
  1894  0021EC  51CD               	movf	CANInitialize@flags& (0+255),w,b
  1895  0021EE  0B60               	andlw	96
  1896  0021F0  6E60               	movwf	3936,c	;volatile
  1897                           
  1898                           ;CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON )
  1899  0021F2  0100               	movlb	0	; () banked
  1900  0021F4  51CD               	movf	CANInitialize@flags& (0+255),w,b
  1901  0021F6  0B10               	andlw	16
  1902  0021F8  0AFF               	xorlw	255
  1903  0021FA  B4D8               	btfsc	status,2,c
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  1907  0021FC  8460               	bsf	3936,2,c	;volatile
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;CANlib.h: 255: RXB1CON = RXB0CON;
  1911  0021FE  CF60 FF50          	movff	3936,3920	;volatile
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  1915  002202  0E00               	movlw	0
  1916  002204  0100               	movlb	0	; () banked
  1917  002206  6FBB               	movwf	CANSetMask@mask& (0+255),b
  1918  002208  0E00               	movlw	0
  1919  00220A  6FBC               	movwf	(CANSetMask@mask+1)& (0+255),b
  1920  00220C  0E00               	movlw	0
  1921  00220E  6FBD               	movwf	(CANSetMask@mask+2)& (0+255),b
  1922  002210  0E00               	movlw	0
  1923  002212  6FBE               	movwf	(CANSetMask@mask+3)& (0+255),b
  1924  002214  0EF7               	movlw	247
  1925  002216  0100               	movlb	0	; () banked
  1926  002218  6FBF               	movwf	CANSetMask@type& (0+255),b
  1927  00221A  0E01               	movlw	1
  1928  00221C  ECF7  F00E         	call	_CANSetMask
  1929                           
  1930                           ;CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  1931  002220  0E00               	movlw	0
  1932  002222  0100               	movlb	0	; () banked
  1933  002224  6FBB               	movwf	CANSetMask@mask& (0+255),b
  1934  002226  0E00               	movlw	0
  1935  002228  6FBC               	movwf	(CANSetMask@mask+1)& (0+255),b
  1936  00222A  0E00               	movlw	0
  1937  00222C  6FBD               	movwf	(CANSetMask@mask+2)& (0+255),b
  1938  00222E  0E00               	movlw	0
  1939  002230  6FBE               	movwf	(CANSetMask@mask+3)& (0+255),b
  1940  002232  0EF7               	movlw	247
  1941  002234  0100               	movlb	0	; () banked
  1942  002236  6FBF               	movwf	CANSetMask@type& (0+255),b
  1943  002238  0E02               	movlw	2
  1944  00223A  ECF7  F00E         	call	_CANSetMask
  1945                           
  1946                           ;CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  1947  00223E  D00F               	goto	l4460
  1948  002240                     l4454:
  1949                           
  1950                           ;CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  1951  002240  0EF7               	movlw	247
  1952  002242  0100               	movlb	0	; () banked
  1953  002244  6FD3               	movwf	CANInitialize@FilterConfig1& (0+255),b
  1954  002246  D007               	goto	l4456
  1955  002248                     l356:
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  1959  002248  0100               	movlb	0	; () banked
  1960  00224A  69D3               	setf	CANInitialize@FilterConfig1& (0+255),b
  1961                           
  1962                           ;CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  1963  00224C  0100               	movlb	0	; () banked
  1964  00224E  69D4               	setf	CANInitialize@FilterConfig2& (0+255),b
  1965                           
  1966                           ;CANlib.h: 273: break;
  1967  002250  D028               	goto	l4462
  1968  002252                     l357:
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  1972  002252  0100               	movlb	0	; () banked
  1973  002254  69D3               	setf	CANInitialize@FilterConfig1& (0+255),b
  1974  002256                     l4456:
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  1978  002256  0EF7               	movlw	247
  1979  002258  0100               	movlb	0	; () banked
  1980  00225A  6FD4               	movwf	CANInitialize@FilterConfig2& (0+255),b
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;CANlib.h: 278: }
  1984                           
  1985                           ;CANlib.h: 277: break;
  1986  00225C  D022               	goto	l4462
  1987  00225E                     l4460:
  1988  00225E  0E9F               	movlw	159
  1989  002260  0100               	movlb	0	; () banked
  1990  002262  6FCE               	movwf	??_CANInitialize& (0+255),b
  1991  002264  0EFF               	movlw	255
  1992  002266  0100               	movlb	0	; () banked
  1993  002268  6FCF               	movwf	(??_CANInitialize+1)& (0+255),b
  1994  00226A  0100               	movlb	0	; () banked
  1995  00226C  51CD               	movf	CANInitialize@flags& (0+255),w,b
  1996  00226E  0B60               	andlw	96
  1997  002270  0100               	movlb	0	; () banked
  1998  002272  6FD0               	movwf	(??_CANInitialize+2)& (0+255),b
  1999  002274  6BD1               	clrf	(??_CANInitialize+3)& (0+255),b
  2000  002276  0100               	movlb	0	; () banked
  2001  002278  51CE               	movf	??_CANInitialize& (0+255),w,b
  2002  00227A  0100               	movlb	0	; () banked
  2003  00227C  13D0               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2004  00227E  0100               	movlb	0	; () banked
  2005  002280  51CF               	movf	(??_CANInitialize+1)& (0+255),w,b
  2006  002282  0100               	movlb	0	; () banked
  2007  002284  13D1               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2008                           
  2009                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2010                           ; Switch size 1, requested type "space"
  2011                           ; Number of cases is 1, Range of values is 0 to 0
  2012                           ; switch strategies available:
  2013                           ; Name         Instructions Cycles
  2014                           ; simple_byte            4     3 (average)
  2015                           ;	Chosen strategy is simple_byte
  2016  002286  0100               	movlb	0	; () banked
  2017  002288  51D1               	movf	(??_CANInitialize+3)& (0+255),w,b
  2018  00228A  0A00               	xorlw	0	; case 0
  2019  00228C  A4D8               	btfss	status,2,c
  2020  00228E  D7E1               	goto	l357
  2021                           
  2022                           ; BSR set to: 0
  2023                           ; Switch size 1, requested type "space"
  2024                           ; Number of cases is 2, Range of values is 191 to 223
  2025                           ; switch strategies available:
  2026                           ; Name         Instructions Cycles
  2027                           ; simple_byte            7     4 (average)
  2028                           ;	Chosen strategy is simple_byte
  2029  002290  0100               	movlb	0	; () banked
  2030  002292  51D0               	movf	(??_CANInitialize+2)& (0+255),w,b
  2031  002294  0ABF               	xorlw	191	; case 191
  2032  002296  B4D8               	btfsc	status,2,c
  2033  002298  D7D7               	goto	l356
  2034  00229A  0A60               	xorlw	96	; case 223
  2035  00229C  B4D8               	btfsc	status,2,c
  2036  00229E  D7D0               	goto	l4454
  2037  0022A0  D7D8               	goto	l357
  2038  0022A2                     l4462:
  2039                           
  2040                           ; BSR set to: 0
  2041                           ;CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2042  0022A2  0E00               	movlw	0
  2043  0022A4  0100               	movlb	0	; () banked
  2044  0022A6  6FBB               	movwf	CANSetFilter@filter& (0+255),b
  2045  0022A8  0E00               	movlw	0
  2046  0022AA  6FBC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2047  0022AC  0E00               	movlw	0
  2048  0022AE  6FBD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2049  0022B0  0E00               	movlw	0
  2050  0022B2  6FBE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2051  0022B4  C0D3  F0BF         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2052  0022B8  0E00               	movlw	0
  2053  0022BA  ECF7  F000         	call	_CANSetFilter
  2054                           
  2055                           ;CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2056  0022BE  0E00               	movlw	0
  2057  0022C0  0100               	movlb	0	; () banked
  2058  0022C2  6FBB               	movwf	CANSetFilter@filter& (0+255),b
  2059  0022C4  0E00               	movlw	0
  2060  0022C6  6FBC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2061  0022C8  0E00               	movlw	0
  2062  0022CA  6FBD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2063  0022CC  0E00               	movlw	0
  2064  0022CE  6FBE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2065  0022D0  C0D3  F0BF         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2066  0022D4  0E01               	movlw	1
  2067  0022D6  ECF7  F000         	call	_CANSetFilter
  2068                           
  2069                           ;CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2070  0022DA  0E00               	movlw	0
  2071  0022DC  0100               	movlb	0	; () banked
  2072  0022DE  6FBB               	movwf	CANSetFilter@filter& (0+255),b
  2073  0022E0  0E00               	movlw	0
  2074  0022E2  6FBC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2075  0022E4  0E00               	movlw	0
  2076  0022E6  6FBD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2077  0022E8  0E00               	movlw	0
  2078  0022EA  6FBE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2079  0022EC  C0D4  F0BF         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2080  0022F0  0E02               	movlw	2
  2081  0022F2  ECF7  F000         	call	_CANSetFilter
  2082                           
  2083                           ;CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2084  0022F6  0E00               	movlw	0
  2085  0022F8  0100               	movlb	0	; () banked
  2086  0022FA  6FBB               	movwf	CANSetFilter@filter& (0+255),b
  2087  0022FC  0E00               	movlw	0
  2088  0022FE  6FBC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2089  002300  0E00               	movlw	0
  2090  002302  6FBD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2091  002304  0E00               	movlw	0
  2092  002306  6FBE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2093  002308  C0D4  F0BF         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2094  00230C  0E03               	movlw	3
  2095  00230E  ECF7  F000         	call	_CANSetFilter
  2096                           
  2097                           ;CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2098  002312  0E00               	movlw	0
  2099  002314  0100               	movlb	0	; () banked
  2100  002316  6FBB               	movwf	CANSetFilter@filter& (0+255),b
  2101  002318  0E00               	movlw	0
  2102  00231A  6FBC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2103  00231C  0E00               	movlw	0
  2104  00231E  6FBD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2105  002320  0E00               	movlw	0
  2106  002322  6FBE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2107  002324  C0D4  F0BF         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2108  002328  0E04               	movlw	4
  2109  00232A  ECF7  F000         	call	_CANSetFilter
  2110                           
  2111                           ;CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2112  00232E  0E00               	movlw	0
  2113  002330  0100               	movlb	0	; () banked
  2114  002332  6FBB               	movwf	CANSetFilter@filter& (0+255),b
  2115  002334  0E00               	movlw	0
  2116  002336  6FBC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2117  002338  0E00               	movlw	0
  2118  00233A  6FBD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2119  00233C  0E00               	movlw	0
  2120  00233E  6FBE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2121  002340  C0D4  F0BF         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2122  002344  0E05               	movlw	5
  2123  002346  ECF7  F000         	call	_CANSetFilter
  2124                           
  2125                           ;CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2126  00234A  0E00               	movlw	0
  2127  00234C  ECEC  F013         	call	_CANOperationMode
  2128  002350  0012               	return		;funcret
  2129  002352                     __end_of_CANInitialize:
  2130                           	opt stack 0
  2131                           tblptru	equ	0xFF8
  2132                           tblptrh	equ	0xFF7
  2133                           tblptrl	equ	0xFF6
  2134                           tablat	equ	0xFF5
  2135                           intcon	equ	0xFF2
  2136                           postinc0	equ	0xFEE
  2137                           wreg	equ	0xFE8
  2138                           postdec1	equ	0xFE5
  2139                           fsr1l	equ	0xFE1
  2140                           status	equ	0xFD8
  2141                           
  2142 ;; *************** function _CANSetMask *****************
  2143 ;; Defined at:
  2144 ;;		line 640 in file "CANlib.h"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  numBuffer       1    wreg     enum E16878
  2147 ;;  mask            4    0[BANK0 ] unsigned long 
  2148 ;;  type            1    4[BANK0 ] enum E16844
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  numBuffer       1    9[BANK0 ] enum E16878
  2151 ;;  tamp            4   10[BANK0 ] unsigned long 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;		None               void
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2161 ;;      Params:         0       5       0       0
  2162 ;;      Locals:         0       5       0       0
  2163 ;;      Temps:          0       4       0       0
  2164 ;;      Totals:         0      14       0       0
  2165 ;;Total ram usage:       14 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    2
  2168 ;; This function calls:
  2169 ;;		Nothing
  2170 ;; This function is called by:
  2171 ;;		_CANInitialize
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           	psect	text4
  2176  001DEE                     __ptext4:
  2177                           	opt stack 0
  2178  001DEE                     _CANSetMask:
  2179                           	opt stack 26
  2180                           
  2181                           ;incstack = 0
  2182                           ;CANSetMask@numBuffer stored from wreg
  2183  001DEE  0100               	movlb	0	; () banked
  2184  001DF0  6FC4               	movwf	CANSetMask@numBuffer& (0+255),b
  2185                           
  2186                           ;CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2187  001DF2  0100               	movlb	0	; () banked
  2188  001DF4  05C4               	decf	CANSetMask@numBuffer& (0+255),w,b
  2189  001DF6  A4D8               	btfss	status,2,c
  2190  001DF8  D056               	goto	l4018
  2191                           
  2192                           ; BSR set to: 0
  2193  001DFA  0100               	movlb	0	; () banked
  2194  001DFC  29BF               	incf	CANSetMask@type& (0+255),w,b
  2195  001DFE  A4D8               	btfss	status,2,c
  2196  001E00  D052               	goto	l4018
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;CANlib.h: 644: {
  2200                           ;CANlib.h: 645: tamp = (mask >> 3);
  2201  001E02  C0BB  F0C0         	movff	CANSetMask@mask,??_CANSetMask
  2202  001E06  C0BC  F0C1         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2203  001E0A  C0BD  F0C2         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2204  001E0E  C0BE  F0C3         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2205  001E12  0E04               	movlw	4
  2206  001E14  D006               	goto	u4580
  2207  001E16                     u4585:
  2208  001E16  0100               	movlb	0	; () banked
  2209  001E18  90D8               	bcf	status,0,c
  2210  001E1A  33C3               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2211  001E1C  33C2               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2212  001E1E  33C1               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2213  001E20  33C0               	rrcf	??_CANSetMask& (0+255),f,b
  2214  001E22                     u4580:
  2215  001E22  2EE8               	decfsz	wreg,f,c
  2216  001E24  D7F8               	goto	u4585
  2217  001E26  C0C0  F0C5         	movff	??_CANSetMask,CANSetMask@tamp
  2218  001E2A  C0C1  F0C6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2219  001E2E  C0C2  F0C7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2220  001E32  C0C3  F0C8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2221                           
  2222                           ; BSR set to: 0
  2223                           ;CANlib.h: 646: tamp = tamp & 0x000000FF;
  2224  001E36  0100               	movlb	0	; () banked
  2225  001E38  51C5               	movf	CANSetMask@tamp& (0+255),w,b
  2226  001E3A  0100               	movlb	0	; () banked
  2227  001E3C  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2228  001E3E  6BC6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2229  001E40  6BC7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2230  001E42  6BC8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2231                           
  2232                           ; BSR set to: 0
  2233                           ;CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  2234  001E44  C0C5  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;CANlib.h: 649: tamp = mask & 0x00000007;
  2238  001E48  0E07               	movlw	7
  2239  001E4A  0100               	movlb	0	; () banked
  2240  001E4C  15BB               	andwf	CANSetMask@mask& (0+255),w,b
  2241  001E4E  0100               	movlb	0	; () banked
  2242  001E50  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2243  001E52  0E00               	movlw	0
  2244  001E54  0100               	movlb	0	; () banked
  2245  001E56  15BC               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2246  001E58  0100               	movlb	0	; () banked
  2247  001E5A  6FC6               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2248  001E5C  0E00               	movlw	0
  2249  001E5E  0100               	movlb	0	; () banked
  2250  001E60  15BD               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2251  001E62  0100               	movlb	0	; () banked
  2252  001E64  6FC7               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2253  001E66  0E00               	movlw	0
  2254  001E68  0100               	movlb	0	; () banked
  2255  001E6A  15BE               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2256  001E6C  0100               	movlb	0	; () banked
  2257  001E6E  6FC8               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;CANlib.h: 650: tamp = tamp << 5;
  2261  001E70  C0C5  F0C0         	movff	CANSetMask@tamp,??_CANSetMask
  2262  001E74  C0C6  F0C1         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2263  001E78  C0C7  F0C2         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2264  001E7C  C0C8  F0C3         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2265  001E80  0E05               	movlw	5
  2266  001E82                     u4595:
  2267  001E82  90D8               	bcf	status,0,c
  2268  001E84  0100               	movlb	0	; () banked
  2269  001E86  37C0               	rlcf	??_CANSetMask& (0+255),f,b
  2270  001E88  37C1               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2271  001E8A  37C2               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2272  001E8C  37C3               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2273  001E8E  2EE8               	decfsz	wreg,f,c
  2274  001E90  D7F8               	goto	u4595
  2275  001E92  C0C0  F0C5         	movff	??_CANSetMask,CANSetMask@tamp
  2276  001E96  C0C1  F0C6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2277  001E9A  C0C2  F0C7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2278  001E9E  C0C3  F0C8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  2282  001EA2  C0C5  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2283  001EA6                     l4018:
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;CANlib.h: 652: }
  2287                           ;CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2288  001EA6  0E02               	movlw	2
  2289  001EA8  0100               	movlb	0	; () banked
  2290  001EAA  19C4               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2291  001EAC  A4D8               	btfss	status,2,c
  2292  001EAE  D056               	goto	l4034
  2293                           
  2294                           ; BSR set to: 0
  2295  001EB0  0100               	movlb	0	; () banked
  2296  001EB2  29BF               	incf	CANSetMask@type& (0+255),w,b
  2297  001EB4  A4D8               	btfss	status,2,c
  2298  001EB6  D052               	goto	l4034
  2299                           
  2300                           ; BSR set to: 0
  2301                           ;CANlib.h: 655: {
  2302                           ;CANlib.h: 656: tamp = (mask >> 3);
  2303  001EB8  C0BB  F0C0         	movff	CANSetMask@mask,??_CANSetMask
  2304  001EBC  C0BC  F0C1         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2305  001EC0  C0BD  F0C2         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2306  001EC4  C0BE  F0C3         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2307  001EC8  0E04               	movlw	4
  2308  001ECA  D006               	goto	u4620
  2309  001ECC                     u4625:
  2310  001ECC  0100               	movlb	0	; () banked
  2311  001ECE  90D8               	bcf	status,0,c
  2312  001ED0  33C3               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2313  001ED2  33C2               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2314  001ED4  33C1               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2315  001ED6  33C0               	rrcf	??_CANSetMask& (0+255),f,b
  2316  001ED8                     u4620:
  2317  001ED8  2EE8               	decfsz	wreg,f,c
  2318  001EDA  D7F8               	goto	u4625
  2319  001EDC  C0C0  F0C5         	movff	??_CANSetMask,CANSetMask@tamp
  2320  001EE0  C0C1  F0C6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2321  001EE4  C0C2  F0C7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2322  001EE8  C0C3  F0C8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;CANlib.h: 657: tamp = tamp & 0x000000FF;
  2326  001EEC  0100               	movlb	0	; () banked
  2327  001EEE  51C5               	movf	CANSetMask@tamp& (0+255),w,b
  2328  001EF0  0100               	movlb	0	; () banked
  2329  001EF2  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2330  001EF4  6BC6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2331  001EF6  6BC7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2332  001EF8  6BC8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  2336  001EFA  C0C5  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;CANlib.h: 660: tamp = mask & 0x00000007;
  2340  001EFE  0E07               	movlw	7
  2341  001F00  0100               	movlb	0	; () banked
  2342  001F02  15BB               	andwf	CANSetMask@mask& (0+255),w,b
  2343  001F04  0100               	movlb	0	; () banked
  2344  001F06  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2345  001F08  0E00               	movlw	0
  2346  001F0A  0100               	movlb	0	; () banked
  2347  001F0C  15BC               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2348  001F0E  0100               	movlb	0	; () banked
  2349  001F10  6FC6               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2350  001F12  0E00               	movlw	0
  2351  001F14  0100               	movlb	0	; () banked
  2352  001F16  15BD               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2353  001F18  0100               	movlb	0	; () banked
  2354  001F1A  6FC7               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2355  001F1C  0E00               	movlw	0
  2356  001F1E  0100               	movlb	0	; () banked
  2357  001F20  15BE               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2358  001F22  0100               	movlb	0	; () banked
  2359  001F24  6FC8               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;CANlib.h: 661: tamp = tamp << 5;
  2363  001F26  C0C5  F0C0         	movff	CANSetMask@tamp,??_CANSetMask
  2364  001F2A  C0C6  F0C1         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2365  001F2E  C0C7  F0C2         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2366  001F32  C0C8  F0C3         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2367  001F36  0E05               	movlw	5
  2368  001F38                     u4635:
  2369  001F38  90D8               	bcf	status,0,c
  2370  001F3A  0100               	movlb	0	; () banked
  2371  001F3C  37C0               	rlcf	??_CANSetMask& (0+255),f,b
  2372  001F3E  37C1               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2373  001F40  37C2               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2374  001F42  37C3               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2375  001F44  2EE8               	decfsz	wreg,f,c
  2376  001F46  D7F8               	goto	u4635
  2377  001F48  C0C0  F0C5         	movff	??_CANSetMask,CANSetMask@tamp
  2378  001F4C  C0C1  F0C6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2379  001F50  C0C2  F0C7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2380  001F54  C0C3  F0C8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  2384  001F58  C0C5  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2385  001F5C                     l4034:
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;CANlib.h: 663: }
  2389                           ;CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2390  001F5C  0100               	movlb	0	; () banked
  2391  001F5E  05C4               	decf	CANSetMask@numBuffer& (0+255),w,b
  2392  001F60  A4D8               	btfss	status,2,c
  2393  001F62  D087               	goto	l4066
  2394                           
  2395                           ; BSR set to: 0
  2396  001F64  0EF7               	movlw	247
  2397  001F66  0100               	movlb	0	; () banked
  2398  001F68  19BF               	xorwf	CANSetMask@type& (0+255),w,b
  2399  001F6A  A4D8               	btfss	status,2,c
  2400  001F6C  D082               	goto	l4066
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;CANlib.h: 666: {
  2404                           ;CANlib.h: 667: tamp = mask & 0x000000FF;
  2405  001F6E  0100               	movlb	0	; () banked
  2406  001F70  51BB               	movf	CANSetMask@mask& (0+255),w,b
  2407  001F72  0100               	movlb	0	; () banked
  2408  001F74  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2409  001F76  6BC6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2410  001F78  6BC7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2411  001F7A  6BC8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  2415  001F7C  C0C5  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;CANlib.h: 670: tamp = mask & 0x0000FF00;
  2419  001F80  0E00               	movlw	0
  2420  001F82  0100               	movlb	0	; () banked
  2421  001F84  15BB               	andwf	CANSetMask@mask& (0+255),w,b
  2422  001F86  0100               	movlb	0	; () banked
  2423  001F88  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2424  001F8A  0EFF               	movlw	255
  2425  001F8C  0100               	movlb	0	; () banked
  2426  001F8E  15BC               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2427  001F90  0100               	movlb	0	; () banked
  2428  001F92  6FC6               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2429  001F94  0E00               	movlw	0
  2430  001F96  0100               	movlb	0	; () banked
  2431  001F98  15BD               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2432  001F9A  0100               	movlb	0	; () banked
  2433  001F9C  6FC7               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2434  001F9E  0E00               	movlw	0
  2435  001FA0  0100               	movlb	0	; () banked
  2436  001FA2  15BE               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2437  001FA4  0100               	movlb	0	; () banked
  2438  001FA6  6FC8               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;CANlib.h: 671: tamp = tamp >> 8;
  2442  001FA8  C0C5  F0C0         	movff	CANSetMask@tamp,??_CANSetMask
  2443  001FAC  C0C6  F0C1         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2444  001FB0  C0C7  F0C2         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2445  001FB4  C0C8  F0C3         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2446  001FB8  C0C1  F0C0         	movff	??_CANSetMask+1,??_CANSetMask
  2447  001FBC  C0C2  F0C1         	movff	??_CANSetMask+2,??_CANSetMask+1
  2448  001FC0  C0C3  F0C2         	movff	??_CANSetMask+3,??_CANSetMask+2
  2449  001FC4  0100               	movlb	0	; () banked
  2450  001FC6  6BC3               	clrf	(??_CANSetMask+3)& (0+255),b
  2451  001FC8  C0C0  F0C5         	movff	??_CANSetMask,CANSetMask@tamp
  2452  001FCC  C0C1  F0C6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2453  001FD0  C0C2  F0C7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2454  001FD4  C0C3  F0C8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  2458  001FD8  C0C5  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;CANlib.h: 674: if (mask & 0x00010000)
  2462  001FDC  0100               	movlb	0	; () banked
  2463  001FDE  A1BD               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2464  001FE0  D003               	goto	l430
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  2468  001FE2  010F               	movlb	15	; () banked
  2469  001FE4  8119               	bsf	25,0,b	;volatile
  2470  001FE6  D002               	goto	l431
  2471  001FE8                     l430:
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;CANlib.h: 676: else
  2475                           ;CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  2476  001FE8  010F               	movlb	15	; () banked
  2477  001FEA  9119               	bcf	25,0,b	;volatile
  2478  001FEC                     l431:
  2479                           
  2480                           ; BSR set to: 15
  2481                           ;CANlib.h: 679: if (mask & 0x00020000)
  2482  001FEC  0100               	movlb	0	; () banked
  2483  001FEE  A3BD               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2484  001FF0  D003               	goto	l432
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  2488  001FF2  010F               	movlb	15	; () banked
  2489  001FF4  8319               	bsf	25,1,b	;volatile
  2490  001FF6  D002               	goto	l433
  2491  001FF8                     l432:
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;CANlib.h: 681: else
  2495                           ;CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  2496  001FF8  010F               	movlb	15	; () banked
  2497  001FFA  9319               	bcf	25,1,b	;volatile
  2498  001FFC                     l433:
  2499                           
  2500                           ; BSR set to: 15
  2501                           ;CANlib.h: 684: if (mask & 0x00040000)
  2502  001FFC  0100               	movlb	0	; () banked
  2503  001FFE  A5BD               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2504  002000  D003               	goto	l434
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  2508  002002  010F               	movlb	15	; () banked
  2509  002004  8B19               	bsf	25,5,b	;volatile
  2510  002006  D002               	goto	l435
  2511  002008                     l434:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;CANlib.h: 686: else
  2515                           ;CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  2516  002008  010F               	movlb	15	; () banked
  2517  00200A  9B19               	bcf	25,5,b	;volatile
  2518  00200C                     l435:
  2519                           
  2520                           ; BSR set to: 15
  2521                           ;CANlib.h: 689: if (mask & 0x00080000)
  2522  00200C  0100               	movlb	0	; () banked
  2523  00200E  A7BD               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2524  002010  D003               	goto	l436
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  2528  002012  010F               	movlb	15	; () banked
  2529  002014  8D19               	bsf	25,6,b	;volatile
  2530  002016  D002               	goto	l437
  2531  002018                     l436:
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;CANlib.h: 691: else
  2535                           ;CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  2536  002018  010F               	movlb	15	; () banked
  2537  00201A  9D19               	bcf	25,6,b	;volatile
  2538  00201C                     l437:
  2539                           
  2540                           ; BSR set to: 15
  2541                           ;CANlib.h: 694: if (mask & 0x00100000)
  2542  00201C  0100               	movlb	0	; () banked
  2543  00201E  A9BD               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2544  002020  D003               	goto	l438
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  2548  002022  010F               	movlb	15	; () banked
  2549  002024  8F19               	bsf	25,7,b	;volatile
  2550  002026  D002               	goto	l4060
  2551  002028                     l438:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;CANlib.h: 696: else
  2555                           ;CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  2556  002028  010F               	movlb	15	; () banked
  2557  00202A  9F19               	bcf	25,7,b	;volatile
  2558  00202C                     l4060:
  2559                           
  2560                           ; BSR set to: 15
  2561                           ;CANlib.h: 699: tamp = (mask >> 21);
  2562  00202C  C0BB  F0C0         	movff	CANSetMask@mask,??_CANSetMask
  2563  002030  C0BC  F0C1         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2564  002034  C0BD  F0C2         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2565  002038  C0BE  F0C3         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2566  00203C  0E16               	movlw	22
  2567  00203E  D006               	goto	u4710
  2568  002040                     u4715:
  2569  002040  0100               	movlb	0	; () banked
  2570  002042  90D8               	bcf	status,0,c
  2571  002044  33C3               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2572  002046  33C2               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2573  002048  33C1               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2574  00204A  33C0               	rrcf	??_CANSetMask& (0+255),f,b
  2575  00204C                     u4710:
  2576  00204C  2EE8               	decfsz	wreg,f,c
  2577  00204E  D7F8               	goto	u4715
  2578  002050  C0C0  F0C5         	movff	??_CANSetMask,CANSetMask@tamp
  2579  002054  C0C1  F0C6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2580  002058  C0C2  F0C7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2581  00205C  C0C3  F0C8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;CANlib.h: 700: tamp = tamp & 0x000000FF;
  2585  002060  0100               	movlb	0	; () banked
  2586  002062  51C5               	movf	CANSetMask@tamp& (0+255),w,b
  2587  002064  0100               	movlb	0	; () banked
  2588  002066  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2589  002068  6BC6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2590  00206A  6BC7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2591  00206C  6BC8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  2595  00206E  C0C5  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2596  002072                     l4066:
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;CANlib.h: 702: }
  2600                           ;CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2601  002072  0E02               	movlw	2
  2602  002074  0100               	movlb	0	; () banked
  2603  002076  19C4               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2604  002078  A4D8               	btfss	status,2,c
  2605  00207A  0012               	return	
  2606                           
  2607                           ; BSR set to: 0
  2608  00207C  0EF7               	movlw	247
  2609  00207E  0100               	movlb	0	; () banked
  2610  002080  19BF               	xorwf	CANSetMask@type& (0+255),w,b
  2611  002082  A4D8               	btfss	status,2,c
  2612  002084  0012               	return	
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;CANlib.h: 705: {
  2616                           ;CANlib.h: 706: tamp = mask & 0x000000FF;
  2617  002086  0100               	movlb	0	; () banked
  2618  002088  51BB               	movf	CANSetMask@mask& (0+255),w,b
  2619  00208A  0100               	movlb	0	; () banked
  2620  00208C  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2621  00208E  6BC6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2622  002090  6BC7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2623  002092  6BC8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  2627  002094  C0C5  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2628                           
  2629                           ; BSR set to: 0
  2630                           ;CANlib.h: 709: tamp = mask & 0x0000FF00;
  2631  002098  0E00               	movlw	0
  2632  00209A  0100               	movlb	0	; () banked
  2633  00209C  15BB               	andwf	CANSetMask@mask& (0+255),w,b
  2634  00209E  0100               	movlb	0	; () banked
  2635  0020A0  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2636  0020A2  0EFF               	movlw	255
  2637  0020A4  0100               	movlb	0	; () banked
  2638  0020A6  15BC               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2639  0020A8  0100               	movlb	0	; () banked
  2640  0020AA  6FC6               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2641  0020AC  0E00               	movlw	0
  2642  0020AE  0100               	movlb	0	; () banked
  2643  0020B0  15BD               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2644  0020B2  0100               	movlb	0	; () banked
  2645  0020B4  6FC7               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2646  0020B6  0E00               	movlw	0
  2647  0020B8  0100               	movlb	0	; () banked
  2648  0020BA  15BE               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2649  0020BC  0100               	movlb	0	; () banked
  2650  0020BE  6FC8               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;CANlib.h: 710: tamp = tamp >> 8;
  2654  0020C0  C0C5  F0C0         	movff	CANSetMask@tamp,??_CANSetMask
  2655  0020C4  C0C6  F0C1         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2656  0020C8  C0C7  F0C2         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2657  0020CC  C0C8  F0C3         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2658  0020D0  C0C1  F0C0         	movff	??_CANSetMask+1,??_CANSetMask
  2659  0020D4  C0C2  F0C1         	movff	??_CANSetMask+2,??_CANSetMask+1
  2660  0020D8  C0C3  F0C2         	movff	??_CANSetMask+3,??_CANSetMask+2
  2661  0020DC  0100               	movlb	0	; () banked
  2662  0020DE  6BC3               	clrf	(??_CANSetMask+3)& (0+255),b
  2663  0020E0  C0C0  F0C5         	movff	??_CANSetMask,CANSetMask@tamp
  2664  0020E4  C0C1  F0C6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2665  0020E8  C0C2  F0C7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2666  0020EC  C0C3  F0C8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  2670  0020F0  C0C5  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;CANlib.h: 713: if (mask & 0x00010000)
  2674  0020F4  0100               	movlb	0	; () banked
  2675  0020F6  A1BD               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2676  0020F8  D003               	goto	l441
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  2680  0020FA  010F               	movlb	15	; () banked
  2681  0020FC  811D               	bsf	29,0,b	;volatile
  2682  0020FE  D002               	goto	l442
  2683  002100                     l441:
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;CANlib.h: 715: else
  2687                           ;CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  2688  002100  010F               	movlb	15	; () banked
  2689  002102  911D               	bcf	29,0,b	;volatile
  2690  002104                     l442:
  2691                           
  2692                           ; BSR set to: 15
  2693                           ;CANlib.h: 718: if (mask & 0x00020000)
  2694  002104  0100               	movlb	0	; () banked
  2695  002106  A3BD               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2696  002108  D003               	goto	l443
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  2700  00210A  010F               	movlb	15	; () banked
  2701  00210C  831D               	bsf	29,1,b	;volatile
  2702  00210E  D002               	goto	l444
  2703  002110                     l443:
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;CANlib.h: 720: else
  2707                           ;CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  2708  002110  010F               	movlb	15	; () banked
  2709  002112  931D               	bcf	29,1,b	;volatile
  2710  002114                     l444:
  2711                           
  2712                           ; BSR set to: 15
  2713                           ;CANlib.h: 723: if (mask & 0x00040000)
  2714  002114  0100               	movlb	0	; () banked
  2715  002116  A5BD               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2716  002118  D003               	goto	l445
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  2720  00211A  010F               	movlb	15	; () banked
  2721  00211C  8B1D               	bsf	29,5,b	;volatile
  2722  00211E  D002               	goto	l446
  2723  002120                     l445:
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;CANlib.h: 725: else
  2727                           ;CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  2728  002120  010F               	movlb	15	; () banked
  2729  002122  9B1D               	bcf	29,5,b	;volatile
  2730  002124                     l446:
  2731                           
  2732                           ; BSR set to: 15
  2733                           ;CANlib.h: 728: if (mask & 0x00080000)
  2734  002124  0100               	movlb	0	; () banked
  2735  002126  A7BD               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2736  002128  D003               	goto	l447
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  2740  00212A  010F               	movlb	15	; () banked
  2741  00212C  8D1D               	bsf	29,6,b	;volatile
  2742  00212E  D002               	goto	l448
  2743  002130                     l447:
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;CANlib.h: 730: else
  2747                           ;CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  2748  002130  010F               	movlb	15	; () banked
  2749  002132  9D1D               	bcf	29,6,b	;volatile
  2750  002134                     l448:
  2751                           
  2752                           ; BSR set to: 15
  2753                           ;CANlib.h: 733: if (mask & 0x00100000)
  2754  002134  0100               	movlb	0	; () banked
  2755  002136  A9BD               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2756  002138  D003               	goto	l449
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  2760  00213A  010F               	movlb	15	; () banked
  2761  00213C  8F1D               	bsf	29,7,b	;volatile
  2762  00213E  D002               	goto	l4092
  2763  002140                     l449:
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;CANlib.h: 735: else
  2767                           ;CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  2768  002140  010F               	movlb	15	; () banked
  2769  002142  9F1D               	bcf	29,7,b	;volatile
  2770  002144                     l4092:
  2771                           
  2772                           ; BSR set to: 15
  2773                           ;CANlib.h: 738: tamp = (mask >> 21);
  2774  002144  C0BB  F0C0         	movff	CANSetMask@mask,??_CANSetMask
  2775  002148  C0BC  F0C1         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2776  00214C  C0BD  F0C2         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2777  002150  C0BE  F0C3         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2778  002154  0E16               	movlw	22
  2779  002156  D006               	goto	u4790
  2780  002158                     u4795:
  2781  002158  0100               	movlb	0	; () banked
  2782  00215A  90D8               	bcf	status,0,c
  2783  00215C  33C3               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2784  00215E  33C2               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2785  002160  33C1               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2786  002162  33C0               	rrcf	??_CANSetMask& (0+255),f,b
  2787  002164                     u4790:
  2788  002164  2EE8               	decfsz	wreg,f,c
  2789  002166  D7F8               	goto	u4795
  2790  002168  C0C0  F0C5         	movff	??_CANSetMask,CANSetMask@tamp
  2791  00216C  C0C1  F0C6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2792  002170  C0C2  F0C7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2793  002174  C0C3  F0C8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;CANlib.h: 739: tamp = tamp & 0x000000FF;
  2797  002178  0100               	movlb	0	; () banked
  2798  00217A  51C5               	movf	CANSetMask@tamp& (0+255),w,b
  2799  00217C  0100               	movlb	0	; () banked
  2800  00217E  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2801  002180  6BC6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2802  002182  6BC7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2803  002184  6BC8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  2807  002186  C0C5  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2808  00218A  0012               	return	
  2809  00218C                     __end_of_CANSetMask:
  2810                           	opt stack 0
  2811                           tblptru	equ	0xFF8
  2812                           tblptrh	equ	0xFF7
  2813                           tblptrl	equ	0xFF6
  2814                           tablat	equ	0xFF5
  2815                           intcon	equ	0xFF2
  2816                           postinc0	equ	0xFEE
  2817                           wreg	equ	0xFE8
  2818                           postdec1	equ	0xFE5
  2819                           fsr1l	equ	0xFE1
  2820                           status	equ	0xFD8
  2821                           
  2822 ;; *************** function _CANSetFilter *****************
  2823 ;; Defined at:
  2824 ;;		line 748 in file "CANlib.h"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  numBuffer       1    wreg     enum E16881
  2827 ;;  filter          4    0[BANK0 ] unsigned long 
  2828 ;;  type            1    4[BANK0 ] enum E16844
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  numBuffer       1    9[BANK0 ] enum E16881
  2831 ;;  tamp            4   10[BANK0 ] unsigned long 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;		None               void
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2841 ;;      Params:         0       5       0       0
  2842 ;;      Locals:         0       5       0       0
  2843 ;;      Temps:          0       4       0       0
  2844 ;;      Totals:         0      14       0       0
  2845 ;;Total ram usage:       14 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    2
  2848 ;; This function calls:
  2849 ;;		Nothing
  2850 ;; This function is called by:
  2851 ;;		_CANInitialize
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text5
  2856  0001EE                     __ptext5:
  2857                           	opt stack 0
  2858  0001EE                     _CANSetFilter:
  2859                           	opt stack 26
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;incstack = 0
  2863                           ;CANSetFilter@numBuffer stored from wreg
  2864  0001EE  0100               	movlb	0	; () banked
  2865  0001F0  6FC4               	movwf	CANSetFilter@numBuffer& (0+255),b
  2866                           
  2867                           ;CANlib.h: 750: unsigned long tamp;
  2868                           ;CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  2869  0001F2  0100               	movlb	0	; () banked
  2870  0001F4  51C4               	movf	CANSetFilter@numBuffer& (0+255),w,b
  2871  0001F6  0100               	movlb	0	; () banked
  2872  0001F8  A4D8               	btfss	status,2,c
  2873  0001FA  D058               	goto	l4116
  2874                           
  2875                           ; BSR set to: 0
  2876  0001FC  0100               	movlb	0	; () banked
  2877  0001FE  29BF               	incf	CANSetFilter@type& (0+255),w,b
  2878  000200  A4D8               	btfss	status,2,c
  2879  000202  D054               	goto	l4116
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;CANlib.h: 753: {
  2883                           ;CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  2884  000204  010F               	movlb	15	; () banked
  2885  000206  9701               	bcf	1,3,b	;volatile
  2886                           
  2887                           ; BSR set to: 15
  2888                           ;CANlib.h: 756: tamp = (filter >> 3);
  2889  000208  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  2890  00020C  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2891  000210  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2892  000214  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2893  000218  0E04               	movlw	4
  2894  00021A  D006               	goto	u4820
  2895  00021C                     u4825:
  2896  00021C  0100               	movlb	0	; () banked
  2897  00021E  90D8               	bcf	status,0,c
  2898  000220  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2899  000222  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2900  000224  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2901  000226  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  2902  000228                     u4820:
  2903  000228  2EE8               	decfsz	wreg,f,c
  2904  00022A  D7F8               	goto	u4825
  2905  00022C  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  2906  000230  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2907  000234  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2908  000238  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;CANlib.h: 757: tamp = tamp & 0x000000FF;
  2912  00023C  0100               	movlb	0	; () banked
  2913  00023E  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  2914  000240  0100               	movlb	0	; () banked
  2915  000242  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  2916  000244  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2917  000246  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2918  000248  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  2922  00024A  C0C5  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;CANlib.h: 760: tamp = filter & 0x00000007;
  2926  00024E  0E07               	movlw	7
  2927  000250  0100               	movlb	0	; () banked
  2928  000252  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  2929  000254  0100               	movlb	0	; () banked
  2930  000256  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  2931  000258  0E00               	movlw	0
  2932  00025A  0100               	movlb	0	; () banked
  2933  00025C  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2934  00025E  0100               	movlb	0	; () banked
  2935  000260  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2936  000262  0E00               	movlw	0
  2937  000264  0100               	movlb	0	; () banked
  2938  000266  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2939  000268  0100               	movlb	0	; () banked
  2940  00026A  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2941  00026C  0E00               	movlw	0
  2942  00026E  0100               	movlb	0	; () banked
  2943  000270  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2944  000272  0100               	movlb	0	; () banked
  2945  000274  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;CANlib.h: 761: tamp = tamp << 5;
  2949  000276  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  2950  00027A  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2951  00027E  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2952  000282  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2953  000286  0E05               	movlw	5
  2954  000288                     u4835:
  2955  000288  90D8               	bcf	status,0,c
  2956  00028A  0100               	movlb	0	; () banked
  2957  00028C  37C0               	rlcf	??_CANSetFilter& (0+255),f,b
  2958  00028E  37C1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2959  000290  37C2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2960  000292  37C3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2961  000294  2EE8               	decfsz	wreg,f,c
  2962  000296  D7F8               	goto	u4835
  2963  000298  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  2964  00029C  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2965  0002A0  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2966  0002A4  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  2970  0002A8  C0C5  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  2971  0002AC                     l4116:
  2972                           
  2973                           ; BSR set to: 0
  2974                           ;CANlib.h: 763: }
  2975                           ;CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  2976  0002AC  0100               	movlb	0	; () banked
  2977  0002AE  05C4               	decf	CANSetFilter@numBuffer& (0+255),w,b
  2978  0002B0  A4D8               	btfss	status,2,c
  2979  0002B2  D058               	goto	l4134
  2980                           
  2981                           ; BSR set to: 0
  2982  0002B4  0100               	movlb	0	; () banked
  2983  0002B6  29BF               	incf	CANSetFilter@type& (0+255),w,b
  2984  0002B8  A4D8               	btfss	status,2,c
  2985  0002BA  D054               	goto	l4134
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;CANlib.h: 766: {
  2989                           ;CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  2990  0002BC  010F               	movlb	15	; () banked
  2991  0002BE  9705               	bcf	5,3,b	;volatile
  2992                           
  2993                           ; BSR set to: 15
  2994                           ;CANlib.h: 769: tamp = (filter >> 3);
  2995  0002C0  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  2996  0002C4  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2997  0002C8  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2998  0002CC  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2999  0002D0  0E04               	movlw	4
  3000  0002D2  D006               	goto	u4860
  3001  0002D4                     u4865:
  3002  0002D4  0100               	movlb	0	; () banked
  3003  0002D6  90D8               	bcf	status,0,c
  3004  0002D8  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3005  0002DA  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3006  0002DC  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3007  0002DE  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  3008  0002E0                     u4860:
  3009  0002E0  2EE8               	decfsz	wreg,f,c
  3010  0002E2  D7F8               	goto	u4865
  3011  0002E4  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3012  0002E8  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3013  0002EC  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3014  0002F0  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;CANlib.h: 770: tamp = tamp & 0x000000FF;
  3018  0002F4  0100               	movlb	0	; () banked
  3019  0002F6  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  3020  0002F8  0100               	movlb	0	; () banked
  3021  0002FA  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3022  0002FC  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3023  0002FE  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3024  000300  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3028  000302  C0C5  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;CANlib.h: 773: tamp = filter & 0x00000007;
  3032  000306  0E07               	movlw	7
  3033  000308  0100               	movlb	0	; () banked
  3034  00030A  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  3035  00030C  0100               	movlb	0	; () banked
  3036  00030E  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3037  000310  0E00               	movlw	0
  3038  000312  0100               	movlb	0	; () banked
  3039  000314  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3040  000316  0100               	movlb	0	; () banked
  3041  000318  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3042  00031A  0E00               	movlw	0
  3043  00031C  0100               	movlb	0	; () banked
  3044  00031E  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3045  000320  0100               	movlb	0	; () banked
  3046  000322  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3047  000324  0E00               	movlw	0
  3048  000326  0100               	movlb	0	; () banked
  3049  000328  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3050  00032A  0100               	movlb	0	; () banked
  3051  00032C  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;CANlib.h: 774: tamp = tamp << 5;
  3055  00032E  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  3056  000332  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3057  000336  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3058  00033A  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3059  00033E  0E05               	movlw	5
  3060  000340                     u4875:
  3061  000340  90D8               	bcf	status,0,c
  3062  000342  0100               	movlb	0	; () banked
  3063  000344  37C0               	rlcf	??_CANSetFilter& (0+255),f,b
  3064  000346  37C1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3065  000348  37C2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3066  00034A  37C3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3067  00034C  2EE8               	decfsz	wreg,f,c
  3068  00034E  D7F8               	goto	u4875
  3069  000350  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3070  000354  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3071  000358  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3072  00035C  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3076  000360  C0C5  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3077  000364                     l4134:
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;CANlib.h: 776: }
  3081                           ;CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3082  000364  0E02               	movlw	2
  3083  000366  0100               	movlb	0	; () banked
  3084  000368  19C4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3085  00036A  A4D8               	btfss	status,2,c
  3086  00036C  D058               	goto	l4152
  3087                           
  3088                           ; BSR set to: 0
  3089  00036E  0100               	movlb	0	; () banked
  3090  000370  29BF               	incf	CANSetFilter@type& (0+255),w,b
  3091  000372  A4D8               	btfss	status,2,c
  3092  000374  D054               	goto	l4152
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;CANlib.h: 779: {
  3096                           ;CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3097  000376  010F               	movlb	15	; () banked
  3098  000378  9709               	bcf	9,3,b	;volatile
  3099                           
  3100                           ; BSR set to: 15
  3101                           ;CANlib.h: 782: tamp = (filter >> 3);
  3102  00037A  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  3103  00037E  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3104  000382  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3105  000386  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3106  00038A  0E04               	movlw	4
  3107  00038C  D006               	goto	u4900
  3108  00038E                     u4905:
  3109  00038E  0100               	movlb	0	; () banked
  3110  000390  90D8               	bcf	status,0,c
  3111  000392  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3112  000394  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3113  000396  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3114  000398  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  3115  00039A                     u4900:
  3116  00039A  2EE8               	decfsz	wreg,f,c
  3117  00039C  D7F8               	goto	u4905
  3118  00039E  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3119  0003A2  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3120  0003A6  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3121  0003AA  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;CANlib.h: 783: tamp = tamp & 0x000000FF;
  3125  0003AE  0100               	movlb	0	; () banked
  3126  0003B0  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  3127  0003B2  0100               	movlb	0	; () banked
  3128  0003B4  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3129  0003B6  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3130  0003B8  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3131  0003BA  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3135  0003BC  C0C5  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3136                           
  3137                           ; BSR set to: 0
  3138                           ;CANlib.h: 786: tamp = filter & 0x00000007;
  3139  0003C0  0E07               	movlw	7
  3140  0003C2  0100               	movlb	0	; () banked
  3141  0003C4  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  3142  0003C6  0100               	movlb	0	; () banked
  3143  0003C8  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3144  0003CA  0E00               	movlw	0
  3145  0003CC  0100               	movlb	0	; () banked
  3146  0003CE  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3147  0003D0  0100               	movlb	0	; () banked
  3148  0003D2  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3149  0003D4  0E00               	movlw	0
  3150  0003D6  0100               	movlb	0	; () banked
  3151  0003D8  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3152  0003DA  0100               	movlb	0	; () banked
  3153  0003DC  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3154  0003DE  0E00               	movlw	0
  3155  0003E0  0100               	movlb	0	; () banked
  3156  0003E2  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3157  0003E4  0100               	movlb	0	; () banked
  3158  0003E6  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;CANlib.h: 787: tamp = tamp << 5;
  3162  0003E8  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  3163  0003EC  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3164  0003F0  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3165  0003F4  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3166  0003F8  0E05               	movlw	5
  3167  0003FA                     u4915:
  3168  0003FA  90D8               	bcf	status,0,c
  3169  0003FC  0100               	movlb	0	; () banked
  3170  0003FE  37C0               	rlcf	??_CANSetFilter& (0+255),f,b
  3171  000400  37C1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3172  000402  37C2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3173  000404  37C3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3174  000406  2EE8               	decfsz	wreg,f,c
  3175  000408  D7F8               	goto	u4915
  3176  00040A  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3177  00040E  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3178  000412  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3179  000416  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  3183  00041A  C0C5  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3184  00041E                     l4152:
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;CANlib.h: 789: }
  3188                           ;CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3189  00041E  0E03               	movlw	3
  3190  000420  0100               	movlb	0	; () banked
  3191  000422  19C4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3192  000424  A4D8               	btfss	status,2,c
  3193  000426  D058               	goto	l4170
  3194                           
  3195                           ; BSR set to: 0
  3196  000428  0100               	movlb	0	; () banked
  3197  00042A  29BF               	incf	CANSetFilter@type& (0+255),w,b
  3198  00042C  A4D8               	btfss	status,2,c
  3199  00042E  D054               	goto	l4170
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;CANlib.h: 792: {
  3203                           ;CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  3204  000430  010F               	movlb	15	; () banked
  3205  000432  970D               	bcf	13,3,b	;volatile
  3206                           
  3207                           ; BSR set to: 15
  3208                           ;CANlib.h: 795: tamp = (filter >> 3);
  3209  000434  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  3210  000438  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3211  00043C  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3212  000440  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3213  000444  0E04               	movlw	4
  3214  000446  D006               	goto	u4940
  3215  000448                     u4945:
  3216  000448  0100               	movlb	0	; () banked
  3217  00044A  90D8               	bcf	status,0,c
  3218  00044C  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3219  00044E  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3220  000450  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3221  000452  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  3222  000454                     u4940:
  3223  000454  2EE8               	decfsz	wreg,f,c
  3224  000456  D7F8               	goto	u4945
  3225  000458  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3226  00045C  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3227  000460  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3228  000464  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;CANlib.h: 796: tamp = tamp & 0x000000FF;
  3232  000468  0100               	movlb	0	; () banked
  3233  00046A  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  3234  00046C  0100               	movlb	0	; () banked
  3235  00046E  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3236  000470  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3237  000472  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3238  000474  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  3242  000476  C0C5  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;CANlib.h: 799: tamp = filter & 0x00000007;
  3246  00047A  0E07               	movlw	7
  3247  00047C  0100               	movlb	0	; () banked
  3248  00047E  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  3249  000480  0100               	movlb	0	; () banked
  3250  000482  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3251  000484  0E00               	movlw	0
  3252  000486  0100               	movlb	0	; () banked
  3253  000488  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3254  00048A  0100               	movlb	0	; () banked
  3255  00048C  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3256  00048E  0E00               	movlw	0
  3257  000490  0100               	movlb	0	; () banked
  3258  000492  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3259  000494  0100               	movlb	0	; () banked
  3260  000496  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3261  000498  0E00               	movlw	0
  3262  00049A  0100               	movlb	0	; () banked
  3263  00049C  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3264  00049E  0100               	movlb	0	; () banked
  3265  0004A0  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;CANlib.h: 800: tamp = tamp << 5;
  3269  0004A2  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  3270  0004A6  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3271  0004AA  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3272  0004AE  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3273  0004B2  0E05               	movlw	5
  3274  0004B4                     u4955:
  3275  0004B4  90D8               	bcf	status,0,c
  3276  0004B6  0100               	movlb	0	; () banked
  3277  0004B8  37C0               	rlcf	??_CANSetFilter& (0+255),f,b
  3278  0004BA  37C1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3279  0004BC  37C2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3280  0004BE  37C3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3281  0004C0  2EE8               	decfsz	wreg,f,c
  3282  0004C2  D7F8               	goto	u4955
  3283  0004C4  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3284  0004C8  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3285  0004CC  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3286  0004D0  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  3290  0004D4  C0C5  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3291  0004D8                     l4170:
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;CANlib.h: 802: }
  3295                           ;CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3296  0004D8  0E04               	movlw	4
  3297  0004DA  0100               	movlb	0	; () banked
  3298  0004DC  19C4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3299  0004DE  A4D8               	btfss	status,2,c
  3300  0004E0  D058               	goto	l4188
  3301                           
  3302                           ; BSR set to: 0
  3303  0004E2  0100               	movlb	0	; () banked
  3304  0004E4  29BF               	incf	CANSetFilter@type& (0+255),w,b
  3305  0004E6  A4D8               	btfss	status,2,c
  3306  0004E8  D054               	goto	l4188
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;CANlib.h: 805: {
  3310                           ;CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  3311  0004EA  010F               	movlb	15	; () banked
  3312  0004EC  9711               	bcf	17,3,b	;volatile
  3313                           
  3314                           ; BSR set to: 15
  3315                           ;CANlib.h: 808: tamp = (filter >> 3);
  3316  0004EE  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  3317  0004F2  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3318  0004F6  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3319  0004FA  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3320  0004FE  0E04               	movlw	4
  3321  000500  D006               	goto	u4980
  3322  000502                     u4985:
  3323  000502  0100               	movlb	0	; () banked
  3324  000504  90D8               	bcf	status,0,c
  3325  000506  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3326  000508  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3327  00050A  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3328  00050C  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  3329  00050E                     u4980:
  3330  00050E  2EE8               	decfsz	wreg,f,c
  3331  000510  D7F8               	goto	u4985
  3332  000512  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3333  000516  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3334  00051A  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3335  00051E  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;CANlib.h: 809: tamp = tamp & 0x000000FF;
  3339  000522  0100               	movlb	0	; () banked
  3340  000524  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  3341  000526  0100               	movlb	0	; () banked
  3342  000528  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3343  00052A  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3344  00052C  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3345  00052E  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  3349  000530  C0C5  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;CANlib.h: 812: tamp = filter & 0x00000007;
  3353  000534  0E07               	movlw	7
  3354  000536  0100               	movlb	0	; () banked
  3355  000538  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  3356  00053A  0100               	movlb	0	; () banked
  3357  00053C  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3358  00053E  0E00               	movlw	0
  3359  000540  0100               	movlb	0	; () banked
  3360  000542  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3361  000544  0100               	movlb	0	; () banked
  3362  000546  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3363  000548  0E00               	movlw	0
  3364  00054A  0100               	movlb	0	; () banked
  3365  00054C  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3366  00054E  0100               	movlb	0	; () banked
  3367  000550  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3368  000552  0E00               	movlw	0
  3369  000554  0100               	movlb	0	; () banked
  3370  000556  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3371  000558  0100               	movlb	0	; () banked
  3372  00055A  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;CANlib.h: 813: tamp = tamp << 5;
  3376  00055C  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  3377  000560  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3378  000564  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3379  000568  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3380  00056C  0E05               	movlw	5
  3381  00056E                     u4995:
  3382  00056E  90D8               	bcf	status,0,c
  3383  000570  0100               	movlb	0	; () banked
  3384  000572  37C0               	rlcf	??_CANSetFilter& (0+255),f,b
  3385  000574  37C1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3386  000576  37C2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3387  000578  37C3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3388  00057A  2EE8               	decfsz	wreg,f,c
  3389  00057C  D7F8               	goto	u4995
  3390  00057E  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3391  000582  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3392  000586  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3393  00058A  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  3397  00058E  C0C5  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3398  000592                     l4188:
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;CANlib.h: 815: }
  3402                           ;CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3403  000592  0E05               	movlw	5
  3404  000594  0100               	movlb	0	; () banked
  3405  000596  19C4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3406  000598  A4D8               	btfss	status,2,c
  3407  00059A  D058               	goto	l4206
  3408                           
  3409                           ; BSR set to: 0
  3410  00059C  0100               	movlb	0	; () banked
  3411  00059E  29BF               	incf	CANSetFilter@type& (0+255),w,b
  3412  0005A0  A4D8               	btfss	status,2,c
  3413  0005A2  D054               	goto	l4206
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;CANlib.h: 818: {
  3417                           ;CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  3418  0005A4  010F               	movlb	15	; () banked
  3419  0005A6  9715               	bcf	21,3,b	;volatile
  3420                           
  3421                           ; BSR set to: 15
  3422                           ;CANlib.h: 821: tamp = (filter >> 3);
  3423  0005A8  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  3424  0005AC  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3425  0005B0  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3426  0005B4  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3427  0005B8  0E04               	movlw	4
  3428  0005BA  D006               	goto	u5020
  3429  0005BC                     u5025:
  3430  0005BC  0100               	movlb	0	; () banked
  3431  0005BE  90D8               	bcf	status,0,c
  3432  0005C0  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3433  0005C2  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3434  0005C4  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3435  0005C6  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  3436  0005C8                     u5020:
  3437  0005C8  2EE8               	decfsz	wreg,f,c
  3438  0005CA  D7F8               	goto	u5025
  3439  0005CC  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3440  0005D0  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3441  0005D4  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3442  0005D8  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;CANlib.h: 822: tamp = tamp & 0x000000FF;
  3446  0005DC  0100               	movlb	0	; () banked
  3447  0005DE  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  3448  0005E0  0100               	movlb	0	; () banked
  3449  0005E2  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3450  0005E4  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3451  0005E6  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3452  0005E8  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  3456  0005EA  C0C5  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;CANlib.h: 825: tamp = filter & 0x00000007;
  3460  0005EE  0E07               	movlw	7
  3461  0005F0  0100               	movlb	0	; () banked
  3462  0005F2  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  3463  0005F4  0100               	movlb	0	; () banked
  3464  0005F6  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3465  0005F8  0E00               	movlw	0
  3466  0005FA  0100               	movlb	0	; () banked
  3467  0005FC  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3468  0005FE  0100               	movlb	0	; () banked
  3469  000600  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3470  000602  0E00               	movlw	0
  3471  000604  0100               	movlb	0	; () banked
  3472  000606  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3473  000608  0100               	movlb	0	; () banked
  3474  00060A  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3475  00060C  0E00               	movlw	0
  3476  00060E  0100               	movlb	0	; () banked
  3477  000610  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3478  000612  0100               	movlb	0	; () banked
  3479  000614  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3480                           
  3481                           ; BSR set to: 0
  3482                           ;CANlib.h: 826: tamp = tamp << 5;
  3483  000616  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  3484  00061A  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3485  00061E  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3486  000622  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3487  000626  0E05               	movlw	5
  3488  000628                     u5035:
  3489  000628  90D8               	bcf	status,0,c
  3490  00062A  0100               	movlb	0	; () banked
  3491  00062C  37C0               	rlcf	??_CANSetFilter& (0+255),f,b
  3492  00062E  37C1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3493  000630  37C2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3494  000632  37C3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3495  000634  2EE8               	decfsz	wreg,f,c
  3496  000636  D7F8               	goto	u5035
  3497  000638  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3498  00063C  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3499  000640  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3500  000644  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  3504  000648  C0C5  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3505  00064C                     l4206:
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;CANlib.h: 828: }
  3509                           ;CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3510  00064C  0100               	movlb	0	; () banked
  3511  00064E  51C4               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3512  000650  0100               	movlb	0	; () banked
  3513  000652  A4D8               	btfss	status,2,c
  3514  000654  D089               	goto	l4240
  3515                           
  3516                           ; BSR set to: 0
  3517  000656  0EF7               	movlw	247
  3518  000658  0100               	movlb	0	; () banked
  3519  00065A  19BF               	xorwf	CANSetFilter@type& (0+255),w,b
  3520  00065C  A4D8               	btfss	status,2,c
  3521  00065E  D084               	goto	l4240
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;CANlib.h: 832: {
  3525                           ;CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  3526  000660  010F               	movlb	15	; () banked
  3527  000662  8701               	bsf	1,3,b	;volatile
  3528                           
  3529                           ; BSR set to: 15
  3530                           ;CANlib.h: 835: tamp = filter & 0x000000FF;
  3531  000664  0100               	movlb	0	; () banked
  3532  000666  51BB               	movf	CANSetFilter@filter& (0+255),w,b
  3533  000668  0100               	movlb	0	; () banked
  3534  00066A  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3535  00066C  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3536  00066E  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3537  000670  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  3541  000672  C0C5  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;CANlib.h: 838: tamp = filter & 0x0000FF00;
  3545  000676  0E00               	movlw	0
  3546  000678  0100               	movlb	0	; () banked
  3547  00067A  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  3548  00067C  0100               	movlb	0	; () banked
  3549  00067E  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3550  000680  0EFF               	movlw	255
  3551  000682  0100               	movlb	0	; () banked
  3552  000684  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3553  000686  0100               	movlb	0	; () banked
  3554  000688  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3555  00068A  0E00               	movlw	0
  3556  00068C  0100               	movlb	0	; () banked
  3557  00068E  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3558  000690  0100               	movlb	0	; () banked
  3559  000692  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3560  000694  0E00               	movlw	0
  3561  000696  0100               	movlb	0	; () banked
  3562  000698  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3563  00069A  0100               	movlb	0	; () banked
  3564  00069C  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;CANlib.h: 839: tamp = tamp >> 8;
  3568  00069E  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  3569  0006A2  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3570  0006A6  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3571  0006AA  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3572  0006AE  C0C1  F0C0         	movff	??_CANSetFilter+1,??_CANSetFilter
  3573  0006B2  C0C2  F0C1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3574  0006B6  C0C3  F0C2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3575  0006BA  0100               	movlb	0	; () banked
  3576  0006BC  6BC3               	clrf	(??_CANSetFilter+3)& (0+255),b
  3577  0006BE  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3578  0006C2  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3579  0006C6  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3580  0006CA  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  3584  0006CE  C0C5  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;CANlib.h: 842: if (filter & 0x00010000)
  3588  0006D2  0100               	movlb	0	; () banked
  3589  0006D4  A1BD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3590  0006D6  D003               	goto	l461
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  3594  0006D8  010F               	movlb	15	; () banked
  3595  0006DA  8101               	bsf	1,0,b	;volatile
  3596  0006DC  D002               	goto	l462
  3597  0006DE                     l461:
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;CANlib.h: 844: else
  3601                           ;CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  3602  0006DE  010F               	movlb	15	; () banked
  3603  0006E0  9101               	bcf	1,0,b	;volatile
  3604  0006E2                     l462:
  3605                           
  3606                           ; BSR set to: 15
  3607                           ;CANlib.h: 847: if (filter & 0x00020000)
  3608  0006E2  0100               	movlb	0	; () banked
  3609  0006E4  A3BD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3610  0006E6  D003               	goto	l463
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  3614  0006E8  010F               	movlb	15	; () banked
  3615  0006EA  8301               	bsf	1,1,b	;volatile
  3616  0006EC  D002               	goto	l464
  3617  0006EE                     l463:
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;CANlib.h: 849: else
  3621                           ;CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  3622  0006EE  010F               	movlb	15	; () banked
  3623  0006F0  9301               	bcf	1,1,b	;volatile
  3624  0006F2                     l464:
  3625                           
  3626                           ; BSR set to: 15
  3627                           ;CANlib.h: 852: if (filter & 0x00040000)
  3628  0006F2  0100               	movlb	0	; () banked
  3629  0006F4  A5BD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3630  0006F6  D003               	goto	l465
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  3634  0006F8  010F               	movlb	15	; () banked
  3635  0006FA  8B01               	bsf	1,5,b	;volatile
  3636  0006FC  D002               	goto	l466
  3637  0006FE                     l465:
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;CANlib.h: 854: else
  3641                           ;CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  3642  0006FE  010F               	movlb	15	; () banked
  3643  000700  9B01               	bcf	1,5,b	;volatile
  3644  000702                     l466:
  3645                           
  3646                           ; BSR set to: 15
  3647                           ;CANlib.h: 857: if (filter & 0x00080000)
  3648  000702  0100               	movlb	0	; () banked
  3649  000704  A7BD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3650  000706  D003               	goto	l467
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  3654  000708  010F               	movlb	15	; () banked
  3655  00070A  8D01               	bsf	1,6,b	;volatile
  3656  00070C  D002               	goto	l468
  3657  00070E                     l467:
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;CANlib.h: 859: else
  3661                           ;CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  3662  00070E  010F               	movlb	15	; () banked
  3663  000710  9D01               	bcf	1,6,b	;volatile
  3664  000712                     l468:
  3665                           
  3666                           ; BSR set to: 15
  3667                           ;CANlib.h: 862: if (filter & 0x00100000)
  3668  000712  0100               	movlb	0	; () banked
  3669  000714  A9BD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3670  000716  D003               	goto	l469
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  3674  000718  010F               	movlb	15	; () banked
  3675  00071A  8F01               	bsf	1,7,b	;volatile
  3676  00071C  D002               	goto	l4234
  3677  00071E                     l469:
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;CANlib.h: 864: else
  3681                           ;CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  3682  00071E  010F               	movlb	15	; () banked
  3683  000720  9F01               	bcf	1,7,b	;volatile
  3684  000722                     l4234:
  3685                           
  3686                           ; BSR set to: 15
  3687                           ;CANlib.h: 867: tamp = (filter >> 21);
  3688  000722  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  3689  000726  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3690  00072A  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3691  00072E  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3692  000732  0E16               	movlw	22
  3693  000734  D006               	goto	u5110
  3694  000736                     u5115:
  3695  000736  0100               	movlb	0	; () banked
  3696  000738  90D8               	bcf	status,0,c
  3697  00073A  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3698  00073C  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3699  00073E  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3700  000740  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  3701  000742                     u5110:
  3702  000742  2EE8               	decfsz	wreg,f,c
  3703  000744  D7F8               	goto	u5115
  3704  000746  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3705  00074A  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3706  00074E  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3707  000752  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;CANlib.h: 868: tamp = tamp & 0x000000FF;
  3711  000756  0100               	movlb	0	; () banked
  3712  000758  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  3713  00075A  0100               	movlb	0	; () banked
  3714  00075C  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3715  00075E  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3716  000760  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3717  000762  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  3721  000764  C0C5  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3722  000768                     l4240:
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;CANlib.h: 870: }
  3726                           ;CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  3727  000768  0100               	movlb	0	; () banked
  3728  00076A  05C4               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3729  00076C  A4D8               	btfss	status,2,c
  3730  00076E  D089               	goto	l4274
  3731                           
  3732                           ; BSR set to: 0
  3733  000770  0EF7               	movlw	247
  3734  000772  0100               	movlb	0	; () banked
  3735  000774  19BF               	xorwf	CANSetFilter@type& (0+255),w,b
  3736  000776  A4D8               	btfss	status,2,c
  3737  000778  D084               	goto	l4274
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;CANlib.h: 873: {
  3741                           ;CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  3742  00077A  010F               	movlb	15	; () banked
  3743  00077C  8705               	bsf	5,3,b	;volatile
  3744                           
  3745                           ; BSR set to: 15
  3746                           ;CANlib.h: 876: tamp = filter & 0x000000FF;
  3747  00077E  0100               	movlb	0	; () banked
  3748  000780  51BB               	movf	CANSetFilter@filter& (0+255),w,b
  3749  000782  0100               	movlb	0	; () banked
  3750  000784  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3751  000786  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3752  000788  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3753  00078A  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  3757  00078C  C0C5  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;CANlib.h: 879: tamp = filter & 0x0000FF00;
  3761  000790  0E00               	movlw	0
  3762  000792  0100               	movlb	0	; () banked
  3763  000794  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  3764  000796  0100               	movlb	0	; () banked
  3765  000798  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3766  00079A  0EFF               	movlw	255
  3767  00079C  0100               	movlb	0	; () banked
  3768  00079E  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3769  0007A0  0100               	movlb	0	; () banked
  3770  0007A2  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3771  0007A4  0E00               	movlw	0
  3772  0007A6  0100               	movlb	0	; () banked
  3773  0007A8  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3774  0007AA  0100               	movlb	0	; () banked
  3775  0007AC  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3776  0007AE  0E00               	movlw	0
  3777  0007B0  0100               	movlb	0	; () banked
  3778  0007B2  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3779  0007B4  0100               	movlb	0	; () banked
  3780  0007B6  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;CANlib.h: 880: tamp = tamp >> 8;
  3784  0007B8  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  3785  0007BC  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3786  0007C0  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3787  0007C4  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3788  0007C8  C0C1  F0C0         	movff	??_CANSetFilter+1,??_CANSetFilter
  3789  0007CC  C0C2  F0C1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3790  0007D0  C0C3  F0C2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3791  0007D4  0100               	movlb	0	; () banked
  3792  0007D6  6BC3               	clrf	(??_CANSetFilter+3)& (0+255),b
  3793  0007D8  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3794  0007DC  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3795  0007E0  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3796  0007E4  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  3800  0007E8  C0C5  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;CANlib.h: 883: if (filter & 0x00010000)
  3804  0007EC  0100               	movlb	0	; () banked
  3805  0007EE  A1BD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3806  0007F0  D003               	goto	l472
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  3810  0007F2  010F               	movlb	15	; () banked
  3811  0007F4  8105               	bsf	5,0,b	;volatile
  3812  0007F6  D002               	goto	l473
  3813  0007F8                     l472:
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;CANlib.h: 885: else
  3817                           ;CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  3818  0007F8  010F               	movlb	15	; () banked
  3819  0007FA  9105               	bcf	5,0,b	;volatile
  3820  0007FC                     l473:
  3821                           
  3822                           ; BSR set to: 15
  3823                           ;CANlib.h: 888: if (filter & 0x00020000)
  3824  0007FC  0100               	movlb	0	; () banked
  3825  0007FE  A3BD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3826  000800  D003               	goto	l474
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  3830  000802  010F               	movlb	15	; () banked
  3831  000804  8305               	bsf	5,1,b	;volatile
  3832  000806  D002               	goto	l475
  3833  000808                     l474:
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;CANlib.h: 890: else
  3837                           ;CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  3838  000808  010F               	movlb	15	; () banked
  3839  00080A  9305               	bcf	5,1,b	;volatile
  3840  00080C                     l475:
  3841                           
  3842                           ; BSR set to: 15
  3843                           ;CANlib.h: 893: if (filter & 0x00040000)
  3844  00080C  0100               	movlb	0	; () banked
  3845  00080E  A5BD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3846  000810  D003               	goto	l476
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  3850  000812  010F               	movlb	15	; () banked
  3851  000814  8B05               	bsf	5,5,b	;volatile
  3852  000816  D002               	goto	l477
  3853  000818                     l476:
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;CANlib.h: 895: else
  3857                           ;CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  3858  000818  010F               	movlb	15	; () banked
  3859  00081A  9B05               	bcf	5,5,b	;volatile
  3860  00081C                     l477:
  3861                           
  3862                           ; BSR set to: 15
  3863                           ;CANlib.h: 898: if (filter & 0x00080000)
  3864  00081C  0100               	movlb	0	; () banked
  3865  00081E  A7BD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3866  000820  D003               	goto	l478
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  3870  000822  010F               	movlb	15	; () banked
  3871  000824  8D05               	bsf	5,6,b	;volatile
  3872  000826  D002               	goto	l479
  3873  000828                     l478:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;CANlib.h: 900: else
  3877                           ;CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  3878  000828  010F               	movlb	15	; () banked
  3879  00082A  9D05               	bcf	5,6,b	;volatile
  3880  00082C                     l479:
  3881                           
  3882                           ; BSR set to: 15
  3883                           ;CANlib.h: 903: if (filter & 0x00100000)
  3884  00082C  0100               	movlb	0	; () banked
  3885  00082E  A9BD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3886  000830  D003               	goto	l480
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  3890  000832  010F               	movlb	15	; () banked
  3891  000834  8F05               	bsf	5,7,b	;volatile
  3892  000836  D002               	goto	l4268
  3893  000838                     l480:
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;CANlib.h: 905: else
  3897                           ;CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  3898  000838  010F               	movlb	15	; () banked
  3899  00083A  9F05               	bcf	5,7,b	;volatile
  3900  00083C                     l4268:
  3901                           
  3902                           ; BSR set to: 15
  3903                           ;CANlib.h: 908: tamp = (filter >> 21);
  3904  00083C  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  3905  000840  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3906  000844  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3907  000848  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3908  00084C  0E16               	movlw	22
  3909  00084E  D006               	goto	u5190
  3910  000850                     u5195:
  3911  000850  0100               	movlb	0	; () banked
  3912  000852  90D8               	bcf	status,0,c
  3913  000854  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3914  000856  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3915  000858  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3916  00085A  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  3917  00085C                     u5190:
  3918  00085C  2EE8               	decfsz	wreg,f,c
  3919  00085E  D7F8               	goto	u5195
  3920  000860  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3921  000864  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3922  000868  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3923  00086C  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;CANlib.h: 909: tamp = tamp & 0x000000FF;
  3927  000870  0100               	movlb	0	; () banked
  3928  000872  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  3929  000874  0100               	movlb	0	; () banked
  3930  000876  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3931  000878  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3932  00087A  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3933  00087C  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  3937  00087E  C0C5  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3938  000882                     l4274:
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;CANlib.h: 911: }
  3942                           ;CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  3943  000882  0E02               	movlw	2
  3944  000884  0100               	movlb	0	; () banked
  3945  000886  19C4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3946  000888  A4D8               	btfss	status,2,c
  3947  00088A  D089               	goto	l4308
  3948                           
  3949                           ; BSR set to: 0
  3950  00088C  0EF7               	movlw	247
  3951  00088E  0100               	movlb	0	; () banked
  3952  000890  19BF               	xorwf	CANSetFilter@type& (0+255),w,b
  3953  000892  A4D8               	btfss	status,2,c
  3954  000894  D084               	goto	l4308
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;CANlib.h: 915: {
  3958                           ;CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  3959  000896  010F               	movlb	15	; () banked
  3960  000898  8709               	bsf	9,3,b	;volatile
  3961                           
  3962                           ; BSR set to: 15
  3963                           ;CANlib.h: 918: tamp = filter & 0x000000FF;
  3964  00089A  0100               	movlb	0	; () banked
  3965  00089C  51BB               	movf	CANSetFilter@filter& (0+255),w,b
  3966  00089E  0100               	movlb	0	; () banked
  3967  0008A0  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3968  0008A2  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3969  0008A4  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3970  0008A6  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  3974  0008A8  C0C5  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;CANlib.h: 921: tamp = filter & 0x0000FF00;
  3978  0008AC  0E00               	movlw	0
  3979  0008AE  0100               	movlb	0	; () banked
  3980  0008B0  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  3981  0008B2  0100               	movlb	0	; () banked
  3982  0008B4  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3983  0008B6  0EFF               	movlw	255
  3984  0008B8  0100               	movlb	0	; () banked
  3985  0008BA  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3986  0008BC  0100               	movlb	0	; () banked
  3987  0008BE  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3988  0008C0  0E00               	movlw	0
  3989  0008C2  0100               	movlb	0	; () banked
  3990  0008C4  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3991  0008C6  0100               	movlb	0	; () banked
  3992  0008C8  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3993  0008CA  0E00               	movlw	0
  3994  0008CC  0100               	movlb	0	; () banked
  3995  0008CE  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3996  0008D0  0100               	movlb	0	; () banked
  3997  0008D2  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;CANlib.h: 922: tamp = tamp >> 8;
  4001  0008D4  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  4002  0008D8  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4003  0008DC  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4004  0008E0  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4005  0008E4  C0C1  F0C0         	movff	??_CANSetFilter+1,??_CANSetFilter
  4006  0008E8  C0C2  F0C1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4007  0008EC  C0C3  F0C2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4008  0008F0  0100               	movlb	0	; () banked
  4009  0008F2  6BC3               	clrf	(??_CANSetFilter+3)& (0+255),b
  4010  0008F4  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4011  0008F8  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4012  0008FC  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4013  000900  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4017  000904  C0C5  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;CANlib.h: 925: if (filter & 0x00010000)
  4021  000908  0100               	movlb	0	; () banked
  4022  00090A  A1BD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4023  00090C  D003               	goto	l483
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4027  00090E  010F               	movlb	15	; () banked
  4028  000910  8109               	bsf	9,0,b	;volatile
  4029  000912  D002               	goto	l484
  4030  000914                     l483:
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;CANlib.h: 927: else
  4034                           ;CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4035  000914  010F               	movlb	15	; () banked
  4036  000916  9109               	bcf	9,0,b	;volatile
  4037  000918                     l484:
  4038                           
  4039                           ; BSR set to: 15
  4040                           ;CANlib.h: 930: if (filter & 0x00020000)
  4041  000918  0100               	movlb	0	; () banked
  4042  00091A  A3BD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4043  00091C  D003               	goto	l485
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4047  00091E  010F               	movlb	15	; () banked
  4048  000920  8309               	bsf	9,1,b	;volatile
  4049  000922  D002               	goto	l486
  4050  000924                     l485:
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;CANlib.h: 932: else
  4054                           ;CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4055  000924  010F               	movlb	15	; () banked
  4056  000926  9309               	bcf	9,1,b	;volatile
  4057  000928                     l486:
  4058                           
  4059                           ; BSR set to: 15
  4060                           ;CANlib.h: 935: if (filter & 0x00040000)
  4061  000928  0100               	movlb	0	; () banked
  4062  00092A  A5BD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4063  00092C  D003               	goto	l487
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4067  00092E  010F               	movlb	15	; () banked
  4068  000930  8B09               	bsf	9,5,b	;volatile
  4069  000932  D002               	goto	l488
  4070  000934                     l487:
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;CANlib.h: 937: else
  4074                           ;CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4075  000934  010F               	movlb	15	; () banked
  4076  000936  9B09               	bcf	9,5,b	;volatile
  4077  000938                     l488:
  4078                           
  4079                           ; BSR set to: 15
  4080                           ;CANlib.h: 940: if (filter & 0x00080000)
  4081  000938  0100               	movlb	0	; () banked
  4082  00093A  A7BD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4083  00093C  D003               	goto	l489
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4087  00093E  010F               	movlb	15	; () banked
  4088  000940  8D09               	bsf	9,6,b	;volatile
  4089  000942  D002               	goto	l490
  4090  000944                     l489:
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;CANlib.h: 942: else
  4094                           ;CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4095  000944  010F               	movlb	15	; () banked
  4096  000946  9D09               	bcf	9,6,b	;volatile
  4097  000948                     l490:
  4098                           
  4099                           ; BSR set to: 15
  4100                           ;CANlib.h: 945: if (filter & 0x00100000)
  4101  000948  0100               	movlb	0	; () banked
  4102  00094A  A9BD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4103  00094C  D003               	goto	l491
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4107  00094E  010F               	movlb	15	; () banked
  4108  000950  8F09               	bsf	9,7,b	;volatile
  4109  000952  D002               	goto	l4302
  4110  000954                     l491:
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;CANlib.h: 947: else
  4114                           ;CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4115  000954  010F               	movlb	15	; () banked
  4116  000956  9F09               	bcf	9,7,b	;volatile
  4117  000958                     l4302:
  4118                           
  4119                           ; BSR set to: 15
  4120                           ;CANlib.h: 950: tamp = (filter >> 21);
  4121  000958  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  4122  00095C  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4123  000960  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4124  000964  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4125  000968  0E16               	movlw	22
  4126  00096A  D006               	goto	u5270
  4127  00096C                     u5275:
  4128  00096C  0100               	movlb	0	; () banked
  4129  00096E  90D8               	bcf	status,0,c
  4130  000970  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4131  000972  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4132  000974  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4133  000976  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  4134  000978                     u5270:
  4135  000978  2EE8               	decfsz	wreg,f,c
  4136  00097A  D7F8               	goto	u5275
  4137  00097C  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4138  000980  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4139  000984  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4140  000988  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;CANlib.h: 951: tamp = tamp & 0x000000FF;
  4144  00098C  0100               	movlb	0	; () banked
  4145  00098E  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  4146  000990  0100               	movlb	0	; () banked
  4147  000992  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4148  000994  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4149  000996  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4150  000998  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4154  00099A  C0C5  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4155  00099E                     l4308:
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;CANlib.h: 953: }
  4159                           ;CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4160  00099E  0E03               	movlw	3
  4161  0009A0  0100               	movlb	0	; () banked
  4162  0009A2  19C4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4163  0009A4  A4D8               	btfss	status,2,c
  4164  0009A6  D089               	goto	l4342
  4165                           
  4166                           ; BSR set to: 0
  4167  0009A8  0EF7               	movlw	247
  4168  0009AA  0100               	movlb	0	; () banked
  4169  0009AC  19BF               	xorwf	CANSetFilter@type& (0+255),w,b
  4170  0009AE  A4D8               	btfss	status,2,c
  4171  0009B0  D084               	goto	l4342
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;CANlib.h: 956: {
  4175                           ;CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  4176  0009B2  010F               	movlb	15	; () banked
  4177  0009B4  870D               	bsf	13,3,b	;volatile
  4178                           
  4179                           ; BSR set to: 15
  4180                           ;CANlib.h: 959: tamp = filter & 0x000000FF;
  4181  0009B6  0100               	movlb	0	; () banked
  4182  0009B8  51BB               	movf	CANSetFilter@filter& (0+255),w,b
  4183  0009BA  0100               	movlb	0	; () banked
  4184  0009BC  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4185  0009BE  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4186  0009C0  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4187  0009C2  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  4191  0009C4  C0C5  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;CANlib.h: 962: tamp = filter & 0x0000FF00;
  4195  0009C8  0E00               	movlw	0
  4196  0009CA  0100               	movlb	0	; () banked
  4197  0009CC  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  4198  0009CE  0100               	movlb	0	; () banked
  4199  0009D0  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4200  0009D2  0EFF               	movlw	255
  4201  0009D4  0100               	movlb	0	; () banked
  4202  0009D6  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4203  0009D8  0100               	movlb	0	; () banked
  4204  0009DA  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4205  0009DC  0E00               	movlw	0
  4206  0009DE  0100               	movlb	0	; () banked
  4207  0009E0  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4208  0009E2  0100               	movlb	0	; () banked
  4209  0009E4  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4210  0009E6  0E00               	movlw	0
  4211  0009E8  0100               	movlb	0	; () banked
  4212  0009EA  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4213  0009EC  0100               	movlb	0	; () banked
  4214  0009EE  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;CANlib.h: 963: tamp = tamp >> 8;
  4218  0009F0  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  4219  0009F4  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4220  0009F8  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4221  0009FC  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4222  000A00  C0C1  F0C0         	movff	??_CANSetFilter+1,??_CANSetFilter
  4223  000A04  C0C2  F0C1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4224  000A08  C0C3  F0C2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4225  000A0C  0100               	movlb	0	; () banked
  4226  000A0E  6BC3               	clrf	(??_CANSetFilter+3)& (0+255),b
  4227  000A10  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4228  000A14  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4229  000A18  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4230  000A1C  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  4234  000A20  C0C5  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;CANlib.h: 966: if (filter & 0x00010000)
  4238  000A24  0100               	movlb	0	; () banked
  4239  000A26  A1BD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4240  000A28  D003               	goto	l494
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  4244  000A2A  010F               	movlb	15	; () banked
  4245  000A2C  810D               	bsf	13,0,b	;volatile
  4246  000A2E  D002               	goto	l495
  4247  000A30                     l494:
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;CANlib.h: 968: else
  4251                           ;CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  4252  000A30  010F               	movlb	15	; () banked
  4253  000A32  910D               	bcf	13,0,b	;volatile
  4254  000A34                     l495:
  4255                           
  4256                           ; BSR set to: 15
  4257                           ;CANlib.h: 971: if (filter & 0x00020000)
  4258  000A34  0100               	movlb	0	; () banked
  4259  000A36  A3BD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4260  000A38  D003               	goto	l496
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  4264  000A3A  010F               	movlb	15	; () banked
  4265  000A3C  830D               	bsf	13,1,b	;volatile
  4266  000A3E  D002               	goto	l497
  4267  000A40                     l496:
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;CANlib.h: 973: else
  4271                           ;CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  4272  000A40  010F               	movlb	15	; () banked
  4273  000A42  930D               	bcf	13,1,b	;volatile
  4274  000A44                     l497:
  4275                           
  4276                           ; BSR set to: 15
  4277                           ;CANlib.h: 976: if (filter & 0x00040000)
  4278  000A44  0100               	movlb	0	; () banked
  4279  000A46  A5BD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4280  000A48  D003               	goto	l498
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  4284  000A4A  010F               	movlb	15	; () banked
  4285  000A4C  8B0D               	bsf	13,5,b	;volatile
  4286  000A4E  D002               	goto	l499
  4287  000A50                     l498:
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;CANlib.h: 978: else
  4291                           ;CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  4292  000A50  010F               	movlb	15	; () banked
  4293  000A52  9B0D               	bcf	13,5,b	;volatile
  4294  000A54                     l499:
  4295                           
  4296                           ; BSR set to: 15
  4297                           ;CANlib.h: 981: if (filter & 0x00080000)
  4298  000A54  0100               	movlb	0	; () banked
  4299  000A56  A7BD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4300  000A58  D003               	goto	l500
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  4304  000A5A  010F               	movlb	15	; () banked
  4305  000A5C  8D0D               	bsf	13,6,b	;volatile
  4306  000A5E  D002               	goto	l501
  4307  000A60                     l500:
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;CANlib.h: 983: else
  4311                           ;CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  4312  000A60  010F               	movlb	15	; () banked
  4313  000A62  9D0D               	bcf	13,6,b	;volatile
  4314  000A64                     l501:
  4315                           
  4316                           ; BSR set to: 15
  4317                           ;CANlib.h: 986: if (filter & 0x00100000)
  4318  000A64  0100               	movlb	0	; () banked
  4319  000A66  A9BD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4320  000A68  D003               	goto	l502
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  4324  000A6A  010F               	movlb	15	; () banked
  4325  000A6C  8F0D               	bsf	13,7,b	;volatile
  4326  000A6E  D002               	goto	l4336
  4327  000A70                     l502:
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;CANlib.h: 988: else
  4331                           ;CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  4332  000A70  010F               	movlb	15	; () banked
  4333  000A72  9F0D               	bcf	13,7,b	;volatile
  4334  000A74                     l4336:
  4335                           
  4336                           ; BSR set to: 15
  4337                           ;CANlib.h: 991: tamp = (filter >> 21);
  4338  000A74  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  4339  000A78  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4340  000A7C  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4341  000A80  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4342  000A84  0E16               	movlw	22
  4343  000A86  D006               	goto	u5350
  4344  000A88                     u5355:
  4345  000A88  0100               	movlb	0	; () banked
  4346  000A8A  90D8               	bcf	status,0,c
  4347  000A8C  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4348  000A8E  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4349  000A90  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4350  000A92  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  4351  000A94                     u5350:
  4352  000A94  2EE8               	decfsz	wreg,f,c
  4353  000A96  D7F8               	goto	u5355
  4354  000A98  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4355  000A9C  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4356  000AA0  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4357  000AA4  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;CANlib.h: 992: tamp = tamp & 0x000000FF;
  4361  000AA8  0100               	movlb	0	; () banked
  4362  000AAA  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  4363  000AAC  0100               	movlb	0	; () banked
  4364  000AAE  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4365  000AB0  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4366  000AB2  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4367  000AB4  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  4371  000AB6  C0C5  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4372  000ABA                     l4342:
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;CANlib.h: 994: }
  4376                           ;CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4377  000ABA  0E04               	movlw	4
  4378  000ABC  0100               	movlb	0	; () banked
  4379  000ABE  19C4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4380  000AC0  A4D8               	btfss	status,2,c
  4381  000AC2  D089               	goto	l4376
  4382                           
  4383                           ; BSR set to: 0
  4384  000AC4  0EF7               	movlw	247
  4385  000AC6  0100               	movlb	0	; () banked
  4386  000AC8  19BF               	xorwf	CANSetFilter@type& (0+255),w,b
  4387  000ACA  A4D8               	btfss	status,2,c
  4388  000ACC  D084               	goto	l4376
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;CANlib.h: 997: {
  4392                           ;CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  4393  000ACE  010F               	movlb	15	; () banked
  4394  000AD0  8711               	bsf	17,3,b	;volatile
  4395                           
  4396                           ; BSR set to: 15
  4397                           ;CANlib.h: 1000: tamp = filter & 0x000000FF;
  4398  000AD2  0100               	movlb	0	; () banked
  4399  000AD4  51BB               	movf	CANSetFilter@filter& (0+255),w,b
  4400  000AD6  0100               	movlb	0	; () banked
  4401  000AD8  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4402  000ADA  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4403  000ADC  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4404  000ADE  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  4408  000AE0  C0C5  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;CANlib.h: 1003: tamp = filter & 0x0000FF00;
  4412  000AE4  0E00               	movlw	0
  4413  000AE6  0100               	movlb	0	; () banked
  4414  000AE8  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  4415  000AEA  0100               	movlb	0	; () banked
  4416  000AEC  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4417  000AEE  0EFF               	movlw	255
  4418  000AF0  0100               	movlb	0	; () banked
  4419  000AF2  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4420  000AF4  0100               	movlb	0	; () banked
  4421  000AF6  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4422  000AF8  0E00               	movlw	0
  4423  000AFA  0100               	movlb	0	; () banked
  4424  000AFC  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4425  000AFE  0100               	movlb	0	; () banked
  4426  000B00  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4427  000B02  0E00               	movlw	0
  4428  000B04  0100               	movlb	0	; () banked
  4429  000B06  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4430  000B08  0100               	movlb	0	; () banked
  4431  000B0A  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;CANlib.h: 1004: tamp = tamp >> 8;
  4435  000B0C  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  4436  000B10  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4437  000B14  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4438  000B18  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4439  000B1C  C0C1  F0C0         	movff	??_CANSetFilter+1,??_CANSetFilter
  4440  000B20  C0C2  F0C1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4441  000B24  C0C3  F0C2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4442  000B28  0100               	movlb	0	; () banked
  4443  000B2A  6BC3               	clrf	(??_CANSetFilter+3)& (0+255),b
  4444  000B2C  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4445  000B30  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4446  000B34  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4447  000B38  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  4451  000B3C  C0C5  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;CANlib.h: 1007: if (filter & 0x00010000)
  4455  000B40  0100               	movlb	0	; () banked
  4456  000B42  A1BD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4457  000B44  D003               	goto	l505
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  4461  000B46  010F               	movlb	15	; () banked
  4462  000B48  8111               	bsf	17,0,b	;volatile
  4463  000B4A  D002               	goto	l506
  4464  000B4C                     l505:
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;CANlib.h: 1009: else
  4468                           ;CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  4469  000B4C  010F               	movlb	15	; () banked
  4470  000B4E  9111               	bcf	17,0,b	;volatile
  4471  000B50                     l506:
  4472                           
  4473                           ; BSR set to: 15
  4474                           ;CANlib.h: 1012: if (filter & 0x00020000)
  4475  000B50  0100               	movlb	0	; () banked
  4476  000B52  A3BD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4477  000B54  D003               	goto	l507
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  4481  000B56  010F               	movlb	15	; () banked
  4482  000B58  8311               	bsf	17,1,b	;volatile
  4483  000B5A  D002               	goto	l508
  4484  000B5C                     l507:
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;CANlib.h: 1014: else
  4488                           ;CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  4489  000B5C  010F               	movlb	15	; () banked
  4490  000B5E  9311               	bcf	17,1,b	;volatile
  4491  000B60                     l508:
  4492                           
  4493                           ; BSR set to: 15
  4494                           ;CANlib.h: 1017: if (filter & 0x00040000)
  4495  000B60  0100               	movlb	0	; () banked
  4496  000B62  A5BD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4497  000B64  D003               	goto	l509
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  4501  000B66  010F               	movlb	15	; () banked
  4502  000B68  8B11               	bsf	17,5,b	;volatile
  4503  000B6A  D002               	goto	l510
  4504  000B6C                     l509:
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;CANlib.h: 1019: else
  4508                           ;CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  4509  000B6C  010F               	movlb	15	; () banked
  4510  000B6E  9B11               	bcf	17,5,b	;volatile
  4511  000B70                     l510:
  4512                           
  4513                           ; BSR set to: 15
  4514                           ;CANlib.h: 1022: if (filter & 0x00080000)
  4515  000B70  0100               	movlb	0	; () banked
  4516  000B72  A7BD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4517  000B74  D003               	goto	l511
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  4521  000B76  010F               	movlb	15	; () banked
  4522  000B78  8D11               	bsf	17,6,b	;volatile
  4523  000B7A  D002               	goto	l512
  4524  000B7C                     l511:
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;CANlib.h: 1024: else
  4528                           ;CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  4529  000B7C  010F               	movlb	15	; () banked
  4530  000B7E  9D11               	bcf	17,6,b	;volatile
  4531  000B80                     l512:
  4532                           
  4533                           ; BSR set to: 15
  4534                           ;CANlib.h: 1027: if (filter & 0x00100000)
  4535  000B80  0100               	movlb	0	; () banked
  4536  000B82  A9BD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4537  000B84  D003               	goto	l513
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  4541  000B86  010F               	movlb	15	; () banked
  4542  000B88  8F11               	bsf	17,7,b	;volatile
  4543  000B8A  D002               	goto	l4370
  4544  000B8C                     l513:
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;CANlib.h: 1029: else
  4548                           ;CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  4549  000B8C  010F               	movlb	15	; () banked
  4550  000B8E  9F11               	bcf	17,7,b	;volatile
  4551  000B90                     l4370:
  4552                           
  4553                           ; BSR set to: 15
  4554                           ;CANlib.h: 1032: tamp = (filter >> 21);
  4555  000B90  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  4556  000B94  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4557  000B98  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4558  000B9C  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4559  000BA0  0E16               	movlw	22
  4560  000BA2  D006               	goto	u5430
  4561  000BA4                     u5435:
  4562  000BA4  0100               	movlb	0	; () banked
  4563  000BA6  90D8               	bcf	status,0,c
  4564  000BA8  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4565  000BAA  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4566  000BAC  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4567  000BAE  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  4568  000BB0                     u5430:
  4569  000BB0  2EE8               	decfsz	wreg,f,c
  4570  000BB2  D7F8               	goto	u5435
  4571  000BB4  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4572  000BB8  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4573  000BBC  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4574  000BC0  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;CANlib.h: 1033: tamp = tamp & 0x000000FF;
  4578  000BC4  0100               	movlb	0	; () banked
  4579  000BC6  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  4580  000BC8  0100               	movlb	0	; () banked
  4581  000BCA  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4582  000BCC  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4583  000BCE  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4584  000BD0  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  4588  000BD2  C0C5  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4589  000BD6                     l4376:
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;CANlib.h: 1035: }
  4593                           ;CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4594  000BD6  0E05               	movlw	5
  4595  000BD8  0100               	movlb	0	; () banked
  4596  000BDA  19C4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4597  000BDC  A4D8               	btfss	status,2,c
  4598  000BDE  0012               	return	
  4599                           
  4600                           ; BSR set to: 0
  4601  000BE0  0EF7               	movlw	247
  4602  000BE2  0100               	movlb	0	; () banked
  4603  000BE4  19BF               	xorwf	CANSetFilter@type& (0+255),w,b
  4604  000BE6  A4D8               	btfss	status,2,c
  4605  000BE8  0012               	return	
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;CANlib.h: 1038: {
  4609                           ;CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  4610  000BEA  010F               	movlb	15	; () banked
  4611  000BEC  8715               	bsf	21,3,b	;volatile
  4612                           
  4613                           ; BSR set to: 15
  4614                           ;CANlib.h: 1041: tamp = filter & 0x000000FF;
  4615  000BEE  0100               	movlb	0	; () banked
  4616  000BF0  51BB               	movf	CANSetFilter@filter& (0+255),w,b
  4617  000BF2  0100               	movlb	0	; () banked
  4618  000BF4  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4619  000BF6  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4620  000BF8  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4621  000BFA  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  4625  000BFC  C0C5  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;CANlib.h: 1044: tamp = filter & 0x0000FF00;
  4629  000C00  0E00               	movlw	0
  4630  000C02  0100               	movlb	0	; () banked
  4631  000C04  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  4632  000C06  0100               	movlb	0	; () banked
  4633  000C08  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4634  000C0A  0EFF               	movlw	255
  4635  000C0C  0100               	movlb	0	; () banked
  4636  000C0E  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4637  000C10  0100               	movlb	0	; () banked
  4638  000C12  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4639  000C14  0E00               	movlw	0
  4640  000C16  0100               	movlb	0	; () banked
  4641  000C18  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4642  000C1A  0100               	movlb	0	; () banked
  4643  000C1C  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4644  000C1E  0E00               	movlw	0
  4645  000C20  0100               	movlb	0	; () banked
  4646  000C22  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4647  000C24  0100               	movlb	0	; () banked
  4648  000C26  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;CANlib.h: 1045: tamp = tamp >> 8;
  4652  000C28  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  4653  000C2C  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4654  000C30  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4655  000C34  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4656  000C38  C0C1  F0C0         	movff	??_CANSetFilter+1,??_CANSetFilter
  4657  000C3C  C0C2  F0C1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4658  000C40  C0C3  F0C2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4659  000C44  0100               	movlb	0	; () banked
  4660  000C46  6BC3               	clrf	(??_CANSetFilter+3)& (0+255),b
  4661  000C48  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4662  000C4C  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4663  000C50  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4664  000C54  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  4668  000C58  C0C5  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;CANlib.h: 1048: if (filter & 0x00010000)
  4672  000C5C  0100               	movlb	0	; () banked
  4673  000C5E  A1BD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4674  000C60  D003               	goto	l516
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  4678  000C62  010F               	movlb	15	; () banked
  4679  000C64  8115               	bsf	21,0,b	;volatile
  4680  000C66  D002               	goto	l517
  4681  000C68                     l516:
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;CANlib.h: 1050: else
  4685                           ;CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  4686  000C68  010F               	movlb	15	; () banked
  4687  000C6A  9115               	bcf	21,0,b	;volatile
  4688  000C6C                     l517:
  4689                           
  4690                           ; BSR set to: 15
  4691                           ;CANlib.h: 1053: if (filter & 0x00020000)
  4692  000C6C  0100               	movlb	0	; () banked
  4693  000C6E  A3BD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4694  000C70  D003               	goto	l518
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  4698  000C72  010F               	movlb	15	; () banked
  4699  000C74  8315               	bsf	21,1,b	;volatile
  4700  000C76  D002               	goto	l519
  4701  000C78                     l518:
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;CANlib.h: 1055: else
  4705                           ;CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  4706  000C78  010F               	movlb	15	; () banked
  4707  000C7A  9315               	bcf	21,1,b	;volatile
  4708  000C7C                     l519:
  4709                           
  4710                           ; BSR set to: 15
  4711                           ;CANlib.h: 1058: if (filter & 0x00040000)
  4712  000C7C  0100               	movlb	0	; () banked
  4713  000C7E  A5BD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4714  000C80  D003               	goto	l520
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  4718  000C82  010F               	movlb	15	; () banked
  4719  000C84  8B15               	bsf	21,5,b	;volatile
  4720  000C86  D002               	goto	l521
  4721  000C88                     l520:
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;CANlib.h: 1060: else
  4725                           ;CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  4726  000C88  010F               	movlb	15	; () banked
  4727  000C8A  9B15               	bcf	21,5,b	;volatile
  4728  000C8C                     l521:
  4729                           
  4730                           ; BSR set to: 15
  4731                           ;CANlib.h: 1063: if (filter & 0x00080000)
  4732  000C8C  0100               	movlb	0	; () banked
  4733  000C8E  A7BD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4734  000C90  D003               	goto	l522
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  4738  000C92  010F               	movlb	15	; () banked
  4739  000C94  8D15               	bsf	21,6,b	;volatile
  4740  000C96  D002               	goto	l523
  4741  000C98                     l522:
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;CANlib.h: 1065: else
  4745                           ;CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  4746  000C98  010F               	movlb	15	; () banked
  4747  000C9A  9D15               	bcf	21,6,b	;volatile
  4748  000C9C                     l523:
  4749                           
  4750                           ; BSR set to: 15
  4751                           ;CANlib.h: 1068: if (filter & 0x00100000)
  4752  000C9C  0100               	movlb	0	; () banked
  4753  000C9E  A9BD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4754  000CA0  D003               	goto	l524
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  4758  000CA2  010F               	movlb	15	; () banked
  4759  000CA4  8F15               	bsf	21,7,b	;volatile
  4760  000CA6  D002               	goto	l4404
  4761  000CA8                     l524:
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;CANlib.h: 1070: else
  4765                           ;CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  4766  000CA8  010F               	movlb	15	; () banked
  4767  000CAA  9F15               	bcf	21,7,b	;volatile
  4768  000CAC                     l4404:
  4769                           
  4770                           ; BSR set to: 15
  4771                           ;CANlib.h: 1073: tamp = (filter >> 21);
  4772  000CAC  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  4773  000CB0  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4774  000CB4  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4775  000CB8  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4776  000CBC  0E16               	movlw	22
  4777  000CBE  D006               	goto	u5510
  4778  000CC0                     u5515:
  4779  000CC0  0100               	movlb	0	; () banked
  4780  000CC2  90D8               	bcf	status,0,c
  4781  000CC4  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4782  000CC6  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4783  000CC8  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4784  000CCA  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  4785  000CCC                     u5510:
  4786  000CCC  2EE8               	decfsz	wreg,f,c
  4787  000CCE  D7F8               	goto	u5515
  4788  000CD0  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4789  000CD4  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4790  000CD8  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4791  000CDC  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;CANlib.h: 1074: tamp = tamp & 0x000000FF;
  4795  000CE0  0100               	movlb	0	; () banked
  4796  000CE2  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  4797  000CE4  0100               	movlb	0	; () banked
  4798  000CE6  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4799  000CE8  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4800  000CEA  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4801  000CEC  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  4805  000CEE  C0C5  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4806  000CF2  0012               	return	
  4807  000CF4                     __end_of_CANSetFilter:
  4808                           	opt stack 0
  4809                           tblptru	equ	0xFF8
  4810                           tblptrh	equ	0xFF7
  4811                           tblptrl	equ	0xFF6
  4812                           tablat	equ	0xFF5
  4813                           intcon	equ	0xFF2
  4814                           postinc0	equ	0xFEE
  4815                           wreg	equ	0xFE8
  4816                           postdec1	equ	0xFE5
  4817                           fsr1l	equ	0xFE1
  4818                           status	equ	0xFD8
  4819                           
  4820 ;; *************** function _CANOperationMode *****************
  4821 ;; Defined at:
  4822 ;;		line 206 in file "CANlib.h"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;  mode            1    wreg     enum E16838
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  mode            1    0[BANK0 ] enum E16838
  4827 ;; Return value:  Size  Location     Type
  4828 ;;		None               void
  4829 ;; Registers used:
  4830 ;;		wreg, status,2, status,0
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4836 ;;      Params:         0       0       0       0
  4837 ;;      Locals:         0       1       0       0
  4838 ;;      Temps:          0       0       0       0
  4839 ;;      Totals:         0       1       0       0
  4840 ;;Total ram usage:        1 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:    2
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_CANInitialize
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text6
  4851  0027D8                     __ptext6:
  4852                           	opt stack 0
  4853  0027D8                     _CANOperationMode:
  4854                           	opt stack 26
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;incstack = 0
  4858                           ;CANOperationMode@mode stored from wreg
  4859  0027D8  0100               	movlb	0	; () banked
  4860  0027DA  6FBB               	movwf	CANOperationMode@mode& (0+255),b
  4861                           
  4862                           ;CANlib.h: 208: CANCON = mode;
  4863  0027DC  C0BB  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  4864  0027E0                     l4000:
  4865  0027E0  506E               	movf	3950,w,c	;volatile
  4866  0027E2  0BE0               	andlw	224
  4867  0027E4  0100               	movlb	0	; () banked
  4868  0027E6  19BB               	xorwf	CANOperationMode@mode& (0+255),w,b
  4869  0027E8  B4D8               	btfsc	status,2,c
  4870  0027EA  0012               	return	
  4871  0027EC  D7F9               	goto	l4000
  4872  0027EE                     __end_of_CANOperationMode:
  4873                           	opt stack 0
  4874                           tblptru	equ	0xFF8
  4875                           tblptrh	equ	0xFF7
  4876                           tblptrl	equ	0xFF6
  4877                           tablat	equ	0xFF5
  4878                           intcon	equ	0xFF2
  4879                           postinc0	equ	0xFEE
  4880                           wreg	equ	0xFE8
  4881                           postdec1	equ	0xFE5
  4882                           fsr1l	equ	0xFE1
  4883                           status	equ	0xFD8
  4884                           
  4885 ;; *************** function _battery_measure *****************
  4886 ;; Defined at:
  4887 ;;		line 311 in file "motore.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;		None
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;		None
  4892 ;; Return value:  Size  Location     Type
  4893 ;;		None               void
  4894 ;; Registers used:
  4895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4901 ;;      Params:         0       0       0       0
  4902 ;;      Locals:         0       0       0       0
  4903 ;;      Temps:          0       0       0       0
  4904 ;;      Totals:         0       0       0       0
  4905 ;;Total ram usage:        0 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:    4
  4908 ;; This function calls:
  4909 ;;		_CANisTxReady
  4910 ;;		_CANsendMessage
  4911 ;;		___awdiv
  4912 ;;		___wmul
  4913 ;;		_delay_ms
  4914 ;; This function is called by:
  4915 ;;		_main
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text7
  4920  0024C0                     __ptext7:
  4921                           	opt stack 0
  4922  0024C0                     _battery_measure:
  4923                           	opt stack 26
  4924                           
  4925                           ;motore.c: 313: ADCON0bits.GO = 1;
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;incstack = 0
  4929  0024C0  82C2               	bsf	4034,1,c	;volatile
  4930  0024C2                     l708:
  4931  0024C2  B2C2               	btfsc	4034,1,c	;volatile
  4932  0024C4  D7FE               	goto	l708
  4933                           
  4934                           ;motore.c: 315: vBatt = ADRESH;
  4935  0024C6  CFC4 F092          	movff	4036,_vBatt	;volatile
  4936  0024CA  0100               	movlb	0	; () banked
  4937  0024CC  6B93               	clrf	(_vBatt+1)& (0+255),b
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;motore.c: 316: vBatt = (vBatt * 14) / 255;
  4941  0024CE  C092  F0C2         	movff	_vBatt,___wmul@multiplier
  4942  0024D2  C093  F0C3         	movff	_vBatt+1,___wmul@multiplier+1
  4943  0024D6  0E00               	movlw	0
  4944  0024D8  0100               	movlb	0	; () banked
  4945  0024DA  6FC5               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4946  0024DC  0E0E               	movlw	14
  4947  0024DE  6FC4               	movwf	___wmul@multiplicand& (0+255),b
  4948  0024E0  EC7E  F013         	call	___wmul	;wreg free
  4949  0024E4  C0C2  F0C8         	movff	?___wmul,___awdiv@dividend
  4950  0024E8  C0C3  F0C9         	movff	?___wmul+1,___awdiv@dividend+1
  4951  0024EC  0E00               	movlw	0
  4952  0024EE  0100               	movlb	0	; () banked
  4953  0024F0  6FCB               	movwf	(___awdiv@divisor+1)& (0+255),b
  4954  0024F2  69CA               	setf	___awdiv@divisor& (0+255),b
  4955  0024F4  ECA9  F011         	call	___awdiv	;wreg free
  4956  0024F8  C0C8  F092         	movff	?___awdiv,_vBatt
  4957  0024FC  C0C9  F093         	movff	?___awdiv+1,_vBatt+1
  4958                           
  4959                           ;motore.c: 317: if (vBatt < 8) {
  4960  002500  0100               	movlb	0	; () banked
  4961  002502  BF93               	btfsc	(_vBatt+1)& (0+255),7,b
  4962  002504  D008               	goto	l4900
  4963  002506  0100               	movlb	0	; () banked
  4964  002508  5193               	movf	(_vBatt+1)& (0+255),w,b
  4965  00250A  E129               	bnz	l716
  4966  00250C  0E08               	movlw	8
  4967  00250E  0100               	movlb	0	; () banked
  4968  002510  5D92               	subwf	_vBatt& (0+255),w,b
  4969  002512  B0D8               	btfsc	status,0,c
  4970  002514  0012               	return	
  4971  002516                     l4900:
  4972  002516  ECC9  F013         	call	_CANisTxReady	;wreg free
  4973  00251A  06E8               	decf	wreg,f,c
  4974  00251C  A4D8               	btfss	status,2,c
  4975  00251E  D7FB               	goto	l4900
  4976                           
  4977                           ;motore.c: 319: }
  4978                           ;motore.c: 320: CANsendMessage(0b00000000000000000000000001001, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  4979  002520  0E09               	movlw	9
  4980  002522  0100               	movlb	0	; () banked
  4981  002524  6FBB               	movwf	CANsendMessage@identifier& (0+255),b
  4982  002526  0E00               	movlw	0
  4983  002528  6FBC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  4984  00252A  0E00               	movlw	0
  4985  00252C  6FBD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  4986  00252E  0E00               	movlw	0
  4987  002530  6FBE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  4988  002532  0EA3               	movlw	low _data_array
  4989  002534  0100               	movlb	0	; () banked
  4990  002536  6FBF               	movwf	CANsendMessage@data& (0+255),b
  4991  002538  0E00               	movlw	high _data_array
  4992  00253A  0100               	movlb	0	; () banked
  4993  00253C  6FC0               	movwf	(CANsendMessage@data+1)& (0+255),b
  4994  00253E  0E08               	movlw	8
  4995  002540  0100               	movlb	0	; () banked
  4996  002542  6FC1               	movwf	CANsendMessage@dataLength& (0+255),b
  4997  002544  0EFC               	movlw	252
  4998  002546  0100               	movlb	0	; () banked
  4999  002548  6FC2               	movwf	CANsendMessage@flags& (0+255),b
  5000  00254A  EC7A  F006         	call	_CANsendMessage	;wreg free
  5001                           
  5002                           ;motore.c: 322: delay_ms(1000);
  5003  00254E  0E03               	movlw	3
  5004  002550  0100               	movlb	0	; () banked
  5005  002552  6FC9               	movwf	(delay_ms@value_ms+1)& (0+255),b
  5006  002554  0EE8               	movlw	232
  5007  002556  6FC8               	movwf	delay_ms@value_ms& (0+255),b
  5008  002558  EC99  F013         	call	_delay_ms	;wreg free
  5009                           
  5010                           ;motore.c: 323: } else {
  5011  00255C  0012               	return	
  5012  00255E                     l716:
  5013  00255E  0012               	return		;funcret
  5014  002560                     __end_of_battery_measure:
  5015                           	opt stack 0
  5016                           tblptru	equ	0xFF8
  5017                           tblptrh	equ	0xFF7
  5018                           tblptrl	equ	0xFF6
  5019                           tablat	equ	0xFF5
  5020                           intcon	equ	0xFF2
  5021                           postinc0	equ	0xFEE
  5022                           wreg	equ	0xFE8
  5023                           postdec1	equ	0xFE5
  5024                           fsr1l	equ	0xFE1
  5025                           status	equ	0xFD8
  5026                           
  5027 ;; *************** function _delay_ms *****************
  5028 ;; Defined at:
  5029 ;;		line 61 in file "delay.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  value_ms        2   13[BANK0 ] unsigned int 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;		None
  5034 ;; Return value:  Size  Location     Type
  5035 ;;		None               void
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5043 ;;      Params:         0       2       0       0
  5044 ;;      Locals:         0       0       0       0
  5045 ;;      Temps:          0       0       0       0
  5046 ;;      Totals:         0       2       0       0
  5047 ;;Total ram usage:        2 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    3
  5050 ;; This function calls:
  5051 ;;		___wmul
  5052 ;; This function is called by:
  5053 ;;		_main
  5054 ;;		_battery_measure
  5055 ;;		_configurazione_iniziale
  5056 ;;		_delay_s
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text8
  5061  002732                     __ptext8:
  5062                           	opt stack 0
  5063  002732                     _delay_ms:
  5064                           	opt stack 27
  5065                           
  5066                           ;delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  5067                           
  5068                           ;incstack = 0
  5069  002732  C042  F0C2         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  5070  002736  0100               	movlb	0	; () banked
  5071  002738  6BC3               	clrf	(___wmul@multiplier+1)& (0+255),b
  5072  00273A  C0C8  F0C4         	movff	delay_ms@value_ms,___wmul@multiplicand
  5073  00273E  C0C9  F0C5         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  5074  002742  EC7E  F013         	call	___wmul	;wreg free
  5075  002746  C0C2  F02C         	movff	?___wmul,_clock_counter_reference	;volatile
  5076  00274A  C0C3  F02D         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  5077                           
  5078                           ;delay.c: 75: while (clock_counter_reference) {
  5079  00274E  D006               	goto	l567
  5080  002750                     l4712:
  5081                           
  5082                           ;delay.c: 85: _delay(240);
  5083  002750  0E50               	movlw	80
  5084  002752                     u6387:
  5085  002752  2EE8               	decfsz	wreg,f,c
  5086  002754  D7FE               	goto	u6387
  5087                           
  5088                           ;delay.c: 88: clock_counter_reference--;
  5089  002756  062C               	decf	_clock_counter_reference,f,c	;volatile
  5090  002758  A0D8               	btfss	status,0,c
  5091  00275A  062D               	decf	_clock_counter_reference+1,f,c	;volatile
  5092  00275C                     l567:
  5093  00275C  502C               	movf	_clock_counter_reference,w,c	;volatile
  5094  00275E  102D               	iorwf	_clock_counter_reference+1,w,c	;volatile
  5095  002760  B4D8               	btfsc	status,2,c
  5096  002762  0012               	return	
  5097  002764  D7F5               	goto	l4712
  5098  002766                     __end_of_delay_ms:
  5099                           	opt stack 0
  5100                           tblptru	equ	0xFF8
  5101                           tblptrh	equ	0xFF7
  5102                           tblptrl	equ	0xFF6
  5103                           tablat	equ	0xFF5
  5104                           intcon	equ	0xFF2
  5105                           postinc0	equ	0xFEE
  5106                           wreg	equ	0xFE8
  5107                           postdec1	equ	0xFE5
  5108                           fsr1l	equ	0xFE1
  5109                           status	equ	0xFD8
  5110                           
  5111 ;; *************** function ___wmul *****************
  5112 ;; Defined at:
  5113 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  multiplier      2    7[BANK0 ] unsigned int 
  5116 ;;  multiplicand    2    9[BANK0 ] unsigned int 
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  product         2   11[BANK0 ] unsigned int 
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  2    7[BANK0 ] unsigned int 
  5121 ;; Registers used:
  5122 ;;		wreg, status,2, status,0, prodl, prodh
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5128 ;;      Params:         0       4       0       0
  5129 ;;      Locals:         0       2       0       0
  5130 ;;      Temps:          0       0       0       0
  5131 ;;      Totals:         0       6       0       0
  5132 ;;Total ram usage:        6 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:    2
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_delay_ms
  5139 ;;		_main
  5140 ;;		_battery_measure
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text9
  5145  0026FC                     __ptext9:
  5146                           	opt stack 0
  5147  0026FC                     ___wmul:
  5148                           	opt stack 27
  5149                           
  5150                           ;incstack = 0
  5151  0026FC  0100               	movlb	0	; () banked
  5152  0026FE  51C2               	movf	___wmul@multiplier& (0+255),w,b
  5153  002700  0100               	movlb	0	; () banked
  5154  002702  03C4               	mulwf	___wmul@multiplicand& (0+255),b
  5155  002704  CFF3 F0C6          	movff	prodl,___wmul@product
  5156  002708  CFF4 F0C7          	movff	prodh,___wmul@product+1
  5157  00270C  0100               	movlb	0	; () banked
  5158  00270E  51C2               	movf	___wmul@multiplier& (0+255),w,b
  5159  002710  0100               	movlb	0	; () banked
  5160  002712  03C5               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5161  002714  50F3               	movf	prodl,w,c
  5162  002716  0100               	movlb	0	; () banked
  5163  002718  27C7               	addwf	(___wmul@product+1)& (0+255),f,b
  5164  00271A  0100               	movlb	0	; () banked
  5165  00271C  51C3               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5166  00271E  0100               	movlb	0	; () banked
  5167  002720  03C4               	mulwf	___wmul@multiplicand& (0+255),b
  5168  002722  50F3               	movf	prodl,w,c
  5169  002724  0100               	movlb	0	; () banked
  5170  002726  27C7               	addwf	(___wmul@product+1)& (0+255),f,b
  5171                           
  5172                           ; BSR set to: 0
  5173  002728  C0C6  F0C2         	movff	___wmul@product,?___wmul
  5174  00272C  C0C7  F0C3         	movff	___wmul@product+1,?___wmul+1
  5175  002730  0012               	return	
  5176  002732                     __end_of___wmul:
  5177                           	opt stack 0
  5178                           tblptru	equ	0xFF8
  5179                           tblptrh	equ	0xFF7
  5180                           tblptrl	equ	0xFF6
  5181                           tablat	equ	0xFF5
  5182                           prodh	equ	0xFF4
  5183                           prodl	equ	0xFF3
  5184                           intcon	equ	0xFF2
  5185                           postinc0	equ	0xFEE
  5186                           wreg	equ	0xFE8
  5187                           postdec1	equ	0xFE5
  5188                           fsr1l	equ	0xFE1
  5189                           status	equ	0xFD8
  5190                           
  5191 ;; *************** function ___awdiv *****************
  5192 ;; Defined at:
  5193 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;  dividend        2   13[BANK0 ] int 
  5196 ;;  divisor         2   15[BANK0 ] int 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  quotient        2   19[BANK0 ] int 
  5199 ;;  sign            1   18[BANK0 ] unsigned char 
  5200 ;;  counter         1   17[BANK0 ] unsigned char 
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  2   13[BANK0 ] int 
  5203 ;; Registers used:
  5204 ;;		wreg, status,2, status,0
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5210 ;;      Params:         0       4       0       0
  5211 ;;      Locals:         0       4       0       0
  5212 ;;      Temps:          0       0       0       0
  5213 ;;      Totals:         0       8       0       0
  5214 ;;Total ram usage:        8 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; Hardware stack levels required when called:    2
  5217 ;; This function calls:
  5218 ;;		Nothing
  5219 ;; This function is called by:
  5220 ;;		_battery_measure
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text10
  5225  002352                     __ptext10:
  5226                           	opt stack 0
  5227  002352                     ___awdiv:
  5228                           	opt stack 27
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;incstack = 0
  5232  002352  0E00               	movlw	0
  5233  002354  0100               	movlb	0	; () banked
  5234  002356  6FCD               	movwf	___awdiv@sign& (0+255),b
  5235                           
  5236                           ; BSR set to: 0
  5237  002358  0100               	movlb	0	; () banked
  5238  00235A  AFCB               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5239  00235C  D008               	goto	l4736
  5240                           
  5241                           ; BSR set to: 0
  5242  00235E  0100               	movlb	0	; () banked
  5243  002360  6DCA               	negf	___awdiv@divisor& (0+255),b
  5244  002362  1FCB               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5245  002364  B0D8               	btfsc	status,0,c
  5246  002366  2BCB               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5247                           
  5248                           ; BSR set to: 0
  5249  002368  0E01               	movlw	1
  5250  00236A  0100               	movlb	0	; () banked
  5251  00236C  6FCD               	movwf	___awdiv@sign& (0+255),b
  5252  00236E                     l4736:
  5253                           
  5254                           ; BSR set to: 0
  5255  00236E  0100               	movlb	0	; () banked
  5256  002370  AFC9               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5257  002372  D008               	goto	l4742
  5258                           
  5259                           ; BSR set to: 0
  5260  002374  0100               	movlb	0	; () banked
  5261  002376  6DC8               	negf	___awdiv@dividend& (0+255),b
  5262  002378  1FC9               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5263  00237A  B0D8               	btfsc	status,0,c
  5264  00237C  2BC9               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5265                           
  5266                           ; BSR set to: 0
  5267  00237E  0E01               	movlw	1
  5268  002380  0100               	movlb	0	; () banked
  5269  002382  1BCD               	xorwf	___awdiv@sign& (0+255),f,b
  5270  002384                     l4742:
  5271                           
  5272                           ; BSR set to: 0
  5273  002384  0E00               	movlw	0
  5274  002386  0100               	movlb	0	; () banked
  5275  002388  6FCF               	movwf	(___awdiv@quotient+1)& (0+255),b
  5276  00238A  0E00               	movlw	0
  5277  00238C  6FCE               	movwf	___awdiv@quotient& (0+255),b
  5278                           
  5279                           ; BSR set to: 0
  5280  00238E  0100               	movlb	0	; () banked
  5281  002390  51CA               	movf	___awdiv@divisor& (0+255),w,b
  5282  002392  0100               	movlb	0	; () banked
  5283  002394  11CB               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5284  002396  B4D8               	btfsc	status,2,c
  5285  002398  D02C               	goto	l4764
  5286                           
  5287                           ; BSR set to: 0
  5288  00239A  0E01               	movlw	1
  5289  00239C  0100               	movlb	0	; () banked
  5290  00239E  6FCC               	movwf	___awdiv@counter& (0+255),b
  5291  0023A0  D006               	goto	l4750
  5292  0023A2                     l4748:
  5293                           
  5294                           ; BSR set to: 0
  5295  0023A2  0100               	movlb	0	; () banked
  5296  0023A4  90D8               	bcf	status,0,c
  5297  0023A6  37CA               	rlcf	___awdiv@divisor& (0+255),f,b
  5298  0023A8  37CB               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5299  0023AA  0100               	movlb	0	; () banked
  5300  0023AC  2BCC               	incf	___awdiv@counter& (0+255),f,b
  5301  0023AE                     l4750:
  5302                           
  5303                           ; BSR set to: 0
  5304  0023AE  0100               	movlb	0	; () banked
  5305  0023B0  AFCB               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5306  0023B2  D7F7               	goto	l4748
  5307  0023B4                     l4752:
  5308                           
  5309                           ; BSR set to: 0
  5310  0023B4  0100               	movlb	0	; () banked
  5311  0023B6  90D8               	bcf	status,0,c
  5312  0023B8  37CE               	rlcf	___awdiv@quotient& (0+255),f,b
  5313  0023BA  37CF               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5314                           
  5315                           ; BSR set to: 0
  5316  0023BC  0100               	movlb	0	; () banked
  5317  0023BE  51CA               	movf	___awdiv@divisor& (0+255),w,b
  5318  0023C0  0100               	movlb	0	; () banked
  5319  0023C2  5DC8               	subwf	___awdiv@dividend& (0+255),w,b
  5320  0023C4  0100               	movlb	0	; () banked
  5321  0023C6  51CB               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5322  0023C8  0100               	movlb	0	; () banked
  5323  0023CA  59C9               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5324  0023CC  A0D8               	btfss	status,0,c
  5325  0023CE  D00A               	goto	l4760
  5326                           
  5327                           ; BSR set to: 0
  5328  0023D0  0100               	movlb	0	; () banked
  5329  0023D2  51CA               	movf	___awdiv@divisor& (0+255),w,b
  5330  0023D4  0100               	movlb	0	; () banked
  5331  0023D6  5FC8               	subwf	___awdiv@dividend& (0+255),f,b
  5332  0023D8  0100               	movlb	0	; () banked
  5333  0023DA  51CB               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5334  0023DC  0100               	movlb	0	; () banked
  5335  0023DE  5BC9               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5336                           
  5337                           ; BSR set to: 0
  5338  0023E0  0100               	movlb	0	; () banked
  5339  0023E2  81CE               	bsf	___awdiv@quotient& (0+255),0,b
  5340  0023E4                     l4760:
  5341                           
  5342                           ; BSR set to: 0
  5343  0023E4  0100               	movlb	0	; () banked
  5344  0023E6  90D8               	bcf	status,0,c
  5345  0023E8  33CB               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5346  0023EA  33CA               	rrcf	___awdiv@divisor& (0+255),f,b
  5347                           
  5348                           ; BSR set to: 0
  5349  0023EC  0100               	movlb	0	; () banked
  5350  0023EE  2FCC               	decfsz	___awdiv@counter& (0+255),f,b
  5351  0023F0  D7E1               	goto	l4752
  5352  0023F2                     l4764:
  5353                           
  5354                           ; BSR set to: 0
  5355  0023F2  0100               	movlb	0	; () banked
  5356  0023F4  51CD               	movf	___awdiv@sign& (0+255),w,b
  5357  0023F6  0100               	movlb	0	; () banked
  5358  0023F8  B4D8               	btfsc	status,2,c
  5359  0023FA  D005               	goto	l4768
  5360                           
  5361                           ; BSR set to: 0
  5362  0023FC  0100               	movlb	0	; () banked
  5363  0023FE  6DCE               	negf	___awdiv@quotient& (0+255),b
  5364  002400  1FCF               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5365  002402  B0D8               	btfsc	status,0,c
  5366  002404  2BCF               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5367  002406                     l4768:
  5368                           
  5369                           ; BSR set to: 0
  5370  002406  C0CE  F0C8         	movff	___awdiv@quotient,?___awdiv
  5371  00240A  C0CF  F0C9         	movff	___awdiv@quotient+1,?___awdiv+1
  5372  00240E  0012               	return	
  5373  002410                     __end_of___awdiv:
  5374                           	opt stack 0
  5375                           tblptru	equ	0xFF8
  5376                           tblptrh	equ	0xFF7
  5377                           tblptrl	equ	0xFF6
  5378                           tablat	equ	0xFF5
  5379                           prodh	equ	0xFF4
  5380                           prodl	equ	0xFF3
  5381                           intcon	equ	0xFF2
  5382                           postinc0	equ	0xFEE
  5383                           wreg	equ	0xFE8
  5384                           postdec1	equ	0xFE5
  5385                           fsr1l	equ	0xFE1
  5386                           status	equ	0xFD8
  5387                           
  5388 ;; *************** function _CANsendMessage *****************
  5389 ;; Defined at:
  5390 ;;		line 294 in file "CANlib.h"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  identifier      4    0[BANK0 ] unsigned long 
  5393 ;;  data            2    4[BANK0 ] PTR unsigned char 
  5394 ;;		 -> data_array1(8), data_array(8), data_array_debug(8), 
  5395 ;;  dataLength      1    6[BANK0 ] unsigned char 
  5396 ;;  flags           1    7[BANK0 ] enum E16866
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;  tamp            4   12[BANK0 ] unsigned long 
  5399 ;; Return value:  Size  Location     Type
  5400 ;;		None               void
  5401 ;; Registers used:
  5402 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5408 ;;      Params:         0       8       0       0
  5409 ;;      Locals:         0       4       0       0
  5410 ;;      Temps:          0       4       0       0
  5411 ;;      Totals:         0      16       0       0
  5412 ;;Total ram usage:       16 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:    2
  5415 ;; This function calls:
  5416 ;;		Nothing
  5417 ;; This function is called by:
  5418 ;;		_main
  5419 ;;		_battery_measure
  5420 ;;		_send_data
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           	psect	text11
  5425  000CF4                     __ptext11:
  5426                           	opt stack 0
  5427  000CF4                     _CANsendMessage:
  5428                           	opt stack 27
  5429                           
  5430                           ;CANlib.h: 296: unsigned long tamp;
  5431                           ;CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;incstack = 0
  5435  000CF4  010F               	movlb	15	; () banked
  5436  000CF6  B740               	btfsc	64,3,b	;volatile
  5437  000CF8  D13F               	goto	l361
  5438                           
  5439                           ; BSR set to: 15
  5440                           ;CANlib.h: 299: { TXB0DLC = dataLength;
  5441  000CFA  C0C1  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  5442                           
  5443                           ;CANlib.h: 300: if (0b01000000 & flags)
  5444  000CFE  0100               	movlb	0	; () banked
  5445  000D00  ADC2               	btfss	CANsendMessage@flags& (0+255),6,b
  5446  000D02  D003               	goto	l362
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  5450  000D04  010F               	movlb	15	; () banked
  5451  000D06  8D45               	bsf	69,6,b	;volatile
  5452  000D08  D002               	goto	l363
  5453  000D0A                     l362:
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;CANlib.h: 302: else
  5457                           ;CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  5458  000D0A  010F               	movlb	15	; () banked
  5459  000D0C  9D45               	bcf	69,6,b	;volatile
  5460  000D0E                     l363:
  5461                           
  5462                           ; BSR set to: 15
  5463                           ;CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  5464  000D0E  0100               	movlb	0	; () banked
  5465  000D10  A7C2               	btfss	CANsendMessage@flags& (0+255),3,b
  5466  000D12  D079               	goto	l364
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;CANlib.h: 306: {
  5470                           ;CANlib.h: 308: tamp = identifier & 0x000000FF;
  5471  000D14  0100               	movlb	0	; () banked
  5472  000D16  51BB               	movf	CANsendMessage@identifier& (0+255),w,b
  5473  000D18  0100               	movlb	0	; () banked
  5474  000D1A  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  5475  000D1C  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5476  000D1E  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5477  000D20  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5478                           
  5479                           ; BSR set to: 0
  5480                           ;CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  5481  000D22  C0C7  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  5482                           
  5483                           ; BSR set to: 0
  5484                           ;CANlib.h: 311: tamp = identifier & 0x0000FF00;
  5485  000D26  0E00               	movlw	0
  5486  000D28  0100               	movlb	0	; () banked
  5487  000D2A  15BB               	andwf	CANsendMessage@identifier& (0+255),w,b
  5488  000D2C  0100               	movlb	0	; () banked
  5489  000D2E  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  5490  000D30  0EFF               	movlw	255
  5491  000D32  0100               	movlb	0	; () banked
  5492  000D34  15BC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5493  000D36  0100               	movlb	0	; () banked
  5494  000D38  6FC8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5495  000D3A  0E00               	movlw	0
  5496  000D3C  0100               	movlb	0	; () banked
  5497  000D3E  15BD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5498  000D40  0100               	movlb	0	; () banked
  5499  000D42  6FC9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5500  000D44  0E00               	movlw	0
  5501  000D46  0100               	movlb	0	; () banked
  5502  000D48  15BE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5503  000D4A  0100               	movlb	0	; () banked
  5504  000D4C  6FCA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5505                           
  5506                           ; BSR set to: 0
  5507                           ;CANlib.h: 312: tamp = tamp >> 8;
  5508  000D4E  C0C7  F0C3         	movff	CANsendMessage@tamp,??_CANsendMessage
  5509  000D52  C0C8  F0C4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5510  000D56  C0C9  F0C5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5511  000D5A  C0CA  F0C6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5512  000D5E  C0C4  F0C3         	movff	??_CANsendMessage+1,??_CANsendMessage
  5513  000D62  C0C5  F0C4         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5514  000D66  C0C6  F0C5         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5515  000D6A  0100               	movlb	0	; () banked
  5516  000D6C  6BC6               	clrf	(??_CANsendMessage+3)& (0+255),b
  5517  000D6E  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  5518  000D72  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5519  000D76  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5520  000D7A  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  5524  000D7E  C0C7  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;CANlib.h: 315: TXB0SIDL = 0x00;
  5528  000D82  0E00               	movlw	0
  5529  000D84  010F               	movlb	15	; () banked
  5530  000D86  6F42               	movwf	66,b	;volatile
  5531                           
  5532                           ; BSR set to: 15
  5533                           ;CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  5534  000D88  010F               	movlb	15	; () banked
  5535  000D8A  8742               	bsf	66,3,b	;volatile
  5536                           
  5537                           ; BSR set to: 15
  5538                           ;CANlib.h: 318: if (identifier & 0x00010000)
  5539  000D8C  0100               	movlb	0	; () banked
  5540  000D8E  A1BD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5541  000D90  D002               	goto	l365
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  5545  000D92  010F               	movlb	15	; () banked
  5546  000D94  8142               	bsf	66,0,b	;volatile
  5547  000D96                     l365:
  5548                           
  5549                           ;CANlib.h: 320: if (identifier & 0x00020000)
  5550  000D96  0100               	movlb	0	; () banked
  5551  000D98  A3BD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5552  000D9A  D002               	goto	l366
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  5556  000D9C  010F               	movlb	15	; () banked
  5557  000D9E  8342               	bsf	66,1,b	;volatile
  5558  000DA0                     l366:
  5559                           
  5560                           ;CANlib.h: 322: if (identifier & 0x00040000)
  5561  000DA0  0100               	movlb	0	; () banked
  5562  000DA2  A5BD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5563  000DA4  D002               	goto	l367
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  5567  000DA6  010F               	movlb	15	; () banked
  5568  000DA8  8B42               	bsf	66,5,b	;volatile
  5569  000DAA                     l367:
  5570                           
  5571                           ;CANlib.h: 324: if (identifier & 0x00080000)
  5572  000DAA  0100               	movlb	0	; () banked
  5573  000DAC  A7BD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5574  000DAE  D002               	goto	l368
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  5578  000DB0  010F               	movlb	15	; () banked
  5579  000DB2  8D42               	bsf	66,6,b	;volatile
  5580  000DB4                     l368:
  5581                           
  5582                           ;CANlib.h: 326: if (identifier & 0x00100000)
  5583  000DB4  0100               	movlb	0	; () banked
  5584  000DB6  A9BD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5585  000DB8  D002               	goto	l4500
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  5589  000DBA  010F               	movlb	15	; () banked
  5590  000DBC  8F42               	bsf	66,7,b	;volatile
  5591  000DBE                     l4500:
  5592                           
  5593                           ;CANlib.h: 329: tamp = (identifier >> 21);
  5594  000DBE  C0BB  F0C3         	movff	CANsendMessage@identifier,??_CANsendMessage
  5595  000DC2  C0BC  F0C4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5596  000DC6  C0BD  F0C5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5597  000DCA  C0BE  F0C6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5598  000DCE  0E16               	movlw	22
  5599  000DD0  D006               	goto	u5640
  5600  000DD2                     u5645:
  5601  000DD2  0100               	movlb	0	; () banked
  5602  000DD4  90D8               	bcf	status,0,c
  5603  000DD6  33C6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5604  000DD8  33C5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5605  000DDA  33C4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5606  000DDC  33C3               	rrcf	??_CANsendMessage& (0+255),f,b
  5607  000DDE                     u5640:
  5608  000DDE  2EE8               	decfsz	wreg,f,c
  5609  000DE0  D7F8               	goto	u5645
  5610  000DE2  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  5611  000DE6  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5612  000DEA  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5613  000DEE  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;CANlib.h: 330: tamp = tamp & 0x000000FF;
  5617  000DF2  0100               	movlb	0	; () banked
  5618  000DF4  51C7               	movf	CANsendMessage@tamp& (0+255),w,b
  5619  000DF6  0100               	movlb	0	; () banked
  5620  000DF8  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  5621  000DFA  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5622  000DFC  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5623  000DFE  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  5627  000E00  C0C7  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5628                           
  5629                           ;CANlib.h: 332: }
  5630  000E04  D059               	goto	l4520
  5631  000E06                     l364:
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;CANlib.h: 334: else
  5635                           ;CANlib.h: 336: {
  5636                           ;CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  5637  000E06  010F               	movlb	15	; () banked
  5638  000E08  9742               	bcf	66,3,b	;volatile
  5639                           
  5640                           ; BSR set to: 15
  5641                           ;CANlib.h: 339: tamp = (identifier >> 3);
  5642  000E0A  C0BB  F0C3         	movff	CANsendMessage@identifier,??_CANsendMessage
  5643  000E0E  C0BC  F0C4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5644  000E12  C0BD  F0C5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5645  000E16  C0BE  F0C6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5646  000E1A  0E04               	movlw	4
  5647  000E1C  D006               	goto	u5650
  5648  000E1E                     u5655:
  5649  000E1E  0100               	movlb	0	; () banked
  5650  000E20  90D8               	bcf	status,0,c
  5651  000E22  33C6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5652  000E24  33C5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5653  000E26  33C4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5654  000E28  33C3               	rrcf	??_CANsendMessage& (0+255),f,b
  5655  000E2A                     u5650:
  5656  000E2A  2EE8               	decfsz	wreg,f,c
  5657  000E2C  D7F8               	goto	u5655
  5658  000E2E  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  5659  000E32  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5660  000E36  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5661  000E3A  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;CANlib.h: 340: tamp = tamp & 0x000000FF;
  5665  000E3E  0100               	movlb	0	; () banked
  5666  000E40  51C7               	movf	CANsendMessage@tamp& (0+255),w,b
  5667  000E42  0100               	movlb	0	; () banked
  5668  000E44  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  5669  000E46  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5670  000E48  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5671  000E4A  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  5675  000E4C  C0C7  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;CANlib.h: 343: tamp = identifier & 0x00000007;
  5679  000E50  0E07               	movlw	7
  5680  000E52  0100               	movlb	0	; () banked
  5681  000E54  15BB               	andwf	CANsendMessage@identifier& (0+255),w,b
  5682  000E56  0100               	movlb	0	; () banked
  5683  000E58  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  5684  000E5A  0E00               	movlw	0
  5685  000E5C  0100               	movlb	0	; () banked
  5686  000E5E  15BC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5687  000E60  0100               	movlb	0	; () banked
  5688  000E62  6FC8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5689  000E64  0E00               	movlw	0
  5690  000E66  0100               	movlb	0	; () banked
  5691  000E68  15BD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5692  000E6A  0100               	movlb	0	; () banked
  5693  000E6C  6FC9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5694  000E6E  0E00               	movlw	0
  5695  000E70  0100               	movlb	0	; () banked
  5696  000E72  15BE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5697  000E74  0100               	movlb	0	; () banked
  5698  000E76  6FCA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5699                           
  5700                           ; BSR set to: 0
  5701                           ;CANlib.h: 344: tamp = tamp << 5;
  5702  000E78  C0C7  F0C3         	movff	CANsendMessage@tamp,??_CANsendMessage
  5703  000E7C  C0C8  F0C4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5704  000E80  C0C9  F0C5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5705  000E84  C0CA  F0C6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5706  000E88  0E05               	movlw	5
  5707  000E8A                     u5665:
  5708  000E8A  90D8               	bcf	status,0,c
  5709  000E8C  0100               	movlb	0	; () banked
  5710  000E8E  37C3               	rlcf	??_CANsendMessage& (0+255),f,b
  5711  000E90  37C4               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  5712  000E92  37C5               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  5713  000E94  37C6               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  5714  000E96  2EE8               	decfsz	wreg,f,c
  5715  000E98  D7F8               	goto	u5665
  5716  000E9A  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  5717  000E9E  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5718  000EA2  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5719  000EA6  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  5723  000EAA  010F               	movlb	15	; () banked
  5724  000EAC  5142               	movf	66,w,b	;volatile
  5725  000EAE  0B1F               	andlw	31
  5726  000EB0  010F               	movlb	15	; () banked
  5727  000EB2  6F42               	movwf	66,b	;volatile
  5728                           
  5729                           ; BSR set to: 15
  5730                           ;CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  5731  000EB4  C0C7  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  5732  000EB8                     l4520:
  5733                           
  5734                           ;CANlib.h: 347: }
  5735                           ;CANlib.h: 349: if (0b00000001 & flags)
  5736  000EB8  0100               	movlb	0	; () banked
  5737  000EBA  A1C2               	btfss	CANsendMessage@flags& (0+255),0,b
  5738  000EBC  D003               	goto	l371
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  5742  000EBE  010F               	movlb	15	; () banked
  5743  000EC0  8140               	bsf	64,0,b	;volatile
  5744  000EC2  D002               	goto	l372
  5745  000EC4                     l371:
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;CANlib.h: 351: else
  5749                           ;CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  5750  000EC4  010F               	movlb	15	; () banked
  5751  000EC6  9140               	bcf	64,0,b	;volatile
  5752  000EC8                     l372:
  5753                           
  5754                           ; BSR set to: 15
  5755                           ;CANlib.h: 353: if (0b00000010 & flags)
  5756  000EC8  0100               	movlb	0	; () banked
  5757  000ECA  A3C2               	btfss	CANsendMessage@flags& (0+255),1,b
  5758  000ECC  D003               	goto	l373
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  5762  000ECE  010F               	movlb	15	; () banked
  5763  000ED0  8340               	bsf	64,1,b	;volatile
  5764  000ED2  D002               	goto	l4526
  5765  000ED4                     l373:
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;CANlib.h: 355: else
  5769                           ;CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  5770  000ED4  010F               	movlb	15	; () banked
  5771  000ED6  9340               	bcf	64,1,b	;volatile
  5772  000ED8                     l4526:
  5773                           
  5774                           ; BSR set to: 15
  5775                           ;CANlib.h: 358: TXB0D0 = data[0];
  5776  000ED8  C0BF  FFD9         	movff	CANsendMessage@data,fsr2l
  5777  000EDC  C0C0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  5778  000EE0  50DF               	movf	indf2,w,c
  5779  000EE2  010F               	movlb	15	; () banked
  5780  000EE4  6F46               	movwf	70,b	;volatile
  5781                           
  5782                           ; BSR set to: 15
  5783                           ;CANlib.h: 359: TXB0D1 = data[1];
  5784  000EE6  0100               	movlb	0	; () banked
  5785  000EE8  EE20 F001          	lfsr	2,1
  5786  000EEC  51BF               	movf	CANsendMessage@data& (0+255),w,b
  5787  000EEE  26D9               	addwf	fsr2l,f,c
  5788  000EF0  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5789  000EF2  22DA               	addwfc	fsr2h,f,c
  5790  000EF4  50DF               	movf	indf2,w,c
  5791  000EF6  010F               	movlb	15	; () banked
  5792  000EF8  6F47               	movwf	71,b	;volatile
  5793                           
  5794                           ; BSR set to: 15
  5795                           ;CANlib.h: 360: TXB0D2 = data[2];
  5796  000EFA  0100               	movlb	0	; () banked
  5797  000EFC  EE20 F002          	lfsr	2,2
  5798  000F00  51BF               	movf	CANsendMessage@data& (0+255),w,b
  5799  000F02  26D9               	addwf	fsr2l,f,c
  5800  000F04  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5801  000F06  22DA               	addwfc	fsr2h,f,c
  5802  000F08  50DF               	movf	indf2,w,c
  5803  000F0A  010F               	movlb	15	; () banked
  5804  000F0C  6F48               	movwf	72,b	;volatile
  5805                           
  5806                           ; BSR set to: 15
  5807                           ;CANlib.h: 361: TXB0D3 = data[3];
  5808  000F0E  0100               	movlb	0	; () banked
  5809  000F10  EE20 F003          	lfsr	2,3
  5810  000F14  51BF               	movf	CANsendMessage@data& (0+255),w,b
  5811  000F16  26D9               	addwf	fsr2l,f,c
  5812  000F18  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5813  000F1A  22DA               	addwfc	fsr2h,f,c
  5814  000F1C  50DF               	movf	indf2,w,c
  5815  000F1E  010F               	movlb	15	; () banked
  5816  000F20  6F49               	movwf	73,b	;volatile
  5817                           
  5818                           ; BSR set to: 15
  5819                           ;CANlib.h: 362: TXB0D4 = data[4];
  5820  000F22  0100               	movlb	0	; () banked
  5821  000F24  EE20 F004          	lfsr	2,4
  5822  000F28  51BF               	movf	CANsendMessage@data& (0+255),w,b
  5823  000F2A  26D9               	addwf	fsr2l,f,c
  5824  000F2C  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5825  000F2E  22DA               	addwfc	fsr2h,f,c
  5826  000F30  50DF               	movf	indf2,w,c
  5827  000F32  010F               	movlb	15	; () banked
  5828  000F34  6F4A               	movwf	74,b	;volatile
  5829                           
  5830                           ; BSR set to: 15
  5831                           ;CANlib.h: 363: TXB0D5 = data[5];
  5832  000F36  0100               	movlb	0	; () banked
  5833  000F38  EE20 F005          	lfsr	2,5
  5834  000F3C  51BF               	movf	CANsendMessage@data& (0+255),w,b
  5835  000F3E  26D9               	addwf	fsr2l,f,c
  5836  000F40  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5837  000F42  22DA               	addwfc	fsr2h,f,c
  5838  000F44  50DF               	movf	indf2,w,c
  5839  000F46  010F               	movlb	15	; () banked
  5840  000F48  6F4B               	movwf	75,b	;volatile
  5841                           
  5842                           ; BSR set to: 15
  5843                           ;CANlib.h: 364: TXB0D6 = data[6];
  5844  000F4A  0100               	movlb	0	; () banked
  5845  000F4C  EE20 F006          	lfsr	2,6
  5846  000F50  51BF               	movf	CANsendMessage@data& (0+255),w,b
  5847  000F52  26D9               	addwf	fsr2l,f,c
  5848  000F54  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5849  000F56  22DA               	addwfc	fsr2h,f,c
  5850  000F58  50DF               	movf	indf2,w,c
  5851  000F5A  010F               	movlb	15	; () banked
  5852  000F5C  6F4C               	movwf	76,b	;volatile
  5853                           
  5854                           ; BSR set to: 15
  5855                           ;CANlib.h: 365: TXB0D7 = data[7];
  5856  000F5E  0100               	movlb	0	; () banked
  5857  000F60  EE20 F007          	lfsr	2,7
  5858  000F64  51BF               	movf	CANsendMessage@data& (0+255),w,b
  5859  000F66  26D9               	addwf	fsr2l,f,c
  5860  000F68  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5861  000F6A  22DA               	addwfc	fsr2h,f,c
  5862  000F6C  50DF               	movf	indf2,w,c
  5863  000F6E  010F               	movlb	15	; () banked
  5864  000F70  6F4D               	movwf	77,b	;volatile
  5865                           
  5866                           ; BSR set to: 15
  5867                           ;CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  5868  000F72  010F               	movlb	15	; () banked
  5869  000F74  8740               	bsf	64,3,b	;volatile
  5870                           
  5871                           ; BSR set to: 15
  5872                           ;CANlib.h: 368: return;
  5873  000F76  0012               	return	
  5874  000F78                     l361:
  5875                           
  5876                           ; BSR set to: 15
  5877                           ;CANlib.h: 369: }
  5878                           ;CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  5879  000F78  010F               	movlb	15	; () banked
  5880  000F7A  B730               	btfsc	48,3,b	;volatile
  5881  000F7C  D13F               	goto	l376
  5882                           
  5883                           ; BSR set to: 15
  5884                           ;CANlib.h: 374: { TXB1DLC = dataLength;
  5885  000F7E  C0C1  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  5886                           
  5887                           ;CANlib.h: 376: if (0b01000000 & flags)
  5888  000F82  0100               	movlb	0	; () banked
  5889  000F84  ADC2               	btfss	CANsendMessage@flags& (0+255),6,b
  5890  000F86  D003               	goto	l377
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  5894  000F88  010F               	movlb	15	; () banked
  5895  000F8A  8D35               	bsf	53,6,b	;volatile
  5896  000F8C  D002               	goto	l378
  5897  000F8E                     l377:
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;CANlib.h: 378: else
  5901                           ;CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  5902  000F8E  010F               	movlb	15	; () banked
  5903  000F90  9D35               	bcf	53,6,b	;volatile
  5904  000F92                     l378:
  5905                           
  5906                           ; BSR set to: 15
  5907                           ;CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  5908  000F92  0100               	movlb	0	; () banked
  5909  000F94  A7C2               	btfss	CANsendMessage@flags& (0+255),3,b
  5910  000F96  D079               	goto	l379
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;CANlib.h: 382: {
  5914                           ;CANlib.h: 383: tamp = identifier & 0x000000FF;
  5915  000F98  0100               	movlb	0	; () banked
  5916  000F9A  51BB               	movf	CANsendMessage@identifier& (0+255),w,b
  5917  000F9C  0100               	movlb	0	; () banked
  5918  000F9E  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  5919  000FA0  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5920  000FA2  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5921  000FA4  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  5925  000FA6  C0C7  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  5926                           
  5927                           ; BSR set to: 0
  5928                           ;CANlib.h: 386: tamp = identifier & 0x0000FF00;
  5929  000FAA  0E00               	movlw	0
  5930  000FAC  0100               	movlb	0	; () banked
  5931  000FAE  15BB               	andwf	CANsendMessage@identifier& (0+255),w,b
  5932  000FB0  0100               	movlb	0	; () banked
  5933  000FB2  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  5934  000FB4  0EFF               	movlw	255
  5935  000FB6  0100               	movlb	0	; () banked
  5936  000FB8  15BC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5937  000FBA  0100               	movlb	0	; () banked
  5938  000FBC  6FC8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5939  000FBE  0E00               	movlw	0
  5940  000FC0  0100               	movlb	0	; () banked
  5941  000FC2  15BD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5942  000FC4  0100               	movlb	0	; () banked
  5943  000FC6  6FC9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5944  000FC8  0E00               	movlw	0
  5945  000FCA  0100               	movlb	0	; () banked
  5946  000FCC  15BE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5947  000FCE  0100               	movlb	0	; () banked
  5948  000FD0  6FCA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;CANlib.h: 387: tamp = tamp >> 8;
  5952  000FD2  C0C7  F0C3         	movff	CANsendMessage@tamp,??_CANsendMessage
  5953  000FD6  C0C8  F0C4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5954  000FDA  C0C9  F0C5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5955  000FDE  C0CA  F0C6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5956  000FE2  C0C4  F0C3         	movff	??_CANsendMessage+1,??_CANsendMessage
  5957  000FE6  C0C5  F0C4         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5958  000FEA  C0C6  F0C5         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5959  000FEE  0100               	movlb	0	; () banked
  5960  000FF0  6BC6               	clrf	(??_CANsendMessage+3)& (0+255),b
  5961  000FF2  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  5962  000FF6  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5963  000FFA  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5964  000FFE  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  5968  001002  C0C7  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  5969                           
  5970                           ; BSR set to: 0
  5971                           ;CANlib.h: 390: TXB1SIDL = 0x00;
  5972  001006  0E00               	movlw	0
  5973  001008  010F               	movlb	15	; () banked
  5974  00100A  6F32               	movwf	50,b	;volatile
  5975                           
  5976                           ; BSR set to: 15
  5977                           ;CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  5978  00100C  010F               	movlb	15	; () banked
  5979  00100E  8732               	bsf	50,3,b	;volatile
  5980                           
  5981                           ; BSR set to: 15
  5982                           ;CANlib.h: 393: if (identifier & 0x00010000)
  5983  001010  0100               	movlb	0	; () banked
  5984  001012  A1BD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5985  001014  D002               	goto	l380
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  5989  001016  010F               	movlb	15	; () banked
  5990  001018  8132               	bsf	50,0,b	;volatile
  5991  00101A                     l380:
  5992                           
  5993                           ;CANlib.h: 395: if (identifier & 0x00020000)
  5994  00101A  0100               	movlb	0	; () banked
  5995  00101C  A3BD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5996  00101E  D002               	goto	l381
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  6000  001020  010F               	movlb	15	; () banked
  6001  001022  8332               	bsf	50,1,b	;volatile
  6002  001024                     l381:
  6003                           
  6004                           ;CANlib.h: 397: if (identifier & 0x00040000)
  6005  001024  0100               	movlb	0	; () banked
  6006  001026  A5BD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6007  001028  D002               	goto	l382
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  6011  00102A  010F               	movlb	15	; () banked
  6012  00102C  8B32               	bsf	50,5,b	;volatile
  6013  00102E                     l382:
  6014                           
  6015                           ;CANlib.h: 399: if (identifier & 0x00080000)
  6016  00102E  0100               	movlb	0	; () banked
  6017  001030  A7BD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6018  001032  D002               	goto	l383
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  6022  001034  010F               	movlb	15	; () banked
  6023  001036  8D32               	bsf	50,6,b	;volatile
  6024  001038                     l383:
  6025                           
  6026                           ;CANlib.h: 401: if (identifier & 0x00100000)
  6027  001038  0100               	movlb	0	; () banked
  6028  00103A  A9BD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6029  00103C  D002               	goto	l4576
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  6033  00103E  010F               	movlb	15	; () banked
  6034  001040  8F32               	bsf	50,7,b	;volatile
  6035  001042                     l4576:
  6036                           
  6037                           ;CANlib.h: 404: tamp = (identifier >> 21);
  6038  001042  C0BB  F0C3         	movff	CANsendMessage@identifier,??_CANsendMessage
  6039  001046  C0BC  F0C4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6040  00104A  C0BD  F0C5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6041  00104E  C0BE  F0C6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6042  001052  0E16               	movlw	22
  6043  001054  D006               	goto	u5770
  6044  001056                     u5775:
  6045  001056  0100               	movlb	0	; () banked
  6046  001058  90D8               	bcf	status,0,c
  6047  00105A  33C6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6048  00105C  33C5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6049  00105E  33C4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6050  001060  33C3               	rrcf	??_CANsendMessage& (0+255),f,b
  6051  001062                     u5770:
  6052  001062  2EE8               	decfsz	wreg,f,c
  6053  001064  D7F8               	goto	u5775
  6054  001066  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  6055  00106A  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6056  00106E  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6057  001072  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;CANlib.h: 405: tamp = tamp & 0x000000FF;
  6061  001076  0100               	movlb	0	; () banked
  6062  001078  51C7               	movf	CANsendMessage@tamp& (0+255),w,b
  6063  00107A  0100               	movlb	0	; () banked
  6064  00107C  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  6065  00107E  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6066  001080  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6067  001082  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  6071  001084  C0C7  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6072                           
  6073                           ;CANlib.h: 407: }
  6074  001088  D059               	goto	l4596
  6075  00108A                     l379:
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;CANlib.h: 409: else
  6079                           ;CANlib.h: 411: {
  6080                           ;CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  6081  00108A  010F               	movlb	15	; () banked
  6082  00108C  9732               	bcf	50,3,b	;volatile
  6083                           
  6084                           ; BSR set to: 15
  6085                           ;CANlib.h: 414: tamp = (identifier >> 3);
  6086  00108E  C0BB  F0C3         	movff	CANsendMessage@identifier,??_CANsendMessage
  6087  001092  C0BC  F0C4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6088  001096  C0BD  F0C5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6089  00109A  C0BE  F0C6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6090  00109E  0E04               	movlw	4
  6091  0010A0  D006               	goto	u5780
  6092  0010A2                     u5785:
  6093  0010A2  0100               	movlb	0	; () banked
  6094  0010A4  90D8               	bcf	status,0,c
  6095  0010A6  33C6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6096  0010A8  33C5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6097  0010AA  33C4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6098  0010AC  33C3               	rrcf	??_CANsendMessage& (0+255),f,b
  6099  0010AE                     u5780:
  6100  0010AE  2EE8               	decfsz	wreg,f,c
  6101  0010B0  D7F8               	goto	u5785
  6102  0010B2  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  6103  0010B6  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6104  0010BA  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6105  0010BE  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;CANlib.h: 415: tamp = tamp & 0x000000FF;
  6109  0010C2  0100               	movlb	0	; () banked
  6110  0010C4  51C7               	movf	CANsendMessage@tamp& (0+255),w,b
  6111  0010C6  0100               	movlb	0	; () banked
  6112  0010C8  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  6113  0010CA  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6114  0010CC  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6115  0010CE  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6116                           
  6117                           ; BSR set to: 0
  6118                           ;CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  6119  0010D0  C0C7  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6120                           
  6121                           ; BSR set to: 0
  6122                           ;CANlib.h: 418: tamp = identifier & 0x00000007;
  6123  0010D4  0E07               	movlw	7
  6124  0010D6  0100               	movlb	0	; () banked
  6125  0010D8  15BB               	andwf	CANsendMessage@identifier& (0+255),w,b
  6126  0010DA  0100               	movlb	0	; () banked
  6127  0010DC  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  6128  0010DE  0E00               	movlw	0
  6129  0010E0  0100               	movlb	0	; () banked
  6130  0010E2  15BC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6131  0010E4  0100               	movlb	0	; () banked
  6132  0010E6  6FC8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6133  0010E8  0E00               	movlw	0
  6134  0010EA  0100               	movlb	0	; () banked
  6135  0010EC  15BD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6136  0010EE  0100               	movlb	0	; () banked
  6137  0010F0  6FC9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6138  0010F2  0E00               	movlw	0
  6139  0010F4  0100               	movlb	0	; () banked
  6140  0010F6  15BE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6141  0010F8  0100               	movlb	0	; () banked
  6142  0010FA  6FCA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;CANlib.h: 419: tamp = tamp << 5;
  6146  0010FC  C0C7  F0C3         	movff	CANsendMessage@tamp,??_CANsendMessage
  6147  001100  C0C8  F0C4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6148  001104  C0C9  F0C5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6149  001108  C0CA  F0C6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6150  00110C  0E05               	movlw	5
  6151  00110E                     u5795:
  6152  00110E  90D8               	bcf	status,0,c
  6153  001110  0100               	movlb	0	; () banked
  6154  001112  37C3               	rlcf	??_CANsendMessage& (0+255),f,b
  6155  001114  37C4               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6156  001116  37C5               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6157  001118  37C6               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6158  00111A  2EE8               	decfsz	wreg,f,c
  6159  00111C  D7F8               	goto	u5795
  6160  00111E  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  6161  001122  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6162  001126  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6163  00112A  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  6167  00112E  010F               	movlb	15	; () banked
  6168  001130  5132               	movf	50,w,b	;volatile
  6169  001132  0B1F               	andlw	31
  6170  001134  010F               	movlb	15	; () banked
  6171  001136  6F32               	movwf	50,b	;volatile
  6172                           
  6173                           ; BSR set to: 15
  6174                           ;CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  6175  001138  C0C7  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6176  00113C                     l4596:
  6177                           
  6178                           ;CANlib.h: 422: }
  6179                           ;CANlib.h: 424: if (0b00000001 & flags)
  6180  00113C  0100               	movlb	0	; () banked
  6181  00113E  A1C2               	btfss	CANsendMessage@flags& (0+255),0,b
  6182  001140  D003               	goto	l386
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  6186  001142  010F               	movlb	15	; () banked
  6187  001144  8130               	bsf	48,0,b	;volatile
  6188  001146  D002               	goto	l387
  6189  001148                     l386:
  6190                           
  6191                           ; BSR set to: 0
  6192                           ;CANlib.h: 426: else
  6193                           ;CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  6194  001148  010F               	movlb	15	; () banked
  6195  00114A  9130               	bcf	48,0,b	;volatile
  6196  00114C                     l387:
  6197                           
  6198                           ; BSR set to: 15
  6199                           ;CANlib.h: 428: if (0b00000010 & flags)
  6200  00114C  0100               	movlb	0	; () banked
  6201  00114E  A3C2               	btfss	CANsendMessage@flags& (0+255),1,b
  6202  001150  D003               	goto	l388
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  6206  001152  010F               	movlb	15	; () banked
  6207  001154  8330               	bsf	48,1,b	;volatile
  6208  001156  D002               	goto	l4602
  6209  001158                     l388:
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;CANlib.h: 430: else
  6213                           ;CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  6214  001158  010F               	movlb	15	; () banked
  6215  00115A  9330               	bcf	48,1,b	;volatile
  6216  00115C                     l4602:
  6217                           
  6218                           ; BSR set to: 15
  6219                           ;CANlib.h: 433: TXB1D0 = data[0];
  6220  00115C  C0BF  FFD9         	movff	CANsendMessage@data,fsr2l
  6221  001160  C0C0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6222  001164  50DF               	movf	indf2,w,c
  6223  001166  010F               	movlb	15	; () banked
  6224  001168  6F36               	movwf	54,b	;volatile
  6225                           
  6226                           ; BSR set to: 15
  6227                           ;CANlib.h: 434: TXB1D1 = data[1];
  6228  00116A  0100               	movlb	0	; () banked
  6229  00116C  EE20 F001          	lfsr	2,1
  6230  001170  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6231  001172  26D9               	addwf	fsr2l,f,c
  6232  001174  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6233  001176  22DA               	addwfc	fsr2h,f,c
  6234  001178  50DF               	movf	indf2,w,c
  6235  00117A  010F               	movlb	15	; () banked
  6236  00117C  6F37               	movwf	55,b	;volatile
  6237                           
  6238                           ; BSR set to: 15
  6239                           ;CANlib.h: 435: TXB1D2 = data[2];
  6240  00117E  0100               	movlb	0	; () banked
  6241  001180  EE20 F002          	lfsr	2,2
  6242  001184  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6243  001186  26D9               	addwf	fsr2l,f,c
  6244  001188  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6245  00118A  22DA               	addwfc	fsr2h,f,c
  6246  00118C  50DF               	movf	indf2,w,c
  6247  00118E  010F               	movlb	15	; () banked
  6248  001190  6F38               	movwf	56,b	;volatile
  6249                           
  6250                           ; BSR set to: 15
  6251                           ;CANlib.h: 436: TXB1D3 = data[3];
  6252  001192  0100               	movlb	0	; () banked
  6253  001194  EE20 F003          	lfsr	2,3
  6254  001198  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6255  00119A  26D9               	addwf	fsr2l,f,c
  6256  00119C  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6257  00119E  22DA               	addwfc	fsr2h,f,c
  6258  0011A0  50DF               	movf	indf2,w,c
  6259  0011A2  010F               	movlb	15	; () banked
  6260  0011A4  6F39               	movwf	57,b	;volatile
  6261                           
  6262                           ; BSR set to: 15
  6263                           ;CANlib.h: 437: TXB1D4 = data[4];
  6264  0011A6  0100               	movlb	0	; () banked
  6265  0011A8  EE20 F004          	lfsr	2,4
  6266  0011AC  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6267  0011AE  26D9               	addwf	fsr2l,f,c
  6268  0011B0  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6269  0011B2  22DA               	addwfc	fsr2h,f,c
  6270  0011B4  50DF               	movf	indf2,w,c
  6271  0011B6  010F               	movlb	15	; () banked
  6272  0011B8  6F3A               	movwf	58,b	;volatile
  6273                           
  6274                           ; BSR set to: 15
  6275                           ;CANlib.h: 438: TXB1D5 = data[5];
  6276  0011BA  0100               	movlb	0	; () banked
  6277  0011BC  EE20 F005          	lfsr	2,5
  6278  0011C0  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6279  0011C2  26D9               	addwf	fsr2l,f,c
  6280  0011C4  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6281  0011C6  22DA               	addwfc	fsr2h,f,c
  6282  0011C8  50DF               	movf	indf2,w,c
  6283  0011CA  010F               	movlb	15	; () banked
  6284  0011CC  6F3B               	movwf	59,b	;volatile
  6285                           
  6286                           ; BSR set to: 15
  6287                           ;CANlib.h: 439: TXB1D6 = data[6];
  6288  0011CE  0100               	movlb	0	; () banked
  6289  0011D0  EE20 F006          	lfsr	2,6
  6290  0011D4  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6291  0011D6  26D9               	addwf	fsr2l,f,c
  6292  0011D8  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6293  0011DA  22DA               	addwfc	fsr2h,f,c
  6294  0011DC  50DF               	movf	indf2,w,c
  6295  0011DE  010F               	movlb	15	; () banked
  6296  0011E0  6F3C               	movwf	60,b	;volatile
  6297                           
  6298                           ; BSR set to: 15
  6299                           ;CANlib.h: 440: TXB1D7 = data[7];
  6300  0011E2  0100               	movlb	0	; () banked
  6301  0011E4  EE20 F007          	lfsr	2,7
  6302  0011E8  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6303  0011EA  26D9               	addwf	fsr2l,f,c
  6304  0011EC  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6305  0011EE  22DA               	addwfc	fsr2h,f,c
  6306  0011F0  50DF               	movf	indf2,w,c
  6307  0011F2  010F               	movlb	15	; () banked
  6308  0011F4  6F3D               	movwf	61,b	;volatile
  6309                           
  6310                           ; BSR set to: 15
  6311                           ;CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  6312  0011F6  010F               	movlb	15	; () banked
  6313  0011F8  8730               	bsf	48,3,b	;volatile
  6314                           
  6315                           ; BSR set to: 15
  6316                           ;CANlib.h: 444: return;
  6317  0011FA  0012               	return	
  6318  0011FC                     l376:
  6319                           
  6320                           ; BSR set to: 15
  6321                           ;CANlib.h: 445: }
  6322                           ;CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  6323  0011FC  010F               	movlb	15	; () banked
  6324  0011FE  B720               	btfsc	32,3,b	;volatile
  6325  001200  0012               	return	
  6326                           
  6327                           ; BSR set to: 15
  6328                           ;CANlib.h: 450: { TXB2DLC = dataLength;
  6329  001202  C0C1  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6330                           
  6331                           ;CANlib.h: 452: if (0b01000000 & flags)
  6332  001206  0100               	movlb	0	; () banked
  6333  001208  ADC2               	btfss	CANsendMessage@flags& (0+255),6,b
  6334  00120A  D003               	goto	l391
  6335                           
  6336                           ; BSR set to: 0
  6337                           ;CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  6338  00120C  010F               	movlb	15	; () banked
  6339  00120E  8D25               	bsf	37,6,b	;volatile
  6340  001210  D002               	goto	l392
  6341  001212                     l391:
  6342                           
  6343                           ; BSR set to: 0
  6344                           ;CANlib.h: 454: else
  6345                           ;CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  6346  001212  010F               	movlb	15	; () banked
  6347  001214  9D25               	bcf	37,6,b	;volatile
  6348  001216                     l392:
  6349                           
  6350                           ; BSR set to: 15
  6351                           ;CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  6352  001216  0100               	movlb	0	; () banked
  6353  001218  A7C2               	btfss	CANsendMessage@flags& (0+255),3,b
  6354  00121A  D079               	goto	l393
  6355                           
  6356                           ; BSR set to: 0
  6357                           ;CANlib.h: 458: {
  6358                           ;CANlib.h: 459: tamp = identifier & 0x000000FF;
  6359  00121C  0100               	movlb	0	; () banked
  6360  00121E  51BB               	movf	CANsendMessage@identifier& (0+255),w,b
  6361  001220  0100               	movlb	0	; () banked
  6362  001222  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  6363  001224  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6364  001226  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6365  001228  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6366                           
  6367                           ; BSR set to: 0
  6368                           ;CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  6369  00122A  C0C7  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;CANlib.h: 462: tamp = identifier & 0x0000FF00;
  6373  00122E  0E00               	movlw	0
  6374  001230  0100               	movlb	0	; () banked
  6375  001232  15BB               	andwf	CANsendMessage@identifier& (0+255),w,b
  6376  001234  0100               	movlb	0	; () banked
  6377  001236  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  6378  001238  0EFF               	movlw	255
  6379  00123A  0100               	movlb	0	; () banked
  6380  00123C  15BC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6381  00123E  0100               	movlb	0	; () banked
  6382  001240  6FC8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6383  001242  0E00               	movlw	0
  6384  001244  0100               	movlb	0	; () banked
  6385  001246  15BD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6386  001248  0100               	movlb	0	; () banked
  6387  00124A  6FC9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6388  00124C  0E00               	movlw	0
  6389  00124E  0100               	movlb	0	; () banked
  6390  001250  15BE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6391  001252  0100               	movlb	0	; () banked
  6392  001254  6FCA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;CANlib.h: 463: tamp = tamp >> 8;
  6396  001256  C0C7  F0C3         	movff	CANsendMessage@tamp,??_CANsendMessage
  6397  00125A  C0C8  F0C4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6398  00125E  C0C9  F0C5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6399  001262  C0CA  F0C6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6400  001266  C0C4  F0C3         	movff	??_CANsendMessage+1,??_CANsendMessage
  6401  00126A  C0C5  F0C4         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6402  00126E  C0C6  F0C5         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6403  001272  0100               	movlb	0	; () banked
  6404  001274  6BC6               	clrf	(??_CANsendMessage+3)& (0+255),b
  6405  001276  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  6406  00127A  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6407  00127E  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6408  001282  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  6412  001286  C0C7  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;CANlib.h: 466: TXB2SIDL = 0x00;
  6416  00128A  0E00               	movlw	0
  6417  00128C  010F               	movlb	15	; () banked
  6418  00128E  6F22               	movwf	34,b	;volatile
  6419                           
  6420                           ; BSR set to: 15
  6421                           ;CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  6422  001290  010F               	movlb	15	; () banked
  6423  001292  8722               	bsf	34,3,b	;volatile
  6424                           
  6425                           ; BSR set to: 15
  6426                           ;CANlib.h: 469: if (identifier & 0x00010000)
  6427  001294  0100               	movlb	0	; () banked
  6428  001296  A1BD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6429  001298  D002               	goto	l394
  6430                           
  6431                           ; BSR set to: 0
  6432                           ;CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  6433  00129A  010F               	movlb	15	; () banked
  6434  00129C  8122               	bsf	34,0,b	;volatile
  6435  00129E                     l394:
  6436                           
  6437                           ;CANlib.h: 471: if (identifier & 0x00020000)
  6438  00129E  0100               	movlb	0	; () banked
  6439  0012A0  A3BD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6440  0012A2  D002               	goto	l395
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  6444  0012A4  010F               	movlb	15	; () banked
  6445  0012A6  8322               	bsf	34,1,b	;volatile
  6446  0012A8                     l395:
  6447                           
  6448                           ;CANlib.h: 473: if (identifier & 0x00040000)
  6449  0012A8  0100               	movlb	0	; () banked
  6450  0012AA  A5BD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6451  0012AC  D002               	goto	l396
  6452                           
  6453                           ; BSR set to: 0
  6454                           ;CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  6455  0012AE  010F               	movlb	15	; () banked
  6456  0012B0  8B22               	bsf	34,5,b	;volatile
  6457  0012B2                     l396:
  6458                           
  6459                           ;CANlib.h: 475: if (identifier & 0x00080000)
  6460  0012B2  0100               	movlb	0	; () banked
  6461  0012B4  A7BD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6462  0012B6  D002               	goto	l397
  6463                           
  6464                           ; BSR set to: 0
  6465                           ;CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  6466  0012B8  010F               	movlb	15	; () banked
  6467  0012BA  8D22               	bsf	34,6,b	;volatile
  6468  0012BC                     l397:
  6469                           
  6470                           ;CANlib.h: 477: if (identifier & 0x00100000)
  6471  0012BC  0100               	movlb	0	; () banked
  6472  0012BE  A9BD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6473  0012C0  D002               	goto	l4652
  6474                           
  6475                           ; BSR set to: 0
  6476                           ;CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  6477  0012C2  010F               	movlb	15	; () banked
  6478  0012C4  8F22               	bsf	34,7,b	;volatile
  6479  0012C6                     l4652:
  6480                           
  6481                           ;CANlib.h: 480: tamp = (identifier >> 21);
  6482  0012C6  C0BB  F0C3         	movff	CANsendMessage@identifier,??_CANsendMessage
  6483  0012CA  C0BC  F0C4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6484  0012CE  C0BD  F0C5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6485  0012D2  C0BE  F0C6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6486  0012D6  0E16               	movlw	22
  6487  0012D8  D006               	goto	u5900
  6488  0012DA                     u5905:
  6489  0012DA  0100               	movlb	0	; () banked
  6490  0012DC  90D8               	bcf	status,0,c
  6491  0012DE  33C6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6492  0012E0  33C5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6493  0012E2  33C4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6494  0012E4  33C3               	rrcf	??_CANsendMessage& (0+255),f,b
  6495  0012E6                     u5900:
  6496  0012E6  2EE8               	decfsz	wreg,f,c
  6497  0012E8  D7F8               	goto	u5905
  6498  0012EA  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  6499  0012EE  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6500  0012F2  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6501  0012F6  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6502                           
  6503                           ; BSR set to: 0
  6504                           ;CANlib.h: 481: tamp = tamp & 0x000000FF;
  6505  0012FA  0100               	movlb	0	; () banked
  6506  0012FC  51C7               	movf	CANsendMessage@tamp& (0+255),w,b
  6507  0012FE  0100               	movlb	0	; () banked
  6508  001300  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  6509  001302  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6510  001304  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6511  001306  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6512                           
  6513                           ; BSR set to: 0
  6514                           ;CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  6515  001308  C0C7  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6516                           
  6517                           ;CANlib.h: 483: }
  6518  00130C  D059               	goto	l4672
  6519  00130E                     l393:
  6520                           
  6521                           ; BSR set to: 0
  6522                           ;CANlib.h: 485: else
  6523                           ;CANlib.h: 487: {
  6524                           ;CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  6525  00130E  010F               	movlb	15	; () banked
  6526  001310  9722               	bcf	34,3,b	;volatile
  6527                           
  6528                           ; BSR set to: 15
  6529                           ;CANlib.h: 490: tamp = (identifier >> 3);
  6530  001312  C0BB  F0C3         	movff	CANsendMessage@identifier,??_CANsendMessage
  6531  001316  C0BC  F0C4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6532  00131A  C0BD  F0C5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6533  00131E  C0BE  F0C6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6534  001322  0E04               	movlw	4
  6535  001324  D006               	goto	u5910
  6536  001326                     u5915:
  6537  001326  0100               	movlb	0	; () banked
  6538  001328  90D8               	bcf	status,0,c
  6539  00132A  33C6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6540  00132C  33C5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6541  00132E  33C4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6542  001330  33C3               	rrcf	??_CANsendMessage& (0+255),f,b
  6543  001332                     u5910:
  6544  001332  2EE8               	decfsz	wreg,f,c
  6545  001334  D7F8               	goto	u5915
  6546  001336  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  6547  00133A  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6548  00133E  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6549  001342  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;CANlib.h: 491: tamp = tamp & 0x000000FF;
  6553  001346  0100               	movlb	0	; () banked
  6554  001348  51C7               	movf	CANsendMessage@tamp& (0+255),w,b
  6555  00134A  0100               	movlb	0	; () banked
  6556  00134C  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  6557  00134E  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6558  001350  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6559  001352  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6560                           
  6561                           ; BSR set to: 0
  6562                           ;CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  6563  001354  C0C7  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6564                           
  6565                           ; BSR set to: 0
  6566                           ;CANlib.h: 494: tamp = identifier & 0x00000007;
  6567  001358  0E07               	movlw	7
  6568  00135A  0100               	movlb	0	; () banked
  6569  00135C  15BB               	andwf	CANsendMessage@identifier& (0+255),w,b
  6570  00135E  0100               	movlb	0	; () banked
  6571  001360  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  6572  001362  0E00               	movlw	0
  6573  001364  0100               	movlb	0	; () banked
  6574  001366  15BC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6575  001368  0100               	movlb	0	; () banked
  6576  00136A  6FC8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6577  00136C  0E00               	movlw	0
  6578  00136E  0100               	movlb	0	; () banked
  6579  001370  15BD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6580  001372  0100               	movlb	0	; () banked
  6581  001374  6FC9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6582  001376  0E00               	movlw	0
  6583  001378  0100               	movlb	0	; () banked
  6584  00137A  15BE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6585  00137C  0100               	movlb	0	; () banked
  6586  00137E  6FCA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6587                           
  6588                           ; BSR set to: 0
  6589                           ;CANlib.h: 495: tamp = tamp << 5;
  6590  001380  C0C7  F0C3         	movff	CANsendMessage@tamp,??_CANsendMessage
  6591  001384  C0C8  F0C4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6592  001388  C0C9  F0C5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6593  00138C  C0CA  F0C6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6594  001390  0E05               	movlw	5
  6595  001392                     u5925:
  6596  001392  90D8               	bcf	status,0,c
  6597  001394  0100               	movlb	0	; () banked
  6598  001396  37C3               	rlcf	??_CANsendMessage& (0+255),f,b
  6599  001398  37C4               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6600  00139A  37C5               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6601  00139C  37C6               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6602  00139E  2EE8               	decfsz	wreg,f,c
  6603  0013A0  D7F8               	goto	u5925
  6604  0013A2  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  6605  0013A6  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6606  0013AA  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6607  0013AE  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  6611  0013B2  010F               	movlb	15	; () banked
  6612  0013B4  5122               	movf	34,w,b	;volatile
  6613  0013B6  0B1F               	andlw	31
  6614  0013B8  010F               	movlb	15	; () banked
  6615  0013BA  6F22               	movwf	34,b	;volatile
  6616                           
  6617                           ; BSR set to: 15
  6618                           ;CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  6619  0013BC  C0C7  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  6620  0013C0                     l4672:
  6621                           
  6622                           ;CANlib.h: 498: }
  6623                           ;CANlib.h: 500: if (0b00000001 & flags)
  6624  0013C0  0100               	movlb	0	; () banked
  6625  0013C2  A1C2               	btfss	CANsendMessage@flags& (0+255),0,b
  6626  0013C4  D003               	goto	l400
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  6630  0013C6  010F               	movlb	15	; () banked
  6631  0013C8  8120               	bsf	32,0,b	;volatile
  6632  0013CA  D002               	goto	l401
  6633  0013CC                     l400:
  6634                           
  6635                           ; BSR set to: 0
  6636                           ;CANlib.h: 502: else
  6637                           ;CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  6638  0013CC  010F               	movlb	15	; () banked
  6639  0013CE  9120               	bcf	32,0,b	;volatile
  6640  0013D0                     l401:
  6641                           
  6642                           ; BSR set to: 15
  6643                           ;CANlib.h: 504: if (0b00000010 & flags)
  6644  0013D0  0100               	movlb	0	; () banked
  6645  0013D2  A3C2               	btfss	CANsendMessage@flags& (0+255),1,b
  6646  0013D4  D003               	goto	l402
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  6650  0013D6  010F               	movlb	15	; () banked
  6651  0013D8  8320               	bsf	32,1,b	;volatile
  6652  0013DA  D002               	goto	l4678
  6653  0013DC                     l402:
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;CANlib.h: 506: else
  6657                           ;CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  6658  0013DC  010F               	movlb	15	; () banked
  6659  0013DE  9320               	bcf	32,1,b	;volatile
  6660  0013E0                     l4678:
  6661                           
  6662                           ; BSR set to: 15
  6663                           ;CANlib.h: 509: TXB2D0 = data[0];
  6664  0013E0  C0BF  FFD9         	movff	CANsendMessage@data,fsr2l
  6665  0013E4  C0C0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6666  0013E8  50DF               	movf	indf2,w,c
  6667  0013EA  010F               	movlb	15	; () banked
  6668  0013EC  6F26               	movwf	38,b	;volatile
  6669                           
  6670                           ; BSR set to: 15
  6671                           ;CANlib.h: 510: TXB2D1 = data[1];
  6672  0013EE  0100               	movlb	0	; () banked
  6673  0013F0  EE20 F001          	lfsr	2,1
  6674  0013F4  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6675  0013F6  26D9               	addwf	fsr2l,f,c
  6676  0013F8  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6677  0013FA  22DA               	addwfc	fsr2h,f,c
  6678  0013FC  50DF               	movf	indf2,w,c
  6679  0013FE  010F               	movlb	15	; () banked
  6680  001400  6F27               	movwf	39,b	;volatile
  6681                           
  6682                           ; BSR set to: 15
  6683                           ;CANlib.h: 511: TXB2D2 = data[2];
  6684  001402  0100               	movlb	0	; () banked
  6685  001404  EE20 F002          	lfsr	2,2
  6686  001408  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6687  00140A  26D9               	addwf	fsr2l,f,c
  6688  00140C  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6689  00140E  22DA               	addwfc	fsr2h,f,c
  6690  001410  50DF               	movf	indf2,w,c
  6691  001412  010F               	movlb	15	; () banked
  6692  001414  6F28               	movwf	40,b	;volatile
  6693                           
  6694                           ; BSR set to: 15
  6695                           ;CANlib.h: 512: TXB2D3 = data[3];
  6696  001416  0100               	movlb	0	; () banked
  6697  001418  EE20 F003          	lfsr	2,3
  6698  00141C  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6699  00141E  26D9               	addwf	fsr2l,f,c
  6700  001420  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6701  001422  22DA               	addwfc	fsr2h,f,c
  6702  001424  50DF               	movf	indf2,w,c
  6703  001426  010F               	movlb	15	; () banked
  6704  001428  6F29               	movwf	41,b	;volatile
  6705                           
  6706                           ; BSR set to: 15
  6707                           ;CANlib.h: 513: TXB2D4 = data[4];
  6708  00142A  0100               	movlb	0	; () banked
  6709  00142C  EE20 F004          	lfsr	2,4
  6710  001430  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6711  001432  26D9               	addwf	fsr2l,f,c
  6712  001434  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6713  001436  22DA               	addwfc	fsr2h,f,c
  6714  001438  50DF               	movf	indf2,w,c
  6715  00143A  010F               	movlb	15	; () banked
  6716  00143C  6F2A               	movwf	42,b	;volatile
  6717                           
  6718                           ; BSR set to: 15
  6719                           ;CANlib.h: 514: TXB2D5 = data[5];
  6720  00143E  0100               	movlb	0	; () banked
  6721  001440  EE20 F005          	lfsr	2,5
  6722  001444  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6723  001446  26D9               	addwf	fsr2l,f,c
  6724  001448  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6725  00144A  22DA               	addwfc	fsr2h,f,c
  6726  00144C  50DF               	movf	indf2,w,c
  6727  00144E  010F               	movlb	15	; () banked
  6728  001450  6F2B               	movwf	43,b	;volatile
  6729                           
  6730                           ; BSR set to: 15
  6731                           ;CANlib.h: 515: TXB2D6 = data[6];
  6732  001452  0100               	movlb	0	; () banked
  6733  001454  EE20 F006          	lfsr	2,6
  6734  001458  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6735  00145A  26D9               	addwf	fsr2l,f,c
  6736  00145C  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6737  00145E  22DA               	addwfc	fsr2h,f,c
  6738  001460  50DF               	movf	indf2,w,c
  6739  001462  010F               	movlb	15	; () banked
  6740  001464  6F2C               	movwf	44,b	;volatile
  6741                           
  6742                           ; BSR set to: 15
  6743                           ;CANlib.h: 516: TXB2D7 = data[7];
  6744  001466  0100               	movlb	0	; () banked
  6745  001468  EE20 F007          	lfsr	2,7
  6746  00146C  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6747  00146E  26D9               	addwf	fsr2l,f,c
  6748  001470  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6749  001472  22DA               	addwfc	fsr2h,f,c
  6750  001474  50DF               	movf	indf2,w,c
  6751  001476  010F               	movlb	15	; () banked
  6752  001478  6F2D               	movwf	45,b	;volatile
  6753                           
  6754                           ; BSR set to: 15
  6755                           ;CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  6756  00147A  010F               	movlb	15	; () banked
  6757  00147C  8720               	bsf	32,3,b	;volatile
  6758                           
  6759                           ; BSR set to: 15
  6760                           ;CANlib.h: 520: return;
  6761  00147E  0012               	return	
  6762  001480                     __end_of_CANsendMessage:
  6763                           	opt stack 0
  6764                           tblptru	equ	0xFF8
  6765                           tblptrh	equ	0xFF7
  6766                           tblptrl	equ	0xFF6
  6767                           tablat	equ	0xFF5
  6768                           prodh	equ	0xFF4
  6769                           prodl	equ	0xFF3
  6770                           intcon	equ	0xFF2
  6771                           postinc0	equ	0xFEE
  6772                           wreg	equ	0xFE8
  6773                           postdec1	equ	0xFE5
  6774                           fsr1l	equ	0xFE1
  6775                           indf2	equ	0xFDF
  6776                           fsr2h	equ	0xFDA
  6777                           fsr2l	equ	0xFD9
  6778                           status	equ	0xFD8
  6779                           
  6780 ;; *************** function _CANisTxReady *****************
  6781 ;; Defined at:
  6782 ;;		line 1154 in file "CANlib.h"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;		None
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;		None
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  1    wreg      unsigned char 
  6789 ;; Registers used:
  6790 ;;		wreg, status,2
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6796 ;;      Params:         0       0       0       0
  6797 ;;      Locals:         0       1       0       0
  6798 ;;      Temps:          0       0       0       0
  6799 ;;      Totals:         0       1       0       0
  6800 ;;Total ram usage:        1 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; Hardware stack levels required when called:    2
  6803 ;; This function calls:
  6804 ;;		Nothing
  6805 ;; This function is called by:
  6806 ;;		_main
  6807 ;;		_battery_measure
  6808 ;;		_send_data
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           	psect	text12
  6813  002792                     __ptext12:
  6814                           	opt stack 0
  6815  002792                     _CANisTxReady:
  6816                           	opt stack 27
  6817                           
  6818                           ;CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TXREQ)
      +                          ;
  6819                           
  6820                           ; BSR set to: 15
  6821                           ;incstack = 0
  6822  002792  0E01               	movlw	1
  6823  002794  0100               	movlb	0	; () banked
  6824  002796  6FBB               	movwf	_CANisTxReady$2989& (0+255),b
  6825                           
  6826                           ; BSR set to: 0
  6827  002798  010F               	movlb	15	; () banked
  6828  00279A  A740               	btfss	64,3,b	;volatile
  6829  00279C  D009               	goto	l554
  6830                           
  6831                           ; BSR set to: 15
  6832  00279E  010F               	movlb	15	; () banked
  6833  0027A0  A730               	btfss	48,3,b	;volatile
  6834  0027A2  D006               	goto	l554
  6835                           
  6836                           ; BSR set to: 15
  6837  0027A4  010F               	movlb	15	; () banked
  6838  0027A6  A720               	btfss	32,3,b	;volatile
  6839  0027A8  D003               	goto	l554
  6840                           
  6841                           ; BSR set to: 15
  6842  0027AA  0E00               	movlw	0
  6843  0027AC  0100               	movlb	0	; () banked
  6844  0027AE  6FBB               	movwf	_CANisTxReady$2989& (0+255),b
  6845  0027B0                     l554:
  6846  0027B0  0100               	movlb	0	; () banked
  6847  0027B2  51BB               	movf	_CANisTxReady$2989& (0+255),w,b
  6848  0027B4  0012               	return	
  6849  0027B6                     __end_of_CANisTxReady:
  6850                           	opt stack 0
  6851                           tblptru	equ	0xFF8
  6852                           tblptrh	equ	0xFF7
  6853                           tblptrl	equ	0xFF6
  6854                           tablat	equ	0xFF5
  6855                           prodh	equ	0xFF4
  6856                           prodl	equ	0xFF3
  6857                           intcon	equ	0xFF2
  6858                           postinc0	equ	0xFEE
  6859                           wreg	equ	0xFE8
  6860                           postdec1	equ	0xFE5
  6861                           fsr1l	equ	0xFE1
  6862                           indf2	equ	0xFDF
  6863                           fsr2h	equ	0xFDA
  6864                           fsr2l	equ	0xFD9
  6865                           status	equ	0xFD8
  6866                           
  6867 ;; *************** function _abs *****************
  6868 ;; Defined at:
  6869 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  6870 ;; Parameters:    Size  Location     Type
  6871 ;;  a               2    0[BANK0 ] int 
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;		None
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  2    0[BANK0 ] int 
  6876 ;; Registers used:
  6877 ;;		wreg, status,2, status,0
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6883 ;;      Params:         0       2       0       0
  6884 ;;      Locals:         0       0       0       0
  6885 ;;      Temps:          0       2       0       0
  6886 ;;      Totals:         0       4       0       0
  6887 ;;Total ram usage:        4 bytes
  6888 ;; Hardware stack levels used:    1
  6889 ;; Hardware stack levels required when called:    2
  6890 ;; This function calls:
  6891 ;;		Nothing
  6892 ;; This function is called by:
  6893 ;;		_main
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           	psect	text13
  6898  002766                     __ptext13:
  6899                           	opt stack 0
  6900  002766                     _abs:
  6901                           	opt stack 28
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;incstack = 0
  6905  002766  0100               	movlb	0	; () banked
  6906  002768  AFBC               	btfss	(abs@a+1)& (0+255),7,b
  6907  00276A  D00E               	goto	l814
  6908                           
  6909                           ; BSR set to: 0
  6910  00276C  C0BB  F0BD         	movff	abs@a,??_abs
  6911  002770  C0BC  F0BE         	movff	abs@a+1,??_abs+1
  6912  002774  0100               	movlb	0	; () banked
  6913  002776  1FBD               	comf	??_abs& (0+255),f,b
  6914  002778  1FBE               	comf	(??_abs+1)& (0+255),f,b
  6915  00277A  4BBD               	infsnz	??_abs& (0+255),f,b
  6916  00277C  2BBE               	incf	(??_abs+1)& (0+255),f,b
  6917  00277E  C0BD  F0BB         	movff	??_abs,?_abs
  6918  002782  C0BE  F0BC         	movff	??_abs+1,?_abs+1
  6919  002786  0012               	return	
  6920  002788                     l814:
  6921                           
  6922                           ; BSR set to: 0
  6923  002788  C0BB  F0BB         	movff	abs@a,?_abs
  6924  00278C  C0BC  F0BC         	movff	abs@a+1,?_abs+1
  6925                           
  6926                           ; BSR set to: 0
  6927  002790  0012               	return		;funcret
  6928  002792                     __end_of_abs:
  6929                           	opt stack 0
  6930                           tblptru	equ	0xFF8
  6931                           tblptrh	equ	0xFF7
  6932                           tblptrl	equ	0xFF6
  6933                           tablat	equ	0xFF5
  6934                           prodh	equ	0xFF4
  6935                           prodl	equ	0xFF3
  6936                           intcon	equ	0xFF2
  6937                           postinc0	equ	0xFEE
  6938                           wreg	equ	0xFE8
  6939                           postdec1	equ	0xFE5
  6940                           fsr1l	equ	0xFE1
  6941                           indf2	equ	0xFDF
  6942                           fsr2h	equ	0xFDA
  6943                           fsr2l	equ	0xFD9
  6944                           status	equ	0xFD8
  6945                           
  6946 ;; *************** function ___lwdiv *****************
  6947 ;; Defined at:
  6948 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  dividend        2    0[BANK0 ] unsigned int 
  6951 ;;  divisor         2    2[BANK0 ] unsigned int 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;  quotient        2    5[BANK0 ] unsigned int 
  6954 ;;  counter         1    4[BANK0 ] unsigned char 
  6955 ;; Return value:  Size  Location     Type
  6956 ;;                  2    0[BANK0 ] unsigned int 
  6957 ;; Registers used:
  6958 ;;		wreg, status,2, status,0
  6959 ;; Tracked objects:
  6960 ;;		On entry : 0/0
  6961 ;;		On exit  : 0/0
  6962 ;;		Unchanged: 0/0
  6963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6964 ;;      Params:         0       4       0       0
  6965 ;;      Locals:         0       3       0       0
  6966 ;;      Temps:          0       0       0       0
  6967 ;;      Totals:         0       7       0       0
  6968 ;;Total ram usage:        7 bytes
  6969 ;; Hardware stack levels used:    1
  6970 ;; Hardware stack levels required when called:    2
  6971 ;; This function calls:
  6972 ;;		Nothing
  6973 ;; This function is called by:
  6974 ;;		_main
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           	psect	text14
  6979  002560                     __ptext14:
  6980                           	opt stack 0
  6981  002560                     ___lwdiv:
  6982                           	opt stack 28
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;incstack = 0
  6986  002560  0E00               	movlw	0
  6987  002562  0100               	movlb	0	; () banked
  6988  002564  6FC1               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6989  002566  0E00               	movlw	0
  6990  002568  6FC0               	movwf	___lwdiv@quotient& (0+255),b
  6991                           
  6992                           ; BSR set to: 0
  6993  00256A  0100               	movlb	0	; () banked
  6994  00256C  51BD               	movf	___lwdiv@divisor& (0+255),w,b
  6995  00256E  0100               	movlb	0	; () banked
  6996  002570  11BE               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6997  002572  B4D8               	btfsc	status,2,c
  6998  002574  D02C               	goto	l1171
  6999                           
  7000                           ; BSR set to: 0
  7001  002576  0E01               	movlw	1
  7002  002578  0100               	movlb	0	; () banked
  7003  00257A  6FBF               	movwf	___lwdiv@counter& (0+255),b
  7004  00257C  D006               	goto	l4914
  7005  00257E                     l4912:
  7006                           
  7007                           ; BSR set to: 0
  7008  00257E  0100               	movlb	0	; () banked
  7009  002580  90D8               	bcf	status,0,c
  7010  002582  37BD               	rlcf	___lwdiv@divisor& (0+255),f,b
  7011  002584  37BE               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  7012  002586  0100               	movlb	0	; () banked
  7013  002588  2BBF               	incf	___lwdiv@counter& (0+255),f,b
  7014  00258A                     l4914:
  7015                           
  7016                           ; BSR set to: 0
  7017  00258A  0100               	movlb	0	; () banked
  7018  00258C  AFBE               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  7019  00258E  D7F7               	goto	l4912
  7020  002590                     l4916:
  7021                           
  7022                           ; BSR set to: 0
  7023  002590  0100               	movlb	0	; () banked
  7024  002592  90D8               	bcf	status,0,c
  7025  002594  37C0               	rlcf	___lwdiv@quotient& (0+255),f,b
  7026  002596  37C1               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  7027                           
  7028                           ; BSR set to: 0
  7029  002598  0100               	movlb	0	; () banked
  7030  00259A  51BD               	movf	___lwdiv@divisor& (0+255),w,b
  7031  00259C  0100               	movlb	0	; () banked
  7032  00259E  5DBB               	subwf	___lwdiv@dividend& (0+255),w,b
  7033  0025A0  0100               	movlb	0	; () banked
  7034  0025A2  51BE               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7035  0025A4  0100               	movlb	0	; () banked
  7036  0025A6  59BC               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  7037  0025A8  A0D8               	btfss	status,0,c
  7038  0025AA  D00A               	goto	l4924
  7039                           
  7040                           ; BSR set to: 0
  7041  0025AC  0100               	movlb	0	; () banked
  7042  0025AE  51BD               	movf	___lwdiv@divisor& (0+255),w,b
  7043  0025B0  0100               	movlb	0	; () banked
  7044  0025B2  5FBB               	subwf	___lwdiv@dividend& (0+255),f,b
  7045  0025B4  0100               	movlb	0	; () banked
  7046  0025B6  51BE               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7047  0025B8  0100               	movlb	0	; () banked
  7048  0025BA  5BBC               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7049                           
  7050                           ; BSR set to: 0
  7051  0025BC  0100               	movlb	0	; () banked
  7052  0025BE  81C0               	bsf	___lwdiv@quotient& (0+255),0,b
  7053  0025C0                     l4924:
  7054                           
  7055                           ; BSR set to: 0
  7056  0025C0  0100               	movlb	0	; () banked
  7057  0025C2  90D8               	bcf	status,0,c
  7058  0025C4  33BE               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7059  0025C6  33BD               	rrcf	___lwdiv@divisor& (0+255),f,b
  7060                           
  7061                           ; BSR set to: 0
  7062  0025C8  0100               	movlb	0	; () banked
  7063  0025CA  2FBF               	decfsz	___lwdiv@counter& (0+255),f,b
  7064  0025CC  D7E1               	goto	l4916
  7065  0025CE                     l1171:
  7066                           
  7067                           ; BSR set to: 0
  7068  0025CE  C0C0  F0BB         	movff	___lwdiv@quotient,?___lwdiv
  7069  0025D2  C0C1  F0BC         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7070                           
  7071                           ; BSR set to: 0
  7072  0025D6  0012               	return		;funcret
  7073  0025D8                     __end_of___lwdiv:
  7074                           	opt stack 0
  7075                           tblptru	equ	0xFF8
  7076                           tblptrh	equ	0xFF7
  7077                           tblptrl	equ	0xFF6
  7078                           tablat	equ	0xFF5
  7079                           prodh	equ	0xFF4
  7080                           prodl	equ	0xFF3
  7081                           intcon	equ	0xFF2
  7082                           postinc0	equ	0xFEE
  7083                           wreg	equ	0xFE8
  7084                           postdec1	equ	0xFE5
  7085                           fsr1l	equ	0xFE1
  7086                           indf2	equ	0xFDF
  7087                           fsr2h	equ	0xFDA
  7088                           fsr2l	equ	0xFD9
  7089                           status	equ	0xFD8
  7090                           
  7091 ;; *************** function _SetDCEPWM1 *****************
  7092 ;; Defined at:
  7093 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  7098 ;; Return value:  Size  Location     Type
  7099 ;;		None               void
  7100 ;; Registers used:
  7101 ;;		wreg, status,2, status,0
  7102 ;; Tracked objects:
  7103 ;;		On entry : 0/0
  7104 ;;		On exit  : 0/0
  7105 ;;		Unchanged: 0/0
  7106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7107 ;;      Params:         0       2       0       0
  7108 ;;      Locals:         0       2       0       0
  7109 ;;      Temps:          0       2       0       0
  7110 ;;      Totals:         0       6       0       0
  7111 ;;Total ram usage:        6 bytes
  7112 ;; Hardware stack levels used:    1
  7113 ;; Hardware stack levels required when called:    2
  7114 ;; This function calls:
  7115 ;;		Nothing
  7116 ;; This function is called by:
  7117 ;;		_main
  7118 ;; This function uses a non-reentrant model
  7119 ;;
  7120                           
  7121                           	psect	text15
  7122  002674                     __ptext15:
  7123                           	opt stack 0
  7124  002674                     _SetDCEPWM1:
  7125                           	opt stack 28
  7126                           
  7127                           ; BSR set to: 0
  7128                           ;incstack = 0
  7129  002674  C0BB  F0BD         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  7130  002678  C0BC  F0BE         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  7131  00267C  0E06               	movlw	6
  7132  00267E                     u6115:
  7133  00267E  90D8               	bcf	status,0,c
  7134  002680  0100               	movlb	0	; () banked
  7135  002682  37BD               	rlcf	??_SetDCEPWM1& (0+255),f,b
  7136  002684  37BE               	rlcf	(??_SetDCEPWM1+1)& (0+255),f,b
  7137  002686  2EE8               	decfsz	wreg,f,c
  7138  002688  D7FA               	goto	u6115
  7139  00268A  C0BD  F0BF         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  7140  00268E  C0BE  F0C0         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  7141                           
  7142                           ; BSR set to: 0
  7143  002692  C0C0  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  7144  002696  C0BF  F0BD         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  7145  00269A  0100               	movlb	0	; () banked
  7146  00269C  90D8               	bcf	status,0,c
  7147  00269E  33BD               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7148  0026A0  0100               	movlb	0	; () banked
  7149  0026A2  90D8               	bcf	status,0,c
  7150  0026A4  33BD               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7151  0026A6  0E30               	movlw	48
  7152  0026A8  0100               	movlb	0	; () banked
  7153  0026AA  17BD               	andwf	??_SetDCEPWM1& (0+255),f,b
  7154  0026AC  50BA               	movf	4026,w,c	;volatile
  7155  0026AE  0BCF               	andlw	207
  7156  0026B0  0100               	movlb	0	; () banked
  7157  0026B2  11BD               	iorwf	??_SetDCEPWM1& (0+255),w,b
  7158  0026B4  6EBA               	movwf	4026,c	;volatile
  7159                           
  7160                           ; BSR set to: 0
  7161  0026B6  0012               	return		;funcret
  7162  0026B8                     __end_of_SetDCEPWM1:
  7163                           	opt stack 0
  7164                           tblptru	equ	0xFF8
  7165                           tblptrh	equ	0xFF7
  7166                           tblptrl	equ	0xFF6
  7167                           tablat	equ	0xFF5
  7168                           prodh	equ	0xFF4
  7169                           prodl	equ	0xFF3
  7170                           intcon	equ	0xFF2
  7171                           postinc0	equ	0xFEE
  7172                           wreg	equ	0xFE8
  7173                           postdec1	equ	0xFE5
  7174                           fsr1l	equ	0xFE1
  7175                           indf2	equ	0xFDF
  7176                           fsr2h	equ	0xFDA
  7177                           fsr2l	equ	0xFD9
  7178                           status	equ	0xFD8
  7179                           
  7180 ;; *************** function _OpenTimer2 *****************
  7181 ;; Defined at:
  7182 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
  7183 ;; Parameters:    Size  Location     Type
  7184 ;;  config          1    wreg     unsigned char 
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;  config          1    0[BANK0 ] unsigned char 
  7187 ;; Return value:  Size  Location     Type
  7188 ;;		None               void
  7189 ;; Registers used:
  7190 ;;		wreg, status,2, status,0
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7196 ;;      Params:         0       0       0       0
  7197 ;;      Locals:         0       1       0       0
  7198 ;;      Temps:          0       0       0       0
  7199 ;;      Totals:         0       1       0       0
  7200 ;;Total ram usage:        1 bytes
  7201 ;; Hardware stack levels used:    1
  7202 ;; Hardware stack levels required when called:    2
  7203 ;; This function calls:
  7204 ;;		Nothing
  7205 ;; This function is called by:
  7206 ;;		_main
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           	psect	text16
  7211  0027B6                     __ptext16:
  7212                           	opt stack 0
  7213  0027B6                     _OpenTimer2:
  7214                           	opt stack 28
  7215                           
  7216                           ; BSR set to: 0
  7217                           ;incstack = 0
  7218                           ;OpenTimer2@config stored from wreg
  7219  0027B6  0100               	movlb	0	; () banked
  7220  0027B8  6FBB               	movwf	OpenTimer2@config& (0+255),b
  7221  0027BA  0100               	movlb	0	; () banked
  7222  0027BC  51BB               	movf	OpenTimer2@config& (0+255),w,b
  7223  0027BE  0BFB               	andlw	251
  7224  0027C0  6ECA               	movwf	4042,c	;volatile
  7225                           
  7226                           ; BSR set to: 0
  7227  0027C2  0E00               	movlw	0
  7228  0027C4  6ECC               	movwf	4044,c	;volatile
  7229                           
  7230                           ; BSR set to: 0
  7231  0027C6  929E               	bcf	3998,1,c	;volatile
  7232                           
  7233                           ; BSR set to: 0
  7234  0027C8  0100               	movlb	0	; () banked
  7235  0027CA  AFBB               	btfss	OpenTimer2@config& (0+255),7,b
  7236  0027CC  D002               	goto	l762
  7237                           
  7238                           ; BSR set to: 0
  7239  0027CE  829D               	bsf	3997,1,c	;volatile
  7240  0027D0  D001               	goto	l763
  7241  0027D2                     l762:
  7242                           
  7243                           ; BSR set to: 0
  7244  0027D2  929D               	bcf	3997,1,c	;volatile
  7245  0027D4                     l763:
  7246                           
  7247                           ; BSR set to: 0
  7248  0027D4  84CA               	bsf	4042,2,c	;volatile
  7249                           
  7250                           ; BSR set to: 0
  7251  0027D6  0012               	return		;funcret
  7252  0027D8                     __end_of_OpenTimer2:
  7253                           	opt stack 0
  7254                           tblptru	equ	0xFF8
  7255                           tblptrh	equ	0xFF7
  7256                           tblptrl	equ	0xFF6
  7257                           tablat	equ	0xFF5
  7258                           prodh	equ	0xFF4
  7259                           prodl	equ	0xFF3
  7260                           intcon	equ	0xFF2
  7261                           postinc0	equ	0xFEE
  7262                           wreg	equ	0xFE8
  7263                           postdec1	equ	0xFE5
  7264                           fsr1l	equ	0xFE1
  7265                           indf2	equ	0xFDF
  7266                           fsr2h	equ	0xFDA
  7267                           fsr2l	equ	0xFD9
  7268                           status	equ	0xFD8
  7269                           
  7270 ;; *************** function _OpenEPWM1 *****************
  7271 ;; Defined at:
  7272 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  period          1    wreg     unsigned char 
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;  period          1    0[BANK0 ] unsigned char 
  7277 ;; Return value:  Size  Location     Type
  7278 ;;		None               void
  7279 ;; Registers used:
  7280 ;;		wreg, status,2
  7281 ;; Tracked objects:
  7282 ;;		On entry : 0/0
  7283 ;;		On exit  : 0/0
  7284 ;;		Unchanged: 0/0
  7285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7286 ;;      Params:         0       0       0       0
  7287 ;;      Locals:         0       1       0       0
  7288 ;;      Temps:          0       0       0       0
  7289 ;;      Totals:         0       1       0       0
  7290 ;;Total ram usage:        1 bytes
  7291 ;; Hardware stack levels used:    1
  7292 ;; Hardware stack levels required when called:    2
  7293 ;; This function calls:
  7294 ;;		Nothing
  7295 ;; This function is called by:
  7296 ;;		_main
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300                           	psect	text17
  7301  002804                     __ptext17:
  7302                           	opt stack 0
  7303  002804                     _OpenEPWM1:
  7304                           	opt stack 28
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;incstack = 0
  7308                           ;OpenEPWM1@period stored from wreg
  7309  002804  0100               	movlb	0	; () banked
  7310  002806  6FBB               	movwf	OpenEPWM1@period& (0+255),b
  7311  002808  0E0C               	movlw	12
  7312  00280A  6EBA               	movwf	4026,c	;volatile
  7313  00280C  94CA               	bcf	4042,2,c	;volatile
  7314  00280E  C0BB  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  7315  002812  84CA               	bsf	4042,2,c	;volatile
  7316  002814  0012               	return		;funcret
  7317  002816                     __end_of_OpenEPWM1:
  7318                           	opt stack 0
  7319                           tblptru	equ	0xFF8
  7320                           tblptrh	equ	0xFF7
  7321                           tblptrl	equ	0xFF6
  7322                           tablat	equ	0xFF5
  7323                           prodh	equ	0xFF4
  7324                           prodl	equ	0xFF3
  7325                           intcon	equ	0xFF2
  7326                           postinc0	equ	0xFEE
  7327                           wreg	equ	0xFE8
  7328                           postdec1	equ	0xFE5
  7329                           fsr1l	equ	0xFE1
  7330                           indf2	equ	0xFDF
  7331                           fsr2h	equ	0xFDA
  7332                           fsr2l	equ	0xFD9
  7333                           status	equ	0xFD8
  7334                           
  7335 ;; *************** function _ISR_bassa *****************
  7336 ;; Defined at:
  7337 ;;		line 93 in file "motore.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;		None
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;		None
  7342 ;; Return value:  Size  Location     Type
  7343 ;;		None               void
  7344 ;; Registers used:
  7345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7351 ;;      Params:         0       0       0       0
  7352 ;;      Locals:         0       0       0       0
  7353 ;;      Temps:         19       0       0       0
  7354 ;;      Totals:        19       0       0       0
  7355 ;;Total ram usage:       19 bytes
  7356 ;; Hardware stack levels used:    1
  7357 ;; Hardware stack levels required when called:    1
  7358 ;; This function calls:
  7359 ;;		_CANisRxReady
  7360 ;;		_CANreceiveMessage
  7361 ;;		i1_SetOutputEPWM1
  7362 ;; This function is called by:
  7363 ;;		Interrupt level 1
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           	psect	intcodelo
  7368  000018                     __pintcodelo:
  7369                           	opt stack 0
  7370  000018                     _ISR_bassa:
  7371                           	opt stack 26
  7372                           
  7373                           ;incstack = 0
  7374  000018  8043               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7375  00001A  CFD8 F00F          	movff	status,??_ISR_bassa+2
  7376  00001E  CFE8 F010          	movff	wreg,??_ISR_bassa+3
  7377  000022  CFE0 F011          	movff	bsr,??_ISR_bassa+4
  7378  000026  CFFA F012          	movff	pclath,??_ISR_bassa+5
  7379  00002A  CFFB F013          	movff	pclatu,??_ISR_bassa+6
  7380  00002E  CFE9 F014          	movff	fsr0l,??_ISR_bassa+7
  7381  000032  CFEA F015          	movff	fsr0h,??_ISR_bassa+8
  7382  000036  CFE1 F016          	movff	fsr1l,??_ISR_bassa+9
  7383  00003A  CFE2 F017          	movff	fsr1h,??_ISR_bassa+10
  7384  00003E  CFD9 F018          	movff	fsr2l,??_ISR_bassa+11
  7385  000042  CFDA F019          	movff	fsr2h,??_ISR_bassa+12
  7386  000046  CFF3 F01A          	movff	prodl,??_ISR_bassa+13
  7387  00004A  CFF4 F01B          	movff	prodh,??_ISR_bassa+14
  7388  00004E  CFF6 F01C          	movff	tblptrl,??_ISR_bassa+15
  7389  000052  CFF7 F01D          	movff	tblptrh,??_ISR_bassa+16
  7390  000056  CFF8 F01E          	movff	tblptru,??_ISR_bassa+17
  7391  00005A  CFF5 F01F          	movff	tablat,??_ISR_bassa+18
  7392                           
  7393                           ;motore.c: 94: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7394  00005E  A0A4               	btfss	4004,0,c	;volatile
  7395  000060  B2A4               	btfsc	4004,1,c	;volatile
  7396  000062  D001               	goto	i1l3806
  7397  000064  D091               	goto	i1l656
  7398  000066                     i1l3806:
  7399                           
  7400                           ;motore.c: 95: PORTCbits.RC1 = ~PORTCbits.RC1;
  7401  000066  A282               	btfss	3970,1,c	;volatile
  7402  000068  D002               	goto	i1u424_20
  7403  00006A  0E01               	movlw	1
  7404  00006C  D001               	goto	i1u424_26
  7405  00006E                     i1u424_20:
  7406  00006E  0E00               	movlw	0
  7407  000070                     i1u424_26:
  7408  000070  0AFF               	xorlw	255
  7409  000072  6E0D               	movwf	??_ISR_bassa& (0+255),c
  7410  000074  460D               	rlncf	??_ISR_bassa,f,c
  7411  000076  5082               	movf	3970,w,c	;volatile
  7412  000078  180D               	xorwf	??_ISR_bassa,w,c
  7413  00007A  0BFD               	andlw	-3
  7414  00007C  180D               	xorwf	??_ISR_bassa,w,c
  7415  00007E  6E82               	movwf	3970,c	;volatile
  7416                           
  7417                           ;motore.c: 96: if (CANisRxReady()) {
  7418  000080  ECF7  F013         	call	_CANisRxReady	;wreg free
  7419  000084  0900               	iorlw	0
  7420  000086  B4D8               	btfsc	status,2,c
  7421  000088  D07D               	goto	i1l659
  7422                           
  7423                           ;motore.c: 97: CANreceiveMessage(&msg);
  7424  00008A  0E94               	movlw	low _msg
  7425  00008C  6E01               	movwf	CANreceiveMessage@msg,c
  7426  00008E  0E00               	movlw	high _msg
  7427  000090  6E02               	movwf	CANreceiveMessage@msg+1,c
  7428  000092  EC40  F00A         	call	_CANreceiveMessage	;wreg free
  7429                           
  7430                           ;motore.c: 98: if (msg.identifier == 0b00000000000000000000000000011) {
  7431  000096  0E03               	movlw	3
  7432  000098  0100               	movlb	0	; () banked
  7433  00009A  1994               	xorwf	_msg& (0+255),w,b
  7434  00009C  0100               	movlb	0	; () banked
  7435  00009E  1195               	iorwf	(_msg+1)& (0+255),w,b
  7436  0000A0  0100               	movlb	0	; () banked
  7437  0000A2  1196               	iorwf	(_msg+2)& (0+255),w,b
  7438  0000A4  0100               	movlb	0	; () banked
  7439  0000A6  1197               	iorwf	(_msg+3)& (0+255),w,b
  7440  0000A8  A4D8               	btfss	status,2,c
  7441  0000AA  D01B               	goto	i1l3826
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;motore.c: 100: requestSpeed = msg.data[0];
  7445  0000AC  0100               	movlb	0	; () banked
  7446  0000AE  5198               	movf	(_msg+4)& (0+255),w,b
  7447  0000B0  6E24               	movwf	_requestSpeed,c	;volatile
  7448  0000B2  6A25               	clrf	_requestSpeed+1,c	;volatile
  7449  0000B4  6A26               	clrf	_requestSpeed+2,c	;volatile
  7450  0000B6  6A27               	clrf	_requestSpeed+3,c	;volatile
  7451                           
  7452                           ; BSR set to: 0
  7453                           ;motore.c: 101: dir = msg.data[1];
  7454  0000B8  C099  F040         	movff	_msg+5,_dir	;volatile
  7455  0000BC  6A41               	clrf	_dir+1,c	;volatile
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;motore.c: 102: if (dir == 1) {
  7459  0000BE  0440               	decf	_dir,w,c	;volatile
  7460  0000C0  1041               	iorwf	_dir+1,w,c	;volatile
  7461  0000C2  A4D8               	btfss	status,2,c
  7462  0000C4  D005               	goto	i1l3822
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;motore.c: 103: SetOutputEPWM1(0b01111111, 0b11111100);
  7466  0000C6  0EFC               	movlw	252
  7467  0000C8  6E01               	movwf	i1SetOutputEPWM1@outputmode,c
  7468  0000CA  0E7F               	movlw	127
  7469  0000CC  EC5C  F013         	call	i1_SetOutputEPWM1
  7470  0000D0                     i1l3822:
  7471                           
  7472                           ;motore.c: 104: }
  7473                           ;motore.c: 105: if (dir == 0) {
  7474  0000D0  5040               	movf	_dir,w,c	;volatile
  7475  0000D2  1041               	iorwf	_dir+1,w,c	;volatile
  7476  0000D4  A4D8               	btfss	status,2,c
  7477  0000D6  D005               	goto	i1l3826
  7478                           
  7479                           ;motore.c: 106: SetOutputEPWM1(0b11111111, 0b11111100);
  7480  0000D8  0EFC               	movlw	252
  7481  0000DA  6E01               	movwf	i1SetOutputEPWM1@outputmode,c
  7482  0000DC  0EFF               	movlw	255
  7483  0000DE  EC5C  F013         	call	i1_SetOutputEPWM1
  7484  0000E2                     i1l3826:
  7485                           
  7486                           ;motore.c: 107: }
  7487                           ;motore.c: 111: }
  7488                           ;motore.c: 112: if (msg.identifier == 0b00000000000000000000000000001) {
  7489  0000E2  0100               	movlb	0	; () banked
  7490  0000E4  0594               	decf	_msg& (0+255),w,b
  7491  0000E6  0100               	movlb	0	; () banked
  7492  0000E8  1195               	iorwf	(_msg+1)& (0+255),w,b
  7493  0000EA  0100               	movlb	0	; () banked
  7494  0000EC  1196               	iorwf	(_msg+2)& (0+255),w,b
  7495  0000EE  0100               	movlb	0	; () banked
  7496  0000F0  1197               	iorwf	(_msg+3)& (0+255),w,b
  7497  0000F2  A4D8               	btfss	status,2,c
  7498  0000F4  D009               	goto	i1l3832
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;motore.c: 113: requestSpeed = 0;
  7502  0000F6  0E00               	movlw	0
  7503  0000F8  6E24               	movwf	_requestSpeed,c	;volatile
  7504  0000FA  0E00               	movlw	0
  7505  0000FC  6E25               	movwf	_requestSpeed+1,c	;volatile
  7506  0000FE  0E00               	movlw	0
  7507  000100  6E26               	movwf	_requestSpeed+2,c	;volatile
  7508  000102  0E00               	movlw	0
  7509  000104  6E27               	movwf	_requestSpeed+3,c	;volatile
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;motore.c: 114: PORTAbits.RA1 = 1;
  7513  000106  8280               	bsf	3968,1,c	;volatile
  7514  000108                     i1l3832:
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;motore.c: 115: }
  7518                           ;motore.c: 116: if (msg.identifier == 0b00000000000000000000000000110) {
  7519  000108  0E06               	movlw	6
  7520  00010A  0100               	movlb	0	; () banked
  7521  00010C  1994               	xorwf	_msg& (0+255),w,b
  7522  00010E  0100               	movlb	0	; () banked
  7523  000110  1195               	iorwf	(_msg+1)& (0+255),w,b
  7524  000112  0100               	movlb	0	; () banked
  7525  000114  1196               	iorwf	(_msg+2)& (0+255),w,b
  7526  000116  0100               	movlb	0	; () banked
  7527  000118  1197               	iorwf	(_msg+3)& (0+255),w,b
  7528  00011A  A4D8               	btfss	status,2,c
  7529  00011C  D015               	goto	i1l3842
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;motore.c: 129: left_speed = msg.data[1];
  7533  00011E  C099  F030         	movff	_msg+5,_left_speed	;volatile
  7534  000122  6A31               	clrf	_left_speed+1,c	;volatile
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;motore.c: 130: left_speed = ((left_speed << 8) | (msg.data[0]));
  7538  000124  5030               	movf	_left_speed,w,c	;volatile
  7539  000126  6E0D               	movwf	??_ISR_bassa& (0+255),c
  7540  000128  0100               	movlb	0	; () banked
  7541  00012A  5198               	movf	(_msg+4)& (0+255),w,b
  7542  00012C  6E30               	movwf	_left_speed,c	;volatile
  7543  00012E  C00D  F031         	movff	??_ISR_bassa,_left_speed+1	;volatile
  7544                           
  7545                           ; BSR set to: 0
  7546                           ;motore.c: 131: right_speed = msg.data[3];
  7547  000132  C09B  F034         	movff	_msg+7,_right_speed	;volatile
  7548  000136  6A35               	clrf	_right_speed+1,c	;volatile
  7549                           
  7550                           ;motore.c: 132: right_speed = ((right_speed << 8) | (msg.data[2]));
  7551  000138  5034               	movf	_right_speed,w,c	;volatile
  7552  00013A  6E0D               	movwf	??_ISR_bassa& (0+255),c
  7553  00013C  0100               	movlb	0	; () banked
  7554  00013E  519A               	movf	(_msg+6)& (0+255),w,b
  7555  000140  6E34               	movwf	_right_speed,c	;volatile
  7556  000142  C00D  F035         	movff	??_ISR_bassa,_right_speed+1	;volatile
  7557                           
  7558                           ; BSR set to: 0
  7559                           ;motore.c: 133: speed_fetched = 1;
  7560  000146  803B               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  7561  000148                     i1l3842:
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;motore.c: 134: }
  7565                           ;motore.c: 135: if (msg.identifier == 0b00000000000000000000000000010) {
  7566  000148  0E02               	movlw	2
  7567  00014A  0100               	movlb	0	; () banked
  7568  00014C  1994               	xorwf	_msg& (0+255),w,b
  7569  00014E  0100               	movlb	0	; () banked
  7570  000150  1195               	iorwf	(_msg+1)& (0+255),w,b
  7571  000152  0100               	movlb	0	; () banked
  7572  000154  1196               	iorwf	(_msg+2)& (0+255),w,b
  7573  000156  0100               	movlb	0	; () banked
  7574  000158  1197               	iorwf	(_msg+3)& (0+255),w,b
  7575  00015A  A4D8               	btfss	status,2,c
  7576  00015C  D013               	goto	i1l659
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;motore.c: 137: if (msg.data[0] == 0x01) {
  7580  00015E  0100               	movlb	0	; () banked
  7581  000160  0598               	decf	(_msg+4)& (0+255),w,b
  7582  000162  A4D8               	btfss	status,2,c
  7583  000164  D002               	goto	i1l3848
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;motore.c: 138: centralina_abs = 1;
  7587  000166  823A               	bsf	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
  7588                           
  7589                           ;motore.c: 139: PORTCbits.RC5 = 0;
  7590  000168  9A82               	bcf	3970,5,c	;volatile
  7591  00016A                     i1l3848:
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;motore.c: 140: }
  7595                           ;motore.c: 141: if (msg.data[0] == 0x02) {
  7596  00016A  0E02               	movlw	2
  7597  00016C  0100               	movlb	0	; () banked
  7598  00016E  1998               	xorwf	(_msg+4)& (0+255),w,b
  7599  000170  A4D8               	btfss	status,2,c
  7600  000172  D003               	goto	i1l3852
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;motore.c: 142: centralina_sterzo = 1;
  7604  000174  863A               	bsf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
  7605                           
  7606                           ;motore.c: 143: centralina_comando = 1;
  7607  000176  843A               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  7608                           
  7609                           ;motore.c: 144: PORTCbits.RC4 = 0;
  7610  000178  9882               	bcf	3970,4,c	;volatile
  7611  00017A                     i1l3852:
  7612                           
  7613                           ; BSR set to: 0
  7614                           ;motore.c: 145: }
  7615                           ;motore.c: 146: if (msg.data[0] == 0x03) {
  7616  00017A  0E03               	movlw	3
  7617  00017C  0100               	movlb	0	; () banked
  7618  00017E  1998               	xorwf	(_msg+4)& (0+255),w,b
  7619  000180  B4D8               	btfsc	status,2,c
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;motore.c: 147: centralina_comando = 1;
  7623  000182  843A               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  7624  000184                     i1l659:
  7625                           
  7626                           ;motore.c: 148: }
  7627                           ;motore.c: 150: }
  7628                           ;motore.c: 151: }
  7629                           ;motore.c: 152: PIR3bits.RXB0IF = 0;
  7630  000184  90A4               	bcf	4004,0,c	;volatile
  7631                           
  7632                           ;motore.c: 153: PIR3bits.RXB1IF = 0;
  7633  000186  92A4               	bcf	4004,1,c	;volatile
  7634  000188                     i1l656:
  7635                           
  7636                           ;motore.c: 154: }
  7637                           ;motore.c: 155: if (PIR2bits.TMR3IF) {
  7638  000188  A2A1               	btfss	4001,1,c	;volatile
  7639  00018A  D00B               	goto	i1l670
  7640                           
  7641                           ;motore.c: 156: timeCounter++;
  7642  00018C  0E01               	movlw	1
  7643  00018E  2628               	addwf	_timeCounter,f,c	;volatile
  7644  000190  0E00               	movlw	0
  7645  000192  2229               	addwfc	_timeCounter+1,f,c	;volatile
  7646  000194  222A               	addwfc	_timeCounter+2,f,c	;volatile
  7647  000196  222B               	addwfc	_timeCounter+3,f,c	;volatile
  7648                           
  7649                           ;motore.c: 157: TMR3H = 0x63;
  7650  000198  0E63               	movlw	99
  7651  00019A  6EB3               	movwf	4019,c	;volatile
  7652                           
  7653                           ;motore.c: 158: TMR3L = 0xC0;
  7654  00019C  0EC0               	movlw	192
  7655  00019E  6EB2               	movwf	4018,c	;volatile
  7656                           
  7657                           ;motore.c: 159: PIR2bits.TMR3IF = 0;
  7658  0001A0  92A1               	bcf	4001,1,c	;volatile
  7659  0001A2                     i1l670:
  7660  0001A2  C01F  FFF5         	movff	??_ISR_bassa+18,tablat
  7661  0001A6  C01E  FFF8         	movff	??_ISR_bassa+17,tblptru
  7662  0001AA  C01D  FFF7         	movff	??_ISR_bassa+16,tblptrh
  7663  0001AE  C01C  FFF6         	movff	??_ISR_bassa+15,tblptrl
  7664  0001B2  C01B  FFF4         	movff	??_ISR_bassa+14,prodh
  7665  0001B6  C01A  FFF3         	movff	??_ISR_bassa+13,prodl
  7666  0001BA  C019  FFDA         	movff	??_ISR_bassa+12,fsr2h
  7667  0001BE  C018  FFD9         	movff	??_ISR_bassa+11,fsr2l
  7668  0001C2  C017  FFE2         	movff	??_ISR_bassa+10,fsr1h
  7669  0001C6  C016  FFE1         	movff	??_ISR_bassa+9,fsr1l
  7670  0001CA  C015  FFEA         	movff	??_ISR_bassa+8,fsr0h
  7671  0001CE  C014  FFE9         	movff	??_ISR_bassa+7,fsr0l
  7672  0001D2  C013  FFFB         	movff	??_ISR_bassa+6,pclatu
  7673  0001D6  C012  FFFA         	movff	??_ISR_bassa+5,pclath
  7674  0001DA  C011  FFE0         	movff	??_ISR_bassa+4,bsr
  7675  0001DE  C010  FFE8         	movff	??_ISR_bassa+3,wreg
  7676  0001E2  C00F  FFD8         	movff	??_ISR_bassa+2,status
  7677  0001E6  9043               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7678  0001E8  0010               	retfie	
  7679  0001EA                     __end_of_ISR_bassa:
  7680                           	opt stack 0
  7681                           pclatu	equ	0xFFB
  7682                           pclath	equ	0xFFA
  7683                           tblptru	equ	0xFF8
  7684                           tblptrh	equ	0xFF7
  7685                           tblptrl	equ	0xFF6
  7686                           tablat	equ	0xFF5
  7687                           prodh	equ	0xFF4
  7688                           prodl	equ	0xFF3
  7689                           intcon	equ	0xFF2
  7690                           postinc0	equ	0xFEE
  7691                           fsr0h	equ	0xFEA
  7692                           fsr0l	equ	0xFE9
  7693                           wreg	equ	0xFE8
  7694                           postdec1	equ	0xFE5
  7695                           fsr1h	equ	0xFE2
  7696                           fsr1l	equ	0xFE1
  7697                           bsr	equ	0xFE0
  7698                           indf2	equ	0xFDF
  7699                           fsr2h	equ	0xFDA
  7700                           fsr2l	equ	0xFD9
  7701                           status	equ	0xFD8
  7702                           
  7703 ;; *************** function i1_SetOutputEPWM1 *****************
  7704 ;; Defined at:
  7705 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;  outputconfig    1    wreg     unsigned char 
  7708 ;;  outputmode      1    0[COMRAM] unsigned char 
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;  outputconfig    1    1[COMRAM] unsigned char 
  7711 ;; Return value:  Size  Location     Type
  7712 ;;		None               void
  7713 ;; Registers used:
  7714 ;;		wreg, status,2, status,0
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7720 ;;      Params:         1       0       0       0
  7721 ;;      Locals:         1       0       0       0
  7722 ;;      Temps:          0       0       0       0
  7723 ;;      Totals:         2       0       0       0
  7724 ;;Total ram usage:        2 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; This function calls:
  7727 ;;		Nothing
  7728 ;; This function is called by:
  7729 ;;		_ISR_bassa
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733                           	psect	text19
  7734  0026B8                     __ptext19:
  7735                           	opt stack 0
  7736  0026B8                     i1_SetOutputEPWM1:
  7737                           	opt stack 26
  7738                           
  7739                           ;incstack = 0
  7740                           ;i1SetOutputEPWM1@outputconfig stored from wreg
  7741  0026B8  6E02               	movwf	i1SetOutputEPWM1@outputconfig,c
  7742  0026BA  50BA               	movf	4026,w,c	;volatile
  7743  0026BC  09C0               	iorlw	192
  7744  0026BE  1402               	andwf	i1SetOutputEPWM1@outputconfig,w,c
  7745  0026C0  6EBA               	movwf	4026,c	;volatile
  7746  0026C2  50BA               	movf	4026,w,c	;volatile
  7747  0026C4  090F               	iorlw	15
  7748  0026C6  1401               	andwf	i1SetOutputEPWM1@outputmode,w,c
  7749  0026C8  6EBA               	movwf	4026,c	;volatile
  7750  0026CA  0E3F               	movlw	63
  7751  0026CC  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  7752  0026CE  A4D8               	btfss	status,2,c
  7753  0026D0  D002               	goto	i1l3786
  7754  0026D2  9895               	bcf	3989,4,c	;volatile
  7755  0026D4  0012               	return	
  7756  0026D6                     i1l3786:
  7757  0026D6  0EBF               	movlw	191
  7758  0026D8  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  7759  0026DA  A4D8               	btfss	status,2,c
  7760  0026DC  D003               	goto	i1l3790
  7761  0026DE  9895               	bcf	3989,4,c	;volatile
  7762  0026E0  9A95               	bcf	3989,5,c	;volatile
  7763  0026E2  0012               	return	
  7764  0026E4                     i1l3790:
  7765  0026E4  0E7F               	movlw	127
  7766  0026E6  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  7767  0026E8  B4D8               	btfsc	status,2,c
  7768  0026EA  D003               	goto	i1l748
  7769  0026EC  2802               	incf	i1SetOutputEPWM1@outputconfig,w,c
  7770  0026EE  A4D8               	btfss	status,2,c
  7771  0026F0  0012               	return	
  7772  0026F2                     i1l748:
  7773  0026F2  9895               	bcf	3989,4,c	;volatile
  7774  0026F4  9A95               	bcf	3989,5,c	;volatile
  7775  0026F6  9C95               	bcf	3989,6,c	;volatile
  7776  0026F8  9E95               	bcf	3989,7,c	;volatile
  7777  0026FA  0012               	return	
  7778  0026FC                     __end_ofi1_SetOutputEPWM1:
  7779                           	opt stack 0
  7780                           pclatu	equ	0xFFB
  7781                           pclath	equ	0xFFA
  7782                           tblptru	equ	0xFF8
  7783                           tblptrh	equ	0xFF7
  7784                           tblptrl	equ	0xFF6
  7785                           tablat	equ	0xFF5
  7786                           prodh	equ	0xFF4
  7787                           prodl	equ	0xFF3
  7788                           intcon	equ	0xFF2
  7789                           postinc0	equ	0xFEE
  7790                           fsr0h	equ	0xFEA
  7791                           fsr0l	equ	0xFE9
  7792                           wreg	equ	0xFE8
  7793                           postdec1	equ	0xFE5
  7794                           fsr1h	equ	0xFE2
  7795                           fsr1l	equ	0xFE1
  7796                           bsr	equ	0xFE0
  7797                           indf2	equ	0xFDF
  7798                           fsr2h	equ	0xFDA
  7799                           fsr2l	equ	0xFD9
  7800                           status	equ	0xFD8
  7801                           
  7802 ;; *************** function _CANreceiveMessage *****************
  7803 ;; Defined at:
  7804 ;;		line 528 in file "CANlib.h"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  msg             2    0[COMRAM] PTR struct .
  7807 ;;		 -> msg(15), 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;  tamp            1   11[COMRAM] unsigned char 
  7810 ;;  error           1   10[COMRAM] unsigned char 
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1    wreg      unsigned char 
  7813 ;; Registers used:
  7814 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7820 ;;      Params:         2       0       0       0
  7821 ;;      Locals:         2       0       0       0
  7822 ;;      Temps:          8       0       0       0
  7823 ;;      Totals:        12       0       0       0
  7824 ;;Total ram usage:       12 bytes
  7825 ;; Hardware stack levels used:    1
  7826 ;; This function calls:
  7827 ;;		Nothing
  7828 ;; This function is called by:
  7829 ;;		_ISR_bassa
  7830 ;; This function uses a non-reentrant model
  7831 ;;
  7832                           
  7833                           	psect	text20
  7834  001480                     __ptext20:
  7835                           	opt stack 0
  7836  001480                     _CANreceiveMessage:
  7837                           	opt stack 26
  7838                           
  7839                           ;CANlib.h: 530: BYTE tamp;
  7840                           ;CANlib.h: 531: BYTE error = 0;
  7841                           
  7842                           ;incstack = 0
  7843  001480  0E00               	movlw	0
  7844  001482  6E0B               	movwf	CANreceiveMessage@error,c
  7845                           
  7846                           ;CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7847  001484  BE74               	btfsc	3956,7,c	;volatile
  7848                           
  7849                           ;CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7850  001486  800B               	bsf	CANreceiveMessage@error,0,c
  7851                           
  7852                           ;CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7853  001488  BC74               	btfsc	3956,6,c	;volatile
  7854                           
  7855                           ;CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7856  00148A  820B               	bsf	CANreceiveMessage@error,1,c
  7857                           
  7858                           ;CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7859  00148C  010F               	movlb	15	; () banked
  7860  00148E  AF50               	btfss	80,7,b	;volatile
  7861  001490  D143               	goto	i1l408
  7862                           
  7863                           ; BSR set to: 15
  7864                           ;CANlib.h: 541: {
  7865                           ;CANlib.h: 542: msg->identifier = 0;
  7866  001492  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7867  001496  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7868  00149A  6ADE               	clrf	postinc2,c
  7869  00149C  6ADE               	clrf	postinc2,c
  7870  00149E  6ADE               	clrf	postinc2,c
  7871  0014A0  6ADD               	clrf	postdec2,c
  7872                           
  7873                           ; BSR set to: 15
  7874                           ;CANlib.h: 543: msg->data[0] =RXB1D0;
  7875  0014A2  EE20 F004          	lfsr	2,4
  7876  0014A6  5001               	movf	CANreceiveMessage@msg,w,c
  7877  0014A8  26D9               	addwf	fsr2l,f,c
  7878  0014AA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7879  0014AC  22DA               	addwfc	fsr2h,f,c
  7880  0014AE  CF56 FFDF          	movff	3926,indf2	;volatile
  7881                           
  7882                           ; BSR set to: 15
  7883                           ;CANlib.h: 544: msg->data[1] =RXB1D1;
  7884  0014B2  EE20 F005          	lfsr	2,5
  7885  0014B6  5001               	movf	CANreceiveMessage@msg,w,c
  7886  0014B8  26D9               	addwf	fsr2l,f,c
  7887  0014BA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7888  0014BC  22DA               	addwfc	fsr2h,f,c
  7889  0014BE  CF57 FFDF          	movff	3927,indf2	;volatile
  7890                           
  7891                           ; BSR set to: 15
  7892                           ;CANlib.h: 545: msg->data[2] =RXB1D2;
  7893  0014C2  EE20 F006          	lfsr	2,6
  7894  0014C6  5001               	movf	CANreceiveMessage@msg,w,c
  7895  0014C8  26D9               	addwf	fsr2l,f,c
  7896  0014CA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7897  0014CC  22DA               	addwfc	fsr2h,f,c
  7898  0014CE  CF58 FFDF          	movff	3928,indf2	;volatile
  7899                           
  7900                           ; BSR set to: 15
  7901                           ;CANlib.h: 546: msg->data[3] =RXB1D3;
  7902  0014D2  EE20 F007          	lfsr	2,7
  7903  0014D6  5001               	movf	CANreceiveMessage@msg,w,c
  7904  0014D8  26D9               	addwf	fsr2l,f,c
  7905  0014DA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7906  0014DC  22DA               	addwfc	fsr2h,f,c
  7907  0014DE  CF59 FFDF          	movff	3929,indf2	;volatile
  7908                           
  7909                           ; BSR set to: 15
  7910                           ;CANlib.h: 547: msg->data[4] =RXB1D4;
  7911  0014E2  EE20 F008          	lfsr	2,8
  7912  0014E6  5001               	movf	CANreceiveMessage@msg,w,c
  7913  0014E8  26D9               	addwf	fsr2l,f,c
  7914  0014EA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7915  0014EC  22DA               	addwfc	fsr2h,f,c
  7916  0014EE  CF5A FFDF          	movff	3930,indf2	;volatile
  7917                           
  7918                           ; BSR set to: 15
  7919                           ;CANlib.h: 548: msg->data[5] =RXB1D5;
  7920  0014F2  EE20 F009          	lfsr	2,9
  7921  0014F6  5001               	movf	CANreceiveMessage@msg,w,c
  7922  0014F8  26D9               	addwf	fsr2l,f,c
  7923  0014FA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7924  0014FC  22DA               	addwfc	fsr2h,f,c
  7925  0014FE  CF5B FFDF          	movff	3931,indf2	;volatile
  7926                           
  7927                           ; BSR set to: 15
  7928                           ;CANlib.h: 549: msg->data[6] =RXB1D6;
  7929  001502  EE20 F00A          	lfsr	2,10
  7930  001506  5001               	movf	CANreceiveMessage@msg,w,c
  7931  001508  26D9               	addwf	fsr2l,f,c
  7932  00150A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7933  00150C  22DA               	addwfc	fsr2h,f,c
  7934  00150E  CF5C FFDF          	movff	3932,indf2	;volatile
  7935                           
  7936                           ; BSR set to: 15
  7937                           ;CANlib.h: 550: msg->data[7] =RXB1D7;
  7938  001512  EE20 F00B          	lfsr	2,11
  7939  001516  5001               	movf	CANreceiveMessage@msg,w,c
  7940  001518  26D9               	addwf	fsr2l,f,c
  7941  00151A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7942  00151C  22DA               	addwfc	fsr2h,f,c
  7943  00151E  CF5D FFDF          	movff	3933,indf2	;volatile
  7944                           
  7945                           ; BSR set to: 15
  7946                           ;CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7947  001522  EE20 F00E          	lfsr	2,14
  7948  001526  5001               	movf	CANreceiveMessage@msg,w,c
  7949  001528  26D9               	addwf	fsr2l,f,c
  7950  00152A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7951  00152C  22DA               	addwfc	fsr2h,f,c
  7952  00152E  010F               	movlb	15	; () banked
  7953  001530  AD55               	btfss	85,6,b	;volatile
  7954  001532  D002               	goto	i1u385_20
  7955  001534  0E01               	movlw	1
  7956  001536  D001               	goto	i1u385_26
  7957  001538                     i1u385_20:
  7958  001538  0E00               	movlw	0
  7959  00153A                     i1u385_26:
  7960  00153A  6EDF               	movwf	indf2,c
  7961                           
  7962                           ; BSR set to: 15
  7963                           ;CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7964  00153C  EE20 F00D          	lfsr	2,13
  7965  001540  5001               	movf	CANreceiveMessage@msg,w,c
  7966  001542  26D9               	addwf	fsr2l,f,c
  7967  001544  5002               	movf	CANreceiveMessage@msg+1,w,c
  7968  001546  22DA               	addwfc	fsr2h,f,c
  7969  001548  010F               	movlb	15	; () banked
  7970  00154A  5155               	movf	85,w,b	;volatile
  7971  00154C  0B0F               	andlw	15
  7972  00154E  6EDF               	movwf	indf2,c
  7973                           
  7974                           ; BSR set to: 15
  7975                           ;CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7976  001550  EE20 F00C          	lfsr	2,12
  7977  001554  5001               	movf	CANreceiveMessage@msg,w,c
  7978  001556  26D9               	addwf	fsr2l,f,c
  7979  001558  5002               	movf	CANreceiveMessage@msg+1,w,c
  7980  00155A  22DA               	addwfc	fsr2h,f,c
  7981  00155C  010F               	movlb	15	; () banked
  7982  00155E  A752               	btfss	82,3,b	;volatile
  7983  001560  D002               	goto	i1u386_20
  7984  001562  0E01               	movlw	1
  7985  001564  D001               	goto	i1u386_26
  7986  001566                     i1u386_20:
  7987  001566  0E00               	movlw	0
  7988  001568                     i1u386_26:
  7989  001568  6EDF               	movwf	indf2,c
  7990                           
  7991                           ; BSR set to: 15
  7992                           ;CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7993  00156A  010F               	movlb	15	; () banked
  7994  00156C  B752               	btfsc	82,3,b	;volatile
  7995  00156E  D044               	goto	i1l3524
  7996                           
  7997                           ; BSR set to: 15
  7998                           ;CANlib.h: 559: {
  7999                           ;CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  8000  001570  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8001  001574  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8002  001576  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8003  001578  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8004  00157A  0E03               	movlw	3
  8005  00157C                     i1u388_25:
  8006  00157C  90D8               	bcf	status,0,c
  8007  00157E  3603               	rlcf	??_CANreceiveMessage,f,c
  8008  001580  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8009  001582  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8010  001584  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8011  001586  2EE8               	decfsz	wreg,f,c
  8012  001588  D7F9               	goto	i1u388_25
  8013  00158A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8014  00158E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8015  001592  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8016  001596  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8017  00159A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8018  00159E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8019                           
  8020                           ; BSR set to: 15
  8021                           ;CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  8022  0015A2  010F               	movlb	15	; () banked
  8023  0015A4  3952               	swapf	82,w,b	;volatile
  8024  0015A6  42E8               	rrncf	wreg,f,c
  8025  0015A8  0B07               	andlw	7
  8026  0015AA  0B07               	andlw	7
  8027  0015AC  6E0C               	movwf	CANreceiveMessage@tamp,c
  8028                           
  8029                           ; BSR set to: 15
  8030                           ;CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  8031  0015AE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8032  0015B2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8033  0015B6  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8034  0015BA  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8035  0015BE  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8036  0015C2  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8037  0015C6  500C               	movf	CANreceiveMessage@tamp,w,c
  8038  0015C8  2403               	addwf	??_CANreceiveMessage,w,c
  8039  0015CA  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8040  0015CC  0E00               	movlw	0
  8041  0015CE  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8042  0015D0  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8043  0015D2  0E00               	movlw	0
  8044  0015D4  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8045  0015D6  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8046  0015D8  0E00               	movlw	0
  8047  0015DA  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8048  0015DC  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8049  0015DE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8050  0015E2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8051  0015E6  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8052  0015EA  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8053  0015EE  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8054  0015F2  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8055                           
  8056                           ;CANlib.h: 563: }
  8057  0015F6  D08D               	goto	i1l3550
  8058  0015F8                     i1l3524:
  8059                           
  8060                           ; BSR set to: 15
  8061                           ;CANlib.h: 564: else
  8062                           ;CANlib.h: 565: {
  8063                           ;CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  8064  0015F8  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  8065  0015FC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8066  0015FE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8067  001600  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8068  001602  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8069  001606  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8070  00160A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8071  00160E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8072  001612  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8073  001616  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8074                           
  8075                           ; BSR set to: 15
  8076                           ;CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  8077  00161A  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  8078  00161E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8079  001620  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8080  001622  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8081  001624  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8082  001628  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8083  00162C  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8084  001630  6A03               	clrf	??_CANreceiveMessage,c
  8085  001632  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8086  001636  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8087  00163A  5003               	movf	??_CANreceiveMessage,w,c
  8088  00163C  26DE               	addwf	postinc2,f,c
  8089  00163E  5004               	movf	??_CANreceiveMessage+1,w,c
  8090  001640  22DE               	addwfc	postinc2,f,c
  8091  001642  5005               	movf	??_CANreceiveMessage+2,w,c
  8092  001644  22DE               	addwfc	postinc2,f,c
  8093  001646  5006               	movf	??_CANreceiveMessage+3,w,c
  8094  001648  22DE               	addwfc	postinc2,f,c
  8095                           
  8096                           ; BSR set to: 15
  8097                           ;CANlib.h: 569: if (RXB1SIDLbits.EID16)
  8098  00164A  010F               	movlb	15	; () banked
  8099  00164C  A152               	btfss	82,0,b	;volatile
  8100  00164E  D00C               	goto	i1l3532
  8101                           
  8102                           ; BSR set to: 15
  8103                           ;CANlib.h: 570: msg->identifier |= 0x00010000;
  8104  001650  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8105  001654  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8106  001658  0E00               	movlw	0
  8107  00165A  12DE               	iorwf	postinc2,f,c
  8108  00165C  0E00               	movlw	0
  8109  00165E  12DE               	iorwf	postinc2,f,c
  8110  001660  0E01               	movlw	1
  8111  001662  12DE               	iorwf	postinc2,f,c
  8112  001664  0E00               	movlw	0
  8113  001666  12DE               	iorwf	postinc2,f,c
  8114  001668                     i1l3532:
  8115                           
  8116                           ; BSR set to: 15
  8117                           ;CANlib.h: 571: if (RXB1SIDLbits.EID17)
  8118  001668  010F               	movlb	15	; () banked
  8119  00166A  A352               	btfss	82,1,b	;volatile
  8120  00166C  D00C               	goto	i1l3536
  8121                           
  8122                           ; BSR set to: 15
  8123                           ;CANlib.h: 572: msg->identifier |= 0x00020000;
  8124  00166E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8125  001672  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8126  001676  0E00               	movlw	0
  8127  001678  12DE               	iorwf	postinc2,f,c
  8128  00167A  0E00               	movlw	0
  8129  00167C  12DE               	iorwf	postinc2,f,c
  8130  00167E  0E02               	movlw	2
  8131  001680  12DE               	iorwf	postinc2,f,c
  8132  001682  0E00               	movlw	0
  8133  001684  12DE               	iorwf	postinc2,f,c
  8134  001686                     i1l3536:
  8135                           
  8136                           ; BSR set to: 15
  8137                           ;CANlib.h: 573: if (RXB1SIDLbits.SID0)
  8138  001686  010F               	movlb	15	; () banked
  8139  001688  AB52               	btfss	82,5,b	;volatile
  8140  00168A  D00C               	goto	i1l3540
  8141                           
  8142                           ; BSR set to: 15
  8143                           ;CANlib.h: 574: msg->identifier |= 0x00040000;
  8144  00168C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8145  001690  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8146  001694  0E00               	movlw	0
  8147  001696  12DE               	iorwf	postinc2,f,c
  8148  001698  0E00               	movlw	0
  8149  00169A  12DE               	iorwf	postinc2,f,c
  8150  00169C  0E04               	movlw	4
  8151  00169E  12DE               	iorwf	postinc2,f,c
  8152  0016A0  0E00               	movlw	0
  8153  0016A2  12DE               	iorwf	postinc2,f,c
  8154  0016A4                     i1l3540:
  8155                           
  8156                           ; BSR set to: 15
  8157                           ;CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8158  0016A4  010F               	movlb	15	; () banked
  8159  0016A6  AD52               	btfss	82,6,b	;volatile
  8160  0016A8  D00C               	goto	i1l3544
  8161                           
  8162                           ; BSR set to: 15
  8163                           ;CANlib.h: 576: msg->identifier |= 0x00080000;
  8164  0016AA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8165  0016AE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8166  0016B2  0E00               	movlw	0
  8167  0016B4  12DE               	iorwf	postinc2,f,c
  8168  0016B6  0E00               	movlw	0
  8169  0016B8  12DE               	iorwf	postinc2,f,c
  8170  0016BA  0E08               	movlw	8
  8171  0016BC  12DE               	iorwf	postinc2,f,c
  8172  0016BE  0E00               	movlw	0
  8173  0016C0  12DE               	iorwf	postinc2,f,c
  8174  0016C2                     i1l3544:
  8175                           
  8176                           ; BSR set to: 15
  8177                           ;CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8178  0016C2  010F               	movlb	15	; () banked
  8179  0016C4  AF52               	btfss	82,7,b	;volatile
  8180  0016C6  D00C               	goto	i1l3548
  8181                           
  8182                           ; BSR set to: 15
  8183                           ;CANlib.h: 578: msg->identifier |= 0x00100000;
  8184  0016C8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8185  0016CC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8186  0016D0  0E00               	movlw	0
  8187  0016D2  12DE               	iorwf	postinc2,f,c
  8188  0016D4  0E00               	movlw	0
  8189  0016D6  12DE               	iorwf	postinc2,f,c
  8190  0016D8  0E10               	movlw	16
  8191  0016DA  12DE               	iorwf	postinc2,f,c
  8192  0016DC  0E00               	movlw	0
  8193  0016DE  12DE               	iorwf	postinc2,f,c
  8194  0016E0                     i1l3548:
  8195                           
  8196                           ; BSR set to: 15
  8197                           ;CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8198  0016E0  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8199  0016E4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8200  0016E6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8201  0016E8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8202  0016EA  0E15               	movlw	21
  8203  0016EC                     i1u394_25:
  8204  0016EC  90D8               	bcf	status,0,c
  8205  0016EE  3603               	rlcf	??_CANreceiveMessage,f,c
  8206  0016F0  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8207  0016F2  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8208  0016F4  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8209  0016F6  2EE8               	decfsz	wreg,f,c
  8210  0016F8  D7F9               	goto	i1u394_25
  8211  0016FA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8212  0016FE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8213  001702  5003               	movf	??_CANreceiveMessage,w,c
  8214  001704  12DE               	iorwf	postinc2,f,c
  8215  001706  5004               	movf	??_CANreceiveMessage+1,w,c
  8216  001708  12DE               	iorwf	postinc2,f,c
  8217  00170A  5005               	movf	??_CANreceiveMessage+2,w,c
  8218  00170C  12DE               	iorwf	postinc2,f,c
  8219  00170E  5006               	movf	??_CANreceiveMessage+3,w,c
  8220  001710  12DE               	iorwf	postinc2,f,c
  8221  001712                     i1l3550:
  8222                           
  8223                           ; BSR set to: 15
  8224                           ;CANlib.h: 581: }
  8225                           ;CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8226  001712  010F               	movlb	15	; () banked
  8227  001714  9F50               	bcf	80,7,b	;volatile
  8228                           
  8229                           ; BSR set to: 15
  8230                           ;CANlib.h: 584: return (error);
  8231                           ;	Return value of _CANreceiveMessage is never used
  8232  001716  0012               	return	
  8233  001718                     i1l408:
  8234                           
  8235                           ; BSR set to: 15
  8236                           ;CANlib.h: 585: }
  8237                           ;CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8238  001718  AE60               	btfss	3936,7,c	;volatile
  8239  00171A  0012               	return	
  8240                           
  8241                           ; BSR set to: 15
  8242                           ;CANlib.h: 588: {
  8243                           ;CANlib.h: 589: msg->identifier = 0;
  8244  00171C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8245  001720  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8246  001724  6ADE               	clrf	postinc2,c
  8247  001726  6ADE               	clrf	postinc2,c
  8248  001728  6ADE               	clrf	postinc2,c
  8249  00172A  6ADD               	clrf	postdec2,c
  8250                           
  8251                           ; BSR set to: 15
  8252                           ;CANlib.h: 590: msg->data[0] =RXB0D0;
  8253  00172C  EE20 F004          	lfsr	2,4
  8254  001730  5001               	movf	CANreceiveMessage@msg,w,c
  8255  001732  26D9               	addwf	fsr2l,f,c
  8256  001734  5002               	movf	CANreceiveMessage@msg+1,w,c
  8257  001736  22DA               	addwfc	fsr2h,f,c
  8258  001738  CF66 FFDF          	movff	3942,indf2	;volatile
  8259                           
  8260                           ; BSR set to: 15
  8261                           ;CANlib.h: 591: msg->data[1] =RXB0D1;
  8262  00173C  EE20 F005          	lfsr	2,5
  8263  001740  5001               	movf	CANreceiveMessage@msg,w,c
  8264  001742  26D9               	addwf	fsr2l,f,c
  8265  001744  5002               	movf	CANreceiveMessage@msg+1,w,c
  8266  001746  22DA               	addwfc	fsr2h,f,c
  8267  001748  CF67 FFDF          	movff	3943,indf2	;volatile
  8268                           
  8269                           ; BSR set to: 15
  8270                           ;CANlib.h: 592: msg->data[2] =RXB0D2;
  8271  00174C  EE20 F006          	lfsr	2,6
  8272  001750  5001               	movf	CANreceiveMessage@msg,w,c
  8273  001752  26D9               	addwf	fsr2l,f,c
  8274  001754  5002               	movf	CANreceiveMessage@msg+1,w,c
  8275  001756  22DA               	addwfc	fsr2h,f,c
  8276  001758  CF68 FFDF          	movff	3944,indf2	;volatile
  8277                           
  8278                           ; BSR set to: 15
  8279                           ;CANlib.h: 593: msg->data[3] =RXB0D3;
  8280  00175C  EE20 F007          	lfsr	2,7
  8281  001760  5001               	movf	CANreceiveMessage@msg,w,c
  8282  001762  26D9               	addwf	fsr2l,f,c
  8283  001764  5002               	movf	CANreceiveMessage@msg+1,w,c
  8284  001766  22DA               	addwfc	fsr2h,f,c
  8285  001768  CF69 FFDF          	movff	3945,indf2	;volatile
  8286                           
  8287                           ; BSR set to: 15
  8288                           ;CANlib.h: 594: msg->data[4] =RXB0D4;
  8289  00176C  EE20 F008          	lfsr	2,8
  8290  001770  5001               	movf	CANreceiveMessage@msg,w,c
  8291  001772  26D9               	addwf	fsr2l,f,c
  8292  001774  5002               	movf	CANreceiveMessage@msg+1,w,c
  8293  001776  22DA               	addwfc	fsr2h,f,c
  8294  001778  CF6A FFDF          	movff	3946,indf2	;volatile
  8295                           
  8296                           ; BSR set to: 15
  8297                           ;CANlib.h: 595: msg->data[5] =RXB0D5;
  8298  00177C  EE20 F009          	lfsr	2,9
  8299  001780  5001               	movf	CANreceiveMessage@msg,w,c
  8300  001782  26D9               	addwf	fsr2l,f,c
  8301  001784  5002               	movf	CANreceiveMessage@msg+1,w,c
  8302  001786  22DA               	addwfc	fsr2h,f,c
  8303  001788  CF6B FFDF          	movff	3947,indf2	;volatile
  8304                           
  8305                           ; BSR set to: 15
  8306                           ;CANlib.h: 596: msg->data[6] =RXB0D6;
  8307  00178C  EE20 F00A          	lfsr	2,10
  8308  001790  5001               	movf	CANreceiveMessage@msg,w,c
  8309  001792  26D9               	addwf	fsr2l,f,c
  8310  001794  5002               	movf	CANreceiveMessage@msg+1,w,c
  8311  001796  22DA               	addwfc	fsr2h,f,c
  8312  001798  CF6C FFDF          	movff	3948,indf2	;volatile
  8313                           
  8314                           ; BSR set to: 15
  8315                           ;CANlib.h: 597: msg->data[7] =RXB0D7;
  8316  00179C  EE20 F00B          	lfsr	2,11
  8317  0017A0  5001               	movf	CANreceiveMessage@msg,w,c
  8318  0017A2  26D9               	addwf	fsr2l,f,c
  8319  0017A4  5002               	movf	CANreceiveMessage@msg+1,w,c
  8320  0017A6  22DA               	addwfc	fsr2h,f,c
  8321  0017A8  CF6D FFDF          	movff	3949,indf2	;volatile
  8322                           
  8323                           ; BSR set to: 15
  8324                           ;CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8325  0017AC  EE20 F00E          	lfsr	2,14
  8326  0017B0  5001               	movf	CANreceiveMessage@msg,w,c
  8327  0017B2  26D9               	addwf	fsr2l,f,c
  8328  0017B4  5002               	movf	CANreceiveMessage@msg+1,w,c
  8329  0017B6  22DA               	addwfc	fsr2h,f,c
  8330  0017B8  AC65               	btfss	3941,6,c	;volatile
  8331  0017BA  D002               	goto	i1u396_20
  8332  0017BC  0E01               	movlw	1
  8333  0017BE  D001               	goto	i1u396_26
  8334  0017C0                     i1u396_20:
  8335  0017C0  0E00               	movlw	0
  8336  0017C2                     i1u396_26:
  8337  0017C2  6EDF               	movwf	indf2,c
  8338                           
  8339                           ; BSR set to: 15
  8340                           ;CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8341  0017C4  EE20 F00D          	lfsr	2,13
  8342  0017C8  5001               	movf	CANreceiveMessage@msg,w,c
  8343  0017CA  26D9               	addwf	fsr2l,f,c
  8344  0017CC  5002               	movf	CANreceiveMessage@msg+1,w,c
  8345  0017CE  22DA               	addwfc	fsr2h,f,c
  8346  0017D0  5065               	movf	3941,w,c	;volatile
  8347  0017D2  0B0F               	andlw	15
  8348  0017D4  6EDF               	movwf	indf2,c
  8349                           
  8350                           ; BSR set to: 15
  8351                           ;CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8352  0017D6  EE20 F00C          	lfsr	2,12
  8353  0017DA  5001               	movf	CANreceiveMessage@msg,w,c
  8354  0017DC  26D9               	addwf	fsr2l,f,c
  8355  0017DE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8356  0017E0  22DA               	addwfc	fsr2h,f,c
  8357  0017E2  A662               	btfss	3938,3,c	;volatile
  8358  0017E4  D002               	goto	i1u397_20
  8359  0017E6  0E01               	movlw	1
  8360  0017E8  D001               	goto	i1u397_26
  8361  0017EA                     i1u397_20:
  8362  0017EA  0E00               	movlw	0
  8363  0017EC                     i1u397_26:
  8364  0017EC  6EDF               	movwf	indf2,c
  8365                           
  8366                           ; BSR set to: 15
  8367                           ;CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8368  0017EE  B662               	btfsc	3938,3,c	;volatile
  8369  0017F0  D043               	goto	i1l3586
  8370                           
  8371                           ; BSR set to: 15
  8372                           ;CANlib.h: 606: {
  8373                           ;CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8374  0017F2  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8375  0017F6  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8376  0017F8  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8377  0017FA  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8378  0017FC  0E03               	movlw	3
  8379  0017FE                     i1u399_25:
  8380  0017FE  90D8               	bcf	status,0,c
  8381  001800  3603               	rlcf	??_CANreceiveMessage,f,c
  8382  001802  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8383  001804  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8384  001806  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8385  001808  2EE8               	decfsz	wreg,f,c
  8386  00180A  D7F9               	goto	i1u399_25
  8387  00180C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8388  001810  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8389  001814  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8390  001818  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8391  00181C  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8392  001820  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8393                           
  8394                           ; BSR set to: 15
  8395                           ;CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8396  001824  3862               	swapf	3938,w,c	;volatile
  8397  001826  42E8               	rrncf	wreg,f,c
  8398  001828  0B07               	andlw	7
  8399  00182A  0B07               	andlw	7
  8400  00182C  6E0C               	movwf	CANreceiveMessage@tamp,c
  8401                           
  8402                           ; BSR set to: 15
  8403                           ;CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8404  00182E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8405  001832  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8406  001836  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8407  00183A  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8408  00183E  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8409  001842  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8410  001846  500C               	movf	CANreceiveMessage@tamp,w,c
  8411  001848  2403               	addwf	??_CANreceiveMessage,w,c
  8412  00184A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8413  00184C  0E00               	movlw	0
  8414  00184E  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8415  001850  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8416  001852  0E00               	movlw	0
  8417  001854  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8418  001856  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8419  001858  0E00               	movlw	0
  8420  00185A  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8421  00185C  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8422  00185E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8423  001862  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8424  001866  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8425  00186A  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8426  00186E  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8427  001872  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8428                           
  8429                           ;CANlib.h: 610: }
  8430  001876  D088               	goto	i1l3612
  8431  001878                     i1l3586:
  8432                           
  8433                           ; BSR set to: 15
  8434                           ;CANlib.h: 611: else
  8435                           ;CANlib.h: 612: {
  8436                           ;CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8437  001878  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8438  00187C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8439  00187E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8440  001880  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8441  001882  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8442  001886  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8443  00188A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8444  00188E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8445  001892  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8446  001896  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8447                           
  8448                           ; BSR set to: 15
  8449                           ;CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8450  00189A  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8451  00189E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8452  0018A0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8453  0018A2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8454  0018A4  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8455  0018A8  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8456  0018AC  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8457  0018B0  6A03               	clrf	??_CANreceiveMessage,c
  8458  0018B2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8459  0018B6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8460  0018BA  5003               	movf	??_CANreceiveMessage,w,c
  8461  0018BC  26DE               	addwf	postinc2,f,c
  8462  0018BE  5004               	movf	??_CANreceiveMessage+1,w,c
  8463  0018C0  22DE               	addwfc	postinc2,f,c
  8464  0018C2  5005               	movf	??_CANreceiveMessage+2,w,c
  8465  0018C4  22DE               	addwfc	postinc2,f,c
  8466  0018C6  5006               	movf	??_CANreceiveMessage+3,w,c
  8467  0018C8  22DE               	addwfc	postinc2,f,c
  8468                           
  8469                           ; BSR set to: 15
  8470                           ;CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8471  0018CA  A062               	btfss	3938,0,c	;volatile
  8472  0018CC  D00C               	goto	i1l3594
  8473                           
  8474                           ; BSR set to: 15
  8475                           ;CANlib.h: 617: msg->identifier |= 0x00010000;
  8476  0018CE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8477  0018D2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8478  0018D6  0E00               	movlw	0
  8479  0018D8  12DE               	iorwf	postinc2,f,c
  8480  0018DA  0E00               	movlw	0
  8481  0018DC  12DE               	iorwf	postinc2,f,c
  8482  0018DE  0E01               	movlw	1
  8483  0018E0  12DE               	iorwf	postinc2,f,c
  8484  0018E2  0E00               	movlw	0
  8485  0018E4  12DE               	iorwf	postinc2,f,c
  8486  0018E6                     i1l3594:
  8487                           
  8488                           ; BSR set to: 15
  8489                           ;CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8490  0018E6  A262               	btfss	3938,1,c	;volatile
  8491  0018E8  D00C               	goto	i1l3598
  8492                           
  8493                           ; BSR set to: 15
  8494                           ;CANlib.h: 619: msg->identifier |= 0x00020000;
  8495  0018EA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8496  0018EE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8497  0018F2  0E00               	movlw	0
  8498  0018F4  12DE               	iorwf	postinc2,f,c
  8499  0018F6  0E00               	movlw	0
  8500  0018F8  12DE               	iorwf	postinc2,f,c
  8501  0018FA  0E02               	movlw	2
  8502  0018FC  12DE               	iorwf	postinc2,f,c
  8503  0018FE  0E00               	movlw	0
  8504  001900  12DE               	iorwf	postinc2,f,c
  8505  001902                     i1l3598:
  8506                           
  8507                           ; BSR set to: 15
  8508                           ;CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8509  001902  AA62               	btfss	3938,5,c	;volatile
  8510  001904  D00C               	goto	i1l3602
  8511                           
  8512                           ; BSR set to: 15
  8513                           ;CANlib.h: 621: msg->identifier |= 0x00040000;
  8514  001906  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8515  00190A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8516  00190E  0E00               	movlw	0
  8517  001910  12DE               	iorwf	postinc2,f,c
  8518  001912  0E00               	movlw	0
  8519  001914  12DE               	iorwf	postinc2,f,c
  8520  001916  0E04               	movlw	4
  8521  001918  12DE               	iorwf	postinc2,f,c
  8522  00191A  0E00               	movlw	0
  8523  00191C  12DE               	iorwf	postinc2,f,c
  8524  00191E                     i1l3602:
  8525                           
  8526                           ; BSR set to: 15
  8527                           ;CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8528  00191E  AC62               	btfss	3938,6,c	;volatile
  8529  001920  D00C               	goto	i1l3606
  8530                           
  8531                           ; BSR set to: 15
  8532                           ;CANlib.h: 623: msg->identifier |= 0x00080000;
  8533  001922  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8534  001926  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8535  00192A  0E00               	movlw	0
  8536  00192C  12DE               	iorwf	postinc2,f,c
  8537  00192E  0E00               	movlw	0
  8538  001930  12DE               	iorwf	postinc2,f,c
  8539  001932  0E08               	movlw	8
  8540  001934  12DE               	iorwf	postinc2,f,c
  8541  001936  0E00               	movlw	0
  8542  001938  12DE               	iorwf	postinc2,f,c
  8543  00193A                     i1l3606:
  8544                           
  8545                           ; BSR set to: 15
  8546                           ;CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8547  00193A  AE62               	btfss	3938,7,c	;volatile
  8548  00193C  D00C               	goto	i1l3610
  8549                           
  8550                           ; BSR set to: 15
  8551                           ;CANlib.h: 625: msg->identifier |= 0x00100000;
  8552  00193E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8553  001942  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8554  001946  0E00               	movlw	0
  8555  001948  12DE               	iorwf	postinc2,f,c
  8556  00194A  0E00               	movlw	0
  8557  00194C  12DE               	iorwf	postinc2,f,c
  8558  00194E  0E10               	movlw	16
  8559  001950  12DE               	iorwf	postinc2,f,c
  8560  001952  0E00               	movlw	0
  8561  001954  12DE               	iorwf	postinc2,f,c
  8562  001956                     i1l3610:
  8563                           
  8564                           ; BSR set to: 15
  8565                           ;CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8566  001956  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8567  00195A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8568  00195C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8569  00195E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8570  001960  0E15               	movlw	21
  8571  001962                     i1u405_25:
  8572  001962  90D8               	bcf	status,0,c
  8573  001964  3603               	rlcf	??_CANreceiveMessage,f,c
  8574  001966  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8575  001968  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8576  00196A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8577  00196C  2EE8               	decfsz	wreg,f,c
  8578  00196E  D7F9               	goto	i1u405_25
  8579  001970  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8580  001974  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8581  001978  5003               	movf	??_CANreceiveMessage,w,c
  8582  00197A  12DE               	iorwf	postinc2,f,c
  8583  00197C  5004               	movf	??_CANreceiveMessage+1,w,c
  8584  00197E  12DE               	iorwf	postinc2,f,c
  8585  001980  5005               	movf	??_CANreceiveMessage+2,w,c
  8586  001982  12DE               	iorwf	postinc2,f,c
  8587  001984  5006               	movf	??_CANreceiveMessage+3,w,c
  8588  001986  12DE               	iorwf	postinc2,f,c
  8589  001988                     i1l3612:
  8590                           
  8591                           ; BSR set to: 15
  8592                           ;CANlib.h: 629: }
  8593                           ;CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8594  001988  9E60               	bcf	3936,7,c	;volatile
  8595                           
  8596                           ; BSR set to: 15
  8597                           ;CANlib.h: 632: return (error);
  8598                           ;	Return value of _CANreceiveMessage is never used
  8599  00198A  0012               	return	
  8600  00198C                     __end_of_CANreceiveMessage:
  8601                           	opt stack 0
  8602                           pclatu	equ	0xFFB
  8603                           pclath	equ	0xFFA
  8604                           tblptru	equ	0xFF8
  8605                           tblptrh	equ	0xFF7
  8606                           tblptrl	equ	0xFF6
  8607                           tablat	equ	0xFF5
  8608                           prodh	equ	0xFF4
  8609                           prodl	equ	0xFF3
  8610                           intcon	equ	0xFF2
  8611                           postinc0	equ	0xFEE
  8612                           fsr0h	equ	0xFEA
  8613                           fsr0l	equ	0xFE9
  8614                           wreg	equ	0xFE8
  8615                           postdec1	equ	0xFE5
  8616                           fsr1h	equ	0xFE2
  8617                           fsr1l	equ	0xFE1
  8618                           bsr	equ	0xFE0
  8619                           indf2	equ	0xFDF
  8620                           postinc2	equ	0xFDE
  8621                           postdec2	equ	0xFDD
  8622                           fsr2h	equ	0xFDA
  8623                           fsr2l	equ	0xFD9
  8624                           status	equ	0xFD8
  8625                           
  8626 ;; *************** function _CANisRxReady *****************
  8627 ;; Defined at:
  8628 ;;		line 1163 in file "CANlib.h"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;		None
  8631 ;; Auto vars:     Size  Location     Type
  8632 ;;		None
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  1    wreg      unsigned char 
  8635 ;; Registers used:
  8636 ;;		wreg, status,2
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 0/0
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8642 ;;      Params:         0       0       0       0
  8643 ;;      Locals:         1       0       0       0
  8644 ;;      Temps:          0       0       0       0
  8645 ;;      Totals:         1       0       0       0
  8646 ;;Total ram usage:        1 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; This function calls:
  8649 ;;		Nothing
  8650 ;; This function is called by:
  8651 ;;		_ISR_bassa
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           	psect	text21
  8656  0027EE                     __ptext21:
  8657                           	opt stack 0
  8658  0027EE                     _CANisRxReady:
  8659                           	opt stack 26
  8660                           
  8661                           ;CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8662                           
  8663                           ; BSR set to: 15
  8664                           ;incstack = 0
  8665  0027EE  0E01               	movlw	1
  8666  0027F0  6E01               	movwf	_CANisRxReady$2991,c
  8667  0027F2  BE60               	btfsc	3936,7,c	;volatile
  8668  0027F4  D005               	goto	i1l559
  8669  0027F6  010F               	movlb	15	; () banked
  8670  0027F8  BF50               	btfsc	80,7,b	;volatile
  8671  0027FA  D002               	goto	i1l559
  8672                           
  8673                           ; BSR set to: 15
  8674  0027FC  0E00               	movlw	0
  8675  0027FE  6E01               	movwf	_CANisRxReady$2991,c
  8676  002800                     i1l559:
  8677  002800  5001               	movf	_CANisRxReady$2991,w,c
  8678  002802  0012               	return	
  8679  002804                     __end_of_CANisRxReady:
  8680                           	opt stack 0
  8681  0000                     pclatu	equ	0xFFB
  8682                           pclath	equ	0xFFA
  8683                           tblptru	equ	0xFF8
  8684                           tblptrh	equ	0xFF7
  8685                           tblptrl	equ	0xFF6
  8686                           tablat	equ	0xFF5
  8687                           prodh	equ	0xFF4
  8688                           prodl	equ	0xFF3
  8689                           intcon	equ	0xFF2
  8690                           postinc0	equ	0xFEE
  8691                           fsr0h	equ	0xFEA
  8692                           fsr0l	equ	0xFE9
  8693                           wreg	equ	0xFE8
  8694                           postdec1	equ	0xFE5
  8695                           fsr1h	equ	0xFE2
  8696                           fsr1l	equ	0xFE1
  8697                           bsr	equ	0xFE0
  8698                           indf2	equ	0xFDF
  8699                           postinc2	equ	0xFDE
  8700                           postdec2	equ	0xFDD
  8701                           fsr2h	equ	0xFDA
  8702                           fsr2l	equ	0xFD9
  8703                           status	equ	0xFD8
  8704                           pclatu	equ	0xFFB
  8705                           pclath	equ	0xFFA
  8706                           tblptru	equ	0xFF8
  8707                           tblptrh	equ	0xFF7
  8708                           tblptrl	equ	0xFF6
  8709                           tablat	equ	0xFF5
  8710                           prodh	equ	0xFF4
  8711                           prodl	equ	0xFF3
  8712                           intcon	equ	0xFF2
  8713                           postinc0	equ	0xFEE
  8714                           fsr0h	equ	0xFEA
  8715                           fsr0l	equ	0xFE9
  8716                           wreg	equ	0xFE8
  8717                           postdec1	equ	0xFE5
  8718                           fsr1h	equ	0xFE2
  8719                           fsr1l	equ	0xFE1
  8720                           bsr	equ	0xFE0
  8721                           indf2	equ	0xFDF
  8722                           postinc2	equ	0xFDE
  8723                           postdec2	equ	0xFDD
  8724                           fsr2h	equ	0xFDA
  8725                           fsr2l	equ	0xFD9
  8726                           status	equ	0xFD8
  8727                           
  8728                           	psect	rparam
  8729  0000                     pclatu	equ	0xFFB
  8730                           pclath	equ	0xFFA
  8731                           tblptru	equ	0xFF8
  8732                           tblptrh	equ	0xFF7
  8733                           tblptrl	equ	0xFF6
  8734                           tablat	equ	0xFF5
  8735                           prodh	equ	0xFF4
  8736                           prodl	equ	0xFF3
  8737                           intcon	equ	0xFF2
  8738                           postinc0	equ	0xFEE
  8739                           fsr0h	equ	0xFEA
  8740                           fsr0l	equ	0xFE9
  8741                           wreg	equ	0xFE8
  8742                           postdec1	equ	0xFE5
  8743                           fsr1h	equ	0xFE2
  8744                           fsr1l	equ	0xFE1
  8745                           bsr	equ	0xFE0
  8746                           indf2	equ	0xFDF
  8747                           postinc2	equ	0xFDE
  8748                           postdec2	equ	0xFDD
  8749                           fsr2h	equ	0xFDA
  8750                           fsr2l	equ	0xFD9
  8751                           status	equ	0xFD8
  8752                           
  8753                           	psect	temp
  8754  000043                     btemp:
  8755                           	opt stack 0
  8756  000043                     	ds	1
  8757  0000                     int$flags	set	btemp
  8758                           pclatu	equ	0xFFB
  8759                           pclath	equ	0xFFA
  8760                           tblptru	equ	0xFF8
  8761                           tblptrh	equ	0xFF7
  8762                           tblptrl	equ	0xFF6
  8763                           tablat	equ	0xFF5
  8764                           prodh	equ	0xFF4
  8765                           prodl	equ	0xFF3
  8766                           intcon	equ	0xFF2
  8767                           postinc0	equ	0xFEE
  8768                           fsr0h	equ	0xFEA
  8769                           fsr0l	equ	0xFE9
  8770                           wreg	equ	0xFE8
  8771                           postdec1	equ	0xFE5
  8772                           fsr1h	equ	0xFE2
  8773                           fsr1l	equ	0xFE1
  8774                           bsr	equ	0xFE0
  8775                           indf2	equ	0xFDF
  8776                           postinc2	equ	0xFDE
  8777                           postdec2	equ	0xFDD
  8778                           fsr2h	equ	0xFDA
  8779                           fsr2l	equ	0xFD9
  8780                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         117
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      66
    BANK0           160     35     126
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array1(BANK0[8]), data_array(BANK0[8]), data_array_debug(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->___awdiv
    _delay_ms->___wmul
    ___wmul->___lwdiv
    ___awdiv->___wmul

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   24898
                                             26 BANK0      9     9      0
                       _CANisTxReady
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___lwdiv
                             ___wmul
                                _abs
                    _battery_measure
            _configurazione_iniziale
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    9823
                      _CANInitialize
                     _SetOutputEPWM1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _SetOutputEPWM1                                       2     1      1     424
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                             14 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0    7114
                       _CANisTxReady
                     _CANsendMessage
                            ___awdiv
                             ___wmul
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1187
                                             13 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                              7 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     599
                                             13 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4597
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     170
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     549
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetDCEPWM1                                           6     4      2     176
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           19    19      0    1345
                                             12 COMRAM    19    19      0
                       _CANisRxReady
                  _CANreceiveMessage
                   i1_SetOutputEPWM1
 ---------------------------------------------------------------------------------
 (5) i1_SetOutputEPWM1                                     2     1      1     184
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   ___lwdiv
   ___wmul
     ___lwdiv (ARG)
   _abs
   _battery_measure
     _CANisTxReady
     _CANsendMessage
     ___awdiv
       ___wmul (ARG)
         ___lwdiv (ARG)
     ___wmul
       ___lwdiv (ARG)
     _delay_ms
       ___wmul
         ___lwdiv (ARG)
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _SetOutputEPWM1
     _delay_ms
       ___wmul
         ___lwdiv (ARG)
   _delay_ms
     ___wmul
       ___lwdiv (ARG)

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i1_SetOutputEPWM1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     23      7E       4       78.8%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     1F      42       1       70.2%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C0       9        0.0%
DATA                 0      0      C0      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Feb 06 21:53:57 2016

            __end_of_CANSetFilter 0CF4                      ___awdiv@sign 00CD  
                              _id 007C                                bsr 000FE0  
             ___wmul@multiplicand 00C4                       __CFG_BORV$3 000000  
                  _SetOutputEPWM1 25D8                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                       __CFG_OSC$HS 000000  
            _previousTimeCounter1 0088              _previousTimeCounter2 008C  
                             l400 13CC                               l401 13D0  
                             l402 13DC                               l500 0A60  
                             l501 0A64                               l510 0B70  
                             l502 0A70                               l430 1FE8  
                             l511 0B7C                               l431 1FEC  
                             l520 0C88                               l512 0B80  
                             l432 1FF8                               l361 0F78  
                             l521 0C8C                               l513 0B8C  
                             l505 0B4C                               l441 2100  
                             l433 1FFC                               l362 0D0A  
                             l522 0C98                               l506 0B50  
                             l442 2104                               l434 2008  
                             l371 0EC4                               l363 0D0E  
                             l523 0C9C                               l507 0B5C  
                             l443 2110                               l435 200C  
                             l380 101A                               l372 0EC8  
                             l364 0E06                               l524 0CA8  
                             l516 0C68                               l508 0B60  
                             l444 2114                               l436 2018  
                             l356 2248                               l381 1024  
                             l373 0ED4                               l365 0D96  
                             l517 0C6C                               l509 0B6C  
                             l461 06DE                               l445 2120  
                             l437 201C                               l357 2252  
                             l382 102E                               l366 0DA0  
                             l518 0C78                               l462 06E2  
                             l446 2124                               l438 2028  
                             l391 1212                               l383 1038  
                             l367 0DAA                               l519 0C7C  
                             l463 06EE                               l447 2130  
                             l392 1216                               l376 11FC  
                             l368 0DB4                               l480 0838  
                             l472 07F8                               l464 06F2  
                             l448 2134                               l393 130E  
                             l377 0F8E                               l473 07FC  
                             l465 06FE                               l449 2140  
                             l554 27B0                               l394 129E  
                             l386 1148                               l378 0F92  
                             l490 0948                               l474 0808  
                             l466 0702                               l395 12A8  
                             l387 114C                               l379 108A  
                             l491 0954                               l483 0914  
                             l475 080C                               l467 070E  
                             l396 12B2                               l388 1158  
                             l716 255E                               l708 24C2  
                             l484 0918                               l476 0818  
                             l468 0712                               l397 12BC  
                             l485 0924                               l477 081C  
                             l469 071E                               l814 2788  
                             l494 0A30                               l486 0928  
                             l478 0828                               l567 275C  
                             l495 0A34                               l487 0934  
                             l479 082C                               l496 0A40  
                             l488 0938                               l497 0A44  
                             l489 0944                               l762 27D2  
                             l498 0A50                               l763 27D4  
                             l499 0A54                               l691 1D40  
                             l748 2620                               l686 1D2C  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                               _id1 0080  
                             _abs 2766                               _dir 0040  
                             _msg 0094                               wreg 000FE8  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
                            ?_abs 00BB                              l1171 25CE  
                            l4000 27E0                              l5000 1C86  
                            l4034 1F5C                              l4018 1EA6  
                            l4116 02AC                              l4060 202C  
                            l4302 0958                              l4206 064C  
                            l4134 0364                              l5006 1CF0  
                            l4240 0768                              l4152 041E  
                            l5024 1D62                              l4234 0722  
                            l4170 04D8                              l4066 2072  
                            l5026 1D64                              l4500 0DBE  
                            l4404 0CAC                              l4308 099E  
                            l4092 2144                              l5028 1D74  
                            l4342 0ABA                              l4520 0EB8  
                            l4336 0A74                              l4602 115C  
                            l4370 0B90                              l4274 0882  
                            l4268 083C                              l4188 0592  
                            l4460 225E                              l4526 0ED8  
                            l4462 22A2                              l4454 2240  
                            l4712 2750                              l4376 0BD6  
                            l4456 2256                              l4720 25FE  
                            l4652 12C6                              l4900 2516  
                            l4724 260E                              l4750 23AE  
                            l4742 2384                              l4912 257E  
                            l4672 13C0                              l4576 1042  
                            l4760 23E4                              l4752 23B4  
                            l4736 236E                              l4914 258A  
                            l4924 25C0                              l4916 2590  
                            l4596 113C                              l4748 23A2  
                            l4764 23F2                              l4678 13E0  
                            l4768 2406                              l4960 19CC  
                            l4964 1A30                              l4992 1C56  
                            l4994 1C62                              l4988 1C10  
                            l4996 1C6A                              _LATA 000F89  
                            _LATB 000F8A                              _LATC 000F8B  
                            _LATD 000F8C                              _LATE 000F8D  
                            u5020 05C8                              u5110 0742  
                            u5025 05BC                              u5115 0736  
                            u5035 0628                              u6115 267E  
                            u4620 1ED8                              u6220 1B58  
                            u5510 0CCC                              u5430 0BB0  
                            u5350 0A94                              u5270 0978  
                            u5190 085C                              u4710 204C  
                            u6230 1BC0                              u6320 1DD8  
                            u4625 1ECC                              u6250 1C44  
                            u5515 0CC0                              u5435 0BA4  
                            u5355 0A88                              u5275 096C  
                            u5195 0850                              u4715 2040  
                            u4635 1F38                              u4900 039A  
                            u4820 0228                              u4580 1E22  
                            u6260 1CEC                              u5640 0DDE  
                            u4905 038E                              u4825 021C  
                            u4585 1E16                              u5650 0E2A  
                            u4915 03FA                              u4835 0288  
                            u4595 1E82                              u5900 12E6  
                            u4940 0454                              u4860 02E0  
                            u5645 0DD2                              u5910 1332  
                            u4790 2164                              u5655 0E1E  
                            u5905 12DA                              u5665 0E8A  
                            u4945 0448                              u4865 02D4  
                            u5770 1062                              u5915 1326  
                            u6387 2752                              u4955 04B4  
                            u4875 0340                              u4795 2158  
                            u5780 10AE                              u4980 050E  
                            u5925 1392                              u5775 1056  
                            u5785 10A2                              u4985 0502  
                            u5795 110E                              u4995 056E  
                            _TMR2 000FCC               __size_of_CANSetMask 039E  
                            abs@a 00BB                              _baud 0037  
                            _main 198C                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 0043                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 01EA                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000010  
                _CANOperationMode 27D8            __end_of_SetOutputEPWM1 262A  
                           ??_abs 00BD        __size_of_CANreceiveMessage 050C  
                           ?_main 0001                   __end_of___awdiv 2410  
                 ___awdiv@divisor 00CA                             _T2CON 000FCA  
                           _T3CON 000FB1                   __end_of___lwdiv 25D8  
                           i1l408 1718                             i1l670 01A2  
                           i1l559 2800                             i1l656 0188  
                           i1l659 0184                             i1l748 26F2  
                 ___awdiv@counter 00CC                             _TMR3H 000FB3  
                           _TMR3L 000FB2                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
               _CANisRxReady$2991 0001                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
              __size_of_ISR_bassa 01D2                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 00CD                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _vBatt 0092  
                  __pbitbssCOMRAM 01D0              __end_of_CANisRxReady 2804  
       __size_ofi1_SetOutputEPWM1 0044                             tablat 000FF5  
            __end_of_CANisTxReady 27B6                             status 000FD8  
                  __CFG_PBADEN$ON 000000                        _SetDCEPWM1 2674  
                 __initialization 262A          __size_of_battery_measure 00A0  
                    __end_of_main 1DEE                   ?_SetOutputEPWM1 00BB  
                          ??_main 00D5                     __activetblptr 000002  
               _CANisTxReady$2989 00BB                     _counter_array 0060  
                          _CANCON 000F6F                            _ADRESH 000FC4  
                ___awdiv@dividend 00C8                   __CFG_BBSIZ$1024 000000  
                          i1l3610 1956                            i1l3602 191E  
                          i1l3612 1988                            i1l3540 16A4  
                          i1l3532 1668                            i1l3524 15F8  
                          i1l3606 193A                            i1l3550 1712  
                          i1l3544 16C2                            i1l3536 1686  
                          i1l3548 16E0                            i1l3822 00D0  
                          i1l3806 0066                            i1l3832 0108  
                          i1l3594 18E6                            i1l3586 1878  
                          i1l3842 0148                            i1l3826 00E2  
                          i1l3852 017A                            i1l3598 1902  
                          i1l3790 26E4                            i1l3848 016A  
                          i1l3786 26D6                        _OpenTimer2 27B6  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 00BF                CANsendMessage@tamp 00C7  
                __end_of_delay_ms 2766             __size_of_CANSetFilter 0B06  
                  __CFG_XINST$OFF 000000                __size_of_OpenEPWM1 0012  
               __end_of_ISR_bassa 01EA                            ___wmul 26FC  
                       ??___awdiv 00CC                    __CFG_STVREN$ON 000000  
                       ??___lwdiv 00BF                      ??_CANSetMask 00C0  
                          _errore 002E                  OpenTimer2@config 00BB  
                          clear_0 2630                            clear_1 2640  
                ___awdiv@quotient 00CE          ?_configurazione_iniziale 0001  
                 __CFG_BOREN$BOHW 000000                      __pdataCOMRAM 003C  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                      _CANSetFilter 01EE  
                      __accesstop 0060           __end_of__initialization 2666  
              __end_of_CANSetMask 218C                     ___rparam_used 000001  
                     ?_SetDCEPWM1 00BB                    __pcstackCOMRAM 0001  
               ??_battery_measure 00D0             CANSetFilter@numBuffer 00C4  
                 OpenEPWM1@period 00BB             __size_of_CANisRxReady 0016  
           __size_of_CANisTxReady 0024                 __end_of_OpenEPWM1 2816  
        __end_of_CANOperationMode 27EE                  i1_SetOutputEPWM1 26B8  
                      __pbssBANK0 0060                       ?_OpenTimer2 0001  
                      _data_array 00A3           __size_of_CANsendMessage 078C  
                         ?___wmul 00C2                      _CANisRxReady 27EE  
                         _ECCPR1L 000FBB                           _CANSTAT 000F6E  
                    _CANisTxReady 2792                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01C6                         ?_delay_ms 00C8  
                         _RXB0DLC 000F65                           _RXB1DLC 000F55  
                         _RXB0CON 000F60               __size_of_SetDCEPWM1 0044  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 00C2                  _data_array_debug 00B3  
        SetOutputEPWM1@outputmode 00BB                        _correzione 0078  
                ??_SetOutputEPWM1 00BC                           __Hparam 0000  
                      _left_speed 0030                           __Lparam 0000  
                delay_ms@value_ms 00C8                           ___awdiv 2352  
                 __size_of___wmul 0036                           ___lwdiv 2560  
            CANInitialize@propSeg 00D2                           __pcinit 262A  
                         __ramtop 0300               __size_of_OpenTimer2 0022  
                         __ptext0 198C                           __ptext1 2410  
                         __ptext2 25D8                           __ptext3 218C  
                         __ptext4 1DEE                           __ptext5 01EE  
                         __ptext6 27D8                           __ptext7 24C0  
                         __ptext8 2732                           __ptext9 26FC  
                       _T2CONbits 000FCA                      __size_of_abs 002C  
                         _current 0038        i1SetOutputEPWM1@outputmode 0001  
                      _duty_cycle 0090                        ??_delay_ms 00CA  
          CANreceiveMessage@error 000B              end_of_initialization 2666  
                   __Lmediumconst 0000                     _CANInitialize 218C  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
    i1SetOutputEPWM1@outputconfig 0002                         _ISR_bassa 0018  
                       _PORTAbits 000F80                    CANSetMask@mask 00BB  
                       _PORTCbits 000F82                    CANSetMask@tamp 00C5  
                  _centralina_abs 01D1                    CANSetMask@type 00BF  
                       _TRISDbits 000F95  __size_of_configurazione_iniziale 00B0  
             _previousTimeCounter 0084           _clock_counter_reference 002C  
                  _CANsendMessage 0CF4                  CANInitialize@BRP 00CC  
                CANInitialize@SJW 00CB                    ?_CANInitialize 00C9  
                      main@period 00DD                      ??_SetDCEPWM1 00BD  
                 _battery_measure 24C0                        ?_ISR_bassa 0001  
        __end_ofi1_SetOutputEPWM1 26FC                    __end_of___wmul 2732  
                   __pidataCOMRAM 2816               start_initialization 262A  
                     __end_of_abs 2792                __end_of_SetDCEPWM1 26B8  
             CANSetMask@numBuffer 00C4            __end_of_CANsendMessage 1480  
               ?_CANOperationMode 0001                      ??_OpenTimer2 00BB  
                       _OpenEPWM1 2804                ??_CANOperationMode 00BB  
      CANInitialize@FilterConfig1 00D3        CANInitialize@FilterConfig2 00D4  
                        ??___wmul 00C6                  __CFG_LPT1OSC$OFF 000000  
              __end_of_OpenTimer2 27D8            CANInitialize@phaseSeg1 00C9  
          CANInitialize@phaseSeg2 00CA                       __pbssCOMRAM 0020  
                   __pcstackBANK0 00BB                       _data_debug1 0070  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
                     _data_array1 00AB               SetDCEPWM1@dutycycle 00BB  
               __size_of_delay_ms 0034                   ?_CANsendMessage 00BB  
                      ?_OpenEPWM1 0001           __end_of_battery_measure 2560  
                 ??_CANInitialize 00CE                         _can_retry 01D0  
                    _currentSpeed 003C                CANSetFilter@filter 00BB  
                ___lwdiv@dividend 00BB                          ?___awdiv 00C8  
                        ?___lwdiv 00BB                       ??_ISR_bassa 000D  
                     __pintcodelo 0018                          _ECCP1CON 000FBA  
                     _COMSTATbits 000F74        SetOutputEPWM1@outputconfig 00BC  
                   _remote_frame1 01D6                  ___lwdiv@quotient 00C0  
         _configurazione_iniziale 2410                      _message_sent 01D4  
           CANreceiveMessage@tamp 000C                    ___wmul@product 00C6  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 0042  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                          _PIE3bits 000FA3  
                        i1u405_25 1962                          i1u424_20 006E  
                        i1u424_26 0070                          i1u385_20 1538  
                        i1u385_26 153A                          i1u386_20 1566  
                        i1u394_25 16EC                          i1u386_26 1568  
                        i1u396_20 17C0                          i1u388_25 157C  
                        i1u396_26 17C2                          i1u397_20 17EA  
                        i1u397_26 17EC                          i1u399_25 17FE  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                       _scrittura 0039                          _RXB0SIDL 000F62  
                        _RXF0EIDH 000F02                          _RXB1SIDH 000F51  
                        _RXF0EIDL 000F03                          _RXB1SIDL 000F52  
                        _RXF1EIDH 000F06                          _RXF1EIDL 000F07  
                        _RXF2EIDH 000F0A                          _RXF2EIDL 000F0B  
                        _RXF3EIDH 000F0E                          _RXF3EIDL 000F0F  
                        _RXF4EIDH 000F12                          _RXF4EIDL 000F13  
                        _RXF5EIDH 000F16                          _RXF5EIDL 000F17  
                        _RXF0SIDH 000F00                          _RXF0SIDL 000F01  
                        _TXB0EIDH 000F43                          _RXF1SIDH 000F04  
                        _TXB0EIDL 000F44                          _RXF1SIDL 000F05  
                        _TXB1EIDH 000F33                          _RXF2SIDH 000F08  
                        _TXB1EIDL 000F34                          _RXF2SIDL 000F09  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                        _RXERRCNT 000F75                          _TXERRCNT 000F76  
                      _ADCON0bits 000FC2                        _ADCON1bits 000FC1  
                      _ADCON2bits 000FC0                 ___wmul@multiplier 00C2  
                   ?_CANSetFilter 00BB                         copy_data0 265A  
                      _CANCONbits 000F6F                       ??_OpenEPWM1 00BB  
                ?_battery_measure 0001                          __Hrparam 0000  
                    _RXB0SIDLbits 000F62                  SetDCEPWM1@DCycle 00BF  
                        __Lrparam 0000                      _RXB1SIDLbits 000F52  
              _centralina_comando 01D2                        _CANSetMask 1DEE  
                __size_of___awdiv 00BE                  __size_of___lwdiv 0078  
               ?i1_SetOutputEPWM1 0001           __size_of_SetOutputEPWM1 0052  
              ??i1_SetOutputEPWM1 0002                _currentSpeed_array 0068  
       ??_configurazione_iniziale 00D5                      _RXF0SIDLbits 000F01  
                        _delay_ms 2732                   ___lwdiv@divisor 00BD  
                    _RXF1SIDLbits 000F05                   ___lwdiv@counter 00BF  
                  ??_CANSetFilter 00C0                          __ptext10 2352  
                        __ptext11 0CF4                          __ptext20 1480  
                        __ptext12 2792                          __ptext21 27EE  
                        __ptext13 2766                          __ptext14 2560  
                        __ptext15 2674                          __ptext16 27B6  
                        __ptext17 2804                          __ptext19 26B8  
                    _RXF2SIDLbits 000F09                      _RXF3SIDLbits 000F0D  
                    _RXF4SIDLbits 000F11                     _speed_fetched 01D8  
                    _RXF5SIDLbits 000F15          CANsendMessage@dataLength 00C1  
                    _remote_frame 01D5                     __size_of_main 0462  
                        _duty_set 0020              CANreceiveMessage@msg 0001  
                    _TXB0SIDLbits 000F42                      _TXB1SIDLbits 000F32  
                    _TXB2SIDLbits 000F22                          int$flags 0043  
                     _UART1Config 0036         __size_of_CANOperationMode 0016  
                   ?_CANisRxReady 0001                     ?_CANisTxReady 0001  
                     _RXB0DLCbits 000F65                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 1480  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                ??_CANsendMessage 00C3                      _requestSpeed 0024  
              ?_CANreceiveMessage 0001                      _request_sent 01D7  
        CANsendMessage@identifier 00BB                          intlevel1 0000  
               _centralina_sterzo 01D3                  CANSetFilter@tamp 00C5  
                CANSetFilter@type 00BF               ??_CANreceiveMessage 0003  
                     _TXB0DLCbits 000F45                       _right_speed 0034  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 24C0  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
                     _timeCounter 0028              CANOperationMode@mode 00BB  
                  ??_CANisRxReady 0001                       ?_CANSetMask 00BB  
                  ??_CANisTxReady 00BB         __end_of_CANreceiveMessage 198C  
                     _previousPwm 0032             __end_of_CANInitialize 2352  
