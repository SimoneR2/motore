

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Mar 24 15:26:58 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataCOMRAM
    41  002570                     __pidataCOMRAM:
    42                           	opt stack 0
    43                           
    44                           ;initializer for _currentSpeed
    45  002570  0001               	dw	1
    46  002572  0000               	dw	0
    47                           
    48                           ;initializer for _dir
    49  002574  0001               	dw	1
    50                           
    51                           ;initializer for _delay_quartz_frequency_value
    52  002576  10                 	db	16
    53  0000                     _RXB1CON	set	3920
    54  0000                     _RXB1CONbits	set	3920
    55  0000                     _RXB1D0	set	3926
    56  0000                     _RXB1D1	set	3927
    57  0000                     _RXB1D2	set	3928
    58  0000                     _RXB1D3	set	3929
    59  0000                     _RXB1D4	set	3930
    60  0000                     _RXB1D5	set	3931
    61  0000                     _RXB1D6	set	3932
    62  0000                     _RXB1D7	set	3933
    63  0000                     _RXB1DLC	set	3925
    64  0000                     _RXB1DLCbits	set	3925
    65  0000                     _RXB1EIDH	set	3923
    66  0000                     _RXB1EIDL	set	3924
    67  0000                     _RXB1SIDH	set	3921
    68  0000                     _RXB1SIDL	set	3922
    69  0000                     _RXB1SIDLbits	set	3922
    70  0000                     _RXF0EIDH	set	3842
    71  0000                     _RXF0EIDL	set	3843
    72  0000                     _RXF0SIDH	set	3840
    73  0000                     _RXF0SIDL	set	3841
    74  0000                     _RXF0SIDLbits	set	3841
    75  0000                     _RXF1EIDH	set	3846
    76  0000                     _RXF1EIDL	set	3847
    77  0000                     _RXF1SIDH	set	3844
    78  0000                     _RXF1SIDL	set	3845
    79  0000                     _RXF1SIDLbits	set	3845
    80  0000                     _RXF2EIDH	set	3850
    81  0000                     _RXF2EIDL	set	3851
    82  0000                     _RXF2SIDH	set	3848
    83  0000                     _RXF2SIDL	set	3849
    84  0000                     _RXF2SIDLbits	set	3849
    85  0000                     _RXF3EIDH	set	3854
    86  0000                     _RXF3EIDL	set	3855
    87  0000                     _RXF3SIDH	set	3852
    88  0000                     _RXF3SIDL	set	3853
    89  0000                     _RXF3SIDLbits	set	3853
    90  0000                     _RXF4EIDH	set	3858
    91  0000                     _RXF4EIDL	set	3859
    92  0000                     _RXF4SIDH	set	3856
    93  0000                     _RXF4SIDL	set	3857
    94  0000                     _RXF4SIDLbits	set	3857
    95  0000                     _RXF5EIDH	set	3862
    96  0000                     _RXF5EIDL	set	3863
    97  0000                     _RXF5SIDH	set	3860
    98  0000                     _RXF5SIDL	set	3861
    99  0000                     _RXF5SIDLbits	set	3861
   100  0000                     _RXM0EIDH	set	3866
   101  0000                     _RXM0EIDL	set	3867
   102  0000                     _RXM0SIDH	set	3864
   103  0000                     _RXM0SIDL	set	3865
   104  0000                     _RXM0SIDLbits	set	3865
   105  0000                     _RXM1EIDH	set	3870
   106  0000                     _RXM1EIDL	set	3871
   107  0000                     _RXM1SIDH	set	3868
   108  0000                     _RXM1SIDL	set	3869
   109  0000                     _RXM1SIDLbits	set	3869
   110  0000                     _TXB0CONbits	set	3904
   111  0000                     _TXB0D0	set	3910
   112  0000                     _TXB0D1	set	3911
   113  0000                     _TXB0D2	set	3912
   114  0000                     _TXB0D3	set	3913
   115  0000                     _TXB0D4	set	3914
   116  0000                     _TXB0D5	set	3915
   117  0000                     _TXB0D6	set	3916
   118  0000                     _TXB0D7	set	3917
   119  0000                     _TXB0DLC	set	3909
   120  0000                     _TXB0DLCbits	set	3909
   121  0000                     _TXB0EIDH	set	3907
   122  0000                     _TXB0EIDL	set	3908
   123  0000                     _TXB0SIDH	set	3905
   124  0000                     _TXB0SIDL	set	3906
   125  0000                     _TXB0SIDLbits	set	3906
   126  0000                     _TXB1CONbits	set	3888
   127  0000                     _TXB1D0	set	3894
   128  0000                     _TXB1D1	set	3895
   129  0000                     _TXB1D2	set	3896
   130  0000                     _TXB1D3	set	3897
   131  0000                     _TXB1D4	set	3898
   132  0000                     _TXB1D5	set	3899
   133  0000                     _TXB1D6	set	3900
   134  0000                     _TXB1D7	set	3901
   135  0000                     _TXB1DLC	set	3893
   136  0000                     _TXB1DLCbits	set	3893
   137  0000                     _TXB1EIDH	set	3891
   138  0000                     _TXB1EIDL	set	3892
   139  0000                     _TXB1SIDH	set	3889
   140  0000                     _TXB1SIDL	set	3890
   141  0000                     _TXB1SIDLbits	set	3890
   142  0000                     _TXB2CONbits	set	3872
   143  0000                     _TXB2D0	set	3878
   144  0000                     _TXB2D1	set	3879
   145  0000                     _TXB2D2	set	3880
   146  0000                     _TXB2D3	set	3881
   147  0000                     _TXB2D4	set	3882
   148  0000                     _TXB2D5	set	3883
   149  0000                     _TXB2D6	set	3884
   150  0000                     _TXB2D7	set	3885
   151  0000                     _TXB2DLC	set	3877
   152  0000                     _TXB2DLCbits	set	3877
   153  0000                     _TXB2EIDH	set	3875
   154  0000                     _TXB2EIDL	set	3876
   155  0000                     _TXB2SIDH	set	3873
   156  0000                     _TXB2SIDL	set	3874
   157  0000                     _TXB2SIDLbits	set	3874
   158  0000                     _ADCON0bits	set	4034
   159  0000                     _ADCON1bits	set	4033
   160  0000                     _ADCON2bits	set	4032
   161  0000                     _BRGCON1	set	3952
   162  0000                     _BRGCON2	set	3953
   163  0000                     _BRGCON2bits	set	3953
   164  0000                     _BRGCON3	set	3954
   165  0000                     _BRGCON3bits	set	3954
   166  0000                     _CANCON	set	3951
   167  0000                     _CANCONbits	set	3951
   168  0000                     _CANSTAT	set	3950
   169  0000                     _COMSTATbits	set	3956
   170  0000                     _ECCP1CON	set	4026
   171  0000                     _ECCPR1L	set	4027
   172  0000                     _INTCONbits	set	4082
   173  0000                     _IPR2bits	set	4002
   174  0000                     _IPR3bits	set	4005
   175  0000                     _LATA	set	3977
   176  0000                     _LATB	set	3978
   177  0000                     _LATC	set	3979
   178  0000                     _LATD	set	3980
   179  0000                     _LATE	set	3981
   180  0000                     _PIE1bits	set	3997
   181  0000                     _PIE2bits	set	4000
   182  0000                     _PIE3bits	set	4003
   183  0000                     _PIR1bits	set	3998
   184  0000                     _PIR2bits	set	4001
   185  0000                     _PIR3bits	set	4004
   186  0000                     _PORTAbits	set	3968
   187  0000                     _PORTCbits	set	3970
   188  0000                     _PR2	set	4043
   189  0000                     _RCONbits	set	4048
   190  0000                     _RXB0CON	set	3936
   191  0000                     _RXB0CONbits	set	3936
   192  0000                     _RXB0D0	set	3942
   193  0000                     _RXB0D1	set	3943
   194  0000                     _RXB0D2	set	3944
   195  0000                     _RXB0D3	set	3945
   196  0000                     _RXB0D4	set	3946
   197  0000                     _RXB0D5	set	3947
   198  0000                     _RXB0D6	set	3948
   199  0000                     _RXB0D7	set	3949
   200  0000                     _RXB0DLC	set	3941
   201  0000                     _RXB0DLCbits	set	3941
   202  0000                     _RXB0EIDH	set	3939
   203  0000                     _RXB0EIDL	set	3940
   204  0000                     _RXB0SIDH	set	3937
   205  0000                     _RXB0SIDL	set	3938
   206  0000                     _RXB0SIDLbits	set	3938
   207  0000                     _RXERRCNT	set	3957
   208  0000                     _T2CON	set	4042
   209  0000                     _T2CONbits	set	4042
   210  0000                     _T3CON	set	4017
   211  0000                     _TMR2	set	4044
   212  0000                     _TMR3H	set	4019
   213  0000                     _TMR3L	set	4018
   214  0000                     _TRISA	set	3986
   215  0000                     _TRISB	set	3987
   216  0000                     _TRISC	set	3988
   217  0000                     _TRISD	set	3989
   218  0000                     _TRISDbits	set	3989
   219  0000                     _TRISE	set	3990
   220  0000                     _TXERRCNT	set	3958
   221                           
   222                           ; #config settings
   223  0000                     
   224                           	psect	cinit
   225  0023AC                     __pcinit:
   226                           	opt stack 0
   227  0023AC                     start_initialization:
   228                           	opt stack 0
   229  0023AC                     __initialization:
   230                           	opt stack 0
   231                           
   232                           ; Clear objects allocated to BANK0 (75 bytes)
   233  0023AC  EE00  F060         	lfsr	0,__pbssBANK0
   234  0023B0  0E4B               	movlw	75
   235  0023B2                     clear_0:
   236  0023B2  6AEE               	clrf	postinc0,c
   237  0023B4  06E8               	decf	wreg,f,c
   238  0023B6  E1FD               	bnz	clear_0
   239                           
   240                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   241  0023B8  6A39               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   242  0023BA  6A38               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   243                           
   244                           ; Clear objects allocated to COMRAM (20 bytes)
   245  0023BC  EE00  F024         	lfsr	0,__pbssCOMRAM
   246  0023C0  0E14               	movlw	20
   247  0023C2                     clear_1:
   248  0023C2  6AEE               	clrf	postinc0,c
   249  0023C4  06E8               	decf	wreg,f,c
   250  0023C6  E1FD               	bnz	clear_1
   251                           
   252                           ; Initialize objects allocated to COMRAM (7 bytes)
   253                           ; load TBLPTR registers with __pidataCOMRAM
   254  0023C8  0E70               	movlw	low __pidataCOMRAM
   255  0023CA  6EF6               	movwf	tblptrl,c
   256  0023CC  0E25               	movlw	high __pidataCOMRAM
   257  0023CE  6EF7               	movwf	tblptrh,c
   258  0023D0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   259  0023D2  6EF8               	movwf	tblptru,c
   260  0023D4  EE00  F03A         	lfsr	0,__pdataCOMRAM
   261  0023D8  EE10 F007          	lfsr	1,7
   262  0023DC                     copy_data0:
   263  0023DC  0009               	tblrd		*+
   264  0023DE  CFF5 FFEE          	movff	tablat,postinc0
   265  0023E2  50E5               	movf	postdec1,w,c
   266  0023E4  50E1               	movf	fsr1l,w,c
   267  0023E6  E1FA               	bnz	copy_data0
   268  0023E8                     end_of_initialization:
   269                           	opt stack 0
   270  0023E8                     __end_of__initialization:
   271                           	opt stack 0
   272  0023E8  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   273  0023EA  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   274  0023EC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   275  0023EE  6EF8               	movwf	tblptru,c
   276  0023F0  0100               	movlb	0
   277  0023F2  EFB1  F00D         	goto	_main	;jump to C main() function
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           postdec1	equ	0xFE5
   285                           fsr1l	equ	0xFE1
   286                           
   287                           	psect	bitbssCOMRAM
   288  0001C0                     __pbitbssCOMRAM:
   289                           	opt stack 0
   290  0001C0                     _can_retry:
   291                           	opt stack 0
   292  0001C0                     	ds	1
   293  0001C1                     _centralina_abs:
   294                           	opt stack 0
   295  0001C1                     	ds	1
   296  0001C2                     _centralina_comando:
   297                           	opt stack 0
   298  0001C2                     	ds	1
   299  0001C3                     _centralina_sterzo:
   300                           	opt stack 0
   301  0001C3                     	ds	1
   302  0001C4                     _message_sent:
   303                           	opt stack 0
   304  0001C4                     	ds	1
   305  0001C5                     _new_message:
   306                           	opt stack 0
   307  0001C5                     	ds	1
   308  0001C6                     _remote_frame:
   309                           	opt stack 0
   310  0001C6                     	ds	1
   311  0001C7                     _remote_frame1:
   312                           	opt stack 0
   313  0001C7                     	ds	1
   314  0001C8                     _request_sent:
   315                           	opt stack 0
   316  0001C8                     	ds	1
   317  0001C9                     _speed_fetched:
   318                           	opt stack 0
   319  0001C9                     	ds	1
   320                           tblptru	equ	0xFF8
   321                           tblptrh	equ	0xFF7
   322                           tblptrl	equ	0xFF6
   323                           tablat	equ	0xFF5
   324                           postinc0	equ	0xFEE
   325                           wreg	equ	0xFE8
   326                           postdec1	equ	0xFE5
   327                           fsr1l	equ	0xFE1
   328                           
   329                           	psect	bssCOMRAM
   330  000024                     __pbssCOMRAM:
   331                           	opt stack 0
   332  000024                     _duty_set:
   333                           	opt stack 0
   334  000024                     	ds	4
   335  000028                     _id:
   336                           	opt stack 0
   337  000028                     	ds	4
   338  00002C                     _requestSpeed:
   339                           	opt stack 0
   340  00002C                     	ds	4
   341  000030                     _left_speed:
   342                           	opt stack 0
   343  000030                     	ds	2
   344  000032                     _previousPwm:
   345                           	opt stack 0
   346  000032                     	ds	2
   347  000034                     _right_speed:
   348                           	opt stack 0
   349  000034                     	ds	2
   350  000036                     _current:
   351                           	opt stack 0
   352  000036                     	ds	1
   353  000037                     _scrittura:
   354                           	opt stack 0
   355  000037                     	ds	1
   356                           tblptru	equ	0xFF8
   357                           tblptrh	equ	0xFF7
   358                           tblptrl	equ	0xFF6
   359                           tablat	equ	0xFF5
   360                           postinc0	equ	0xFEE
   361                           wreg	equ	0xFE8
   362                           postdec1	equ	0xFE5
   363                           fsr1l	equ	0xFE1
   364                           
   365                           	psect	dataCOMRAM
   366  00003A                     __pdataCOMRAM:
   367                           	opt stack 0
   368  00003A                     _currentSpeed:
   369                           	opt stack 0
   370  00003A                     	ds	4
   371  00003E                     _dir:
   372                           	opt stack 0
   373  00003E                     	ds	2
   374  000040                     _delay_quartz_frequency_value:
   375                           	opt stack 0
   376  000040                     	ds	1
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           postdec1	equ	0xFE5
   384                           fsr1l	equ	0xFE1
   385                           
   386                           	psect	bssBANK0
   387  000060                     __pbssBANK0:
   388                           	opt stack 0
   389  000060                     _counter_array:
   390                           	opt stack 0
   391  000060                     	ds	8
   392  000068                     _currentSpeed_array:
   393                           	opt stack 0
   394  000068                     	ds	8
   395  000070                     _correzione:
   396                           	opt stack 0
   397  000070                     	ds	4
   398  000074                     _previousTimeCounter:
   399                           	opt stack 0
   400  000074                     	ds	4
   401  000078                     _previousTimeCounter1:
   402                           	opt stack 0
   403  000078                     	ds	4
   404  00007C                     _previousTimeCounter2:
   405                           	opt stack 0
   406  00007C                     	ds	4
   407  000080                     _timeCounter:
   408                           	opt stack 0
   409  000080                     	ds	4
   410  000084                     _clock_counter_reference:
   411                           	opt stack 0
   412  000084                     	ds	2
   413  000086                     _duty_cycle:
   414                           	opt stack 0
   415  000086                     	ds	2
   416  000088                     _errore:
   417                           	opt stack 0
   418  000088                     	ds	2
   419  00008A                     _vBatt:
   420                           	opt stack 0
   421  00008A                     	ds	2
   422  00008C                     _msg:
   423                           	opt stack 0
   424  00008C                     	ds	15
   425  00009B                     _data_array:
   426                           	opt stack 0
   427  00009B                     	ds	8
   428  0000A3                     _data_array_debug:
   429                           	opt stack 0
   430  0000A3                     	ds	8
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           postdec1	equ	0xFE5
   438                           fsr1l	equ	0xFE1
   439                           
   440                           	psect	cstackBANK0
   441  0000AB                     __pcstackBANK0:
   442                           	opt stack 0
   443  0000AB                     ??_CANSetMask:
   444  0000AB                     ??_CANSetFilter:
   445  0000AB                     ___lwdiv@counter:
   446                           	opt stack 0
   447  0000AB                     SetDCEPWM1@DCycle:
   448                           	opt stack 0
   449  0000AB                     ___wmul@product:
   450                           	opt stack 0
   451  0000AB                     CANsendMessage@identifier:
   452                           	opt stack 0
   453                           
   454                           ; 4 bytes @ 0x0
   455  0000AB                     	ds	1
   456  0000AC                     ___lwdiv@quotient:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x1
   460  0000AC                     	ds	1
   461  0000AD                     delay_ms@value_ms:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x2
   465  0000AD                     	ds	2
   466  0000AF                     CANSetMask@numBuffer:
   467                           	opt stack 0
   468  0000AF                     CANSetFilter@numBuffer:
   469                           	opt stack 0
   470  0000AF                     CANsendMessage@data:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x4
   474  0000AF                     	ds	1
   475  0000B0                     CANSetMask@tamp:
   476                           	opt stack 0
   477  0000B0                     CANSetFilter@tamp:
   478                           	opt stack 0
   479                           
   480                           ; 4 bytes @ 0x5
   481  0000B0                     	ds	1
   482  0000B1                     CANsendMessage@dataLength:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x6
   486  0000B1                     	ds	1
   487  0000B2                     CANsendMessage@flags:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x7
   491  0000B2                     	ds	1
   492  0000B3                     CANsendMessage@tamp:
   493                           	opt stack 0
   494                           
   495                           ; 4 bytes @ 0x8
   496  0000B3                     	ds	1
   497  0000B4                     CANInitialize@phaseSeg1:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x9
   501  0000B4                     	ds	1
   502  0000B5                     CANInitialize@phaseSeg2:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0xA
   506  0000B5                     	ds	1
   507  0000B6                     CANInitialize@SJW:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0xB
   511  0000B6                     	ds	1
   512  0000B7                     ??_rampe:
   513  0000B7                     CANInitialize@BRP:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0xC
   517  0000B7                     	ds	1
   518  0000B8                     CANInitialize@flags:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0xD
   522  0000B8                     	ds	1
   523  0000B9                     ??_CANInitialize:
   524                           
   525                           ; 0 bytes @ 0xE
   526  0000B9                     	ds	4
   527  0000BD                     CANInitialize@propSeg:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x12
   531  0000BD                     	ds	1
   532  0000BE                     CANInitialize@FilterConfig1:
   533                           	opt stack 0
   534                           
   535                           ; 1 bytes @ 0x13
   536  0000BE                     	ds	1
   537  0000BF                     CANInitialize@FilterConfig2:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x14
   541  0000BF                     	ds	1
   542  0000C0                     ??_main:
   543                           
   544                           ; 0 bytes @ 0x15
   545  0000C0                     	ds	8
   546  0000C8                     main@period:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x1D
   550  0000C8                     	ds	1
   551                           tblptru	equ	0xFF8
   552                           tblptrh	equ	0xFF7
   553                           tblptrl	equ	0xFF6
   554                           tablat	equ	0xFF5
   555                           postinc0	equ	0xFEE
   556                           wreg	equ	0xFE8
   557                           postdec1	equ	0xFE5
   558                           fsr1l	equ	0xFE1
   559                           
   560                           	psect	cstackCOMRAM
   561  000001                     __pcstackCOMRAM:
   562                           	opt stack 0
   563  000001                     _CANisRxReady$3002:
   564                           	opt stack 0
   565  000001                     CANreceiveMessage@msg:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x0
   569  000001                     	ds	2
   570  000003                     ??_CANreceiveMessage:
   571                           
   572                           ; 0 bytes @ 0x2
   573  000003                     	ds	8
   574  00000B                     CANreceiveMessage@error:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0xA
   578  00000B                     	ds	1
   579  00000C                     CANreceiveMessage@tamp:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0xB
   583  00000C                     	ds	1
   584  00000D                     ??_ISR_bassa:
   585                           
   586                           ; 0 bytes @ 0xC
   587  00000D                     	ds	17
   588  00001E                     ISR_bassa@i:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x1D
   592  00001E                     	ds	1
   593  00001F                     ??_can_interpreter:
   594  00001F                     ??_CANsendMessage:
   595  00001F                     ?_abs:
   596                           	opt stack 0
   597  00001F                     ?___wmul:
   598                           	opt stack 0
   599  00001F                     ?___lwdiv:
   600                           	opt stack 0
   601  00001F                     CANOperationMode@mode:
   602                           	opt stack 0
   603  00001F                     _CANisTxReady$3000:
   604                           	opt stack 0
   605  00001F                     OpenEPWM1@period:
   606                           	opt stack 0
   607  00001F                     SetOutputEPWM1@outputmode:
   608                           	opt stack 0
   609  00001F                     OpenTimer2@config:
   610                           	opt stack 0
   611  00001F                     SetDCEPWM1@dutycycle:
   612                           	opt stack 0
   613  00001F                     ___wmul@multiplier:
   614                           	opt stack 0
   615  00001F                     abs@a:
   616                           	opt stack 0
   617  00001F                     ___lwdiv@dividend:
   618                           	opt stack 0
   619  00001F                     CANSetMask@mask:
   620                           	opt stack 0
   621  00001F                     CANSetFilter@filter:
   622                           	opt stack 0
   623                           
   624                           ; 4 bytes @ 0x1E
   625  00001F                     	ds	1
   626  000020                     SetOutputEPWM1@outputconfig:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0x1F
   630  000020                     	ds	1
   631  000021                     ??_SetDCEPWM1:
   632  000021                     ??_abs:
   633  000021                     ___wmul@multiplicand:
   634                           	opt stack 0
   635  000021                     ___lwdiv@divisor:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x20
   639  000021                     	ds	2
   640  000023                     CANSetMask@type:
   641                           	opt stack 0
   642  000023                     CANSetFilter@type:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x22
   646  000023                     	ds	1
   647  000024                     tblptru	equ	0xFF8
   648                           tblptrh	equ	0xFF7
   649                           tblptrl	equ	0xFF6
   650                           tablat	equ	0xFF5
   651                           postinc0	equ	0xFEE
   652                           wreg	equ	0xFE8
   653                           postdec1	equ	0xFE5
   654                           fsr1l	equ	0xFE1
   655                           
   656                           ; 0 bytes @ 0x23
   657 ;;
   658 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   659 ;;
   660 ;; *************** function _main *****************
   661 ;; Defined at:
   662 ;;		line 118 in file "motore.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  period          1   29[BANK0 ] unsigned char 
   667 ;; Return value:  Size  Location     Type
   668 ;;                  2  662[None  ] int 
   669 ;; Registers used:
   670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   676 ;;      Params:         0       0       0       0
   677 ;;      Locals:         0       1       0       0
   678 ;;      Temps:          0       8       0       0
   679 ;;      Totals:         0       9       0       0
   680 ;;Total ram usage:        9 bytes
   681 ;; Hardware stack levels required when called:    5
   682 ;; This function calls:
   683 ;;		_CANisTxReady
   684 ;;		_CANsendMessage
   685 ;;		_OpenEPWM1
   686 ;;		_OpenTimer2
   687 ;;		_SetDCEPWM1
   688 ;;		_SetOutputEPWM1
   689 ;;		_battery_measure
   690 ;;		_can_interpreter
   691 ;;		_configurazione_iniziale
   692 ;;		_delay_ms
   693 ;;		_rampe
   694 ;;		_send_data
   695 ;; This function is called by:
   696 ;;		Startup code after reset
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text0
   701  001B62                     __ptext0:
   702                           	opt stack 0
   703  001B62                     _main:
   704                           	opt stack 26
   705                           
   706                           ;motore.c: 119: unsigned char period;
   707                           ;motore.c: 120: configurazione_iniziale();
   708                           
   709                           ;incstack = 0
   710  001B62  EC29  F011         	call	_configurazione_iniziale	;wreg free
   711                           
   712                           ;motore.c: 121: PORTAbits.RA1 = 1;
   713  001B66  8280               	bsf	3968,1,c	;volatile
   714                           
   715                           ;motore.c: 122: PORTCbits.RC1 = 1;
   716  001B68  8282               	bsf	3970,1,c	;volatile
   717                           
   718                           ;motore.c: 123: delay_ms(500);
   719  001B6A  0E01               	movlw	1
   720  001B6C  0100               	movlb	0	; () banked
   721  001B6E  6FAE               	movwf	(delay_ms@value_ms+1)& (0+255),b
   722  001B70  0EF4               	movlw	244
   723  001B72  6FAD               	movwf	delay_ms@value_ms& (0+255),b
   724  001B74  EC3A  F012         	call	_delay_ms	;wreg free
   725                           
   726                           ;motore.c: 124: PORTAbits.RA1 = 0;
   727  001B78  9280               	bcf	3968,1,c	;volatile
   728                           
   729                           ;motore.c: 125: PORTCbits.RC1 = 0;
   730  001B7A  9282               	bcf	3970,1,c	;volatile
   731                           
   732                           ;motore.c: 126: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
   733  001B7C  0E06               	movlw	6
   734  001B7E  EC8E  F012         	call	_OpenTimer2
   735                           
   736                           ;motore.c: 127: period = 0xFE;
   737  001B82  0EFE               	movlw	254
   738  001B84  0100               	movlb	0	; () banked
   739  001B86  6FC8               	movwf	main@period& (0+255),b
   740                           
   741                           ; BSR set to: 0
   742                           ;motore.c: 128: OpenEPWM1(period);
   743  001B88  0100               	movlb	0	; () banked
   744  001B8A  51C8               	movf	main@period& (0+255),w,b
   745  001B8C  ECB0  F012         	call	_OpenEPWM1
   746                           
   747                           ;motore.c: 129: speed_fetched = 1;
   748  001B90  8239               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
   749                           
   750                           ;motore.c: 130: SetOutputEPWM1(0b01111111, 0b11111100);
   751  001B92  0EFC               	movlw	252
   752  001B94  6E1F               	movwf	SetOutputEPWM1@outputmode,c
   753  001B96  0E7F               	movlw	127
   754  001B98  ECFB  F011         	call	_SetOutputEPWM1
   755  001B9C                     l4817:
   756                           
   757                           ;motore.c: 132: can_interpreter();
   758  001B9C  ECC2  F010         	call	_can_interpreter	;wreg free
   759                           
   760                           ;motore.c: 133: if (PORTAbits.RA1 == 0){
   761  001BA0  B280               	btfsc	3968,1,c	;volatile
   762  001BA2  D039               	goto	l4825
   763                           
   764                           ;motore.c: 135: if ((timeCounter - previousTimeCounter1 >= 40)) {
   765  001BA4  C078  F0C0         	movff	_previousTimeCounter1,??_main
   766  001BA8  C079  F0C1         	movff	_previousTimeCounter1+1,??_main+1
   767  001BAC  C07A  F0C2         	movff	_previousTimeCounter1+2,??_main+2
   768  001BB0  C07B  F0C3         	movff	_previousTimeCounter1+3,??_main+3
   769  001BB4  0100               	movlb	0	; () banked
   770  001BB6  1FC0               	comf	??_main& (0+255),f,b
   771  001BB8  1FC1               	comf	(??_main+1)& (0+255),f,b
   772  001BBA  1FC2               	comf	(??_main+2)& (0+255),f,b
   773  001BBC  1FC3               	comf	(??_main+3)& (0+255),f,b
   774  001BBE  2BC0               	incf	??_main& (0+255),f,b
   775  001BC0  0E00               	movlw	0
   776  001BC2  23C1               	addwfc	(??_main+1)& (0+255),f,b
   777  001BC4  23C2               	addwfc	(??_main+2)& (0+255),f,b
   778  001BC6  23C3               	addwfc	(??_main+3)& (0+255),f,b
   779  001BC8  0100               	movlb	0	; () banked
   780  001BCA  5180               	movf	_timeCounter& (0+255),w,b	;volatile
   781  001BCC  0100               	movlb	0	; () banked
   782  001BCE  25C0               	addwf	??_main& (0+255),w,b
   783  001BD0  0100               	movlb	0	; () banked
   784  001BD2  6FC4               	movwf	(??_main+4)& (0+255),b
   785  001BD4  0100               	movlb	0	; () banked
   786  001BD6  5181               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
   787  001BD8  0100               	movlb	0	; () banked
   788  001BDA  21C1               	addwfc	(??_main+1)& (0+255),w,b
   789  001BDC  0100               	movlb	0	; () banked
   790  001BDE  6FC5               	movwf	(??_main+5)& (0+255),b
   791  001BE0  0100               	movlb	0	; () banked
   792  001BE2  5182               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
   793  001BE4  0100               	movlb	0	; () banked
   794  001BE6  21C2               	addwfc	(??_main+2)& (0+255),w,b
   795  001BE8  0100               	movlb	0	; () banked
   796  001BEA  6FC6               	movwf	(??_main+6)& (0+255),b
   797  001BEC  0100               	movlb	0	; () banked
   798  001BEE  5183               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
   799  001BF0  0100               	movlb	0	; () banked
   800  001BF2  21C3               	addwfc	(??_main+3)& (0+255),w,b
   801  001BF4  0100               	movlb	0	; () banked
   802  001BF6  6FC7               	movwf	(??_main+7)& (0+255),b
   803  001BF8  0100               	movlb	0	; () banked
   804  001BFA  51C7               	movf	(??_main+7)& (0+255),w,b
   805  001BFC  0100               	movlb	0	; () banked
   806  001BFE  11C6               	iorwf	(??_main+6)& (0+255),w,b
   807  001C00  0100               	movlb	0	; () banked
   808  001C02  11C5               	iorwf	(??_main+5)& (0+255),w,b
   809  001C04  E105               	bnz	u6020
   810  001C06  0E28               	movlw	40
   811  001C08  0100               	movlb	0	; () banked
   812  001C0A  5DC4               	subwf	(??_main+4)& (0+255),w,b
   813  001C0C  A0D8               	btfss	status,0,c
   814  001C0E  D009               	goto	l4827
   815  001C10                     u6020:
   816                           
   817                           ; BSR set to: 0
   818                           ;motore.c: 136: rampe();
   819  001C10  ECD2  F00E         	call	_rampe	;wreg free
   820                           
   821                           ;motore.c: 137: }
   822                           ;motore.c: 138: }
   823  001C14  D006               	goto	l4827
   824  001C16                     l4825:
   825                           
   826                           ;motore.c: 139: else {
   827                           ;motore.c: 140: SetDCEPWM1(0);
   828  001C16  0E00               	movlw	0
   829  001C18  6E20               	movwf	SetDCEPWM1@dutycycle+1,c
   830  001C1A  0E00               	movlw	0
   831  001C1C  6E1F               	movwf	SetDCEPWM1@dutycycle,c
   832  001C1E  EC1D  F012         	call	_SetDCEPWM1	;wreg free
   833  001C22                     l4827:
   834                           
   835                           ;motore.c: 141: }
   836                           ;motore.c: 142: if ((can_retry == 1)&&(remote_frame)) {
   837  001C22  B038               	btfsc	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
   838  001C24  AC38               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   839  001C26  D002               	goto	l4833
   840                           
   841                           ;motore.c: 143: send_data();
   842  001C28  ECAF  F011         	call	_send_data	;wreg free
   843  001C2C                     l4833:
   844                           
   845                           ;motore.c: 144: }
   846                           ;motore.c: 146: if ((timeCounter - previousTimeCounter) > 500) {
   847  001C2C  C074  F0C0         	movff	_previousTimeCounter,??_main
   848  001C30  C075  F0C1         	movff	_previousTimeCounter+1,??_main+1
   849  001C34  C076  F0C2         	movff	_previousTimeCounter+2,??_main+2
   850  001C38  C077  F0C3         	movff	_previousTimeCounter+3,??_main+3
   851  001C3C  0100               	movlb	0	; () banked
   852  001C3E  1FC0               	comf	??_main& (0+255),f,b
   853  001C40  1FC1               	comf	(??_main+1)& (0+255),f,b
   854  001C42  1FC2               	comf	(??_main+2)& (0+255),f,b
   855  001C44  1FC3               	comf	(??_main+3)& (0+255),f,b
   856  001C46  2BC0               	incf	??_main& (0+255),f,b
   857  001C48  0E00               	movlw	0
   858  001C4A  23C1               	addwfc	(??_main+1)& (0+255),f,b
   859  001C4C  23C2               	addwfc	(??_main+2)& (0+255),f,b
   860  001C4E  23C3               	addwfc	(??_main+3)& (0+255),f,b
   861  001C50  0100               	movlb	0	; () banked
   862  001C52  5180               	movf	_timeCounter& (0+255),w,b	;volatile
   863  001C54  0100               	movlb	0	; () banked
   864  001C56  25C0               	addwf	??_main& (0+255),w,b
   865  001C58  0100               	movlb	0	; () banked
   866  001C5A  6FC4               	movwf	(??_main+4)& (0+255),b
   867  001C5C  0100               	movlb	0	; () banked
   868  001C5E  5181               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
   869  001C60  0100               	movlb	0	; () banked
   870  001C62  21C1               	addwfc	(??_main+1)& (0+255),w,b
   871  001C64  0100               	movlb	0	; () banked
   872  001C66  6FC5               	movwf	(??_main+5)& (0+255),b
   873  001C68  0100               	movlb	0	; () banked
   874  001C6A  5182               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
   875  001C6C  0100               	movlb	0	; () banked
   876  001C6E  21C2               	addwfc	(??_main+2)& (0+255),w,b
   877  001C70  0100               	movlb	0	; () banked
   878  001C72  6FC6               	movwf	(??_main+6)& (0+255),b
   879  001C74  0100               	movlb	0	; () banked
   880  001C76  5183               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
   881  001C78  0100               	movlb	0	; () banked
   882  001C7A  21C3               	addwfc	(??_main+3)& (0+255),w,b
   883  001C7C  0100               	movlb	0	; () banked
   884  001C7E  6FC7               	movwf	(??_main+7)& (0+255),b
   885  001C80  0100               	movlb	0	; () banked
   886  001C82  51C7               	movf	(??_main+7)& (0+255),w,b
   887  001C84  0100               	movlb	0	; () banked
   888  001C86  11C6               	iorwf	(??_main+6)& (0+255),w,b
   889  001C88  E108               	bnz	u6050
   890  001C8A  0EF5               	movlw	245
   891  001C8C  0100               	movlb	0	; () banked
   892  001C8E  5DC4               	subwf	(??_main+4)& (0+255),w,b
   893  001C90  0E01               	movlw	1
   894  001C92  0100               	movlb	0	; () banked
   895  001C94  59C5               	subwfb	(??_main+5)& (0+255),w,b
   896  001C96  A0D8               	btfss	status,0,c
   897  001C98  D044               	goto	l4861
   898  001C9A                     u6050:
   899                           
   900                           ; BSR set to: 0
   901                           ;motore.c: 147: if (request_sent == 0) {
   902  001C9A  B039               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
   903  001C9C  D01E               	goto	l669
   904  001C9E                     l4839:
   905  001C9E  EC7F  F012         	call	_CANisTxReady	;wreg free
   906  001CA2  06E8               	decf	wreg,f,c
   907  001CA4  A4D8               	btfss	status,2,c
   908  001CA6  D7FB               	goto	l4839
   909                           
   910                           ;motore.c: 149: }
   911                           ;motore.c: 150: CANsendMessage(0b00000000010, data_array, 8, CAN_CONFIG_STD_MSG & CAN_RE
      +                          MOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   912  001CA8  0E02               	movlw	2
   913  001CAA  0100               	movlb	0	; () banked
   914  001CAC  6FAB               	movwf	CANsendMessage@identifier& (0+255),b
   915  001CAE  0E00               	movlw	0
   916  001CB0  6FAC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   917  001CB2  0E00               	movlw	0
   918  001CB4  6FAD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   919  001CB6  0E00               	movlw	0
   920  001CB8  6FAE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   921  001CBA  0E9B               	movlw	low _data_array
   922  001CBC  0100               	movlb	0	; () banked
   923  001CBE  6FAF               	movwf	CANsendMessage@data& (0+255),b
   924  001CC0  0E00               	movlw	high _data_array
   925  001CC2  0100               	movlb	0	; () banked
   926  001CC4  6FB0               	movwf	(CANsendMessage@data+1)& (0+255),b
   927  001CC6  0E08               	movlw	8
   928  001CC8  0100               	movlb	0	; () banked
   929  001CCA  6FB1               	movwf	CANsendMessage@dataLength& (0+255),b
   930  001CCC  0EFC               	movlw	252
   931  001CCE  0100               	movlb	0	; () banked
   932  001CD0  6FB2               	movwf	CANsendMessage@flags& (0+255),b
   933  001CD2  ECC2  F005         	call	_CANsendMessage	;wreg free
   934                           
   935                           ;motore.c: 151: request_sent = 1;
   936  001CD6  8039               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
   937                           
   938                           ;motore.c: 152: } else {
   939  001CD8  D01C               	goto	l4859
   940  001CDA                     l669:
   941                           
   942                           ; BSR set to: 0
   943                           ;motore.c: 153: if ((centralina_abs == 1)&&(centralina_sterzo == 1)&&(centralina_comando
      +                           == 1)) {
   944  001CDA  B238               	btfsc	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
   945                           
   946                           ; BSR set to: 0
   947  001CDC  A638               	btfss	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
   948  001CDE  D007               	goto	l674
   949                           
   950                           ; BSR set to: 0
   951  001CE0  A438               	btfss	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
   952  001CE2  D005               	goto	l674
   953                           
   954                           ; BSR set to: 0
   955                           ;motore.c: 154: centralina_abs = 0;
   956  001CE4  9238               	bcf	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
   957                           
   958                           ;motore.c: 155: centralina_sterzo = 0;
   959  001CE6  9638               	bcf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
   960                           
   961                           ;motore.c: 156: centralina_comando = 0;
   962  001CE8  9438               	bcf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
   963                           
   964                           ;motore.c: 157: PORTAbits.RA1 = 0;
   965  001CEA  9280               	bcf	3968,1,c	;volatile
   966  001CEC  D011               	goto	l4857
   967  001CEE                     l674:
   968                           
   969                           ; BSR set to: 0
   970                           ;motore.c: 161: PORTAbits.RA1 = 1;
   971  001CEE  8280               	bsf	3968,1,c	;volatile
   972                           
   973                           ; BSR set to: 0
   974                           ;motore.c: 162: delay_ms(200);
   975  001CF0  0E00               	movlw	0
   976  001CF2  0100               	movlb	0	; () banked
   977  001CF4  6FAE               	movwf	(delay_ms@value_ms+1)& (0+255),b
   978  001CF6  0EC8               	movlw	200
   979  001CF8  6FAD               	movwf	delay_ms@value_ms& (0+255),b
   980  001CFA  EC3A  F012         	call	_delay_ms	;wreg free
   981                           
   982                           ;motore.c: 163: PORTAbits.RA1 = 0;
   983  001CFE  9280               	bcf	3968,1,c	;volatile
   984                           
   985                           ;motore.c: 164: delay_ms(200);
   986  001D00  0E00               	movlw	0
   987  001D02  0100               	movlb	0	; () banked
   988  001D04  6FAE               	movwf	(delay_ms@value_ms+1)& (0+255),b
   989  001D06  0EC8               	movlw	200
   990  001D08  6FAD               	movwf	delay_ms@value_ms& (0+255),b
   991  001D0A  EC3A  F012         	call	_delay_ms	;wreg free
   992                           
   993                           ;motore.c: 165: PORTAbits.RA1 = 1;
   994  001D0E  8280               	bsf	3968,1,c	;volatile
   995  001D10                     l4857:
   996                           
   997                           ;motore.c: 166: request_sent = 0;
   998  001D10  9039               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
   999  001D12                     l4859:
  1000                           
  1001                           ;motore.c: 167: }
  1002                           ;motore.c: 168: }
  1003                           ;motore.c: 169: previousTimeCounter = timeCounter;
  1004  001D12  C080  F074         	movff	_timeCounter,_previousTimeCounter	;volatile
  1005  001D16  C081  F075         	movff	_timeCounter+1,_previousTimeCounter+1	;volatile
  1006  001D1A  C082  F076         	movff	_timeCounter+2,_previousTimeCounter+2	;volatile
  1007  001D1E  C083  F077         	movff	_timeCounter+3,_previousTimeCounter+3	;volatile
  1008  001D22                     l4861:
  1009                           
  1010                           ;motore.c: 170: }
  1011                           ;motore.c: 171: if ((timeCounter - previousTimeCounter2 > 100)) {
  1012  001D22  C07C  F0C0         	movff	_previousTimeCounter2,??_main
  1013  001D26  C07D  F0C1         	movff	_previousTimeCounter2+1,??_main+1
  1014  001D2A  C07E  F0C2         	movff	_previousTimeCounter2+2,??_main+2
  1015  001D2E  C07F  F0C3         	movff	_previousTimeCounter2+3,??_main+3
  1016  001D32  0100               	movlb	0	; () banked
  1017  001D34  1FC0               	comf	??_main& (0+255),f,b
  1018  001D36  1FC1               	comf	(??_main+1)& (0+255),f,b
  1019  001D38  1FC2               	comf	(??_main+2)& (0+255),f,b
  1020  001D3A  1FC3               	comf	(??_main+3)& (0+255),f,b
  1021  001D3C  2BC0               	incf	??_main& (0+255),f,b
  1022  001D3E  0E00               	movlw	0
  1023  001D40  23C1               	addwfc	(??_main+1)& (0+255),f,b
  1024  001D42  23C2               	addwfc	(??_main+2)& (0+255),f,b
  1025  001D44  23C3               	addwfc	(??_main+3)& (0+255),f,b
  1026  001D46  0100               	movlb	0	; () banked
  1027  001D48  5180               	movf	_timeCounter& (0+255),w,b	;volatile
  1028  001D4A  0100               	movlb	0	; () banked
  1029  001D4C  25C0               	addwf	??_main& (0+255),w,b
  1030  001D4E  0100               	movlb	0	; () banked
  1031  001D50  6FC4               	movwf	(??_main+4)& (0+255),b
  1032  001D52  0100               	movlb	0	; () banked
  1033  001D54  5181               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
  1034  001D56  0100               	movlb	0	; () banked
  1035  001D58  21C1               	addwfc	(??_main+1)& (0+255),w,b
  1036  001D5A  0100               	movlb	0	; () banked
  1037  001D5C  6FC5               	movwf	(??_main+5)& (0+255),b
  1038  001D5E  0100               	movlb	0	; () banked
  1039  001D60  5182               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
  1040  001D62  0100               	movlb	0	; () banked
  1041  001D64  21C2               	addwfc	(??_main+2)& (0+255),w,b
  1042  001D66  0100               	movlb	0	; () banked
  1043  001D68  6FC6               	movwf	(??_main+6)& (0+255),b
  1044  001D6A  0100               	movlb	0	; () banked
  1045  001D6C  5183               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
  1046  001D6E  0100               	movlb	0	; () banked
  1047  001D70  21C3               	addwfc	(??_main+3)& (0+255),w,b
  1048  001D72  0100               	movlb	0	; () banked
  1049  001D74  6FC7               	movwf	(??_main+7)& (0+255),b
  1050  001D76  0100               	movlb	0	; () banked
  1051  001D78  51C7               	movf	(??_main+7)& (0+255),w,b
  1052  001D7A  0100               	movlb	0	; () banked
  1053  001D7C  11C6               	iorwf	(??_main+6)& (0+255),w,b
  1054  001D7E  0100               	movlb	0	; () banked
  1055  001D80  11C5               	iorwf	(??_main+5)& (0+255),w,b
  1056  001D82  E105               	bnz	u6110
  1057  001D84  0E65               	movlw	101
  1058  001D86  0100               	movlb	0	; () banked
  1059  001D88  5DC4               	subwf	(??_main+4)& (0+255),w,b
  1060  001D8A  A0D8               	btfss	status,0,c
  1061  001D8C  D707               	goto	l4817
  1062  001D8E                     u6110:
  1063                           
  1064                           ; BSR set to: 0
  1065                           ;motore.c: 172: battery_measure();
  1066  001D8E  ECBC  F012         	call	_battery_measure	;wreg free
  1067                           
  1068                           ;motore.c: 173: previousTimeCounter2 = timeCounter;
  1069  001D92  C080  F07C         	movff	_timeCounter,_previousTimeCounter2	;volatile
  1070  001D96  C081  F07D         	movff	_timeCounter+1,_previousTimeCounter2+1	;volatile
  1071  001D9A  C082  F07E         	movff	_timeCounter+2,_previousTimeCounter2+2	;volatile
  1072  001D9E  C083  F07F         	movff	_timeCounter+3,_previousTimeCounter2+3	;volatile
  1073  001DA2  D6FC               	goto	l4817
  1074  001DA4                     __end_of_main:
  1075                           	opt stack 0
  1076                           tblptru	equ	0xFF8
  1077                           tblptrh	equ	0xFF7
  1078                           tblptrl	equ	0xFF6
  1079                           tablat	equ	0xFF5
  1080                           postinc0	equ	0xFEE
  1081                           wreg	equ	0xFE8
  1082                           postdec1	equ	0xFE5
  1083                           fsr1l	equ	0xFE1
  1084                           status	equ	0xFD8
  1085                           
  1086 ;; *************** function _send_data *****************
  1087 ;; Defined at:
  1088 ;;		line 214 in file "motore.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;		None               void
  1095 ;; Registers used:
  1096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1102 ;;      Params:         0       0       0       0
  1103 ;;      Locals:         0       0       0       0
  1104 ;;      Temps:          0       0       0       0
  1105 ;;      Totals:         0       0       0       0
  1106 ;;Total ram usage:        0 bytes
  1107 ;; Hardware stack levels used:    1
  1108 ;; Hardware stack levels required when called:    3
  1109 ;; This function calls:
  1110 ;;		_CANisTxReady
  1111 ;;		_CANsendMessage
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text1
  1118  00235E                     __ptext1:
  1119                           	opt stack 0
  1120  00235E                     _send_data:
  1121                           	opt stack 27
  1122                           
  1123                           ;motore.c: 215: if (CANisTxReady()) {
  1124                           
  1125                           ;incstack = 0
  1126  00235E  EC7F  F012         	call	_CANisTxReady	;wreg free
  1127  002362  0900               	iorlw	0
  1128  002364  A4D8               	btfss	status,2,c
  1129                           
  1130                           ;motore.c: 216: if (remote_frame == 1) {
  1131  002366  AC38               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1132  002368  D017               	goto	l4785
  1133                           
  1134                           ;motore.c: 217: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1135  00236A  C028  F0AB         	movff	_id,CANsendMessage@identifier	;volatile
  1136  00236E  C029  F0AC         	movff	_id+1,CANsendMessage@identifier+1	;volatile
  1137  002372  C02A  F0AD         	movff	_id+2,CANsendMessage@identifier+2	;volatile
  1138  002376  C02B  F0AE         	movff	_id+3,CANsendMessage@identifier+3	;volatile
  1139  00237A  0E9B               	movlw	low _data_array
  1140  00237C  0100               	movlb	0	; () banked
  1141  00237E  6FAF               	movwf	CANsendMessage@data& (0+255),b
  1142  002380  0E00               	movlw	high _data_array
  1143  002382  0100               	movlb	0	; () banked
  1144  002384  6FB0               	movwf	(CANsendMessage@data+1)& (0+255),b
  1145  002386  0E08               	movlw	8
  1146  002388  0100               	movlb	0	; () banked
  1147  00238A  6FB1               	movwf	CANsendMessage@dataLength& (0+255),b
  1148  00238C  0EBC               	movlw	188
  1149  00238E  0100               	movlb	0	; () banked
  1150  002390  6FB2               	movwf	CANsendMessage@flags& (0+255),b
  1151  002392  ECC2  F005         	call	_CANsendMessage	;wreg free
  1152                           
  1153                           ;motore.c: 218: remote_frame = 0;
  1154  002396  9C38               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1155  002398                     l4785:
  1156                           
  1157                           ;motore.c: 219: }
  1158                           ;motore.c: 220: }
  1159                           ;motore.c: 221: if ((TXB0CONbits.TXABT) || (TXB1CONbits.TXABT)) {
  1160  002398  010F               	movlb	15	; () banked
  1161  00239A  BD40               	btfsc	64,6,b	;volatile
  1162  00239C  D003               	goto	l701
  1163                           
  1164                           ; BSR set to: 15
  1165  00239E  010F               	movlb	15	; () banked
  1166  0023A0  AD30               	btfss	48,6,b	;volatile
  1167  0023A2  D002               	goto	l699
  1168  0023A4                     l701:
  1169                           
  1170                           ; BSR set to: 15
  1171                           ;motore.c: 222: can_retry = 1;
  1172  0023A4  8038               	bsf	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
  1173                           
  1174                           ;motore.c: 223: } else {
  1175  0023A6  0012               	return	
  1176  0023A8                     l699:
  1177                           
  1178                           ; BSR set to: 15
  1179                           ;motore.c: 224: can_retry = 0;
  1180  0023A8  9038               	bcf	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
  1181  0023AA  0012               	return	
  1182  0023AC                     __end_of_send_data:
  1183                           	opt stack 0
  1184                           tblptru	equ	0xFF8
  1185                           tblptrh	equ	0xFF7
  1186                           tblptrl	equ	0xFF6
  1187                           tablat	equ	0xFF5
  1188                           postinc0	equ	0xFEE
  1189                           wreg	equ	0xFE8
  1190                           postdec1	equ	0xFE5
  1191                           fsr1l	equ	0xFE1
  1192                           status	equ	0xFD8
  1193                           
  1194 ;; *************** function _rampe *****************
  1195 ;; Defined at:
  1196 ;;		line 178 in file "motore.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;		None               void
  1203 ;; Registers used:
  1204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1210 ;;      Params:         0       0       0       0
  1211 ;;      Locals:         0       0       0       0
  1212 ;;      Temps:          0       8       0       0
  1213 ;;      Totals:         0       8       0       0
  1214 ;;Total ram usage:        8 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:    3
  1217 ;; This function calls:
  1218 ;;		_CANisTxReady
  1219 ;;		_CANsendMessage
  1220 ;;		_SetDCEPWM1
  1221 ;;		_SetOutputEPWM1
  1222 ;;		___lwdiv
  1223 ;;		_abs
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text2
  1230  001DA4                     __ptext2:
  1231                           	opt stack 0
  1232  001DA4                     _rampe:
  1233                           	opt stack 27
  1234  001DA4                     l4735:
  1235  001DA4  EC7F  F012         	call	_CANisTxReady	;wreg free
  1236  001DA8  06E8               	decf	wreg,f,c
  1237  001DAA  A4D8               	btfss	status,2,c
  1238  001DAC  D7FB               	goto	l4735
  1239                           
  1240                           ;motore.c: 180: CANsendMessage(0b00000000110, data_array_debug, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1241  001DAE  0E06               	movlw	6
  1242  001DB0  0100               	movlb	0	; () banked
  1243  001DB2  6FAB               	movwf	CANsendMessage@identifier& (0+255),b
  1244  001DB4  0E00               	movlw	0
  1245  001DB6  6FAC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1246  001DB8  0E00               	movlw	0
  1247  001DBA  6FAD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1248  001DBC  0E00               	movlw	0
  1249  001DBE  6FAE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1250  001DC0  0EA3               	movlw	low _data_array_debug
  1251  001DC2  0100               	movlb	0	; () banked
  1252  001DC4  6FAF               	movwf	CANsendMessage@data& (0+255),b
  1253  001DC6  0E00               	movlw	high _data_array_debug
  1254  001DC8  0100               	movlb	0	; () banked
  1255  001DCA  6FB0               	movwf	(CANsendMessage@data+1)& (0+255),b
  1256  001DCC  0E08               	movlw	8
  1257  001DCE  0100               	movlb	0	; () banked
  1258  001DD0  6FB1               	movwf	CANsendMessage@dataLength& (0+255),b
  1259  001DD2  0EFC               	movlw	252
  1260  001DD4  0100               	movlb	0	; () banked
  1261  001DD6  6FB2               	movwf	CANsendMessage@flags& (0+255),b
  1262  001DD8  ECC2  F005         	call	_CANsendMessage	;wreg free
  1263                           
  1264                           ;motore.c: 181: if (speed_fetched == 1) {
  1265  001DDC  A239               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1266  001DDE  D0EA               	goto	l4773
  1267                           
  1268                           ;motore.c: 182: if (dir == 1) {
  1269  001DE0  043E               	decf	_dir,w,c	;volatile
  1270  001DE2  103F               	iorwf	_dir+1,w,c	;volatile
  1271  001DE4  A4D8               	btfss	status,2,c
  1272  001DE6  D005               	goto	l4745
  1273                           
  1274                           ;motore.c: 183: SetOutputEPWM1(0b01111111, 0b11111100);
  1275  001DE8  0EFC               	movlw	252
  1276  001DEA  6E1F               	movwf	SetOutputEPWM1@outputmode,c
  1277  001DEC  0E7F               	movlw	127
  1278  001DEE  ECFB  F011         	call	_SetOutputEPWM1
  1279  001DF2                     l4745:
  1280                           
  1281                           ;motore.c: 184: }
  1282                           ;motore.c: 185: if (dir == 0) {
  1283  001DF2  503E               	movf	_dir,w,c	;volatile
  1284  001DF4  103F               	iorwf	_dir+1,w,c	;volatile
  1285  001DF6  A4D8               	btfss	status,2,c
  1286  001DF8  D005               	goto	l4749
  1287                           
  1288                           ;motore.c: 186: SetOutputEPWM1(0b11111111, 0b11111100);
  1289  001DFA  0EFC               	movlw	252
  1290  001DFC  6E1F               	movwf	SetOutputEPWM1@outputmode,c
  1291  001DFE  0EFF               	movlw	255
  1292  001E00  ECFB  F011         	call	_SetOutputEPWM1
  1293  001E04                     l4749:
  1294                           
  1295                           ;motore.c: 187: }
  1296                           ;motore.c: 188: speed_fetched = 0;
  1297  001E04  9239               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1298                           
  1299                           ;motore.c: 189: currentSpeed = ((left_speed + right_speed) / 2);
  1300  001E06  5034               	movf	_right_speed,w,c	;volatile
  1301  001E08  2430               	addwf	_left_speed,w,c	;volatile
  1302  001E0A  0100               	movlb	0	; () banked
  1303  001E0C  6FB7               	movwf	??_rampe& (0+255),b
  1304  001E0E  5035               	movf	_right_speed+1,w,c	;volatile
  1305  001E10  2031               	addwfc	_left_speed+1,w,c	;volatile
  1306  001E12  0100               	movlb	0	; () banked
  1307  001E14  6FB8               	movwf	(??_rampe+1)& (0+255),b
  1308  001E16  90D8               	bcf	status,0,c
  1309  001E18  0100               	movlb	0	; () banked
  1310  001E1A  31B8               	rrcf	(??_rampe+1)& (0+255),w,b
  1311  001E1C  0100               	movlb	0	; () banked
  1312  001E1E  6FBA               	movwf	(??_rampe+3)& (0+255),b
  1313  001E20  0100               	movlb	0	; () banked
  1314  001E22  31B7               	rrcf	??_rampe& (0+255),w,b
  1315  001E24  0100               	movlb	0	; () banked
  1316  001E26  6FB9               	movwf	(??_rampe+2)& (0+255),b
  1317  001E28  C0B9  F03A         	movff	??_rampe+2,_currentSpeed	;volatile
  1318  001E2C  C0BA  F03B         	movff	??_rampe+3,_currentSpeed+1	;volatile
  1319  001E30  6A3C               	clrf	_currentSpeed+2,c	;volatile
  1320  001E32  6A3D               	clrf	_currentSpeed+3,c	;volatile
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;motore.c: 190: errore = abs((currentSpeed - requestSpeed));
  1324  001E34  C02C  F0B7         	movff	_requestSpeed,??_rampe	;volatile
  1325  001E38  C02D  F0B8         	movff	_requestSpeed+1,??_rampe+1	;volatile
  1326  001E3C  0100               	movlb	0	; () banked
  1327  001E3E  1FB7               	comf	??_rampe& (0+255),f,b
  1328  001E40  1FB8               	comf	(??_rampe+1)& (0+255),f,b
  1329  001E42  4BB7               	infsnz	??_rampe& (0+255),f,b
  1330  001E44  2BB8               	incf	(??_rampe+1)& (0+255),f,b
  1331  001E46  503A               	movf	_currentSpeed,w,c	;volatile
  1332  001E48  0100               	movlb	0	; () banked
  1333  001E4A  25B7               	addwf	??_rampe& (0+255),w,b
  1334  001E4C  6E1F               	movwf	abs@a,c
  1335  001E4E  503B               	movf	_currentSpeed+1,w,c	;volatile
  1336  001E50  0100               	movlb	0	; () banked
  1337  001E52  21B8               	addwfc	(??_rampe+1)& (0+255),w,b
  1338  001E54  6E20               	movwf	abs@a+1,c
  1339  001E56  EC6B  F012         	call	_abs	;wreg free
  1340  001E5A  C01F  F088         	movff	?_abs,_errore
  1341  001E5E  C020  F089         	movff	?_abs+1,_errore+1
  1342                           
  1343                           ;motore.c: 192: correzione = errore / 20 ;
  1344  001E62  C088  F01F         	movff	_errore,___lwdiv@dividend
  1345  001E66  C089  F020         	movff	_errore+1,___lwdiv@dividend+1
  1346  001E6A  0E00               	movlw	0
  1347  001E6C  6E22               	movwf	___lwdiv@divisor+1,c
  1348  001E6E  0E14               	movlw	20
  1349  001E70  6E21               	movwf	___lwdiv@divisor,c
  1350  001E72  EC80  F011         	call	___lwdiv	;wreg free
  1351  001E76  C01F  F070         	movff	?___lwdiv,_correzione
  1352  001E7A  C020  F071         	movff	?___lwdiv+1,_correzione+1
  1353  001E7E  0100               	movlb	0	; () banked
  1354  001E80  6B72               	clrf	(_correzione+2)& (0+255),b
  1355  001E82  6B73               	clrf	(_correzione+3)& (0+255),b
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;motore.c: 193: if (correzione > 10) {
  1359  001E84  0100               	movlb	0	; () banked
  1360  001E86  BF73               	btfsc	(_correzione+3)& (0+255),7,b
  1361  001E88  D08B               	goto	l4769
  1362  001E8A  0100               	movlb	0	; () banked
  1363  001E8C  5173               	movf	(_correzione+3)& (0+255),w,b
  1364  001E8E  0100               	movlb	0	; () banked
  1365  001E90  1172               	iorwf	(_correzione+2)& (0+255),w,b
  1366  001E92  0100               	movlb	0	; () banked
  1367  001E94  1171               	iorwf	(_correzione+1)& (0+255),w,b
  1368  001E96  E105               	bnz	u5920
  1369  001E98  0E0B               	movlw	11
  1370  001E9A  0100               	movlb	0	; () banked
  1371  001E9C  5D70               	subwf	_correzione& (0+255),w,b
  1372  001E9E  A0D8               	btfss	status,0,c
  1373  001EA0  D07F               	goto	l4769
  1374  001EA2                     u5920:
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;motore.c: 194: if (currentSpeed - requestSpeed > 0) {
  1378  001EA2  C02C  F0B7         	movff	_requestSpeed,??_rampe	;volatile
  1379  001EA6  C02D  F0B8         	movff	_requestSpeed+1,??_rampe+1	;volatile
  1380  001EAA  C02E  F0B9         	movff	_requestSpeed+2,??_rampe+2	;volatile
  1381  001EAE  C02F  F0BA         	movff	_requestSpeed+3,??_rampe+3	;volatile
  1382  001EB2  0100               	movlb	0	; () banked
  1383  001EB4  1FB7               	comf	??_rampe& (0+255),f,b
  1384  001EB6  1FB8               	comf	(??_rampe+1)& (0+255),f,b
  1385  001EB8  1FB9               	comf	(??_rampe+2)& (0+255),f,b
  1386  001EBA  1FBA               	comf	(??_rampe+3)& (0+255),f,b
  1387  001EBC  2BB7               	incf	??_rampe& (0+255),f,b
  1388  001EBE  0E00               	movlw	0
  1389  001EC0  23B8               	addwfc	(??_rampe+1)& (0+255),f,b
  1390  001EC2  23B9               	addwfc	(??_rampe+2)& (0+255),f,b
  1391  001EC4  23BA               	addwfc	(??_rampe+3)& (0+255),f,b
  1392  001EC6  503A               	movf	_currentSpeed,w,c	;volatile
  1393  001EC8  0100               	movlb	0	; () banked
  1394  001ECA  25B7               	addwf	??_rampe& (0+255),w,b
  1395  001ECC  0100               	movlb	0	; () banked
  1396  001ECE  6FBB               	movwf	(??_rampe+4)& (0+255),b
  1397  001ED0  503B               	movf	_currentSpeed+1,w,c	;volatile
  1398  001ED2  0100               	movlb	0	; () banked
  1399  001ED4  21B8               	addwfc	(??_rampe+1)& (0+255),w,b
  1400  001ED6  0100               	movlb	0	; () banked
  1401  001ED8  6FBC               	movwf	(??_rampe+5)& (0+255),b
  1402  001EDA  503C               	movf	_currentSpeed+2,w,c	;volatile
  1403  001EDC  0100               	movlb	0	; () banked
  1404  001EDE  21B9               	addwfc	(??_rampe+2)& (0+255),w,b
  1405  001EE0  0100               	movlb	0	; () banked
  1406  001EE2  6FBD               	movwf	(??_rampe+6)& (0+255),b
  1407  001EE4  503D               	movf	_currentSpeed+3,w,c	;volatile
  1408  001EE6  0100               	movlb	0	; () banked
  1409  001EE8  21BA               	addwfc	(??_rampe+3)& (0+255),w,b
  1410  001EEA  0100               	movlb	0	; () banked
  1411  001EEC  6FBE               	movwf	(??_rampe+7)& (0+255),b
  1412  001EEE  0100               	movlb	0	; () banked
  1413  001EF0  BFBE               	btfsc	(??_rampe+7)& (0+255),7,b
  1414  001EF2  D033               	goto	l4765
  1415  001EF4  0100               	movlb	0	; () banked
  1416  001EF6  51BE               	movf	(??_rampe+7)& (0+255),w,b
  1417  001EF8  0100               	movlb	0	; () banked
  1418  001EFA  11BD               	iorwf	(??_rampe+6)& (0+255),w,b
  1419  001EFC  0100               	movlb	0	; () banked
  1420  001EFE  11BC               	iorwf	(??_rampe+5)& (0+255),w,b
  1421  001F00  E104               	bnz	u5930
  1422  001F02  0100               	movlb	0	; () banked
  1423  001F04  05BB               	decf	(??_rampe+4)& (0+255),w,b
  1424  001F06  A0D8               	btfss	status,0,c
  1425  001F08  D028               	goto	l4765
  1426  001F0A                     u5930:
  1427                           
  1428                           ; BSR set to: 0
  1429                           ;motore.c: 195: duty_set = previousPwm - correzione;
  1430  001F0A  C070  F0B7         	movff	_correzione,??_rampe
  1431  001F0E  C071  F0B8         	movff	_correzione+1,??_rampe+1
  1432  001F12  C072  F0B9         	movff	_correzione+2,??_rampe+2
  1433  001F16  C073  F0BA         	movff	_correzione+3,??_rampe+3
  1434  001F1A  0100               	movlb	0	; () banked
  1435  001F1C  1FB7               	comf	??_rampe& (0+255),f,b
  1436  001F1E  1FB8               	comf	(??_rampe+1)& (0+255),f,b
  1437  001F20  1FB9               	comf	(??_rampe+2)& (0+255),f,b
  1438  001F22  1FBA               	comf	(??_rampe+3)& (0+255),f,b
  1439  001F24  2BB7               	incf	??_rampe& (0+255),f,b
  1440  001F26  0E00               	movlw	0
  1441  001F28  23B8               	addwfc	(??_rampe+1)& (0+255),f,b
  1442  001F2A  23B9               	addwfc	(??_rampe+2)& (0+255),f,b
  1443  001F2C  23BA               	addwfc	(??_rampe+3)& (0+255),f,b
  1444  001F2E  5032               	movf	_previousPwm,w,c
  1445  001F30  0100               	movlb	0	; () banked
  1446  001F32  25B7               	addwf	??_rampe& (0+255),w,b
  1447  001F34  6E24               	movwf	_duty_set,c
  1448  001F36  5033               	movf	_previousPwm+1,w,c
  1449  001F38  0100               	movlb	0	; () banked
  1450  001F3A  21B8               	addwfc	(??_rampe+1)& (0+255),w,b
  1451  001F3C  6E25               	movwf	_duty_set+1,c
  1452  001F3E  0E00               	movlw	0
  1453  001F40  0100               	movlb	0	; () banked
  1454  001F42  21B9               	addwfc	(??_rampe+2)& (0+255),w,b
  1455  001F44  6E26               	movwf	_duty_set+2,c
  1456  001F46  0E00               	movlw	0
  1457  001F48  0100               	movlb	0	; () banked
  1458  001F4A  21BA               	addwfc	(??_rampe+3)& (0+255),w,b
  1459  001F4C  6E27               	movwf	_duty_set+3,c
  1460                           
  1461                           ;motore.c: 196: if (duty_set < 0) {
  1462  001F4E  AE27               	btfss	_duty_set+3,7,c
  1463  001F50  D02D               	goto	l4771
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;motore.c: 197: duty_set = 0;
  1467  001F52  0E00               	movlw	0
  1468  001F54  6E24               	movwf	_duty_set,c
  1469  001F56  0E00               	movlw	0
  1470  001F58  D01D               	goto	L1
  1471  001F5A                     l4765:
  1472                           
  1473                           ; BSR set to: 0
  1474                           ;motore.c: 200: duty_set = previousPwm + correzione;
  1475  001F5A  5032               	movf	_previousPwm,w,c
  1476  001F5C  0100               	movlb	0	; () banked
  1477  001F5E  2570               	addwf	_correzione& (0+255),w,b
  1478  001F60  6E24               	movwf	_duty_set,c
  1479  001F62  5033               	movf	_previousPwm+1,w,c
  1480  001F64  0100               	movlb	0	; () banked
  1481  001F66  2171               	addwfc	(_correzione+1)& (0+255),w,b
  1482  001F68  6E25               	movwf	_duty_set+1,c
  1483  001F6A  0E00               	movlw	0
  1484  001F6C  0100               	movlb	0	; () banked
  1485  001F6E  2172               	addwfc	(_correzione+2)& (0+255),w,b
  1486  001F70  6E26               	movwf	_duty_set+2,c
  1487  001F72  0E00               	movlw	0
  1488  001F74  0100               	movlb	0	; () banked
  1489  001F76  2173               	addwfc	(_correzione+3)& (0+255),w,b
  1490  001F78  6E27               	movwf	_duty_set+3,c
  1491                           
  1492                           ;motore.c: 201: if (duty_set > 1024) {
  1493  001F7A  BE27               	btfsc	_duty_set+3,7,c
  1494  001F7C  D017               	goto	l4771
  1495  001F7E  5027               	movf	_duty_set+3,w,c
  1496  001F80  1026               	iorwf	_duty_set+2,w,c
  1497  001F82  E105               	bnz	u5950
  1498  001F84  0424               	decf	_duty_set,w,c
  1499  001F86  0E04               	movlw	4
  1500  001F88  5825               	subwfb	_duty_set+1,w,c
  1501  001F8A  A0D8               	btfss	status,0,c
  1502  001F8C  D00F               	goto	l4771
  1503  001F8E                     u5950:
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;motore.c: 202: duty_set = 1023;
  1507  001F8E  0EFF               	movlw	255
  1508  001F90  6E24               	movwf	_duty_set,c
  1509  001F92  0E03               	movlw	3
  1510  001F94                     L1:
  1511  001F94  6E25               	movwf	_duty_set+1,c
  1512  001F96  0E00               	movlw	0
  1513  001F98  6E26               	movwf	_duty_set+2,c
  1514  001F9A  0E00               	movlw	0
  1515  001F9C  6E27               	movwf	_duty_set+3,c
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;motore.c: 203: }
  1519                           ;motore.c: 204: }
  1520                           ;motore.c: 205: } else {
  1521                           
  1522                           ; BSR set to: 0
  1523  001F9E  D006               	goto	l4771
  1524  001FA0                     l4769:
  1525                           
  1526                           ; BSR set to: 0
  1527                           ;motore.c: 206: duty_set = previousPwm;
  1528  001FA0  C032  F024         	movff	_previousPwm,_duty_set
  1529  001FA4  C033  F025         	movff	_previousPwm+1,_duty_set+1
  1530  001FA8  6A26               	clrf	_duty_set+2,c
  1531  001FAA  6A27               	clrf	_duty_set+3,c
  1532  001FAC                     l4771:
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;motore.c: 207: }
  1536                           ;motore.c: 208: previousPwm = duty_set;
  1537  001FAC  C024  F032         	movff	_duty_set,_previousPwm
  1538  001FB0  C025  F033         	movff	_duty_set+1,_previousPwm+1
  1539  001FB4                     l4773:
  1540                           
  1541                           ;motore.c: 209: }
  1542                           ;motore.c: 210: previousTimeCounter1 = timeCounter;
  1543  001FB4  C080  F078         	movff	_timeCounter,_previousTimeCounter1	;volatile
  1544  001FB8  C081  F079         	movff	_timeCounter+1,_previousTimeCounter1+1	;volatile
  1545  001FBC  C082  F07A         	movff	_timeCounter+2,_previousTimeCounter1+2	;volatile
  1546  001FC0  C083  F07B         	movff	_timeCounter+3,_previousTimeCounter1+3	;volatile
  1547                           
  1548                           ;motore.c: 211: SetDCEPWM1(duty_set);
  1549  001FC4  C024  F01F         	movff	_duty_set,SetDCEPWM1@dutycycle
  1550  001FC8  C025  F020         	movff	_duty_set+1,SetDCEPWM1@dutycycle+1
  1551  001FCC  EC1D  F012         	call	_SetDCEPWM1	;wreg free
  1552  001FD0  0012               	return		;funcret
  1553  001FD2                     __end_of_rampe:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           tblptrh	equ	0xFF7
  1557                           tblptrl	equ	0xFF6
  1558                           tablat	equ	0xFF5
  1559                           postinc0	equ	0xFEE
  1560                           wreg	equ	0xFE8
  1561                           postdec1	equ	0xFE5
  1562                           fsr1l	equ	0xFE1
  1563                           status	equ	0xFD8
  1564                           
  1565 ;; *************** function _abs *****************
  1566 ;; Defined at:
  1567 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  a               2   30[COMRAM] int 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  2   30[COMRAM] int 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1581 ;;      Params:         2       0       0       0
  1582 ;;      Locals:         0       0       0       0
  1583 ;;      Temps:          2       0       0       0
  1584 ;;      Totals:         4       0       0       0
  1585 ;;Total ram usage:        4 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    2
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_rampe
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text3
  1596  0024D6                     __ptext3:
  1597                           	opt stack 0
  1598  0024D6                     _abs:
  1599                           	opt stack 27
  1600                           
  1601                           ;incstack = 0
  1602  0024D6  AE20               	btfss	abs@a+1,7,c
  1603  0024D8  D00D               	goto	l815
  1604  0024DA  C01F  F021         	movff	abs@a,??_abs
  1605  0024DE  C020  F022         	movff	abs@a+1,??_abs+1
  1606  0024E2  1E21               	comf	??_abs,f,c
  1607  0024E4  1E22               	comf	??_abs+1,f,c
  1608  0024E6  4A21               	infsnz	??_abs,f,c
  1609  0024E8  2A22               	incf	??_abs+1,f,c
  1610  0024EA  C021  F01F         	movff	??_abs,?_abs
  1611  0024EE  C022  F020         	movff	??_abs+1,?_abs+1
  1612  0024F2  0012               	return	
  1613  0024F4                     l815:
  1614  0024F4  C01F  F01F         	movff	abs@a,?_abs
  1615  0024F8  C020  F020         	movff	abs@a+1,?_abs+1
  1616  0024FC  0012               	return		;funcret
  1617  0024FE                     __end_of_abs:
  1618                           	opt stack 0
  1619                           tblptru	equ	0xFF8
  1620                           tblptrh	equ	0xFF7
  1621                           tblptrl	equ	0xFF6
  1622                           tablat	equ	0xFF5
  1623                           postinc0	equ	0xFEE
  1624                           wreg	equ	0xFE8
  1625                           postdec1	equ	0xFE5
  1626                           fsr1l	equ	0xFE1
  1627                           status	equ	0xFD8
  1628                           
  1629 ;; *************** function ___lwdiv *****************
  1630 ;; Defined at:
  1631 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  dividend        2   30[COMRAM] unsigned int 
  1634 ;;  divisor         2   32[COMRAM] unsigned int 
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  quotient        2    1[BANK0 ] unsigned int 
  1637 ;;  counter         1    0[BANK0 ] unsigned char 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  2   30[COMRAM] unsigned int 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2, status,0
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1647 ;;      Params:         4       0       0       0
  1648 ;;      Locals:         0       3       0       0
  1649 ;;      Temps:          0       0       0       0
  1650 ;;      Totals:         4       3       0       0
  1651 ;;Total ram usage:        7 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    2
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_rampe
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text4
  1662  002300                     __ptext4:
  1663                           	opt stack 0
  1664  002300                     ___lwdiv:
  1665                           	opt stack 27
  1666                           
  1667                           ;incstack = 0
  1668  002300  0E00               	movlw	0
  1669  002302  0100               	movlb	0	; () banked
  1670  002304  6FAD               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1671  002306  0E00               	movlw	0
  1672  002308  6FAC               	movwf	___lwdiv@quotient& (0+255),b
  1673                           
  1674                           ; BSR set to: 0
  1675  00230A  5021               	movf	___lwdiv@divisor,w,c
  1676  00230C  1022               	iorwf	___lwdiv@divisor+1,w,c
  1677  00230E  B4D8               	btfsc	status,2,c
  1678  002310  D021               	goto	l1172
  1679                           
  1680                           ; BSR set to: 0
  1681  002312  0E01               	movlw	1
  1682  002314  0100               	movlb	0	; () banked
  1683  002316  6FAB               	movwf	___lwdiv@counter& (0+255),b
  1684  002318  D005               	goto	l4625
  1685  00231A                     l4623:
  1686                           
  1687                           ; BSR set to: 0
  1688  00231A  90D8               	bcf	status,0,c
  1689  00231C  3621               	rlcf	___lwdiv@divisor,f,c
  1690  00231E  3622               	rlcf	___lwdiv@divisor+1,f,c
  1691  002320  0100               	movlb	0	; () banked
  1692  002322  2BAB               	incf	___lwdiv@counter& (0+255),f,b
  1693  002324                     l4625:
  1694                           
  1695                           ; BSR set to: 0
  1696  002324  AE22               	btfss	___lwdiv@divisor+1,7,c
  1697  002326  D7F9               	goto	l4623
  1698  002328                     l4627:
  1699                           
  1700                           ; BSR set to: 0
  1701  002328  0100               	movlb	0	; () banked
  1702  00232A  90D8               	bcf	status,0,c
  1703  00232C  37AC               	rlcf	___lwdiv@quotient& (0+255),f,b
  1704  00232E  37AD               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1705                           
  1706                           ; BSR set to: 0
  1707  002330  5021               	movf	___lwdiv@divisor,w,c
  1708  002332  5C1F               	subwf	___lwdiv@dividend,w,c
  1709  002334  5022               	movf	___lwdiv@divisor+1,w,c
  1710  002336  5820               	subwfb	___lwdiv@dividend+1,w,c
  1711  002338  A0D8               	btfss	status,0,c
  1712  00233A  D006               	goto	l4635
  1713                           
  1714                           ; BSR set to: 0
  1715  00233C  5021               	movf	___lwdiv@divisor,w,c
  1716  00233E  5E1F               	subwf	___lwdiv@dividend,f,c
  1717  002340  5022               	movf	___lwdiv@divisor+1,w,c
  1718  002342  5A20               	subwfb	___lwdiv@dividend+1,f,c
  1719                           
  1720                           ; BSR set to: 0
  1721  002344  0100               	movlb	0	; () banked
  1722  002346  81AC               	bsf	___lwdiv@quotient& (0+255),0,b
  1723  002348                     l4635:
  1724                           
  1725                           ; BSR set to: 0
  1726  002348  90D8               	bcf	status,0,c
  1727  00234A  3222               	rrcf	___lwdiv@divisor+1,f,c
  1728  00234C  3221               	rrcf	___lwdiv@divisor,f,c
  1729                           
  1730                           ; BSR set to: 0
  1731  00234E  0100               	movlb	0	; () banked
  1732  002350  2FAB               	decfsz	___lwdiv@counter& (0+255),f,b
  1733  002352  D7EA               	goto	l4627
  1734  002354                     l1172:
  1735                           
  1736                           ; BSR set to: 0
  1737  002354  C0AC  F01F         	movff	___lwdiv@quotient,?___lwdiv
  1738  002358  C0AD  F020         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1739                           
  1740                           ; BSR set to: 0
  1741  00235C  0012               	return		;funcret
  1742  00235E                     __end_of___lwdiv:
  1743                           	opt stack 0
  1744                           tblptru	equ	0xFF8
  1745                           tblptrh	equ	0xFF7
  1746                           tblptrl	equ	0xFF6
  1747                           tablat	equ	0xFF5
  1748                           postinc0	equ	0xFEE
  1749                           wreg	equ	0xFE8
  1750                           postdec1	equ	0xFE5
  1751                           fsr1l	equ	0xFE1
  1752                           status	equ	0xFD8
  1753                           
  1754 ;; *************** function _SetDCEPWM1 *****************
  1755 ;; Defined at:
  1756 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  dutycycle       2   30[COMRAM] unsigned int 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  DCycle          2    0[BANK0 ] struct PWMDC
  1761 ;; Return value:  Size  Location     Type
  1762 ;;		None               void
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1770 ;;      Params:         2       0       0       0
  1771 ;;      Locals:         0       2       0       0
  1772 ;;      Temps:          2       0       0       0
  1773 ;;      Totals:         4       2       0       0
  1774 ;;Total ram usage:        6 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    2
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_main
  1781 ;;		_rampe
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text5
  1786  00243A                     __ptext5:
  1787                           	opt stack 0
  1788  00243A                     _SetDCEPWM1:
  1789                           	opt stack 27
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;incstack = 0
  1793  00243A  C01F  F021         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  1794  00243E  C020  F022         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  1795  002442  0E06               	movlw	6
  1796  002444                     u5845:
  1797  002444  90D8               	bcf	status,0,c
  1798  002446  3621               	rlcf	??_SetDCEPWM1,f,c
  1799  002448  3622               	rlcf	??_SetDCEPWM1+1,f,c
  1800  00244A  2EE8               	decfsz	wreg,f,c
  1801  00244C  D7FB               	goto	u5845
  1802  00244E  C021  F0AB         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  1803  002452  C022  F0AC         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  1804  002456  C0AC  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  1805  00245A  C0AB  F021         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  1806  00245E  90D8               	bcf	status,0,c
  1807  002460  3221               	rrcf	??_SetDCEPWM1,f,c
  1808  002462  90D8               	bcf	status,0,c
  1809  002464  3221               	rrcf	??_SetDCEPWM1,f,c
  1810  002466  0E30               	movlw	48
  1811  002468  1621               	andwf	??_SetDCEPWM1,f,c
  1812  00246A  50BA               	movf	4026,w,c	;volatile
  1813  00246C  0BCF               	andlw	207
  1814  00246E  1021               	iorwf	??_SetDCEPWM1,w,c
  1815  002470  6EBA               	movwf	4026,c	;volatile
  1816  002472  0012               	return		;funcret
  1817  002474                     __end_of_SetDCEPWM1:
  1818                           	opt stack 0
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           postinc0	equ	0xFEE
  1824                           wreg	equ	0xFE8
  1825                           postdec1	equ	0xFE5
  1826                           fsr1l	equ	0xFE1
  1827                           status	equ	0xFD8
  1828                           
  1829 ;; *************** function _CANsendMessage *****************
  1830 ;; Defined at:
  1831 ;;		line 294 in file "CANlib.h"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  identifier      4    0[BANK0 ] unsigned long 
  1834 ;;  data            2    4[BANK0 ] PTR unsigned char 
  1835 ;;		 -> data_array_debug(8), data_array(8), 
  1836 ;;  dataLength      1    6[BANK0 ] unsigned char 
  1837 ;;  flags           1    7[BANK0 ] enum E16866
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  tamp            4    8[BANK0 ] unsigned long 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;		None               void
  1842 ;; Registers used:
  1843 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1849 ;;      Params:         0       8       0       0
  1850 ;;      Locals:         0       4       0       0
  1851 ;;      Temps:          4       0       0       0
  1852 ;;      Totals:         4      12       0       0
  1853 ;;Total ram usage:       16 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:    2
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;;		_rampe
  1861 ;;		_send_data
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	text6
  1866  000B84                     __ptext6:
  1867                           	opt stack 0
  1868  000B84                     _CANsendMessage:
  1869                           	opt stack 27
  1870                           
  1871                           ;CANlib.h: 296: unsigned long tamp;
  1872                           ;CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1873                           
  1874                           ;incstack = 0
  1875  000B84  010F               	movlb	15	; () banked
  1876  000B86  B740               	btfsc	64,3,b	;volatile
  1877  000B88  D13B               	goto	l365
  1878                           
  1879                           ; BSR set to: 15
  1880                           ;CANlib.h: 299: { TXB0DLC = dataLength;
  1881  000B8A  C0B1  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1882                           
  1883                           ;CANlib.h: 300: if (0b01000000 & flags)
  1884  000B8E  0100               	movlb	0	; () banked
  1885  000B90  ADB2               	btfss	CANsendMessage@flags& (0+255),6,b
  1886  000B92  D003               	goto	l366
  1887                           
  1888                           ; BSR set to: 0
  1889                           ;CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1890  000B94  010F               	movlb	15	; () banked
  1891  000B96  8D45               	bsf	69,6,b	;volatile
  1892  000B98  D002               	goto	l367
  1893  000B9A                     l366:
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;CANlib.h: 302: else
  1897                           ;CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1898  000B9A  010F               	movlb	15	; () banked
  1899  000B9C  9D45               	bcf	69,6,b	;volatile
  1900  000B9E                     l367:
  1901                           
  1902                           ; BSR set to: 15
  1903                           ;CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1904  000B9E  0100               	movlb	0	; () banked
  1905  000BA0  A7B2               	btfss	CANsendMessage@flags& (0+255),3,b
  1906  000BA2  D077               	goto	l368
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;CANlib.h: 306: {
  1910                           ;CANlib.h: 308: tamp = identifier & 0x000000FF;
  1911  000BA4  0100               	movlb	0	; () banked
  1912  000BA6  51AB               	movf	CANsendMessage@identifier& (0+255),w,b
  1913  000BA8  0100               	movlb	0	; () banked
  1914  000BAA  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  1915  000BAC  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1916  000BAE  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1917  000BB0  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1921  000BB2  C0B3  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1925  000BB6  0E00               	movlw	0
  1926  000BB8  0100               	movlb	0	; () banked
  1927  000BBA  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  1928  000BBC  0100               	movlb	0	; () banked
  1929  000BBE  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  1930  000BC0  0EFF               	movlw	255
  1931  000BC2  0100               	movlb	0	; () banked
  1932  000BC4  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1933  000BC6  0100               	movlb	0	; () banked
  1934  000BC8  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1935  000BCA  0E00               	movlw	0
  1936  000BCC  0100               	movlb	0	; () banked
  1937  000BCE  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1938  000BD0  0100               	movlb	0	; () banked
  1939  000BD2  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1940  000BD4  0E00               	movlw	0
  1941  000BD6  0100               	movlb	0	; () banked
  1942  000BD8  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1943  000BDA  0100               	movlb	0	; () banked
  1944  000BDC  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;CANlib.h: 312: tamp = tamp >> 8;
  1948  000BDE  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  1949  000BE2  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1950  000BE6  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1951  000BEA  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1952  000BEE  C020  F01F         	movff	??_CANsendMessage+1,??_CANsendMessage
  1953  000BF2  C021  F020         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1954  000BF6  C022  F021         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1955  000BFA  6A22               	clrf	??_CANsendMessage+3,c
  1956  000BFC  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  1957  000C00  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1958  000C04  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1959  000C08  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1963  000C0C  C0B3  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;CANlib.h: 315: TXB0SIDL = 0x00;
  1967  000C10  0E00               	movlw	0
  1968  000C12  010F               	movlb	15	; () banked
  1969  000C14  6F42               	movwf	66,b	;volatile
  1970                           
  1971                           ; BSR set to: 15
  1972                           ;CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1973  000C16  010F               	movlb	15	; () banked
  1974  000C18  8742               	bsf	66,3,b	;volatile
  1975                           
  1976                           ; BSR set to: 15
  1977                           ;CANlib.h: 318: if (identifier & 0x00010000)
  1978  000C1A  0100               	movlb	0	; () banked
  1979  000C1C  A1AD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1980  000C1E  D002               	goto	l369
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1984  000C20  010F               	movlb	15	; () banked
  1985  000C22  8142               	bsf	66,0,b	;volatile
  1986  000C24                     l369:
  1987                           
  1988                           ;CANlib.h: 320: if (identifier & 0x00020000)
  1989  000C24  0100               	movlb	0	; () banked
  1990  000C26  A3AD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1991  000C28  D002               	goto	l370
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1995  000C2A  010F               	movlb	15	; () banked
  1996  000C2C  8342               	bsf	66,1,b	;volatile
  1997  000C2E                     l370:
  1998                           
  1999                           ;CANlib.h: 322: if (identifier & 0x00040000)
  2000  000C2E  0100               	movlb	0	; () banked
  2001  000C30  A5AD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2002  000C32  D002               	goto	l371
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  2006  000C34  010F               	movlb	15	; () banked
  2007  000C36  8B42               	bsf	66,5,b	;volatile
  2008  000C38                     l371:
  2009                           
  2010                           ;CANlib.h: 324: if (identifier & 0x00080000)
  2011  000C38  0100               	movlb	0	; () banked
  2012  000C3A  A7AD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2013  000C3C  D002               	goto	l372
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  2017  000C3E  010F               	movlb	15	; () banked
  2018  000C40  8D42               	bsf	66,6,b	;volatile
  2019  000C42                     l372:
  2020                           
  2021                           ;CANlib.h: 326: if (identifier & 0x00100000)
  2022  000C42  0100               	movlb	0	; () banked
  2023  000C44  A9AD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2024  000C46  D002               	goto	l4409
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  2028  000C48  010F               	movlb	15	; () banked
  2029  000C4A  8F42               	bsf	66,7,b	;volatile
  2030  000C4C                     l4409:
  2031                           
  2032                           ;CANlib.h: 329: tamp = (identifier >> 21);
  2033  000C4C  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  2034  000C50  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2035  000C54  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2036  000C58  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2037  000C5C  0E16               	movlw	22
  2038  000C5E  D005               	goto	u5520
  2039  000C60                     u5525:
  2040  000C60  90D8               	bcf	status,0,c
  2041  000C62  3222               	rrcf	??_CANsendMessage+3,f,c
  2042  000C64  3221               	rrcf	??_CANsendMessage+2,f,c
  2043  000C66  3220               	rrcf	??_CANsendMessage+1,f,c
  2044  000C68  321F               	rrcf	??_CANsendMessage,f,c
  2045  000C6A                     u5520:
  2046  000C6A  2EE8               	decfsz	wreg,f,c
  2047  000C6C  D7F9               	goto	u5525
  2048  000C6E  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2049  000C72  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2050  000C76  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2051  000C7A  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2052                           
  2053                           ;CANlib.h: 330: tamp = tamp & 0x000000FF;
  2054  000C7E  0100               	movlb	0	; () banked
  2055  000C80  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  2056  000C82  0100               	movlb	0	; () banked
  2057  000C84  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2058  000C86  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2059  000C88  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2060  000C8A  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  2064  000C8C  C0B3  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  2065                           
  2066                           ;CANlib.h: 332: }
  2067  000C90  D057               	goto	l4429
  2068  000C92                     l368:
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;CANlib.h: 334: else
  2072                           ;CANlib.h: 336: {
  2073                           ;CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  2074  000C92  010F               	movlb	15	; () banked
  2075  000C94  9742               	bcf	66,3,b	;volatile
  2076                           
  2077                           ; BSR set to: 15
  2078                           ;CANlib.h: 339: tamp = (identifier >> 3);
  2079  000C96  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  2080  000C9A  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2081  000C9E  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2082  000CA2  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2083  000CA6  0E04               	movlw	4
  2084  000CA8  D005               	goto	u5530
  2085  000CAA                     u5535:
  2086  000CAA  90D8               	bcf	status,0,c
  2087  000CAC  3222               	rrcf	??_CANsendMessage+3,f,c
  2088  000CAE  3221               	rrcf	??_CANsendMessage+2,f,c
  2089  000CB0  3220               	rrcf	??_CANsendMessage+1,f,c
  2090  000CB2  321F               	rrcf	??_CANsendMessage,f,c
  2091  000CB4                     u5530:
  2092  000CB4  2EE8               	decfsz	wreg,f,c
  2093  000CB6  D7F9               	goto	u5535
  2094  000CB8  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2095  000CBC  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2096  000CC0  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2097  000CC4  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2098                           
  2099                           ; BSR set to: 15
  2100                           ;CANlib.h: 340: tamp = tamp & 0x000000FF;
  2101  000CC8  0100               	movlb	0	; () banked
  2102  000CCA  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  2103  000CCC  0100               	movlb	0	; () banked
  2104  000CCE  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2105  000CD0  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2106  000CD2  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2107  000CD4  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  2111  000CD6  C0B3  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;CANlib.h: 343: tamp = identifier & 0x00000007;
  2115  000CDA  0E07               	movlw	7
  2116  000CDC  0100               	movlb	0	; () banked
  2117  000CDE  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  2118  000CE0  0100               	movlb	0	; () banked
  2119  000CE2  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2120  000CE4  0E00               	movlw	0
  2121  000CE6  0100               	movlb	0	; () banked
  2122  000CE8  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2123  000CEA  0100               	movlb	0	; () banked
  2124  000CEC  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2125  000CEE  0E00               	movlw	0
  2126  000CF0  0100               	movlb	0	; () banked
  2127  000CF2  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2128  000CF4  0100               	movlb	0	; () banked
  2129  000CF6  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2130  000CF8  0E00               	movlw	0
  2131  000CFA  0100               	movlb	0	; () banked
  2132  000CFC  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2133  000CFE  0100               	movlb	0	; () banked
  2134  000D00  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;CANlib.h: 344: tamp = tamp << 5;
  2138  000D02  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  2139  000D06  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2140  000D0A  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2141  000D0E  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2142  000D12  0E05               	movlw	5
  2143  000D14                     u5545:
  2144  000D14  90D8               	bcf	status,0,c
  2145  000D16  361F               	rlcf	??_CANsendMessage,f,c
  2146  000D18  3620               	rlcf	??_CANsendMessage+1,f,c
  2147  000D1A  3621               	rlcf	??_CANsendMessage+2,f,c
  2148  000D1C  3622               	rlcf	??_CANsendMessage+3,f,c
  2149  000D1E  2EE8               	decfsz	wreg,f,c
  2150  000D20  D7F9               	goto	u5545
  2151  000D22  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2152  000D26  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2153  000D2A  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2154  000D2E  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  2158  000D32  010F               	movlb	15	; () banked
  2159  000D34  5142               	movf	66,w,b	;volatile
  2160  000D36  0B1F               	andlw	31
  2161  000D38  010F               	movlb	15	; () banked
  2162  000D3A  6F42               	movwf	66,b	;volatile
  2163                           
  2164                           ; BSR set to: 15
  2165                           ;CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  2166  000D3C  C0B3  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  2167  000D40                     l4429:
  2168                           
  2169                           ;CANlib.h: 347: }
  2170                           ;CANlib.h: 349: if (0b00000001 & flags)
  2171  000D40  0100               	movlb	0	; () banked
  2172  000D42  A1B2               	btfss	CANsendMessage@flags& (0+255),0,b
  2173  000D44  D003               	goto	l375
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  2177  000D46  010F               	movlb	15	; () banked
  2178  000D48  8140               	bsf	64,0,b	;volatile
  2179  000D4A  D002               	goto	l376
  2180  000D4C                     l375:
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;CANlib.h: 351: else
  2184                           ;CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  2185  000D4C  010F               	movlb	15	; () banked
  2186  000D4E  9140               	bcf	64,0,b	;volatile
  2187  000D50                     l376:
  2188                           
  2189                           ; BSR set to: 15
  2190                           ;CANlib.h: 353: if (0b00000010 & flags)
  2191  000D50  0100               	movlb	0	; () banked
  2192  000D52  A3B2               	btfss	CANsendMessage@flags& (0+255),1,b
  2193  000D54  D003               	goto	l377
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  2197  000D56  010F               	movlb	15	; () banked
  2198  000D58  8340               	bsf	64,1,b	;volatile
  2199  000D5A  D002               	goto	l4435
  2200  000D5C                     l377:
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;CANlib.h: 355: else
  2204                           ;CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  2205  000D5C  010F               	movlb	15	; () banked
  2206  000D5E  9340               	bcf	64,1,b	;volatile
  2207  000D60                     l4435:
  2208                           
  2209                           ; BSR set to: 15
  2210                           ;CANlib.h: 358: TXB0D0 = data[0];
  2211  000D60  C0AF  FFD9         	movff	CANsendMessage@data,fsr2l
  2212  000D64  C0B0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2213  000D68  50DF               	movf	indf2,w,c
  2214  000D6A  010F               	movlb	15	; () banked
  2215  000D6C  6F46               	movwf	70,b	;volatile
  2216                           
  2217                           ; BSR set to: 15
  2218                           ;CANlib.h: 359: TXB0D1 = data[1];
  2219  000D6E  0100               	movlb	0	; () banked
  2220  000D70  EE20 F001          	lfsr	2,1
  2221  000D74  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2222  000D76  26D9               	addwf	fsr2l,f,c
  2223  000D78  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2224  000D7A  22DA               	addwfc	fsr2h,f,c
  2225  000D7C  50DF               	movf	indf2,w,c
  2226  000D7E  010F               	movlb	15	; () banked
  2227  000D80  6F47               	movwf	71,b	;volatile
  2228                           
  2229                           ; BSR set to: 15
  2230                           ;CANlib.h: 360: TXB0D2 = data[2];
  2231  000D82  0100               	movlb	0	; () banked
  2232  000D84  EE20 F002          	lfsr	2,2
  2233  000D88  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2234  000D8A  26D9               	addwf	fsr2l,f,c
  2235  000D8C  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2236  000D8E  22DA               	addwfc	fsr2h,f,c
  2237  000D90  50DF               	movf	indf2,w,c
  2238  000D92  010F               	movlb	15	; () banked
  2239  000D94  6F48               	movwf	72,b	;volatile
  2240                           
  2241                           ; BSR set to: 15
  2242                           ;CANlib.h: 361: TXB0D3 = data[3];
  2243  000D96  0100               	movlb	0	; () banked
  2244  000D98  EE20 F003          	lfsr	2,3
  2245  000D9C  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2246  000D9E  26D9               	addwf	fsr2l,f,c
  2247  000DA0  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2248  000DA2  22DA               	addwfc	fsr2h,f,c
  2249  000DA4  50DF               	movf	indf2,w,c
  2250  000DA6  010F               	movlb	15	; () banked
  2251  000DA8  6F49               	movwf	73,b	;volatile
  2252                           
  2253                           ; BSR set to: 15
  2254                           ;CANlib.h: 362: TXB0D4 = data[4];
  2255  000DAA  0100               	movlb	0	; () banked
  2256  000DAC  EE20 F004          	lfsr	2,4
  2257  000DB0  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2258  000DB2  26D9               	addwf	fsr2l,f,c
  2259  000DB4  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2260  000DB6  22DA               	addwfc	fsr2h,f,c
  2261  000DB8  50DF               	movf	indf2,w,c
  2262  000DBA  010F               	movlb	15	; () banked
  2263  000DBC  6F4A               	movwf	74,b	;volatile
  2264                           
  2265                           ; BSR set to: 15
  2266                           ;CANlib.h: 363: TXB0D5 = data[5];
  2267  000DBE  0100               	movlb	0	; () banked
  2268  000DC0  EE20 F005          	lfsr	2,5
  2269  000DC4  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2270  000DC6  26D9               	addwf	fsr2l,f,c
  2271  000DC8  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2272  000DCA  22DA               	addwfc	fsr2h,f,c
  2273  000DCC  50DF               	movf	indf2,w,c
  2274  000DCE  010F               	movlb	15	; () banked
  2275  000DD0  6F4B               	movwf	75,b	;volatile
  2276                           
  2277                           ; BSR set to: 15
  2278                           ;CANlib.h: 364: TXB0D6 = data[6];
  2279  000DD2  0100               	movlb	0	; () banked
  2280  000DD4  EE20 F006          	lfsr	2,6
  2281  000DD8  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2282  000DDA  26D9               	addwf	fsr2l,f,c
  2283  000DDC  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2284  000DDE  22DA               	addwfc	fsr2h,f,c
  2285  000DE0  50DF               	movf	indf2,w,c
  2286  000DE2  010F               	movlb	15	; () banked
  2287  000DE4  6F4C               	movwf	76,b	;volatile
  2288                           
  2289                           ; BSR set to: 15
  2290                           ;CANlib.h: 365: TXB0D7 = data[7];
  2291  000DE6  0100               	movlb	0	; () banked
  2292  000DE8  EE20 F007          	lfsr	2,7
  2293  000DEC  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2294  000DEE  26D9               	addwf	fsr2l,f,c
  2295  000DF0  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2296  000DF2  22DA               	addwfc	fsr2h,f,c
  2297  000DF4  50DF               	movf	indf2,w,c
  2298  000DF6  010F               	movlb	15	; () banked
  2299  000DF8  6F4D               	movwf	77,b	;volatile
  2300                           
  2301                           ; BSR set to: 15
  2302                           ;CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  2303  000DFA  010F               	movlb	15	; () banked
  2304  000DFC  8740               	bsf	64,3,b	;volatile
  2305                           
  2306                           ; BSR set to: 15
  2307                           ;CANlib.h: 368: return;
  2308  000DFE  0012               	return	
  2309  000E00                     l365:
  2310                           
  2311                           ; BSR set to: 15
  2312                           ;CANlib.h: 369: }
  2313                           ;CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  2314  000E00  010F               	movlb	15	; () banked
  2315  000E02  B730               	btfsc	48,3,b	;volatile
  2316  000E04  D13B               	goto	l380
  2317                           
  2318                           ; BSR set to: 15
  2319                           ;CANlib.h: 374: { TXB1DLC = dataLength;
  2320  000E06  C0B1  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  2321                           
  2322                           ;CANlib.h: 376: if (0b01000000 & flags)
  2323  000E0A  0100               	movlb	0	; () banked
  2324  000E0C  ADB2               	btfss	CANsendMessage@flags& (0+255),6,b
  2325  000E0E  D003               	goto	l381
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  2329  000E10  010F               	movlb	15	; () banked
  2330  000E12  8D35               	bsf	53,6,b	;volatile
  2331  000E14  D002               	goto	l382
  2332  000E16                     l381:
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;CANlib.h: 378: else
  2336                           ;CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  2337  000E16  010F               	movlb	15	; () banked
  2338  000E18  9D35               	bcf	53,6,b	;volatile
  2339  000E1A                     l382:
  2340                           
  2341                           ; BSR set to: 15
  2342                           ;CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  2343  000E1A  0100               	movlb	0	; () banked
  2344  000E1C  A7B2               	btfss	CANsendMessage@flags& (0+255),3,b
  2345  000E1E  D077               	goto	l383
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;CANlib.h: 382: {
  2349                           ;CANlib.h: 383: tamp = identifier & 0x000000FF;
  2350  000E20  0100               	movlb	0	; () banked
  2351  000E22  51AB               	movf	CANsendMessage@identifier& (0+255),w,b
  2352  000E24  0100               	movlb	0	; () banked
  2353  000E26  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2354  000E28  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2355  000E2A  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2356  000E2C  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  2360  000E2E  C0B3  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;CANlib.h: 386: tamp = identifier & 0x0000FF00;
  2364  000E32  0E00               	movlw	0
  2365  000E34  0100               	movlb	0	; () banked
  2366  000E36  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  2367  000E38  0100               	movlb	0	; () banked
  2368  000E3A  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2369  000E3C  0EFF               	movlw	255
  2370  000E3E  0100               	movlb	0	; () banked
  2371  000E40  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2372  000E42  0100               	movlb	0	; () banked
  2373  000E44  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2374  000E46  0E00               	movlw	0
  2375  000E48  0100               	movlb	0	; () banked
  2376  000E4A  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2377  000E4C  0100               	movlb	0	; () banked
  2378  000E4E  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2379  000E50  0E00               	movlw	0
  2380  000E52  0100               	movlb	0	; () banked
  2381  000E54  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2382  000E56  0100               	movlb	0	; () banked
  2383  000E58  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;CANlib.h: 387: tamp = tamp >> 8;
  2387  000E5A  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  2388  000E5E  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2389  000E62  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2390  000E66  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2391  000E6A  C020  F01F         	movff	??_CANsendMessage+1,??_CANsendMessage
  2392  000E6E  C021  F020         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2393  000E72  C022  F021         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2394  000E76  6A22               	clrf	??_CANsendMessage+3,c
  2395  000E78  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2396  000E7C  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2397  000E80  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2398  000E84  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2399                           
  2400                           ; BSR set to: 0
  2401                           ;CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  2402  000E88  C0B3  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;CANlib.h: 390: TXB1SIDL = 0x00;
  2406  000E8C  0E00               	movlw	0
  2407  000E8E  010F               	movlb	15	; () banked
  2408  000E90  6F32               	movwf	50,b	;volatile
  2409                           
  2410                           ; BSR set to: 15
  2411                           ;CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2412  000E92  010F               	movlb	15	; () banked
  2413  000E94  8732               	bsf	50,3,b	;volatile
  2414                           
  2415                           ; BSR set to: 15
  2416                           ;CANlib.h: 393: if (identifier & 0x00010000)
  2417  000E96  0100               	movlb	0	; () banked
  2418  000E98  A1AD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2419  000E9A  D002               	goto	l384
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2423  000E9C  010F               	movlb	15	; () banked
  2424  000E9E  8132               	bsf	50,0,b	;volatile
  2425  000EA0                     l384:
  2426                           
  2427                           ;CANlib.h: 395: if (identifier & 0x00020000)
  2428  000EA0  0100               	movlb	0	; () banked
  2429  000EA2  A3AD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2430  000EA4  D002               	goto	l385
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2434  000EA6  010F               	movlb	15	; () banked
  2435  000EA8  8332               	bsf	50,1,b	;volatile
  2436  000EAA                     l385:
  2437                           
  2438                           ;CANlib.h: 397: if (identifier & 0x00040000)
  2439  000EAA  0100               	movlb	0	; () banked
  2440  000EAC  A5AD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2441  000EAE  D002               	goto	l386
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2445  000EB0  010F               	movlb	15	; () banked
  2446  000EB2  8B32               	bsf	50,5,b	;volatile
  2447  000EB4                     l386:
  2448                           
  2449                           ;CANlib.h: 399: if (identifier & 0x00080000)
  2450  000EB4  0100               	movlb	0	; () banked
  2451  000EB6  A7AD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2452  000EB8  D002               	goto	l387
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2456  000EBA  010F               	movlb	15	; () banked
  2457  000EBC  8D32               	bsf	50,6,b	;volatile
  2458  000EBE                     l387:
  2459                           
  2460                           ;CANlib.h: 401: if (identifier & 0x00100000)
  2461  000EBE  0100               	movlb	0	; () banked
  2462  000EC0  A9AD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2463  000EC2  D002               	goto	l4485
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2467  000EC4  010F               	movlb	15	; () banked
  2468  000EC6  8F32               	bsf	50,7,b	;volatile
  2469  000EC8                     l4485:
  2470                           
  2471                           ;CANlib.h: 404: tamp = (identifier >> 21);
  2472  000EC8  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  2473  000ECC  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2474  000ED0  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2475  000ED4  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2476  000ED8  0E16               	movlw	22
  2477  000EDA  D005               	goto	u5650
  2478  000EDC                     u5655:
  2479  000EDC  90D8               	bcf	status,0,c
  2480  000EDE  3222               	rrcf	??_CANsendMessage+3,f,c
  2481  000EE0  3221               	rrcf	??_CANsendMessage+2,f,c
  2482  000EE2  3220               	rrcf	??_CANsendMessage+1,f,c
  2483  000EE4  321F               	rrcf	??_CANsendMessage,f,c
  2484  000EE6                     u5650:
  2485  000EE6  2EE8               	decfsz	wreg,f,c
  2486  000EE8  D7F9               	goto	u5655
  2487  000EEA  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2488  000EEE  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2489  000EF2  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2490  000EF6  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2491                           
  2492                           ;CANlib.h: 405: tamp = tamp & 0x000000FF;
  2493  000EFA  0100               	movlb	0	; () banked
  2494  000EFC  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  2495  000EFE  0100               	movlb	0	; () banked
  2496  000F00  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2497  000F02  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2498  000F04  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2499  000F06  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2500                           
  2501                           ; BSR set to: 0
  2502                           ;CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2503  000F08  C0B3  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2504                           
  2505                           ;CANlib.h: 407: }
  2506  000F0C  D057               	goto	l4505
  2507  000F0E                     l383:
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;CANlib.h: 409: else
  2511                           ;CANlib.h: 411: {
  2512                           ;CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2513  000F0E  010F               	movlb	15	; () banked
  2514  000F10  9732               	bcf	50,3,b	;volatile
  2515                           
  2516                           ; BSR set to: 15
  2517                           ;CANlib.h: 414: tamp = (identifier >> 3);
  2518  000F12  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  2519  000F16  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2520  000F1A  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2521  000F1E  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2522  000F22  0E04               	movlw	4
  2523  000F24  D005               	goto	u5660
  2524  000F26                     u5665:
  2525  000F26  90D8               	bcf	status,0,c
  2526  000F28  3222               	rrcf	??_CANsendMessage+3,f,c
  2527  000F2A  3221               	rrcf	??_CANsendMessage+2,f,c
  2528  000F2C  3220               	rrcf	??_CANsendMessage+1,f,c
  2529  000F2E  321F               	rrcf	??_CANsendMessage,f,c
  2530  000F30                     u5660:
  2531  000F30  2EE8               	decfsz	wreg,f,c
  2532  000F32  D7F9               	goto	u5665
  2533  000F34  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2534  000F38  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2535  000F3C  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2536  000F40  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2537                           
  2538                           ; BSR set to: 15
  2539                           ;CANlib.h: 415: tamp = tamp & 0x000000FF;
  2540  000F44  0100               	movlb	0	; () banked
  2541  000F46  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  2542  000F48  0100               	movlb	0	; () banked
  2543  000F4A  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2544  000F4C  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2545  000F4E  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2546  000F50  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2550  000F52  C0B3  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;CANlib.h: 418: tamp = identifier & 0x00000007;
  2554  000F56  0E07               	movlw	7
  2555  000F58  0100               	movlb	0	; () banked
  2556  000F5A  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  2557  000F5C  0100               	movlb	0	; () banked
  2558  000F5E  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2559  000F60  0E00               	movlw	0
  2560  000F62  0100               	movlb	0	; () banked
  2561  000F64  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2562  000F66  0100               	movlb	0	; () banked
  2563  000F68  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2564  000F6A  0E00               	movlw	0
  2565  000F6C  0100               	movlb	0	; () banked
  2566  000F6E  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2567  000F70  0100               	movlb	0	; () banked
  2568  000F72  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2569  000F74  0E00               	movlw	0
  2570  000F76  0100               	movlb	0	; () banked
  2571  000F78  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2572  000F7A  0100               	movlb	0	; () banked
  2573  000F7C  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;CANlib.h: 419: tamp = tamp << 5;
  2577  000F7E  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  2578  000F82  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2579  000F86  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2580  000F8A  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2581  000F8E  0E05               	movlw	5
  2582  000F90                     u5675:
  2583  000F90  90D8               	bcf	status,0,c
  2584  000F92  361F               	rlcf	??_CANsendMessage,f,c
  2585  000F94  3620               	rlcf	??_CANsendMessage+1,f,c
  2586  000F96  3621               	rlcf	??_CANsendMessage+2,f,c
  2587  000F98  3622               	rlcf	??_CANsendMessage+3,f,c
  2588  000F9A  2EE8               	decfsz	wreg,f,c
  2589  000F9C  D7F9               	goto	u5675
  2590  000F9E  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2591  000FA2  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2592  000FA6  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2593  000FAA  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2594                           
  2595                           ; BSR set to: 0
  2596                           ;CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2597  000FAE  010F               	movlb	15	; () banked
  2598  000FB0  5132               	movf	50,w,b	;volatile
  2599  000FB2  0B1F               	andlw	31
  2600  000FB4  010F               	movlb	15	; () banked
  2601  000FB6  6F32               	movwf	50,b	;volatile
  2602                           
  2603                           ; BSR set to: 15
  2604                           ;CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2605  000FB8  C0B3  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2606  000FBC                     l4505:
  2607                           
  2608                           ;CANlib.h: 422: }
  2609                           ;CANlib.h: 424: if (0b00000001 & flags)
  2610  000FBC  0100               	movlb	0	; () banked
  2611  000FBE  A1B2               	btfss	CANsendMessage@flags& (0+255),0,b
  2612  000FC0  D003               	goto	l390
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2616  000FC2  010F               	movlb	15	; () banked
  2617  000FC4  8130               	bsf	48,0,b	;volatile
  2618  000FC6  D002               	goto	l391
  2619  000FC8                     l390:
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;CANlib.h: 426: else
  2623                           ;CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2624  000FC8  010F               	movlb	15	; () banked
  2625  000FCA  9130               	bcf	48,0,b	;volatile
  2626  000FCC                     l391:
  2627                           
  2628                           ; BSR set to: 15
  2629                           ;CANlib.h: 428: if (0b00000010 & flags)
  2630  000FCC  0100               	movlb	0	; () banked
  2631  000FCE  A3B2               	btfss	CANsendMessage@flags& (0+255),1,b
  2632  000FD0  D003               	goto	l392
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2636  000FD2  010F               	movlb	15	; () banked
  2637  000FD4  8330               	bsf	48,1,b	;volatile
  2638  000FD6  D002               	goto	l4511
  2639  000FD8                     l392:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;CANlib.h: 430: else
  2643                           ;CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2644  000FD8  010F               	movlb	15	; () banked
  2645  000FDA  9330               	bcf	48,1,b	;volatile
  2646  000FDC                     l4511:
  2647                           
  2648                           ; BSR set to: 15
  2649                           ;CANlib.h: 433: TXB1D0 = data[0];
  2650  000FDC  C0AF  FFD9         	movff	CANsendMessage@data,fsr2l
  2651  000FE0  C0B0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2652  000FE4  50DF               	movf	indf2,w,c
  2653  000FE6  010F               	movlb	15	; () banked
  2654  000FE8  6F36               	movwf	54,b	;volatile
  2655                           
  2656                           ; BSR set to: 15
  2657                           ;CANlib.h: 434: TXB1D1 = data[1];
  2658  000FEA  0100               	movlb	0	; () banked
  2659  000FEC  EE20 F001          	lfsr	2,1
  2660  000FF0  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2661  000FF2  26D9               	addwf	fsr2l,f,c
  2662  000FF4  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2663  000FF6  22DA               	addwfc	fsr2h,f,c
  2664  000FF8  50DF               	movf	indf2,w,c
  2665  000FFA  010F               	movlb	15	; () banked
  2666  000FFC  6F37               	movwf	55,b	;volatile
  2667                           
  2668                           ; BSR set to: 15
  2669                           ;CANlib.h: 435: TXB1D2 = data[2];
  2670  000FFE  0100               	movlb	0	; () banked
  2671  001000  EE20 F002          	lfsr	2,2
  2672  001004  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2673  001006  26D9               	addwf	fsr2l,f,c
  2674  001008  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2675  00100A  22DA               	addwfc	fsr2h,f,c
  2676  00100C  50DF               	movf	indf2,w,c
  2677  00100E  010F               	movlb	15	; () banked
  2678  001010  6F38               	movwf	56,b	;volatile
  2679                           
  2680                           ; BSR set to: 15
  2681                           ;CANlib.h: 436: TXB1D3 = data[3];
  2682  001012  0100               	movlb	0	; () banked
  2683  001014  EE20 F003          	lfsr	2,3
  2684  001018  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2685  00101A  26D9               	addwf	fsr2l,f,c
  2686  00101C  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2687  00101E  22DA               	addwfc	fsr2h,f,c
  2688  001020  50DF               	movf	indf2,w,c
  2689  001022  010F               	movlb	15	; () banked
  2690  001024  6F39               	movwf	57,b	;volatile
  2691                           
  2692                           ; BSR set to: 15
  2693                           ;CANlib.h: 437: TXB1D4 = data[4];
  2694  001026  0100               	movlb	0	; () banked
  2695  001028  EE20 F004          	lfsr	2,4
  2696  00102C  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2697  00102E  26D9               	addwf	fsr2l,f,c
  2698  001030  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2699  001032  22DA               	addwfc	fsr2h,f,c
  2700  001034  50DF               	movf	indf2,w,c
  2701  001036  010F               	movlb	15	; () banked
  2702  001038  6F3A               	movwf	58,b	;volatile
  2703                           
  2704                           ; BSR set to: 15
  2705                           ;CANlib.h: 438: TXB1D5 = data[5];
  2706  00103A  0100               	movlb	0	; () banked
  2707  00103C  EE20 F005          	lfsr	2,5
  2708  001040  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2709  001042  26D9               	addwf	fsr2l,f,c
  2710  001044  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2711  001046  22DA               	addwfc	fsr2h,f,c
  2712  001048  50DF               	movf	indf2,w,c
  2713  00104A  010F               	movlb	15	; () banked
  2714  00104C  6F3B               	movwf	59,b	;volatile
  2715                           
  2716                           ; BSR set to: 15
  2717                           ;CANlib.h: 439: TXB1D6 = data[6];
  2718  00104E  0100               	movlb	0	; () banked
  2719  001050  EE20 F006          	lfsr	2,6
  2720  001054  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2721  001056  26D9               	addwf	fsr2l,f,c
  2722  001058  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2723  00105A  22DA               	addwfc	fsr2h,f,c
  2724  00105C  50DF               	movf	indf2,w,c
  2725  00105E  010F               	movlb	15	; () banked
  2726  001060  6F3C               	movwf	60,b	;volatile
  2727                           
  2728                           ; BSR set to: 15
  2729                           ;CANlib.h: 440: TXB1D7 = data[7];
  2730  001062  0100               	movlb	0	; () banked
  2731  001064  EE20 F007          	lfsr	2,7
  2732  001068  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2733  00106A  26D9               	addwf	fsr2l,f,c
  2734  00106C  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2735  00106E  22DA               	addwfc	fsr2h,f,c
  2736  001070  50DF               	movf	indf2,w,c
  2737  001072  010F               	movlb	15	; () banked
  2738  001074  6F3D               	movwf	61,b	;volatile
  2739                           
  2740                           ; BSR set to: 15
  2741                           ;CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2742  001076  010F               	movlb	15	; () banked
  2743  001078  8730               	bsf	48,3,b	;volatile
  2744                           
  2745                           ; BSR set to: 15
  2746                           ;CANlib.h: 444: return;
  2747  00107A  0012               	return	
  2748  00107C                     l380:
  2749                           
  2750                           ; BSR set to: 15
  2751                           ;CANlib.h: 445: }
  2752                           ;CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2753  00107C  010F               	movlb	15	; () banked
  2754  00107E  B720               	btfsc	32,3,b	;volatile
  2755  001080  0012               	return	
  2756                           
  2757                           ; BSR set to: 15
  2758                           ;CANlib.h: 450: { TXB2DLC = dataLength;
  2759  001082  C0B1  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2760                           
  2761                           ;CANlib.h: 452: if (0b01000000 & flags)
  2762  001086  0100               	movlb	0	; () banked
  2763  001088  ADB2               	btfss	CANsendMessage@flags& (0+255),6,b
  2764  00108A  D003               	goto	l395
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2768  00108C  010F               	movlb	15	; () banked
  2769  00108E  8D25               	bsf	37,6,b	;volatile
  2770  001090  D002               	goto	l396
  2771  001092                     l395:
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;CANlib.h: 454: else
  2775                           ;CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2776  001092  010F               	movlb	15	; () banked
  2777  001094  9D25               	bcf	37,6,b	;volatile
  2778  001096                     l396:
  2779                           
  2780                           ; BSR set to: 15
  2781                           ;CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2782  001096  0100               	movlb	0	; () banked
  2783  001098  A7B2               	btfss	CANsendMessage@flags& (0+255),3,b
  2784  00109A  D077               	goto	l397
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;CANlib.h: 458: {
  2788                           ;CANlib.h: 459: tamp = identifier & 0x000000FF;
  2789  00109C  0100               	movlb	0	; () banked
  2790  00109E  51AB               	movf	CANsendMessage@identifier& (0+255),w,b
  2791  0010A0  0100               	movlb	0	; () banked
  2792  0010A2  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2793  0010A4  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2794  0010A6  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2795  0010A8  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2799  0010AA  C0B3  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2800                           
  2801                           ; BSR set to: 0
  2802                           ;CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2803  0010AE  0E00               	movlw	0
  2804  0010B0  0100               	movlb	0	; () banked
  2805  0010B2  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  2806  0010B4  0100               	movlb	0	; () banked
  2807  0010B6  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2808  0010B8  0EFF               	movlw	255
  2809  0010BA  0100               	movlb	0	; () banked
  2810  0010BC  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2811  0010BE  0100               	movlb	0	; () banked
  2812  0010C0  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2813  0010C2  0E00               	movlw	0
  2814  0010C4  0100               	movlb	0	; () banked
  2815  0010C6  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2816  0010C8  0100               	movlb	0	; () banked
  2817  0010CA  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2818  0010CC  0E00               	movlw	0
  2819  0010CE  0100               	movlb	0	; () banked
  2820  0010D0  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2821  0010D2  0100               	movlb	0	; () banked
  2822  0010D4  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;CANlib.h: 463: tamp = tamp >> 8;
  2826  0010D6  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  2827  0010DA  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2828  0010DE  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2829  0010E2  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2830  0010E6  C020  F01F         	movff	??_CANsendMessage+1,??_CANsendMessage
  2831  0010EA  C021  F020         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2832  0010EE  C022  F021         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2833  0010F2  6A22               	clrf	??_CANsendMessage+3,c
  2834  0010F4  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2835  0010F8  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2836  0010FC  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2837  001100  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2841  001104  C0B3  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;CANlib.h: 466: TXB2SIDL = 0x00;
  2845  001108  0E00               	movlw	0
  2846  00110A  010F               	movlb	15	; () banked
  2847  00110C  6F22               	movwf	34,b	;volatile
  2848                           
  2849                           ; BSR set to: 15
  2850                           ;CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2851  00110E  010F               	movlb	15	; () banked
  2852  001110  8722               	bsf	34,3,b	;volatile
  2853                           
  2854                           ; BSR set to: 15
  2855                           ;CANlib.h: 469: if (identifier & 0x00010000)
  2856  001112  0100               	movlb	0	; () banked
  2857  001114  A1AD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2858  001116  D002               	goto	l398
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2862  001118  010F               	movlb	15	; () banked
  2863  00111A  8122               	bsf	34,0,b	;volatile
  2864  00111C                     l398:
  2865                           
  2866                           ;CANlib.h: 471: if (identifier & 0x00020000)
  2867  00111C  0100               	movlb	0	; () banked
  2868  00111E  A3AD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2869  001120  D002               	goto	l399
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2873  001122  010F               	movlb	15	; () banked
  2874  001124  8322               	bsf	34,1,b	;volatile
  2875  001126                     l399:
  2876                           
  2877                           ;CANlib.h: 473: if (identifier & 0x00040000)
  2878  001126  0100               	movlb	0	; () banked
  2879  001128  A5AD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2880  00112A  D002               	goto	l400
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2884  00112C  010F               	movlb	15	; () banked
  2885  00112E  8B22               	bsf	34,5,b	;volatile
  2886  001130                     l400:
  2887                           
  2888                           ;CANlib.h: 475: if (identifier & 0x00080000)
  2889  001130  0100               	movlb	0	; () banked
  2890  001132  A7AD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2891  001134  D002               	goto	l401
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2895  001136  010F               	movlb	15	; () banked
  2896  001138  8D22               	bsf	34,6,b	;volatile
  2897  00113A                     l401:
  2898                           
  2899                           ;CANlib.h: 477: if (identifier & 0x00100000)
  2900  00113A  0100               	movlb	0	; () banked
  2901  00113C  A9AD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2902  00113E  D002               	goto	l4561
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2906  001140  010F               	movlb	15	; () banked
  2907  001142  8F22               	bsf	34,7,b	;volatile
  2908  001144                     l4561:
  2909                           
  2910                           ;CANlib.h: 480: tamp = (identifier >> 21);
  2911  001144  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  2912  001148  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2913  00114C  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2914  001150  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2915  001154  0E16               	movlw	22
  2916  001156  D005               	goto	u5780
  2917  001158                     u5785:
  2918  001158  90D8               	bcf	status,0,c
  2919  00115A  3222               	rrcf	??_CANsendMessage+3,f,c
  2920  00115C  3221               	rrcf	??_CANsendMessage+2,f,c
  2921  00115E  3220               	rrcf	??_CANsendMessage+1,f,c
  2922  001160  321F               	rrcf	??_CANsendMessage,f,c
  2923  001162                     u5780:
  2924  001162  2EE8               	decfsz	wreg,f,c
  2925  001164  D7F9               	goto	u5785
  2926  001166  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2927  00116A  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2928  00116E  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2929  001172  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2930                           
  2931                           ;CANlib.h: 481: tamp = tamp & 0x000000FF;
  2932  001176  0100               	movlb	0	; () banked
  2933  001178  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  2934  00117A  0100               	movlb	0	; () banked
  2935  00117C  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2936  00117E  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2937  001180  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2938  001182  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2942  001184  C0B3  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2943                           
  2944                           ;CANlib.h: 483: }
  2945  001188  D057               	goto	l4581
  2946  00118A                     l397:
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;CANlib.h: 485: else
  2950                           ;CANlib.h: 487: {
  2951                           ;CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2952  00118A  010F               	movlb	15	; () banked
  2953  00118C  9722               	bcf	34,3,b	;volatile
  2954                           
  2955                           ; BSR set to: 15
  2956                           ;CANlib.h: 490: tamp = (identifier >> 3);
  2957  00118E  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  2958  001192  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2959  001196  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2960  00119A  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2961  00119E  0E04               	movlw	4
  2962  0011A0  D005               	goto	u5790
  2963  0011A2                     u5795:
  2964  0011A2  90D8               	bcf	status,0,c
  2965  0011A4  3222               	rrcf	??_CANsendMessage+3,f,c
  2966  0011A6  3221               	rrcf	??_CANsendMessage+2,f,c
  2967  0011A8  3220               	rrcf	??_CANsendMessage+1,f,c
  2968  0011AA  321F               	rrcf	??_CANsendMessage,f,c
  2969  0011AC                     u5790:
  2970  0011AC  2EE8               	decfsz	wreg,f,c
  2971  0011AE  D7F9               	goto	u5795
  2972  0011B0  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2973  0011B4  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2974  0011B8  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2975  0011BC  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2976                           
  2977                           ; BSR set to: 15
  2978                           ;CANlib.h: 491: tamp = tamp & 0x000000FF;
  2979  0011C0  0100               	movlb	0	; () banked
  2980  0011C2  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  2981  0011C4  0100               	movlb	0	; () banked
  2982  0011C6  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2983  0011C8  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2984  0011CA  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2985  0011CC  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2989  0011CE  C0B3  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;CANlib.h: 494: tamp = identifier & 0x00000007;
  2993  0011D2  0E07               	movlw	7
  2994  0011D4  0100               	movlb	0	; () banked
  2995  0011D6  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  2996  0011D8  0100               	movlb	0	; () banked
  2997  0011DA  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2998  0011DC  0E00               	movlw	0
  2999  0011DE  0100               	movlb	0	; () banked
  3000  0011E0  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3001  0011E2  0100               	movlb	0	; () banked
  3002  0011E4  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3003  0011E6  0E00               	movlw	0
  3004  0011E8  0100               	movlb	0	; () banked
  3005  0011EA  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3006  0011EC  0100               	movlb	0	; () banked
  3007  0011EE  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3008  0011F0  0E00               	movlw	0
  3009  0011F2  0100               	movlb	0	; () banked
  3010  0011F4  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3011  0011F6  0100               	movlb	0	; () banked
  3012  0011F8  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;CANlib.h: 495: tamp = tamp << 5;
  3016  0011FA  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3017  0011FE  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3018  001202  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3019  001206  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3020  00120A  0E05               	movlw	5
  3021  00120C                     u5805:
  3022  00120C  90D8               	bcf	status,0,c
  3023  00120E  361F               	rlcf	??_CANsendMessage,f,c
  3024  001210  3620               	rlcf	??_CANsendMessage+1,f,c
  3025  001212  3621               	rlcf	??_CANsendMessage+2,f,c
  3026  001214  3622               	rlcf	??_CANsendMessage+3,f,c
  3027  001216  2EE8               	decfsz	wreg,f,c
  3028  001218  D7F9               	goto	u5805
  3029  00121A  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  3030  00121E  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3031  001222  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3032  001226  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  3036  00122A  010F               	movlb	15	; () banked
  3037  00122C  5122               	movf	34,w,b	;volatile
  3038  00122E  0B1F               	andlw	31
  3039  001230  010F               	movlb	15	; () banked
  3040  001232  6F22               	movwf	34,b	;volatile
  3041                           
  3042                           ; BSR set to: 15
  3043                           ;CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  3044  001234  C0B3  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  3045  001238                     l4581:
  3046                           
  3047                           ;CANlib.h: 498: }
  3048                           ;CANlib.h: 500: if (0b00000001 & flags)
  3049  001238  0100               	movlb	0	; () banked
  3050  00123A  A1B2               	btfss	CANsendMessage@flags& (0+255),0,b
  3051  00123C  D003               	goto	l404
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  3055  00123E  010F               	movlb	15	; () banked
  3056  001240  8120               	bsf	32,0,b	;volatile
  3057  001242  D002               	goto	l405
  3058  001244                     l404:
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;CANlib.h: 502: else
  3062                           ;CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  3063  001244  010F               	movlb	15	; () banked
  3064  001246  9120               	bcf	32,0,b	;volatile
  3065  001248                     l405:
  3066                           
  3067                           ; BSR set to: 15
  3068                           ;CANlib.h: 504: if (0b00000010 & flags)
  3069  001248  0100               	movlb	0	; () banked
  3070  00124A  A3B2               	btfss	CANsendMessage@flags& (0+255),1,b
  3071  00124C  D003               	goto	l406
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  3075  00124E  010F               	movlb	15	; () banked
  3076  001250  8320               	bsf	32,1,b	;volatile
  3077  001252  D002               	goto	l4587
  3078  001254                     l406:
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;CANlib.h: 506: else
  3082                           ;CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  3083  001254  010F               	movlb	15	; () banked
  3084  001256  9320               	bcf	32,1,b	;volatile
  3085  001258                     l4587:
  3086                           
  3087                           ; BSR set to: 15
  3088                           ;CANlib.h: 509: TXB2D0 = data[0];
  3089  001258  C0AF  FFD9         	movff	CANsendMessage@data,fsr2l
  3090  00125C  C0B0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3091  001260  50DF               	movf	indf2,w,c
  3092  001262  010F               	movlb	15	; () banked
  3093  001264  6F26               	movwf	38,b	;volatile
  3094                           
  3095                           ; BSR set to: 15
  3096                           ;CANlib.h: 510: TXB2D1 = data[1];
  3097  001266  0100               	movlb	0	; () banked
  3098  001268  EE20 F001          	lfsr	2,1
  3099  00126C  51AF               	movf	CANsendMessage@data& (0+255),w,b
  3100  00126E  26D9               	addwf	fsr2l,f,c
  3101  001270  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3102  001272  22DA               	addwfc	fsr2h,f,c
  3103  001274  50DF               	movf	indf2,w,c
  3104  001276  010F               	movlb	15	; () banked
  3105  001278  6F27               	movwf	39,b	;volatile
  3106                           
  3107                           ; BSR set to: 15
  3108                           ;CANlib.h: 511: TXB2D2 = data[2];
  3109  00127A  0100               	movlb	0	; () banked
  3110  00127C  EE20 F002          	lfsr	2,2
  3111  001280  51AF               	movf	CANsendMessage@data& (0+255),w,b
  3112  001282  26D9               	addwf	fsr2l,f,c
  3113  001284  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3114  001286  22DA               	addwfc	fsr2h,f,c
  3115  001288  50DF               	movf	indf2,w,c
  3116  00128A  010F               	movlb	15	; () banked
  3117  00128C  6F28               	movwf	40,b	;volatile
  3118                           
  3119                           ; BSR set to: 15
  3120                           ;CANlib.h: 512: TXB2D3 = data[3];
  3121  00128E  0100               	movlb	0	; () banked
  3122  001290  EE20 F003          	lfsr	2,3
  3123  001294  51AF               	movf	CANsendMessage@data& (0+255),w,b
  3124  001296  26D9               	addwf	fsr2l,f,c
  3125  001298  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3126  00129A  22DA               	addwfc	fsr2h,f,c
  3127  00129C  50DF               	movf	indf2,w,c
  3128  00129E  010F               	movlb	15	; () banked
  3129  0012A0  6F29               	movwf	41,b	;volatile
  3130                           
  3131                           ; BSR set to: 15
  3132                           ;CANlib.h: 513: TXB2D4 = data[4];
  3133  0012A2  0100               	movlb	0	; () banked
  3134  0012A4  EE20 F004          	lfsr	2,4
  3135  0012A8  51AF               	movf	CANsendMessage@data& (0+255),w,b
  3136  0012AA  26D9               	addwf	fsr2l,f,c
  3137  0012AC  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3138  0012AE  22DA               	addwfc	fsr2h,f,c
  3139  0012B0  50DF               	movf	indf2,w,c
  3140  0012B2  010F               	movlb	15	; () banked
  3141  0012B4  6F2A               	movwf	42,b	;volatile
  3142                           
  3143                           ; BSR set to: 15
  3144                           ;CANlib.h: 514: TXB2D5 = data[5];
  3145  0012B6  0100               	movlb	0	; () banked
  3146  0012B8  EE20 F005          	lfsr	2,5
  3147  0012BC  51AF               	movf	CANsendMessage@data& (0+255),w,b
  3148  0012BE  26D9               	addwf	fsr2l,f,c
  3149  0012C0  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3150  0012C2  22DA               	addwfc	fsr2h,f,c
  3151  0012C4  50DF               	movf	indf2,w,c
  3152  0012C6  010F               	movlb	15	; () banked
  3153  0012C8  6F2B               	movwf	43,b	;volatile
  3154                           
  3155                           ; BSR set to: 15
  3156                           ;CANlib.h: 515: TXB2D6 = data[6];
  3157  0012CA  0100               	movlb	0	; () banked
  3158  0012CC  EE20 F006          	lfsr	2,6
  3159  0012D0  51AF               	movf	CANsendMessage@data& (0+255),w,b
  3160  0012D2  26D9               	addwf	fsr2l,f,c
  3161  0012D4  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3162  0012D6  22DA               	addwfc	fsr2h,f,c
  3163  0012D8  50DF               	movf	indf2,w,c
  3164  0012DA  010F               	movlb	15	; () banked
  3165  0012DC  6F2C               	movwf	44,b	;volatile
  3166                           
  3167                           ; BSR set to: 15
  3168                           ;CANlib.h: 516: TXB2D7 = data[7];
  3169  0012DE  0100               	movlb	0	; () banked
  3170  0012E0  EE20 F007          	lfsr	2,7
  3171  0012E4  51AF               	movf	CANsendMessage@data& (0+255),w,b
  3172  0012E6  26D9               	addwf	fsr2l,f,c
  3173  0012E8  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3174  0012EA  22DA               	addwfc	fsr2h,f,c
  3175  0012EC  50DF               	movf	indf2,w,c
  3176  0012EE  010F               	movlb	15	; () banked
  3177  0012F0  6F2D               	movwf	45,b	;volatile
  3178                           
  3179                           ; BSR set to: 15
  3180                           ;CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  3181  0012F2  010F               	movlb	15	; () banked
  3182  0012F4  8720               	bsf	32,3,b	;volatile
  3183                           
  3184                           ; BSR set to: 15
  3185                           ;CANlib.h: 520: return;
  3186  0012F6  0012               	return	
  3187  0012F8                     __end_of_CANsendMessage:
  3188                           	opt stack 0
  3189                           tblptru	equ	0xFF8
  3190                           tblptrh	equ	0xFF7
  3191                           tblptrl	equ	0xFF6
  3192                           tablat	equ	0xFF5
  3193                           postinc0	equ	0xFEE
  3194                           wreg	equ	0xFE8
  3195                           postdec1	equ	0xFE5
  3196                           fsr1l	equ	0xFE1
  3197                           indf2	equ	0xFDF
  3198                           fsr2h	equ	0xFDA
  3199                           fsr2l	equ	0xFD9
  3200                           status	equ	0xFD8
  3201                           
  3202 ;; *************** function _CANisTxReady *****************
  3203 ;; Defined at:
  3204 ;;		line 1154 in file "CANlib.h"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;		None
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;		None
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      unsigned char 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3218 ;;      Params:         0       0       0       0
  3219 ;;      Locals:         1       0       0       0
  3220 ;;      Temps:          0       0       0       0
  3221 ;;      Totals:         1       0       0       0
  3222 ;;Total ram usage:        1 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    2
  3225 ;; This function calls:
  3226 ;;		Nothing
  3227 ;; This function is called by:
  3228 ;;		_main
  3229 ;;		_rampe
  3230 ;;		_send_data
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text7
  3235  0024FE                     __ptext7:
  3236                           	opt stack 0
  3237  0024FE                     _CANisTxReady:
  3238                           	opt stack 27
  3239                           
  3240                           ;CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TXREQ)
      +                          ;
  3241                           
  3242                           ; BSR set to: 15
  3243                           ;incstack = 0
  3244  0024FE  0E01               	movlw	1
  3245  002500  6E1F               	movwf	_CANisTxReady$3000,c
  3246  002502  010F               	movlb	15	; () banked
  3247  002504  A740               	btfss	64,3,b	;volatile
  3248  002506  D008               	goto	l558
  3249                           
  3250                           ; BSR set to: 15
  3251  002508  010F               	movlb	15	; () banked
  3252  00250A  A730               	btfss	48,3,b	;volatile
  3253  00250C  D005               	goto	l558
  3254                           
  3255                           ; BSR set to: 15
  3256  00250E  010F               	movlb	15	; () banked
  3257  002510  A720               	btfss	32,3,b	;volatile
  3258  002512  D002               	goto	l558
  3259                           
  3260                           ; BSR set to: 15
  3261  002514  0E00               	movlw	0
  3262  002516  6E1F               	movwf	_CANisTxReady$3000,c
  3263  002518                     l558:
  3264                           
  3265                           ; BSR set to: 15
  3266  002518  501F               	movf	_CANisTxReady$3000,w,c
  3267  00251A  0012               	return	
  3268  00251C                     __end_of_CANisTxReady:
  3269                           	opt stack 0
  3270                           tblptru	equ	0xFF8
  3271                           tblptrh	equ	0xFF7
  3272                           tblptrl	equ	0xFF6
  3273                           tablat	equ	0xFF5
  3274                           postinc0	equ	0xFEE
  3275                           wreg	equ	0xFE8
  3276                           postdec1	equ	0xFE5
  3277                           fsr1l	equ	0xFE1
  3278                           indf2	equ	0xFDF
  3279                           fsr2h	equ	0xFDA
  3280                           fsr2l	equ	0xFD9
  3281                           status	equ	0xFD8
  3282                           
  3283 ;; *************** function _configurazione_iniziale *****************
  3284 ;; Defined at:
  3285 ;;		line 288 in file "motore.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;		None               void
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3299 ;;      Params:         0       0       0       0
  3300 ;;      Locals:         0       0       0       0
  3301 ;;      Temps:          0       0       0       0
  3302 ;;      Totals:         0       0       0       0
  3303 ;;Total ram usage:        0 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    4
  3306 ;; This function calls:
  3307 ;;		_CANInitialize
  3308 ;;		_SetOutputEPWM1
  3309 ;;		_delay_ms
  3310 ;; This function is called by:
  3311 ;;		_main
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text8
  3316  002252                     __ptext8:
  3317                           	opt stack 0
  3318  002252                     _configurazione_iniziale:
  3319                           	opt stack 26
  3320                           
  3321                           ;motore.c: 291: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3322                           
  3323                           ; BSR set to: 15
  3324                           ;incstack = 0
  3325  002252  0E06               	movlw	6
  3326  002254  0100               	movlb	0	; () banked
  3327  002256  6FB4               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3328  002258  0E05               	movlw	5
  3329  00225A  0100               	movlb	0	; () banked
  3330  00225C  6FB5               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3331  00225E  0E01               	movlw	1
  3332  002260  0100               	movlb	0	; () banked
  3333  002262  6FB6               	movwf	CANInitialize@SJW& (0+255),b
  3334  002264  0E03               	movlw	3
  3335  002266  0100               	movlb	0	; () banked
  3336  002268  6FB7               	movwf	CANInitialize@BRP& (0+255),b
  3337  00226A  0E9D               	movlw	157
  3338  00226C  0100               	movlb	0	; () banked
  3339  00226E  6FB8               	movwf	CANInitialize@flags& (0+255),b
  3340  002270  0E04               	movlw	4
  3341  002272  ECE9  F00F         	call	_CANInitialize
  3342                           
  3343                           ;motore.c: 292: RCONbits.IPEN = 1;
  3344  002276  8ED0               	bsf	4048,7,c	;volatile
  3345                           
  3346                           ;motore.c: 293: INTCONbits.INT0IF = 0;
  3347  002278  92F2               	bcf	intcon,1,c	;volatile
  3348                           
  3349                           ;motore.c: 294: PIR3bits.RXB1IF = 0;
  3350  00227A  92A4               	bcf	4004,1,c	;volatile
  3351                           
  3352                           ;motore.c: 295: PIR3bits.RXB0IF = 0;
  3353  00227C  90A4               	bcf	4004,0,c	;volatile
  3354                           
  3355                           ;motore.c: 297: IPR3bits.RXB1IP = 0;
  3356  00227E  92A5               	bcf	4005,1,c	;volatile
  3357                           
  3358                           ;motore.c: 298: IPR3bits.RXB0IP = 0;
  3359  002280  90A5               	bcf	4005,0,c	;volatile
  3360                           
  3361                           ;motore.c: 299: INTCONbits.GIEH = 1;
  3362  002282  8EF2               	bsf	intcon,7,c	;volatile
  3363                           
  3364                           ;motore.c: 300: INTCONbits.GIEL = 1;
  3365  002284  8CF2               	bsf	intcon,6,c	;volatile
  3366                           
  3367                           ;motore.c: 303: T3CON = 0x01;
  3368  002286  0E01               	movlw	1
  3369  002288  6EB1               	movwf	4017,c	;volatile
  3370                           
  3371                           ;motore.c: 304: PIR2bits.TMR3IF = 0;
  3372  00228A  92A1               	bcf	4001,1,c	;volatile
  3373                           
  3374                           ;motore.c: 305: IPR2bits.TMR3IP = 0;
  3375  00228C  92A2               	bcf	4002,1,c	;volatile
  3376                           
  3377                           ;motore.c: 306: TMR3H = 0x63;
  3378  00228E  0E63               	movlw	99
  3379  002290  6EB3               	movwf	4019,c	;volatile
  3380                           
  3381                           ;motore.c: 307: TMR3L = 0xC0;
  3382  002292  0EC0               	movlw	192
  3383  002294  6EB2               	movwf	4018,c	;volatile
  3384                           
  3385                           ;motore.c: 312: ADCON0bits.ADON = 1;
  3386  002296  80C2               	bsf	4034,0,c	;volatile
  3387                           
  3388                           ;motore.c: 313: ADCON0bits.CHS0 = 0;
  3389  002298  94C2               	bcf	4034,2,c	;volatile
  3390                           
  3391                           ;motore.c: 314: ADCON0bits.CHS1 = 0;
  3392  00229A  96C2               	bcf	4034,3,c	;volatile
  3393                           
  3394                           ;motore.c: 315: ADCON0bits.CHS2 = 0;
  3395  00229C  98C2               	bcf	4034,4,c	;volatile
  3396                           
  3397                           ;motore.c: 316: ADCON0bits.CHS3 = 0;
  3398  00229E  9AC2               	bcf	4034,5,c	;volatile
  3399                           
  3400                           ;motore.c: 317: ADCON1bits.PCFG0 = 0;
  3401  0022A0  90C1               	bcf	4033,0,c	;volatile
  3402                           
  3403                           ;motore.c: 318: ADCON1bits.PCFG1 = 1;
  3404  0022A2  82C1               	bsf	4033,1,c	;volatile
  3405                           
  3406                           ;motore.c: 319: ADCON1bits.PCFG2 = 1;
  3407  0022A4  84C1               	bsf	4033,2,c	;volatile
  3408                           
  3409                           ;motore.c: 320: ADCON1bits.PCFG3 = 1;
  3410  0022A6  86C1               	bsf	4033,3,c	;volatile
  3411                           
  3412                           ;motore.c: 321: ADCON1bits.VCFG0 = 0;
  3413  0022A8  98C1               	bcf	4033,4,c	;volatile
  3414                           
  3415                           ;motore.c: 322: ADCON1bits.VCFG1 = 0;
  3416  0022AA  9AC1               	bcf	4033,5,c	;volatile
  3417                           
  3418                           ;motore.c: 323: ADCON2bits.ADCS0 = 1;
  3419  0022AC  80C0               	bsf	4032,0,c	;volatile
  3420                           
  3421                           ;motore.c: 324: ADCON2bits.ADCS1 = 0;
  3422  0022AE  92C0               	bcf	4032,1,c	;volatile
  3423                           
  3424                           ;motore.c: 325: ADCON2bits.ADCS2 = 1;
  3425  0022B0  84C0               	bsf	4032,2,c	;volatile
  3426                           
  3427                           ;motore.c: 326: ADCON2bits.ACQT0 = 0;
  3428  0022B2  96C0               	bcf	4032,3,c	;volatile
  3429                           
  3430                           ;motore.c: 327: ADCON2bits.ACQT1 = 1;
  3431  0022B4  88C0               	bsf	4032,4,c	;volatile
  3432                           
  3433                           ;motore.c: 328: ADCON2bits.ACQT2 = 1;
  3434  0022B6  8AC0               	bsf	4032,5,c	;volatile
  3435                           
  3436                           ;motore.c: 329: ADCON2bits.ADFM = 0;
  3437  0022B8  9EC0               	bcf	4032,7,c	;volatile
  3438                           
  3439                           ;motore.c: 332: PIE3bits.RXB1IE = 1;
  3440  0022BA  82A3               	bsf	4003,1,c	;volatile
  3441                           
  3442                           ;motore.c: 333: PIE3bits.RXB0IE = 1;
  3443  0022BC  80A3               	bsf	4003,0,c	;volatile
  3444                           
  3445                           ;motore.c: 334: PIE2bits.TMR3IE = 1;
  3446  0022BE  82A0               	bsf	4000,1,c	;volatile
  3447                           
  3448                           ;motore.c: 336: LATA = 0x00;
  3449  0022C0  0E00               	movlw	0
  3450  0022C2  6E89               	movwf	3977,c	;volatile
  3451                           
  3452                           ;motore.c: 337: TRISA = 0b01111101;
  3453  0022C4  0E7D               	movlw	125
  3454  0022C6  6E92               	movwf	3986,c	;volatile
  3455                           
  3456                           ;motore.c: 339: LATB = 0x00;
  3457  0022C8  0E00               	movlw	0
  3458  0022CA  6E8A               	movwf	3978,c	;volatile
  3459                           
  3460                           ;motore.c: 340: TRISB = 0b11111011;
  3461  0022CC  0EFB               	movlw	251
  3462  0022CE  6E93               	movwf	3987,c	;volatile
  3463                           
  3464                           ;motore.c: 342: LATC = 0x00;
  3465  0022D0  0E00               	movlw	0
  3466  0022D2  6E8B               	movwf	3979,c	;volatile
  3467                           
  3468                           ;motore.c: 343: TRISC = 0x00;
  3469  0022D4  0E00               	movlw	0
  3470  0022D6  6E94               	movwf	3988,c	;volatile
  3471                           
  3472                           ;motore.c: 345: LATD = 0x00;
  3473  0022D8  0E00               	movlw	0
  3474  0022DA  6E8C               	movwf	3980,c	;volatile
  3475                           
  3476                           ;motore.c: 346: TRISD = 0x00;
  3477  0022DC  0E00               	movlw	0
  3478  0022DE  6E95               	movwf	3989,c	;volatile
  3479                           
  3480                           ;motore.c: 348: LATE = 0x00;
  3481  0022E0  0E00               	movlw	0
  3482  0022E2  6E8D               	movwf	3981,c	;volatile
  3483                           
  3484                           ;motore.c: 349: TRISE = 0xFF;
  3485  0022E4  6896               	setf	3990,c	;volatile
  3486                           
  3487                           ;motore.c: 350: delay_ms(2);
  3488  0022E6  0E00               	movlw	0
  3489  0022E8  0100               	movlb	0	; () banked
  3490  0022EA  6FAE               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3491  0022EC  0E02               	movlw	2
  3492  0022EE  6FAD               	movwf	delay_ms@value_ms& (0+255),b
  3493  0022F0  EC3A  F012         	call	_delay_ms	;wreg free
  3494                           
  3495                           ;motore.c: 351: SetOutputEPWM1(0b01111111, 0b11111100);
  3496  0022F4  0EFC               	movlw	252
  3497  0022F6  6E1F               	movwf	SetOutputEPWM1@outputmode,c
  3498  0022F8  0E7F               	movlw	127
  3499  0022FA  ECFB  F011         	call	_SetOutputEPWM1
  3500  0022FE  0012               	return		;funcret
  3501  002300                     __end_of_configurazione_iniziale:
  3502                           	opt stack 0
  3503                           tblptru	equ	0xFF8
  3504                           tblptrh	equ	0xFF7
  3505                           tblptrl	equ	0xFF6
  3506                           tablat	equ	0xFF5
  3507                           intcon	equ	0xFF2
  3508                           postinc0	equ	0xFEE
  3509                           wreg	equ	0xFE8
  3510                           postdec1	equ	0xFE5
  3511                           fsr1l	equ	0xFE1
  3512                           indf2	equ	0xFDF
  3513                           fsr2h	equ	0xFDA
  3514                           fsr2l	equ	0xFD9
  3515                           status	equ	0xFD8
  3516                           
  3517 ;; *************** function _delay_ms *****************
  3518 ;; Defined at:
  3519 ;;		line 61 in file "delay.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  value_ms        2    2[BANK0 ] unsigned int 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;		None               void
  3526 ;; Registers used:
  3527 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3533 ;;      Params:         0       2       0       0
  3534 ;;      Locals:         0       0       0       0
  3535 ;;      Temps:          0       0       0       0
  3536 ;;      Totals:         0       2       0       0
  3537 ;;Total ram usage:        2 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    3
  3540 ;; This function calls:
  3541 ;;		___wmul
  3542 ;; This function is called by:
  3543 ;;		_main
  3544 ;;		_configurazione_iniziale
  3545 ;;		_delay_s
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text9
  3550  002474                     __ptext9:
  3551                           	opt stack 0
  3552  002474                     _delay_ms:
  3553                           	opt stack 27
  3554                           
  3555                           ;delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3556                           
  3557                           ;incstack = 0
  3558  002474  C040  F01F         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3559  002478  6A20               	clrf	___wmul@multiplier+1,c
  3560  00247A  C0AD  F021         	movff	delay_ms@value_ms,___wmul@multiplicand
  3561  00247E  C0AE  F022         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3562  002482  EC56  F012         	call	___wmul	;wreg free
  3563  002486  C01F  F084         	movff	?___wmul,_clock_counter_reference	;volatile
  3564  00248A  C020  F085         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3565                           
  3566                           ;delay.c: 75: while (clock_counter_reference) {
  3567  00248E  D007               	goto	l571
  3568  002490                     l4609:
  3569                           
  3570                           ;delay.c: 85: _delay(240);
  3571  002490  0E50               	movlw	80
  3572  002492                     u6127:
  3573  002492  2EE8               	decfsz	wreg,f,c
  3574  002494  D7FE               	goto	u6127
  3575                           
  3576                           ;delay.c: 88: clock_counter_reference--;
  3577  002496  0100               	movlb	0	; () banked
  3578  002498  0784               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  3579  00249A  A0D8               	btfss	status,0,c
  3580  00249C  0785               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  3581  00249E                     l571:
  3582  00249E  0100               	movlb	0	; () banked
  3583  0024A0  5184               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  3584  0024A2  0100               	movlb	0	; () banked
  3585  0024A4  1185               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  3586  0024A6  B4D8               	btfsc	status,2,c
  3587  0024A8  0012               	return	
  3588  0024AA  D7F2               	goto	l4609
  3589  0024AC                     __end_of_delay_ms:
  3590                           	opt stack 0
  3591                           tblptru	equ	0xFF8
  3592                           tblptrh	equ	0xFF7
  3593                           tblptrl	equ	0xFF6
  3594                           tablat	equ	0xFF5
  3595                           intcon	equ	0xFF2
  3596                           postinc0	equ	0xFEE
  3597                           wreg	equ	0xFE8
  3598                           postdec1	equ	0xFE5
  3599                           fsr1l	equ	0xFE1
  3600                           indf2	equ	0xFDF
  3601                           fsr2h	equ	0xFDA
  3602                           fsr2l	equ	0xFD9
  3603                           status	equ	0xFD8
  3604                           
  3605 ;; *************** function ___wmul *****************
  3606 ;; Defined at:
  3607 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  multiplier      2   30[COMRAM] unsigned int 
  3610 ;;  multiplicand    2   32[COMRAM] unsigned int 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  product         2    0[BANK0 ] unsigned int 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  2   30[COMRAM] unsigned int 
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0, prodl, prodh
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3622 ;;      Params:         4       0       0       0
  3623 ;;      Locals:         0       2       0       0
  3624 ;;      Temps:          0       0       0       0
  3625 ;;      Totals:         4       2       0       0
  3626 ;;Total ram usage:        6 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    2
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_delay_ms
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text10
  3637  0024AC                     __ptext10:
  3638                           	opt stack 0
  3639  0024AC                     ___wmul:
  3640                           	opt stack 27
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;incstack = 0
  3644  0024AC  501F               	movf	___wmul@multiplier,w,c
  3645  0024AE  0221               	mulwf	___wmul@multiplicand,c
  3646  0024B0  CFF3 F0AB          	movff	prodl,___wmul@product
  3647  0024B4  CFF4 F0AC          	movff	prodh,___wmul@product+1
  3648  0024B8  501F               	movf	___wmul@multiplier,w,c
  3649  0024BA  0222               	mulwf	___wmul@multiplicand+1,c
  3650  0024BC  50F3               	movf	prodl,w,c
  3651  0024BE  0100               	movlb	0	; () banked
  3652  0024C0  27AC               	addwf	(___wmul@product+1)& (0+255),f,b
  3653  0024C2  5020               	movf	___wmul@multiplier+1,w,c
  3654  0024C4  0221               	mulwf	___wmul@multiplicand,c
  3655  0024C6  50F3               	movf	prodl,w,c
  3656  0024C8  0100               	movlb	0	; () banked
  3657  0024CA  27AC               	addwf	(___wmul@product+1)& (0+255),f,b
  3658                           
  3659                           ; BSR set to: 0
  3660  0024CC  C0AB  F01F         	movff	___wmul@product,?___wmul
  3661  0024D0  C0AC  F020         	movff	___wmul@product+1,?___wmul+1
  3662  0024D4  0012               	return	
  3663  0024D6                     __end_of___wmul:
  3664                           	opt stack 0
  3665                           tblptru	equ	0xFF8
  3666                           tblptrh	equ	0xFF7
  3667                           tblptrl	equ	0xFF6
  3668                           tablat	equ	0xFF5
  3669                           prodh	equ	0xFF4
  3670                           prodl	equ	0xFF3
  3671                           intcon	equ	0xFF2
  3672                           postinc0	equ	0xFEE
  3673                           wreg	equ	0xFE8
  3674                           postdec1	equ	0xFE5
  3675                           fsr1l	equ	0xFE1
  3676                           indf2	equ	0xFDF
  3677                           fsr2h	equ	0xFDA
  3678                           fsr2l	equ	0xFD9
  3679                           status	equ	0xFD8
  3680                           
  3681 ;; *************** function _SetOutputEPWM1 *****************
  3682 ;; Defined at:
  3683 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  outputconfig    1    wreg     unsigned char 
  3686 ;;  outputmode      1   30[COMRAM] unsigned char 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  outputconfig    1   31[COMRAM] unsigned char 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;		None               void
  3691 ;; Registers used:
  3692 ;;		wreg, status,2, status,0
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3698 ;;      Params:         1       0       0       0
  3699 ;;      Locals:         1       0       0       0
  3700 ;;      Temps:          0       0       0       0
  3701 ;;      Totals:         2       0       0       0
  3702 ;;Total ram usage:        2 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:    2
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_main
  3709 ;;		_rampe
  3710 ;;		_configurazione_iniziale
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714                           	psect	text11
  3715  0023F6                     __ptext11:
  3716                           	opt stack 0
  3717  0023F6                     _SetOutputEPWM1:
  3718                           	opt stack 27
  3719                           
  3720                           ; BSR set to: 0
  3721                           ;incstack = 0
  3722                           ;SetOutputEPWM1@outputconfig stored from wreg
  3723  0023F6  6E20               	movwf	SetOutputEPWM1@outputconfig,c
  3724  0023F8  50BA               	movf	4026,w,c	;volatile
  3725  0023FA  09C0               	iorlw	192
  3726  0023FC  1420               	andwf	SetOutputEPWM1@outputconfig,w,c
  3727  0023FE  6EBA               	movwf	4026,c	;volatile
  3728  002400  50BA               	movf	4026,w,c	;volatile
  3729  002402  090F               	iorlw	15
  3730  002404  141F               	andwf	SetOutputEPWM1@outputmode,w,c
  3731  002406  6EBA               	movwf	4026,c	;volatile
  3732  002408  0E3F               	movlw	63
  3733  00240A  1820               	xorwf	SetOutputEPWM1@outputconfig,w,c
  3734  00240C  A4D8               	btfss	status,2,c
  3735  00240E  D002               	goto	l3383
  3736  002410  9895               	bcf	3989,4,c	;volatile
  3737  002412  0012               	return	
  3738  002414                     l3383:
  3739  002414  0EBF               	movlw	191
  3740  002416  1820               	xorwf	SetOutputEPWM1@outputconfig,w,c
  3741  002418  A4D8               	btfss	status,2,c
  3742  00241A  D003               	goto	l3387
  3743  00241C  9895               	bcf	3989,4,c	;volatile
  3744  00241E  9A95               	bcf	3989,5,c	;volatile
  3745  002420  0012               	return	
  3746  002422                     l3387:
  3747  002422  0E7F               	movlw	127
  3748  002424  1820               	xorwf	SetOutputEPWM1@outputconfig,w,c
  3749  002426  B4D8               	btfsc	status,2,c
  3750  002428  D003               	goto	l749
  3751  00242A  2820               	incf	SetOutputEPWM1@outputconfig,w,c
  3752  00242C  A4D8               	btfss	status,2,c
  3753  00242E  0012               	return	
  3754  002430                     l749:
  3755  002430  9895               	bcf	3989,4,c	;volatile
  3756  002432  9A95               	bcf	3989,5,c	;volatile
  3757  002434  9C95               	bcf	3989,6,c	;volatile
  3758  002436  9E95               	bcf	3989,7,c	;volatile
  3759  002438  0012               	return	
  3760  00243A                     __end_of_SetOutputEPWM1:
  3761                           	opt stack 0
  3762                           tblptru	equ	0xFF8
  3763                           tblptrh	equ	0xFF7
  3764                           tblptrl	equ	0xFF6
  3765                           tablat	equ	0xFF5
  3766                           prodh	equ	0xFF4
  3767                           prodl	equ	0xFF3
  3768                           intcon	equ	0xFF2
  3769                           postinc0	equ	0xFEE
  3770                           wreg	equ	0xFE8
  3771                           postdec1	equ	0xFE5
  3772                           fsr1l	equ	0xFE1
  3773                           indf2	equ	0xFDF
  3774                           fsr2h	equ	0xFDA
  3775                           fsr2l	equ	0xFD9
  3776                           status	equ	0xFD8
  3777                           
  3778 ;; *************** function _CANInitialize *****************
  3779 ;; Defined at:
  3780 ;;		line 218 in file "CANlib.h"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  propSeg         1    wreg     unsigned char 
  3783 ;;  phaseSeg1       1    9[BANK0 ] unsigned char 
  3784 ;;  phaseSeg2       1   10[BANK0 ] unsigned char 
  3785 ;;  SJW             1   11[BANK0 ] unsigned char 
  3786 ;;  BRP             1   12[BANK0 ] unsigned char 
  3787 ;;  flags           1   13[BANK0 ] enum E16844
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;  propSeg         1   18[BANK0 ] unsigned char 
  3790 ;;  FilterConfig    1   20[BANK0 ] unsigned char 
  3791 ;;  FilterConfig    1   19[BANK0 ] unsigned char 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;		None               void
  3794 ;; Registers used:
  3795 ;;		wreg, status,2, status,0, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3801 ;;      Params:         0       5       0       0
  3802 ;;      Locals:         0       3       0       0
  3803 ;;      Temps:          0       4       0       0
  3804 ;;      Totals:         0      12       0       0
  3805 ;;Total ram usage:       12 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    3
  3808 ;; This function calls:
  3809 ;;		_CANOperationMode
  3810 ;;		_CANSetFilter
  3811 ;;		_CANSetMask
  3812 ;; This function is called by:
  3813 ;;		_configurazione_iniziale
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text12
  3818  001FD2                     __ptext12:
  3819                           	opt stack 0
  3820  001FD2                     _CANInitialize:
  3821                           	opt stack 26
  3822                           
  3823                           ;incstack = 0
  3824                           ;CANInitialize@propSeg stored from wreg
  3825  001FD2  0100               	movlb	0	; () banked
  3826  001FD4  6FBD               	movwf	CANInitialize@propSeg& (0+255),b
  3827                           
  3828                           ;CANlib.h: 220: BYTE FilterConfig1;
  3829                           ;CANlib.h: 221: BYTE FilterConfig2;
  3830                           ;CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3831  001FD6  0E80               	movlw	128
  3832  001FD8  ECA7  F012         	call	_CANOperationMode
  3833                           
  3834                           ;CANlib.h: 225: BRGCON1 = 0x00;
  3835  001FDC  0E00               	movlw	0
  3836  001FDE  6E70               	movwf	3952,c	;volatile
  3837                           
  3838                           ;CANlib.h: 226: BRGCON2 = 0x00;
  3839  001FE0  0E00               	movlw	0
  3840  001FE2  6E71               	movwf	3953,c	;volatile
  3841                           
  3842                           ;CANlib.h: 227: BRGCON3 = 0x00;
  3843  001FE4  0E00               	movlw	0
  3844  001FE6  6E72               	movwf	3954,c	;volatile
  3845                           
  3846                           ;CANlib.h: 229: SJW= SJW << 6;
  3847  001FE8  0100               	movlb	0	; () banked
  3848  001FEA  41B6               	rrncf	CANInitialize@SJW& (0+255),w,b
  3849  001FEC  42E8               	rrncf	wreg,f,c
  3850  001FEE  0BC0               	andlw	192
  3851  001FF0  0100               	movlb	0	; () banked
  3852  001FF2  6FB6               	movwf	CANInitialize@SJW& (0+255),b
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;CANlib.h: 230: BRGCON1 |= SJW;
  3856  001FF4  0100               	movlb	0	; () banked
  3857  001FF6  51B6               	movf	CANInitialize@SJW& (0+255),w,b
  3858  001FF8  1270               	iorwf	3952,f,c	;volatile
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;CANlib.h: 231: BRGCON1 |= BRP;
  3862  001FFA  0100               	movlb	0	; () banked
  3863  001FFC  51B7               	movf	CANInitialize@BRP& (0+255),w,b
  3864  001FFE  1270               	iorwf	3952,f,c	;volatile
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;CANlib.h: 233: BRGCON2 |= propSeg;
  3868  002000  0100               	movlb	0	; () banked
  3869  002002  51BD               	movf	CANInitialize@propSeg& (0+255),w,b
  3870  002004  1271               	iorwf	3953,f,c	;volatile
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3874  002006  0100               	movlb	0	; () banked
  3875  002008  39B4               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3876  00200A  42E8               	rrncf	wreg,f,c
  3877  00200C  0BF8               	andlw	248
  3878  00200E  0100               	movlb	0	; () banked
  3879  002010  6FB4               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3883  002012  0100               	movlb	0	; () banked
  3884  002014  51B4               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3885  002016  1271               	iorwf	3953,f,c	;volatile
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3889  002018  0100               	movlb	0	; () banked
  3890  00201A  A5B8               	btfss	CANInitialize@flags& (0+255),2,b
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;CANlib.h: 238: BRGCON2bits.SAM= 1;
  3894  00201C  8C71               	bsf	3953,6,c	;volatile
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3898  00201E  0100               	movlb	0	; () banked
  3899  002020  B1B8               	btfsc	CANInitialize@flags& (0+255),0,b
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3903  002022  8E71               	bsf	3953,7,c	;volatile
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3907                           
  3908                           ; BSR set to: 0
  3909  002024  0100               	movlb	0	; () banked
  3910  002026  51B5               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3911  002028  1272               	iorwf	3954,f,c	;volatile
  3912                           
  3913                           ; BSR set to: 0
  3914                           ;CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3915  00202A  0100               	movlb	0	; () banked
  3916  00202C  B3B8               	btfsc	CANInitialize@flags& (0+255),1,b
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3920  00202E  8C72               	bsf	3954,6,c	;volatile
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3924                           
  3925                           ; BSR set to: 0
  3926  002030  0100               	movlb	0	; () banked
  3927  002032  51B8               	movf	CANInitialize@flags& (0+255),w,b
  3928  002034  0B60               	andlw	96
  3929  002036  6E60               	movwf	3936,c	;volatile
  3930                           
  3931                           ;CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON )
  3932  002038  0100               	movlb	0	; () banked
  3933  00203A  51B8               	movf	CANInitialize@flags& (0+255),w,b
  3934  00203C  0B10               	andlw	16
  3935  00203E  0AFF               	xorlw	255
  3936  002040  B4D8               	btfsc	status,2,c
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3940  002042  8460               	bsf	3936,2,c	;volatile
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;CANlib.h: 255: RXB1CON = RXB0CON;
  3944  002044  CF60 FF50          	movff	3936,3920	;volatile
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3948  002048  0E00               	movlw	0
  3949  00204A  6E1F               	movwf	CANSetMask@mask,c
  3950  00204C  0E00               	movlw	0
  3951  00204E  6E20               	movwf	CANSetMask@mask+1,c
  3952  002050  0E00               	movlw	0
  3953  002052  6E21               	movwf	CANSetMask@mask+2,c
  3954  002054  0E00               	movlw	0
  3955  002056  6E22               	movwf	CANSetMask@mask+3,c
  3956  002058  0EF7               	movlw	247
  3957  00205A  6E23               	movwf	CANSetMask@type,c
  3958  00205C  0E01               	movlw	1
  3959  00205E  EC02  F00C         	call	_CANSetMask
  3960                           
  3961                           ;CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3962  002062  0E00               	movlw	0
  3963  002064  6E1F               	movwf	CANSetMask@mask,c
  3964  002066  0E00               	movlw	0
  3965  002068  6E20               	movwf	CANSetMask@mask+1,c
  3966  00206A  0E00               	movlw	0
  3967  00206C  6E21               	movwf	CANSetMask@mask+2,c
  3968  00206E  0E00               	movlw	0
  3969  002070  6E22               	movwf	CANSetMask@mask+3,c
  3970  002072  0EF7               	movlw	247
  3971  002074  6E23               	movwf	CANSetMask@type,c
  3972  002076  0E02               	movlw	2
  3973  002078  EC02  F00C         	call	_CANSetMask
  3974                           
  3975                           ;CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3976  00207C  D00F               	goto	l4369
  3977  00207E                     l4363:
  3978                           
  3979                           ;CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3980  00207E  0EF7               	movlw	247
  3981  002080  0100               	movlb	0	; () banked
  3982  002082  6FBE               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3983  002084  D007               	goto	l4365
  3984  002086                     l360:
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3988  002086  0100               	movlb	0	; () banked
  3989  002088  69BE               	setf	CANInitialize@FilterConfig1& (0+255),b
  3990                           
  3991                           ;CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3992  00208A  0100               	movlb	0	; () banked
  3993  00208C  69BF               	setf	CANInitialize@FilterConfig2& (0+255),b
  3994                           
  3995                           ;CANlib.h: 273: break;
  3996  00208E  D028               	goto	l4371
  3997  002090                     l361:
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  4001  002090  0100               	movlb	0	; () banked
  4002  002092  69BE               	setf	CANInitialize@FilterConfig1& (0+255),b
  4003  002094                     l4365:
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  4007  002094  0EF7               	movlw	247
  4008  002096  0100               	movlb	0	; () banked
  4009  002098  6FBF               	movwf	CANInitialize@FilterConfig2& (0+255),b
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;CANlib.h: 278: }
  4013                           
  4014                           ;CANlib.h: 277: break;
  4015  00209A  D022               	goto	l4371
  4016  00209C                     l4369:
  4017  00209C  0E9F               	movlw	159
  4018  00209E  0100               	movlb	0	; () banked
  4019  0020A0  6FB9               	movwf	??_CANInitialize& (0+255),b
  4020  0020A2  0EFF               	movlw	255
  4021  0020A4  0100               	movlb	0	; () banked
  4022  0020A6  6FBA               	movwf	(??_CANInitialize+1)& (0+255),b
  4023  0020A8  0100               	movlb	0	; () banked
  4024  0020AA  51B8               	movf	CANInitialize@flags& (0+255),w,b
  4025  0020AC  0B60               	andlw	96
  4026  0020AE  0100               	movlb	0	; () banked
  4027  0020B0  6FBB               	movwf	(??_CANInitialize+2)& (0+255),b
  4028  0020B2  6BBC               	clrf	(??_CANInitialize+3)& (0+255),b
  4029  0020B4  0100               	movlb	0	; () banked
  4030  0020B6  51B9               	movf	??_CANInitialize& (0+255),w,b
  4031  0020B8  0100               	movlb	0	; () banked
  4032  0020BA  13BB               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  4033  0020BC  0100               	movlb	0	; () banked
  4034  0020BE  51BA               	movf	(??_CANInitialize+1)& (0+255),w,b
  4035  0020C0  0100               	movlb	0	; () banked
  4036  0020C2  13BC               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  4037                           
  4038                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4039                           ; Switch size 1, requested type "space"
  4040                           ; Number of cases is 1, Range of values is 0 to 0
  4041                           ; switch strategies available:
  4042                           ; Name         Instructions Cycles
  4043                           ; simple_byte            4     3 (average)
  4044                           ;	Chosen strategy is simple_byte
  4045  0020C4  0100               	movlb	0	; () banked
  4046  0020C6  51BC               	movf	(??_CANInitialize+3)& (0+255),w,b
  4047  0020C8  0A00               	xorlw	0	; case 0
  4048  0020CA  A4D8               	btfss	status,2,c
  4049  0020CC  D7E1               	goto	l361
  4050                           
  4051                           ; BSR set to: 0
  4052                           ; Switch size 1, requested type "space"
  4053                           ; Number of cases is 2, Range of values is 191 to 223
  4054                           ; switch strategies available:
  4055                           ; Name         Instructions Cycles
  4056                           ; simple_byte            7     4 (average)
  4057                           ;	Chosen strategy is simple_byte
  4058  0020CE  0100               	movlb	0	; () banked
  4059  0020D0  51BB               	movf	(??_CANInitialize+2)& (0+255),w,b
  4060  0020D2  0ABF               	xorlw	191	; case 191
  4061  0020D4  B4D8               	btfsc	status,2,c
  4062  0020D6  D7D7               	goto	l360
  4063  0020D8  0A60               	xorlw	96	; case 223
  4064  0020DA  B4D8               	btfsc	status,2,c
  4065  0020DC  D7D0               	goto	l4363
  4066  0020DE  D7D8               	goto	l361
  4067  0020E0                     l4371:
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  4071  0020E0  0E00               	movlw	0
  4072  0020E2  6E1F               	movwf	CANSetFilter@filter,c
  4073  0020E4  0E00               	movlw	0
  4074  0020E6  6E20               	movwf	CANSetFilter@filter+1,c
  4075  0020E8  0E00               	movlw	0
  4076  0020EA  6E21               	movwf	CANSetFilter@filter+2,c
  4077  0020EC  0E00               	movlw	0
  4078  0020EE  6E22               	movwf	CANSetFilter@filter+3,c
  4079  0020F0  C0BE  F023         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  4080  0020F4  0E00               	movlw	0
  4081  0020F6  EC9F  F000         	call	_CANSetFilter
  4082                           
  4083                           ;CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  4084  0020FA  0E00               	movlw	0
  4085  0020FC  6E1F               	movwf	CANSetFilter@filter,c
  4086  0020FE  0E00               	movlw	0
  4087  002100  6E20               	movwf	CANSetFilter@filter+1,c
  4088  002102  0E00               	movlw	0
  4089  002104  6E21               	movwf	CANSetFilter@filter+2,c
  4090  002106  0E00               	movlw	0
  4091  002108  6E22               	movwf	CANSetFilter@filter+3,c
  4092  00210A  C0BE  F023         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  4093  00210E  0E01               	movlw	1
  4094  002110  EC9F  F000         	call	_CANSetFilter
  4095                           
  4096                           ;CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  4097  002114  0E00               	movlw	0
  4098  002116  6E1F               	movwf	CANSetFilter@filter,c
  4099  002118  0E00               	movlw	0
  4100  00211A  6E20               	movwf	CANSetFilter@filter+1,c
  4101  00211C  0E00               	movlw	0
  4102  00211E  6E21               	movwf	CANSetFilter@filter+2,c
  4103  002120  0E00               	movlw	0
  4104  002122  6E22               	movwf	CANSetFilter@filter+3,c
  4105  002124  C0BF  F023         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4106  002128  0E02               	movlw	2
  4107  00212A  EC9F  F000         	call	_CANSetFilter
  4108                           
  4109                           ;CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  4110  00212E  0E00               	movlw	0
  4111  002130  6E1F               	movwf	CANSetFilter@filter,c
  4112  002132  0E00               	movlw	0
  4113  002134  6E20               	movwf	CANSetFilter@filter+1,c
  4114  002136  0E00               	movlw	0
  4115  002138  6E21               	movwf	CANSetFilter@filter+2,c
  4116  00213A  0E00               	movlw	0
  4117  00213C  6E22               	movwf	CANSetFilter@filter+3,c
  4118  00213E  C0BF  F023         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4119  002142  0E03               	movlw	3
  4120  002144  EC9F  F000         	call	_CANSetFilter
  4121                           
  4122                           ;CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  4123  002148  0E00               	movlw	0
  4124  00214A  6E1F               	movwf	CANSetFilter@filter,c
  4125  00214C  0E00               	movlw	0
  4126  00214E  6E20               	movwf	CANSetFilter@filter+1,c
  4127  002150  0E00               	movlw	0
  4128  002152  6E21               	movwf	CANSetFilter@filter+2,c
  4129  002154  0E00               	movlw	0
  4130  002156  6E22               	movwf	CANSetFilter@filter+3,c
  4131  002158  C0BF  F023         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4132  00215C  0E04               	movlw	4
  4133  00215E  EC9F  F000         	call	_CANSetFilter
  4134                           
  4135                           ;CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  4136  002162  0E00               	movlw	0
  4137  002164  6E1F               	movwf	CANSetFilter@filter,c
  4138  002166  0E00               	movlw	0
  4139  002168  6E20               	movwf	CANSetFilter@filter+1,c
  4140  00216A  0E00               	movlw	0
  4141  00216C  6E21               	movwf	CANSetFilter@filter+2,c
  4142  00216E  0E00               	movlw	0
  4143  002170  6E22               	movwf	CANSetFilter@filter+3,c
  4144  002172  C0BF  F023         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4145  002176  0E05               	movlw	5
  4146  002178  EC9F  F000         	call	_CANSetFilter
  4147                           
  4148                           ;CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  4149  00217C  0E00               	movlw	0
  4150  00217E  ECA7  F012         	call	_CANOperationMode
  4151  002182  0012               	return		;funcret
  4152  002184                     __end_of_CANInitialize:
  4153                           	opt stack 0
  4154                           tblptru	equ	0xFF8
  4155                           tblptrh	equ	0xFF7
  4156                           tblptrl	equ	0xFF6
  4157                           tablat	equ	0xFF5
  4158                           prodh	equ	0xFF4
  4159                           prodl	equ	0xFF3
  4160                           intcon	equ	0xFF2
  4161                           postinc0	equ	0xFEE
  4162                           wreg	equ	0xFE8
  4163                           postdec1	equ	0xFE5
  4164                           fsr1l	equ	0xFE1
  4165                           indf2	equ	0xFDF
  4166                           fsr2h	equ	0xFDA
  4167                           fsr2l	equ	0xFD9
  4168                           status	equ	0xFD8
  4169                           
  4170 ;; *************** function _CANSetMask *****************
  4171 ;; Defined at:
  4172 ;;		line 640 in file "CANlib.h"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  numBuffer       1    wreg     enum E16878
  4175 ;;  mask            4   30[COMRAM] unsigned long 
  4176 ;;  type            1   34[COMRAM] enum E16844
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  numBuffer       1    4[BANK0 ] enum E16878
  4179 ;;  tamp            4    5[BANK0 ] unsigned long 
  4180 ;; Return value:  Size  Location     Type
  4181 ;;		None               void
  4182 ;; Registers used:
  4183 ;;		wreg, status,2, status,0
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4189 ;;      Params:         5       0       0       0
  4190 ;;      Locals:         0       5       0       0
  4191 ;;      Temps:          0       4       0       0
  4192 ;;      Totals:         5       9       0       0
  4193 ;;Total ram usage:       14 bytes
  4194 ;; Hardware stack levels used:    1
  4195 ;; Hardware stack levels required when called:    2
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_CANInitialize
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text13
  4204  001804                     __ptext13:
  4205                           	opt stack 0
  4206  001804                     _CANSetMask:
  4207                           	opt stack 26
  4208                           
  4209                           ;incstack = 0
  4210                           ;CANSetMask@numBuffer stored from wreg
  4211  001804  0100               	movlb	0	; () banked
  4212  001806  6FAF               	movwf	CANSetMask@numBuffer& (0+255),b
  4213                           
  4214                           ;CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  4215  001808  0100               	movlb	0	; () banked
  4216  00180A  05AF               	decf	CANSetMask@numBuffer& (0+255),w,b
  4217  00180C  A4D8               	btfss	status,2,c
  4218  00180E  D051               	goto	l3927
  4219                           
  4220                           ; BSR set to: 0
  4221  001810  2823               	incf	CANSetMask@type,w,c
  4222  001812  A4D8               	btfss	status,2,c
  4223  001814  D04E               	goto	l3927
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;CANlib.h: 644: {
  4227                           ;CANlib.h: 645: tamp = (mask >> 3);
  4228  001816  C01F  F0AB         	movff	CANSetMask@mask,??_CANSetMask
  4229  00181A  C020  F0AC         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4230  00181E  C021  F0AD         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4231  001822  C022  F0AE         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4232  001826  0E04               	movlw	4
  4233  001828  D006               	goto	u4460
  4234  00182A                     u4465:
  4235  00182A  0100               	movlb	0	; () banked
  4236  00182C  90D8               	bcf	status,0,c
  4237  00182E  33AE               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4238  001830  33AD               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4239  001832  33AC               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4240  001834  33AB               	rrcf	??_CANSetMask& (0+255),f,b
  4241  001836                     u4460:
  4242  001836  2EE8               	decfsz	wreg,f,c
  4243  001838  D7F8               	goto	u4465
  4244  00183A  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  4245  00183E  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4246  001842  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4247  001846  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;CANlib.h: 646: tamp = tamp & 0x000000FF;
  4251  00184A  0100               	movlb	0	; () banked
  4252  00184C  51B0               	movf	CANSetMask@tamp& (0+255),w,b
  4253  00184E  0100               	movlb	0	; () banked
  4254  001850  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4255  001852  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4256  001854  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4257  001856  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  4261  001858  C0B0  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;CANlib.h: 649: tamp = mask & 0x00000007;
  4265  00185C  0E07               	movlw	7
  4266  00185E  141F               	andwf	CANSetMask@mask,w,c
  4267  001860  0100               	movlb	0	; () banked
  4268  001862  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4269  001864  0E00               	movlw	0
  4270  001866  1420               	andwf	CANSetMask@mask+1,w,c
  4271  001868  0100               	movlb	0	; () banked
  4272  00186A  6FB1               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4273  00186C  0E00               	movlw	0
  4274  00186E  1421               	andwf	CANSetMask@mask+2,w,c
  4275  001870  0100               	movlb	0	; () banked
  4276  001872  6FB2               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4277  001874  0E00               	movlw	0
  4278  001876  1422               	andwf	CANSetMask@mask+3,w,c
  4279  001878  0100               	movlb	0	; () banked
  4280  00187A  6FB3               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;CANlib.h: 650: tamp = tamp << 5;
  4284  00187C  C0B0  F0AB         	movff	CANSetMask@tamp,??_CANSetMask
  4285  001880  C0B1  F0AC         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4286  001884  C0B2  F0AD         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4287  001888  C0B3  F0AE         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4288  00188C  0E05               	movlw	5
  4289  00188E                     u4475:
  4290  00188E  90D8               	bcf	status,0,c
  4291  001890  0100               	movlb	0	; () banked
  4292  001892  37AB               	rlcf	??_CANSetMask& (0+255),f,b
  4293  001894  37AC               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4294  001896  37AD               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4295  001898  37AE               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4296  00189A  2EE8               	decfsz	wreg,f,c
  4297  00189C  D7F8               	goto	u4475
  4298  00189E  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  4299  0018A2  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4300  0018A6  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4301  0018AA  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  4305  0018AE  C0B0  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4306  0018B2                     l3927:
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;CANlib.h: 652: }
  4310                           ;CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4311  0018B2  0E02               	movlw	2
  4312  0018B4  0100               	movlb	0	; () banked
  4313  0018B6  19AF               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4314  0018B8  A4D8               	btfss	status,2,c
  4315  0018BA  D051               	goto	l3943
  4316                           
  4317                           ; BSR set to: 0
  4318  0018BC  2823               	incf	CANSetMask@type,w,c
  4319  0018BE  A4D8               	btfss	status,2,c
  4320  0018C0  D04E               	goto	l3943
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;CANlib.h: 655: {
  4324                           ;CANlib.h: 656: tamp = (mask >> 3);
  4325  0018C2  C01F  F0AB         	movff	CANSetMask@mask,??_CANSetMask
  4326  0018C6  C020  F0AC         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4327  0018CA  C021  F0AD         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4328  0018CE  C022  F0AE         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4329  0018D2  0E04               	movlw	4
  4330  0018D4  D006               	goto	u4500
  4331  0018D6                     u4505:
  4332  0018D6  0100               	movlb	0	; () banked
  4333  0018D8  90D8               	bcf	status,0,c
  4334  0018DA  33AE               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4335  0018DC  33AD               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4336  0018DE  33AC               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4337  0018E0  33AB               	rrcf	??_CANSetMask& (0+255),f,b
  4338  0018E2                     u4500:
  4339  0018E2  2EE8               	decfsz	wreg,f,c
  4340  0018E4  D7F8               	goto	u4505
  4341  0018E6  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  4342  0018EA  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4343  0018EE  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4344  0018F2  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;CANlib.h: 657: tamp = tamp & 0x000000FF;
  4348  0018F6  0100               	movlb	0	; () banked
  4349  0018F8  51B0               	movf	CANSetMask@tamp& (0+255),w,b
  4350  0018FA  0100               	movlb	0	; () banked
  4351  0018FC  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4352  0018FE  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4353  001900  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4354  001902  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4355                           
  4356                           ; BSR set to: 0
  4357                           ;CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4358  001904  C0B0  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;CANlib.h: 660: tamp = mask & 0x00000007;
  4362  001908  0E07               	movlw	7
  4363  00190A  141F               	andwf	CANSetMask@mask,w,c
  4364  00190C  0100               	movlb	0	; () banked
  4365  00190E  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4366  001910  0E00               	movlw	0
  4367  001912  1420               	andwf	CANSetMask@mask+1,w,c
  4368  001914  0100               	movlb	0	; () banked
  4369  001916  6FB1               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4370  001918  0E00               	movlw	0
  4371  00191A  1421               	andwf	CANSetMask@mask+2,w,c
  4372  00191C  0100               	movlb	0	; () banked
  4373  00191E  6FB2               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4374  001920  0E00               	movlw	0
  4375  001922  1422               	andwf	CANSetMask@mask+3,w,c
  4376  001924  0100               	movlb	0	; () banked
  4377  001926  6FB3               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;CANlib.h: 661: tamp = tamp << 5;
  4381  001928  C0B0  F0AB         	movff	CANSetMask@tamp,??_CANSetMask
  4382  00192C  C0B1  F0AC         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4383  001930  C0B2  F0AD         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4384  001934  C0B3  F0AE         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4385  001938  0E05               	movlw	5
  4386  00193A                     u4515:
  4387  00193A  90D8               	bcf	status,0,c
  4388  00193C  0100               	movlb	0	; () banked
  4389  00193E  37AB               	rlcf	??_CANSetMask& (0+255),f,b
  4390  001940  37AC               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4391  001942  37AD               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4392  001944  37AE               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4393  001946  2EE8               	decfsz	wreg,f,c
  4394  001948  D7F8               	goto	u4515
  4395  00194A  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  4396  00194E  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4397  001952  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4398  001956  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4402  00195A  C0B0  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4403  00195E                     l3943:
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;CANlib.h: 663: }
  4407                           ;CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4408  00195E  0100               	movlb	0	; () banked
  4409  001960  05AF               	decf	CANSetMask@numBuffer& (0+255),w,b
  4410  001962  A4D8               	btfss	status,2,c
  4411  001964  D07C               	goto	l3975
  4412                           
  4413                           ; BSR set to: 0
  4414  001966  0EF7               	movlw	247
  4415  001968  1823               	xorwf	CANSetMask@type,w,c
  4416  00196A  A4D8               	btfss	status,2,c
  4417  00196C  D078               	goto	l3975
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;CANlib.h: 666: {
  4421                           ;CANlib.h: 667: tamp = mask & 0x000000FF;
  4422  00196E  501F               	movf	CANSetMask@mask,w,c
  4423  001970  0100               	movlb	0	; () banked
  4424  001972  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4425  001974  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4426  001976  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4427  001978  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4431  00197A  C0B0  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;CANlib.h: 670: tamp = mask & 0x0000FF00;
  4435  00197E  0E00               	movlw	0
  4436  001980  141F               	andwf	CANSetMask@mask,w,c
  4437  001982  0100               	movlb	0	; () banked
  4438  001984  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4439  001986  0EFF               	movlw	255
  4440  001988  1420               	andwf	CANSetMask@mask+1,w,c
  4441  00198A  0100               	movlb	0	; () banked
  4442  00198C  6FB1               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4443  00198E  0E00               	movlw	0
  4444  001990  1421               	andwf	CANSetMask@mask+2,w,c
  4445  001992  0100               	movlb	0	; () banked
  4446  001994  6FB2               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4447  001996  0E00               	movlw	0
  4448  001998  1422               	andwf	CANSetMask@mask+3,w,c
  4449  00199A  0100               	movlb	0	; () banked
  4450  00199C  6FB3               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;CANlib.h: 671: tamp = tamp >> 8;
  4454  00199E  C0B0  F0AB         	movff	CANSetMask@tamp,??_CANSetMask
  4455  0019A2  C0B1  F0AC         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4456  0019A6  C0B2  F0AD         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4457  0019AA  C0B3  F0AE         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4458  0019AE  C0AC  F0AB         	movff	??_CANSetMask+1,??_CANSetMask
  4459  0019B2  C0AD  F0AC         	movff	??_CANSetMask+2,??_CANSetMask+1
  4460  0019B6  C0AE  F0AD         	movff	??_CANSetMask+3,??_CANSetMask+2
  4461  0019BA  0100               	movlb	0	; () banked
  4462  0019BC  6BAE               	clrf	(??_CANSetMask+3)& (0+255),b
  4463  0019BE  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  4464  0019C2  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4465  0019C6  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4466  0019CA  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4470  0019CE  C0B0  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;CANlib.h: 674: if (mask & 0x00010000)
  4474  0019D2  A021               	btfss	CANSetMask@mask+2,0,c
  4475  0019D4  D003               	goto	l434
  4476                           
  4477                           ; BSR set to: 0
  4478                           ;CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4479  0019D6  010F               	movlb	15	; () banked
  4480  0019D8  8119               	bsf	25,0,b	;volatile
  4481  0019DA  D002               	goto	l435
  4482  0019DC                     l434:
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;CANlib.h: 676: else
  4486                           ;CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4487  0019DC  010F               	movlb	15	; () banked
  4488  0019DE  9119               	bcf	25,0,b	;volatile
  4489  0019E0                     l435:
  4490                           
  4491                           ; BSR set to: 15
  4492                           ;CANlib.h: 679: if (mask & 0x00020000)
  4493  0019E0  A221               	btfss	CANSetMask@mask+2,1,c
  4494  0019E2  D003               	goto	l436
  4495                           
  4496                           ; BSR set to: 15
  4497                           ;CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4498  0019E4  010F               	movlb	15	; () banked
  4499  0019E6  8319               	bsf	25,1,b	;volatile
  4500  0019E8  D002               	goto	l437
  4501  0019EA                     l436:
  4502                           
  4503                           ; BSR set to: 15
  4504                           ;CANlib.h: 681: else
  4505                           ;CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4506  0019EA  010F               	movlb	15	; () banked
  4507  0019EC  9319               	bcf	25,1,b	;volatile
  4508  0019EE                     l437:
  4509                           
  4510                           ; BSR set to: 15
  4511                           ;CANlib.h: 684: if (mask & 0x00040000)
  4512  0019EE  A421               	btfss	CANSetMask@mask+2,2,c
  4513  0019F0  D003               	goto	l438
  4514                           
  4515                           ; BSR set to: 15
  4516                           ;CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4517  0019F2  010F               	movlb	15	; () banked
  4518  0019F4  8B19               	bsf	25,5,b	;volatile
  4519  0019F6  D002               	goto	l439
  4520  0019F8                     l438:
  4521                           
  4522                           ; BSR set to: 15
  4523                           ;CANlib.h: 686: else
  4524                           ;CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4525  0019F8  010F               	movlb	15	; () banked
  4526  0019FA  9B19               	bcf	25,5,b	;volatile
  4527  0019FC                     l439:
  4528                           
  4529                           ; BSR set to: 15
  4530                           ;CANlib.h: 689: if (mask & 0x00080000)
  4531  0019FC  A621               	btfss	CANSetMask@mask+2,3,c
  4532  0019FE  D003               	goto	l440
  4533                           
  4534                           ; BSR set to: 15
  4535                           ;CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4536  001A00  010F               	movlb	15	; () banked
  4537  001A02  8D19               	bsf	25,6,b	;volatile
  4538  001A04  D002               	goto	l441
  4539  001A06                     l440:
  4540                           
  4541                           ; BSR set to: 15
  4542                           ;CANlib.h: 691: else
  4543                           ;CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4544  001A06  010F               	movlb	15	; () banked
  4545  001A08  9D19               	bcf	25,6,b	;volatile
  4546  001A0A                     l441:
  4547                           
  4548                           ; BSR set to: 15
  4549                           ;CANlib.h: 694: if (mask & 0x00100000)
  4550  001A0A  A821               	btfss	CANSetMask@mask+2,4,c
  4551  001A0C  D003               	goto	l442
  4552                           
  4553                           ; BSR set to: 15
  4554                           ;CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4555  001A0E  010F               	movlb	15	; () banked
  4556  001A10  8F19               	bsf	25,7,b	;volatile
  4557  001A12  D002               	goto	l3969
  4558  001A14                     l442:
  4559                           
  4560                           ; BSR set to: 15
  4561                           ;CANlib.h: 696: else
  4562                           ;CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4563  001A14  010F               	movlb	15	; () banked
  4564  001A16  9F19               	bcf	25,7,b	;volatile
  4565  001A18                     l3969:
  4566                           
  4567                           ; BSR set to: 15
  4568                           ;CANlib.h: 699: tamp = (mask >> 21);
  4569  001A18  C01F  F0AB         	movff	CANSetMask@mask,??_CANSetMask
  4570  001A1C  C020  F0AC         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4571  001A20  C021  F0AD         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4572  001A24  C022  F0AE         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4573  001A28  0E16               	movlw	22
  4574  001A2A  D006               	goto	u4590
  4575  001A2C                     u4595:
  4576  001A2C  0100               	movlb	0	; () banked
  4577  001A2E  90D8               	bcf	status,0,c
  4578  001A30  33AE               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4579  001A32  33AD               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4580  001A34  33AC               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4581  001A36  33AB               	rrcf	??_CANSetMask& (0+255),f,b
  4582  001A38                     u4590:
  4583  001A38  2EE8               	decfsz	wreg,f,c
  4584  001A3A  D7F8               	goto	u4595
  4585  001A3C  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  4586  001A40  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4587  001A44  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4588  001A48  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;CANlib.h: 700: tamp = tamp & 0x000000FF;
  4592  001A4C  0100               	movlb	0	; () banked
  4593  001A4E  51B0               	movf	CANSetMask@tamp& (0+255),w,b
  4594  001A50  0100               	movlb	0	; () banked
  4595  001A52  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4596  001A54  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4597  001A56  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4598  001A58  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4602  001A5A  C0B0  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4603  001A5E                     l3975:
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;CANlib.h: 702: }
  4607                           ;CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4608  001A5E  0E02               	movlw	2
  4609  001A60  0100               	movlb	0	; () banked
  4610  001A62  19AF               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4611  001A64  A4D8               	btfss	status,2,c
  4612  001A66  0012               	return	
  4613                           
  4614                           ; BSR set to: 0
  4615  001A68  0EF7               	movlw	247
  4616  001A6A  1823               	xorwf	CANSetMask@type,w,c
  4617  001A6C  A4D8               	btfss	status,2,c
  4618  001A6E  0012               	return	
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;CANlib.h: 705: {
  4622                           ;CANlib.h: 706: tamp = mask & 0x000000FF;
  4623  001A70  501F               	movf	CANSetMask@mask,w,c
  4624  001A72  0100               	movlb	0	; () banked
  4625  001A74  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4626  001A76  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4627  001A78  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4628  001A7A  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4632  001A7C  C0B0  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4633                           
  4634                           ; BSR set to: 0
  4635                           ;CANlib.h: 709: tamp = mask & 0x0000FF00;
  4636  001A80  0E00               	movlw	0
  4637  001A82  141F               	andwf	CANSetMask@mask,w,c
  4638  001A84  0100               	movlb	0	; () banked
  4639  001A86  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4640  001A88  0EFF               	movlw	255
  4641  001A8A  1420               	andwf	CANSetMask@mask+1,w,c
  4642  001A8C  0100               	movlb	0	; () banked
  4643  001A8E  6FB1               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4644  001A90  0E00               	movlw	0
  4645  001A92  1421               	andwf	CANSetMask@mask+2,w,c
  4646  001A94  0100               	movlb	0	; () banked
  4647  001A96  6FB2               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4648  001A98  0E00               	movlw	0
  4649  001A9A  1422               	andwf	CANSetMask@mask+3,w,c
  4650  001A9C  0100               	movlb	0	; () banked
  4651  001A9E  6FB3               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;CANlib.h: 710: tamp = tamp >> 8;
  4655  001AA0  C0B0  F0AB         	movff	CANSetMask@tamp,??_CANSetMask
  4656  001AA4  C0B1  F0AC         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4657  001AA8  C0B2  F0AD         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4658  001AAC  C0B3  F0AE         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4659  001AB0  C0AC  F0AB         	movff	??_CANSetMask+1,??_CANSetMask
  4660  001AB4  C0AD  F0AC         	movff	??_CANSetMask+2,??_CANSetMask+1
  4661  001AB8  C0AE  F0AD         	movff	??_CANSetMask+3,??_CANSetMask+2
  4662  001ABC  0100               	movlb	0	; () banked
  4663  001ABE  6BAE               	clrf	(??_CANSetMask+3)& (0+255),b
  4664  001AC0  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  4665  001AC4  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4666  001AC8  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4667  001ACC  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4671  001AD0  C0B0  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;CANlib.h: 713: if (mask & 0x00010000)
  4675  001AD4  A021               	btfss	CANSetMask@mask+2,0,c
  4676  001AD6  D003               	goto	l445
  4677                           
  4678                           ; BSR set to: 0
  4679                           ;CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4680  001AD8  010F               	movlb	15	; () banked
  4681  001ADA  811D               	bsf	29,0,b	;volatile
  4682  001ADC  D002               	goto	l446
  4683  001ADE                     l445:
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;CANlib.h: 715: else
  4687                           ;CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4688  001ADE  010F               	movlb	15	; () banked
  4689  001AE0  911D               	bcf	29,0,b	;volatile
  4690  001AE2                     l446:
  4691                           
  4692                           ; BSR set to: 15
  4693                           ;CANlib.h: 718: if (mask & 0x00020000)
  4694  001AE2  A221               	btfss	CANSetMask@mask+2,1,c
  4695  001AE4  D003               	goto	l447
  4696                           
  4697                           ; BSR set to: 15
  4698                           ;CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4699  001AE6  010F               	movlb	15	; () banked
  4700  001AE8  831D               	bsf	29,1,b	;volatile
  4701  001AEA  D002               	goto	l448
  4702  001AEC                     l447:
  4703                           
  4704                           ; BSR set to: 15
  4705                           ;CANlib.h: 720: else
  4706                           ;CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4707  001AEC  010F               	movlb	15	; () banked
  4708  001AEE  931D               	bcf	29,1,b	;volatile
  4709  001AF0                     l448:
  4710                           
  4711                           ; BSR set to: 15
  4712                           ;CANlib.h: 723: if (mask & 0x00040000)
  4713  001AF0  A421               	btfss	CANSetMask@mask+2,2,c
  4714  001AF2  D003               	goto	l449
  4715                           
  4716                           ; BSR set to: 15
  4717                           ;CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4718  001AF4  010F               	movlb	15	; () banked
  4719  001AF6  8B1D               	bsf	29,5,b	;volatile
  4720  001AF8  D002               	goto	l450
  4721  001AFA                     l449:
  4722                           
  4723                           ; BSR set to: 15
  4724                           ;CANlib.h: 725: else
  4725                           ;CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4726  001AFA  010F               	movlb	15	; () banked
  4727  001AFC  9B1D               	bcf	29,5,b	;volatile
  4728  001AFE                     l450:
  4729                           
  4730                           ; BSR set to: 15
  4731                           ;CANlib.h: 728: if (mask & 0x00080000)
  4732  001AFE  A621               	btfss	CANSetMask@mask+2,3,c
  4733  001B00  D003               	goto	l451
  4734                           
  4735                           ; BSR set to: 15
  4736                           ;CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4737  001B02  010F               	movlb	15	; () banked
  4738  001B04  8D1D               	bsf	29,6,b	;volatile
  4739  001B06  D002               	goto	l452
  4740  001B08                     l451:
  4741                           
  4742                           ; BSR set to: 15
  4743                           ;CANlib.h: 730: else
  4744                           ;CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4745  001B08  010F               	movlb	15	; () banked
  4746  001B0A  9D1D               	bcf	29,6,b	;volatile
  4747  001B0C                     l452:
  4748                           
  4749                           ; BSR set to: 15
  4750                           ;CANlib.h: 733: if (mask & 0x00100000)
  4751  001B0C  A821               	btfss	CANSetMask@mask+2,4,c
  4752  001B0E  D003               	goto	l453
  4753                           
  4754                           ; BSR set to: 15
  4755                           ;CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4756  001B10  010F               	movlb	15	; () banked
  4757  001B12  8F1D               	bsf	29,7,b	;volatile
  4758  001B14  D002               	goto	l4001
  4759  001B16                     l453:
  4760                           
  4761                           ; BSR set to: 15
  4762                           ;CANlib.h: 735: else
  4763                           ;CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4764  001B16  010F               	movlb	15	; () banked
  4765  001B18  9F1D               	bcf	29,7,b	;volatile
  4766  001B1A                     l4001:
  4767                           
  4768                           ; BSR set to: 15
  4769                           ;CANlib.h: 738: tamp = (mask >> 21);
  4770  001B1A  C01F  F0AB         	movff	CANSetMask@mask,??_CANSetMask
  4771  001B1E  C020  F0AC         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4772  001B22  C021  F0AD         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4773  001B26  C022  F0AE         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4774  001B2A  0E16               	movlw	22
  4775  001B2C  D006               	goto	u4670
  4776  001B2E                     u4675:
  4777  001B2E  0100               	movlb	0	; () banked
  4778  001B30  90D8               	bcf	status,0,c
  4779  001B32  33AE               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4780  001B34  33AD               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4781  001B36  33AC               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4782  001B38  33AB               	rrcf	??_CANSetMask& (0+255),f,b
  4783  001B3A                     u4670:
  4784  001B3A  2EE8               	decfsz	wreg,f,c
  4785  001B3C  D7F8               	goto	u4675
  4786  001B3E  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  4787  001B42  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4788  001B46  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4789  001B4A  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4790                           
  4791                           ; BSR set to: 0
  4792                           ;CANlib.h: 739: tamp = tamp & 0x000000FF;
  4793  001B4E  0100               	movlb	0	; () banked
  4794  001B50  51B0               	movf	CANSetMask@tamp& (0+255),w,b
  4795  001B52  0100               	movlb	0	; () banked
  4796  001B54  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4797  001B56  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4798  001B58  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4799  001B5A  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4803  001B5C  C0B0  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4804  001B60  0012               	return	
  4805  001B62                     __end_of_CANSetMask:
  4806                           	opt stack 0
  4807                           tblptru	equ	0xFF8
  4808                           tblptrh	equ	0xFF7
  4809                           tblptrl	equ	0xFF6
  4810                           tablat	equ	0xFF5
  4811                           prodh	equ	0xFF4
  4812                           prodl	equ	0xFF3
  4813                           intcon	equ	0xFF2
  4814                           postinc0	equ	0xFEE
  4815                           wreg	equ	0xFE8
  4816                           postdec1	equ	0xFE5
  4817                           fsr1l	equ	0xFE1
  4818                           indf2	equ	0xFDF
  4819                           fsr2h	equ	0xFDA
  4820                           fsr2l	equ	0xFD9
  4821                           status	equ	0xFD8
  4822                           
  4823 ;; *************** function _CANSetFilter *****************
  4824 ;; Defined at:
  4825 ;;		line 748 in file "CANlib.h"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;  numBuffer       1    wreg     enum E16881
  4828 ;;  filter          4   30[COMRAM] unsigned long 
  4829 ;;  type            1   34[COMRAM] enum E16844
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  numBuffer       1    4[BANK0 ] enum E16881
  4832 ;;  tamp            4    5[BANK0 ] unsigned long 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;		None               void
  4835 ;; Registers used:
  4836 ;;		wreg, status,2, status,0
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4842 ;;      Params:         5       0       0       0
  4843 ;;      Locals:         0       5       0       0
  4844 ;;      Temps:          0       4       0       0
  4845 ;;      Totals:         5       9       0       0
  4846 ;;Total ram usage:       14 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    2
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_CANInitialize
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           	psect	text14
  4857  00013E                     __ptext14:
  4858                           	opt stack 0
  4859  00013E                     _CANSetFilter:
  4860                           	opt stack 26
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;incstack = 0
  4864                           ;CANSetFilter@numBuffer stored from wreg
  4865  00013E  0100               	movlb	0	; () banked
  4866  000140  6FAF               	movwf	CANSetFilter@numBuffer& (0+255),b
  4867                           
  4868                           ;CANlib.h: 750: unsigned long tamp;
  4869                           ;CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4870  000142  0100               	movlb	0	; () banked
  4871  000144  51AF               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4872  000146  0100               	movlb	0	; () banked
  4873  000148  A4D8               	btfss	status,2,c
  4874  00014A  D053               	goto	l4025
  4875                           
  4876                           ; BSR set to: 0
  4877  00014C  2823               	incf	CANSetFilter@type,w,c
  4878  00014E  A4D8               	btfss	status,2,c
  4879  000150  D050               	goto	l4025
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;CANlib.h: 753: {
  4883                           ;CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4884  000152  010F               	movlb	15	; () banked
  4885  000154  9701               	bcf	1,3,b	;volatile
  4886                           
  4887                           ; BSR set to: 15
  4888                           ;CANlib.h: 756: tamp = (filter >> 3);
  4889  000156  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  4890  00015A  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4891  00015E  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4892  000162  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4893  000166  0E04               	movlw	4
  4894  000168  D006               	goto	u4700
  4895  00016A                     u4705:
  4896  00016A  0100               	movlb	0	; () banked
  4897  00016C  90D8               	bcf	status,0,c
  4898  00016E  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4899  000170  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4900  000172  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4901  000174  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  4902  000176                     u4700:
  4903  000176  2EE8               	decfsz	wreg,f,c
  4904  000178  D7F8               	goto	u4705
  4905  00017A  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  4906  00017E  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4907  000182  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4908  000186  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;CANlib.h: 757: tamp = tamp & 0x000000FF;
  4912  00018A  0100               	movlb	0	; () banked
  4913  00018C  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  4914  00018E  0100               	movlb	0	; () banked
  4915  000190  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4916  000192  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4917  000194  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4918  000196  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4922  000198  C0B0  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;CANlib.h: 760: tamp = filter & 0x00000007;
  4926  00019C  0E07               	movlw	7
  4927  00019E  141F               	andwf	CANSetFilter@filter,w,c
  4928  0001A0  0100               	movlb	0	; () banked
  4929  0001A2  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4930  0001A4  0E00               	movlw	0
  4931  0001A6  1420               	andwf	CANSetFilter@filter+1,w,c
  4932  0001A8  0100               	movlb	0	; () banked
  4933  0001AA  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4934  0001AC  0E00               	movlw	0
  4935  0001AE  1421               	andwf	CANSetFilter@filter+2,w,c
  4936  0001B0  0100               	movlb	0	; () banked
  4937  0001B2  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4938  0001B4  0E00               	movlw	0
  4939  0001B6  1422               	andwf	CANSetFilter@filter+3,w,c
  4940  0001B8  0100               	movlb	0	; () banked
  4941  0001BA  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;CANlib.h: 761: tamp = tamp << 5;
  4945  0001BC  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  4946  0001C0  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4947  0001C4  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4948  0001C8  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4949  0001CC  0E05               	movlw	5
  4950  0001CE                     u4715:
  4951  0001CE  90D8               	bcf	status,0,c
  4952  0001D0  0100               	movlb	0	; () banked
  4953  0001D2  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  4954  0001D4  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4955  0001D6  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4956  0001D8  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4957  0001DA  2EE8               	decfsz	wreg,f,c
  4958  0001DC  D7F8               	goto	u4715
  4959  0001DE  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  4960  0001E2  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4961  0001E6  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4962  0001EA  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4966  0001EE  C0B0  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4967  0001F2                     l4025:
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;CANlib.h: 763: }
  4971                           ;CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4972  0001F2  0100               	movlb	0	; () banked
  4973  0001F4  05AF               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4974  0001F6  A4D8               	btfss	status,2,c
  4975  0001F8  D053               	goto	l4043
  4976                           
  4977                           ; BSR set to: 0
  4978  0001FA  2823               	incf	CANSetFilter@type,w,c
  4979  0001FC  A4D8               	btfss	status,2,c
  4980  0001FE  D050               	goto	l4043
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;CANlib.h: 766: {
  4984                           ;CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4985  000200  010F               	movlb	15	; () banked
  4986  000202  9705               	bcf	5,3,b	;volatile
  4987                           
  4988                           ; BSR set to: 15
  4989                           ;CANlib.h: 769: tamp = (filter >> 3);
  4990  000204  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  4991  000208  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4992  00020C  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4993  000210  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4994  000214  0E04               	movlw	4
  4995  000216  D006               	goto	u4740
  4996  000218                     u4745:
  4997  000218  0100               	movlb	0	; () banked
  4998  00021A  90D8               	bcf	status,0,c
  4999  00021C  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5000  00021E  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5001  000220  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5002  000222  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  5003  000224                     u4740:
  5004  000224  2EE8               	decfsz	wreg,f,c
  5005  000226  D7F8               	goto	u4745
  5006  000228  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5007  00022C  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5008  000230  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5009  000234  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;CANlib.h: 770: tamp = tamp & 0x000000FF;
  5013  000238  0100               	movlb	0	; () banked
  5014  00023A  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  5015  00023C  0100               	movlb	0	; () banked
  5016  00023E  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5017  000240  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5018  000242  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5019  000244  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  5023  000246  C0B0  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;CANlib.h: 773: tamp = filter & 0x00000007;
  5027  00024A  0E07               	movlw	7
  5028  00024C  141F               	andwf	CANSetFilter@filter,w,c
  5029  00024E  0100               	movlb	0	; () banked
  5030  000250  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5031  000252  0E00               	movlw	0
  5032  000254  1420               	andwf	CANSetFilter@filter+1,w,c
  5033  000256  0100               	movlb	0	; () banked
  5034  000258  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5035  00025A  0E00               	movlw	0
  5036  00025C  1421               	andwf	CANSetFilter@filter+2,w,c
  5037  00025E  0100               	movlb	0	; () banked
  5038  000260  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5039  000262  0E00               	movlw	0
  5040  000264  1422               	andwf	CANSetFilter@filter+3,w,c
  5041  000266  0100               	movlb	0	; () banked
  5042  000268  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;CANlib.h: 774: tamp = tamp << 5;
  5046  00026A  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  5047  00026E  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5048  000272  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5049  000276  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5050  00027A  0E05               	movlw	5
  5051  00027C                     u4755:
  5052  00027C  90D8               	bcf	status,0,c
  5053  00027E  0100               	movlb	0	; () banked
  5054  000280  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  5055  000282  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5056  000284  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5057  000286  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5058  000288  2EE8               	decfsz	wreg,f,c
  5059  00028A  D7F8               	goto	u4755
  5060  00028C  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5061  000290  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5062  000294  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5063  000298  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  5067  00029C  C0B0  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  5068  0002A0                     l4043:
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;CANlib.h: 776: }
  5072                           ;CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  5073  0002A0  0E02               	movlw	2
  5074  0002A2  0100               	movlb	0	; () banked
  5075  0002A4  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5076  0002A6  A4D8               	btfss	status,2,c
  5077  0002A8  D053               	goto	l4061
  5078                           
  5079                           ; BSR set to: 0
  5080  0002AA  2823               	incf	CANSetFilter@type,w,c
  5081  0002AC  A4D8               	btfss	status,2,c
  5082  0002AE  D050               	goto	l4061
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;CANlib.h: 779: {
  5086                           ;CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  5087  0002B0  010F               	movlb	15	; () banked
  5088  0002B2  9709               	bcf	9,3,b	;volatile
  5089                           
  5090                           ; BSR set to: 15
  5091                           ;CANlib.h: 782: tamp = (filter >> 3);
  5092  0002B4  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  5093  0002B8  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5094  0002BC  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5095  0002C0  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5096  0002C4  0E04               	movlw	4
  5097  0002C6  D006               	goto	u4780
  5098  0002C8                     u4785:
  5099  0002C8  0100               	movlb	0	; () banked
  5100  0002CA  90D8               	bcf	status,0,c
  5101  0002CC  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5102  0002CE  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5103  0002D0  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5104  0002D2  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  5105  0002D4                     u4780:
  5106  0002D4  2EE8               	decfsz	wreg,f,c
  5107  0002D6  D7F8               	goto	u4785
  5108  0002D8  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5109  0002DC  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5110  0002E0  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5111  0002E4  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;CANlib.h: 783: tamp = tamp & 0x000000FF;
  5115  0002E8  0100               	movlb	0	; () banked
  5116  0002EA  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  5117  0002EC  0100               	movlb	0	; () banked
  5118  0002EE  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5119  0002F0  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5120  0002F2  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5121  0002F4  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  5125  0002F6  C0B0  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;CANlib.h: 786: tamp = filter & 0x00000007;
  5129  0002FA  0E07               	movlw	7
  5130  0002FC  141F               	andwf	CANSetFilter@filter,w,c
  5131  0002FE  0100               	movlb	0	; () banked
  5132  000300  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5133  000302  0E00               	movlw	0
  5134  000304  1420               	andwf	CANSetFilter@filter+1,w,c
  5135  000306  0100               	movlb	0	; () banked
  5136  000308  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5137  00030A  0E00               	movlw	0
  5138  00030C  1421               	andwf	CANSetFilter@filter+2,w,c
  5139  00030E  0100               	movlb	0	; () banked
  5140  000310  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5141  000312  0E00               	movlw	0
  5142  000314  1422               	andwf	CANSetFilter@filter+3,w,c
  5143  000316  0100               	movlb	0	; () banked
  5144  000318  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;CANlib.h: 787: tamp = tamp << 5;
  5148  00031A  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  5149  00031E  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5150  000322  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5151  000326  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5152  00032A  0E05               	movlw	5
  5153  00032C                     u4795:
  5154  00032C  90D8               	bcf	status,0,c
  5155  00032E  0100               	movlb	0	; () banked
  5156  000330  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  5157  000332  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5158  000334  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5159  000336  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5160  000338  2EE8               	decfsz	wreg,f,c
  5161  00033A  D7F8               	goto	u4795
  5162  00033C  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5163  000340  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5164  000344  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5165  000348  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  5169  00034C  C0B0  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  5170  000350                     l4061:
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;CANlib.h: 789: }
  5174                           ;CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  5175  000350  0E03               	movlw	3
  5176  000352  0100               	movlb	0	; () banked
  5177  000354  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5178  000356  A4D8               	btfss	status,2,c
  5179  000358  D053               	goto	l4079
  5180                           
  5181                           ; BSR set to: 0
  5182  00035A  2823               	incf	CANSetFilter@type,w,c
  5183  00035C  A4D8               	btfss	status,2,c
  5184  00035E  D050               	goto	l4079
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;CANlib.h: 792: {
  5188                           ;CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  5189  000360  010F               	movlb	15	; () banked
  5190  000362  970D               	bcf	13,3,b	;volatile
  5191                           
  5192                           ; BSR set to: 15
  5193                           ;CANlib.h: 795: tamp = (filter >> 3);
  5194  000364  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  5195  000368  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5196  00036C  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5197  000370  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5198  000374  0E04               	movlw	4
  5199  000376  D006               	goto	u4820
  5200  000378                     u4825:
  5201  000378  0100               	movlb	0	; () banked
  5202  00037A  90D8               	bcf	status,0,c
  5203  00037C  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5204  00037E  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5205  000380  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5206  000382  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  5207  000384                     u4820:
  5208  000384  2EE8               	decfsz	wreg,f,c
  5209  000386  D7F8               	goto	u4825
  5210  000388  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5211  00038C  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5212  000390  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5213  000394  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;CANlib.h: 796: tamp = tamp & 0x000000FF;
  5217  000398  0100               	movlb	0	; () banked
  5218  00039A  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  5219  00039C  0100               	movlb	0	; () banked
  5220  00039E  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5221  0003A0  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5222  0003A2  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5223  0003A4  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  5227  0003A6  C0B0  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;CANlib.h: 799: tamp = filter & 0x00000007;
  5231  0003AA  0E07               	movlw	7
  5232  0003AC  141F               	andwf	CANSetFilter@filter,w,c
  5233  0003AE  0100               	movlb	0	; () banked
  5234  0003B0  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5235  0003B2  0E00               	movlw	0
  5236  0003B4  1420               	andwf	CANSetFilter@filter+1,w,c
  5237  0003B6  0100               	movlb	0	; () banked
  5238  0003B8  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5239  0003BA  0E00               	movlw	0
  5240  0003BC  1421               	andwf	CANSetFilter@filter+2,w,c
  5241  0003BE  0100               	movlb	0	; () banked
  5242  0003C0  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5243  0003C2  0E00               	movlw	0
  5244  0003C4  1422               	andwf	CANSetFilter@filter+3,w,c
  5245  0003C6  0100               	movlb	0	; () banked
  5246  0003C8  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;CANlib.h: 800: tamp = tamp << 5;
  5250  0003CA  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  5251  0003CE  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5252  0003D2  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5253  0003D6  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5254  0003DA  0E05               	movlw	5
  5255  0003DC                     u4835:
  5256  0003DC  90D8               	bcf	status,0,c
  5257  0003DE  0100               	movlb	0	; () banked
  5258  0003E0  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  5259  0003E2  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5260  0003E4  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5261  0003E6  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5262  0003E8  2EE8               	decfsz	wreg,f,c
  5263  0003EA  D7F8               	goto	u4835
  5264  0003EC  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5265  0003F0  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5266  0003F4  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5267  0003F8  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5271  0003FC  C0B0  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5272  000400                     l4079:
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;CANlib.h: 802: }
  5276                           ;CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5277  000400  0E04               	movlw	4
  5278  000402  0100               	movlb	0	; () banked
  5279  000404  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5280  000406  A4D8               	btfss	status,2,c
  5281  000408  D053               	goto	l4097
  5282                           
  5283                           ; BSR set to: 0
  5284  00040A  2823               	incf	CANSetFilter@type,w,c
  5285  00040C  A4D8               	btfss	status,2,c
  5286  00040E  D050               	goto	l4097
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;CANlib.h: 805: {
  5290                           ;CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5291  000410  010F               	movlb	15	; () banked
  5292  000412  9711               	bcf	17,3,b	;volatile
  5293                           
  5294                           ; BSR set to: 15
  5295                           ;CANlib.h: 808: tamp = (filter >> 3);
  5296  000414  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  5297  000418  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5298  00041C  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5299  000420  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5300  000424  0E04               	movlw	4
  5301  000426  D006               	goto	u4860
  5302  000428                     u4865:
  5303  000428  0100               	movlb	0	; () banked
  5304  00042A  90D8               	bcf	status,0,c
  5305  00042C  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5306  00042E  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5307  000430  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5308  000432  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  5309  000434                     u4860:
  5310  000434  2EE8               	decfsz	wreg,f,c
  5311  000436  D7F8               	goto	u4865
  5312  000438  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5313  00043C  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5314  000440  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5315  000444  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5316                           
  5317                           ; BSR set to: 0
  5318                           ;CANlib.h: 809: tamp = tamp & 0x000000FF;
  5319  000448  0100               	movlb	0	; () banked
  5320  00044A  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  5321  00044C  0100               	movlb	0	; () banked
  5322  00044E  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5323  000450  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5324  000452  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5325  000454  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5326                           
  5327                           ; BSR set to: 0
  5328                           ;CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5329  000456  C0B0  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5330                           
  5331                           ; BSR set to: 0
  5332                           ;CANlib.h: 812: tamp = filter & 0x00000007;
  5333  00045A  0E07               	movlw	7
  5334  00045C  141F               	andwf	CANSetFilter@filter,w,c
  5335  00045E  0100               	movlb	0	; () banked
  5336  000460  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5337  000462  0E00               	movlw	0
  5338  000464  1420               	andwf	CANSetFilter@filter+1,w,c
  5339  000466  0100               	movlb	0	; () banked
  5340  000468  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5341  00046A  0E00               	movlw	0
  5342  00046C  1421               	andwf	CANSetFilter@filter+2,w,c
  5343  00046E  0100               	movlb	0	; () banked
  5344  000470  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5345  000472  0E00               	movlw	0
  5346  000474  1422               	andwf	CANSetFilter@filter+3,w,c
  5347  000476  0100               	movlb	0	; () banked
  5348  000478  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;CANlib.h: 813: tamp = tamp << 5;
  5352  00047A  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  5353  00047E  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5354  000482  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5355  000486  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5356  00048A  0E05               	movlw	5
  5357  00048C                     u4875:
  5358  00048C  90D8               	bcf	status,0,c
  5359  00048E  0100               	movlb	0	; () banked
  5360  000490  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  5361  000492  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5362  000494  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5363  000496  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5364  000498  2EE8               	decfsz	wreg,f,c
  5365  00049A  D7F8               	goto	u4875
  5366  00049C  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5367  0004A0  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5368  0004A4  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5369  0004A8  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5373  0004AC  C0B0  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5374  0004B0                     l4097:
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;CANlib.h: 815: }
  5378                           ;CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5379  0004B0  0E05               	movlw	5
  5380  0004B2  0100               	movlb	0	; () banked
  5381  0004B4  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5382  0004B6  A4D8               	btfss	status,2,c
  5383  0004B8  D053               	goto	l4115
  5384                           
  5385                           ; BSR set to: 0
  5386  0004BA  2823               	incf	CANSetFilter@type,w,c
  5387  0004BC  A4D8               	btfss	status,2,c
  5388  0004BE  D050               	goto	l4115
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;CANlib.h: 818: {
  5392                           ;CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5393  0004C0  010F               	movlb	15	; () banked
  5394  0004C2  9715               	bcf	21,3,b	;volatile
  5395                           
  5396                           ; BSR set to: 15
  5397                           ;CANlib.h: 821: tamp = (filter >> 3);
  5398  0004C4  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  5399  0004C8  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5400  0004CC  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5401  0004D0  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5402  0004D4  0E04               	movlw	4
  5403  0004D6  D006               	goto	u4900
  5404  0004D8                     u4905:
  5405  0004D8  0100               	movlb	0	; () banked
  5406  0004DA  90D8               	bcf	status,0,c
  5407  0004DC  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5408  0004DE  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5409  0004E0  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5410  0004E2  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  5411  0004E4                     u4900:
  5412  0004E4  2EE8               	decfsz	wreg,f,c
  5413  0004E6  D7F8               	goto	u4905
  5414  0004E8  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5415  0004EC  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5416  0004F0  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5417  0004F4  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;CANlib.h: 822: tamp = tamp & 0x000000FF;
  5421  0004F8  0100               	movlb	0	; () banked
  5422  0004FA  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  5423  0004FC  0100               	movlb	0	; () banked
  5424  0004FE  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5425  000500  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5426  000502  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5427  000504  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5431  000506  C0B0  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5432                           
  5433                           ; BSR set to: 0
  5434                           ;CANlib.h: 825: tamp = filter & 0x00000007;
  5435  00050A  0E07               	movlw	7
  5436  00050C  141F               	andwf	CANSetFilter@filter,w,c
  5437  00050E  0100               	movlb	0	; () banked
  5438  000510  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5439  000512  0E00               	movlw	0
  5440  000514  1420               	andwf	CANSetFilter@filter+1,w,c
  5441  000516  0100               	movlb	0	; () banked
  5442  000518  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5443  00051A  0E00               	movlw	0
  5444  00051C  1421               	andwf	CANSetFilter@filter+2,w,c
  5445  00051E  0100               	movlb	0	; () banked
  5446  000520  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5447  000522  0E00               	movlw	0
  5448  000524  1422               	andwf	CANSetFilter@filter+3,w,c
  5449  000526  0100               	movlb	0	; () banked
  5450  000528  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;CANlib.h: 826: tamp = tamp << 5;
  5454  00052A  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  5455  00052E  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5456  000532  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5457  000536  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5458  00053A  0E05               	movlw	5
  5459  00053C                     u4915:
  5460  00053C  90D8               	bcf	status,0,c
  5461  00053E  0100               	movlb	0	; () banked
  5462  000540  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  5463  000542  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5464  000544  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5465  000546  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5466  000548  2EE8               	decfsz	wreg,f,c
  5467  00054A  D7F8               	goto	u4915
  5468  00054C  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5469  000550  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5470  000554  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5471  000558  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5475  00055C  C0B0  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5476  000560                     l4115:
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;CANlib.h: 828: }
  5480                           ;CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5481  000560  0100               	movlb	0	; () banked
  5482  000562  51AF               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5483  000564  0100               	movlb	0	; () banked
  5484  000566  A4D8               	btfss	status,2,c
  5485  000568  D07E               	goto	l4149
  5486                           
  5487                           ; BSR set to: 0
  5488  00056A  0EF7               	movlw	247
  5489  00056C  1823               	xorwf	CANSetFilter@type,w,c
  5490  00056E  A4D8               	btfss	status,2,c
  5491  000570  D07A               	goto	l4149
  5492                           
  5493                           ; BSR set to: 0
  5494                           ;CANlib.h: 832: {
  5495                           ;CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5496  000572  010F               	movlb	15	; () banked
  5497  000574  8701               	bsf	1,3,b	;volatile
  5498                           
  5499                           ; BSR set to: 15
  5500                           ;CANlib.h: 835: tamp = filter & 0x000000FF;
  5501  000576  501F               	movf	CANSetFilter@filter,w,c
  5502  000578  0100               	movlb	0	; () banked
  5503  00057A  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5504  00057C  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5505  00057E  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5506  000580  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5510  000582  C0B0  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5511                           
  5512                           ; BSR set to: 0
  5513                           ;CANlib.h: 838: tamp = filter & 0x0000FF00;
  5514  000586  0E00               	movlw	0
  5515  000588  141F               	andwf	CANSetFilter@filter,w,c
  5516  00058A  0100               	movlb	0	; () banked
  5517  00058C  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5518  00058E  0EFF               	movlw	255
  5519  000590  1420               	andwf	CANSetFilter@filter+1,w,c
  5520  000592  0100               	movlb	0	; () banked
  5521  000594  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5522  000596  0E00               	movlw	0
  5523  000598  1421               	andwf	CANSetFilter@filter+2,w,c
  5524  00059A  0100               	movlb	0	; () banked
  5525  00059C  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5526  00059E  0E00               	movlw	0
  5527  0005A0  1422               	andwf	CANSetFilter@filter+3,w,c
  5528  0005A2  0100               	movlb	0	; () banked
  5529  0005A4  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;CANlib.h: 839: tamp = tamp >> 8;
  5533  0005A6  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  5534  0005AA  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5535  0005AE  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5536  0005B2  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5537  0005B6  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  5538  0005BA  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5539  0005BE  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5540  0005C2  0100               	movlb	0	; () banked
  5541  0005C4  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  5542  0005C6  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5543  0005CA  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5544  0005CE  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5545  0005D2  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5549  0005D6  C0B0  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;CANlib.h: 842: if (filter & 0x00010000)
  5553  0005DA  A021               	btfss	CANSetFilter@filter+2,0,c
  5554  0005DC  D003               	goto	l465
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5558  0005DE  010F               	movlb	15	; () banked
  5559  0005E0  8101               	bsf	1,0,b	;volatile
  5560  0005E2  D002               	goto	l466
  5561  0005E4                     l465:
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;CANlib.h: 844: else
  5565                           ;CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5566  0005E4  010F               	movlb	15	; () banked
  5567  0005E6  9101               	bcf	1,0,b	;volatile
  5568  0005E8                     l466:
  5569                           
  5570                           ; BSR set to: 15
  5571                           ;CANlib.h: 847: if (filter & 0x00020000)
  5572  0005E8  A221               	btfss	CANSetFilter@filter+2,1,c
  5573  0005EA  D003               	goto	l467
  5574                           
  5575                           ; BSR set to: 15
  5576                           ;CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5577  0005EC  010F               	movlb	15	; () banked
  5578  0005EE  8301               	bsf	1,1,b	;volatile
  5579  0005F0  D002               	goto	l468
  5580  0005F2                     l467:
  5581                           
  5582                           ; BSR set to: 15
  5583                           ;CANlib.h: 849: else
  5584                           ;CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5585  0005F2  010F               	movlb	15	; () banked
  5586  0005F4  9301               	bcf	1,1,b	;volatile
  5587  0005F6                     l468:
  5588                           
  5589                           ; BSR set to: 15
  5590                           ;CANlib.h: 852: if (filter & 0x00040000)
  5591  0005F6  A421               	btfss	CANSetFilter@filter+2,2,c
  5592  0005F8  D003               	goto	l469
  5593                           
  5594                           ; BSR set to: 15
  5595                           ;CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5596  0005FA  010F               	movlb	15	; () banked
  5597  0005FC  8B01               	bsf	1,5,b	;volatile
  5598  0005FE  D002               	goto	l470
  5599  000600                     l469:
  5600                           
  5601                           ; BSR set to: 15
  5602                           ;CANlib.h: 854: else
  5603                           ;CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5604  000600  010F               	movlb	15	; () banked
  5605  000602  9B01               	bcf	1,5,b	;volatile
  5606  000604                     l470:
  5607                           
  5608                           ; BSR set to: 15
  5609                           ;CANlib.h: 857: if (filter & 0x00080000)
  5610  000604  A621               	btfss	CANSetFilter@filter+2,3,c
  5611  000606  D003               	goto	l471
  5612                           
  5613                           ; BSR set to: 15
  5614                           ;CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5615  000608  010F               	movlb	15	; () banked
  5616  00060A  8D01               	bsf	1,6,b	;volatile
  5617  00060C  D002               	goto	l472
  5618  00060E                     l471:
  5619                           
  5620                           ; BSR set to: 15
  5621                           ;CANlib.h: 859: else
  5622                           ;CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5623  00060E  010F               	movlb	15	; () banked
  5624  000610  9D01               	bcf	1,6,b	;volatile
  5625  000612                     l472:
  5626                           
  5627                           ; BSR set to: 15
  5628                           ;CANlib.h: 862: if (filter & 0x00100000)
  5629  000612  A821               	btfss	CANSetFilter@filter+2,4,c
  5630  000614  D003               	goto	l473
  5631                           
  5632                           ; BSR set to: 15
  5633                           ;CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5634  000616  010F               	movlb	15	; () banked
  5635  000618  8F01               	bsf	1,7,b	;volatile
  5636  00061A  D002               	goto	l4143
  5637  00061C                     l473:
  5638                           
  5639                           ; BSR set to: 15
  5640                           ;CANlib.h: 864: else
  5641                           ;CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5642  00061C  010F               	movlb	15	; () banked
  5643  00061E  9F01               	bcf	1,7,b	;volatile
  5644  000620                     l4143:
  5645                           
  5646                           ; BSR set to: 15
  5647                           ;CANlib.h: 867: tamp = (filter >> 21);
  5648  000620  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  5649  000624  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5650  000628  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5651  00062C  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5652  000630  0E16               	movlw	22
  5653  000632  D006               	goto	u4990
  5654  000634                     u4995:
  5655  000634  0100               	movlb	0	; () banked
  5656  000636  90D8               	bcf	status,0,c
  5657  000638  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5658  00063A  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5659  00063C  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5660  00063E  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  5661  000640                     u4990:
  5662  000640  2EE8               	decfsz	wreg,f,c
  5663  000642  D7F8               	goto	u4995
  5664  000644  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5665  000648  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5666  00064C  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5667  000650  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;CANlib.h: 868: tamp = tamp & 0x000000FF;
  5671  000654  0100               	movlb	0	; () banked
  5672  000656  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  5673  000658  0100               	movlb	0	; () banked
  5674  00065A  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5675  00065C  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5676  00065E  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5677  000660  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5678                           
  5679                           ; BSR set to: 0
  5680                           ;CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5681  000662  C0B0  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5682  000666                     l4149:
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;CANlib.h: 870: }
  5686                           ;CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5687  000666  0100               	movlb	0	; () banked
  5688  000668  05AF               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5689  00066A  A4D8               	btfss	status,2,c
  5690  00066C  D07E               	goto	l4183
  5691                           
  5692                           ; BSR set to: 0
  5693  00066E  0EF7               	movlw	247
  5694  000670  1823               	xorwf	CANSetFilter@type,w,c
  5695  000672  A4D8               	btfss	status,2,c
  5696  000674  D07A               	goto	l4183
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;CANlib.h: 873: {
  5700                           ;CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5701  000676  010F               	movlb	15	; () banked
  5702  000678  8705               	bsf	5,3,b	;volatile
  5703                           
  5704                           ; BSR set to: 15
  5705                           ;CANlib.h: 876: tamp = filter & 0x000000FF;
  5706  00067A  501F               	movf	CANSetFilter@filter,w,c
  5707  00067C  0100               	movlb	0	; () banked
  5708  00067E  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5709  000680  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5710  000682  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5711  000684  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5712                           
  5713                           ; BSR set to: 0
  5714                           ;CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5715  000686  C0B0  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;CANlib.h: 879: tamp = filter & 0x0000FF00;
  5719  00068A  0E00               	movlw	0
  5720  00068C  141F               	andwf	CANSetFilter@filter,w,c
  5721  00068E  0100               	movlb	0	; () banked
  5722  000690  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5723  000692  0EFF               	movlw	255
  5724  000694  1420               	andwf	CANSetFilter@filter+1,w,c
  5725  000696  0100               	movlb	0	; () banked
  5726  000698  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5727  00069A  0E00               	movlw	0
  5728  00069C  1421               	andwf	CANSetFilter@filter+2,w,c
  5729  00069E  0100               	movlb	0	; () banked
  5730  0006A0  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5731  0006A2  0E00               	movlw	0
  5732  0006A4  1422               	andwf	CANSetFilter@filter+3,w,c
  5733  0006A6  0100               	movlb	0	; () banked
  5734  0006A8  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5735                           
  5736                           ; BSR set to: 0
  5737                           ;CANlib.h: 880: tamp = tamp >> 8;
  5738  0006AA  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  5739  0006AE  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5740  0006B2  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5741  0006B6  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5742  0006BA  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  5743  0006BE  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5744  0006C2  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5745  0006C6  0100               	movlb	0	; () banked
  5746  0006C8  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  5747  0006CA  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5748  0006CE  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5749  0006D2  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5750  0006D6  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5751                           
  5752                           ; BSR set to: 0
  5753                           ;CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5754  0006DA  C0B0  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;CANlib.h: 883: if (filter & 0x00010000)
  5758  0006DE  A021               	btfss	CANSetFilter@filter+2,0,c
  5759  0006E0  D003               	goto	l476
  5760                           
  5761                           ; BSR set to: 0
  5762                           ;CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5763  0006E2  010F               	movlb	15	; () banked
  5764  0006E4  8105               	bsf	5,0,b	;volatile
  5765  0006E6  D002               	goto	l477
  5766  0006E8                     l476:
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;CANlib.h: 885: else
  5770                           ;CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5771  0006E8  010F               	movlb	15	; () banked
  5772  0006EA  9105               	bcf	5,0,b	;volatile
  5773  0006EC                     l477:
  5774                           
  5775                           ; BSR set to: 15
  5776                           ;CANlib.h: 888: if (filter & 0x00020000)
  5777  0006EC  A221               	btfss	CANSetFilter@filter+2,1,c
  5778  0006EE  D003               	goto	l478
  5779                           
  5780                           ; BSR set to: 15
  5781                           ;CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5782  0006F0  010F               	movlb	15	; () banked
  5783  0006F2  8305               	bsf	5,1,b	;volatile
  5784  0006F4  D002               	goto	l479
  5785  0006F6                     l478:
  5786                           
  5787                           ; BSR set to: 15
  5788                           ;CANlib.h: 890: else
  5789                           ;CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5790  0006F6  010F               	movlb	15	; () banked
  5791  0006F8  9305               	bcf	5,1,b	;volatile
  5792  0006FA                     l479:
  5793                           
  5794                           ; BSR set to: 15
  5795                           ;CANlib.h: 893: if (filter & 0x00040000)
  5796  0006FA  A421               	btfss	CANSetFilter@filter+2,2,c
  5797  0006FC  D003               	goto	l480
  5798                           
  5799                           ; BSR set to: 15
  5800                           ;CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5801  0006FE  010F               	movlb	15	; () banked
  5802  000700  8B05               	bsf	5,5,b	;volatile
  5803  000702  D002               	goto	l481
  5804  000704                     l480:
  5805                           
  5806                           ; BSR set to: 15
  5807                           ;CANlib.h: 895: else
  5808                           ;CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5809  000704  010F               	movlb	15	; () banked
  5810  000706  9B05               	bcf	5,5,b	;volatile
  5811  000708                     l481:
  5812                           
  5813                           ; BSR set to: 15
  5814                           ;CANlib.h: 898: if (filter & 0x00080000)
  5815  000708  A621               	btfss	CANSetFilter@filter+2,3,c
  5816  00070A  D003               	goto	l482
  5817                           
  5818                           ; BSR set to: 15
  5819                           ;CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5820  00070C  010F               	movlb	15	; () banked
  5821  00070E  8D05               	bsf	5,6,b	;volatile
  5822  000710  D002               	goto	l483
  5823  000712                     l482:
  5824                           
  5825                           ; BSR set to: 15
  5826                           ;CANlib.h: 900: else
  5827                           ;CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5828  000712  010F               	movlb	15	; () banked
  5829  000714  9D05               	bcf	5,6,b	;volatile
  5830  000716                     l483:
  5831                           
  5832                           ; BSR set to: 15
  5833                           ;CANlib.h: 903: if (filter & 0x00100000)
  5834  000716  A821               	btfss	CANSetFilter@filter+2,4,c
  5835  000718  D003               	goto	l484
  5836                           
  5837                           ; BSR set to: 15
  5838                           ;CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5839  00071A  010F               	movlb	15	; () banked
  5840  00071C  8F05               	bsf	5,7,b	;volatile
  5841  00071E  D002               	goto	l4177
  5842  000720                     l484:
  5843                           
  5844                           ; BSR set to: 15
  5845                           ;CANlib.h: 905: else
  5846                           ;CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5847  000720  010F               	movlb	15	; () banked
  5848  000722  9F05               	bcf	5,7,b	;volatile
  5849  000724                     l4177:
  5850                           
  5851                           ; BSR set to: 15
  5852                           ;CANlib.h: 908: tamp = (filter >> 21);
  5853  000724  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  5854  000728  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5855  00072C  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5856  000730  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5857  000734  0E16               	movlw	22
  5858  000736  D006               	goto	u5070
  5859  000738                     u5075:
  5860  000738  0100               	movlb	0	; () banked
  5861  00073A  90D8               	bcf	status,0,c
  5862  00073C  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5863  00073E  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5864  000740  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5865  000742  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  5866  000744                     u5070:
  5867  000744  2EE8               	decfsz	wreg,f,c
  5868  000746  D7F8               	goto	u5075
  5869  000748  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5870  00074C  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5871  000750  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5872  000754  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;CANlib.h: 909: tamp = tamp & 0x000000FF;
  5876  000758  0100               	movlb	0	; () banked
  5877  00075A  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  5878  00075C  0100               	movlb	0	; () banked
  5879  00075E  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5880  000760  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5881  000762  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5882  000764  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5883                           
  5884                           ; BSR set to: 0
  5885                           ;CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5886  000766  C0B0  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5887  00076A                     l4183:
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;CANlib.h: 911: }
  5891                           ;CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5892  00076A  0E02               	movlw	2
  5893  00076C  0100               	movlb	0	; () banked
  5894  00076E  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5895  000770  A4D8               	btfss	status,2,c
  5896  000772  D07E               	goto	l4217
  5897                           
  5898                           ; BSR set to: 0
  5899  000774  0EF7               	movlw	247
  5900  000776  1823               	xorwf	CANSetFilter@type,w,c
  5901  000778  A4D8               	btfss	status,2,c
  5902  00077A  D07A               	goto	l4217
  5903                           
  5904                           ; BSR set to: 0
  5905                           ;CANlib.h: 915: {
  5906                           ;CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5907  00077C  010F               	movlb	15	; () banked
  5908  00077E  8709               	bsf	9,3,b	;volatile
  5909                           
  5910                           ; BSR set to: 15
  5911                           ;CANlib.h: 918: tamp = filter & 0x000000FF;
  5912  000780  501F               	movf	CANSetFilter@filter,w,c
  5913  000782  0100               	movlb	0	; () banked
  5914  000784  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5915  000786  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5916  000788  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5917  00078A  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5918                           
  5919                           ; BSR set to: 0
  5920                           ;CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5921  00078C  C0B0  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;CANlib.h: 921: tamp = filter & 0x0000FF00;
  5925  000790  0E00               	movlw	0
  5926  000792  141F               	andwf	CANSetFilter@filter,w,c
  5927  000794  0100               	movlb	0	; () banked
  5928  000796  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5929  000798  0EFF               	movlw	255
  5930  00079A  1420               	andwf	CANSetFilter@filter+1,w,c
  5931  00079C  0100               	movlb	0	; () banked
  5932  00079E  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5933  0007A0  0E00               	movlw	0
  5934  0007A2  1421               	andwf	CANSetFilter@filter+2,w,c
  5935  0007A4  0100               	movlb	0	; () banked
  5936  0007A6  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5937  0007A8  0E00               	movlw	0
  5938  0007AA  1422               	andwf	CANSetFilter@filter+3,w,c
  5939  0007AC  0100               	movlb	0	; () banked
  5940  0007AE  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;CANlib.h: 922: tamp = tamp >> 8;
  5944  0007B0  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  5945  0007B4  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5946  0007B8  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5947  0007BC  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5948  0007C0  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  5949  0007C4  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5950  0007C8  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5951  0007CC  0100               	movlb	0	; () banked
  5952  0007CE  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  5953  0007D0  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5954  0007D4  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5955  0007D8  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5956  0007DC  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5960  0007E0  C0B0  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5961                           
  5962                           ; BSR set to: 0
  5963                           ;CANlib.h: 925: if (filter & 0x00010000)
  5964  0007E4  A021               	btfss	CANSetFilter@filter+2,0,c
  5965  0007E6  D003               	goto	l487
  5966                           
  5967                           ; BSR set to: 0
  5968                           ;CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5969  0007E8  010F               	movlb	15	; () banked
  5970  0007EA  8109               	bsf	9,0,b	;volatile
  5971  0007EC  D002               	goto	l488
  5972  0007EE                     l487:
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;CANlib.h: 927: else
  5976                           ;CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5977  0007EE  010F               	movlb	15	; () banked
  5978  0007F0  9109               	bcf	9,0,b	;volatile
  5979  0007F2                     l488:
  5980                           
  5981                           ; BSR set to: 15
  5982                           ;CANlib.h: 930: if (filter & 0x00020000)
  5983  0007F2  A221               	btfss	CANSetFilter@filter+2,1,c
  5984  0007F4  D003               	goto	l489
  5985                           
  5986                           ; BSR set to: 15
  5987                           ;CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5988  0007F6  010F               	movlb	15	; () banked
  5989  0007F8  8309               	bsf	9,1,b	;volatile
  5990  0007FA  D002               	goto	l490
  5991  0007FC                     l489:
  5992                           
  5993                           ; BSR set to: 15
  5994                           ;CANlib.h: 932: else
  5995                           ;CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5996  0007FC  010F               	movlb	15	; () banked
  5997  0007FE  9309               	bcf	9,1,b	;volatile
  5998  000800                     l490:
  5999                           
  6000                           ; BSR set to: 15
  6001                           ;CANlib.h: 935: if (filter & 0x00040000)
  6002  000800  A421               	btfss	CANSetFilter@filter+2,2,c
  6003  000802  D003               	goto	l491
  6004                           
  6005                           ; BSR set to: 15
  6006                           ;CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  6007  000804  010F               	movlb	15	; () banked
  6008  000806  8B09               	bsf	9,5,b	;volatile
  6009  000808  D002               	goto	l492
  6010  00080A                     l491:
  6011                           
  6012                           ; BSR set to: 15
  6013                           ;CANlib.h: 937: else
  6014                           ;CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  6015  00080A  010F               	movlb	15	; () banked
  6016  00080C  9B09               	bcf	9,5,b	;volatile
  6017  00080E                     l492:
  6018                           
  6019                           ; BSR set to: 15
  6020                           ;CANlib.h: 940: if (filter & 0x00080000)
  6021  00080E  A621               	btfss	CANSetFilter@filter+2,3,c
  6022  000810  D003               	goto	l493
  6023                           
  6024                           ; BSR set to: 15
  6025                           ;CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  6026  000812  010F               	movlb	15	; () banked
  6027  000814  8D09               	bsf	9,6,b	;volatile
  6028  000816  D002               	goto	l494
  6029  000818                     l493:
  6030                           
  6031                           ; BSR set to: 15
  6032                           ;CANlib.h: 942: else
  6033                           ;CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  6034  000818  010F               	movlb	15	; () banked
  6035  00081A  9D09               	bcf	9,6,b	;volatile
  6036  00081C                     l494:
  6037                           
  6038                           ; BSR set to: 15
  6039                           ;CANlib.h: 945: if (filter & 0x00100000)
  6040  00081C  A821               	btfss	CANSetFilter@filter+2,4,c
  6041  00081E  D003               	goto	l495
  6042                           
  6043                           ; BSR set to: 15
  6044                           ;CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  6045  000820  010F               	movlb	15	; () banked
  6046  000822  8F09               	bsf	9,7,b	;volatile
  6047  000824  D002               	goto	l4211
  6048  000826                     l495:
  6049                           
  6050                           ; BSR set to: 15
  6051                           ;CANlib.h: 947: else
  6052                           ;CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  6053  000826  010F               	movlb	15	; () banked
  6054  000828  9F09               	bcf	9,7,b	;volatile
  6055  00082A                     l4211:
  6056                           
  6057                           ; BSR set to: 15
  6058                           ;CANlib.h: 950: tamp = (filter >> 21);
  6059  00082A  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  6060  00082E  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6061  000832  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6062  000836  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6063  00083A  0E16               	movlw	22
  6064  00083C  D006               	goto	u5150
  6065  00083E                     u5155:
  6066  00083E  0100               	movlb	0	; () banked
  6067  000840  90D8               	bcf	status,0,c
  6068  000842  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6069  000844  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6070  000846  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6071  000848  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  6072  00084A                     u5150:
  6073  00084A  2EE8               	decfsz	wreg,f,c
  6074  00084C  D7F8               	goto	u5155
  6075  00084E  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  6076  000852  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6077  000856  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6078  00085A  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;CANlib.h: 951: tamp = tamp & 0x000000FF;
  6082  00085E  0100               	movlb	0	; () banked
  6083  000860  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  6084  000862  0100               	movlb	0	; () banked
  6085  000864  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6086  000866  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6087  000868  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6088  00086A  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6089                           
  6090                           ; BSR set to: 0
  6091                           ;CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  6092  00086C  C0B0  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  6093  000870                     l4217:
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;CANlib.h: 953: }
  6097                           ;CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  6098  000870  0E03               	movlw	3
  6099  000872  0100               	movlb	0	; () banked
  6100  000874  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6101  000876  A4D8               	btfss	status,2,c
  6102  000878  D07E               	goto	l4251
  6103                           
  6104                           ; BSR set to: 0
  6105  00087A  0EF7               	movlw	247
  6106  00087C  1823               	xorwf	CANSetFilter@type,w,c
  6107  00087E  A4D8               	btfss	status,2,c
  6108  000880  D07A               	goto	l4251
  6109                           
  6110                           ; BSR set to: 0
  6111                           ;CANlib.h: 956: {
  6112                           ;CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  6113  000882  010F               	movlb	15	; () banked
  6114  000884  870D               	bsf	13,3,b	;volatile
  6115                           
  6116                           ; BSR set to: 15
  6117                           ;CANlib.h: 959: tamp = filter & 0x000000FF;
  6118  000886  501F               	movf	CANSetFilter@filter,w,c
  6119  000888  0100               	movlb	0	; () banked
  6120  00088A  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6121  00088C  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6122  00088E  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6123  000890  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6124                           
  6125                           ; BSR set to: 0
  6126                           ;CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  6127  000892  C0B0  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  6128                           
  6129                           ; BSR set to: 0
  6130                           ;CANlib.h: 962: tamp = filter & 0x0000FF00;
  6131  000896  0E00               	movlw	0
  6132  000898  141F               	andwf	CANSetFilter@filter,w,c
  6133  00089A  0100               	movlb	0	; () banked
  6134  00089C  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6135  00089E  0EFF               	movlw	255
  6136  0008A0  1420               	andwf	CANSetFilter@filter+1,w,c
  6137  0008A2  0100               	movlb	0	; () banked
  6138  0008A4  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6139  0008A6  0E00               	movlw	0
  6140  0008A8  1421               	andwf	CANSetFilter@filter+2,w,c
  6141  0008AA  0100               	movlb	0	; () banked
  6142  0008AC  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6143  0008AE  0E00               	movlw	0
  6144  0008B0  1422               	andwf	CANSetFilter@filter+3,w,c
  6145  0008B2  0100               	movlb	0	; () banked
  6146  0008B4  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6147                           
  6148                           ; BSR set to: 0
  6149                           ;CANlib.h: 963: tamp = tamp >> 8;
  6150  0008B6  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  6151  0008BA  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6152  0008BE  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6153  0008C2  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6154  0008C6  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  6155  0008CA  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6156  0008CE  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6157  0008D2  0100               	movlb	0	; () banked
  6158  0008D4  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  6159  0008D6  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  6160  0008DA  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6161  0008DE  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6162  0008E2  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  6166  0008E6  C0B0  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  6167                           
  6168                           ; BSR set to: 0
  6169                           ;CANlib.h: 966: if (filter & 0x00010000)
  6170  0008EA  A021               	btfss	CANSetFilter@filter+2,0,c
  6171  0008EC  D003               	goto	l498
  6172                           
  6173                           ; BSR set to: 0
  6174                           ;CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  6175  0008EE  010F               	movlb	15	; () banked
  6176  0008F0  810D               	bsf	13,0,b	;volatile
  6177  0008F2  D002               	goto	l499
  6178  0008F4                     l498:
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;CANlib.h: 968: else
  6182                           ;CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  6183  0008F4  010F               	movlb	15	; () banked
  6184  0008F6  910D               	bcf	13,0,b	;volatile
  6185  0008F8                     l499:
  6186                           
  6187                           ; BSR set to: 15
  6188                           ;CANlib.h: 971: if (filter & 0x00020000)
  6189  0008F8  A221               	btfss	CANSetFilter@filter+2,1,c
  6190  0008FA  D003               	goto	l500
  6191                           
  6192                           ; BSR set to: 15
  6193                           ;CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  6194  0008FC  010F               	movlb	15	; () banked
  6195  0008FE  830D               	bsf	13,1,b	;volatile
  6196  000900  D002               	goto	l501
  6197  000902                     l500:
  6198                           
  6199                           ; BSR set to: 15
  6200                           ;CANlib.h: 973: else
  6201                           ;CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  6202  000902  010F               	movlb	15	; () banked
  6203  000904  930D               	bcf	13,1,b	;volatile
  6204  000906                     l501:
  6205                           
  6206                           ; BSR set to: 15
  6207                           ;CANlib.h: 976: if (filter & 0x00040000)
  6208  000906  A421               	btfss	CANSetFilter@filter+2,2,c
  6209  000908  D003               	goto	l502
  6210                           
  6211                           ; BSR set to: 15
  6212                           ;CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6213  00090A  010F               	movlb	15	; () banked
  6214  00090C  8B0D               	bsf	13,5,b	;volatile
  6215  00090E  D002               	goto	l503
  6216  000910                     l502:
  6217                           
  6218                           ; BSR set to: 15
  6219                           ;CANlib.h: 978: else
  6220                           ;CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6221  000910  010F               	movlb	15	; () banked
  6222  000912  9B0D               	bcf	13,5,b	;volatile
  6223  000914                     l503:
  6224                           
  6225                           ; BSR set to: 15
  6226                           ;CANlib.h: 981: if (filter & 0x00080000)
  6227  000914  A621               	btfss	CANSetFilter@filter+2,3,c
  6228  000916  D003               	goto	l504
  6229                           
  6230                           ; BSR set to: 15
  6231                           ;CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6232  000918  010F               	movlb	15	; () banked
  6233  00091A  8D0D               	bsf	13,6,b	;volatile
  6234  00091C  D002               	goto	l505
  6235  00091E                     l504:
  6236                           
  6237                           ; BSR set to: 15
  6238                           ;CANlib.h: 983: else
  6239                           ;CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6240  00091E  010F               	movlb	15	; () banked
  6241  000920  9D0D               	bcf	13,6,b	;volatile
  6242  000922                     l505:
  6243                           
  6244                           ; BSR set to: 15
  6245                           ;CANlib.h: 986: if (filter & 0x00100000)
  6246  000922  A821               	btfss	CANSetFilter@filter+2,4,c
  6247  000924  D003               	goto	l506
  6248                           
  6249                           ; BSR set to: 15
  6250                           ;CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6251  000926  010F               	movlb	15	; () banked
  6252  000928  8F0D               	bsf	13,7,b	;volatile
  6253  00092A  D002               	goto	l4245
  6254  00092C                     l506:
  6255                           
  6256                           ; BSR set to: 15
  6257                           ;CANlib.h: 988: else
  6258                           ;CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6259  00092C  010F               	movlb	15	; () banked
  6260  00092E  9F0D               	bcf	13,7,b	;volatile
  6261  000930                     l4245:
  6262                           
  6263                           ; BSR set to: 15
  6264                           ;CANlib.h: 991: tamp = (filter >> 21);
  6265  000930  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  6266  000934  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6267  000938  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6268  00093C  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6269  000940  0E16               	movlw	22
  6270  000942  D006               	goto	u5230
  6271  000944                     u5235:
  6272  000944  0100               	movlb	0	; () banked
  6273  000946  90D8               	bcf	status,0,c
  6274  000948  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6275  00094A  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6276  00094C  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6277  00094E  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  6278  000950                     u5230:
  6279  000950  2EE8               	decfsz	wreg,f,c
  6280  000952  D7F8               	goto	u5235
  6281  000954  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  6282  000958  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6283  00095C  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6284  000960  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6285                           
  6286                           ; BSR set to: 0
  6287                           ;CANlib.h: 992: tamp = tamp & 0x000000FF;
  6288  000964  0100               	movlb	0	; () banked
  6289  000966  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  6290  000968  0100               	movlb	0	; () banked
  6291  00096A  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6292  00096C  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6293  00096E  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6294  000970  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6295                           
  6296                           ; BSR set to: 0
  6297                           ;CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6298  000972  C0B0  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6299  000976                     l4251:
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;CANlib.h: 994: }
  6303                           ;CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6304  000976  0E04               	movlw	4
  6305  000978  0100               	movlb	0	; () banked
  6306  00097A  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6307  00097C  A4D8               	btfss	status,2,c
  6308  00097E  D07E               	goto	l4285
  6309                           
  6310                           ; BSR set to: 0
  6311  000980  0EF7               	movlw	247
  6312  000982  1823               	xorwf	CANSetFilter@type,w,c
  6313  000984  A4D8               	btfss	status,2,c
  6314  000986  D07A               	goto	l4285
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;CANlib.h: 997: {
  6318                           ;CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6319  000988  010F               	movlb	15	; () banked
  6320  00098A  8711               	bsf	17,3,b	;volatile
  6321                           
  6322                           ; BSR set to: 15
  6323                           ;CANlib.h: 1000: tamp = filter & 0x000000FF;
  6324  00098C  501F               	movf	CANSetFilter@filter,w,c
  6325  00098E  0100               	movlb	0	; () banked
  6326  000990  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6327  000992  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6328  000994  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6329  000996  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6333  000998  C0B0  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6337  00099C  0E00               	movlw	0
  6338  00099E  141F               	andwf	CANSetFilter@filter,w,c
  6339  0009A0  0100               	movlb	0	; () banked
  6340  0009A2  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6341  0009A4  0EFF               	movlw	255
  6342  0009A6  1420               	andwf	CANSetFilter@filter+1,w,c
  6343  0009A8  0100               	movlb	0	; () banked
  6344  0009AA  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6345  0009AC  0E00               	movlw	0
  6346  0009AE  1421               	andwf	CANSetFilter@filter+2,w,c
  6347  0009B0  0100               	movlb	0	; () banked
  6348  0009B2  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6349  0009B4  0E00               	movlw	0
  6350  0009B6  1422               	andwf	CANSetFilter@filter+3,w,c
  6351  0009B8  0100               	movlb	0	; () banked
  6352  0009BA  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;CANlib.h: 1004: tamp = tamp >> 8;
  6356  0009BC  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  6357  0009C0  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6358  0009C4  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6359  0009C8  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6360  0009CC  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  6361  0009D0  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6362  0009D4  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6363  0009D8  0100               	movlb	0	; () banked
  6364  0009DA  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  6365  0009DC  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  6366  0009E0  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6367  0009E4  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6368  0009E8  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6369                           
  6370                           ; BSR set to: 0
  6371                           ;CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6372  0009EC  C0B0  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;CANlib.h: 1007: if (filter & 0x00010000)
  6376  0009F0  A021               	btfss	CANSetFilter@filter+2,0,c
  6377  0009F2  D003               	goto	l509
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6381  0009F4  010F               	movlb	15	; () banked
  6382  0009F6  8111               	bsf	17,0,b	;volatile
  6383  0009F8  D002               	goto	l510
  6384  0009FA                     l509:
  6385                           
  6386                           ; BSR set to: 0
  6387                           ;CANlib.h: 1009: else
  6388                           ;CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6389  0009FA  010F               	movlb	15	; () banked
  6390  0009FC  9111               	bcf	17,0,b	;volatile
  6391  0009FE                     l510:
  6392                           
  6393                           ; BSR set to: 15
  6394                           ;CANlib.h: 1012: if (filter & 0x00020000)
  6395  0009FE  A221               	btfss	CANSetFilter@filter+2,1,c
  6396  000A00  D003               	goto	l511
  6397                           
  6398                           ; BSR set to: 15
  6399                           ;CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6400  000A02  010F               	movlb	15	; () banked
  6401  000A04  8311               	bsf	17,1,b	;volatile
  6402  000A06  D002               	goto	l512
  6403  000A08                     l511:
  6404                           
  6405                           ; BSR set to: 15
  6406                           ;CANlib.h: 1014: else
  6407                           ;CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6408  000A08  010F               	movlb	15	; () banked
  6409  000A0A  9311               	bcf	17,1,b	;volatile
  6410  000A0C                     l512:
  6411                           
  6412                           ; BSR set to: 15
  6413                           ;CANlib.h: 1017: if (filter & 0x00040000)
  6414  000A0C  A421               	btfss	CANSetFilter@filter+2,2,c
  6415  000A0E  D003               	goto	l513
  6416                           
  6417                           ; BSR set to: 15
  6418                           ;CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6419  000A10  010F               	movlb	15	; () banked
  6420  000A12  8B11               	bsf	17,5,b	;volatile
  6421  000A14  D002               	goto	l514
  6422  000A16                     l513:
  6423                           
  6424                           ; BSR set to: 15
  6425                           ;CANlib.h: 1019: else
  6426                           ;CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6427  000A16  010F               	movlb	15	; () banked
  6428  000A18  9B11               	bcf	17,5,b	;volatile
  6429  000A1A                     l514:
  6430                           
  6431                           ; BSR set to: 15
  6432                           ;CANlib.h: 1022: if (filter & 0x00080000)
  6433  000A1A  A621               	btfss	CANSetFilter@filter+2,3,c
  6434  000A1C  D003               	goto	l515
  6435                           
  6436                           ; BSR set to: 15
  6437                           ;CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6438  000A1E  010F               	movlb	15	; () banked
  6439  000A20  8D11               	bsf	17,6,b	;volatile
  6440  000A22  D002               	goto	l516
  6441  000A24                     l515:
  6442                           
  6443                           ; BSR set to: 15
  6444                           ;CANlib.h: 1024: else
  6445                           ;CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6446  000A24  010F               	movlb	15	; () banked
  6447  000A26  9D11               	bcf	17,6,b	;volatile
  6448  000A28                     l516:
  6449                           
  6450                           ; BSR set to: 15
  6451                           ;CANlib.h: 1027: if (filter & 0x00100000)
  6452  000A28  A821               	btfss	CANSetFilter@filter+2,4,c
  6453  000A2A  D003               	goto	l517
  6454                           
  6455                           ; BSR set to: 15
  6456                           ;CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6457  000A2C  010F               	movlb	15	; () banked
  6458  000A2E  8F11               	bsf	17,7,b	;volatile
  6459  000A30  D002               	goto	l4279
  6460  000A32                     l517:
  6461                           
  6462                           ; BSR set to: 15
  6463                           ;CANlib.h: 1029: else
  6464                           ;CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6465  000A32  010F               	movlb	15	; () banked
  6466  000A34  9F11               	bcf	17,7,b	;volatile
  6467  000A36                     l4279:
  6468                           
  6469                           ; BSR set to: 15
  6470                           ;CANlib.h: 1032: tamp = (filter >> 21);
  6471  000A36  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  6472  000A3A  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6473  000A3E  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6474  000A42  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6475  000A46  0E16               	movlw	22
  6476  000A48  D006               	goto	u5310
  6477  000A4A                     u5315:
  6478  000A4A  0100               	movlb	0	; () banked
  6479  000A4C  90D8               	bcf	status,0,c
  6480  000A4E  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6481  000A50  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6482  000A52  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6483  000A54  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  6484  000A56                     u5310:
  6485  000A56  2EE8               	decfsz	wreg,f,c
  6486  000A58  D7F8               	goto	u5315
  6487  000A5A  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  6488  000A5E  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6489  000A62  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6490  000A66  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6494  000A6A  0100               	movlb	0	; () banked
  6495  000A6C  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  6496  000A6E  0100               	movlb	0	; () banked
  6497  000A70  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6498  000A72  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6499  000A74  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6500  000A76  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6504  000A78  C0B0  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6505  000A7C                     l4285:
  6506                           
  6507                           ; BSR set to: 0
  6508                           ;CANlib.h: 1035: }
  6509                           ;CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6510  000A7C  0E05               	movlw	5
  6511  000A7E  0100               	movlb	0	; () banked
  6512  000A80  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6513  000A82  A4D8               	btfss	status,2,c
  6514  000A84  0012               	return	
  6515                           
  6516                           ; BSR set to: 0
  6517  000A86  0EF7               	movlw	247
  6518  000A88  1823               	xorwf	CANSetFilter@type,w,c
  6519  000A8A  A4D8               	btfss	status,2,c
  6520  000A8C  0012               	return	
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;CANlib.h: 1038: {
  6524                           ;CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6525  000A8E  010F               	movlb	15	; () banked
  6526  000A90  8715               	bsf	21,3,b	;volatile
  6527                           
  6528                           ; BSR set to: 15
  6529                           ;CANlib.h: 1041: tamp = filter & 0x000000FF;
  6530  000A92  501F               	movf	CANSetFilter@filter,w,c
  6531  000A94  0100               	movlb	0	; () banked
  6532  000A96  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6533  000A98  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6534  000A9A  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6535  000A9C  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6539  000A9E  C0B0  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6540                           
  6541                           ; BSR set to: 0
  6542                           ;CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6543  000AA2  0E00               	movlw	0
  6544  000AA4  141F               	andwf	CANSetFilter@filter,w,c
  6545  000AA6  0100               	movlb	0	; () banked
  6546  000AA8  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6547  000AAA  0EFF               	movlw	255
  6548  000AAC  1420               	andwf	CANSetFilter@filter+1,w,c
  6549  000AAE  0100               	movlb	0	; () banked
  6550  000AB0  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6551  000AB2  0E00               	movlw	0
  6552  000AB4  1421               	andwf	CANSetFilter@filter+2,w,c
  6553  000AB6  0100               	movlb	0	; () banked
  6554  000AB8  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6555  000ABA  0E00               	movlw	0
  6556  000ABC  1422               	andwf	CANSetFilter@filter+3,w,c
  6557  000ABE  0100               	movlb	0	; () banked
  6558  000AC0  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;CANlib.h: 1045: tamp = tamp >> 8;
  6562  000AC2  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  6563  000AC6  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6564  000ACA  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6565  000ACE  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6566  000AD2  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  6567  000AD6  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6568  000ADA  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6569  000ADE  0100               	movlb	0	; () banked
  6570  000AE0  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  6571  000AE2  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  6572  000AE6  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6573  000AEA  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6574  000AEE  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6578  000AF2  C0B0  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;CANlib.h: 1048: if (filter & 0x00010000)
  6582  000AF6  A021               	btfss	CANSetFilter@filter+2,0,c
  6583  000AF8  D003               	goto	l520
  6584                           
  6585                           ; BSR set to: 0
  6586                           ;CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6587  000AFA  010F               	movlb	15	; () banked
  6588  000AFC  8115               	bsf	21,0,b	;volatile
  6589  000AFE  D002               	goto	l521
  6590  000B00                     l520:
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;CANlib.h: 1050: else
  6594                           ;CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6595  000B00  010F               	movlb	15	; () banked
  6596  000B02  9115               	bcf	21,0,b	;volatile
  6597  000B04                     l521:
  6598                           
  6599                           ; BSR set to: 15
  6600                           ;CANlib.h: 1053: if (filter & 0x00020000)
  6601  000B04  A221               	btfss	CANSetFilter@filter+2,1,c
  6602  000B06  D003               	goto	l522
  6603                           
  6604                           ; BSR set to: 15
  6605                           ;CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6606  000B08  010F               	movlb	15	; () banked
  6607  000B0A  8315               	bsf	21,1,b	;volatile
  6608  000B0C  D002               	goto	l523
  6609  000B0E                     l522:
  6610                           
  6611                           ; BSR set to: 15
  6612                           ;CANlib.h: 1055: else
  6613                           ;CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6614  000B0E  010F               	movlb	15	; () banked
  6615  000B10  9315               	bcf	21,1,b	;volatile
  6616  000B12                     l523:
  6617                           
  6618                           ; BSR set to: 15
  6619                           ;CANlib.h: 1058: if (filter & 0x00040000)
  6620  000B12  A421               	btfss	CANSetFilter@filter+2,2,c
  6621  000B14  D003               	goto	l524
  6622                           
  6623                           ; BSR set to: 15
  6624                           ;CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6625  000B16  010F               	movlb	15	; () banked
  6626  000B18  8B15               	bsf	21,5,b	;volatile
  6627  000B1A  D002               	goto	l525
  6628  000B1C                     l524:
  6629                           
  6630                           ; BSR set to: 15
  6631                           ;CANlib.h: 1060: else
  6632                           ;CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6633  000B1C  010F               	movlb	15	; () banked
  6634  000B1E  9B15               	bcf	21,5,b	;volatile
  6635  000B20                     l525:
  6636                           
  6637                           ; BSR set to: 15
  6638                           ;CANlib.h: 1063: if (filter & 0x00080000)
  6639  000B20  A621               	btfss	CANSetFilter@filter+2,3,c
  6640  000B22  D003               	goto	l526
  6641                           
  6642                           ; BSR set to: 15
  6643                           ;CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6644  000B24  010F               	movlb	15	; () banked
  6645  000B26  8D15               	bsf	21,6,b	;volatile
  6646  000B28  D002               	goto	l527
  6647  000B2A                     l526:
  6648                           
  6649                           ; BSR set to: 15
  6650                           ;CANlib.h: 1065: else
  6651                           ;CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6652  000B2A  010F               	movlb	15	; () banked
  6653  000B2C  9D15               	bcf	21,6,b	;volatile
  6654  000B2E                     l527:
  6655                           
  6656                           ; BSR set to: 15
  6657                           ;CANlib.h: 1068: if (filter & 0x00100000)
  6658  000B2E  A821               	btfss	CANSetFilter@filter+2,4,c
  6659  000B30  D003               	goto	l528
  6660                           
  6661                           ; BSR set to: 15
  6662                           ;CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6663  000B32  010F               	movlb	15	; () banked
  6664  000B34  8F15               	bsf	21,7,b	;volatile
  6665  000B36  D002               	goto	l4313
  6666  000B38                     l528:
  6667                           
  6668                           ; BSR set to: 15
  6669                           ;CANlib.h: 1070: else
  6670                           ;CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6671  000B38  010F               	movlb	15	; () banked
  6672  000B3A  9F15               	bcf	21,7,b	;volatile
  6673  000B3C                     l4313:
  6674                           
  6675                           ; BSR set to: 15
  6676                           ;CANlib.h: 1073: tamp = (filter >> 21);
  6677  000B3C  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  6678  000B40  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6679  000B44  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6680  000B48  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6681  000B4C  0E16               	movlw	22
  6682  000B4E  D006               	goto	u5390
  6683  000B50                     u5395:
  6684  000B50  0100               	movlb	0	; () banked
  6685  000B52  90D8               	bcf	status,0,c
  6686  000B54  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6687  000B56  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6688  000B58  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6689  000B5A  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  6690  000B5C                     u5390:
  6691  000B5C  2EE8               	decfsz	wreg,f,c
  6692  000B5E  D7F8               	goto	u5395
  6693  000B60  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  6694  000B64  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6695  000B68  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6696  000B6C  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6700  000B70  0100               	movlb	0	; () banked
  6701  000B72  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  6702  000B74  0100               	movlb	0	; () banked
  6703  000B76  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6704  000B78  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6705  000B7A  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6706  000B7C  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6707                           
  6708                           ; BSR set to: 0
  6709                           ;CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6710  000B7E  C0B0  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6711  000B82  0012               	return	
  6712  000B84                     __end_of_CANSetFilter:
  6713                           	opt stack 0
  6714                           tblptru	equ	0xFF8
  6715                           tblptrh	equ	0xFF7
  6716                           tblptrl	equ	0xFF6
  6717                           tablat	equ	0xFF5
  6718                           prodh	equ	0xFF4
  6719                           prodl	equ	0xFF3
  6720                           intcon	equ	0xFF2
  6721                           postinc0	equ	0xFEE
  6722                           wreg	equ	0xFE8
  6723                           postdec1	equ	0xFE5
  6724                           fsr1l	equ	0xFE1
  6725                           indf2	equ	0xFDF
  6726                           fsr2h	equ	0xFDA
  6727                           fsr2l	equ	0xFD9
  6728                           status	equ	0xFD8
  6729                           
  6730 ;; *************** function _CANOperationMode *****************
  6731 ;; Defined at:
  6732 ;;		line 206 in file "CANlib.h"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;  mode            1    wreg     enum E16838
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;  mode            1   30[COMRAM] enum E16838
  6737 ;; Return value:  Size  Location     Type
  6738 ;;		None               void
  6739 ;; Registers used:
  6740 ;;		wreg, status,2, status,0
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6746 ;;      Params:         0       0       0       0
  6747 ;;      Locals:         1       0       0       0
  6748 ;;      Temps:          0       0       0       0
  6749 ;;      Totals:         1       0       0       0
  6750 ;;Total ram usage:        1 bytes
  6751 ;; Hardware stack levels used:    1
  6752 ;; Hardware stack levels required when called:    2
  6753 ;; This function calls:
  6754 ;;		Nothing
  6755 ;; This function is called by:
  6756 ;;		_CANInitialize
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760                           	psect	text15
  6761  00254E                     __ptext15:
  6762                           	opt stack 0
  6763  00254E                     _CANOperationMode:
  6764                           	opt stack 26
  6765                           
  6766                           ; BSR set to: 0
  6767                           ;incstack = 0
  6768                           ;CANOperationMode@mode stored from wreg
  6769  00254E  6E1F               	movwf	CANOperationMode@mode,c
  6770                           
  6771                           ;CANlib.h: 208: CANCON = mode;
  6772  002550  C01F  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6773  002554                     l3909:
  6774  002554  506E               	movf	3950,w,c	;volatile
  6775  002556  0BE0               	andlw	224
  6776  002558  181F               	xorwf	CANOperationMode@mode,w,c
  6777  00255A  B4D8               	btfsc	status,2,c
  6778  00255C  0012               	return	
  6779  00255E  D7FA               	goto	l3909
  6780  002560                     __end_of_CANOperationMode:
  6781                           	opt stack 0
  6782                           tblptru	equ	0xFF8
  6783                           tblptrh	equ	0xFF7
  6784                           tblptrl	equ	0xFF6
  6785                           tablat	equ	0xFF5
  6786                           prodh	equ	0xFF4
  6787                           prodl	equ	0xFF3
  6788                           intcon	equ	0xFF2
  6789                           postinc0	equ	0xFEE
  6790                           wreg	equ	0xFE8
  6791                           postdec1	equ	0xFE5
  6792                           fsr1l	equ	0xFE1
  6793                           indf2	equ	0xFDF
  6794                           fsr2h	equ	0xFDA
  6795                           fsr2l	equ	0xFD9
  6796                           status	equ	0xFD8
  6797                           
  6798 ;; *************** function _can_interpreter *****************
  6799 ;; Defined at:
  6800 ;;		line 242 in file "motore.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;		None
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;		None
  6805 ;; Return value:  Size  Location     Type
  6806 ;;		None               void
  6807 ;; Registers used:
  6808 ;;		wreg, status,2, status,0
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6814 ;;      Params:         0       0       0       0
  6815 ;;      Locals:         0       0       0       0
  6816 ;;      Temps:          4       0       0       0
  6817 ;;      Totals:         4       0       0       0
  6818 ;;Total ram usage:        4 bytes
  6819 ;; Hardware stack levels used:    1
  6820 ;; Hardware stack levels required when called:    2
  6821 ;; This function calls:
  6822 ;;		Nothing
  6823 ;; This function is called by:
  6824 ;;		_main
  6825 ;; This function uses a non-reentrant model
  6826 ;;
  6827                           
  6828                           	psect	text16
  6829  002184                     __ptext16:
  6830                           	opt stack 0
  6831  002184                     _can_interpreter:
  6832                           	opt stack 28
  6833                           
  6834                           ;motore.c: 243: if (new_message == 1) {
  6835                           
  6836                           ;incstack = 0
  6837  002184  AA38               	btfss	_new_message/(0+8),_new_message& (0+7),c	;volatile
  6838  002186  D063               	goto	l709
  6839                           
  6840                           ;motore.c: 244: if (id == 0b00000000011) {
  6841  002188  0E03               	movlw	3
  6842  00218A  1828               	xorwf	_id,w,c	;volatile
  6843  00218C  1029               	iorwf	_id+1,w,c	;volatile
  6844  00218E  102A               	iorwf	_id+2,w,c	;volatile
  6845  002190  102B               	iorwf	_id+3,w,c	;volatile
  6846  002192  A4D8               	btfss	status,2,c
  6847  002194  D01A               	goto	l3689
  6848                           
  6849                           ;motore.c: 245: requestSpeed = data_array[1];
  6850  002196  0100               	movlb	0	; () banked
  6851  002198  519C               	movf	(_data_array+1)& (0+255),w,b
  6852  00219A  6E2C               	movwf	_requestSpeed,c	;volatile
  6853  00219C  6A2D               	clrf	_requestSpeed+1,c	;volatile
  6854  00219E  6A2E               	clrf	_requestSpeed+2,c	;volatile
  6855  0021A0  6A2F               	clrf	_requestSpeed+3,c	;volatile
  6856                           
  6857                           ; BSR set to: 0
  6858                           ;motore.c: 246: requestSpeed = ((requestSpeed << 8) | msg.data[0]);
  6859  0021A2  0100               	movlb	0	; () banked
  6860  0021A4  5190               	movf	(_msg+4)& (0+255),w,b
  6861  0021A6  C02C  F020         	movff	_requestSpeed,??_can_interpreter+1	;volatile
  6862  0021AA  C02D  F021         	movff	_requestSpeed+1,??_can_interpreter+2	;volatile
  6863  0021AE  C02E  F022         	movff	_requestSpeed+2,??_can_interpreter+3	;volatile
  6864  0021B2  6A1F               	clrf	??_can_interpreter& (0+255),c
  6865  0021B4  101F               	iorwf	??_can_interpreter,w,c
  6866  0021B6  6E2C               	movwf	_requestSpeed,c	;volatile
  6867  0021B8  5020               	movf	??_can_interpreter+1,w,c
  6868  0021BA  6E2D               	movwf	_requestSpeed+1,c	;volatile
  6869  0021BC  5021               	movf	??_can_interpreter+2,w,c
  6870  0021BE  6E2E               	movwf	_requestSpeed+2,c	;volatile
  6871  0021C0  5022               	movf	??_can_interpreter+3,w,c
  6872  0021C2  6E2F               	movwf	_requestSpeed+3,c	;volatile
  6873                           
  6874                           ; BSR set to: 0
  6875                           ;motore.c: 247: dir = data_array[2];
  6876  0021C4  C09D  F03E         	movff	_data_array+2,_dir	;volatile
  6877  0021C8  6A3F               	clrf	_dir+1,c	;volatile
  6878  0021CA                     l3689:
  6879                           
  6880                           ;motore.c: 249: }
  6881                           ;motore.c: 251: if (id == 0b00000000001) {
  6882  0021CA  0428               	decf	_id,w,c	;volatile
  6883  0021CC  1029               	iorwf	_id+1,w,c	;volatile
  6884  0021CE  102A               	iorwf	_id+2,w,c	;volatile
  6885  0021D0  102B               	iorwf	_id+3,w,c	;volatile
  6886  0021D2  A4D8               	btfss	status,2,c
  6887  0021D4  D009               	goto	l3695
  6888                           
  6889                           ;motore.c: 252: requestSpeed = 0;
  6890  0021D6  0E00               	movlw	0
  6891  0021D8  6E2C               	movwf	_requestSpeed,c	;volatile
  6892  0021DA  0E00               	movlw	0
  6893  0021DC  6E2D               	movwf	_requestSpeed+1,c	;volatile
  6894  0021DE  0E00               	movlw	0
  6895  0021E0  6E2E               	movwf	_requestSpeed+2,c	;volatile
  6896  0021E2  0E00               	movlw	0
  6897  0021E4  6E2F               	movwf	_requestSpeed+3,c	;volatile
  6898                           
  6899                           ;motore.c: 253: PORTAbits.RA1 = 1;
  6900  0021E6  8280               	bsf	3968,1,c	;volatile
  6901  0021E8                     l3695:
  6902                           
  6903                           ;motore.c: 254: }
  6904                           ;motore.c: 256: if (id == 0b00000000110) {
  6905  0021E8  0E06               	movlw	6
  6906  0021EA  1828               	xorwf	_id,w,c	;volatile
  6907  0021EC  1029               	iorwf	_id+1,w,c	;volatile
  6908  0021EE  102A               	iorwf	_id+2,w,c	;volatile
  6909  0021F0  102B               	iorwf	_id+3,w,c	;volatile
  6910  0021F2  A4D8               	btfss	status,2,c
  6911  0021F4  D015               	goto	l3705
  6912                           
  6913                           ;motore.c: 262: left_speed = data_array[1];
  6914  0021F6  C09C  F030         	movff	_data_array+1,_left_speed	;volatile
  6915  0021FA  6A31               	clrf	_left_speed+1,c	;volatile
  6916                           
  6917                           ;motore.c: 263: left_speed = ((left_speed << 8) | (data_array[0]));
  6918  0021FC  5030               	movf	_left_speed,w,c	;volatile
  6919  0021FE  6E1F               	movwf	??_can_interpreter& (0+255),c
  6920  002200  0100               	movlb	0	; () banked
  6921  002202  519B               	movf	_data_array& (0+255),w,b
  6922  002204  6E30               	movwf	_left_speed,c	;volatile
  6923  002206  C01F  F031         	movff	??_can_interpreter,_left_speed+1	;volatile
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;motore.c: 264: right_speed = data_array[3];
  6927  00220A  C09E  F034         	movff	_data_array+3,_right_speed	;volatile
  6928  00220E  6A35               	clrf	_right_speed+1,c	;volatile
  6929                           
  6930                           ;motore.c: 265: right_speed = ((right_speed << 8) | (data_array[2]));
  6931  002210  5034               	movf	_right_speed,w,c	;volatile
  6932  002212  6E1F               	movwf	??_can_interpreter& (0+255),c
  6933  002214  0100               	movlb	0	; () banked
  6934  002216  519D               	movf	(_data_array+2)& (0+255),w,b
  6935  002218  6E34               	movwf	_right_speed,c	;volatile
  6936  00221A  C01F  F035         	movff	??_can_interpreter,_right_speed+1	;volatile
  6937                           
  6938                           ; BSR set to: 0
  6939                           ;motore.c: 266: speed_fetched = 1;
  6940  00221E  8239               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  6941  002220                     l3705:
  6942                           
  6943                           ;motore.c: 267: }
  6944                           ;motore.c: 269: if (id == 0b00000000010) {
  6945  002220  0E02               	movlw	2
  6946  002222  1828               	xorwf	_id,w,c	;volatile
  6947  002224  1029               	iorwf	_id+1,w,c	;volatile
  6948  002226  102A               	iorwf	_id+2,w,c	;volatile
  6949  002228  102B               	iorwf	_id+3,w,c	;volatile
  6950  00222A  A4D8               	btfss	status,2,c
  6951  00222C  D010               	goto	l709
  6952                           
  6953                           ;motore.c: 270: if (data_array[0] == 0x01) {
  6954  00222E  0100               	movlb	0	; () banked
  6955  002230  059B               	decf	_data_array& (0+255),w,b
  6956  002232  B4D8               	btfsc	status,2,c
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;motore.c: 271: centralina_abs = 1;
  6960  002234  8238               	bsf	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;motore.c: 273: }
  6964                           ;motore.c: 274: if (data_array[0] == 0x02) {
  6965                           
  6966                           ; BSR set to: 0
  6967  002236  0E02               	movlw	2
  6968  002238  0100               	movlb	0	; () banked
  6969  00223A  199B               	xorwf	_data_array& (0+255),w,b
  6970  00223C  A4D8               	btfss	status,2,c
  6971  00223E  D002               	goto	l3715
  6972                           
  6973                           ; BSR set to: 0
  6974                           ;motore.c: 275: centralina_sterzo = 1;
  6975  002240  8638               	bsf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
  6976                           
  6977                           ;motore.c: 276: centralina_comando = 1;
  6978  002242  8438               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  6979  002244                     l3715:
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;motore.c: 279: }
  6983                           ;motore.c: 280: if (data_array[0] == 0x03) {
  6984  002244  0E03               	movlw	3
  6985  002246  0100               	movlb	0	; () banked
  6986  002248  199B               	xorwf	_data_array& (0+255),w,b
  6987  00224A  B4D8               	btfsc	status,2,c
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;motore.c: 281: centralina_comando = 1;
  6991  00224C  8438               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  6992  00224E                     l709:
  6993                           
  6994                           ;motore.c: 282: }
  6995                           ;motore.c: 283: }
  6996                           ;motore.c: 284: }
  6997                           ;motore.c: 285: new_message = 0;
  6998  00224E  9A38               	bcf	_new_message/(0+8),_new_message& (0+7),c	;volatile
  6999  002250  0012               	return		;funcret
  7000  002252                     __end_of_can_interpreter:
  7001                           	opt stack 0
  7002                           tblptru	equ	0xFF8
  7003                           tblptrh	equ	0xFF7
  7004                           tblptrl	equ	0xFF6
  7005                           tablat	equ	0xFF5
  7006                           prodh	equ	0xFF4
  7007                           prodl	equ	0xFF3
  7008                           intcon	equ	0xFF2
  7009                           postinc0	equ	0xFEE
  7010                           wreg	equ	0xFE8
  7011                           postdec1	equ	0xFE5
  7012                           fsr1l	equ	0xFE1
  7013                           indf2	equ	0xFDF
  7014                           fsr2h	equ	0xFDA
  7015                           fsr2l	equ	0xFD9
  7016                           status	equ	0xFD8
  7017                           
  7018 ;; *************** function _battery_measure *****************
  7019 ;; Defined at:
  7020 ;;		line 228 in file "motore.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;		None
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;		None
  7025 ;; Return value:  Size  Location     Type
  7026 ;;		None               void
  7027 ;; Registers used:
  7028 ;;		None
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7034 ;;      Params:         0       0       0       0
  7035 ;;      Locals:         0       0       0       0
  7036 ;;      Temps:          0       0       0       0
  7037 ;;      Totals:         0       0       0       0
  7038 ;;Total ram usage:        0 bytes
  7039 ;; Hardware stack levels used:    1
  7040 ;; Hardware stack levels required when called:    2
  7041 ;; This function calls:
  7042 ;;		Nothing
  7043 ;; This function is called by:
  7044 ;;		_main
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           	psect	text17
  7049  002578                     __ptext17:
  7050                           	opt stack 0
  7051  002578                     _battery_measure:
  7052                           	opt stack 28
  7053                           
  7054                           ;incstack = 0
  7055  002578  0012               	return		;funcret
  7056  00257A                     __end_of_battery_measure:
  7057                           	opt stack 0
  7058                           tblptru	equ	0xFF8
  7059                           tblptrh	equ	0xFF7
  7060                           tblptrl	equ	0xFF6
  7061                           tablat	equ	0xFF5
  7062                           prodh	equ	0xFF4
  7063                           prodl	equ	0xFF3
  7064                           intcon	equ	0xFF2
  7065                           postinc0	equ	0xFEE
  7066                           wreg	equ	0xFE8
  7067                           postdec1	equ	0xFE5
  7068                           fsr1l	equ	0xFE1
  7069                           indf2	equ	0xFDF
  7070                           fsr2h	equ	0xFDA
  7071                           fsr2l	equ	0xFD9
  7072                           status	equ	0xFD8
  7073                           
  7074 ;; *************** function _OpenTimer2 *****************
  7075 ;; Defined at:
  7076 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  config          1    wreg     unsigned char 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;  config          1   30[COMRAM] unsigned char 
  7081 ;; Return value:  Size  Location     Type
  7082 ;;		None               void
  7083 ;; Registers used:
  7084 ;;		wreg, status,2, status,0
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7090 ;;      Params:         0       0       0       0
  7091 ;;      Locals:         1       0       0       0
  7092 ;;      Temps:          0       0       0       0
  7093 ;;      Totals:         1       0       0       0
  7094 ;;Total ram usage:        1 bytes
  7095 ;; Hardware stack levels used:    1
  7096 ;; Hardware stack levels required when called:    2
  7097 ;; This function calls:
  7098 ;;		Nothing
  7099 ;; This function is called by:
  7100 ;;		_main
  7101 ;; This function uses a non-reentrant model
  7102 ;;
  7103                           
  7104                           	psect	text18
  7105  00251C                     __ptext18:
  7106                           	opt stack 0
  7107  00251C                     _OpenTimer2:
  7108                           	opt stack 28
  7109                           
  7110                           ;incstack = 0
  7111                           ;OpenTimer2@config stored from wreg
  7112  00251C  6E1F               	movwf	OpenTimer2@config,c
  7113  00251E  501F               	movf	OpenTimer2@config,w,c
  7114  002520  0BFB               	andlw	251
  7115  002522  6ECA               	movwf	4042,c	;volatile
  7116  002524  0E00               	movlw	0
  7117  002526  6ECC               	movwf	4044,c	;volatile
  7118  002528  929E               	bcf	3998,1,c	;volatile
  7119  00252A  AE1F               	btfss	OpenTimer2@config,7,c
  7120  00252C  D002               	goto	l763
  7121  00252E  829D               	bsf	3997,1,c	;volatile
  7122  002530  D001               	goto	l764
  7123  002532                     l763:
  7124  002532  929D               	bcf	3997,1,c	;volatile
  7125  002534                     l764:
  7126  002534  84CA               	bsf	4042,2,c	;volatile
  7127  002536  0012               	return		;funcret
  7128  002538                     __end_of_OpenTimer2:
  7129                           	opt stack 0
  7130                           tblptru	equ	0xFF8
  7131                           tblptrh	equ	0xFF7
  7132                           tblptrl	equ	0xFF6
  7133                           tablat	equ	0xFF5
  7134                           prodh	equ	0xFF4
  7135                           prodl	equ	0xFF3
  7136                           intcon	equ	0xFF2
  7137                           postinc0	equ	0xFEE
  7138                           wreg	equ	0xFE8
  7139                           postdec1	equ	0xFE5
  7140                           fsr1l	equ	0xFE1
  7141                           indf2	equ	0xFDF
  7142                           fsr2h	equ	0xFDA
  7143                           fsr2l	equ	0xFD9
  7144                           status	equ	0xFD8
  7145                           
  7146 ;; *************** function _OpenEPWM1 *****************
  7147 ;; Defined at:
  7148 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;  period          1    wreg     unsigned char 
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;  period          1   30[COMRAM] unsigned char 
  7153 ;; Return value:  Size  Location     Type
  7154 ;;		None               void
  7155 ;; Registers used:
  7156 ;;		wreg, status,2
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7162 ;;      Params:         0       0       0       0
  7163 ;;      Locals:         1       0       0       0
  7164 ;;      Temps:          0       0       0       0
  7165 ;;      Totals:         1       0       0       0
  7166 ;;Total ram usage:        1 bytes
  7167 ;; Hardware stack levels used:    1
  7168 ;; Hardware stack levels required when called:    2
  7169 ;; This function calls:
  7170 ;;		Nothing
  7171 ;; This function is called by:
  7172 ;;		_main
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           	psect	text19
  7177  002560                     __ptext19:
  7178                           	opt stack 0
  7179  002560                     _OpenEPWM1:
  7180                           	opt stack 28
  7181                           
  7182                           ;incstack = 0
  7183                           ;OpenEPWM1@period stored from wreg
  7184  002560  6E1F               	movwf	OpenEPWM1@period,c
  7185  002562  0E0C               	movlw	12
  7186  002564  6EBA               	movwf	4026,c	;volatile
  7187  002566  94CA               	bcf	4042,2,c	;volatile
  7188  002568  C01F  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  7189  00256C  84CA               	bsf	4042,2,c	;volatile
  7190  00256E  0012               	return		;funcret
  7191  002570                     __end_of_OpenEPWM1:
  7192                           	opt stack 0
  7193                           tblptru	equ	0xFF8
  7194                           tblptrh	equ	0xFF7
  7195                           tblptrl	equ	0xFF6
  7196                           tablat	equ	0xFF5
  7197                           prodh	equ	0xFF4
  7198                           prodl	equ	0xFF3
  7199                           intcon	equ	0xFF2
  7200                           postinc0	equ	0xFEE
  7201                           wreg	equ	0xFE8
  7202                           postdec1	equ	0xFE5
  7203                           fsr1l	equ	0xFE1
  7204                           indf2	equ	0xFDF
  7205                           fsr2h	equ	0xFDA
  7206                           fsr2l	equ	0xFD9
  7207                           status	equ	0xFD8
  7208                           
  7209 ;; *************** function _ISR_bassa *****************
  7210 ;; Defined at:
  7211 ;;		line 92 in file "motore.c"
  7212 ;; Parameters:    Size  Location     Type
  7213 ;;		None
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;  i               1   29[COMRAM] unsigned char 
  7216 ;; Return value:  Size  Location     Type
  7217 ;;		None               void
  7218 ;; Registers used:
  7219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7225 ;;      Params:         0       0       0       0
  7226 ;;      Locals:         1       0       0       0
  7227 ;;      Temps:         17       0       0       0
  7228 ;;      Totals:        18       0       0       0
  7229 ;;Total ram usage:       18 bytes
  7230 ;; Hardware stack levels used:    1
  7231 ;; Hardware stack levels required when called:    1
  7232 ;; This function calls:
  7233 ;;		_CANisRxReady
  7234 ;;		_CANreceiveMessage
  7235 ;; This function is called by:
  7236 ;;		Interrupt level 1
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           	psect	intcodelo
  7241  000018                     __pintcodelo:
  7242                           	opt stack 0
  7243  000018                     _ISR_bassa:
  7244                           	opt stack 26
  7245                           
  7246                           ;incstack = 0
  7247  000018  8041               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7248  00001A  CFD8 F00D          	movff	status,??_ISR_bassa
  7249  00001E  CFE8 F00E          	movff	wreg,??_ISR_bassa+1
  7250  000022  CFE0 F00F          	movff	bsr,??_ISR_bassa+2
  7251  000026  CFFA F010          	movff	pclath,??_ISR_bassa+3
  7252  00002A  CFFB F011          	movff	pclatu,??_ISR_bassa+4
  7253  00002E  CFE9 F012          	movff	fsr0l,??_ISR_bassa+5
  7254  000032  CFEA F013          	movff	fsr0h,??_ISR_bassa+6
  7255  000036  CFE1 F014          	movff	fsr1l,??_ISR_bassa+7
  7256  00003A  CFE2 F015          	movff	fsr1h,??_ISR_bassa+8
  7257  00003E  CFD9 F016          	movff	fsr2l,??_ISR_bassa+9
  7258  000042  CFDA F017          	movff	fsr2h,??_ISR_bassa+10
  7259  000046  CFF3 F018          	movff	prodl,??_ISR_bassa+11
  7260  00004A  CFF4 F019          	movff	prodh,??_ISR_bassa+12
  7261  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_bassa+13
  7262  000052  CFF7 F01B          	movff	tblptrh,??_ISR_bassa+14
  7263  000056  CFF8 F01C          	movff	tblptru,??_ISR_bassa+15
  7264  00005A  CFF5 F01D          	movff	tablat,??_ISR_bassa+16
  7265                           
  7266                           ;motore.c: 93: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7267  00005E  B0A4               	btfsc	4004,0,c	;volatile
  7268  000060  D002               	goto	i1l654
  7269  000062  A2A4               	btfss	4004,1,c	;volatile
  7270  000064  D038               	goto	i1l652
  7271  000066                     i1l654:
  7272                           
  7273                           ;motore.c: 94: if (PIR3bits.RXB0IF ==1){
  7274  000066  B0A4               	btfsc	4004,0,c	;volatile
  7275                           
  7276                           ;motore.c: 95: PORTCbits.RC1 = 1;
  7277  000068  8282               	bsf	3970,1,c	;volatile
  7278                           
  7279                           ;motore.c: 96: }
  7280                           ;motore.c: 97: if (CANisRxReady()) {
  7281  00006A  EC9C  F012         	call	_CANisRxReady	;wreg free
  7282  00006E  0900               	iorlw	0
  7283  000070  B4D8               	btfsc	status,2,c
  7284  000072  D02F               	goto	i1l656
  7285                           
  7286                           ;motore.c: 98: CANreceiveMessage(&msg);
  7287  000074  0E8C               	movlw	low _msg
  7288  000076  6E01               	movwf	CANreceiveMessage@msg,c
  7289  000078  0E00               	movlw	high _msg
  7290  00007A  6E02               	movwf	CANreceiveMessage@msg+1,c
  7291  00007C  EC7C  F009         	call	_CANreceiveMessage	;wreg free
  7292                           
  7293                           ;motore.c: 99: remote_frame = msg.RTR;
  7294  000080  0100               	movlb	0	; () banked
  7295  000082  A19A               	btfss	(_msg+14)& (0+255),0,b
  7296  000084  D002               	goto	i1u427_20
  7297  000086  8C38               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  7298  000088  D001               	goto	i1l3795
  7299  00008A                     i1u427_20:
  7300  00008A  9C38               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  7301  00008C                     i1l3795:
  7302                           
  7303                           ;motore.c: 100: id = msg.identifier;
  7304  00008C  C08C  F028         	movff	_msg,_id	;volatile
  7305  000090  C08D  F029         	movff	_msg+1,_id+1	;volatile
  7306  000094  C08E  F02A         	movff	_msg+2,_id+2	;volatile
  7307  000098  C08F  F02B         	movff	_msg+3,_id+3	;volatile
  7308                           
  7309                           ;motore.c: 101: for (char i = 0; i < 8; i++) {
  7310  00009C  0E00               	movlw	0
  7311  00009E  6E1E               	movwf	ISR_bassa@i,c
  7312  0000A0                     i1l3799:
  7313  0000A0  0E07               	movlw	7
  7314  0000A2  641E               	cpfsgt	ISR_bassa@i,c
  7315  0000A4  D001               	goto	i1l3803
  7316  0000A6  D014               	goto	i1l658
  7317  0000A8                     i1l3803:
  7318                           
  7319                           ;motore.c: 102: data_array[i] = msg.data[i];
  7320  0000A8  501E               	movf	ISR_bassa@i,w,c
  7321  0000AA  0D01               	mullw	1
  7322  0000AC  0E90               	movlw	low (_msg+4)
  7323  0000AE  24F3               	addwf	prodl,w,c
  7324  0000B0  6ED9               	movwf	fsr2l,c
  7325  0000B2  0E00               	movlw	high (_msg+4)
  7326  0000B4  20F4               	addwfc	prodh,w,c
  7327  0000B6  6EDA               	movwf	fsr2h,c
  7328  0000B8  501E               	movf	ISR_bassa@i,w,c
  7329  0000BA  0D01               	mullw	1
  7330  0000BC  0E9B               	movlw	low _data_array
  7331  0000BE  24F3               	addwf	prodl,w,c
  7332  0000C0  6EE1               	movwf	fsr1l,c
  7333  0000C2  0E00               	movlw	high _data_array
  7334  0000C4  20F4               	addwfc	prodh,w,c
  7335  0000C6  6EE2               	movwf	fsr1h,c
  7336  0000C8  CFDF FFE7          	movff	indf2,indf1
  7337  0000CC  2A1E               	incf	ISR_bassa@i,f,c
  7338  0000CE  D7E8               	goto	i1l3799
  7339  0000D0                     i1l658:
  7340                           
  7341                           ;motore.c: 103: }
  7342                           ;motore.c: 104: new_message = 1;
  7343  0000D0  8A38               	bsf	_new_message/(0+8),_new_message& (0+7),c	;volatile
  7344  0000D2                     i1l656:
  7345                           
  7346                           ;motore.c: 105: }
  7347                           ;motore.c: 106: PIR3bits.RXB0IF = 0;
  7348  0000D2  90A4               	bcf	4004,0,c	;volatile
  7349                           
  7350                           ;motore.c: 107: PIR3bits.RXB1IF = 0;
  7351  0000D4  92A4               	bcf	4004,1,c	;volatile
  7352  0000D6                     i1l652:
  7353                           
  7354                           ;motore.c: 108: }
  7355                           ;motore.c: 110: if (PIR2bits.TMR3IF) {
  7356  0000D6  A2A1               	btfss	4001,1,c	;volatile
  7357  0000D8  D00C               	goto	i1l660
  7358                           
  7359                           ;motore.c: 111: timeCounter++;
  7360  0000DA  0E01               	movlw	1
  7361  0000DC  0100               	movlb	0	; () banked
  7362  0000DE  2780               	addwf	_timeCounter& (0+255),f,b	;volatile
  7363  0000E0  0E00               	movlw	0
  7364  0000E2  2381               	addwfc	(_timeCounter+1)& (0+255),f,b	;volatile
  7365  0000E4  2382               	addwfc	(_timeCounter+2)& (0+255),f,b	;volatile
  7366  0000E6  2383               	addwfc	(_timeCounter+3)& (0+255),f,b	;volatile
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;motore.c: 112: TMR3H = 0x63;
  7370  0000E8  0E63               	movlw	99
  7371  0000EA  6EB3               	movwf	4019,c	;volatile
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;motore.c: 113: TMR3L = 0xC0;
  7375  0000EC  0EC0               	movlw	192
  7376  0000EE  6EB2               	movwf	4018,c	;volatile
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;motore.c: 114: PIR2bits.TMR3IF = 0;
  7380  0000F0  92A1               	bcf	4001,1,c	;volatile
  7381  0000F2                     i1l660:
  7382  0000F2  C01D  FFF5         	movff	??_ISR_bassa+16,tablat
  7383  0000F6  C01C  FFF8         	movff	??_ISR_bassa+15,tblptru
  7384  0000FA  C01B  FFF7         	movff	??_ISR_bassa+14,tblptrh
  7385  0000FE  C01A  FFF6         	movff	??_ISR_bassa+13,tblptrl
  7386  000102  C019  FFF4         	movff	??_ISR_bassa+12,prodh
  7387  000106  C018  FFF3         	movff	??_ISR_bassa+11,prodl
  7388  00010A  C017  FFDA         	movff	??_ISR_bassa+10,fsr2h
  7389  00010E  C016  FFD9         	movff	??_ISR_bassa+9,fsr2l
  7390  000112  C015  FFE2         	movff	??_ISR_bassa+8,fsr1h
  7391  000116  C014  FFE1         	movff	??_ISR_bassa+7,fsr1l
  7392  00011A  C013  FFEA         	movff	??_ISR_bassa+6,fsr0h
  7393  00011E  C012  FFE9         	movff	??_ISR_bassa+5,fsr0l
  7394  000122  C011  FFFB         	movff	??_ISR_bassa+4,pclatu
  7395  000126  C010  FFFA         	movff	??_ISR_bassa+3,pclath
  7396  00012A  C00F  FFE0         	movff	??_ISR_bassa+2,bsr
  7397  00012E  C00E  FFE8         	movff	??_ISR_bassa+1,wreg
  7398  000132  C00D  FFD8         	movff	??_ISR_bassa,status
  7399  000136  9041               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7400  000138  0010               	retfie	
  7401  00013A                     __end_of_ISR_bassa:
  7402                           	opt stack 0
  7403                           pclatu	equ	0xFFB
  7404                           pclath	equ	0xFFA
  7405                           tblptru	equ	0xFF8
  7406                           tblptrh	equ	0xFF7
  7407                           tblptrl	equ	0xFF6
  7408                           tablat	equ	0xFF5
  7409                           prodh	equ	0xFF4
  7410                           prodl	equ	0xFF3
  7411                           intcon	equ	0xFF2
  7412                           postinc0	equ	0xFEE
  7413                           fsr0h	equ	0xFEA
  7414                           fsr0l	equ	0xFE9
  7415                           wreg	equ	0xFE8
  7416                           indf1	equ	0xFE7
  7417                           postdec1	equ	0xFE5
  7418                           fsr1h	equ	0xFE2
  7419                           fsr1l	equ	0xFE1
  7420                           bsr	equ	0xFE0
  7421                           indf2	equ	0xFDF
  7422                           fsr2h	equ	0xFDA
  7423                           fsr2l	equ	0xFD9
  7424                           status	equ	0xFD8
  7425                           
  7426 ;; *************** function _CANreceiveMessage *****************
  7427 ;; Defined at:
  7428 ;;		line 528 in file "CANlib.h"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;  msg             2    0[COMRAM] PTR struct .
  7431 ;;		 -> msg(15), 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  tamp            1   11[COMRAM] unsigned char 
  7434 ;;  error           1   10[COMRAM] unsigned char 
  7435 ;; Return value:  Size  Location     Type
  7436 ;;                  1    wreg      unsigned char 
  7437 ;; Registers used:
  7438 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7439 ;; Tracked objects:
  7440 ;;		On entry : 0/0
  7441 ;;		On exit  : 0/0
  7442 ;;		Unchanged: 0/0
  7443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7444 ;;      Params:         2       0       0       0
  7445 ;;      Locals:         2       0       0       0
  7446 ;;      Temps:          8       0       0       0
  7447 ;;      Totals:        12       0       0       0
  7448 ;;Total ram usage:       12 bytes
  7449 ;; Hardware stack levels used:    1
  7450 ;; This function calls:
  7451 ;;		Nothing
  7452 ;; This function is called by:
  7453 ;;		_ISR_bassa
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           	psect	text21
  7458  0012F8                     __ptext21:
  7459                           	opt stack 0
  7460  0012F8                     _CANreceiveMessage:
  7461                           	opt stack 26
  7462                           
  7463                           ;CANlib.h: 530: BYTE tamp;
  7464                           ;CANlib.h: 531: BYTE error = 0;
  7465                           
  7466                           ;incstack = 0
  7467  0012F8  0E00               	movlw	0
  7468  0012FA  6E0B               	movwf	CANreceiveMessage@error,c
  7469                           
  7470                           ;CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7471  0012FC  BE74               	btfsc	3956,7,c	;volatile
  7472                           
  7473                           ;CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7474  0012FE  800B               	bsf	CANreceiveMessage@error,0,c
  7475                           
  7476                           ;CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7477  001300  BC74               	btfsc	3956,6,c	;volatile
  7478                           
  7479                           ;CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7480  001302  820B               	bsf	CANreceiveMessage@error,1,c
  7481                           
  7482                           ;CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7483  001304  010F               	movlb	15	; () banked
  7484  001306  AF50               	btfss	80,7,b	;volatile
  7485  001308  D143               	goto	i1l412
  7486                           
  7487                           ; BSR set to: 15
  7488                           ;CANlib.h: 541: {
  7489                           ;CANlib.h: 542: msg->identifier = 0;
  7490  00130A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7491  00130E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7492  001312  6ADE               	clrf	postinc2,c
  7493  001314  6ADE               	clrf	postinc2,c
  7494  001316  6ADE               	clrf	postinc2,c
  7495  001318  6ADD               	clrf	postdec2,c
  7496                           
  7497                           ; BSR set to: 15
  7498                           ;CANlib.h: 543: msg->data[0] =RXB1D0;
  7499  00131A  EE20 F004          	lfsr	2,4
  7500  00131E  5001               	movf	CANreceiveMessage@msg,w,c
  7501  001320  26D9               	addwf	fsr2l,f,c
  7502  001322  5002               	movf	CANreceiveMessage@msg+1,w,c
  7503  001324  22DA               	addwfc	fsr2h,f,c
  7504  001326  CF56 FFDF          	movff	3926,indf2	;volatile
  7505                           
  7506                           ; BSR set to: 15
  7507                           ;CANlib.h: 544: msg->data[1] =RXB1D1;
  7508  00132A  EE20 F005          	lfsr	2,5
  7509  00132E  5001               	movf	CANreceiveMessage@msg,w,c
  7510  001330  26D9               	addwf	fsr2l,f,c
  7511  001332  5002               	movf	CANreceiveMessage@msg+1,w,c
  7512  001334  22DA               	addwfc	fsr2h,f,c
  7513  001336  CF57 FFDF          	movff	3927,indf2	;volatile
  7514                           
  7515                           ; BSR set to: 15
  7516                           ;CANlib.h: 545: msg->data[2] =RXB1D2;
  7517  00133A  EE20 F006          	lfsr	2,6
  7518  00133E  5001               	movf	CANreceiveMessage@msg,w,c
  7519  001340  26D9               	addwf	fsr2l,f,c
  7520  001342  5002               	movf	CANreceiveMessage@msg+1,w,c
  7521  001344  22DA               	addwfc	fsr2h,f,c
  7522  001346  CF58 FFDF          	movff	3928,indf2	;volatile
  7523                           
  7524                           ; BSR set to: 15
  7525                           ;CANlib.h: 546: msg->data[3] =RXB1D3;
  7526  00134A  EE20 F007          	lfsr	2,7
  7527  00134E  5001               	movf	CANreceiveMessage@msg,w,c
  7528  001350  26D9               	addwf	fsr2l,f,c
  7529  001352  5002               	movf	CANreceiveMessage@msg+1,w,c
  7530  001354  22DA               	addwfc	fsr2h,f,c
  7531  001356  CF59 FFDF          	movff	3929,indf2	;volatile
  7532                           
  7533                           ; BSR set to: 15
  7534                           ;CANlib.h: 547: msg->data[4] =RXB1D4;
  7535  00135A  EE20 F008          	lfsr	2,8
  7536  00135E  5001               	movf	CANreceiveMessage@msg,w,c
  7537  001360  26D9               	addwf	fsr2l,f,c
  7538  001362  5002               	movf	CANreceiveMessage@msg+1,w,c
  7539  001364  22DA               	addwfc	fsr2h,f,c
  7540  001366  CF5A FFDF          	movff	3930,indf2	;volatile
  7541                           
  7542                           ; BSR set to: 15
  7543                           ;CANlib.h: 548: msg->data[5] =RXB1D5;
  7544  00136A  EE20 F009          	lfsr	2,9
  7545  00136E  5001               	movf	CANreceiveMessage@msg,w,c
  7546  001370  26D9               	addwf	fsr2l,f,c
  7547  001372  5002               	movf	CANreceiveMessage@msg+1,w,c
  7548  001374  22DA               	addwfc	fsr2h,f,c
  7549  001376  CF5B FFDF          	movff	3931,indf2	;volatile
  7550                           
  7551                           ; BSR set to: 15
  7552                           ;CANlib.h: 549: msg->data[6] =RXB1D6;
  7553  00137A  EE20 F00A          	lfsr	2,10
  7554  00137E  5001               	movf	CANreceiveMessage@msg,w,c
  7555  001380  26D9               	addwf	fsr2l,f,c
  7556  001382  5002               	movf	CANreceiveMessage@msg+1,w,c
  7557  001384  22DA               	addwfc	fsr2h,f,c
  7558  001386  CF5C FFDF          	movff	3932,indf2	;volatile
  7559                           
  7560                           ; BSR set to: 15
  7561                           ;CANlib.h: 550: msg->data[7] =RXB1D7;
  7562  00138A  EE20 F00B          	lfsr	2,11
  7563  00138E  5001               	movf	CANreceiveMessage@msg,w,c
  7564  001390  26D9               	addwf	fsr2l,f,c
  7565  001392  5002               	movf	CANreceiveMessage@msg+1,w,c
  7566  001394  22DA               	addwfc	fsr2h,f,c
  7567  001396  CF5D FFDF          	movff	3933,indf2	;volatile
  7568                           
  7569                           ; BSR set to: 15
  7570                           ;CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7571  00139A  EE20 F00E          	lfsr	2,14
  7572  00139E  5001               	movf	CANreceiveMessage@msg,w,c
  7573  0013A0  26D9               	addwf	fsr2l,f,c
  7574  0013A2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7575  0013A4  22DA               	addwfc	fsr2h,f,c
  7576  0013A6  010F               	movlb	15	; () banked
  7577  0013A8  AD55               	btfss	85,6,b	;volatile
  7578  0013AA  D002               	goto	i1u378_20
  7579  0013AC  0E01               	movlw	1
  7580  0013AE  D001               	goto	i1u378_26
  7581  0013B0                     i1u378_20:
  7582  0013B0  0E00               	movlw	0
  7583  0013B2                     i1u378_26:
  7584  0013B2  6EDF               	movwf	indf2,c
  7585                           
  7586                           ; BSR set to: 15
  7587                           ;CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7588  0013B4  EE20 F00D          	lfsr	2,13
  7589  0013B8  5001               	movf	CANreceiveMessage@msg,w,c
  7590  0013BA  26D9               	addwf	fsr2l,f,c
  7591  0013BC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7592  0013BE  22DA               	addwfc	fsr2h,f,c
  7593  0013C0  010F               	movlb	15	; () banked
  7594  0013C2  5155               	movf	85,w,b	;volatile
  7595  0013C4  0B0F               	andlw	15
  7596  0013C6  6EDF               	movwf	indf2,c
  7597                           
  7598                           ; BSR set to: 15
  7599                           ;CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7600  0013C8  EE20 F00C          	lfsr	2,12
  7601  0013CC  5001               	movf	CANreceiveMessage@msg,w,c
  7602  0013CE  26D9               	addwf	fsr2l,f,c
  7603  0013D0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7604  0013D2  22DA               	addwfc	fsr2h,f,c
  7605  0013D4  010F               	movlb	15	; () banked
  7606  0013D6  A752               	btfss	82,3,b	;volatile
  7607  0013D8  D002               	goto	i1u379_20
  7608  0013DA  0E01               	movlw	1
  7609  0013DC  D001               	goto	i1u379_26
  7610  0013DE                     i1u379_20:
  7611  0013DE  0E00               	movlw	0
  7612  0013E0                     i1u379_26:
  7613  0013E0  6EDF               	movwf	indf2,c
  7614                           
  7615                           ; BSR set to: 15
  7616                           ;CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7617  0013E2  010F               	movlb	15	; () banked
  7618  0013E4  B752               	btfsc	82,3,b	;volatile
  7619  0013E6  D044               	goto	i1l3465
  7620                           
  7621                           ; BSR set to: 15
  7622                           ;CANlib.h: 559: {
  7623                           ;CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7624  0013E8  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7625  0013EC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7626  0013EE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7627  0013F0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7628  0013F2  0E03               	movlw	3
  7629  0013F4                     i1u381_25:
  7630  0013F4  90D8               	bcf	status,0,c
  7631  0013F6  3603               	rlcf	??_CANreceiveMessage,f,c
  7632  0013F8  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7633  0013FA  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7634  0013FC  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7635  0013FE  2EE8               	decfsz	wreg,f,c
  7636  001400  D7F9               	goto	i1u381_25
  7637  001402  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7638  001406  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7639  00140A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7640  00140E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7641  001412  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7642  001416  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7643                           
  7644                           ; BSR set to: 15
  7645                           ;CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7646  00141A  010F               	movlb	15	; () banked
  7647  00141C  3952               	swapf	82,w,b	;volatile
  7648  00141E  42E8               	rrncf	wreg,f,c
  7649  001420  0B07               	andlw	7
  7650  001422  0B07               	andlw	7
  7651  001424  6E0C               	movwf	CANreceiveMessage@tamp,c
  7652                           
  7653                           ; BSR set to: 15
  7654                           ;CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7655  001426  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7656  00142A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7657  00142E  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7658  001432  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7659  001436  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7660  00143A  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7661  00143E  500C               	movf	CANreceiveMessage@tamp,w,c
  7662  001440  2403               	addwf	??_CANreceiveMessage,w,c
  7663  001442  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7664  001444  0E00               	movlw	0
  7665  001446  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7666  001448  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7667  00144A  0E00               	movlw	0
  7668  00144C  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7669  00144E  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7670  001450  0E00               	movlw	0
  7671  001452  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7672  001454  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7673  001456  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7674  00145A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7675  00145E  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7676  001462  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7677  001466  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7678  00146A  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7679                           
  7680                           ;CANlib.h: 563: }
  7681  00146E  D08D               	goto	i1l3491
  7682  001470                     i1l3465:
  7683                           
  7684                           ; BSR set to: 15
  7685                           ;CANlib.h: 564: else
  7686                           ;CANlib.h: 565: {
  7687                           ;CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7688  001470  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7689  001474  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7690  001476  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7691  001478  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7692  00147A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7693  00147E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7694  001482  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7695  001486  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7696  00148A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7697  00148E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7698                           
  7699                           ; BSR set to: 15
  7700                           ;CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7701  001492  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7702  001496  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7703  001498  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7704  00149A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7705  00149C  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7706  0014A0  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7707  0014A4  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7708  0014A8  6A03               	clrf	??_CANreceiveMessage,c
  7709  0014AA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7710  0014AE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7711  0014B2  5003               	movf	??_CANreceiveMessage,w,c
  7712  0014B4  26DE               	addwf	postinc2,f,c
  7713  0014B6  5004               	movf	??_CANreceiveMessage+1,w,c
  7714  0014B8  22DE               	addwfc	postinc2,f,c
  7715  0014BA  5005               	movf	??_CANreceiveMessage+2,w,c
  7716  0014BC  22DE               	addwfc	postinc2,f,c
  7717  0014BE  5006               	movf	??_CANreceiveMessage+3,w,c
  7718  0014C0  22DE               	addwfc	postinc2,f,c
  7719                           
  7720                           ; BSR set to: 15
  7721                           ;CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7722  0014C2  010F               	movlb	15	; () banked
  7723  0014C4  A152               	btfss	82,0,b	;volatile
  7724  0014C6  D00C               	goto	i1l3473
  7725                           
  7726                           ; BSR set to: 15
  7727                           ;CANlib.h: 570: msg->identifier |= 0x00010000;
  7728  0014C8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7729  0014CC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7730  0014D0  0E00               	movlw	0
  7731  0014D2  12DE               	iorwf	postinc2,f,c
  7732  0014D4  0E00               	movlw	0
  7733  0014D6  12DE               	iorwf	postinc2,f,c
  7734  0014D8  0E01               	movlw	1
  7735  0014DA  12DE               	iorwf	postinc2,f,c
  7736  0014DC  0E00               	movlw	0
  7737  0014DE  12DE               	iorwf	postinc2,f,c
  7738  0014E0                     i1l3473:
  7739                           
  7740                           ; BSR set to: 15
  7741                           ;CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7742  0014E0  010F               	movlb	15	; () banked
  7743  0014E2  A352               	btfss	82,1,b	;volatile
  7744  0014E4  D00C               	goto	i1l3477
  7745                           
  7746                           ; BSR set to: 15
  7747                           ;CANlib.h: 572: msg->identifier |= 0x00020000;
  7748  0014E6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7749  0014EA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7750  0014EE  0E00               	movlw	0
  7751  0014F0  12DE               	iorwf	postinc2,f,c
  7752  0014F2  0E00               	movlw	0
  7753  0014F4  12DE               	iorwf	postinc2,f,c
  7754  0014F6  0E02               	movlw	2
  7755  0014F8  12DE               	iorwf	postinc2,f,c
  7756  0014FA  0E00               	movlw	0
  7757  0014FC  12DE               	iorwf	postinc2,f,c
  7758  0014FE                     i1l3477:
  7759                           
  7760                           ; BSR set to: 15
  7761                           ;CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7762  0014FE  010F               	movlb	15	; () banked
  7763  001500  AB52               	btfss	82,5,b	;volatile
  7764  001502  D00C               	goto	i1l3481
  7765                           
  7766                           ; BSR set to: 15
  7767                           ;CANlib.h: 574: msg->identifier |= 0x00040000;
  7768  001504  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7769  001508  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7770  00150C  0E00               	movlw	0
  7771  00150E  12DE               	iorwf	postinc2,f,c
  7772  001510  0E00               	movlw	0
  7773  001512  12DE               	iorwf	postinc2,f,c
  7774  001514  0E04               	movlw	4
  7775  001516  12DE               	iorwf	postinc2,f,c
  7776  001518  0E00               	movlw	0
  7777  00151A  12DE               	iorwf	postinc2,f,c
  7778  00151C                     i1l3481:
  7779                           
  7780                           ; BSR set to: 15
  7781                           ;CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7782  00151C  010F               	movlb	15	; () banked
  7783  00151E  AD52               	btfss	82,6,b	;volatile
  7784  001520  D00C               	goto	i1l3485
  7785                           
  7786                           ; BSR set to: 15
  7787                           ;CANlib.h: 576: msg->identifier |= 0x00080000;
  7788  001522  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7789  001526  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7790  00152A  0E00               	movlw	0
  7791  00152C  12DE               	iorwf	postinc2,f,c
  7792  00152E  0E00               	movlw	0
  7793  001530  12DE               	iorwf	postinc2,f,c
  7794  001532  0E08               	movlw	8
  7795  001534  12DE               	iorwf	postinc2,f,c
  7796  001536  0E00               	movlw	0
  7797  001538  12DE               	iorwf	postinc2,f,c
  7798  00153A                     i1l3485:
  7799                           
  7800                           ; BSR set to: 15
  7801                           ;CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7802  00153A  010F               	movlb	15	; () banked
  7803  00153C  AF52               	btfss	82,7,b	;volatile
  7804  00153E  D00C               	goto	i1l3489
  7805                           
  7806                           ; BSR set to: 15
  7807                           ;CANlib.h: 578: msg->identifier |= 0x00100000;
  7808  001540  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7809  001544  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7810  001548  0E00               	movlw	0
  7811  00154A  12DE               	iorwf	postinc2,f,c
  7812  00154C  0E00               	movlw	0
  7813  00154E  12DE               	iorwf	postinc2,f,c
  7814  001550  0E10               	movlw	16
  7815  001552  12DE               	iorwf	postinc2,f,c
  7816  001554  0E00               	movlw	0
  7817  001556  12DE               	iorwf	postinc2,f,c
  7818  001558                     i1l3489:
  7819                           
  7820                           ; BSR set to: 15
  7821                           ;CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7822  001558  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7823  00155C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7824  00155E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7825  001560  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7826  001562  0E15               	movlw	21
  7827  001564                     i1u387_25:
  7828  001564  90D8               	bcf	status,0,c
  7829  001566  3603               	rlcf	??_CANreceiveMessage,f,c
  7830  001568  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7831  00156A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7832  00156C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7833  00156E  2EE8               	decfsz	wreg,f,c
  7834  001570  D7F9               	goto	i1u387_25
  7835  001572  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7836  001576  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7837  00157A  5003               	movf	??_CANreceiveMessage,w,c
  7838  00157C  12DE               	iorwf	postinc2,f,c
  7839  00157E  5004               	movf	??_CANreceiveMessage+1,w,c
  7840  001580  12DE               	iorwf	postinc2,f,c
  7841  001582  5005               	movf	??_CANreceiveMessage+2,w,c
  7842  001584  12DE               	iorwf	postinc2,f,c
  7843  001586  5006               	movf	??_CANreceiveMessage+3,w,c
  7844  001588  12DE               	iorwf	postinc2,f,c
  7845  00158A                     i1l3491:
  7846                           
  7847                           ; BSR set to: 15
  7848                           ;CANlib.h: 581: }
  7849                           ;CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7850  00158A  010F               	movlb	15	; () banked
  7851  00158C  9F50               	bcf	80,7,b	;volatile
  7852                           
  7853                           ; BSR set to: 15
  7854                           ;CANlib.h: 584: return (error);
  7855                           ;	Return value of _CANreceiveMessage is never used
  7856  00158E  0012               	return	
  7857  001590                     i1l412:
  7858                           
  7859                           ; BSR set to: 15
  7860                           ;CANlib.h: 585: }
  7861                           ;CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  7862  001590  AE60               	btfss	3936,7,c	;volatile
  7863  001592  0012               	return	
  7864                           
  7865                           ; BSR set to: 15
  7866                           ;CANlib.h: 588: {
  7867                           ;CANlib.h: 589: msg->identifier = 0;
  7868  001594  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7869  001598  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7870  00159C  6ADE               	clrf	postinc2,c
  7871  00159E  6ADE               	clrf	postinc2,c
  7872  0015A0  6ADE               	clrf	postinc2,c
  7873  0015A2  6ADD               	clrf	postdec2,c
  7874                           
  7875                           ; BSR set to: 15
  7876                           ;CANlib.h: 590: msg->data[0] =RXB0D0;
  7877  0015A4  EE20 F004          	lfsr	2,4
  7878  0015A8  5001               	movf	CANreceiveMessage@msg,w,c
  7879  0015AA  26D9               	addwf	fsr2l,f,c
  7880  0015AC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7881  0015AE  22DA               	addwfc	fsr2h,f,c
  7882  0015B0  CF66 FFDF          	movff	3942,indf2	;volatile
  7883                           
  7884                           ; BSR set to: 15
  7885                           ;CANlib.h: 591: msg->data[1] =RXB0D1;
  7886  0015B4  EE20 F005          	lfsr	2,5
  7887  0015B8  5001               	movf	CANreceiveMessage@msg,w,c
  7888  0015BA  26D9               	addwf	fsr2l,f,c
  7889  0015BC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7890  0015BE  22DA               	addwfc	fsr2h,f,c
  7891  0015C0  CF67 FFDF          	movff	3943,indf2	;volatile
  7892                           
  7893                           ; BSR set to: 15
  7894                           ;CANlib.h: 592: msg->data[2] =RXB0D2;
  7895  0015C4  EE20 F006          	lfsr	2,6
  7896  0015C8  5001               	movf	CANreceiveMessage@msg,w,c
  7897  0015CA  26D9               	addwf	fsr2l,f,c
  7898  0015CC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7899  0015CE  22DA               	addwfc	fsr2h,f,c
  7900  0015D0  CF68 FFDF          	movff	3944,indf2	;volatile
  7901                           
  7902                           ; BSR set to: 15
  7903                           ;CANlib.h: 593: msg->data[3] =RXB0D3;
  7904  0015D4  EE20 F007          	lfsr	2,7
  7905  0015D8  5001               	movf	CANreceiveMessage@msg,w,c
  7906  0015DA  26D9               	addwf	fsr2l,f,c
  7907  0015DC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7908  0015DE  22DA               	addwfc	fsr2h,f,c
  7909  0015E0  CF69 FFDF          	movff	3945,indf2	;volatile
  7910                           
  7911                           ; BSR set to: 15
  7912                           ;CANlib.h: 594: msg->data[4] =RXB0D4;
  7913  0015E4  EE20 F008          	lfsr	2,8
  7914  0015E8  5001               	movf	CANreceiveMessage@msg,w,c
  7915  0015EA  26D9               	addwf	fsr2l,f,c
  7916  0015EC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7917  0015EE  22DA               	addwfc	fsr2h,f,c
  7918  0015F0  CF6A FFDF          	movff	3946,indf2	;volatile
  7919                           
  7920                           ; BSR set to: 15
  7921                           ;CANlib.h: 595: msg->data[5] =RXB0D5;
  7922  0015F4  EE20 F009          	lfsr	2,9
  7923  0015F8  5001               	movf	CANreceiveMessage@msg,w,c
  7924  0015FA  26D9               	addwf	fsr2l,f,c
  7925  0015FC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7926  0015FE  22DA               	addwfc	fsr2h,f,c
  7927  001600  CF6B FFDF          	movff	3947,indf2	;volatile
  7928                           
  7929                           ; BSR set to: 15
  7930                           ;CANlib.h: 596: msg->data[6] =RXB0D6;
  7931  001604  EE20 F00A          	lfsr	2,10
  7932  001608  5001               	movf	CANreceiveMessage@msg,w,c
  7933  00160A  26D9               	addwf	fsr2l,f,c
  7934  00160C  5002               	movf	CANreceiveMessage@msg+1,w,c
  7935  00160E  22DA               	addwfc	fsr2h,f,c
  7936  001610  CF6C FFDF          	movff	3948,indf2	;volatile
  7937                           
  7938                           ; BSR set to: 15
  7939                           ;CANlib.h: 597: msg->data[7] =RXB0D7;
  7940  001614  EE20 F00B          	lfsr	2,11
  7941  001618  5001               	movf	CANreceiveMessage@msg,w,c
  7942  00161A  26D9               	addwf	fsr2l,f,c
  7943  00161C  5002               	movf	CANreceiveMessage@msg+1,w,c
  7944  00161E  22DA               	addwfc	fsr2h,f,c
  7945  001620  CF6D FFDF          	movff	3949,indf2	;volatile
  7946                           
  7947                           ; BSR set to: 15
  7948                           ;CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  7949  001624  EE20 F00E          	lfsr	2,14
  7950  001628  5001               	movf	CANreceiveMessage@msg,w,c
  7951  00162A  26D9               	addwf	fsr2l,f,c
  7952  00162C  5002               	movf	CANreceiveMessage@msg+1,w,c
  7953  00162E  22DA               	addwfc	fsr2h,f,c
  7954  001630  AC65               	btfss	3941,6,c	;volatile
  7955  001632  D002               	goto	i1u389_20
  7956  001634  0E01               	movlw	1
  7957  001636  D001               	goto	i1u389_26
  7958  001638                     i1u389_20:
  7959  001638  0E00               	movlw	0
  7960  00163A                     i1u389_26:
  7961  00163A  6EDF               	movwf	indf2,c
  7962                           
  7963                           ; BSR set to: 15
  7964                           ;CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  7965  00163C  EE20 F00D          	lfsr	2,13
  7966  001640  5001               	movf	CANreceiveMessage@msg,w,c
  7967  001642  26D9               	addwf	fsr2l,f,c
  7968  001644  5002               	movf	CANreceiveMessage@msg+1,w,c
  7969  001646  22DA               	addwfc	fsr2h,f,c
  7970  001648  5065               	movf	3941,w,c	;volatile
  7971  00164A  0B0F               	andlw	15
  7972  00164C  6EDF               	movwf	indf2,c
  7973                           
  7974                           ; BSR set to: 15
  7975                           ;CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  7976  00164E  EE20 F00C          	lfsr	2,12
  7977  001652  5001               	movf	CANreceiveMessage@msg,w,c
  7978  001654  26D9               	addwf	fsr2l,f,c
  7979  001656  5002               	movf	CANreceiveMessage@msg+1,w,c
  7980  001658  22DA               	addwfc	fsr2h,f,c
  7981  00165A  A662               	btfss	3938,3,c	;volatile
  7982  00165C  D002               	goto	i1u390_20
  7983  00165E  0E01               	movlw	1
  7984  001660  D001               	goto	i1u390_26
  7985  001662                     i1u390_20:
  7986  001662  0E00               	movlw	0
  7987  001664                     i1u390_26:
  7988  001664  6EDF               	movwf	indf2,c
  7989                           
  7990                           ; BSR set to: 15
  7991                           ;CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  7992  001666  B662               	btfsc	3938,3,c	;volatile
  7993  001668  D043               	goto	i1l3527
  7994                           
  7995                           ; BSR set to: 15
  7996                           ;CANlib.h: 606: {
  7997                           ;CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  7998  00166A  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  7999  00166E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8000  001670  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8001  001672  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8002  001674  0E03               	movlw	3
  8003  001676                     i1u392_25:
  8004  001676  90D8               	bcf	status,0,c
  8005  001678  3603               	rlcf	??_CANreceiveMessage,f,c
  8006  00167A  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8007  00167C  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8008  00167E  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8009  001680  2EE8               	decfsz	wreg,f,c
  8010  001682  D7F9               	goto	i1u392_25
  8011  001684  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8012  001688  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8013  00168C  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8014  001690  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8015  001694  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8016  001698  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8017                           
  8018                           ; BSR set to: 15
  8019                           ;CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8020  00169C  3862               	swapf	3938,w,c	;volatile
  8021  00169E  42E8               	rrncf	wreg,f,c
  8022  0016A0  0B07               	andlw	7
  8023  0016A2  0B07               	andlw	7
  8024  0016A4  6E0C               	movwf	CANreceiveMessage@tamp,c
  8025                           
  8026                           ; BSR set to: 15
  8027                           ;CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8028  0016A6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8029  0016AA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8030  0016AE  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8031  0016B2  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8032  0016B6  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8033  0016BA  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8034  0016BE  500C               	movf	CANreceiveMessage@tamp,w,c
  8035  0016C0  2403               	addwf	??_CANreceiveMessage,w,c
  8036  0016C2  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8037  0016C4  0E00               	movlw	0
  8038  0016C6  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8039  0016C8  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8040  0016CA  0E00               	movlw	0
  8041  0016CC  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8042  0016CE  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8043  0016D0  0E00               	movlw	0
  8044  0016D2  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8045  0016D4  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8046  0016D6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8047  0016DA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8048  0016DE  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8049  0016E2  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8050  0016E6  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8051  0016EA  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8052                           
  8053                           ;CANlib.h: 610: }
  8054  0016EE  D088               	goto	i1l3553
  8055  0016F0                     i1l3527:
  8056                           
  8057                           ; BSR set to: 15
  8058                           ;CANlib.h: 611: else
  8059                           ;CANlib.h: 612: {
  8060                           ;CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8061  0016F0  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8062  0016F4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8063  0016F6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8064  0016F8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8065  0016FA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8066  0016FE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8067  001702  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8068  001706  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8069  00170A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8070  00170E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8071                           
  8072                           ; BSR set to: 15
  8073                           ;CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8074  001712  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8075  001716  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8076  001718  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8077  00171A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8078  00171C  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8079  001720  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8080  001724  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8081  001728  6A03               	clrf	??_CANreceiveMessage,c
  8082  00172A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8083  00172E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8084  001732  5003               	movf	??_CANreceiveMessage,w,c
  8085  001734  26DE               	addwf	postinc2,f,c
  8086  001736  5004               	movf	??_CANreceiveMessage+1,w,c
  8087  001738  22DE               	addwfc	postinc2,f,c
  8088  00173A  5005               	movf	??_CANreceiveMessage+2,w,c
  8089  00173C  22DE               	addwfc	postinc2,f,c
  8090  00173E  5006               	movf	??_CANreceiveMessage+3,w,c
  8091  001740  22DE               	addwfc	postinc2,f,c
  8092                           
  8093                           ; BSR set to: 15
  8094                           ;CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8095  001742  A062               	btfss	3938,0,c	;volatile
  8096  001744  D00C               	goto	i1l3535
  8097                           
  8098                           ; BSR set to: 15
  8099                           ;CANlib.h: 617: msg->identifier |= 0x00010000;
  8100  001746  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8101  00174A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8102  00174E  0E00               	movlw	0
  8103  001750  12DE               	iorwf	postinc2,f,c
  8104  001752  0E00               	movlw	0
  8105  001754  12DE               	iorwf	postinc2,f,c
  8106  001756  0E01               	movlw	1
  8107  001758  12DE               	iorwf	postinc2,f,c
  8108  00175A  0E00               	movlw	0
  8109  00175C  12DE               	iorwf	postinc2,f,c
  8110  00175E                     i1l3535:
  8111                           
  8112                           ; BSR set to: 15
  8113                           ;CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8114  00175E  A262               	btfss	3938,1,c	;volatile
  8115  001760  D00C               	goto	i1l3539
  8116                           
  8117                           ; BSR set to: 15
  8118                           ;CANlib.h: 619: msg->identifier |= 0x00020000;
  8119  001762  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8120  001766  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8121  00176A  0E00               	movlw	0
  8122  00176C  12DE               	iorwf	postinc2,f,c
  8123  00176E  0E00               	movlw	0
  8124  001770  12DE               	iorwf	postinc2,f,c
  8125  001772  0E02               	movlw	2
  8126  001774  12DE               	iorwf	postinc2,f,c
  8127  001776  0E00               	movlw	0
  8128  001778  12DE               	iorwf	postinc2,f,c
  8129  00177A                     i1l3539:
  8130                           
  8131                           ; BSR set to: 15
  8132                           ;CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8133  00177A  AA62               	btfss	3938,5,c	;volatile
  8134  00177C  D00C               	goto	i1l3543
  8135                           
  8136                           ; BSR set to: 15
  8137                           ;CANlib.h: 621: msg->identifier |= 0x00040000;
  8138  00177E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8139  001782  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8140  001786  0E00               	movlw	0
  8141  001788  12DE               	iorwf	postinc2,f,c
  8142  00178A  0E00               	movlw	0
  8143  00178C  12DE               	iorwf	postinc2,f,c
  8144  00178E  0E04               	movlw	4
  8145  001790  12DE               	iorwf	postinc2,f,c
  8146  001792  0E00               	movlw	0
  8147  001794  12DE               	iorwf	postinc2,f,c
  8148  001796                     i1l3543:
  8149                           
  8150                           ; BSR set to: 15
  8151                           ;CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8152  001796  AC62               	btfss	3938,6,c	;volatile
  8153  001798  D00C               	goto	i1l3547
  8154                           
  8155                           ; BSR set to: 15
  8156                           ;CANlib.h: 623: msg->identifier |= 0x00080000;
  8157  00179A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8158  00179E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8159  0017A2  0E00               	movlw	0
  8160  0017A4  12DE               	iorwf	postinc2,f,c
  8161  0017A6  0E00               	movlw	0
  8162  0017A8  12DE               	iorwf	postinc2,f,c
  8163  0017AA  0E08               	movlw	8
  8164  0017AC  12DE               	iorwf	postinc2,f,c
  8165  0017AE  0E00               	movlw	0
  8166  0017B0  12DE               	iorwf	postinc2,f,c
  8167  0017B2                     i1l3547:
  8168                           
  8169                           ; BSR set to: 15
  8170                           ;CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8171  0017B2  AE62               	btfss	3938,7,c	;volatile
  8172  0017B4  D00C               	goto	i1l3551
  8173                           
  8174                           ; BSR set to: 15
  8175                           ;CANlib.h: 625: msg->identifier |= 0x00100000;
  8176  0017B6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8177  0017BA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8178  0017BE  0E00               	movlw	0
  8179  0017C0  12DE               	iorwf	postinc2,f,c
  8180  0017C2  0E00               	movlw	0
  8181  0017C4  12DE               	iorwf	postinc2,f,c
  8182  0017C6  0E10               	movlw	16
  8183  0017C8  12DE               	iorwf	postinc2,f,c
  8184  0017CA  0E00               	movlw	0
  8185  0017CC  12DE               	iorwf	postinc2,f,c
  8186  0017CE                     i1l3551:
  8187                           
  8188                           ; BSR set to: 15
  8189                           ;CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8190  0017CE  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8191  0017D2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8192  0017D4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8193  0017D6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8194  0017D8  0E15               	movlw	21
  8195  0017DA                     i1u398_25:
  8196  0017DA  90D8               	bcf	status,0,c
  8197  0017DC  3603               	rlcf	??_CANreceiveMessage,f,c
  8198  0017DE  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8199  0017E0  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8200  0017E2  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8201  0017E4  2EE8               	decfsz	wreg,f,c
  8202  0017E6  D7F9               	goto	i1u398_25
  8203  0017E8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8204  0017EC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8205  0017F0  5003               	movf	??_CANreceiveMessage,w,c
  8206  0017F2  12DE               	iorwf	postinc2,f,c
  8207  0017F4  5004               	movf	??_CANreceiveMessage+1,w,c
  8208  0017F6  12DE               	iorwf	postinc2,f,c
  8209  0017F8  5005               	movf	??_CANreceiveMessage+2,w,c
  8210  0017FA  12DE               	iorwf	postinc2,f,c
  8211  0017FC  5006               	movf	??_CANreceiveMessage+3,w,c
  8212  0017FE  12DE               	iorwf	postinc2,f,c
  8213  001800                     i1l3553:
  8214                           
  8215                           ; BSR set to: 15
  8216                           ;CANlib.h: 629: }
  8217                           ;CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8218  001800  9E60               	bcf	3936,7,c	;volatile
  8219                           
  8220                           ; BSR set to: 15
  8221                           ;CANlib.h: 632: return (error);
  8222                           ;	Return value of _CANreceiveMessage is never used
  8223  001802  0012               	return	
  8224  001804                     __end_of_CANreceiveMessage:
  8225                           	opt stack 0
  8226                           pclatu	equ	0xFFB
  8227                           pclath	equ	0xFFA
  8228                           tblptru	equ	0xFF8
  8229                           tblptrh	equ	0xFF7
  8230                           tblptrl	equ	0xFF6
  8231                           tablat	equ	0xFF5
  8232                           prodh	equ	0xFF4
  8233                           prodl	equ	0xFF3
  8234                           intcon	equ	0xFF2
  8235                           postinc0	equ	0xFEE
  8236                           fsr0h	equ	0xFEA
  8237                           fsr0l	equ	0xFE9
  8238                           wreg	equ	0xFE8
  8239                           indf1	equ	0xFE7
  8240                           postdec1	equ	0xFE5
  8241                           fsr1h	equ	0xFE2
  8242                           fsr1l	equ	0xFE1
  8243                           bsr	equ	0xFE0
  8244                           indf2	equ	0xFDF
  8245                           postinc2	equ	0xFDE
  8246                           postdec2	equ	0xFDD
  8247                           fsr2h	equ	0xFDA
  8248                           fsr2l	equ	0xFD9
  8249                           status	equ	0xFD8
  8250                           
  8251 ;; *************** function _CANisRxReady *****************
  8252 ;; Defined at:
  8253 ;;		line 1163 in file "CANlib.h"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;		None
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;		None
  8258 ;; Return value:  Size  Location     Type
  8259 ;;                  1    wreg      unsigned char 
  8260 ;; Registers used:
  8261 ;;		wreg, status,2
  8262 ;; Tracked objects:
  8263 ;;		On entry : 0/0
  8264 ;;		On exit  : 0/0
  8265 ;;		Unchanged: 0/0
  8266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8267 ;;      Params:         0       0       0       0
  8268 ;;      Locals:         1       0       0       0
  8269 ;;      Temps:          0       0       0       0
  8270 ;;      Totals:         1       0       0       0
  8271 ;;Total ram usage:        1 bytes
  8272 ;; Hardware stack levels used:    1
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_ISR_bassa
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text22
  8281  002538                     __ptext22:
  8282                           	opt stack 0
  8283  002538                     _CANisRxReady:
  8284                           	opt stack 26
  8285                           
  8286                           ;CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8287                           
  8288                           ; BSR set to: 15
  8289                           ;incstack = 0
  8290  002538  0E01               	movlw	1
  8291  00253A  6E01               	movwf	_CANisRxReady$3002,c
  8292  00253C  BE60               	btfsc	3936,7,c	;volatile
  8293  00253E  D005               	goto	i1l563
  8294  002540  010F               	movlb	15	; () banked
  8295  002542  BF50               	btfsc	80,7,b	;volatile
  8296  002544  D002               	goto	i1l563
  8297                           
  8298                           ; BSR set to: 15
  8299  002546  0E00               	movlw	0
  8300  002548  6E01               	movwf	_CANisRxReady$3002,c
  8301  00254A                     i1l563:
  8302  00254A  5001               	movf	_CANisRxReady$3002,w,c
  8303  00254C  0012               	return	
  8304  00254E                     __end_of_CANisRxReady:
  8305                           	opt stack 0
  8306  0000                     pclatu	equ	0xFFB
  8307                           pclath	equ	0xFFA
  8308                           tblptru	equ	0xFF8
  8309                           tblptrh	equ	0xFF7
  8310                           tblptrl	equ	0xFF6
  8311                           tablat	equ	0xFF5
  8312                           prodh	equ	0xFF4
  8313                           prodl	equ	0xFF3
  8314                           intcon	equ	0xFF2
  8315                           postinc0	equ	0xFEE
  8316                           fsr0h	equ	0xFEA
  8317                           fsr0l	equ	0xFE9
  8318                           wreg	equ	0xFE8
  8319                           indf1	equ	0xFE7
  8320                           postdec1	equ	0xFE5
  8321                           fsr1h	equ	0xFE2
  8322                           fsr1l	equ	0xFE1
  8323                           bsr	equ	0xFE0
  8324                           indf2	equ	0xFDF
  8325                           postinc2	equ	0xFDE
  8326                           postdec2	equ	0xFDD
  8327                           fsr2h	equ	0xFDA
  8328                           fsr2l	equ	0xFD9
  8329                           status	equ	0xFD8
  8330                           pclatu	equ	0xFFB
  8331                           pclath	equ	0xFFA
  8332                           tblptru	equ	0xFF8
  8333                           tblptrh	equ	0xFF7
  8334                           tblptrl	equ	0xFF6
  8335                           tablat	equ	0xFF5
  8336                           prodh	equ	0xFF4
  8337                           prodl	equ	0xFF3
  8338                           intcon	equ	0xFF2
  8339                           postinc0	equ	0xFEE
  8340                           fsr0h	equ	0xFEA
  8341                           fsr0l	equ	0xFE9
  8342                           wreg	equ	0xFE8
  8343                           indf1	equ	0xFE7
  8344                           postdec1	equ	0xFE5
  8345                           fsr1h	equ	0xFE2
  8346                           fsr1l	equ	0xFE1
  8347                           bsr	equ	0xFE0
  8348                           indf2	equ	0xFDF
  8349                           postinc2	equ	0xFDE
  8350                           postdec2	equ	0xFDD
  8351                           fsr2h	equ	0xFDA
  8352                           fsr2l	equ	0xFD9
  8353                           status	equ	0xFD8
  8354                           
  8355                           	psect	rparam
  8356  0000                     pclatu	equ	0xFFB
  8357                           pclath	equ	0xFFA
  8358                           tblptru	equ	0xFF8
  8359                           tblptrh	equ	0xFF7
  8360                           tblptrl	equ	0xFF6
  8361                           tablat	equ	0xFF5
  8362                           prodh	equ	0xFF4
  8363                           prodl	equ	0xFF3
  8364                           intcon	equ	0xFF2
  8365                           postinc0	equ	0xFEE
  8366                           fsr0h	equ	0xFEA
  8367                           fsr0l	equ	0xFE9
  8368                           wreg	equ	0xFE8
  8369                           indf1	equ	0xFE7
  8370                           postdec1	equ	0xFE5
  8371                           fsr1h	equ	0xFE2
  8372                           fsr1l	equ	0xFE1
  8373                           bsr	equ	0xFE0
  8374                           indf2	equ	0xFDF
  8375                           postinc2	equ	0xFDE
  8376                           postdec2	equ	0xFDD
  8377                           fsr2h	equ	0xFDA
  8378                           fsr2l	equ	0xFD9
  8379                           status	equ	0xFD8
  8380                           
  8381                           	psect	temp
  8382  000041                     btemp:
  8383                           	opt stack 0
  8384  000041                     	ds	1
  8385  0000                     int$flags	set	btemp
  8386                           pclatu	equ	0xFFB
  8387                           pclath	equ	0xFFA
  8388                           tblptru	equ	0xFF8
  8389                           tblptrh	equ	0xFF7
  8390                           tblptrl	equ	0xFF6
  8391                           tablat	equ	0xFF5
  8392                           prodh	equ	0xFF4
  8393                           prodl	equ	0xFF3
  8394                           intcon	equ	0xFF2
  8395                           postinc0	equ	0xFEE
  8396                           fsr0h	equ	0xFEA
  8397                           fsr0l	equ	0xFE9
  8398                           wreg	equ	0xFE8
  8399                           indf1	equ	0xFE7
  8400                           postdec1	equ	0xFE5
  8401                           fsr1h	equ	0xFE2
  8402                           fsr1l	equ	0xFE1
  8403                           bsr	equ	0xFE0
  8404                           indf2	equ	0xFDF
  8405                           postinc2	equ	0xFDE
  8406                           postdec2	equ	0xFDD
  8407                           fsr2h	equ	0xFDA
  8408                           fsr2l	equ	0xFD9
  8409                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         95
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      64
    BANK0           160     30     105
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array_debug(BANK0[8]), data_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    _send_data->_CANsendMessage
    _rampe->_CANsendMessage
    _rampe->_SetDCEPWM1
    _rampe->___lwdiv
    _rampe->_abs
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _rampe->_CANsendMessage
    _configurazione_iniziale->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   24126
                                             21 BANK0      9     9      0
                       _CANisTxReady
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                    _battery_measure
                    _can_interpreter
            _configurazione_iniziale
                           _delay_ms
                              _rampe
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    4005
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (1) _rampe                                                8     8      0    5171
                                             12 BANK0      8     8      0
                       _CANisTxReady
                     _CANsendMessage
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___lwdiv
                                _abs
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     130
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     395
                                             30 COMRAM     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _SetDCEPWM1                                           6     4      2     253
                                             30 COMRAM     4     2      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    3981
                                             30 COMRAM     4     4      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    9402
                      _CANInitialize
                     _SetOutputEPWM1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     802
                                              2 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     386
                                             30 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SetOutputEPWM1                                       2     1      1     388
                                             30 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                              9 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             30 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             30 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             30 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      44
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      22
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           18    18      0    1251
                                             12 COMRAM    18    18      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   _battery_measure
   _can_interpreter
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _SetOutputEPWM1
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul
   _rampe
     _CANisTxReady
     _CANsendMessage
     _SetDCEPWM1
     _SetOutputEPWM1
     ___lwdiv
     _abs
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1E      69       4       65.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     23      40       1       68.1%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A9       9        0.0%
DATA                 0      0      A9      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Mar 24 15:26:58 2016

            __end_of_CANSetFilter 0B84                                _id 0028  
                              bsr 000FE0               ___wmul@multiplicand 0021  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 23F6  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000              _previousTimeCounter1 0078  
            _previousTimeCounter2 007C                               l400 1130  
                             l401 113A                               l500 0902  
                             l404 1244                               l501 0906  
                             l405 1248                               l510 09FE  
                             l502 0910                               l406 1254  
                             l511 0A08                               l503 0914  
                             l520 0B00                               l512 0A0C  
                             l504 091E                               l440 1A06  
                             l360 2086                               l521 0B04  
                             l513 0A16                               l505 0922  
                             l441 1A0A                               l361 2090  
                             l522 0B0E                               l514 0A1A  
                             l506 092C                               l450 1AFE  
                             l442 1A14                               l434 19DC  
                             l370 0C2E                               l523 0B12  
                             l515 0A24                               l451 1B08  
                             l435 19E0                               l371 0C38  
                             l524 0B1C                               l516 0A28  
                             l452 1B0C                               l436 19EA  
                             l380 107C                               l372 0C42  
                             l525 0B20                               l517 0A32  
                             l509 09FA                               l453 1B16  
                             l445 1ADE                               l437 19EE  
                             l381 0E16                               l365 0E00  
                             l701 23A4                               l526 0B2A  
                             l470 0604                               l446 1AE2  
                             l438 19F8                               l390 0FC8  
                             l382 0E1A                               l366 0B9A  
                             l527 0B2E                               l471 060E  
                             l447 1AEC                               l439 19FC  
                             l391 0FCC                               l383 0F0E  
                             l375 0D4C                               l367 0B9E  
                             l528 0B38                               l480 0704  
                             l472 0612                               l448 1AF0  
                             l392 0FD8                               l384 0EA0  
                             l376 0D50                               l368 0C92  
                             l481 0708                               l473 061C  
                             l465 05E4                               l449 1AFA  
                             l385 0EAA                               l377 0D5C  
                             l369 0C24                               l490 0800  
                             l482 0712                               l466 05E8  
                             l386 0EB4                               l491 080A  
                             l483 0716                               l467 05F2  
                             l571 249E                               l395 1092  
                             l387 0EBE                               l492 080E  
                             l484 0720                               l476 06E8  
                             l468 05F6                               l396 1096  
                             l709 224E                               l493 0818  
                             l477 06EC                               l469 0600  
                             l397 118A                               l494 081C  
                             l478 06F6                               l558 2518  
                             l398 111C                               l495 0826  
                             l487 07EE                               l479 06FA  
                             l399 1126                               l815 24F4  
                             l488 07F2                               l489 07FC  
                             l498 08F4                               l674 1CEE  
                             l763 2532                               l499 08F8  
                             l764 2534                               l749 2430  
                             l669 1CDA                               l699 23A8  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                               _abs 24D6  
                             _dir 003E                               _msg 008C  
                             prod 000FF3                               wreg 000FE8  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
                            ?_abs 001F                              l1172 2354  
                            l4001 1B1A                              l4025 01F2  
                            l4211 082A                              l4115 0560  
                            l4043 02A0                              l4061 0350  
                            l4143 0620                              l4313 0B3C  
                            l4217 0870                              l4251 0976  
                            l4245 0930                              l4149 0666  
                            l4183 076A                              l4079 0400  
                            l3383 2414                              l4511 0FDC  
                            l3705 2220                              l4177 0724  
                            l4097 04B0                              l4505 0FBC  
                            l4409 0C4C                              l3715 2244  
                            l4371 20E0                              l4363 207E  
                            l3387 2422                              l4435 0D60  
                            l4285 0A7C                              l4365 2094  
                            l4429 0D40                              l4279 0A36  
                            l4623 231A                              l4369 209C  
                            l4609 2490                              l4561 1144  
                            l4625 2324                              l4635 2348  
                            l4627 2328                              l3909 2554  
                            l4581 1238                              l4485 0EC8  
                            l3695 21E8                              l3943 195E  
                            l3927 18B2                              l4735 1DA4  
                            l3689 21CA                              l4745 1DF2  
                            l4833 1C2C                              l4825 1C16  
                            l4817 1B9C                              l4587 1258  
                            l4771 1FAC                              l4827 1C22  
                            l4765 1F5A                              l4749 1E04  
                            l4773 1FB4                              l4861 1D22  
                            l3975 1A5E                              l4839 1C9E  
                            l3969 1A18                              l4769 1FA0  
                            l4785 2398                              l4857 1D10  
                            l4859 1D12                              _LATA 000F89  
                            _LATB 000F8A                              _LATC 000F8B  
                            _LATD 000F8C                              _LATE 000F8D  
                            u4500 18E2                              u6020 1C10  
                            u5310 0A56                              u5230 0950  
                            u5150 084A                              u5070 0744  
                            u6110 1D8E                              u4505 18D6  
                            u6050 1C9A                              u5315 0A4A  
                            u5235 0944                              u5155 083E  
                            u5075 0738                              u4515 193A  
                            u4700 0176                              u4460 1836  
                            u6127 2492                              u5520 0C6A  
                            u4705 016A                              u4465 182A  
                            u5530 0CB4                              u4715 01CE  
                            u4475 188E                              u4900 04E4  
                            u4820 0384                              u4740 0224  
                            u5525 0C60                              u5390 0B5C  
                            u4670 1B3A                              u4590 1A38  
                            u5535 0CAA                              u4905 04D8  
                            u4825 0378                              u4745 0218  
                            u5545 0D14                              u5650 0EE6  
                            u5395 0B50                              u4915 053C  
                            u4835 03DC                              u4755 027C  
                            u4675 1B2E                              u4595 1A2C  
                            u4860 0434                              u4780 02D4  
                            u5660 0F30                              u5805 120C  
                            u5655 0EDC                              u5920 1EA2  
                            u4865 0428                              u4785 02C8  
                            u5665 0F26                              u5930 1F0A  
                            u4875 048C                              u4795 032C  
                            u5675 0F90                              u5780 1162  
                            u5845 2444                              u4990 0640  
                            u5790 11AC                              u5950 1F8E  
                            u5785 1158                              u4995 0634  
                            u5795 11A2                              _TMR2 000FCC  
             __size_of_CANSetMask 035E                              abs@a 001F  
                            _main 1B62                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 0041  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 013A  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000010                  _CANOperationMode 254E  
          __end_of_SetOutputEPWM1 243A                             ??_abs 0021  
      __size_of_CANreceiveMessage 050C                             ?_main 0001  
                           _T2CON 000FCA                             _T3CON 000FB1  
                 __end_of___lwdiv 235E                             i1l412 1590  
                           i1l563 254A                             i1l660 00F2  
                           i1l652 00D6                             i1l654 0066  
                           i1l656 00D2                             i1l658 00D0  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
               _CANisRxReady$3002 0001                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                __size_of_ISR_bassa 0122  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                CANInitialize@flags 00B8  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           _vBatt 008A                             _rampe 1DA4  
                  __pbitbssCOMRAM 01C0              __end_of_CANisRxReady 254E  
                           tablat 000FF5              __end_of_CANisTxReady 251C  
                           status 000FD8                    __CFG_PBADEN$ON 000000  
                      _SetDCEPWM1 243A                   __initialization 23AC  
        __size_of_battery_measure 0002                      __end_of_main 1DA4  
                 ?_SetOutputEPWM1 001F                            ??_main 00C0  
                   __activetblptr 000002                 _CANisTxReady$3000 001F  
                   _counter_array 0060                            _CANCON 000F6F  
                          ?_rampe 0001                   __CFG_BBSIZ$1024 000000  
                          i1l3551 17CE                            i1l3543 1796  
                          i1l3535 175E                            i1l3527 16F0  
                          i1l3553 1800                            i1l3481 151C  
                          i1l3473 14E0                            i1l3465 1470  
                          i1l3547 17B2                            i1l3539 177A  
                          i1l3491 158A                            i1l3803 00A8  
                          i1l3485 153A                            i1l3477 14FE  
                          i1l3489 1558                            i1l3795 008C  
                      _OpenTimer2 251C                            i1l3799 00A0  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 00AF                CANsendMessage@tamp 00B3  
                __end_of_delay_ms 24AC             __size_of_CANSetFilter 0A46  
                  __CFG_XINST$OFF 000000                __size_of_OpenEPWM1 0010  
               __end_of_ISR_bassa 013A                            ___wmul 24AC  
                  __CFG_STVREN$ON 000000                         ??___lwdiv 0023  
                    ??_CANSetMask 00AB                            _errore 0088  
                OpenTimer2@config 001F                            clear_0 23B2  
                          clear_1 23C2          ?_configurazione_iniziale 0001  
                 __CFG_BOREN$BOHW 000000                      __pdataCOMRAM 003A  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                      _CANSetFilter 013E  
                      __accesstop 0060           __end_of__initialization 23E8  
              __end_of_CANSetMask 1B62                     ___rparam_used 000001  
                     ?_SetDCEPWM1 001F                    __pcstackCOMRAM 0001  
                   __end_of_rampe 1FD2                 ??_battery_measure 001F  
           CANSetFilter@numBuffer 00AF                   OpenEPWM1@period 001F  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 001E  
               __end_of_OpenEPWM1 2570                           ??_rampe 00B7  
        __end_of_CANOperationMode 2560                        __pbssBANK0 0060  
                     ?_OpenTimer2 0001                        _data_array 009B  
         __size_of_CANsendMessage 0774          __size_of_can_interpreter 00CE  
                         ?___wmul 001F                __size_of_send_data 004E  
                    _CANisRxReady 2538                           _ECCPR1L 000FBB  
                         _CANSTAT 000F6E                      _CANisTxReady 24FE  
                         _BRGCON1 000F70                           _BRGCON2 000F71  
                         _BRGCON3 000F72            __size_of_CANInitialize 01B2  
                       ?_delay_ms 00AD                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
             __size_of_SetDCEPWM1 003A                           _RXB1CON 000F50  
                         _TXB0DLC 000F45                           _TXB1DLC 000F35  
                         _TXB2DLC 000F25               CANsendMessage@flags 00B2  
                _data_array_debug 00A3          SetOutputEPWM1@outputmode 001F  
                      _correzione 0070                  ??_SetOutputEPWM1 0020  
                         __Hparam 0000                        _left_speed 0030  
                         __Lparam 0000                  delay_ms@value_ms 00AD  
                 __size_of___wmul 002A                           ___lwdiv 2300  
            CANInitialize@propSeg 00BD                           __pcinit 23AC  
                         __ramtop 0300               __size_of_OpenTimer2 001C  
                         __ptext0 1B62                           __ptext1 235E  
                         __ptext2 1DA4                           __ptext3 24D6  
                         __ptext4 2300                           __ptext5 243A  
                         __ptext6 0B84                           __ptext7 24FE  
                         __ptext8 2252                           __ptext9 2474  
                       _T2CONbits 000FCA                      __size_of_abs 0028  
                         _current 0036                        _duty_cycle 0086  
                      ??_delay_ms 0023            CANreceiveMessage@error 000B  
            end_of_initialization 23E8                 __end_of_send_data 23AC  
                   __Lmediumconst 0000                     _CANInitialize 1FD2  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
                       _ISR_bassa 0018                 ??_can_interpreter 001F  
                       _PORTAbits 000F80                    CANSetMask@mask 001F  
                       _PORTCbits 000F82                    CANSetMask@tamp 00B0  
                  _centralina_abs 01C1                    CANSetMask@type 0023  
                       _TRISDbits 000F95  __size_of_configurazione_iniziale 00AE  
             _previousTimeCounter 0074           _clock_counter_reference 0084  
                  _CANsendMessage 0B84                  CANInitialize@BRP 00B7  
                CANInitialize@SJW 00B6                    ?_CANInitialize 00B4  
                      main@period 00C8                      ??_SetDCEPWM1 0021  
                 _battery_measure 2578                        ?_ISR_bassa 0001  
                  __end_of___wmul 24D6                     __pidataCOMRAM 2570  
             start_initialization 23AC                       __end_of_abs 24FE  
              __end_of_SetDCEPWM1 2474               CANSetMask@numBuffer 00AF  
          __end_of_CANsendMessage 12F8                 ?_CANOperationMode 0001  
                    ??_OpenTimer2 001F                         _OpenEPWM1 2560  
              ??_CANOperationMode 001F        CANInitialize@FilterConfig1 00BE  
      CANInitialize@FilterConfig2 00BF                          ??___wmul 0023  
                __CFG_LPT1OSC$OFF 000000                __end_of_OpenTimer2 2538  
          CANInitialize@phaseSeg1 00B4            CANInitialize@phaseSeg2 00B5  
                     __pbssCOMRAM 0024                     __pcstackBANK0 00AB  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
             SetDCEPWM1@dutycycle 001F                 __size_of_delay_ms 0038  
                 ?_CANsendMessage 00AB                        ?_OpenEPWM1 0001  
         __end_of_battery_measure 257A                   ??_CANInitialize 00B9  
                       _can_retry 01C0                      _currentSpeed 003A  
              CANSetFilter@filter 001F                  ___lwdiv@dividend 001F  
                        ?___lwdiv 001F                       ??_ISR_bassa 000D  
                     __pintcodelo 0018                          _ECCP1CON 000FBA  
                     _COMSTATbits 000F74        SetOutputEPWM1@outputconfig 0020  
                      ISR_bassa@i 001E                     _remote_frame1 01C7  
                ___lwdiv@quotient 00AC           _configurazione_iniziale 2252  
                  __size_of_rampe 022E                      _message_sent 01C4  
           CANreceiveMessage@tamp 000C                    ___wmul@product 00AB  
                 _can_interpreter 2184                          _IPR2bits 000FA2  
    _delay_quartz_frequency_value 0040                          _PIE1bits 000F9D  
                        _IPR3bits 000FA5                          _PIE2bits 000FA0  
                       _send_data 235E                          _PIE3bits 000FA3  
                        i1u427_20 008A                          i1u381_25 13F4  
                        i1u390_20 1662                          i1u390_26 1664  
                        i1u392_25 1676                          i1u378_20 13B0  
                        i1u378_26 13B2                          i1u379_20 13DE  
                        i1u387_25 1564                          i1u379_26 13E0  
                        i1u389_20 1638                          i1u389_26 163A  
                        i1u398_25 17DA                          _PIR1bits 000F9E  
                        _PIR2bits 000FA1                          _PIR3bits 000FA4  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                        _RXB0SIDH 000F61                         _scrittura 0037  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
                        _TXERRCNT 000F76                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                        _ADCON2bits 000FC0  
               ___wmul@multiplier 001F                     ?_CANSetFilter 001F  
                       copy_data0 23DC                        _CANCONbits 000F6F  
                     ??_OpenEPWM1 001F                  ?_battery_measure 0001  
                      ?_send_data 0001                          __Hrparam 0000  
                    _RXB0SIDLbits 000F62                  SetDCEPWM1@DCycle 00AB  
                        __Lrparam 0000                      _RXB1SIDLbits 000F52  
              _centralina_comando 01C2                        _CANSetMask 1804  
                __size_of___lwdiv 005E           __size_of_SetOutputEPWM1 0044  
              _currentSpeed_array 0068         ??_configurazione_iniziale 0024  
                    _RXF0SIDLbits 000F01                          _delay_ms 2474  
                 ___lwdiv@divisor 0021                      _RXF1SIDLbits 000F05  
                 ___lwdiv@counter 00AB                    ??_CANSetFilter 00AB  
                        __ptext10 24AC                          __ptext11 23F6  
                        __ptext12 1FD2                          __ptext21 12F8  
                        __ptext13 1804                          __ptext22 2538  
                        __ptext14 013E                          __ptext15 254E  
                        __ptext16 2184                          __ptext17 2578  
                        __ptext18 251C                          __ptext19 2560  
                    _RXF2SIDLbits 000F09           __end_of_can_interpreter 2252  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                   _speed_fetched 01C9                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 00B1                      _remote_frame 01C6  
                   __size_of_main 0242                          _duty_set 0024  
            CANreceiveMessage@msg 0001                      _TXB0SIDLbits 000F42  
                     _new_message 01C5                      _TXB1SIDLbits 000F32  
                    _TXB2SIDLbits 000F22                          int$flags 0041  
       __size_of_CANOperationMode 0012                     ?_CANisRxReady 0001  
                   ?_CANisTxReady 0001                       _RXB0DLCbits 000F65  
                     _RXB1DLCbits 000F55                      _RXM0SIDLbits 000F19  
                     _RXB0CONbits 000F60                       _RXB1CONbits 000F50  
               _CANreceiveMessage 12F8                      _RXM1SIDLbits 000F1D  
                      _INTCONbits 000FF2                  ??_CANsendMessage 001F  
                    _requestSpeed 002C                ?_CANreceiveMessage 0001  
                    _request_sent 01C8          CANsendMessage@identifier 00AB  
                        intlevel1 0000                 _centralina_sterzo 01C3  
                CANSetFilter@tamp 00B0                  CANSetFilter@type 0023  
             ??_CANreceiveMessage 0003                       _TXB0DLCbits 000F45  
                     _right_speed 0034                       _TXB1DLCbits 000F35  
                     _TXB0CONbits 000F40                       ??_send_data 0023  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 2300  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
                     _timeCounter 0080              CANOperationMode@mode 001F  
                  ??_CANisRxReady 0001                       ?_CANSetMask 001F  
                  ??_CANisTxReady 001F         __end_of_CANreceiveMessage 1804  
                ?_can_interpreter 0001                       _previousPwm 0032  
           __end_of_CANInitialize 2184  
