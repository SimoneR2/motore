

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Jun 09 17:30:47 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    64  0000                     
    65                           	psect	idataCOMRAM
    66  004F98                     __pidataCOMRAM:
    67                           	opt stack 0
    68                           
    69                           ;initializer for _delay_quartz_frequency_value
    70  004F98  10                 	db	16
    71                           
    72                           	psect	idataBANK0
    73  004F96                     __pidataBANK0:
    74                           	opt stack 0
    75                           
    76                           ;initializer for _dir
    77  004F96  0001               	dw	1
    78                           
    79                           	psect	smallconst
    80  000D00                     __psmallconst:
    81                           	opt stack 0
    82  000D00  00                 	db	0
    83  000D01                     exp@coeff:
    84                           	opt stack 0
    85  000D01  0000               	dw	0
    86  000D03  3F80               	dw	16256
    87  000D05  7218               	dw	29208
    88  000D07  3F31               	dw	16177
    89  000D09  FDF0               	dw	65008
    90  000D0B  3E75               	dw	15989
    91  000D0D  5847               	dw	22599
    92  000D0F  3D63               	dw	15715
    93  000D11  9558               	dw	38232
    94  000D13  3C1D               	dw	15389
    95  000D15  C482               	dw	50306
    96  000D17  3AAE               	dw	15022
    97  000D19  78A8               	dw	30888
    98  000D1B  3921               	dw	14625
    99  000D1D  93EF               	dw	37871
   100  000D1F  3780               	dw	14208
   101  000D21  92A0               	dw	37536
   102  000D23  35A7               	dw	13735
   103  000D25  5646               	dw	22086
   104  000D27  3415               	dw	13333
   105  000D29                     __end_ofexp@coeff:
   106                           	opt stack 0
   107  000D29                     log@coeff:
   108                           	opt stack 0
   109  000D29  0000               	dw	0
   110  000D2B  0000               	dw	0
   111  000D2D  FFC4               	dw	65476
   112  000D2F  3F7F               	dw	16255
   113  000D31  EF80               	dw	61312
   114  000D33  BEFF               	dw	48895
   115  000D35  E190               	dw	57744
   116  000D37  3EA9               	dw	16041
   117  000D39  82EC               	dw	33516
   118  000D3B  BE76               	dw	48758
   119  000D3D  AD82               	dw	44418
   120  000D3F  3E2B               	dw	15915
   121  000D41  3C0E               	dw	15374
   122  000D43  BDC3               	dw	48579
   123  000D45  D187               	dw	53639
   124  000D47  3D13               	dw	15635
   125  000D49  7841               	dw	30785
   126  000D4B  BBD3               	dw	48083
   127  000D4D                     __end_oflog@coeff:
   128                           	opt stack 0
   129  0000                     _RXB1CON	set	3920
   130  0000                     _RXB1CONbits	set	3920
   131  0000                     _RXB1D0	set	3926
   132  0000                     _RXB1D1	set	3927
   133  0000                     _RXB1D2	set	3928
   134  0000                     _RXB1D3	set	3929
   135  0000                     _RXB1D4	set	3930
   136  0000                     _RXB1D5	set	3931
   137  0000                     _RXB1D6	set	3932
   138  0000                     _RXB1D7	set	3933
   139  0000                     _RXB1DLC	set	3925
   140  0000                     _RXB1DLCbits	set	3925
   141  0000                     _RXB1EIDH	set	3923
   142  0000                     _RXB1EIDL	set	3924
   143  0000                     _RXB1SIDH	set	3921
   144  0000                     _RXB1SIDL	set	3922
   145  0000                     _RXB1SIDLbits	set	3922
   146  0000                     _RXF0EIDH	set	3842
   147  0000                     _RXF0EIDL	set	3843
   148  0000                     _RXF0SIDH	set	3840
   149  0000                     _RXF0SIDL	set	3841
   150  0000                     _RXF0SIDLbits	set	3841
   151  0000                     _RXF1EIDH	set	3846
   152  0000                     _RXF1EIDL	set	3847
   153  0000                     _RXF1SIDH	set	3844
   154  0000                     _RXF1SIDL	set	3845
   155  0000                     _RXF1SIDLbits	set	3845
   156  0000                     _RXF2EIDH	set	3850
   157  0000                     _RXF2EIDL	set	3851
   158  0000                     _RXF2SIDH	set	3848
   159  0000                     _RXF2SIDL	set	3849
   160  0000                     _RXF2SIDLbits	set	3849
   161  0000                     _RXF3EIDH	set	3854
   162  0000                     _RXF3EIDL	set	3855
   163  0000                     _RXF3SIDH	set	3852
   164  0000                     _RXF3SIDL	set	3853
   165  0000                     _RXF3SIDLbits	set	3853
   166  0000                     _RXF4EIDH	set	3858
   167  0000                     _RXF4EIDL	set	3859
   168  0000                     _RXF4SIDH	set	3856
   169  0000                     _RXF4SIDL	set	3857
   170  0000                     _RXF4SIDLbits	set	3857
   171  0000                     _RXF5EIDH	set	3862
   172  0000                     _RXF5EIDL	set	3863
   173  0000                     _RXF5SIDH	set	3860
   174  0000                     _RXF5SIDL	set	3861
   175  0000                     _RXF5SIDLbits	set	3861
   176  0000                     _RXM0EIDH	set	3866
   177  0000                     _RXM0EIDL	set	3867
   178  0000                     _RXM0SIDH	set	3864
   179  0000                     _RXM0SIDL	set	3865
   180  0000                     _RXM0SIDLbits	set	3865
   181  0000                     _RXM1EIDH	set	3870
   182  0000                     _RXM1EIDL	set	3871
   183  0000                     _RXM1SIDH	set	3868
   184  0000                     _RXM1SIDL	set	3869
   185  0000                     _RXM1SIDLbits	set	3869
   186  0000                     _TXB0CONbits	set	3904
   187  0000                     _TXB0D0	set	3910
   188  0000                     _TXB0D1	set	3911
   189  0000                     _TXB0D2	set	3912
   190  0000                     _TXB0D3	set	3913
   191  0000                     _TXB0D4	set	3914
   192  0000                     _TXB0D5	set	3915
   193  0000                     _TXB0D6	set	3916
   194  0000                     _TXB0D7	set	3917
   195  0000                     _TXB0DLC	set	3909
   196  0000                     _TXB0DLCbits	set	3909
   197  0000                     _TXB0EIDH	set	3907
   198  0000                     _TXB0EIDL	set	3908
   199  0000                     _TXB0SIDH	set	3905
   200  0000                     _TXB0SIDL	set	3906
   201  0000                     _TXB0SIDLbits	set	3906
   202  0000                     _TXB1CONbits	set	3888
   203  0000                     _TXB1D0	set	3894
   204  0000                     _TXB1D1	set	3895
   205  0000                     _TXB1D2	set	3896
   206  0000                     _TXB1D3	set	3897
   207  0000                     _TXB1D4	set	3898
   208  0000                     _TXB1D5	set	3899
   209  0000                     _TXB1D6	set	3900
   210  0000                     _TXB1D7	set	3901
   211  0000                     _TXB1DLC	set	3893
   212  0000                     _TXB1DLCbits	set	3893
   213  0000                     _TXB1EIDH	set	3891
   214  0000                     _TXB1EIDL	set	3892
   215  0000                     _TXB1SIDH	set	3889
   216  0000                     _TXB1SIDL	set	3890
   217  0000                     _TXB1SIDLbits	set	3890
   218  0000                     _TXB2CONbits	set	3872
   219  0000                     _TXB2D0	set	3878
   220  0000                     _TXB2D1	set	3879
   221  0000                     _TXB2D2	set	3880
   222  0000                     _TXB2D3	set	3881
   223  0000                     _TXB2D4	set	3882
   224  0000                     _TXB2D5	set	3883
   225  0000                     _TXB2D6	set	3884
   226  0000                     _TXB2D7	set	3885
   227  0000                     _TXB2DLC	set	3877
   228  0000                     _TXB2DLCbits	set	3877
   229  0000                     _TXB2EIDH	set	3875
   230  0000                     _TXB2EIDL	set	3876
   231  0000                     _TXB2SIDH	set	3873
   232  0000                     _TXB2SIDL	set	3874
   233  0000                     _TXB2SIDLbits	set	3874
   234  0000                     _ADCON0bits	set	4034
   235  0000                     _ADCON1bits	set	4033
   236  0000                     _ADCON2bits	set	4032
   237  0000                     _ADRESH	set	4036
   238  0000                     _BRGCON1	set	3952
   239  0000                     _BRGCON2	set	3953
   240  0000                     _BRGCON2bits	set	3953
   241  0000                     _BRGCON3	set	3954
   242  0000                     _BRGCON3bits	set	3954
   243  0000                     _CANCON	set	3951
   244  0000                     _CANCONbits	set	3951
   245  0000                     _CANSTAT	set	3950
   246  0000                     _COMSTATbits	set	3956
   247  0000                     _ECCP1CON	set	4026
   248  0000                     _ECCPR1L	set	4027
   249  0000                     _INTCONbits	set	4082
   250  0000                     _IPR2bits	set	4002
   251  0000                     _IPR3bits	set	4005
   252  0000                     _LATA	set	3977
   253  0000                     _LATB	set	3978
   254  0000                     _LATC	set	3979
   255  0000                     _LATD	set	3980
   256  0000                     _LATE	set	3981
   257  0000                     _PIE1bits	set	3997
   258  0000                     _PIE2bits	set	4000
   259  0000                     _PIE3bits	set	4003
   260  0000                     _PIR1bits	set	3998
   261  0000                     _PIR2bits	set	4001
   262  0000                     _PIR3bits	set	4004
   263  0000                     _PORTAbits	set	3968
   264  0000                     _PORTCbits	set	3970
   265  0000                     _PR2	set	4043
   266  0000                     _RCONbits	set	4048
   267  0000                     _RXB0CON	set	3936
   268  0000                     _RXB0CONbits	set	3936
   269  0000                     _RXB0D0	set	3942
   270  0000                     _RXB0D1	set	3943
   271  0000                     _RXB0D2	set	3944
   272  0000                     _RXB0D3	set	3945
   273  0000                     _RXB0D4	set	3946
   274  0000                     _RXB0D5	set	3947
   275  0000                     _RXB0D6	set	3948
   276  0000                     _RXB0D7	set	3949
   277  0000                     _RXB0DLC	set	3941
   278  0000                     _RXB0DLCbits	set	3941
   279  0000                     _RXB0EIDH	set	3939
   280  0000                     _RXB0EIDL	set	3940
   281  0000                     _RXB0SIDH	set	3937
   282  0000                     _RXB0SIDL	set	3938
   283  0000                     _RXB0SIDLbits	set	3938
   284  0000                     _RXERRCNT	set	3957
   285  0000                     _T2CON	set	4042
   286  0000                     _T2CONbits	set	4042
   287  0000                     _T3CON	set	4017
   288  0000                     _TMR2	set	4044
   289  0000                     _TMR3H	set	4019
   290  0000                     _TMR3L	set	4018
   291  0000                     _TRISA	set	3986
   292  0000                     _TRISB	set	3987
   293  0000                     _TRISC	set	3988
   294  0000                     _TRISD	set	3989
   295  0000                     _TRISDbits	set	3989
   296  0000                     _TRISE	set	3990
   297  0000                     _TXERRCNT	set	3958
   298                           
   299                           ; #config settings
   300  000D4D  00                 	db	0	; dummy byte at the end
   301  0000                     
   302                           	psect	cinit
   303  004BEC                     __pcinit:
   304                           	opt stack 0
   305  004BEC                     start_initialization:
   306                           	opt stack 0
   307  004BEC                     __initialization:
   308                           	opt stack 0
   309                           
   310                           ; Clear objects allocated to BANK1 (16 bytes)
   311  004BEC  EE01  F019         	lfsr	0,__pbssBANK1
   312  004BF0  0E10               	movlw	16
   313  004BF2                     clear_0:
   314  004BF2  6AEE               	clrf	postinc0,c
   315  004BF4  06E8               	decf	wreg,f,c
   316  004BF6  E1FD               	bnz	clear_0
   317                           
   318                           ; Clear objects allocated to BANK0 (62 bytes)
   319  004BF8  EE00  F0BF         	lfsr	0,__pbssBANK0
   320  004BFC  0E3E               	movlw	62
   321  004BFE                     clear_1:
   322  004BFE  6AEE               	clrf	postinc0,c
   323  004C00  06E8               	decf	wreg,f,c
   324  004C02  E1FD               	bnz	clear_1
   325                           
   326                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   327  004C04  6A41               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   328  004C06  6A40               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   329                           
   330                           ; Clear objects allocated to COMRAM (29 bytes)
   331  004C08  EE00  F023         	lfsr	0,__pbssCOMRAM
   332  004C0C  0E1D               	movlw	29
   333  004C0E                     clear_2:
   334  004C0E  6AEE               	clrf	postinc0,c
   335  004C10  06E8               	decf	wreg,f,c
   336  004C12  E1FD               	bnz	clear_2
   337                           
   338                           ; Initialize objects allocated to BANK0 (2 bytes)
   339                           ; load TBLPTR registers with __pidataBANK0
   340  004C14  0E96               	movlw	low __pidataBANK0
   341  004C16  6EF6               	movwf	tblptrl,c
   342  004C18  0E4F               	movlw	high __pidataBANK0
   343  004C1A  6EF7               	movwf	tblptrh,c
   344  004C1C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   345  004C1E  6EF8               	movwf	tblptru,c
   346  004C20  0009               	tblrd		*+	;fetch initializer
   347  004C22  CFF5 F0FD          	movff	tablat,__pdataBANK0
   348  004C26  0009               	tblrd		*+	;fetch initializer
   349  004C28  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
   350                           
   351                           ; Initialize objects allocated to COMRAM (1 bytes)
   352                           ; load TBLPTR registers with __pidataCOMRAM
   353  004C2C  0E98               	movlw	low __pidataCOMRAM
   354  004C2E  6EF6               	movwf	tblptrl,c
   355  004C30  0E4F               	movlw	high __pidataCOMRAM
   356  004C32  6EF7               	movwf	tblptrh,c
   357  004C34  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   358  004C36  6EF8               	movwf	tblptru,c
   359  004C38  0009               	tblrd		*+	;fetch initializer
   360  004C3A  CFF5 F042          	movff	tablat,__pdataCOMRAM
   361  004C3E                     end_of_initialization:
   362                           	opt stack 0
   363  004C3E                     __end_of__initialization:
   364                           	opt stack 0
   365  004C3E  0100               	movlb	0
   366  004C40  EF58  F017         	goto	_main	;jump to C main() function
   367                           tblptru	equ	0xFF8
   368                           tblptrh	equ	0xFF7
   369                           tblptrl	equ	0xFF6
   370                           tablat	equ	0xFF5
   371                           postinc0	equ	0xFEE
   372                           wreg	equ	0xFE8
   373                           
   374                           	psect	bitbssCOMRAM
   375  000200                     __pbitbssCOMRAM:
   376                           	opt stack 0
   377  000200                     _ECU_error:
   378                           	opt stack 0
   379  000200                     	ds	1
   380  000201                     _can_retry:
   381                           	opt stack 0
   382  000201                     	ds	1
   383  000202                     _centralina_abs:
   384                           	opt stack 0
   385  000202                     	ds	1
   386  000203                     _centralina_comando:
   387                           	opt stack 0
   388  000203                     	ds	1
   389  000204                     _centralina_sterzo:
   390                           	opt stack 0
   391  000204                     	ds	1
   392  000205                     _message_sent:
   393                           	opt stack 0
   394  000205                     	ds	1
   395  000206                     _new_message:
   396                           	opt stack 0
   397  000206                     	ds	1
   398  000207                     _remote_frame:
   399                           	opt stack 0
   400  000207                     	ds	1
   401  000208                     _remote_frame1:
   402                           	opt stack 0
   403  000208                     	ds	1
   404  000209                     _request_sent:
   405                           	opt stack 0
   406  000209                     	ds	1
   407  00020A                     _speed_fetched:
   408                           	opt stack 0
   409  00020A                     	ds	1
   410                           tblptru	equ	0xFF8
   411                           tblptrh	equ	0xFF7
   412                           tblptrl	equ	0xFF6
   413                           tablat	equ	0xFF5
   414                           postinc0	equ	0xFEE
   415                           wreg	equ	0xFE8
   416                           
   417                           	psect	bssCOMRAM
   418  000023                     __pbssCOMRAM:
   419                           	opt stack 0
   420  000023                     _id:
   421                           	opt stack 0
   422  000023                     	ds	4
   423  000027                     _previousTimeCounter3:
   424                           	opt stack 0
   425  000027                     	ds	4
   426  00002B                     _requestSpeed:
   427                           	opt stack 0
   428  00002B                     	ds	4
   429  00002F                     _clock_counter_reference:
   430                           	opt stack 0
   431  00002F                     	ds	2
   432  000031                     _duty_cycle:
   433                           	opt stack 0
   434  000031                     	ds	2
   435  000033                     _vBatt:
   436                           	opt stack 0
   437  000033                     	ds	2
   438  000035                     _current:
   439                           	opt stack 0
   440  000035                     	ds	1
   441  000036                     _scrittura:
   442                           	opt stack 0
   443  000036                     	ds	1
   444  000037                     _data_array:
   445                           	opt stack 0
   446  000037                     	ds	8
   447  00003F                     _data_battery:
   448                           	opt stack 0
   449  00003F                     	ds	1
   450                           tblptru	equ	0xFF8
   451                           tblptrh	equ	0xFF7
   452                           tblptrl	equ	0xFF6
   453                           tablat	equ	0xFF5
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           
   457                           	psect	dataCOMRAM
   458  000042                     __pdataCOMRAM:
   459                           	opt stack 0
   460  000042                     _delay_quartz_frequency_value:
   461                           	opt stack 0
   462  000042                     	ds	1
   463                           tblptru	equ	0xFF8
   464                           tblptrh	equ	0xFF7
   465                           tblptrl	equ	0xFF6
   466                           tablat	equ	0xFF5
   467                           postinc0	equ	0xFEE
   468                           wreg	equ	0xFE8
   469                           
   470                           	psect	bssBANK0
   471  0000BF                     __pbssBANK0:
   472                           	opt stack 0
   473  0000BF                     _correzione:
   474                           	opt stack 0
   475  0000BF                     	ds	4
   476  0000C3                     _currentSpeed:
   477                           	opt stack 0
   478  0000C3                     	ds	4
   479  0000C7                     _duty_set:
   480                           	opt stack 0
   481  0000C7                     	ds	4
   482  0000CB                     _previousTimeCounter:
   483                           	opt stack 0
   484  0000CB                     	ds	4
   485  0000CF                     _previousTimeCounter1:
   486                           	opt stack 0
   487  0000CF                     	ds	4
   488  0000D3                     _previousTimeCounter2:
   489                           	opt stack 0
   490  0000D3                     	ds	4
   491  0000D7                     _timeCounter:
   492                           	opt stack 0
   493  0000D7                     	ds	4
   494  0000DB                     _errno:
   495                           	opt stack 0
   496  0000DB                     	ds	2
   497  0000DD                     _errore:
   498                           	opt stack 0
   499  0000DD                     	ds	2
   500  0000DF                     _left_speed:
   501                           	opt stack 0
   502  0000DF                     	ds	2
   503  0000E1                     _previousPwm:
   504                           	opt stack 0
   505  0000E1                     	ds	2
   506  0000E3                     _right_speed:
   507                           	opt stack 0
   508  0000E3                     	ds	2
   509  0000E5                     _ecu_cycle:
   510                           	opt stack 0
   511  0000E5                     	ds	1
   512  0000E6                     _msg:
   513                           	opt stack 0
   514  0000E6                     	ds	15
   515  0000F5                     _data_array_debug:
   516                           	opt stack 0
   517  0000F5                     	ds	8
   518                           tblptru	equ	0xFF8
   519                           tblptrh	equ	0xFF7
   520                           tblptrl	equ	0xFF6
   521                           tablat	equ	0xFF5
   522                           postinc0	equ	0xFEE
   523                           wreg	equ	0xFE8
   524                           
   525                           	psect	dataBANK0
   526  0000FD                     __pdataBANK0:
   527                           	opt stack 0
   528  0000FD                     _dir:
   529                           	opt stack 0
   530  0000FD                     	ds	2
   531                           tblptru	equ	0xFF8
   532                           tblptrh	equ	0xFF7
   533                           tblptrl	equ	0xFF6
   534                           tablat	equ	0xFF5
   535                           postinc0	equ	0xFEE
   536                           wreg	equ	0xFE8
   537                           
   538                           	psect	bssBANK1
   539  000119                     __pbssBANK1:
   540                           	opt stack 0
   541  000119                     _counter_array:
   542                           	opt stack 0
   543  000119                     	ds	8
   544  000121                     _currentSpeed_array:
   545                           	opt stack 0
   546  000121                     	ds	8
   547                           tblptru	equ	0xFF8
   548                           tblptrh	equ	0xFF7
   549                           tblptrl	equ	0xFF6
   550                           tablat	equ	0xFF5
   551                           postinc0	equ	0xFEE
   552                           wreg	equ	0xFE8
   553                           
   554                           	psect	cstackBANK1
   555  000100                     __pcstackBANK1:
   556                           	opt stack 0
   557  000100                     _pow$4020:
   558                           	opt stack 0
   559                           
   560                           ; 4 bytes @ 0x0
   561  000100                     	ds	4
   562  000104                     _pow$4021:
   563                           	opt stack 0
   564                           
   565                           ; 4 bytes @ 0x4
   566  000104                     	ds	4
   567  000108                     pow@sign:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x8
   571  000108                     	ds	1
   572  000109                     pow@yi:
   573                           	opt stack 0
   574                           
   575                           ; 4 bytes @ 0x9
   576  000109                     	ds	4
   577  00010D                     _rampe$4019:
   578                           	opt stack 0
   579                           
   580                           ; 4 bytes @ 0xD
   581  00010D                     	ds	4
   582  000111                     ??_main:
   583                           
   584                           ; 0 bytes @ 0x11
   585  000111                     	ds	8
   586                           tblptru	equ	0xFF8
   587                           tblptrh	equ	0xFF7
   588                           tblptrl	equ	0xFF6
   589                           tablat	equ	0xFF5
   590                           postinc0	equ	0xFEE
   591                           wreg	equ	0xFE8
   592                           
   593                           	psect	cstackBANK0
   594  000060                     __pcstackBANK0:
   595                           	opt stack 0
   596  000060                     ??_can_interpreter:
   597  000060                     ?_abs:
   598                           	opt stack 0
   599  000060                     ?___wmul:
   600                           	opt stack 0
   601  000060                     ?___lwdiv:
   602                           	opt stack 0
   603  000060                     ?___flpack:
   604                           	opt stack 0
   605  000060                     ?_frexp:
   606                           	opt stack 0
   607  000060                     ?___aldiv:
   608                           	opt stack 0
   609  000060                     ?___flneg:
   610                           	opt stack 0
   611  000060                     CANOperationMode@mode:
   612                           	opt stack 0
   613  000060                     _CANisTxReady$3005:
   614                           	opt stack 0
   615  000060                     OpenEPWM1@period:
   616                           	opt stack 0
   617  000060                     SetOutputEPWM1@outputmode:
   618                           	opt stack 0
   619  000060                     OpenTimer2@config:
   620                           	opt stack 0
   621  000060                     SetDCEPWM1@dutycycle:
   622                           	opt stack 0
   623  000060                     ___wmul@multiplier:
   624                           	opt stack 0
   625  000060                     abs@a:
   626                           	opt stack 0
   627  000060                     ___lwdiv@dividend:
   628                           	opt stack 0
   629  000060                     CANsendMessage@identifier:
   630                           	opt stack 0
   631  000060                     CANSetMask@mask:
   632                           	opt stack 0
   633  000060                     CANSetFilter@filter:
   634                           	opt stack 0
   635  000060                     ___aldiv@dividend:
   636                           	opt stack 0
   637  000060                     ___flpack@arg:
   638                           	opt stack 0
   639  000060                     ___flge@ff1:
   640                           	opt stack 0
   641  000060                     ___flneg@f1:
   642                           	opt stack 0
   643  000060                     frexp@value:
   644                           	opt stack 0
   645                           
   646                           ; 4 bytes @ 0x0
   647  000060                     	ds	1
   648  000061                     SetOutputEPWM1@outputconfig:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x1
   652  000061                     	ds	1
   653  000062                     ??_SetDCEPWM1:
   654  000062                     ??_abs:
   655  000062                     ___wmul@multiplicand:
   656                           	opt stack 0
   657  000062                     ___lwdiv@divisor:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x2
   661  000062                     	ds	2
   662  000064                     CANSetMask@type:
   663                           	opt stack 0
   664  000064                     CANSetFilter@type:
   665                           	opt stack 0
   666  000064                     ___flpack@exp:
   667                           	opt stack 0
   668  000064                     ___lwdiv@counter:
   669                           	opt stack 0
   670  000064                     CANsendMessage@data:
   671                           	opt stack 0
   672  000064                     SetDCEPWM1@DCycle:
   673                           	opt stack 0
   674  000064                     ___wmul@product:
   675                           	opt stack 0
   676  000064                     frexp@eptr:
   677                           	opt stack 0
   678  000064                     ___aldiv@divisor:
   679                           	opt stack 0
   680  000064                     ___flge@ff2:
   681                           	opt stack 0
   682                           
   683                           ; 4 bytes @ 0x4
   684  000064                     	ds	1
   685  000065                     ??_CANSetMask:
   686  000065                     ??_CANSetFilter:
   687  000065                     ___flpack@sign:
   688                           	opt stack 0
   689  000065                     ___lwdiv@quotient:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x5
   693  000065                     	ds	1
   694  000066                     ??___flpack:
   695  000066                     ??_frexp:
   696  000066                     ?___awdiv:
   697                           	opt stack 0
   698  000066                     CANsendMessage@dataLength:
   699                           	opt stack 0
   700  000066                     delay_ms@value_ms:
   701                           	opt stack 0
   702  000066                     ___awdiv@dividend:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x6
   706  000066                     	ds	1
   707  000067                     CANsendMessage@flags:
   708                           	opt stack 0
   709                           
   710                           ; 1 bytes @ 0x7
   711  000067                     	ds	1
   712  000068                     ??_CANsendMessage:
   713  000068                     ??___flge:
   714  000068                     ___aldiv@counter:
   715                           	opt stack 0
   716  000068                     ___awdiv@divisor:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0x8
   720  000068                     	ds	1
   721  000069                     CANSetMask@numBuffer:
   722                           	opt stack 0
   723  000069                     CANSetFilter@numBuffer:
   724                           	opt stack 0
   725  000069                     ___aldiv@sign:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x9
   729  000069                     	ds	1
   730  00006A                     ?___fldiv:
   731                           	opt stack 0
   732  00006A                     ?___awtofl:
   733                           	opt stack 0
   734  00006A                     ?___lltofl:
   735                           	opt stack 0
   736  00006A                     ?___lwtofl:
   737                           	opt stack 0
   738  00006A                     ___awdiv@counter:
   739                           	opt stack 0
   740  00006A                     ___awtofl@c:
   741                           	opt stack 0
   742  00006A                     ___lwtofl@c:
   743                           	opt stack 0
   744  00006A                     CANSetMask@tamp:
   745                           	opt stack 0
   746  00006A                     CANSetFilter@tamp:
   747                           	opt stack 0
   748  00006A                     ___aldiv@quotient:
   749                           	opt stack 0
   750  00006A                     ___fldiv@f1:
   751                           	opt stack 0
   752  00006A                     ___lltofl@c:
   753                           	opt stack 0
   754                           
   755                           ; 4 bytes @ 0xA
   756  00006A                     	ds	1
   757  00006B                     ___awdiv@sign:
   758                           	opt stack 0
   759                           
   760                           ; 1 bytes @ 0xB
   761  00006B                     	ds	1
   762  00006C                     ___awdiv@quotient:
   763                           	opt stack 0
   764  00006C                     CANsendMessage@tamp:
   765                           	opt stack 0
   766                           
   767                           ; 4 bytes @ 0xC
   768  00006C                     	ds	2
   769  00006E                     CANInitialize@phaseSeg1:
   770                           	opt stack 0
   771  00006E                     ___awtofl@sign:
   772                           	opt stack 0
   773  00006E                     ___fldiv@f2:
   774                           	opt stack 0
   775                           
   776                           ; 4 bytes @ 0xE
   777  00006E                     	ds	1
   778  00006F                     ?___flmul:
   779                           	opt stack 0
   780  00006F                     CANInitialize@phaseSeg2:
   781                           	opt stack 0
   782  00006F                     ___flmul@f1:
   783                           	opt stack 0
   784                           
   785                           ; 4 bytes @ 0xF
   786  00006F                     	ds	1
   787  000070                     CANInitialize@SJW:
   788                           	opt stack 0
   789                           
   790                           ; 1 bytes @ 0x10
   791  000070                     	ds	1
   792  000071                     CANInitialize@BRP:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x11
   796  000071                     	ds	1
   797  000072                     CANInitialize@flags:
   798                           	opt stack 0
   799  000072                     ___fldiv@f3:
   800                           	opt stack 0
   801                           
   802                           ; 4 bytes @ 0x12
   803  000072                     	ds	1
   804  000073                     ??_CANInitialize:
   805  000073                     ___flmul@f2:
   806                           	opt stack 0
   807                           
   808                           ; 4 bytes @ 0x13
   809  000073                     	ds	3
   810  000076                     ___fldiv@cntr:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0x16
   814  000076                     	ds	1
   815  000077                     CANInitialize@propSeg:
   816                           	opt stack 0
   817  000077                     ___fldiv@exp:
   818                           	opt stack 0
   819  000077                     ___flmul@exp:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x17
   823  000077                     	ds	1
   824  000078                     CANInitialize@FilterConfig1:
   825                           	opt stack 0
   826  000078                     ___fldiv@sign:
   827                           	opt stack 0
   828  000078                     ___flmul@f3_as_product:
   829                           	opt stack 0
   830                           
   831                           ; 4 bytes @ 0x18
   832  000078                     	ds	1
   833  000079                     CANInitialize@FilterConfig2:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x19
   837  000079                     	ds	1
   838  00007A                     
   839                           ; 0 bytes @ 0x1A
   840  00007A                     	ds	2
   841  00007C                     ___flmul@cntr:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x1C
   845  00007C                     	ds	1
   846  00007D                     ___flmul@sign:
   847                           	opt stack 0
   848                           
   849                           ; 1 bytes @ 0x1D
   850  00007D                     	ds	1
   851  00007E                     ?___fladd:
   852                           	opt stack 0
   853  00007E                     ___fladd@f1:
   854                           	opt stack 0
   855                           
   856                           ; 4 bytes @ 0x1E
   857  00007E                     	ds	4
   858  000082                     ___fladd@f2:
   859                           	opt stack 0
   860                           
   861                           ; 4 bytes @ 0x22
   862  000082                     	ds	4
   863  000086                     ??___fladd:
   864                           
   865                           ; 0 bytes @ 0x26
   866  000086                     	ds	1
   867  000087                     ___fladd@sign:
   868                           	opt stack 0
   869                           
   870                           ; 1 bytes @ 0x27
   871  000087                     	ds	1
   872  000088                     ___fladd@exp2:
   873                           	opt stack 0
   874                           
   875                           ; 1 bytes @ 0x28
   876  000088                     	ds	1
   877  000089                     ___fladd@exp1:
   878                           	opt stack 0
   879                           
   880                           ; 1 bytes @ 0x29
   881  000089                     	ds	1
   882  00008A                     ?___flsub:
   883                           	opt stack 0
   884  00008A                     ?_eval_poly:
   885                           	opt stack 0
   886  00008A                     ?___fltol:
   887                           	opt stack 0
   888  00008A                     ___flsub@f1:
   889                           	opt stack 0
   890  00008A                     ___fltol@f1:
   891                           	opt stack 0
   892  00008A                     eval_poly@x:
   893                           	opt stack 0
   894                           
   895                           ; 4 bytes @ 0x2A
   896  00008A                     	ds	4
   897  00008E                     ??___fltol:
   898  00008E                     eval_poly@d:
   899                           	opt stack 0
   900  00008E                     ___flsub@f2:
   901                           	opt stack 0
   902                           
   903                           ; 4 bytes @ 0x2E
   904  00008E                     	ds	2
   905  000090                     eval_poly@n:
   906                           	opt stack 0
   907                           
   908                           ; 2 bytes @ 0x30
   909  000090                     	ds	2
   910  000092                     ??_eval_poly:
   911  000092                     ___fltol@sign1:
   912                           	opt stack 0
   913                           
   914                           ; 1 bytes @ 0x32
   915  000092                     	ds	1
   916  000093                     ___fltol@exp1:
   917                           	opt stack 0
   918                           
   919                           ; 1 bytes @ 0x33
   920  000093                     	ds	1
   921  000094                     ?___altofl:
   922                           	opt stack 0
   923  000094                     ___altofl@c:
   924                           	opt stack 0
   925                           
   926                           ; 4 bytes @ 0x34
   927  000094                     	ds	2
   928  000096                     eval_poly@res:
   929                           	opt stack 0
   930                           
   931                           ; 4 bytes @ 0x36
   932  000096                     	ds	2
   933  000098                     ___altofl@sign:
   934                           	opt stack 0
   935                           
   936                           ; 1 bytes @ 0x38
   937  000098                     	ds	1
   938  000099                     ?_floor:
   939                           	opt stack 0
   940  000099                     floor@x:
   941                           	opt stack 0
   942                           
   943                           ; 4 bytes @ 0x39
   944  000099                     	ds	1
   945  00009A                     ?_log:
   946                           	opt stack 0
   947  00009A                     ?_ldexp:
   948                           	opt stack 0
   949  00009A                     ldexp@value:
   950                           	opt stack 0
   951  00009A                     log@x:
   952                           	opt stack 0
   953                           
   954                           ; 4 bytes @ 0x3A
   955  00009A                     	ds	3
   956  00009D                     floor@i:
   957                           	opt stack 0
   958                           
   959                           ; 4 bytes @ 0x3D
   960  00009D                     	ds	1
   961  00009E                     ldexp@newexp:
   962                           	opt stack 0
   963  00009E                     log@exponent:
   964                           	opt stack 0
   965                           
   966                           ; 2 bytes @ 0x3E
   967  00009E                     	ds	2
   968  0000A0                     ??_ldexp:
   969                           
   970                           ; 0 bytes @ 0x40
   971  0000A0                     	ds	1
   972  0000A1                     floor@expon:
   973                           	opt stack 0
   974                           
   975                           ; 2 bytes @ 0x41
   976  0000A1                     	ds	2
   977  0000A3                     ?_exp:
   978                           	opt stack 0
   979  0000A3                     exp@x:
   980                           	opt stack 0
   981                           
   982                           ; 4 bytes @ 0x43
   983  0000A3                     	ds	4
   984  0000A7                     _exp$4022:
   985                           	opt stack 0
   986                           
   987                           ; 4 bytes @ 0x47
   988  0000A7                     	ds	4
   989  0000AB                     exp@exponent:
   990                           	opt stack 0
   991                           
   992                           ; 2 bytes @ 0x4B
   993  0000AB                     	ds	2
   994  0000AD                     exp@sign:
   995                           	opt stack 0
   996                           
   997                           ; 1 bytes @ 0x4D
   998  0000AD                     	ds	1
   999  0000AE                     ?_pow:
  1000                           	opt stack 0
  1001  0000AE                     pow@x:
  1002                           	opt stack 0
  1003                           
  1004                           ; 4 bytes @ 0x4E
  1005  0000AE                     	ds	4
  1006  0000B2                     pow@y:
  1007                           	opt stack 0
  1008                           
  1009                           ; 4 bytes @ 0x52
  1010  0000B2                     	ds	4
  1011  0000B6                     ??_rampe:
  1012  0000B6                     
  1013                           ; 0 bytes @ 0x56
  1014  0000B6                     	ds	8
  1015  0000BE                     main@period:
  1016                           	opt stack 0
  1017                           
  1018                           ; 1 bytes @ 0x5E
  1019  0000BE                     	ds	1
  1020                           tblptru	equ	0xFF8
  1021                           tblptrh	equ	0xFF7
  1022                           tblptrl	equ	0xFF6
  1023                           tablat	equ	0xFF5
  1024                           postinc0	equ	0xFEE
  1025                           wreg	equ	0xFE8
  1026                           
  1027                           	psect	cstackCOMRAM
  1028  000001                     __pcstackCOMRAM:
  1029                           	opt stack 0
  1030  000001                     _CANisRxReady$3007:
  1031                           	opt stack 0
  1032  000001                     CANreceiveMessage@msg:
  1033                           	opt stack 0
  1034                           
  1035                           ; 2 bytes @ 0x0
  1036  000001                     	ds	2
  1037  000003                     ??_CANreceiveMessage:
  1038                           
  1039                           ; 0 bytes @ 0x2
  1040  000003                     	ds	8
  1041  00000B                     CANreceiveMessage@error:
  1042                           	opt stack 0
  1043                           
  1044                           ; 1 bytes @ 0xA
  1045  00000B                     	ds	1
  1046  00000C                     CANreceiveMessage@tamp:
  1047                           	opt stack 0
  1048                           
  1049                           ; 1 bytes @ 0xB
  1050  00000C                     	ds	1
  1051  00000D                     ??_ISR_bassa:
  1052                           
  1053                           ; 0 bytes @ 0xC
  1054  00000D                     	ds	21
  1055  000022                     ISR_bassa@i:
  1056                           	opt stack 0
  1057                           
  1058                           ; 1 bytes @ 0x21
  1059  000022                     	ds	1
  1060                           tblptru	equ	0xFF8
  1061                           tblptrh	equ	0xFF7
  1062                           tblptrl	equ	0xFF6
  1063                           tablat	equ	0xFF5
  1064                           postinc0	equ	0xFEE
  1065                           wreg	equ	0xFE8
  1066                           
  1067 ;;
  1068 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1069 ;;
  1070 ;; *************** function _main *****************
  1071 ;; Defined at:
  1072 ;;		line 128 in file "motore.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  period          1   94[BANK0 ] unsigned char 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  2  675[None  ] int 
  1079 ;; Registers used:
  1080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1087 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1088 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1089 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1090 ;;Total ram usage:        9 bytes
  1091 ;; Hardware stack levels required when called:    8
  1092 ;; This function calls:
  1093 ;;		_CANisTxReady
  1094 ;;		_CANsendMessage
  1095 ;;		_OpenEPWM1
  1096 ;;		_OpenTimer2
  1097 ;;		_SetDCEPWM1
  1098 ;;		_SetOutputEPWM1
  1099 ;;		_battery_measure
  1100 ;;		_can_interpreter
  1101 ;;		_configurazione_iniziale
  1102 ;;		_delay_ms
  1103 ;;		_rampe
  1104 ;;		_send_data
  1105 ;; This function is called by:
  1106 ;;		Startup code after reset
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           	psect	text0
  1111  002EB0                     __ptext0:
  1112                           	opt stack 0
  1113  002EB0                     _main:
  1114                           	opt stack 23
  1115                           
  1116                           ;motore.c: 129: unsigned char period;
  1117                           ;motore.c: 130: configurazione_iniziale();
  1118                           
  1119                           ;incstack = 0
  1120  002EB0  ECDF  F024         	call	_configurazione_iniziale	;wreg free
  1121                           
  1122                           ;motore.c: 131: PORTAbits.RA1 = 1;
  1123  002EB4  8280               	bsf	3968,1,c	;volatile
  1124                           
  1125                           ;motore.c: 132: PORTCbits.RC1 = 1;
  1126  002EB6  8282               	bsf	3970,1,c	;volatile
  1127                           
  1128                           ;motore.c: 133: delay_ms(500);
  1129  002EB8  0E01               	movlw	1
  1130  002EBA  0100               	movlb	0	; () banked
  1131  002EBC  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1132  002EBE  0EF4               	movlw	244
  1133  002EC0  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1134  002EC2  EC3D  F027         	call	_delay_ms	;wreg free
  1135                           
  1136                           ;motore.c: 134: PORTAbits.RA1 = 0;
  1137  002EC6  9280               	bcf	3968,1,c	;volatile
  1138                           
  1139                           ;motore.c: 135: PORTCbits.RC1 = 0;
  1140  002EC8  9282               	bcf	3970,1,c	;volatile
  1141                           
  1142                           ;motore.c: 136: OpenTimer2(0b01111111 & 0b11111110 & 0b11111111);
  1143  002ECA  0E7E               	movlw	126
  1144  002ECC  EC99  F027         	call	_OpenTimer2
  1145                           
  1146                           ;motore.c: 137: period = 0xFA;
  1147  002ED0  0EFA               	movlw	250
  1148  002ED2  0100               	movlb	0	; () banked
  1149  002ED4  6FBE               	movwf	main@period& (0+255),b
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;motore.c: 138: OpenEPWM1(period);
  1153  002ED6  0100               	movlb	0	; () banked
  1154  002ED8  51BE               	movf	main@period& (0+255),w,b
  1155  002EDA  ECC2  F027         	call	_OpenEPWM1
  1156                           
  1157                           ;motore.c: 139: speed_fetched = 1;
  1158  002EDE  8441               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1159                           
  1160                           ;motore.c: 140: SetOutputEPWM1(0b01111111, 0b11111100);
  1161  002EE0  0EFC               	movlw	252
  1162  002EE2  0100               	movlb	0	; () banked
  1163  002EE4  6F60               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  1164  002EE6  0E7F               	movlw	127
  1165  002EE8  EC4E  F026         	call	_SetOutputEPWM1
  1166  002EEC  D000               	goto	l6997
  1167  002EEE                     l6997:
  1168                           
  1169                           ;motore.c: 142: can_interpreter();
  1170  002EEE  EC37  F025         	call	_can_interpreter	;wreg free
  1171                           
  1172                           ;motore.c: 143: if (PORTAbits.RA1 == 0) {
  1173  002EF2  B280               	btfsc	3968,1,c	;volatile
  1174  002EF4  D039               	goto	l7005
  1175                           
  1176                           ;motore.c: 145: if ((timeCounter - previousTimeCounter1 >= 20)) {
  1177  002EF6  C0CF  F111         	movff	_previousTimeCounter1,??_main
  1178  002EFA  C0D0  F112         	movff	_previousTimeCounter1+1,??_main+1
  1179  002EFE  C0D1  F113         	movff	_previousTimeCounter1+2,??_main+2
  1180  002F02  C0D2  F114         	movff	_previousTimeCounter1+3,??_main+3
  1181  002F06  0101               	movlb	1	; () banked
  1182  002F08  1F11               	comf	??_main& (0+255),f,b
  1183  002F0A  1F12               	comf	(??_main+1)& (0+255),f,b
  1184  002F0C  1F13               	comf	(??_main+2)& (0+255),f,b
  1185  002F0E  1F14               	comf	(??_main+3)& (0+255),f,b
  1186  002F10  2B11               	incf	??_main& (0+255),f,b
  1187  002F12  0E00               	movlw	0
  1188  002F14  2312               	addwfc	(??_main+1)& (0+255),f,b
  1189  002F16  2313               	addwfc	(??_main+2)& (0+255),f,b
  1190  002F18  2314               	addwfc	(??_main+3)& (0+255),f,b
  1191  002F1A  0100               	movlb	0	; () banked
  1192  002F1C  51D7               	movf	_timeCounter& (0+255),w,b	;volatile
  1193  002F1E  0101               	movlb	1	; () banked
  1194  002F20  2511               	addwf	??_main& (0+255),w,b
  1195  002F22  0101               	movlb	1	; () banked
  1196  002F24  6F15               	movwf	(??_main+4)& (0+255),b
  1197  002F26  0100               	movlb	0	; () banked
  1198  002F28  51D8               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
  1199  002F2A  0101               	movlb	1	; () banked
  1200  002F2C  2112               	addwfc	(??_main+1)& (0+255),w,b
  1201  002F2E  0101               	movlb	1	; () banked
  1202  002F30  6F16               	movwf	(??_main+5)& (0+255),b
  1203  002F32  0100               	movlb	0	; () banked
  1204  002F34  51D9               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
  1205  002F36  0101               	movlb	1	; () banked
  1206  002F38  2113               	addwfc	(??_main+2)& (0+255),w,b
  1207  002F3A  0101               	movlb	1	; () banked
  1208  002F3C  6F17               	movwf	(??_main+6)& (0+255),b
  1209  002F3E  0100               	movlb	0	; () banked
  1210  002F40  51DA               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
  1211  002F42  0101               	movlb	1	; () banked
  1212  002F44  2114               	addwfc	(??_main+3)& (0+255),w,b
  1213  002F46  0101               	movlb	1	; () banked
  1214  002F48  6F18               	movwf	(??_main+7)& (0+255),b
  1215  002F4A  0101               	movlb	1	; () banked
  1216  002F4C  5118               	movf	(??_main+7)& (0+255),w,b
  1217  002F4E  0101               	movlb	1	; () banked
  1218  002F50  1117               	iorwf	(??_main+6)& (0+255),w,b
  1219  002F52  0101               	movlb	1	; () banked
  1220  002F54  1116               	iorwf	(??_main+5)& (0+255),w,b
  1221  002F56  E105               	bnz	u9280
  1222  002F58  0E14               	movlw	20
  1223  002F5A  0101               	movlb	1	; () banked
  1224  002F5C  5D15               	subwf	(??_main+4)& (0+255),w,b
  1225  002F5E  A0D8               	btfss	status,0,c
  1226  002F60  D00B               	goto	l7007
  1227  002F62                     u9280:
  1228                           
  1229                           ; BSR set to: 1
  1230                           ;motore.c: 146: rampe();
  1231  002F62  EC0C  F010         	call	_rampe	;wreg free
  1232                           
  1233                           ;motore.c: 147: }
  1234                           ;motore.c: 148: } else {
  1235  002F66  D008               	goto	l7007
  1236  002F68                     l7005:
  1237                           
  1238                           ;motore.c: 149: SetDCEPWM1(0);
  1239  002F68  0E00               	movlw	0
  1240  002F6A  0100               	movlb	0	; () banked
  1241  002F6C  6F61               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1242  002F6E  0E00               	movlw	0
  1243  002F70  6F60               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  1244  002F72  ECC7  F026         	call	_SetDCEPWM1	;wreg free
  1245  002F76  D000               	goto	l7007
  1246  002F78                     l7007:
  1247                           
  1248                           ;motore.c: 150: }
  1249                           ;motore.c: 151: if ((can_retry == 1) && (remote_frame)) {
  1250  002F78  B240               	btfsc	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
  1251  002F7A  AE40               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1252  002F7C  D003               	goto	l7013
  1253                           
  1254                           ;motore.c: 152: send_data();
  1255  002F7E  EC78  F026         	call	_send_data	;wreg free
  1256  002F82  D000               	goto	l7013
  1257  002F84                     l7013:
  1258                           
  1259                           ;motore.c: 153: }
  1260                           ;motore.c: 156: if (((timeCounter - previousTimeCounter) > 20) || ((PORTAbits.RA1 == 1) 
      +                          && ((timeCounter - previousTimeCounter) > 5))) {
  1261  002F84  C0CB  F111         	movff	_previousTimeCounter,??_main
  1262  002F88  C0CC  F112         	movff	_previousTimeCounter+1,??_main+1
  1263  002F8C  C0CD  F113         	movff	_previousTimeCounter+2,??_main+2
  1264  002F90  C0CE  F114         	movff	_previousTimeCounter+3,??_main+3
  1265  002F94  0101               	movlb	1	; () banked
  1266  002F96  1F11               	comf	??_main& (0+255),f,b
  1267  002F98  1F12               	comf	(??_main+1)& (0+255),f,b
  1268  002F9A  1F13               	comf	(??_main+2)& (0+255),f,b
  1269  002F9C  1F14               	comf	(??_main+3)& (0+255),f,b
  1270  002F9E  2B11               	incf	??_main& (0+255),f,b
  1271  002FA0  0E00               	movlw	0
  1272  002FA2  2312               	addwfc	(??_main+1)& (0+255),f,b
  1273  002FA4  2313               	addwfc	(??_main+2)& (0+255),f,b
  1274  002FA6  2314               	addwfc	(??_main+3)& (0+255),f,b
  1275  002FA8  0100               	movlb	0	; () banked
  1276  002FAA  51D7               	movf	_timeCounter& (0+255),w,b	;volatile
  1277  002FAC  0101               	movlb	1	; () banked
  1278  002FAE  2511               	addwf	??_main& (0+255),w,b
  1279  002FB0  0101               	movlb	1	; () banked
  1280  002FB2  6F15               	movwf	(??_main+4)& (0+255),b
  1281  002FB4  0100               	movlb	0	; () banked
  1282  002FB6  51D8               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
  1283  002FB8  0101               	movlb	1	; () banked
  1284  002FBA  2112               	addwfc	(??_main+1)& (0+255),w,b
  1285  002FBC  0101               	movlb	1	; () banked
  1286  002FBE  6F16               	movwf	(??_main+5)& (0+255),b
  1287  002FC0  0100               	movlb	0	; () banked
  1288  002FC2  51D9               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
  1289  002FC4  0101               	movlb	1	; () banked
  1290  002FC6  2113               	addwfc	(??_main+2)& (0+255),w,b
  1291  002FC8  0101               	movlb	1	; () banked
  1292  002FCA  6F17               	movwf	(??_main+6)& (0+255),b
  1293  002FCC  0100               	movlb	0	; () banked
  1294  002FCE  51DA               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
  1295  002FD0  0101               	movlb	1	; () banked
  1296  002FD2  2114               	addwfc	(??_main+3)& (0+255),w,b
  1297  002FD4  0101               	movlb	1	; () banked
  1298  002FD6  6F18               	movwf	(??_main+7)& (0+255),b
  1299  002FD8  0101               	movlb	1	; () banked
  1300  002FDA  5118               	movf	(??_main+7)& (0+255),w,b
  1301  002FDC  0101               	movlb	1	; () banked
  1302  002FDE  1117               	iorwf	(??_main+6)& (0+255),w,b
  1303  002FE0  0101               	movlb	1	; () banked
  1304  002FE2  1116               	iorwf	(??_main+5)& (0+255),w,b
  1305  002FE4  E13F               	bnz	l7019
  1306  002FE6  0E15               	movlw	21
  1307  002FE8  0101               	movlb	1	; () banked
  1308  002FEA  5D15               	subwf	(??_main+4)& (0+255),w,b
  1309  002FEC  B0D8               	btfsc	status,0,c
  1310  002FEE  D03A               	goto	l7019
  1311                           
  1312                           ; BSR set to: 1
  1313  002FF0  A280               	btfss	3968,1,c	;volatile
  1314  002FF2  D0BE               	goto	l7053
  1315                           
  1316                           ; BSR set to: 1
  1317  002FF4  C0CB  F111         	movff	_previousTimeCounter,??_main
  1318  002FF8  C0CC  F112         	movff	_previousTimeCounter+1,??_main+1
  1319  002FFC  C0CD  F113         	movff	_previousTimeCounter+2,??_main+2
  1320  003000  C0CE  F114         	movff	_previousTimeCounter+3,??_main+3
  1321  003004  0101               	movlb	1	; () banked
  1322  003006  1F11               	comf	??_main& (0+255),f,b
  1323  003008  1F12               	comf	(??_main+1)& (0+255),f,b
  1324  00300A  1F13               	comf	(??_main+2)& (0+255),f,b
  1325  00300C  1F14               	comf	(??_main+3)& (0+255),f,b
  1326  00300E  2B11               	incf	??_main& (0+255),f,b
  1327  003010  0E00               	movlw	0
  1328  003012  2312               	addwfc	(??_main+1)& (0+255),f,b
  1329  003014  2313               	addwfc	(??_main+2)& (0+255),f,b
  1330  003016  2314               	addwfc	(??_main+3)& (0+255),f,b
  1331  003018  0100               	movlb	0	; () banked
  1332  00301A  51D7               	movf	_timeCounter& (0+255),w,b	;volatile
  1333  00301C  0101               	movlb	1	; () banked
  1334  00301E  2511               	addwf	??_main& (0+255),w,b
  1335  003020  0101               	movlb	1	; () banked
  1336  003022  6F15               	movwf	(??_main+4)& (0+255),b
  1337  003024  0100               	movlb	0	; () banked
  1338  003026  51D8               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
  1339  003028  0101               	movlb	1	; () banked
  1340  00302A  2112               	addwfc	(??_main+1)& (0+255),w,b
  1341  00302C  0101               	movlb	1	; () banked
  1342  00302E  6F16               	movwf	(??_main+5)& (0+255),b
  1343  003030  0100               	movlb	0	; () banked
  1344  003032  51D9               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
  1345  003034  0101               	movlb	1	; () banked
  1346  003036  2113               	addwfc	(??_main+2)& (0+255),w,b
  1347  003038  0101               	movlb	1	; () banked
  1348  00303A  6F17               	movwf	(??_main+6)& (0+255),b
  1349  00303C  0100               	movlb	0	; () banked
  1350  00303E  51DA               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
  1351  003040  0101               	movlb	1	; () banked
  1352  003042  2114               	addwfc	(??_main+3)& (0+255),w,b
  1353  003044  0101               	movlb	1	; () banked
  1354  003046  6F18               	movwf	(??_main+7)& (0+255),b
  1355  003048  0101               	movlb	1	; () banked
  1356  00304A  5118               	movf	(??_main+7)& (0+255),w,b
  1357  00304C  0101               	movlb	1	; () banked
  1358  00304E  1117               	iorwf	(??_main+6)& (0+255),w,b
  1359  003050  0101               	movlb	1	; () banked
  1360  003052  1116               	iorwf	(??_main+5)& (0+255),w,b
  1361  003054  E107               	bnz	l7019
  1362  003056  0E06               	movlw	6
  1363  003058  0101               	movlb	1	; () banked
  1364  00305A  5D15               	subwf	(??_main+4)& (0+255),w,b
  1365  00305C  B0D8               	btfsc	status,0,c
  1366  00305E  D002               	goto	l7019
  1367  003060  D087               	goto	l7053
  1368  003062  D000               	goto	l7019
  1369  003064                     l7019:
  1370                           
  1371                           ; BSR set to: 1
  1372                           ;motore.c: 157: ecu_cycle++;
  1373  003064  0100               	movlb	0	; () banked
  1374  003066  2BE5               	incf	_ecu_cycle& (0+255),f,b	;volatile
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;motore.c: 158: if (ecu_cycle > 2) {
  1378  003068  0E02               	movlw	2
  1379  00306A  0100               	movlb	0	; () banked
  1380  00306C  65E5               	cpfsgt	_ecu_cycle& (0+255),b	;volatile
  1381  00306E  D004               	goto	l7025
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;motore.c: 159: ecu_cycle = 0;
  1385  003070  0E00               	movlw	0
  1386  003072  0100               	movlb	0	; () banked
  1387  003074  6FE5               	movwf	_ecu_cycle& (0+255),b	;volatile
  1388  003076  D000               	goto	l7025
  1389  003078                     l7025:
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;motore.c: 160: }
  1393                           ;motore.c: 161: if (ECU_error == 1) {
  1394  003078  A040               	btfss	_ECU_error/(0+8),_ECU_error& (0+7),c	;volatile
  1395  00307A  D002               	goto	l685
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;motore.c: 162: PORTAbits.RA1 = 1;
  1399  00307C  8280               	bsf	3968,1,c	;volatile
  1400                           
  1401                           ;motore.c: 163: } else {
  1402  00307E  D002               	goto	l7029
  1403  003080                     l685:
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;motore.c: 164: PORTAbits.RA1 = 0;
  1407  003080  9280               	bcf	3968,1,c	;volatile
  1408                           
  1409                           ; BSR set to: 0
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;motore.c: 165: }
  1413                           ;motore.c: 166: while (CANisTxReady() != 1) {
  1414  003082  D000               	goto	l7029
  1415  003084                     l7029:
  1416  003084  EC86  F027         	call	_CANisTxReady	;wreg free
  1417  003088  06E8               	decf	wreg,f,c
  1418  00308A  B4D8               	btfsc	status,2,c
  1419  00308C  D05D               	goto	l7051
  1420  00308E  D7FA               	goto	l7029
  1421                           
  1422                           ;motore.c: 167: }
  1423                           ;motore.c: 168: switch (ecu_cycle) {
  1424  003090  D05B               	goto	l7051
  1425                           
  1426                           ;motore.c: 170: while (CANisTxReady() != 1);
  1427                           
  1428                           ;motore.c: 169: case 0:
  1429  003092  D000               	goto	l7031
  1430  003094                     l7031:
  1431  003094  EC86  F027         	call	_CANisTxReady	;wreg free
  1432  003098  06E8               	decf	wreg,f,c
  1433  00309A  A4D8               	btfss	status,2,c
  1434  00309C  D7FB               	goto	l7031
  1435                           
  1436                           ;motore.c: 171: CANsendMessage(0b00000000011, data_array_debug, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1437  00309E  0E03               	movlw	3
  1438  0030A0  0100               	movlb	0	; () banked
  1439  0030A2  6F60               	movwf	CANsendMessage@identifier& (0+255),b
  1440  0030A4  0E00               	movlw	0
  1441  0030A6  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1442  0030A8  0E00               	movlw	0
  1443  0030AA  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1444  0030AC  0E00               	movlw	0
  1445  0030AE  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1446  0030B0  0EF5               	movlw	low _data_array_debug
  1447  0030B2  0100               	movlb	0	; () banked
  1448  0030B4  6F64               	movwf	CANsendMessage@data& (0+255),b
  1449  0030B6  0E00               	movlw	high _data_array_debug
  1450  0030B8  0100               	movlb	0	; () banked
  1451  0030BA  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1452  0030BC  0E08               	movlw	8
  1453  0030BE  0100               	movlb	0	; () banked
  1454  0030C0  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1455  0030C2  0EFC               	movlw	252
  1456  0030C4  0100               	movlb	0	; () banked
  1457  0030C6  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1458  0030C8  EC3C  F00C         	call	_CANsendMessage	;wreg free
  1459  0030CC  D03B               	goto	l7047
  1460                           
  1461                           ;motore.c: 175: while (CANisTxReady() != 1);
  1462                           
  1463                           ;motore.c: 174: case 1:
  1464                           
  1465                           ;motore.c: 173: break;
  1466                           
  1467                           ;motore.c: 172: ECU_error = 1;
  1468  0030CE  D000               	goto	l7037
  1469  0030D0                     l7037:
  1470  0030D0  EC86  F027         	call	_CANisTxReady	;wreg free
  1471  0030D4  06E8               	decf	wreg,f,c
  1472  0030D6  A4D8               	btfss	status,2,c
  1473  0030D8  D7FB               	goto	l7037
  1474                           
  1475                           ;motore.c: 176: CANsendMessage(0b00000000010, data_array_debug, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1476  0030DA  0E02               	movlw	2
  1477  0030DC  0100               	movlb	0	; () banked
  1478  0030DE  6F60               	movwf	CANsendMessage@identifier& (0+255),b
  1479  0030E0  0E00               	movlw	0
  1480  0030E2  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1481  0030E4  0E00               	movlw	0
  1482  0030E6  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1483  0030E8  0E00               	movlw	0
  1484  0030EA  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1485  0030EC  0EF5               	movlw	low _data_array_debug
  1486  0030EE  0100               	movlb	0	; () banked
  1487  0030F0  6F64               	movwf	CANsendMessage@data& (0+255),b
  1488  0030F2  0E00               	movlw	high _data_array_debug
  1489  0030F4  0100               	movlb	0	; () banked
  1490  0030F6  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1491  0030F8  0E08               	movlw	8
  1492  0030FA  0100               	movlb	0	; () banked
  1493  0030FC  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1494  0030FE  0EFC               	movlw	252
  1495  003100  0100               	movlb	0	; () banked
  1496  003102  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1497  003104  EC3C  F00C         	call	_CANsendMessage	;wreg free
  1498  003108  D01D               	goto	l7047
  1499                           
  1500                           ;motore.c: 180: while (CANisTxReady() != 1);
  1501                           
  1502                           ;motore.c: 179: case 2:
  1503                           
  1504                           ;motore.c: 178: break;
  1505                           
  1506                           ;motore.c: 177: ECU_error = 1;
  1507  00310A  D000               	goto	l7043
  1508  00310C                     l7043:
  1509  00310C  EC86  F027         	call	_CANisTxReady	;wreg free
  1510  003110  06E8               	decf	wreg,f,c
  1511  003112  A4D8               	btfss	status,2,c
  1512  003114  D7FB               	goto	l7043
  1513                           
  1514                           ;motore.c: 181: CANsendMessage(0b00000000100, data_array_debug, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1515  003116  0E04               	movlw	4
  1516  003118  0100               	movlb	0	; () banked
  1517  00311A  6F60               	movwf	CANsendMessage@identifier& (0+255),b
  1518  00311C  0E00               	movlw	0
  1519  00311E  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1520  003120  0E00               	movlw	0
  1521  003122  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1522  003124  0E00               	movlw	0
  1523  003126  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1524  003128  0EF5               	movlw	low _data_array_debug
  1525  00312A  0100               	movlb	0	; () banked
  1526  00312C  6F64               	movwf	CANsendMessage@data& (0+255),b
  1527  00312E  0E00               	movlw	high _data_array_debug
  1528  003130  0100               	movlb	0	; () banked
  1529  003132  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1530  003134  0E08               	movlw	8
  1531  003136  0100               	movlb	0	; () banked
  1532  003138  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1533  00313A  0EFC               	movlw	252
  1534  00313C  0100               	movlb	0	; () banked
  1535  00313E  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1536  003140  EC3C  F00C         	call	_CANsendMessage	;wreg free
  1537  003144                     l7047:
  1538                           
  1539                           ;motore.c: 182: ECU_error = 1;
  1540  003144  8040               	bsf	_ECU_error/(0+8),_ECU_error& (0+7),c	;volatile
  1541                           
  1542                           ;motore.c: 184: }
  1543                           
  1544                           ;motore.c: 183: break;
  1545  003146  D00B               	goto	l695
  1546  003148                     l7051:
  1547  003148  0100               	movlb	0	; () banked
  1548  00314A  51E5               	movf	_ecu_cycle& (0+255),w,b	;volatile
  1549                           
  1550                           ; Switch size 1, requested type "space"
  1551                           ; Number of cases is 3, Range of values is 0 to 2
  1552                           ; switch strategies available:
  1553                           ; Name         Instructions Cycles
  1554                           ; simple_byte           10     6 (average)
  1555                           ;	Chosen strategy is simple_byte
  1556  00314C  0A00               	xorlw	0	; case 0
  1557  00314E  B4D8               	btfsc	status,2,c
  1558  003150  D7A1               	goto	l7031
  1559  003152  0A01               	xorlw	1	; case 1
  1560  003154  B4D8               	btfsc	status,2,c
  1561  003156  D7BC               	goto	l7037
  1562  003158  0A03               	xorlw	3	; case 2
  1563  00315A  B4D8               	btfsc	status,2,c
  1564  00315C  D7D7               	goto	l7043
  1565  00315E                     l695:
  1566                           
  1567                           ;motore.c: 185: previousTimeCounter = timeCounter;
  1568  00315E  C0D7  F0CB         	movff	_timeCounter,_previousTimeCounter	;volatile
  1569  003162  C0D8  F0CC         	movff	_timeCounter+1,_previousTimeCounter+1	;volatile
  1570  003166  C0D9  F0CD         	movff	_timeCounter+2,_previousTimeCounter+2	;volatile
  1571  00316A  C0DA  F0CE         	movff	_timeCounter+3,_previousTimeCounter+3	;volatile
  1572  00316E  D000               	goto	l7053
  1573  003170                     l7053:
  1574                           
  1575                           ;motore.c: 186: }
  1576                           ;motore.c: 188: if ((timeCounter - previousTimeCounter2 > 100)) {
  1577  003170  C0D3  F111         	movff	_previousTimeCounter2,??_main
  1578  003174  C0D4  F112         	movff	_previousTimeCounter2+1,??_main+1
  1579  003178  C0D5  F113         	movff	_previousTimeCounter2+2,??_main+2
  1580  00317C  C0D6  F114         	movff	_previousTimeCounter2+3,??_main+3
  1581  003180  0101               	movlb	1	; () banked
  1582  003182  1F11               	comf	??_main& (0+255),f,b
  1583  003184  1F12               	comf	(??_main+1)& (0+255),f,b
  1584  003186  1F13               	comf	(??_main+2)& (0+255),f,b
  1585  003188  1F14               	comf	(??_main+3)& (0+255),f,b
  1586  00318A  2B11               	incf	??_main& (0+255),f,b
  1587  00318C  0E00               	movlw	0
  1588  00318E  2312               	addwfc	(??_main+1)& (0+255),f,b
  1589  003190  2313               	addwfc	(??_main+2)& (0+255),f,b
  1590  003192  2314               	addwfc	(??_main+3)& (0+255),f,b
  1591  003194  0100               	movlb	0	; () banked
  1592  003196  51D7               	movf	_timeCounter& (0+255),w,b	;volatile
  1593  003198  0101               	movlb	1	; () banked
  1594  00319A  2511               	addwf	??_main& (0+255),w,b
  1595  00319C  0101               	movlb	1	; () banked
  1596  00319E  6F15               	movwf	(??_main+4)& (0+255),b
  1597  0031A0  0100               	movlb	0	; () banked
  1598  0031A2  51D8               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
  1599  0031A4  0101               	movlb	1	; () banked
  1600  0031A6  2112               	addwfc	(??_main+1)& (0+255),w,b
  1601  0031A8  0101               	movlb	1	; () banked
  1602  0031AA  6F16               	movwf	(??_main+5)& (0+255),b
  1603  0031AC  0100               	movlb	0	; () banked
  1604  0031AE  51D9               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
  1605  0031B0  0101               	movlb	1	; () banked
  1606  0031B2  2113               	addwfc	(??_main+2)& (0+255),w,b
  1607  0031B4  0101               	movlb	1	; () banked
  1608  0031B6  6F17               	movwf	(??_main+6)& (0+255),b
  1609  0031B8  0100               	movlb	0	; () banked
  1610  0031BA  51DA               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
  1611  0031BC  0101               	movlb	1	; () banked
  1612  0031BE  2114               	addwfc	(??_main+3)& (0+255),w,b
  1613  0031C0  0101               	movlb	1	; () banked
  1614  0031C2  6F18               	movwf	(??_main+7)& (0+255),b
  1615  0031C4  0101               	movlb	1	; () banked
  1616  0031C6  5118               	movf	(??_main+7)& (0+255),w,b
  1617  0031C8  0101               	movlb	1	; () banked
  1618  0031CA  1117               	iorwf	(??_main+6)& (0+255),w,b
  1619  0031CC  0101               	movlb	1	; () banked
  1620  0031CE  1116               	iorwf	(??_main+5)& (0+255),w,b
  1621  0031D0  E105               	bnz	u9400
  1622  0031D2  0E65               	movlw	101
  1623  0031D4  0101               	movlb	1	; () banked
  1624  0031D6  5D15               	subwf	(??_main+4)& (0+255),w,b
  1625  0031D8  A0D8               	btfss	status,0,c
  1626  0031DA  D689               	goto	l6997
  1627  0031DC                     u9400:
  1628                           
  1629                           ; BSR set to: 1
  1630                           ;motore.c: 189: battery_measure();
  1631  0031DC  EC8F  F01F         	call	_battery_measure	;wreg free
  1632                           
  1633                           ;motore.c: 190: previousTimeCounter2 = timeCounter;
  1634  0031E0  C0D7  F0D3         	movff	_timeCounter,_previousTimeCounter2	;volatile
  1635  0031E4  C0D8  F0D4         	movff	_timeCounter+1,_previousTimeCounter2+1	;volatile
  1636  0031E8  C0D9  F0D5         	movff	_timeCounter+2,_previousTimeCounter2+2	;volatile
  1637  0031EC  C0DA  F0D6         	movff	_timeCounter+3,_previousTimeCounter2+3	;volatile
  1638  0031F0  D67E               	goto	l6997
  1639  0031F2  EFC1  F000         	goto	start
  1640  0031F6                     __end_of_main:
  1641                           	opt stack 0
  1642                           tblptru	equ	0xFF8
  1643                           tblptrh	equ	0xFF7
  1644                           tblptrl	equ	0xFF6
  1645                           tablat	equ	0xFF5
  1646                           postinc0	equ	0xFEE
  1647                           wreg	equ	0xFE8
  1648                           status	equ	0xFD8
  1649                           
  1650 ;; *************** function _send_data *****************
  1651 ;; Defined at:
  1652 ;;		line 249 in file "motore.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;		None               void
  1659 ;; Registers used:
  1660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1670 ;;Total ram usage:        0 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; Hardware stack levels required when called:    3
  1673 ;; This function calls:
  1674 ;;		_CANisTxReady
  1675 ;;		_CANsendMessage
  1676 ;; This function is called by:
  1677 ;;		_main
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text1
  1682  004CF0                     __ptext1:
  1683                           	opt stack 0
  1684  004CF0                     _send_data:
  1685                           	opt stack 27
  1686                           
  1687                           ;motore.c: 250: if (CANisTxReady()) {
  1688                           
  1689                           ;incstack = 0
  1690  004CF0  EC86  F027         	call	_CANisTxReady	;wreg free
  1691  004CF4  0900               	iorlw	0
  1692  004CF6  A4D8               	btfss	status,2,c
  1693                           
  1694                           ;motore.c: 251: if (remote_frame == 1) {
  1695  004CF8  AE40               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1696  004CFA  D018               	goto	l6929
  1697                           
  1698                           ;motore.c: 252: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1699  004CFC  C023  F060         	movff	_id,CANsendMessage@identifier	;volatile
  1700  004D00  C024  F061         	movff	_id+1,CANsendMessage@identifier+1	;volatile
  1701  004D04  C025  F062         	movff	_id+2,CANsendMessage@identifier+2	;volatile
  1702  004D08  C026  F063         	movff	_id+3,CANsendMessage@identifier+3	;volatile
  1703  004D0C  0E37               	movlw	low _data_array
  1704  004D0E  0100               	movlb	0	; () banked
  1705  004D10  6F64               	movwf	CANsendMessage@data& (0+255),b
  1706  004D12  0E00               	movlw	high _data_array
  1707  004D14  0100               	movlb	0	; () banked
  1708  004D16  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1709  004D18  0E08               	movlw	8
  1710  004D1A  0100               	movlb	0	; () banked
  1711  004D1C  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1712  004D1E  0EBC               	movlw	188
  1713  004D20  0100               	movlb	0	; () banked
  1714  004D22  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1715  004D24  EC3C  F00C         	call	_CANsendMessage	;wreg free
  1716                           
  1717                           ;motore.c: 253: remote_frame = 0;
  1718  004D28  9E40               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1719  004D2A  D000               	goto	l6929
  1720  004D2C                     l6929:
  1721                           
  1722                           ;motore.c: 254: }
  1723                           ;motore.c: 255: }
  1724                           ;motore.c: 256: if ((TXB0CONbits.TXABT == 1) || (TXB1CONbits.TXABT == 1)) {
  1725  004D2C  010F               	movlb	15	; () banked
  1726  004D2E  BD40               	btfsc	64,6,b	;volatile
  1727  004D30  D003               	goto	l738
  1728                           
  1729                           ; BSR set to: 15
  1730  004D32  010F               	movlb	15	; () banked
  1731  004D34  AD30               	btfss	48,6,b	;volatile
  1732  004D36  D002               	goto	l736
  1733  004D38                     l738:
  1734                           
  1735                           ; BSR set to: 15
  1736                           ;motore.c: 257: can_retry = 1;
  1737  004D38  8240               	bsf	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
  1738                           
  1739                           ;motore.c: 258: } else {
  1740  004D3A  0012               	return	
  1741  004D3C                     l736:
  1742                           
  1743                           ; BSR set to: 15
  1744                           ;motore.c: 259: can_retry = 0;
  1745  004D3C  9240               	bcf	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
  1746  004D3E  0012               	return	
  1747                           
  1748                           ; BSR set to: 15
  1749                           
  1750                           ; BSR set to: 15
  1751  004D40  0012               	return		;funcret
  1752  004D42                     __end_of_send_data:
  1753                           	opt stack 0
  1754                           tblptru	equ	0xFF8
  1755                           tblptrh	equ	0xFF7
  1756                           tblptrl	equ	0xFF6
  1757                           tablat	equ	0xFF5
  1758                           postinc0	equ	0xFEE
  1759                           wreg	equ	0xFE8
  1760                           status	equ	0xFD8
  1761                           
  1762 ;; *************** function _rampe *****************
  1763 ;; Defined at:
  1764 ;;		line 195 in file "motore.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;		None               void
  1771 ;; Registers used:
  1772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1779 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1780 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1781 ;;      Totals:         0       8       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1782 ;;Total ram usage:       12 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    7
  1785 ;; This function calls:
  1786 ;;		_CANisTxReady
  1787 ;;		_CANsendMessage
  1788 ;;		_SetDCEPWM1
  1789 ;;		_SetOutputEPWM1
  1790 ;;		___aldiv
  1791 ;;		___fladd
  1792 ;;		___fltol
  1793 ;;		___lwdiv
  1794 ;;		___lwtofl
  1795 ;;		_abs
  1796 ;;		_pow
  1797 ;; This function is called by:
  1798 ;;		_main
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	text2
  1803  002018                     __ptext2:
  1804                           	opt stack 0
  1805  002018                     _rampe:
  1806                           	opt stack 23
  1807                           
  1808                           ;motore.c: 196: if (requestSpeed > 1) {
  1809                           
  1810                           ; BSR set to: 15
  1811                           ;incstack = 0
  1812  002018  BE2E               	btfsc	_requestSpeed+3,7,c	;volatile
  1813  00201A  D2D5               	goto	l6919
  1814  00201C  502E               	movf	_requestSpeed+3,w,c	;volatile
  1815  00201E  102D               	iorwf	_requestSpeed+2,w,c	;volatile
  1816  002020  102C               	iorwf	_requestSpeed+1,w,c	;volatile
  1817  002022  E106               	bnz	l6841
  1818  002024  0E02               	movlw	2
  1819  002026  5C2B               	subwf	_requestSpeed,w,c	;volatile
  1820  002028  B0D8               	btfsc	status,0,c
  1821  00202A  D002               	goto	l6841
  1822  00202C  D2CC               	goto	l6919
  1823                           
  1824                           ;motore.c: 197: while (CANisTxReady() != 1);
  1825  00202E  D000               	goto	l6841
  1826  002030                     l6841:
  1827  002030  EC86  F027         	call	_CANisTxReady	;wreg free
  1828  002034  06E8               	decf	wreg,f,c
  1829  002036  A4D8               	btfss	status,2,c
  1830  002038  D7FB               	goto	l6841
  1831                           
  1832                           ;motore.c: 198: CANsendMessage(0b00000001000, data_array_debug, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1833  00203A  0E08               	movlw	8
  1834  00203C  0100               	movlb	0	; () banked
  1835  00203E  6F60               	movwf	CANsendMessage@identifier& (0+255),b
  1836  002040  0E00               	movlw	0
  1837  002042  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1838  002044  0E00               	movlw	0
  1839  002046  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1840  002048  0E00               	movlw	0
  1841  00204A  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1842  00204C  0EF5               	movlw	low _data_array_debug
  1843  00204E  0100               	movlb	0	; () banked
  1844  002050  6F64               	movwf	CANsendMessage@data& (0+255),b
  1845  002052  0E00               	movlw	high _data_array_debug
  1846  002054  0100               	movlb	0	; () banked
  1847  002056  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1848  002058  0E08               	movlw	8
  1849  00205A  0100               	movlb	0	; () banked
  1850  00205C  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1851  00205E  0EFC               	movlw	252
  1852  002060  0100               	movlb	0	; () banked
  1853  002062  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1854  002064  EC3C  F00C         	call	_CANsendMessage	;wreg free
  1855                           
  1856                           ;motore.c: 199: if (speed_fetched == 1) {
  1857  002068  A441               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1858  00206A  D29A               	goto	l6913
  1859                           
  1860                           ;motore.c: 200: if (dir == 1) {
  1861  00206C  0100               	movlb	0	; () banked
  1862  00206E  05FD               	decf	_dir& (0+255),w,b	;volatile
  1863  002070  0100               	movlb	0	; () banked
  1864  002072  11FE               	iorwf	(_dir+1)& (0+255),w,b	;volatile
  1865  002074  A4D8               	btfss	status,2,c
  1866  002076  D007               	goto	l6851
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;motore.c: 201: SetOutputEPWM1(0b01111111, 0b11111100);
  1870  002078  0EFC               	movlw	252
  1871  00207A  0100               	movlb	0	; () banked
  1872  00207C  6F60               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  1873  00207E  0E7F               	movlw	127
  1874  002080  EC4E  F026         	call	_SetOutputEPWM1
  1875  002084  D000               	goto	l6851
  1876  002086                     l6851:
  1877                           
  1878                           ;motore.c: 202: }
  1879                           ;motore.c: 203: if (dir == 0) {
  1880  002086  0100               	movlb	0	; () banked
  1881  002088  51FD               	movf	_dir& (0+255),w,b	;volatile
  1882  00208A  0100               	movlb	0	; () banked
  1883  00208C  11FE               	iorwf	(_dir+1)& (0+255),w,b	;volatile
  1884  00208E  A4D8               	btfss	status,2,c
  1885  002090  D007               	goto	l6855
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;motore.c: 204: SetOutputEPWM1(0b11111111, 0b11111100);
  1889  002092  0EFC               	movlw	252
  1890  002094  0100               	movlb	0	; () banked
  1891  002096  6F60               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  1892  002098  0EFF               	movlw	255
  1893  00209A  EC4E  F026         	call	_SetOutputEPWM1
  1894  00209E  D000               	goto	l6855
  1895  0020A0                     l6855:
  1896                           
  1897                           ;motore.c: 205: }
  1898                           ;motore.c: 206: speed_fetched = 0;
  1899  0020A0  9441               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1900                           
  1901                           ;motore.c: 207: currentSpeed = ((left_speed + right_speed) / 2);
  1902  0020A2  0100               	movlb	0	; () banked
  1903  0020A4  51E3               	movf	_right_speed& (0+255),w,b	;volatile
  1904  0020A6  0100               	movlb	0	; () banked
  1905  0020A8  25DF               	addwf	_left_speed& (0+255),w,b	;volatile
  1906  0020AA  0100               	movlb	0	; () banked
  1907  0020AC  6FB6               	movwf	??_rampe& (0+255),b
  1908  0020AE  0100               	movlb	0	; () banked
  1909  0020B0  51E4               	movf	(_right_speed+1)& (0+255),w,b	;volatile
  1910  0020B2  0100               	movlb	0	; () banked
  1911  0020B4  21E0               	addwfc	(_left_speed+1)& (0+255),w,b	;volatile
  1912  0020B6  0100               	movlb	0	; () banked
  1913  0020B8  6FB7               	movwf	(??_rampe+1)& (0+255),b
  1914  0020BA  90D8               	bcf	status,0,c
  1915  0020BC  0100               	movlb	0	; () banked
  1916  0020BE  31B7               	rrcf	(??_rampe+1)& (0+255),w,b
  1917  0020C0  0100               	movlb	0	; () banked
  1918  0020C2  6FB9               	movwf	(??_rampe+3)& (0+255),b
  1919  0020C4  0100               	movlb	0	; () banked
  1920  0020C6  31B6               	rrcf	??_rampe& (0+255),w,b
  1921  0020C8  0100               	movlb	0	; () banked
  1922  0020CA  6FB8               	movwf	(??_rampe+2)& (0+255),b
  1923  0020CC  C0B8  F0C3         	movff	??_rampe+2,_currentSpeed	;volatile
  1924  0020D0  C0B9  F0C4         	movff	??_rampe+3,_currentSpeed+1	;volatile
  1925  0020D4  0100               	movlb	0	; () banked
  1926  0020D6  6BC5               	clrf	(_currentSpeed+2)& (0+255),b	;volatile
  1927  0020D8  6BC6               	clrf	(_currentSpeed+3)& (0+255),b	;volatile
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;motore.c: 208: if ((currentSpeed == 0)&&(requestSpeed > 1000)) {
  1931  0020DA  0100               	movlb	0	; () banked
  1932  0020DC  51C3               	movf	_currentSpeed& (0+255),w,b	;volatile
  1933  0020DE  0100               	movlb	0	; () banked
  1934  0020E0  11C4               	iorwf	(_currentSpeed+1)& (0+255),w,b	;volatile
  1935  0020E2  0100               	movlb	0	; () banked
  1936  0020E4  11C5               	iorwf	(_currentSpeed+2)& (0+255),w,b	;volatile
  1937  0020E6  0100               	movlb	0	; () banked
  1938  0020E8  11C6               	iorwf	(_currentSpeed+3)& (0+255),w,b	;volatile
  1939  0020EA  B4D8               	btfsc	status,2,c
  1940                           
  1941                           ; BSR set to: 0
  1942  0020EC  BE2E               	btfsc	_requestSpeed+3,7,c	;volatile
  1943  0020EE  D016               	goto	l6867
  1944  0020F0  502E               	movf	_requestSpeed+3,w,c	;volatile
  1945  0020F2  102D               	iorwf	_requestSpeed+2,w,c	;volatile
  1946  0020F4  E106               	bnz	u9050
  1947  0020F6  0EE9               	movlw	233
  1948  0020F8  5C2B               	subwf	_requestSpeed,w,c	;volatile
  1949  0020FA  0E03               	movlw	3
  1950  0020FC  582C               	subwfb	_requestSpeed+1,w,c	;volatile
  1951  0020FE  A0D8               	btfss	status,0,c
  1952  002100  D00D               	goto	l6867
  1953  002102                     u9050:
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;motore.c: 209: SetDCEPWM1(1000);
  1957  002102  0E03               	movlw	3
  1958  002104  0100               	movlb	0	; () banked
  1959  002106  6F61               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1960  002108  0EE8               	movlw	232
  1961  00210A  6F60               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  1962  00210C  ECC7  F026         	call	_SetDCEPWM1	;wreg free
  1963                           
  1964                           ;motore.c: 210: previousPwm = 1000;
  1965  002110  0E03               	movlw	3
  1966  002112  0100               	movlb	0	; () banked
  1967  002114  6FE2               	movwf	(_previousPwm+1)& (0+255),b
  1968  002116  0EE8               	movlw	232
  1969  002118  6FE1               	movwf	_previousPwm& (0+255),b
  1970  00211A  D000               	goto	l6867
  1971  00211C                     l6867:
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;motore.c: 211: }
  1975                           ;motore.c: 212: if ((currentSpeed == 0)&&(requestSpeed < 1000)) {
  1976  00211C  0100               	movlb	0	; () banked
  1977  00211E  51C3               	movf	_currentSpeed& (0+255),w,b	;volatile
  1978  002120  0100               	movlb	0	; () banked
  1979  002122  11C4               	iorwf	(_currentSpeed+1)& (0+255),w,b	;volatile
  1980  002124  0100               	movlb	0	; () banked
  1981  002126  11C5               	iorwf	(_currentSpeed+2)& (0+255),w,b	;volatile
  1982  002128  0100               	movlb	0	; () banked
  1983  00212A  11C6               	iorwf	(_currentSpeed+3)& (0+255),w,b	;volatile
  1984  00212C  A4D8               	btfss	status,2,c
  1985  00212E  D018               	goto	l6875
  1986                           
  1987                           ; BSR set to: 0
  1988  002130  BE2E               	btfsc	_requestSpeed+3,7,c	;volatile
  1989  002132  D009               	goto	l6871
  1990  002134  502E               	movf	_requestSpeed+3,w,c	;volatile
  1991  002136  102D               	iorwf	_requestSpeed+2,w,c	;volatile
  1992  002138  E113               	bnz	l6875
  1993  00213A  0EE8               	movlw	232
  1994  00213C  5C2B               	subwf	_requestSpeed,w,c	;volatile
  1995  00213E  0E03               	movlw	3
  1996  002140  582C               	subwfb	_requestSpeed+1,w,c	;volatile
  1997  002142  B0D8               	btfsc	status,0,c
  1998  002144  D00D               	goto	l6875
  1999  002146                     l6871:
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;motore.c: 213: SetDCEPWM1(600);
  2003  002146  0E02               	movlw	2
  2004  002148  0100               	movlb	0	; () banked
  2005  00214A  6F61               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  2006  00214C  0E58               	movlw	88
  2007  00214E  6F60               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  2008  002150  ECC7  F026         	call	_SetDCEPWM1	;wreg free
  2009                           
  2010                           ;motore.c: 214: previousPwm = 600;
  2011  002154  0E02               	movlw	2
  2012  002156  0100               	movlb	0	; () banked
  2013  002158  6FE2               	movwf	(_previousPwm+1)& (0+255),b
  2014  00215A  0E58               	movlw	88
  2015  00215C  6FE1               	movwf	_previousPwm& (0+255),b
  2016  00215E  D000               	goto	l6875
  2017  002160                     l6875:
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;motore.c: 215: }
  2021                           ;motore.c: 216: errore = abs((currentSpeed - requestSpeed));
  2022  002160  C02B  F0B6         	movff	_requestSpeed,??_rampe	;volatile
  2023  002164  C02C  F0B7         	movff	_requestSpeed+1,??_rampe+1	;volatile
  2024  002168  0100               	movlb	0	; () banked
  2025  00216A  1FB6               	comf	??_rampe& (0+255),f,b
  2026  00216C  1FB7               	comf	(??_rampe+1)& (0+255),f,b
  2027  00216E  4BB6               	infsnz	??_rampe& (0+255),f,b
  2028  002170  2BB7               	incf	(??_rampe+1)& (0+255),f,b
  2029  002172  0100               	movlb	0	; () banked
  2030  002174  51C3               	movf	_currentSpeed& (0+255),w,b	;volatile
  2031  002176  0100               	movlb	0	; () banked
  2032  002178  25B6               	addwf	??_rampe& (0+255),w,b
  2033  00217A  0100               	movlb	0	; () banked
  2034  00217C  6F60               	movwf	abs@a& (0+255),b
  2035  00217E  0100               	movlb	0	; () banked
  2036  002180  51C4               	movf	(_currentSpeed+1)& (0+255),w,b	;volatile
  2037  002182  0100               	movlb	0	; () banked
  2038  002184  21B7               	addwfc	(??_rampe+1)& (0+255),w,b
  2039  002186  0100               	movlb	0	; () banked
  2040  002188  6F61               	movwf	(abs@a+1)& (0+255),b
  2041  00218A  EC70  F027         	call	_abs	;wreg free
  2042  00218E  C060  F0DD         	movff	?_abs,_errore
  2043  002192  C061  F0DE         	movff	?_abs+1,_errore+1
  2044                           
  2045                           ;motore.c: 218: if (errore > 3000) {
  2046  002196  0EB9               	movlw	185
  2047  002198  0100               	movlb	0	; () banked
  2048  00219A  5DDD               	subwf	_errore& (0+255),w,b
  2049  00219C  0E0B               	movlw	11
  2050  00219E  0100               	movlb	0	; () banked
  2051  0021A0  59DE               	subwfb	(_errore+1)& (0+255),w,b
  2052  0021A2  A0D8               	btfss	status,0,c
  2053  0021A4  D04A               	goto	l6883
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;motore.c: 219: correzione = pow(2, (errore / 800)) - 1;
  2057  0021A6  0E03               	movlw	3
  2058  0021A8  0100               	movlb	0	; () banked
  2059  0021AA  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2060  0021AC  0E20               	movlw	32
  2061  0021AE  6F62               	movwf	___lwdiv@divisor& (0+255),b
  2062  0021B0  C0DD  F060         	movff	_errore,___lwdiv@dividend
  2063  0021B4  C0DE  F061         	movff	_errore+1,___lwdiv@dividend+1
  2064  0021B8  EC85  F025         	call	___lwdiv	;wreg free
  2065  0021BC  C060  F06A         	movff	?___lwdiv,___lwtofl@c
  2066  0021C0  C061  F06B         	movff	?___lwdiv+1,___lwtofl@c+1
  2067  0021C4  EC57  F027         	call	___lwtofl	;wreg free
  2068  0021C8  C06A  F0B2         	movff	?___lwtofl,pow@y
  2069  0021CC  C06B  F0B3         	movff	?___lwtofl+1,pow@y+1
  2070  0021D0  C06C  F0B4         	movff	?___lwtofl+2,pow@y+2
  2071  0021D4  C06D  F0B5         	movff	?___lwtofl+3,pow@y+3
  2072  0021D8  0E00               	movlw	0
  2073  0021DA  0100               	movlb	0	; () banked
  2074  0021DC  6FAE               	movwf	pow@x& (0+255),b
  2075  0021DE  0E00               	movlw	0
  2076  0021E0  6FAF               	movwf	(pow@x+1)& (0+255),b
  2077  0021E2  0E00               	movlw	0
  2078  0021E4  6FB0               	movwf	(pow@x+2)& (0+255),b
  2079  0021E6  0E40               	movlw	64
  2080  0021E8  6FB1               	movwf	(pow@x+3)& (0+255),b
  2081  0021EA  EC77  F01B         	call	_pow	;wreg free
  2082  0021EE  C0AE  F10D         	movff	?_pow,_rampe$4019
  2083  0021F2  C0AF  F10E         	movff	?_pow+1,_rampe$4019+1
  2084  0021F6  C0B0  F10F         	movff	?_pow+2,_rampe$4019+2
  2085  0021FA  C0B1  F110         	movff	?_pow+3,_rampe$4019+3
  2086                           
  2087                           ;motore.c: 219: correzione = pow(2, (errore / 800)) - 1;
  2088  0021FE  0E00               	movlw	0
  2089  002200  0100               	movlb	0	; () banked
  2090  002202  6F82               	movwf	___fladd@f2& (0+255),b
  2091  002204  0E00               	movlw	0
  2092  002206  6F83               	movwf	(___fladd@f2+1)& (0+255),b
  2093  002208  0E80               	movlw	128
  2094  00220A  6F84               	movwf	(___fladd@f2+2)& (0+255),b
  2095  00220C  0EBF               	movlw	191
  2096  00220E  6F85               	movwf	(___fladd@f2+3)& (0+255),b
  2097  002210  C10D  F07E         	movff	_rampe$4019,___fladd@f1
  2098  002214  C10E  F07F         	movff	_rampe$4019+1,___fladd@f1+1
  2099  002218  C10F  F080         	movff	_rampe$4019+2,___fladd@f1+2
  2100  00221C  C110  F081         	movff	_rampe$4019+3,___fladd@f1+3
  2101  002220  EC41  F01A         	call	___fladd	;wreg free
  2102  002224  C07E  F08A         	movff	?___fladd,___fltol@f1
  2103  002228  C07F  F08B         	movff	?___fladd+1,___fltol@f1+1
  2104  00222C  C080  F08C         	movff	?___fladd+2,___fltol@f1+2
  2105  002230  C081  F08D         	movff	?___fladd+3,___fltol@f1+3
  2106  002234  EC86  F022         	call	___fltol	;wreg free
  2107  002238  D0F5               	goto	L3
  2108  00223A                     l6883:
  2109  00223A  0ED1               	movlw	209
  2110  00223C  0100               	movlb	0	; () banked
  2111  00223E  5DDD               	subwf	_errore& (0+255),w,b
  2112  002240  0E07               	movlw	7
  2113  002242  0100               	movlb	0	; () banked
  2114  002244  59DE               	subwfb	(_errore+1)& (0+255),w,b
  2115  002246  A0D8               	btfss	status,0,c
  2116  002248  D04A               	goto	l6889
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;motore.c: 221: correzione = pow(2, (errore / 400)) - 1;
  2120  00224A  0E01               	movlw	1
  2121  00224C  0100               	movlb	0	; () banked
  2122  00224E  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2123  002250  0E90               	movlw	144
  2124  002252  6F62               	movwf	___lwdiv@divisor& (0+255),b
  2125  002254  C0DD  F060         	movff	_errore,___lwdiv@dividend
  2126  002258  C0DE  F061         	movff	_errore+1,___lwdiv@dividend+1
  2127  00225C  EC85  F025         	call	___lwdiv	;wreg free
  2128  002260  C060  F06A         	movff	?___lwdiv,___lwtofl@c
  2129  002264  C061  F06B         	movff	?___lwdiv+1,___lwtofl@c+1
  2130  002268  EC57  F027         	call	___lwtofl	;wreg free
  2131  00226C  C06A  F0B2         	movff	?___lwtofl,pow@y
  2132  002270  C06B  F0B3         	movff	?___lwtofl+1,pow@y+1
  2133  002274  C06C  F0B4         	movff	?___lwtofl+2,pow@y+2
  2134  002278  C06D  F0B5         	movff	?___lwtofl+3,pow@y+3
  2135  00227C  0E00               	movlw	0
  2136  00227E  0100               	movlb	0	; () banked
  2137  002280  6FAE               	movwf	pow@x& (0+255),b
  2138  002282  0E00               	movlw	0
  2139  002284  6FAF               	movwf	(pow@x+1)& (0+255),b
  2140  002286  0E00               	movlw	0
  2141  002288  6FB0               	movwf	(pow@x+2)& (0+255),b
  2142  00228A  0E40               	movlw	64
  2143  00228C  6FB1               	movwf	(pow@x+3)& (0+255),b
  2144  00228E  EC77  F01B         	call	_pow	;wreg free
  2145  002292  C0AE  F10D         	movff	?_pow,_rampe$4019
  2146  002296  C0AF  F10E         	movff	?_pow+1,_rampe$4019+1
  2147  00229A  C0B0  F10F         	movff	?_pow+2,_rampe$4019+2
  2148  00229E  C0B1  F110         	movff	?_pow+3,_rampe$4019+3
  2149                           
  2150                           ;motore.c: 221: correzione = pow(2, (errore / 400)) - 1;
  2151  0022A2  0E00               	movlw	0
  2152  0022A4  0100               	movlb	0	; () banked
  2153  0022A6  6F82               	movwf	___fladd@f2& (0+255),b
  2154  0022A8  0E00               	movlw	0
  2155  0022AA  6F83               	movwf	(___fladd@f2+1)& (0+255),b
  2156  0022AC  0E80               	movlw	128
  2157  0022AE  6F84               	movwf	(___fladd@f2+2)& (0+255),b
  2158  0022B0  0EBF               	movlw	191
  2159  0022B2  6F85               	movwf	(___fladd@f2+3)& (0+255),b
  2160  0022B4  C10D  F07E         	movff	_rampe$4019,___fladd@f1
  2161  0022B8  C10E  F07F         	movff	_rampe$4019+1,___fladd@f1+1
  2162  0022BC  C10F  F080         	movff	_rampe$4019+2,___fladd@f1+2
  2163  0022C0  C110  F081         	movff	_rampe$4019+3,___fladd@f1+3
  2164  0022C4  EC41  F01A         	call	___fladd	;wreg free
  2165  0022C8  C07E  F08A         	movff	?___fladd,___fltol@f1
  2166  0022CC  C07F  F08B         	movff	?___fladd+1,___fltol@f1+1
  2167  0022D0  C080  F08C         	movff	?___fladd+2,___fltol@f1+2
  2168  0022D4  C081  F08D         	movff	?___fladd+3,___fltol@f1+3
  2169  0022D8  EC86  F022         	call	___fltol	;wreg free
  2170  0022DC  D0A3               	goto	L3
  2171  0022DE                     l6889:
  2172  0022DE  0EE9               	movlw	233
  2173  0022E0  0100               	movlb	0	; () banked
  2174  0022E2  5DDD               	subwf	_errore& (0+255),w,b
  2175  0022E4  0E03               	movlw	3
  2176  0022E6  0100               	movlb	0	; () banked
  2177  0022E8  59DE               	subwfb	(_errore+1)& (0+255),w,b
  2178  0022EA  A0D8               	btfss	status,0,c
  2179  0022EC  D04A               	goto	l6895
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;motore.c: 223: correzione = pow(2, (errore / 200)) - 1;
  2183  0022EE  0E00               	movlw	0
  2184  0022F0  0100               	movlb	0	; () banked
  2185  0022F2  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2186  0022F4  0EC8               	movlw	200
  2187  0022F6  6F62               	movwf	___lwdiv@divisor& (0+255),b
  2188  0022F8  C0DD  F060         	movff	_errore,___lwdiv@dividend
  2189  0022FC  C0DE  F061         	movff	_errore+1,___lwdiv@dividend+1
  2190  002300  EC85  F025         	call	___lwdiv	;wreg free
  2191  002304  C060  F06A         	movff	?___lwdiv,___lwtofl@c
  2192  002308  C061  F06B         	movff	?___lwdiv+1,___lwtofl@c+1
  2193  00230C  EC57  F027         	call	___lwtofl	;wreg free
  2194  002310  C06A  F0B2         	movff	?___lwtofl,pow@y
  2195  002314  C06B  F0B3         	movff	?___lwtofl+1,pow@y+1
  2196  002318  C06C  F0B4         	movff	?___lwtofl+2,pow@y+2
  2197  00231C  C06D  F0B5         	movff	?___lwtofl+3,pow@y+3
  2198  002320  0E00               	movlw	0
  2199  002322  0100               	movlb	0	; () banked
  2200  002324  6FAE               	movwf	pow@x& (0+255),b
  2201  002326  0E00               	movlw	0
  2202  002328  6FAF               	movwf	(pow@x+1)& (0+255),b
  2203  00232A  0E00               	movlw	0
  2204  00232C  6FB0               	movwf	(pow@x+2)& (0+255),b
  2205  00232E  0E40               	movlw	64
  2206  002330  6FB1               	movwf	(pow@x+3)& (0+255),b
  2207  002332  EC77  F01B         	call	_pow	;wreg free
  2208  002336  C0AE  F10D         	movff	?_pow,_rampe$4019
  2209  00233A  C0AF  F10E         	movff	?_pow+1,_rampe$4019+1
  2210  00233E  C0B0  F10F         	movff	?_pow+2,_rampe$4019+2
  2211  002342  C0B1  F110         	movff	?_pow+3,_rampe$4019+3
  2212                           
  2213                           ;motore.c: 223: correzione = pow(2, (errore / 200)) - 1;
  2214  002346  0E00               	movlw	0
  2215  002348  0100               	movlb	0	; () banked
  2216  00234A  6F82               	movwf	___fladd@f2& (0+255),b
  2217  00234C  0E00               	movlw	0
  2218  00234E  6F83               	movwf	(___fladd@f2+1)& (0+255),b
  2219  002350  0E80               	movlw	128
  2220  002352  6F84               	movwf	(___fladd@f2+2)& (0+255),b
  2221  002354  0EBF               	movlw	191
  2222  002356  6F85               	movwf	(___fladd@f2+3)& (0+255),b
  2223  002358  C10D  F07E         	movff	_rampe$4019,___fladd@f1
  2224  00235C  C10E  F07F         	movff	_rampe$4019+1,___fladd@f1+1
  2225  002360  C10F  F080         	movff	_rampe$4019+2,___fladd@f1+2
  2226  002364  C110  F081         	movff	_rampe$4019+3,___fladd@f1+3
  2227  002368  EC41  F01A         	call	___fladd	;wreg free
  2228  00236C  C07E  F08A         	movff	?___fladd,___fltol@f1
  2229  002370  C07F  F08B         	movff	?___fladd+1,___fltol@f1+1
  2230  002374  C080  F08C         	movff	?___fladd+2,___fltol@f1+2
  2231  002378  C081  F08D         	movff	?___fladd+3,___fltol@f1+3
  2232  00237C  EC86  F022         	call	___fltol	;wreg free
  2233  002380  D051               	goto	L3
  2234  002382                     l6895:
  2235  002382  0EE8               	movlw	232
  2236  002384  0100               	movlb	0	; () banked
  2237  002386  5DDD               	subwf	_errore& (0+255),w,b
  2238  002388  0E03               	movlw	3
  2239  00238A  0100               	movlb	0	; () banked
  2240  00238C  59DE               	subwfb	(_errore+1)& (0+255),w,b
  2241  00238E  B0D8               	btfsc	status,0,c
  2242  002390  D052               	goto	l6901
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;motore.c: 227: correzione = pow(2, (errore / 200)) - 1;
  2246  002392  0E00               	movlw	0
  2247  002394  0100               	movlb	0	; () banked
  2248  002396  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2249  002398  0EC8               	movlw	200
  2250  00239A  6F62               	movwf	___lwdiv@divisor& (0+255),b
  2251  00239C  C0DD  F060         	movff	_errore,___lwdiv@dividend
  2252  0023A0  C0DE  F061         	movff	_errore+1,___lwdiv@dividend+1
  2253  0023A4  EC85  F025         	call	___lwdiv	;wreg free
  2254  0023A8  C060  F06A         	movff	?___lwdiv,___lwtofl@c
  2255  0023AC  C061  F06B         	movff	?___lwdiv+1,___lwtofl@c+1
  2256  0023B0  EC57  F027         	call	___lwtofl	;wreg free
  2257  0023B4  C06A  F0B2         	movff	?___lwtofl,pow@y
  2258  0023B8  C06B  F0B3         	movff	?___lwtofl+1,pow@y+1
  2259  0023BC  C06C  F0B4         	movff	?___lwtofl+2,pow@y+2
  2260  0023C0  C06D  F0B5         	movff	?___lwtofl+3,pow@y+3
  2261  0023C4  0E00               	movlw	0
  2262  0023C6  0100               	movlb	0	; () banked
  2263  0023C8  6FAE               	movwf	pow@x& (0+255),b
  2264  0023CA  0E00               	movlw	0
  2265  0023CC  6FAF               	movwf	(pow@x+1)& (0+255),b
  2266  0023CE  0E00               	movlw	0
  2267  0023D0  6FB0               	movwf	(pow@x+2)& (0+255),b
  2268  0023D2  0E40               	movlw	64
  2269  0023D4  6FB1               	movwf	(pow@x+3)& (0+255),b
  2270  0023D6  EC77  F01B         	call	_pow	;wreg free
  2271  0023DA  C0AE  F10D         	movff	?_pow,_rampe$4019
  2272  0023DE  C0AF  F10E         	movff	?_pow+1,_rampe$4019+1
  2273  0023E2  C0B0  F10F         	movff	?_pow+2,_rampe$4019+2
  2274  0023E6  C0B1  F110         	movff	?_pow+3,_rampe$4019+3
  2275                           
  2276                           ;motore.c: 227: correzione = pow(2, (errore / 200)) - 1;
  2277  0023EA  0E00               	movlw	0
  2278  0023EC  0100               	movlb	0	; () banked
  2279  0023EE  6F82               	movwf	___fladd@f2& (0+255),b
  2280  0023F0  0E00               	movlw	0
  2281  0023F2  6F83               	movwf	(___fladd@f2+1)& (0+255),b
  2282  0023F4  0E80               	movlw	128
  2283  0023F6  6F84               	movwf	(___fladd@f2+2)& (0+255),b
  2284  0023F8  0EBF               	movlw	191
  2285  0023FA  6F85               	movwf	(___fladd@f2+3)& (0+255),b
  2286  0023FC  C10D  F07E         	movff	_rampe$4019,___fladd@f1
  2287  002400  C10E  F07F         	movff	_rampe$4019+1,___fladd@f1+1
  2288  002404  C10F  F080         	movff	_rampe$4019+2,___fladd@f1+2
  2289  002408  C110  F081         	movff	_rampe$4019+3,___fladd@f1+3
  2290  00240C  EC41  F01A         	call	___fladd	;wreg free
  2291  002410  C07E  F08A         	movff	?___fladd,___fltol@f1
  2292  002414  C07F  F08B         	movff	?___fladd+1,___fltol@f1+1
  2293  002418  C080  F08C         	movff	?___fladd+2,___fltol@f1+2
  2294  00241C  C081  F08D         	movff	?___fladd+3,___fltol@f1+3
  2295  002420  EC86  F022         	call	___fltol	;wreg free
  2296  002424                     L3:
  2297  002424  C08A  F0BF         	movff	?___fltol,_correzione
  2298  002428  C08B  F0C0         	movff	?___fltol+1,_correzione+1
  2299  00242C  C08C  F0C1         	movff	?___fltol+2,_correzione+2
  2300  002430  C08D  F0C2         	movff	?___fltol+3,_correzione+3
  2301  002434  D000               	goto	l6901
  2302  002436                     l6901:
  2303                           
  2304                           ;motore.c: 228: }
  2305                           ;motore.c: 229: if (currentSpeed - requestSpeed > 0) {
  2306  002436  C02B  F0B6         	movff	_requestSpeed,??_rampe	;volatile
  2307  00243A  C02C  F0B7         	movff	_requestSpeed+1,??_rampe+1	;volatile
  2308  00243E  C02D  F0B8         	movff	_requestSpeed+2,??_rampe+2	;volatile
  2309  002442  C02E  F0B9         	movff	_requestSpeed+3,??_rampe+3	;volatile
  2310  002446  0100               	movlb	0	; () banked
  2311  002448  1FB6               	comf	??_rampe& (0+255),f,b
  2312  00244A  1FB7               	comf	(??_rampe+1)& (0+255),f,b
  2313  00244C  1FB8               	comf	(??_rampe+2)& (0+255),f,b
  2314  00244E  1FB9               	comf	(??_rampe+3)& (0+255),f,b
  2315  002450  2BB6               	incf	??_rampe& (0+255),f,b
  2316  002452  0E00               	movlw	0
  2317  002454  23B7               	addwfc	(??_rampe+1)& (0+255),f,b
  2318  002456  23B8               	addwfc	(??_rampe+2)& (0+255),f,b
  2319  002458  23B9               	addwfc	(??_rampe+3)& (0+255),f,b
  2320  00245A  0100               	movlb	0	; () banked
  2321  00245C  51C3               	movf	_currentSpeed& (0+255),w,b	;volatile
  2322  00245E  0100               	movlb	0	; () banked
  2323  002460  25B6               	addwf	??_rampe& (0+255),w,b
  2324  002462  0100               	movlb	0	; () banked
  2325  002464  6FBA               	movwf	(??_rampe+4)& (0+255),b
  2326  002466  0100               	movlb	0	; () banked
  2327  002468  51C4               	movf	(_currentSpeed+1)& (0+255),w,b	;volatile
  2328  00246A  0100               	movlb	0	; () banked
  2329  00246C  21B7               	addwfc	(??_rampe+1)& (0+255),w,b
  2330  00246E  0100               	movlb	0	; () banked
  2331  002470  6FBB               	movwf	(??_rampe+5)& (0+255),b
  2332  002472  0100               	movlb	0	; () banked
  2333  002474  51C5               	movf	(_currentSpeed+2)& (0+255),w,b	;volatile
  2334  002476  0100               	movlb	0	; () banked
  2335  002478  21B8               	addwfc	(??_rampe+2)& (0+255),w,b
  2336  00247A  0100               	movlb	0	; () banked
  2337  00247C  6FBC               	movwf	(??_rampe+6)& (0+255),b
  2338  00247E  0100               	movlb	0	; () banked
  2339  002480  51C6               	movf	(_currentSpeed+3)& (0+255),w,b	;volatile
  2340  002482  0100               	movlb	0	; () banked
  2341  002484  21B9               	addwfc	(??_rampe+3)& (0+255),w,b
  2342  002486  0100               	movlb	0	; () banked
  2343  002488  6FBD               	movwf	(??_rampe+7)& (0+255),b
  2344  00248A  0100               	movlb	0	; () banked
  2345  00248C  BFBD               	btfsc	(??_rampe+7)& (0+255),7,b
  2346  00248E  D059               	goto	l6909
  2347  002490  0100               	movlb	0	; () banked
  2348  002492  51BD               	movf	(??_rampe+7)& (0+255),w,b
  2349  002494  0100               	movlb	0	; () banked
  2350  002496  11BC               	iorwf	(??_rampe+6)& (0+255),w,b
  2351  002498  0100               	movlb	0	; () banked
  2352  00249A  11BB               	iorwf	(??_rampe+5)& (0+255),w,b
  2353  00249C  E104               	bnz	u9120
  2354  00249E  0100               	movlb	0	; () banked
  2355  0024A0  05BA               	decf	(??_rampe+4)& (0+255),w,b
  2356  0024A2  A0D8               	btfss	status,0,c
  2357  0024A4  D04E               	goto	l6909
  2358  0024A6                     u9120:
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;motore.c: 230: duty_set = previousPwm - (correzione / 10);
  2362  0024A6  C0BF  F060         	movff	_correzione,___aldiv@dividend
  2363  0024AA  C0C0  F061         	movff	_correzione+1,___aldiv@dividend+1
  2364  0024AE  C0C1  F062         	movff	_correzione+2,___aldiv@dividend+2
  2365  0024B2  C0C2  F063         	movff	_correzione+3,___aldiv@dividend+3
  2366  0024B6  0E0A               	movlw	10
  2367  0024B8  0100               	movlb	0	; () banked
  2368  0024BA  6F64               	movwf	___aldiv@divisor& (0+255),b
  2369  0024BC  0E00               	movlw	0
  2370  0024BE  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
  2371  0024C0  0E00               	movlw	0
  2372  0024C2  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
  2373  0024C4  0E00               	movlw	0
  2374  0024C6  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
  2375  0024C8  EC5F  F021         	call	___aldiv	;wreg free
  2376  0024CC  0100               	movlb	0	; () banked
  2377  0024CE  1F60               	comf	?___aldiv& (0+255),f,b
  2378  0024D0  0100               	movlb	0	; () banked
  2379  0024D2  1F61               	comf	(?___aldiv+1)& (0+255),f,b
  2380  0024D4  0100               	movlb	0	; () banked
  2381  0024D6  1F62               	comf	(?___aldiv+2)& (0+255),f,b
  2382  0024D8  0100               	movlb	0	; () banked
  2383  0024DA  1F63               	comf	(?___aldiv+3)& (0+255),f,b
  2384  0024DC  0100               	movlb	0	; () banked
  2385  0024DE  2B60               	incf	?___aldiv& (0+255),f,b
  2386  0024E0  0E00               	movlw	0
  2387  0024E2  0100               	movlb	0	; () banked
  2388  0024E4  2361               	addwfc	(?___aldiv+1)& (0+255),f,b
  2389  0024E6  0100               	movlb	0	; () banked
  2390  0024E8  2362               	addwfc	(?___aldiv+2)& (0+255),f,b
  2391  0024EA  0100               	movlb	0	; () banked
  2392  0024EC  2363               	addwfc	(?___aldiv+3)& (0+255),f,b
  2393  0024EE  0100               	movlb	0	; () banked
  2394  0024F0  51E1               	movf	_previousPwm& (0+255),w,b
  2395  0024F2  0100               	movlb	0	; () banked
  2396  0024F4  2560               	addwf	?___aldiv& (0+255),w,b
  2397  0024F6  0100               	movlb	0	; () banked
  2398  0024F8  6FC7               	movwf	_duty_set& (0+255),b
  2399  0024FA  0100               	movlb	0	; () banked
  2400  0024FC  51E2               	movf	(_previousPwm+1)& (0+255),w,b
  2401  0024FE  0100               	movlb	0	; () banked
  2402  002500  2161               	addwfc	(?___aldiv+1)& (0+255),w,b
  2403  002502  0100               	movlb	0	; () banked
  2404  002504  6FC8               	movwf	(_duty_set+1)& (0+255),b
  2405  002506  0E00               	movlw	0
  2406  002508  0100               	movlb	0	; () banked
  2407  00250A  2162               	addwfc	(?___aldiv+2)& (0+255),w,b
  2408  00250C  0100               	movlb	0	; () banked
  2409  00250E  6FC9               	movwf	(_duty_set+2)& (0+255),b
  2410  002510  0E00               	movlw	0
  2411  002512  0100               	movlb	0	; () banked
  2412  002514  2163               	addwfc	(?___aldiv+3)& (0+255),w,b
  2413  002516  0100               	movlb	0	; () banked
  2414  002518  6FCA               	movwf	(_duty_set+3)& (0+255),b
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;motore.c: 231: if (duty_set < 1) {
  2418  00251A  0100               	movlb	0	; () banked
  2419  00251C  BFCA               	btfsc	(_duty_set+3)& (0+255),7,b
  2420  00251E  D00B               	goto	l6907
  2421  002520  0100               	movlb	0	; () banked
  2422  002522  51CA               	movf	(_duty_set+3)& (0+255),w,b
  2423  002524  0100               	movlb	0	; () banked
  2424  002526  11C9               	iorwf	(_duty_set+2)& (0+255),w,b
  2425  002528  0100               	movlb	0	; () banked
  2426  00252A  11C8               	iorwf	(_duty_set+1)& (0+255),w,b
  2427  00252C  E139               	bnz	l6913
  2428  00252E  0100               	movlb	0	; () banked
  2429  002530  05C7               	decf	_duty_set& (0+255),w,b
  2430  002532  B0D8               	btfsc	status,0,c
  2431  002534  D035               	goto	l6913
  2432  002536                     l6907:
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;motore.c: 232: duty_set = 0;
  2436  002536  0E00               	movlw	0
  2437  002538  0100               	movlb	0	; () banked
  2438  00253A  6FC7               	movwf	_duty_set& (0+255),b
  2439  00253C  0E00               	movlw	0
  2440  00253E  D02A               	goto	L4
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;motore.c: 233: }
  2444                           ;motore.c: 234: } else {
  2445  002540  D02F               	goto	l6913
  2446  002542                     l6909:
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;motore.c: 235: duty_set = previousPwm + correzione;
  2450  002542  0100               	movlb	0	; () banked
  2451  002544  51E1               	movf	_previousPwm& (0+255),w,b
  2452  002546  0100               	movlb	0	; () banked
  2453  002548  25BF               	addwf	_correzione& (0+255),w,b
  2454  00254A  0100               	movlb	0	; () banked
  2455  00254C  6FC7               	movwf	_duty_set& (0+255),b
  2456  00254E  0100               	movlb	0	; () banked
  2457  002550  51E2               	movf	(_previousPwm+1)& (0+255),w,b
  2458  002552  0100               	movlb	0	; () banked
  2459  002554  21C0               	addwfc	(_correzione+1)& (0+255),w,b
  2460  002556  0100               	movlb	0	; () banked
  2461  002558  6FC8               	movwf	(_duty_set+1)& (0+255),b
  2462  00255A  0E00               	movlw	0
  2463  00255C  0100               	movlb	0	; () banked
  2464  00255E  21C1               	addwfc	(_correzione+2)& (0+255),w,b
  2465  002560  0100               	movlb	0	; () banked
  2466  002562  6FC9               	movwf	(_duty_set+2)& (0+255),b
  2467  002564  0E00               	movlw	0
  2468  002566  0100               	movlb	0	; () banked
  2469  002568  21C2               	addwfc	(_correzione+3)& (0+255),w,b
  2470  00256A  0100               	movlb	0	; () banked
  2471  00256C  6FCA               	movwf	(_duty_set+3)& (0+255),b
  2472                           
  2473                           ;motore.c: 236: if (duty_set > 1022) {
  2474  00256E  0100               	movlb	0	; () banked
  2475  002570  BFCA               	btfsc	(_duty_set+3)& (0+255),7,b
  2476  002572  D016               	goto	l6913
  2477  002574  0100               	movlb	0	; () banked
  2478  002576  51CA               	movf	(_duty_set+3)& (0+255),w,b
  2479  002578  0100               	movlb	0	; () banked
  2480  00257A  11C9               	iorwf	(_duty_set+2)& (0+255),w,b
  2481  00257C  E107               	bnz	u9140
  2482  00257E  0100               	movlb	0	; () banked
  2483  002580  29C7               	incf	_duty_set& (0+255),w,b
  2484  002582  0E03               	movlw	3
  2485  002584  0100               	movlb	0	; () banked
  2486  002586  59C8               	subwfb	(_duty_set+1)& (0+255),w,b
  2487  002588  A0D8               	btfss	status,0,c
  2488  00258A  D00A               	goto	l6913
  2489  00258C                     u9140:
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;motore.c: 237: duty_set = 1023;
  2493  00258C  0EFF               	movlw	255
  2494  00258E  0100               	movlb	0	; () banked
  2495  002590  6FC7               	movwf	_duty_set& (0+255),b
  2496  002592  0E03               	movlw	3
  2497  002594                     L4:
  2498  002594  6FC8               	movwf	(_duty_set+1)& (0+255),b
  2499  002596  0E00               	movlw	0
  2500  002598  6FC9               	movwf	(_duty_set+2)& (0+255),b
  2501  00259A  0E00               	movlw	0
  2502  00259C  6FCA               	movwf	(_duty_set+3)& (0+255),b
  2503                           
  2504                           ; BSR set to: 0
  2505                           
  2506                           ; BSR set to: 0
  2507  00259E  D000               	goto	l6913
  2508  0025A0                     l6913:
  2509                           
  2510                           ;motore.c: 238: }
  2511                           ;motore.c: 239: }
  2512                           ;motore.c: 240: }
  2513                           ;motore.c: 241: previousPwm = duty_set;
  2514  0025A0  C0C7  F0E1         	movff	_duty_set,_previousPwm
  2515  0025A4  C0C8  F0E2         	movff	_duty_set+1,_previousPwm+1
  2516                           
  2517                           ;motore.c: 242: previousTimeCounter1 = timeCounter;
  2518  0025A8  C0D7  F0CF         	movff	_timeCounter,_previousTimeCounter1	;volatile
  2519  0025AC  C0D8  F0D0         	movff	_timeCounter+1,_previousTimeCounter1+1	;volatile
  2520  0025B0  C0D9  F0D1         	movff	_timeCounter+2,_previousTimeCounter1+2	;volatile
  2521  0025B4  C0DA  F0D2         	movff	_timeCounter+3,_previousTimeCounter1+3	;volatile
  2522                           
  2523                           ;motore.c: 243: SetDCEPWM1(duty_set);
  2524  0025B8  C0C7  F060         	movff	_duty_set,SetDCEPWM1@dutycycle
  2525  0025BC  C0C8  F061         	movff	_duty_set+1,SetDCEPWM1@dutycycle+1
  2526  0025C0  ECC7  F026         	call	_SetDCEPWM1	;wreg free
  2527                           
  2528                           ;motore.c: 244: } else {
  2529  0025C4  0012               	return	
  2530  0025C6                     l6919:
  2531                           
  2532                           ;motore.c: 245: SetDCEPWM1(0);
  2533  0025C6  0E00               	movlw	0
  2534  0025C8  0100               	movlb	0	; () banked
  2535  0025CA  6F61               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  2536  0025CC  0E00               	movlw	0
  2537  0025CE  6F60               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  2538  0025D0  ECC7  F026         	call	_SetDCEPWM1	;wreg free
  2539  0025D4  0012               	return	
  2540  0025D6  0012               	return		;funcret
  2541  0025D8                     __end_of_rampe:
  2542                           	opt stack 0
  2543                           tblptru	equ	0xFF8
  2544                           tblptrh	equ	0xFF7
  2545                           tblptrl	equ	0xFF6
  2546                           tablat	equ	0xFF5
  2547                           postinc0	equ	0xFEE
  2548                           wreg	equ	0xFE8
  2549                           status	equ	0xFD8
  2550                           
  2551 ;; *************** function _pow *****************
  2552 ;; Defined at:
  2553 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\pow.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  x               4   78[BANK0 ] int 
  2556 ;;  y               4   82[BANK0 ] int 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;  yi              4    9[BANK1 ] unsigned long 
  2559 ;;  sign            1    8[BANK1 ] unsigned char 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  4   78[BANK0 ] unsigned char 
  2562 ;; Registers used:
  2563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2569 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2570 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  2571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2572 ;;      Totals:         0       8      13       0       0       0       0       0       0       0       0       0       
      +0       0
  2573 ;;Total ram usage:       21 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    6
  2576 ;; This function calls:
  2577 ;;		___flge
  2578 ;;		___flmul
  2579 ;;		___flneg
  2580 ;;		___fltol
  2581 ;;		___lltofl
  2582 ;;		_exp
  2583 ;;		_log
  2584 ;; This function is called by:
  2585 ;;		_rampe
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text3
  2590  0036EE                     __ptext3:
  2591                           	opt stack 0
  2592  0036EE                     _pow:
  2593                           	opt stack 23
  2594                           
  2595                           ;incstack = 0
  2596  0036EE  0E00               	movlw	0
  2597  0036F0  0101               	movlb	1	; () banked
  2598  0036F2  6F08               	movwf	pow@sign& (0+255),b
  2599                           
  2600                           ; BSR set to: 1
  2601  0036F4  0100               	movlb	0	; () banked
  2602  0036F6  51AE               	movf	pow@x& (0+255),w,b
  2603  0036F8  0100               	movlb	0	; () banked
  2604  0036FA  11AF               	iorwf	(pow@x+1)& (0+255),w,b
  2605  0036FC  0100               	movlb	0	; () banked
  2606  0036FE  11B0               	iorwf	(pow@x+2)& (0+255),w,b
  2607  003700  0100               	movlb	0	; () banked
  2608  003702  11B1               	iorwf	(pow@x+3)& (0+255),w,b
  2609  003704  A4D8               	btfss	status,2,c
  2610  003706  D025               	goto	l6557
  2611                           
  2612                           ; BSR set to: 0
  2613  003708  0E00               	movlw	0
  2614  00370A  0100               	movlb	0	; () banked
  2615  00370C  6F60               	movwf	___flge@ff1& (0+255),b
  2616  00370E  0E00               	movlw	0
  2617  003710  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  2618  003712  0E00               	movlw	0
  2619  003714  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  2620  003716  0E00               	movlw	0
  2621  003718  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  2622  00371A  C0B2  F064         	movff	pow@y,___flge@ff2
  2623  00371E  C0B3  F065         	movff	pow@y+1,___flge@ff2+1
  2624  003722  C0B4  F066         	movff	pow@y+2,___flge@ff2+2
  2625  003726  C0B5  F067         	movff	pow@y+3,___flge@ff2+3
  2626  00372A  ECA0  F023         	call	___flge	;wreg free
  2627  00372E  0100               	movlb	0	; () banked
  2628  003730  A0D8               	btfss	status,0,c
  2629  003732  D005               	goto	l1378
  2630                           
  2631                           ; BSR set to: 0
  2632  003734  0E00               	movlw	0
  2633  003736  0100               	movlb	0	; () banked
  2634  003738  6FDC               	movwf	(_errno+1)& (0+255),b
  2635  00373A  0E21               	movlw	33
  2636  00373C  6FDB               	movwf	_errno& (0+255),b
  2637  00373E                     l1378:
  2638                           
  2639                           ; BSR set to: 0
  2640  00373E  0E00               	movlw	0
  2641  003740  0100               	movlb	0	; () banked
  2642  003742  6FAE               	movwf	?_pow& (0+255),b
  2643  003744  0E00               	movlw	0
  2644  003746  6FAF               	movwf	(?_pow+1)& (0+255),b
  2645  003748  0E00               	movlw	0
  2646  00374A  6FB0               	movwf	(?_pow+2)& (0+255),b
  2647  00374C  0E00               	movlw	0
  2648  00374E  6FB1               	movwf	(?_pow+3)& (0+255),b
  2649                           
  2650                           ; BSR set to: 0
  2651  003750  0012               	return	
  2652  003752                     l6557:
  2653                           
  2654                           ; BSR set to: 0
  2655  003752  0100               	movlb	0	; () banked
  2656  003754  51B2               	movf	pow@y& (0+255),w,b
  2657  003756  0100               	movlb	0	; () banked
  2658  003758  11B3               	iorwf	(pow@y+1)& (0+255),w,b
  2659  00375A  0100               	movlb	0	; () banked
  2660  00375C  11B4               	iorwf	(pow@y+2)& (0+255),w,b
  2661  00375E  0100               	movlb	0	; () banked
  2662  003760  11B5               	iorwf	(pow@y+3)& (0+255),w,b
  2663  003762  A4D8               	btfss	status,2,c
  2664  003764  D00A               	goto	l6563
  2665                           
  2666                           ; BSR set to: 0
  2667  003766  0E00               	movlw	0
  2668  003768  0100               	movlb	0	; () banked
  2669  00376A  6FAE               	movwf	?_pow& (0+255),b
  2670  00376C  0E00               	movlw	0
  2671  00376E  6FAF               	movwf	(?_pow+1)& (0+255),b
  2672  003770  0E80               	movlw	128
  2673  003772  6FB0               	movwf	(?_pow+2)& (0+255),b
  2674  003774  0E3F               	movlw	63
  2675  003776  6FB1               	movwf	(?_pow+3)& (0+255),b
  2676                           
  2677                           ; BSR set to: 0
  2678  003778  0012               	return	
  2679  00377A                     l6563:
  2680                           
  2681                           ; BSR set to: 0
  2682  00377A  0100               	movlb	0	; () banked
  2683  00377C  AFB1               	btfss	(pow@x+3)& (0+255),7,b
  2684  00377E  D058               	goto	l6575
  2685                           
  2686                           ; BSR set to: 0
  2687  003780  C0B2  F08A         	movff	pow@y,___fltol@f1
  2688  003784  C0B3  F08B         	movff	pow@y+1,___fltol@f1+1
  2689  003788  C0B4  F08C         	movff	pow@y+2,___fltol@f1+2
  2690  00378C  C0B5  F08D         	movff	pow@y+3,___fltol@f1+3
  2691  003790  EC86  F022         	call	___fltol	;wreg free
  2692  003794  C08A  F109         	movff	?___fltol,pow@yi
  2693  003798  C08B  F10A         	movff	?___fltol+1,pow@yi+1
  2694  00379C  C08C  F10B         	movff	?___fltol+2,pow@yi+2
  2695  0037A0  C08D  F10C         	movff	?___fltol+3,pow@yi+3
  2696  0037A4  C109  F06A         	movff	pow@yi,___lltofl@c
  2697  0037A8  C10A  F06B         	movff	pow@yi+1,___lltofl@c+1
  2698  0037AC  C10B  F06C         	movff	pow@yi+2,___lltofl@c+2
  2699  0037B0  C10C  F06D         	movff	pow@yi+3,___lltofl@c+3
  2700  0037B4  EC23  F027         	call	___lltofl	;wreg free
  2701  0037B8  0100               	movlb	0	; () banked
  2702  0037BA  51B2               	movf	pow@y& (0+255),w,b
  2703  0037BC  0100               	movlb	0	; () banked
  2704  0037BE  196A               	xorwf	?___lltofl& (0+255),w,b
  2705  0037C0  E110               	bnz	u8750
  2706  0037C2  0100               	movlb	0	; () banked
  2707  0037C4  51B3               	movf	(pow@y+1)& (0+255),w,b
  2708  0037C6  0100               	movlb	0	; () banked
  2709  0037C8  196B               	xorwf	(?___lltofl+1)& (0+255),w,b
  2710  0037CA  E10B               	bnz	u8750
  2711  0037CC  0100               	movlb	0	; () banked
  2712  0037CE  51B4               	movf	(pow@y+2)& (0+255),w,b
  2713  0037D0  0100               	movlb	0	; () banked
  2714  0037D2  196C               	xorwf	(?___lltofl+2)& (0+255),w,b
  2715  0037D4  E106               	bnz	u8750
  2716  0037D6  0100               	movlb	0	; () banked
  2717  0037D8  51B5               	movf	(pow@y+3)& (0+255),w,b
  2718  0037DA  0100               	movlb	0	; () banked
  2719  0037DC  196D               	xorwf	(?___lltofl+3)& (0+255),w,b
  2720  0037DE  B4D8               	btfsc	status,2,c
  2721  0037E0  D00F               	goto	l6571
  2722  0037E2                     u8750:
  2723                           
  2724                           ; BSR set to: 0
  2725  0037E2  0E00               	movlw	0
  2726  0037E4  0100               	movlb	0	; () banked
  2727  0037E6  6FDC               	movwf	(_errno+1)& (0+255),b
  2728  0037E8  0E21               	movlw	33
  2729  0037EA  6FDB               	movwf	_errno& (0+255),b
  2730  0037EC  0E00               	movlw	0
  2731  0037EE  0100               	movlb	0	; () banked
  2732  0037F0  6FAE               	movwf	?_pow& (0+255),b
  2733  0037F2  0E00               	movlw	0
  2734  0037F4  6FAF               	movwf	(?_pow+1)& (0+255),b
  2735  0037F6  0E00               	movlw	0
  2736  0037F8  6FB0               	movwf	(?_pow+2)& (0+255),b
  2737  0037FA  0E00               	movlw	0
  2738  0037FC  6FB1               	movwf	(?_pow+3)& (0+255),b
  2739                           
  2740                           ; BSR set to: 0
  2741  0037FE  0012               	return	
  2742  003800                     l6571:
  2743                           
  2744                           ; BSR set to: 0
  2745  003800  0101               	movlb	1	; () banked
  2746  003802  5109               	movf	pow@yi& (0+255),w,b
  2747  003804  0B01               	andlw	1
  2748  003806  0101               	movlb	1	; () banked
  2749  003808  6F08               	movwf	pow@sign& (0+255),b
  2750                           
  2751                           ; BSR set to: 1
  2752  00380A  C0AE  F060         	movff	pow@x,___flneg@f1
  2753  00380E  C0AF  F061         	movff	pow@x+1,___flneg@f1+1
  2754  003812  C0B0  F062         	movff	pow@x+2,___flneg@f1+2
  2755  003816  C0B1  F063         	movff	pow@x+3,___flneg@f1+3
  2756  00381A  ECE9  F026         	call	___flneg	;wreg free
  2757  00381E  C060  F0AE         	movff	?___flneg,pow@x
  2758  003822  C061  F0AF         	movff	?___flneg+1,pow@x+1
  2759  003826  C062  F0B0         	movff	?___flneg+2,pow@x+2
  2760  00382A  C063  F0B1         	movff	?___flneg+3,pow@x+3
  2761  00382E  D000               	goto	l6575
  2762  003830                     l6575:
  2763  003830  C0AE  F09A         	movff	pow@x,log@x
  2764  003834  C0AF  F09B         	movff	pow@x+1,log@x+1
  2765  003838  C0B0  F09C         	movff	pow@x+2,log@x+2
  2766  00383C  C0B1  F09D         	movff	pow@x+3,log@x+3
  2767  003840  EC1E  F01E         	call	_log	;wreg free
  2768  003844  C09A  F100         	movff	?_log,_pow$4020
  2769  003848  C09B  F101         	movff	?_log+1,_pow$4020+1
  2770  00384C  C09C  F102         	movff	?_log+2,_pow$4020+2
  2771  003850  C09D  F103         	movff	?_log+3,_pow$4020+3
  2772  003854  C100  F06F         	movff	_pow$4020,___flmul@f1
  2773  003858  C101  F070         	movff	_pow$4020+1,___flmul@f1+1
  2774  00385C  C102  F071         	movff	_pow$4020+2,___flmul@f1+2
  2775  003860  C103  F072         	movff	_pow$4020+3,___flmul@f1+3
  2776  003864  C0B2  F073         	movff	pow@y,___flmul@f2
  2777  003868  C0B3  F074         	movff	pow@y+1,___flmul@f2+1
  2778  00386C  C0B4  F075         	movff	pow@y+2,___flmul@f2+2
  2779  003870  C0B5  F076         	movff	pow@y+3,___flmul@f2+3
  2780  003874  ECDD  F01E         	call	___flmul	;wreg free
  2781  003878  C06F  F104         	movff	?___flmul,_pow$4021
  2782  00387C  C070  F105         	movff	?___flmul+1,_pow$4021+1
  2783  003880  C071  F106         	movff	?___flmul+2,_pow$4021+2
  2784  003884  C072  F107         	movff	?___flmul+3,_pow$4021+3
  2785  003888  C104  F0A3         	movff	_pow$4021,exp@x
  2786  00388C  C105  F0A4         	movff	_pow$4021+1,exp@x+1
  2787  003890  C106  F0A5         	movff	_pow$4021+2,exp@x+2
  2788  003894  C107  F0A6         	movff	_pow$4021+3,exp@x+3
  2789  003898  ECFB  F018         	call	_exp	;wreg free
  2790  00389C  C0A3  F0AE         	movff	?_exp,pow@x
  2791  0038A0  C0A4  F0AF         	movff	?_exp+1,pow@x+1
  2792  0038A4  C0A5  F0B0         	movff	?_exp+2,pow@x+2
  2793  0038A8  C0A6  F0B1         	movff	?_exp+3,pow@x+3
  2794  0038AC  0101               	movlb	1	; () banked
  2795  0038AE  5108               	movf	pow@sign& (0+255),w,b
  2796  0038B0  0101               	movlb	1	; () banked
  2797  0038B2  B4D8               	btfsc	status,2,c
  2798  0038B4  D013               	goto	l1383
  2799                           
  2800                           ; BSR set to: 1
  2801  0038B6  C0AE  F060         	movff	pow@x,___flneg@f1
  2802  0038BA  C0AF  F061         	movff	pow@x+1,___flneg@f1+1
  2803  0038BE  C0B0  F062         	movff	pow@x+2,___flneg@f1+2
  2804  0038C2  C0B1  F063         	movff	pow@x+3,___flneg@f1+3
  2805  0038C6  ECE9  F026         	call	___flneg	;wreg free
  2806  0038CA  C060  F0AE         	movff	?___flneg,?_pow
  2807  0038CE  C061  F0AF         	movff	?___flneg+1,?_pow+1
  2808  0038D2  C062  F0B0         	movff	?___flneg+2,?_pow+2
  2809  0038D6  C063  F0B1         	movff	?___flneg+3,?_pow+3
  2810  0038DA  0012               	return	
  2811  0038DC                     l1383:
  2812                           
  2813                           ; BSR set to: 1
  2814  0038DC  C0AE  F0AE         	movff	pow@x,?_pow
  2815  0038E0  C0AF  F0AF         	movff	pow@x+1,?_pow+1
  2816  0038E4  C0B0  F0B0         	movff	pow@x+2,?_pow+2
  2817  0038E8  C0B1  F0B1         	movff	pow@x+3,?_pow+3
  2818  0038EC  0012               	return		;funcret
  2819  0038EE                     __end_of_pow:
  2820                           	opt stack 0
  2821                           tblptru	equ	0xFF8
  2822                           tblptrh	equ	0xFF7
  2823                           tblptrl	equ	0xFF6
  2824                           tablat	equ	0xFF5
  2825                           postinc0	equ	0xFEE
  2826                           wreg	equ	0xFE8
  2827                           status	equ	0xFD8
  2828                           
  2829 ;; *************** function _log *****************
  2830 ;; Defined at:
  2831 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\log.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  x               4   58[BANK0 ] unsigned char 
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;  exponent        2   62[BANK0 ] int 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  4   58[BANK0 ] int 
  2838 ;; Registers used:
  2839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2845 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2848 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2849 ;;Total ram usage:        6 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    5
  2852 ;; This function calls:
  2853 ;;		___awtofl
  2854 ;;		___fladd
  2855 ;;		___flmul
  2856 ;;		_eval_poly
  2857 ;;		_frexp
  2858 ;; This function is called by:
  2859 ;;		_pow
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text4
  2864  003C3C                     __ptext4:
  2865                           	opt stack 0
  2866  003C3C                     _log:
  2867                           	opt stack 23
  2868                           
  2869                           ;incstack = 0
  2870  003C3C  0100               	movlb	0	; () banked
  2871  003C3E  AF9D               	btfss	(log@x+3)& (0+255),7,b
  2872  003C40  D00F               	goto	l6167
  2873                           
  2874                           ; BSR set to: 0
  2875  003C42  0E00               	movlw	0
  2876  003C44  0100               	movlb	0	; () banked
  2877  003C46  6FDC               	movwf	(_errno+1)& (0+255),b
  2878  003C48  0E21               	movlw	33
  2879  003C4A  6FDB               	movwf	_errno& (0+255),b
  2880  003C4C  0E00               	movlw	0
  2881  003C4E  0100               	movlb	0	; () banked
  2882  003C50  6F9A               	movwf	?_log& (0+255),b
  2883  003C52  0E00               	movlw	0
  2884  003C54  6F9B               	movwf	(?_log+1)& (0+255),b
  2885  003C56  0E00               	movlw	0
  2886  003C58  6F9C               	movwf	(?_log+2)& (0+255),b
  2887  003C5A  0E00               	movlw	0
  2888  003C5C  6F9D               	movwf	(?_log+3)& (0+255),b
  2889                           
  2890                           ; BSR set to: 0
  2891  003C5E  0012               	return	
  2892  003C60                     l6167:
  2893                           
  2894                           ; BSR set to: 0
  2895  003C60  0100               	movlb	0	; () banked
  2896  003C62  519A               	movf	log@x& (0+255),w,b
  2897  003C64  0100               	movlb	0	; () banked
  2898  003C66  119B               	iorwf	(log@x+1)& (0+255),w,b
  2899  003C68  0100               	movlb	0	; () banked
  2900  003C6A  119C               	iorwf	(log@x+2)& (0+255),w,b
  2901  003C6C  0100               	movlb	0	; () banked
  2902  003C6E  119D               	iorwf	(log@x+3)& (0+255),w,b
  2903  003C70  A4D8               	btfss	status,2,c
  2904  003C72  D00F               	goto	l6173
  2905                           
  2906                           ; BSR set to: 0
  2907  003C74  0E00               	movlw	0
  2908  003C76  0100               	movlb	0	; () banked
  2909  003C78  6FDC               	movwf	(_errno+1)& (0+255),b
  2910  003C7A  0E22               	movlw	34
  2911  003C7C  6FDB               	movwf	_errno& (0+255),b
  2912  003C7E  0E00               	movlw	0
  2913  003C80  0100               	movlb	0	; () banked
  2914  003C82  6F9A               	movwf	?_log& (0+255),b
  2915  003C84  0E00               	movlw	0
  2916  003C86  6F9B               	movwf	(?_log+1)& (0+255),b
  2917  003C88  0E00               	movlw	0
  2918  003C8A  6F9C               	movwf	(?_log+2)& (0+255),b
  2919  003C8C  0E00               	movlw	0
  2920  003C8E  6F9D               	movwf	(?_log+3)& (0+255),b
  2921                           
  2922                           ; BSR set to: 0
  2923  003C90  0012               	return	
  2924  003C92                     l6173:
  2925                           
  2926                           ; BSR set to: 0
  2927  003C92  0E00               	movlw	0
  2928  003C94  0100               	movlb	0	; () banked
  2929  003C96  6F73               	movwf	___flmul@f2& (0+255),b
  2930  003C98  0E00               	movlw	0
  2931  003C9A  6F74               	movwf	(___flmul@f2+1)& (0+255),b
  2932  003C9C  0E00               	movlw	0
  2933  003C9E  6F75               	movwf	(___flmul@f2+2)& (0+255),b
  2934  003CA0  0E40               	movlw	64
  2935  003CA2  6F76               	movwf	(___flmul@f2+3)& (0+255),b
  2936  003CA4  0E9E               	movlw	low log@exponent
  2937  003CA6  0100               	movlb	0	; () banked
  2938  003CA8  6F64               	movwf	frexp@eptr& (0+255),b
  2939  003CAA  0E00               	movlw	high log@exponent
  2940  003CAC  0100               	movlb	0	; () banked
  2941  003CAE  6F65               	movwf	(frexp@eptr+1)& (0+255),b
  2942  003CB0  C09A  F060         	movff	log@x,frexp@value
  2943  003CB4  C09B  F061         	movff	log@x+1,frexp@value+1
  2944  003CB8  C09C  F062         	movff	log@x+2,frexp@value+2
  2945  003CBC  C09D  F063         	movff	log@x+3,frexp@value+3
  2946  003CC0  EC84  F024         	call	_frexp	;wreg free
  2947  003CC4  C060  F06F         	movff	?_frexp,___flmul@f1
  2948  003CC8  C061  F070         	movff	?_frexp+1,___flmul@f1+1
  2949  003CCC  C062  F071         	movff	?_frexp+2,___flmul@f1+2
  2950  003CD0  C063  F072         	movff	?_frexp+3,___flmul@f1+3
  2951  003CD4  ECDD  F01E         	call	___flmul	;wreg free
  2952  003CD8  C06F  F07E         	movff	?___flmul,___fladd@f1
  2953  003CDC  C070  F07F         	movff	?___flmul+1,___fladd@f1+1
  2954  003CE0  C071  F080         	movff	?___flmul+2,___fladd@f1+2
  2955  003CE4  C072  F081         	movff	?___flmul+3,___fladd@f1+3
  2956  003CE8  0E00               	movlw	0
  2957  003CEA  0100               	movlb	0	; () banked
  2958  003CEC  6F82               	movwf	___fladd@f2& (0+255),b
  2959  003CEE  0E00               	movlw	0
  2960  003CF0  6F83               	movwf	(___fladd@f2+1)& (0+255),b
  2961  003CF2  0E80               	movlw	128
  2962  003CF4  6F84               	movwf	(___fladd@f2+2)& (0+255),b
  2963  003CF6  0EBF               	movlw	191
  2964  003CF8  6F85               	movwf	(___fladd@f2+3)& (0+255),b
  2965  003CFA  EC41  F01A         	call	___fladd	;wreg free
  2966  003CFE  C07E  F09A         	movff	?___fladd,log@x
  2967  003D02  C07F  F09B         	movff	?___fladd+1,log@x+1
  2968  003D06  C080  F09C         	movff	?___fladd+2,log@x+2
  2969  003D0A  C081  F09D         	movff	?___fladd+3,log@x+3
  2970  003D0E  0100               	movlb	0	; () banked
  2971  003D10  079E               	decf	log@exponent& (0+255),f,b
  2972  003D12  A0D8               	btfss	status,0,c
  2973  003D14  079F               	decf	(log@exponent+1)& (0+255),f,b
  2974                           
  2975                           ; BSR set to: 0
  2976  003D16  C09A  F08A         	movff	log@x,eval_poly@x
  2977  003D1A  C09B  F08B         	movff	log@x+1,eval_poly@x+1
  2978  003D1E  C09C  F08C         	movff	log@x+2,eval_poly@x+2
  2979  003D22  C09D  F08D         	movff	log@x+3,eval_poly@x+3
  2980  003D26  0E29               	movlw	low log@coeff
  2981  003D28  0100               	movlb	0	; () banked
  2982  003D2A  6F8E               	movwf	eval_poly@d& (0+255),b
  2983  003D2C  0E0D               	movlw	high log@coeff
  2984  003D2E  0100               	movlb	0	; () banked
  2985  003D30  6F8F               	movwf	(eval_poly@d+1)& (0+255),b
  2986  003D32  0E00               	movlw	0
  2987  003D34  0100               	movlb	0	; () banked
  2988  003D36  6F91               	movwf	(eval_poly@n+1)& (0+255),b
  2989  003D38  0E08               	movlw	8
  2990  003D3A  6F90               	movwf	eval_poly@n& (0+255),b
  2991  003D3C  EC13  F023         	call	_eval_poly	;wreg free
  2992  003D40  C08A  F09A         	movff	?_eval_poly,log@x
  2993  003D44  C08B  F09B         	movff	?_eval_poly+1,log@x+1
  2994  003D48  C08C  F09C         	movff	?_eval_poly+2,log@x+2
  2995  003D4C  C08D  F09D         	movff	?_eval_poly+3,log@x+3
  2996  003D50  0E18               	movlw	24
  2997  003D52  0100               	movlb	0	; () banked
  2998  003D54  6F73               	movwf	___flmul@f2& (0+255),b
  2999  003D56  0E72               	movlw	114
  3000  003D58  6F74               	movwf	(___flmul@f2+1)& (0+255),b
  3001  003D5A  0E31               	movlw	49
  3002  003D5C  6F75               	movwf	(___flmul@f2+2)& (0+255),b
  3003  003D5E  0E3F               	movlw	63
  3004  003D60  6F76               	movwf	(___flmul@f2+3)& (0+255),b
  3005  003D62  C09E  F06A         	movff	log@exponent,___awtofl@c
  3006  003D66  C09F  F06B         	movff	log@exponent+1,___awtofl@c+1
  3007  003D6A  ECA1  F026         	call	___awtofl	;wreg free
  3008  003D6E  C06A  F06F         	movff	?___awtofl,___flmul@f1
  3009  003D72  C06B  F070         	movff	?___awtofl+1,___flmul@f1+1
  3010  003D76  C06C  F071         	movff	?___awtofl+2,___flmul@f1+2
  3011  003D7A  C06D  F072         	movff	?___awtofl+3,___flmul@f1+3
  3012  003D7E  ECDD  F01E         	call	___flmul	;wreg free
  3013  003D82  C06F  F07E         	movff	?___flmul,___fladd@f1
  3014  003D86  C070  F07F         	movff	?___flmul+1,___fladd@f1+1
  3015  003D8A  C071  F080         	movff	?___flmul+2,___fladd@f1+2
  3016  003D8E  C072  F081         	movff	?___flmul+3,___fladd@f1+3
  3017  003D92  C09A  F082         	movff	log@x,___fladd@f2
  3018  003D96  C09B  F083         	movff	log@x+1,___fladd@f2+1
  3019  003D9A  C09C  F084         	movff	log@x+2,___fladd@f2+2
  3020  003D9E  C09D  F085         	movff	log@x+3,___fladd@f2+3
  3021  003DA2  EC41  F01A         	call	___fladd	;wreg free
  3022  003DA6  C07E  F09A         	movff	?___fladd,?_log
  3023  003DAA  C07F  F09B         	movff	?___fladd+1,?_log+1
  3024  003DAE  C080  F09C         	movff	?___fladd+2,?_log+2
  3025  003DB2  C081  F09D         	movff	?___fladd+3,?_log+3
  3026  003DB6  0012               	return	
  3027  003DB8  0012               	return		;funcret
  3028  003DBA                     __end_of_log:
  3029                           	opt stack 0
  3030                           tblptru	equ	0xFF8
  3031                           tblptrh	equ	0xFF7
  3032                           tblptrl	equ	0xFF6
  3033                           tablat	equ	0xFF5
  3034                           postinc0	equ	0xFEE
  3035                           wreg	equ	0xFE8
  3036                           status	equ	0xFD8
  3037                           
  3038 ;; *************** function _exp *****************
  3039 ;; Defined at:
  3040 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\exp.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  x               4   67[BANK0 ] int 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  exponent        2   75[BANK0 ] int 
  3045 ;;  sign            1   77[BANK0 ] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  4   67[BANK0 ] unsigned char 
  3048 ;; Registers used:
  3049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3055 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3056 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3058 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3059 ;;Total ram usage:       11 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    5
  3062 ;; This function calls:
  3063 ;;		___awtofl
  3064 ;;		___fldiv
  3065 ;;		___flge
  3066 ;;		___flmul
  3067 ;;		___flneg
  3068 ;;		___flsub
  3069 ;;		___fltol
  3070 ;;		_eval_poly
  3071 ;;		_floor
  3072 ;;		_ldexp
  3073 ;; This function is called by:
  3074 ;;		_pow
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text5
  3079  0031F6                     __ptext5:
  3080                           	opt stack 0
  3081  0031F6                     _exp:
  3082                           	opt stack 23
  3083                           
  3084                           ;incstack = 0
  3085  0031F6  0100               	movlb	0	; () banked
  3086  0031F8  51A3               	movf	exp@x& (0+255),w,b
  3087  0031FA  0100               	movlb	0	; () banked
  3088  0031FC  11A4               	iorwf	(exp@x+1)& (0+255),w,b
  3089  0031FE  0100               	movlb	0	; () banked
  3090  003200  11A5               	iorwf	(exp@x+2)& (0+255),w,b
  3091  003202  0100               	movlb	0	; () banked
  3092  003204  11A6               	iorwf	(exp@x+3)& (0+255),w,b
  3093  003206  A4D8               	btfss	status,2,c
  3094  003208  D00A               	goto	l6189
  3095                           
  3096                           ; BSR set to: 0
  3097  00320A  0E00               	movlw	0
  3098  00320C  0100               	movlb	0	; () banked
  3099  00320E  6FA3               	movwf	?_exp& (0+255),b
  3100  003210  0E00               	movlw	0
  3101  003212  6FA4               	movwf	(?_exp+1)& (0+255),b
  3102  003214  0E80               	movlw	128
  3103  003216  6FA5               	movwf	(?_exp+2)& (0+255),b
  3104  003218  0E3F               	movlw	63
  3105  00321A  6FA6               	movwf	(?_exp+3)& (0+255),b
  3106                           
  3107                           ; BSR set to: 0
  3108  00321C  0012               	return	
  3109  00321E                     l6189:
  3110                           
  3111                           ; BSR set to: 0
  3112  00321E  0E18               	movlw	24
  3113  003220  0100               	movlb	0	; () banked
  3114  003222  6F60               	movwf	___flge@ff1& (0+255),b
  3115  003224  0E72               	movlw	114
  3116  003226  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3117  003228  0E31               	movlw	49
  3118  00322A  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3119  00322C  0E44               	movlw	68
  3120  00322E  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3121  003230  C0A3  F064         	movff	exp@x,___flge@ff2
  3122  003234  C0A4  F065         	movff	exp@x+1,___flge@ff2+1
  3123  003238  C0A5  F066         	movff	exp@x+2,___flge@ff2+2
  3124  00323C  C0A6  F067         	movff	exp@x+3,___flge@ff2+3
  3125  003240  ECA0  F023         	call	___flge	;wreg free
  3126  003244  0100               	movlb	0	; () banked
  3127  003246  B0D8               	btfsc	status,0,c
  3128  003248  D00F               	goto	l6195
  3129                           
  3130                           ; BSR set to: 0
  3131  00324A  0E00               	movlw	0
  3132  00324C  0100               	movlb	0	; () banked
  3133  00324E  6FDC               	movwf	(_errno+1)& (0+255),b
  3134  003250  0E22               	movlw	34
  3135  003252  6FDB               	movwf	_errno& (0+255),b
  3136  003254  0EFF               	movlw	255
  3137  003256  0100               	movlb	0	; () banked
  3138  003258  6FA3               	movwf	?_exp& (0+255),b
  3139  00325A  0EFF               	movlw	255
  3140  00325C  6FA4               	movwf	(?_exp+1)& (0+255),b
  3141  00325E  0E7F               	movlw	127
  3142  003260  6FA5               	movwf	(?_exp+2)& (0+255),b
  3143  003262  0E7F               	movlw	127
  3144  003264  6FA6               	movwf	(?_exp+3)& (0+255),b
  3145                           
  3146                           ; BSR set to: 0
  3147  003266  0012               	return	
  3148  003268                     l6195:
  3149                           
  3150                           ; BSR set to: 0
  3151  003268  C0A3  F060         	movff	exp@x,___flge@ff1
  3152  00326C  C0A4  F061         	movff	exp@x+1,___flge@ff1+1
  3153  003270  C0A5  F062         	movff	exp@x+2,___flge@ff1+2
  3154  003274  C0A6  F063         	movff	exp@x+3,___flge@ff1+3
  3155  003278  0E87               	movlw	135
  3156  00327A  0100               	movlb	0	; () banked
  3157  00327C  6F64               	movwf	___flge@ff2& (0+255),b
  3158  00327E  0E48               	movlw	72
  3159  003280  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  3160  003282  0E3A               	movlw	58
  3161  003284  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  3162  003286  0EC4               	movlw	196
  3163  003288  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  3164  00328A  ECA0  F023         	call	___flge	;wreg free
  3165  00328E  0100               	movlb	0	; () banked
  3166  003290  B0D8               	btfsc	status,0,c
  3167  003292  D00F               	goto	l6201
  3168                           
  3169                           ; BSR set to: 0
  3170  003294  0E00               	movlw	0
  3171  003296  0100               	movlb	0	; () banked
  3172  003298  6FDC               	movwf	(_errno+1)& (0+255),b
  3173  00329A  0E22               	movlw	34
  3174  00329C  6FDB               	movwf	_errno& (0+255),b
  3175  00329E  0E00               	movlw	0
  3176  0032A0  0100               	movlb	0	; () banked
  3177  0032A2  6FA3               	movwf	?_exp& (0+255),b
  3178  0032A4  0E00               	movlw	0
  3179  0032A6  6FA4               	movwf	(?_exp+1)& (0+255),b
  3180  0032A8  0E00               	movlw	0
  3181  0032AA  6FA5               	movwf	(?_exp+2)& (0+255),b
  3182  0032AC  0E00               	movlw	0
  3183  0032AE  6FA6               	movwf	(?_exp+3)& (0+255),b
  3184                           
  3185                           ; BSR set to: 0
  3186  0032B0  0012               	return	
  3187  0032B2                     l6201:
  3188                           
  3189                           ; BSR set to: 0
  3190  0032B2  0100               	movlb	0	; () banked
  3191  0032B4  AFA6               	btfss	(exp@x+3)& (0+255),7,b
  3192  0032B6  D002               	goto	u8130
  3193  0032B8  0E01               	movlw	1
  3194  0032BA  D001               	goto	u8140
  3195  0032BC                     u8130:
  3196  0032BC  0E00               	movlw	0
  3197  0032BE                     u8140:
  3198  0032BE  0100               	movlb	0	; () banked
  3199  0032C0  6FAD               	movwf	exp@sign& (0+255),b
  3200                           
  3201                           ; BSR set to: 0
  3202  0032C2  0100               	movlb	0	; () banked
  3203  0032C4  51AD               	movf	exp@sign& (0+255),w,b
  3204  0032C6  0100               	movlb	0	; () banked
  3205  0032C8  B4D8               	btfsc	status,2,c
  3206  0032CA  D012               	goto	l1402
  3207                           
  3208                           ; BSR set to: 0
  3209  0032CC  C0A3  F060         	movff	exp@x,___flneg@f1
  3210  0032D0  C0A4  F061         	movff	exp@x+1,___flneg@f1+1
  3211  0032D4  C0A5  F062         	movff	exp@x+2,___flneg@f1+2
  3212  0032D8  C0A6  F063         	movff	exp@x+3,___flneg@f1+3
  3213  0032DC  ECE9  F026         	call	___flneg	;wreg free
  3214  0032E0  C060  F0A3         	movff	?___flneg,exp@x
  3215  0032E4  C061  F0A4         	movff	?___flneg+1,exp@x+1
  3216  0032E8  C062  F0A5         	movff	?___flneg+2,exp@x+2
  3217  0032EC  C063  F0A6         	movff	?___flneg+3,exp@x+3
  3218  0032F0                     l1402:
  3219  0032F0  C0A3  F06F         	movff	exp@x,___flmul@f1
  3220  0032F4  C0A4  F070         	movff	exp@x+1,___flmul@f1+1
  3221  0032F8  C0A5  F071         	movff	exp@x+2,___flmul@f1+2
  3222  0032FC  C0A6  F072         	movff	exp@x+3,___flmul@f1+3
  3223  003300  0E3B               	movlw	59
  3224  003302  0100               	movlb	0	; () banked
  3225  003304  6F73               	movwf	___flmul@f2& (0+255),b
  3226  003306  0EAA               	movlw	170
  3227  003308  6F74               	movwf	(___flmul@f2+1)& (0+255),b
  3228  00330A  0EB8               	movlw	184
  3229  00330C  6F75               	movwf	(___flmul@f2+2)& (0+255),b
  3230  00330E  0E3F               	movlw	63
  3231  003310  6F76               	movwf	(___flmul@f2+3)& (0+255),b
  3232  003312  ECDD  F01E         	call	___flmul	;wreg free
  3233  003316  C06F  F0A3         	movff	?___flmul,exp@x
  3234  00331A  C070  F0A4         	movff	?___flmul+1,exp@x+1
  3235  00331E  C071  F0A5         	movff	?___flmul+2,exp@x+2
  3236  003322  C072  F0A6         	movff	?___flmul+3,exp@x+3
  3237  003326  C0A3  F099         	movff	exp@x,floor@x
  3238  00332A  C0A4  F09A         	movff	exp@x+1,floor@x+1
  3239  00332E  C0A5  F09B         	movff	exp@x+2,floor@x+2
  3240  003332  C0A6  F09C         	movff	exp@x+3,floor@x+3
  3241  003336  ECF5  F021         	call	_floor	;wreg free
  3242  00333A  C099  F0A7         	movff	?_floor,_exp$4022
  3243  00333E  C09A  F0A8         	movff	?_floor+1,_exp$4022+1
  3244  003342  C09B  F0A9         	movff	?_floor+2,_exp$4022+2
  3245  003346  C09C  F0AA         	movff	?_floor+3,_exp$4022+3
  3246  00334A  C0A7  F08A         	movff	_exp$4022,___fltol@f1
  3247  00334E  C0A8  F08B         	movff	_exp$4022+1,___fltol@f1+1
  3248  003352  C0A9  F08C         	movff	_exp$4022+2,___fltol@f1+2
  3249  003356  C0AA  F08D         	movff	_exp$4022+3,___fltol@f1+3
  3250  00335A  EC86  F022         	call	___fltol	;wreg free
  3251  00335E  C08A  F0AB         	movff	?___fltol,exp@exponent
  3252  003362  C08B  F0AC         	movff	?___fltol+1,exp@exponent+1
  3253  003366  C0A3  F08A         	movff	exp@x,___flsub@f1
  3254  00336A  C0A4  F08B         	movff	exp@x+1,___flsub@f1+1
  3255  00336E  C0A5  F08C         	movff	exp@x+2,___flsub@f1+2
  3256  003372  C0A6  F08D         	movff	exp@x+3,___flsub@f1+3
  3257  003376  C0AB  F06A         	movff	exp@exponent,___awtofl@c
  3258  00337A  C0AC  F06B         	movff	exp@exponent+1,___awtofl@c+1
  3259  00337E  ECA1  F026         	call	___awtofl	;wreg free
  3260  003382  C06A  F08E         	movff	?___awtofl,___flsub@f2
  3261  003386  C06B  F08F         	movff	?___awtofl+1,___flsub@f2+1
  3262  00338A  C06C  F090         	movff	?___awtofl+2,___flsub@f2+2
  3263  00338E  C06D  F091         	movff	?___awtofl+3,___flsub@f2+3
  3264  003392  ECC6  F025         	call	___flsub	;wreg free
  3265  003396  C08A  F0A3         	movff	?___flsub,exp@x
  3266  00339A  C08B  F0A4         	movff	?___flsub+1,exp@x+1
  3267  00339E  C08C  F0A5         	movff	?___flsub+2,exp@x+2
  3268  0033A2  C08D  F0A6         	movff	?___flsub+3,exp@x+3
  3269  0033A6  C0A3  F08A         	movff	exp@x,eval_poly@x
  3270  0033AA  C0A4  F08B         	movff	exp@x+1,eval_poly@x+1
  3271  0033AE  C0A5  F08C         	movff	exp@x+2,eval_poly@x+2
  3272  0033B2  C0A6  F08D         	movff	exp@x+3,eval_poly@x+3
  3273  0033B6  0E01               	movlw	low exp@coeff
  3274  0033B8  0100               	movlb	0	; () banked
  3275  0033BA  6F8E               	movwf	eval_poly@d& (0+255),b
  3276  0033BC  0E0D               	movlw	high exp@coeff
  3277  0033BE  0100               	movlb	0	; () banked
  3278  0033C0  6F8F               	movwf	(eval_poly@d+1)& (0+255),b
  3279  0033C2  0E00               	movlw	0
  3280  0033C4  0100               	movlb	0	; () banked
  3281  0033C6  6F91               	movwf	(eval_poly@n+1)& (0+255),b
  3282  0033C8  0E09               	movlw	9
  3283  0033CA  6F90               	movwf	eval_poly@n& (0+255),b
  3284  0033CC  EC13  F023         	call	_eval_poly	;wreg free
  3285  0033D0  C08A  F09A         	movff	?_eval_poly,ldexp@value
  3286  0033D4  C08B  F09B         	movff	?_eval_poly+1,ldexp@value+1
  3287  0033D8  C08C  F09C         	movff	?_eval_poly+2,ldexp@value+2
  3288  0033DC  C08D  F09D         	movff	?_eval_poly+3,ldexp@value+3
  3289  0033E0  C0AB  F09E         	movff	exp@exponent,ldexp@newexp
  3290  0033E4  C0AC  F09F         	movff	exp@exponent+1,ldexp@newexp+1
  3291  0033E8  ECC6  F020         	call	_ldexp	;wreg free
  3292  0033EC  C09A  F0A3         	movff	?_ldexp,exp@x
  3293  0033F0  C09B  F0A4         	movff	?_ldexp+1,exp@x+1
  3294  0033F4  C09C  F0A5         	movff	?_ldexp+2,exp@x+2
  3295  0033F8  C09D  F0A6         	movff	?_ldexp+3,exp@x+3
  3296  0033FC  0100               	movlb	0	; () banked
  3297  0033FE  51AD               	movf	exp@sign& (0+255),w,b
  3298  003400  0100               	movlb	0	; () banked
  3299  003402  B4D8               	btfsc	status,2,c
  3300  003404  D035               	goto	l1403
  3301                           
  3302                           ; BSR set to: 0
  3303  003406  0100               	movlb	0	; () banked
  3304  003408  29A3               	incf	exp@x& (0+255),w,b
  3305  00340A  E116               	bnz	l6223
  3306  00340C  0100               	movlb	0	; () banked
  3307  00340E  29A4               	incf	(exp@x+1)& (0+255),w,b
  3308  003410  E113               	bnz	l6223
  3309  003412  0E7F               	movlw	127
  3310  003414  0100               	movlb	0	; () banked
  3311  003416  19A5               	xorwf	(exp@x+2)& (0+255),w,b
  3312  003418  E10F               	bnz	l6223
  3313  00341A  0E7F               	movlw	127
  3314  00341C  0100               	movlb	0	; () banked
  3315  00341E  19A6               	xorwf	(exp@x+3)& (0+255),w,b
  3316  003420  A4D8               	btfss	status,2,c
  3317  003422  D00A               	goto	l6223
  3318                           
  3319                           ; BSR set to: 0
  3320  003424  0E00               	movlw	0
  3321  003426  0100               	movlb	0	; () banked
  3322  003428  6FA3               	movwf	?_exp& (0+255),b
  3323  00342A  0E00               	movlw	0
  3324  00342C  6FA4               	movwf	(?_exp+1)& (0+255),b
  3325  00342E  0E00               	movlw	0
  3326  003430  6FA5               	movwf	(?_exp+2)& (0+255),b
  3327  003432  0E00               	movlw	0
  3328  003434  6FA6               	movwf	(?_exp+3)& (0+255),b
  3329                           
  3330                           ; BSR set to: 0
  3331  003436  0012               	return	
  3332  003438                     l6223:
  3333                           
  3334                           ; BSR set to: 0
  3335  003438  0E00               	movlw	0
  3336  00343A  0100               	movlb	0	; () banked
  3337  00343C  6F6A               	movwf	___fldiv@f1& (0+255),b
  3338  00343E  0E00               	movlw	0
  3339  003440  6F6B               	movwf	(___fldiv@f1+1)& (0+255),b
  3340  003442  0E80               	movlw	128
  3341  003444  6F6C               	movwf	(___fldiv@f1+2)& (0+255),b
  3342  003446  0E3F               	movlw	63
  3343  003448  6F6D               	movwf	(___fldiv@f1+3)& (0+255),b
  3344  00344A  C0A3  F06E         	movff	exp@x,___fldiv@f2
  3345  00344E  C0A4  F06F         	movff	exp@x+1,___fldiv@f2+1
  3346  003452  C0A5  F070         	movff	exp@x+2,___fldiv@f2+2
  3347  003456  C0A6  F071         	movff	exp@x+3,___fldiv@f2+3
  3348  00345A  EC2B  F020         	call	___fldiv	;wreg free
  3349  00345E  C06A  F0A3         	movff	?___fldiv,?_exp
  3350  003462  C06B  F0A4         	movff	?___fldiv+1,?_exp+1
  3351  003466  C06C  F0A5         	movff	?___fldiv+2,?_exp+2
  3352  00346A  C06D  F0A6         	movff	?___fldiv+3,?_exp+3
  3353  00346E  0012               	return	
  3354  003470                     l1403:
  3355                           
  3356                           ; BSR set to: 0
  3357  003470  C0A3  F0A3         	movff	exp@x,?_exp
  3358  003474  C0A4  F0A4         	movff	exp@x+1,?_exp+1
  3359  003478  C0A5  F0A5         	movff	exp@x+2,?_exp+2
  3360  00347C  C0A6  F0A6         	movff	exp@x+3,?_exp+3
  3361  003480  0012               	return		;funcret
  3362  003482                     __end_of_exp:
  3363                           	opt stack 0
  3364                           tblptru	equ	0xFF8
  3365                           tblptrh	equ	0xFF7
  3366                           tblptrl	equ	0xFF6
  3367                           tablat	equ	0xFF5
  3368                           postinc0	equ	0xFEE
  3369                           wreg	equ	0xFE8
  3370                           status	equ	0xFD8
  3371                           
  3372 ;; *************** function _ldexp *****************
  3373 ;; Defined at:
  3374 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;  value           4   58[BANK0 ] unsigned char 
  3377 ;;  newexp          2   62[BANK0 ] int 
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;		None
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  4   58[BANK0 ] int 
  3382 ;; Registers used:
  3383 ;;		wreg, status,2, status,0
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3389 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3391 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3392 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3393 ;;Total ram usage:        8 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:    2
  3396 ;; This function calls:
  3397 ;;		Nothing
  3398 ;; This function is called by:
  3399 ;;		_exp
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text6
  3404  00418C                     __ptext6:
  3405                           	opt stack 0
  3406  00418C                     _ldexp:
  3407                           	opt stack 25
  3408                           
  3409                           ;incstack = 0
  3410  00418C  0100               	movlb	0	; () banked
  3411  00418E  519A               	movf	ldexp@value& (0+255),w,b
  3412  004190  0100               	movlb	0	; () banked
  3413  004192  119B               	iorwf	(ldexp@value+1)& (0+255),w,b
  3414  004194  0100               	movlb	0	; () banked
  3415  004196  119C               	iorwf	(ldexp@value+2)& (0+255),w,b
  3416  004198  0100               	movlb	0	; () banked
  3417  00419A  119D               	iorwf	(ldexp@value+3)& (0+255),w,b
  3418  00419C  A4D8               	btfss	status,2,c
  3419  00419E  D00A               	goto	l5709
  3420                           
  3421                           ; BSR set to: 0
  3422  0041A0  0E00               	movlw	0
  3423  0041A2  0100               	movlb	0	; () banked
  3424  0041A4  6F9A               	movwf	?_ldexp& (0+255),b
  3425  0041A6  0E00               	movlw	0
  3426  0041A8  6F9B               	movwf	(?_ldexp+1)& (0+255),b
  3427  0041AA  0E00               	movlw	0
  3428  0041AC  6F9C               	movwf	(?_ldexp+2)& (0+255),b
  3429  0041AE  0E00               	movlw	0
  3430  0041B0  6F9D               	movwf	(?_ldexp+3)& (0+255),b
  3431                           
  3432                           ; BSR set to: 0
  3433  0041B2  0012               	return	
  3434  0041B4                     l5709:
  3435                           
  3436                           ; BSR set to: 0
  3437  0041B4  0100               	movlb	0	; () banked
  3438  0041B6  519D               	movf	(ldexp@value+3)& (0+255),w,b
  3439  0041B8  0B7F               	andlw	127
  3440  0041BA  0100               	movlb	0	; () banked
  3441  0041BC  6FA0               	movwf	??_ldexp& (0+255),b
  3442  0041BE  6BA1               	clrf	(??_ldexp+1)& (0+255),b
  3443  0041C0  90D8               	bcf	status,0,c
  3444  0041C2  0100               	movlb	0	; () banked
  3445  0041C4  37A0               	rlcf	??_ldexp& (0+255),f,b
  3446  0041C6  37A1               	rlcf	(??_ldexp+1)& (0+255),f,b
  3447  0041C8  0100               	movlb	0	; () banked
  3448  0041CA  51A0               	movf	??_ldexp& (0+255),w,b
  3449  0041CC  0100               	movlb	0	; () banked
  3450  0041CE  279E               	addwf	ldexp@newexp& (0+255),f,b
  3451  0041D0  0100               	movlb	0	; () banked
  3452  0041D2  51A1               	movf	(??_ldexp+1)& (0+255),w,b
  3453  0041D4  0100               	movlb	0	; () banked
  3454  0041D6  239F               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  3455  0041D8  0100               	movlb	0	; () banked
  3456  0041DA  AF9C               	btfss	(ldexp@value+2)& (0+255),7,b
  3457  0041DC  D004               	goto	u7070
  3458  0041DE  0100               	movlb	0	; () banked
  3459  0041E0  6BA0               	clrf	??_ldexp& (0+255),b
  3460  0041E2  2BA0               	incf	??_ldexp& (0+255),f,b
  3461  0041E4  D002               	goto	u7078
  3462  0041E6                     u7070:
  3463  0041E6  0100               	movlb	0	; () banked
  3464  0041E8  6BA0               	clrf	??_ldexp& (0+255),b
  3465  0041EA                     u7078:
  3466  0041EA  0100               	movlb	0	; () banked
  3467  0041EC  51A0               	movf	??_ldexp& (0+255),w,b
  3468  0041EE  0100               	movlb	0	; () banked
  3469  0041F0  279E               	addwf	ldexp@newexp& (0+255),f,b
  3470  0041F2  0E00               	movlw	0
  3471  0041F4  239F               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  3472  0041F6  0100               	movlb	0	; () banked
  3473  0041F8  AF9F               	btfss	(ldexp@newexp+1)& (0+255),7,b
  3474  0041FA  D010               	goto	l5717
  3475                           
  3476                           ; BSR set to: 0
  3477  0041FC  0E00               	movlw	0
  3478  0041FE  0100               	movlb	0	; () banked
  3479  004200  6FDC               	movwf	(_errno+1)& (0+255),b
  3480  004202  0E22               	movlw	34
  3481  004204  6FDB               	movwf	_errno& (0+255),b
  3482  004206  0E00               	movlw	0
  3483  004208  0100               	movlb	0	; () banked
  3484  00420A  6F9A               	movwf	?_ldexp& (0+255),b
  3485  00420C  0E00               	movlw	0
  3486  00420E  6F9B               	movwf	(?_ldexp+1)& (0+255),b
  3487  004210  0E00               	movlw	0
  3488  004212  6F9C               	movwf	(?_ldexp+2)& (0+255),b
  3489  004214  0E00               	movlw	0
  3490  004216                     L5:
  3491  004216  6F9D               	movwf	(?_ldexp+3)& (0+255),b
  3492                           
  3493                           ; BSR set to: 0
  3494  004218  0012               	return	
  3495                           
  3496                           ; BSR set to: 0
  3497  00421A  D047               	goto	l5735
  3498  00421C                     l5717:
  3499                           
  3500                           ; BSR set to: 0
  3501  00421C  0100               	movlb	0	; () banked
  3502  00421E  BF9F               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  3503  004220  D022               	goto	l5733
  3504  004222  0100               	movlb	0	; () banked
  3505  004224  059F               	decf	(ldexp@newexp+1)& (0+255),w,b
  3506  004226  A0D8               	btfss	status,0,c
  3507  004228  D01E               	goto	l5733
  3508                           
  3509                           ; BSR set to: 0
  3510  00422A  0E00               	movlw	0
  3511  00422C  0100               	movlb	0	; () banked
  3512  00422E  6FDC               	movwf	(_errno+1)& (0+255),b
  3513  004230  0E22               	movlw	34
  3514  004232  6FDB               	movwf	_errno& (0+255),b
  3515                           
  3516                           ; BSR set to: 0
  3517  004234  0100               	movlb	0	; () banked
  3518  004236  AF9D               	btfss	(ldexp@value+3)& (0+255),7,b
  3519  004238  D00B               	goto	l5729
  3520                           
  3521                           ; BSR set to: 0
  3522  00423A  0EFF               	movlw	255
  3523  00423C  0100               	movlb	0	; () banked
  3524  00423E  6F9A               	movwf	?_ldexp& (0+255),b
  3525  004240  0EFF               	movlw	255
  3526  004242  6F9B               	movwf	(?_ldexp+1)& (0+255),b
  3527  004244  0E7F               	movlw	127
  3528  004246  6F9C               	movwf	(?_ldexp+2)& (0+255),b
  3529  004248  0EFF               	movlw	255
  3530  00424A  D7E5               	goto	L5
  3531                           
  3532                           ; BSR set to: 0
  3533  00424C  0012               	return	
  3534                           
  3535                           ; BSR set to: 0
  3536  00424E  D02D               	goto	l5735
  3537  004250                     l5729:
  3538                           
  3539                           ; BSR set to: 0
  3540  004250  0EFF               	movlw	255
  3541  004252  0100               	movlb	0	; () banked
  3542  004254  6F9A               	movwf	?_ldexp& (0+255),b
  3543  004256  0EFF               	movlw	255
  3544  004258  6F9B               	movwf	(?_ldexp+1)& (0+255),b
  3545  00425A  0E7F               	movlw	127
  3546  00425C  6F9C               	movwf	(?_ldexp+2)& (0+255),b
  3547  00425E  0E7F               	movlw	127
  3548  004260  D7DA               	goto	L5
  3549                           
  3550                           ; BSR set to: 0
  3551  004262  0012               	return	
  3552                           
  3553                           ; BSR set to: 0
  3554  004264  D022               	goto	l5735
  3555  004266                     l5733:
  3556                           
  3557                           ; BSR set to: 0
  3558  004266  0100               	movlb	0	; () banked
  3559  004268  359F               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  3560  00426A  319F               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  3561  00426C  0100               	movlb	0	; () banked
  3562  00426E  6FA1               	movwf	(??_ldexp+1)& (0+255),b
  3563  004270  0100               	movlb	0	; () banked
  3564  004272  319E               	rrcf	ldexp@newexp& (0+255),w,b
  3565  004274  0100               	movlb	0	; () banked
  3566  004276  6FA0               	movwf	??_ldexp& (0+255),b
  3567  004278  0100               	movlb	0	; () banked
  3568  00427A  519D               	movf	(ldexp@value+3)& (0+255),w,b
  3569  00427C  0100               	movlb	0	; () banked
  3570  00427E  19A0               	xorwf	??_ldexp& (0+255),w,b
  3571  004280  0B80               	andlw	-128
  3572  004282  19A0               	xorwf	??_ldexp& (0+255),w,b
  3573  004284  0100               	movlb	0	; () banked
  3574  004286  6F9D               	movwf	(ldexp@value+3)& (0+255),b
  3575  004288  C09E  F0A0         	movff	ldexp@newexp,??_ldexp
  3576  00428C  0E01               	movlw	1
  3577  00428E  0100               	movlb	0	; () banked
  3578  004290  17A0               	andwf	??_ldexp& (0+255),f,b
  3579  004292  0100               	movlb	0	; () banked
  3580  004294  33A0               	rrcf	??_ldexp& (0+255),f,b
  3581  004296  33A0               	rrcf	??_ldexp& (0+255),f,b
  3582  004298  0100               	movlb	0	; () banked
  3583  00429A  519C               	movf	(ldexp@value+2)& (0+255),w,b
  3584  00429C  0100               	movlb	0	; () banked
  3585  00429E  19A0               	xorwf	??_ldexp& (0+255),w,b
  3586  0042A0  0B7F               	andlw	-129
  3587  0042A2  19A0               	xorwf	??_ldexp& (0+255),w,b
  3588  0042A4  0100               	movlb	0	; () banked
  3589  0042A6  6F9C               	movwf	(ldexp@value+2)& (0+255),b
  3590                           
  3591                           ; BSR set to: 0
  3592  0042A8  D000               	goto	l5735
  3593  0042AA                     l5735:
  3594                           
  3595                           ; BSR set to: 0
  3596  0042AA  C09A  F09A         	movff	ldexp@value,?_ldexp
  3597  0042AE  C09B  F09B         	movff	ldexp@value+1,?_ldexp+1
  3598  0042B2  C09C  F09C         	movff	ldexp@value+2,?_ldexp+2
  3599  0042B6  C09D  F09D         	movff	ldexp@value+3,?_ldexp+3
  3600  0042BA  0012               	return	
  3601                           
  3602                           ; BSR set to: 0
  3603                           
  3604                           ; BSR set to: 0
  3605  0042BC  0012               	return		;funcret
  3606  0042BE                     __end_of_ldexp:
  3607                           	opt stack 0
  3608                           tblptru	equ	0xFF8
  3609                           tblptrh	equ	0xFF7
  3610                           tblptrl	equ	0xFF6
  3611                           tablat	equ	0xFF5
  3612                           postinc0	equ	0xFEE
  3613                           wreg	equ	0xFE8
  3614                           status	equ	0xFD8
  3615                           
  3616 ;; *************** function _floor *****************
  3617 ;; Defined at:
  3618 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\floor.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  x               4   57[BANK0 ] int 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  i               4   61[BANK0 ] int 
  3623 ;;  expon           2   65[BANK0 ] int 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  4   57[BANK0 ] int 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3633 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3634 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3636 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3637 ;;Total ram usage:       10 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:    4
  3640 ;; This function calls:
  3641 ;;		___altofl
  3642 ;;		___fladd
  3643 ;;		___flge
  3644 ;;		___fltol
  3645 ;;		_frexp
  3646 ;; This function is called by:
  3647 ;;		_exp
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text7
  3652  0043EA                     __ptext7:
  3653                           	opt stack 0
  3654  0043EA                     _floor:
  3655                           	opt stack 23
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;incstack = 0
  3659  0043EA  C099  F060         	movff	floor@x,frexp@value
  3660  0043EE  C09A  F061         	movff	floor@x+1,frexp@value+1
  3661  0043F2  C09B  F062         	movff	floor@x+2,frexp@value+2
  3662  0043F6  C09C  F063         	movff	floor@x+3,frexp@value+3
  3663  0043FA  0EA1               	movlw	low floor@expon
  3664  0043FC  0100               	movlb	0	; () banked
  3665  0043FE  6F64               	movwf	frexp@eptr& (0+255),b
  3666  004400  0E00               	movlw	high floor@expon
  3667  004402  0100               	movlb	0	; () banked
  3668  004404  6F65               	movwf	(frexp@eptr+1)& (0+255),b
  3669  004406  EC84  F024         	call	_frexp	;wreg free
  3670  00440A  0100               	movlb	0	; () banked
  3671  00440C  AFA2               	btfss	(floor@expon+1)& (0+255),7,b
  3672  00440E  D017               	goto	l5687
  3673                           
  3674                           ; BSR set to: 0
  3675  004410  0100               	movlb	0	; () banked
  3676  004412  AF9C               	btfss	(floor@x+3)& (0+255),7,b
  3677  004414  D00A               	goto	l5683
  3678                           
  3679                           ; BSR set to: 0
  3680  004416  0E00               	movlw	0
  3681  004418  0100               	movlb	0	; () banked
  3682  00441A  6F99               	movwf	?_floor& (0+255),b
  3683  00441C  0E00               	movlw	0
  3684  00441E  6F9A               	movwf	(?_floor+1)& (0+255),b
  3685  004420  0E80               	movlw	128
  3686  004422  6F9B               	movwf	(?_floor+2)& (0+255),b
  3687  004424  0EBF               	movlw	191
  3688  004426  6F9C               	movwf	(?_floor+3)& (0+255),b
  3689                           
  3690                           ; BSR set to: 0
  3691  004428  0012               	return	
  3692  00442A                     l5683:
  3693                           
  3694                           ; BSR set to: 0
  3695  00442A  0E00               	movlw	0
  3696  00442C  0100               	movlb	0	; () banked
  3697  00442E  6F99               	movwf	?_floor& (0+255),b
  3698  004430  0E00               	movlw	0
  3699  004432  6F9A               	movwf	(?_floor+1)& (0+255),b
  3700  004434  0E00               	movlw	0
  3701  004436  6F9B               	movwf	(?_floor+2)& (0+255),b
  3702  004438  0E00               	movlw	0
  3703  00443A  6F9C               	movwf	(?_floor+3)& (0+255),b
  3704                           
  3705                           ; BSR set to: 0
  3706  00443C  0012               	return	
  3707  00443E                     l5687:
  3708                           
  3709                           ; BSR set to: 0
  3710  00443E  0100               	movlb	0	; () banked
  3711  004440  51A2               	movf	(floor@expon+1)& (0+255),w,b
  3712  004442  E105               	bnz	u7030
  3713  004444  0E1D               	movlw	29
  3714  004446  0100               	movlb	0	; () banked
  3715  004448  5DA1               	subwf	floor@expon& (0+255),w,b
  3716  00444A  A0D8               	btfss	status,0,c
  3717  00444C  D009               	goto	l5691
  3718  00444E                     u7030:
  3719                           
  3720                           ; BSR set to: 0
  3721  00444E  C099  F099         	movff	floor@x,?_floor
  3722  004452  C09A  F09A         	movff	floor@x+1,?_floor+1
  3723  004456  C09B  F09B         	movff	floor@x+2,?_floor+2
  3724  00445A  C09C  F09C         	movff	floor@x+3,?_floor+3
  3725  00445E  0012               	return	
  3726  004460                     l5691:
  3727                           
  3728                           ; BSR set to: 0
  3729  004460  C099  F08A         	movff	floor@x,___fltol@f1
  3730  004464  C09A  F08B         	movff	floor@x+1,___fltol@f1+1
  3731  004468  C09B  F08C         	movff	floor@x+2,___fltol@f1+2
  3732  00446C  C09C  F08D         	movff	floor@x+3,___fltol@f1+3
  3733  004470  EC86  F022         	call	___fltol	;wreg free
  3734  004474  C08A  F094         	movff	?___fltol,___altofl@c
  3735  004478  C08B  F095         	movff	?___fltol+1,___altofl@c+1
  3736  00447C  C08C  F096         	movff	?___fltol+2,___altofl@c+2
  3737  004480  C08D  F097         	movff	?___fltol+3,___altofl@c+3
  3738  004484  EC22  F026         	call	___altofl	;wreg free
  3739  004488  C094  F09D         	movff	?___altofl,floor@i
  3740  00448C  C095  F09E         	movff	?___altofl+1,floor@i+1
  3741  004490  C096  F09F         	movff	?___altofl+2,floor@i+2
  3742  004494  C097  F0A0         	movff	?___altofl+3,floor@i+3
  3743  004498  C099  F060         	movff	floor@x,___flge@ff1
  3744  00449C  C09A  F061         	movff	floor@x+1,___flge@ff1+1
  3745  0044A0  C09B  F062         	movff	floor@x+2,___flge@ff1+2
  3746  0044A4  C09C  F063         	movff	floor@x+3,___flge@ff1+3
  3747  0044A8  C09D  F064         	movff	floor@i,___flge@ff2
  3748  0044AC  C09E  F065         	movff	floor@i+1,___flge@ff2+1
  3749  0044B0  C09F  F066         	movff	floor@i+2,___flge@ff2+2
  3750  0044B4  C0A0  F067         	movff	floor@i+3,___flge@ff2+3
  3751  0044B8  ECA0  F023         	call	___flge	;wreg free
  3752  0044BC  0100               	movlb	0	; () banked
  3753  0044BE  B0D8               	btfsc	status,0,c
  3754  0044C0  D01C               	goto	l1413
  3755                           
  3756                           ; BSR set to: 0
  3757  0044C2  C09D  F07E         	movff	floor@i,___fladd@f1
  3758  0044C6  C09E  F07F         	movff	floor@i+1,___fladd@f1+1
  3759  0044CA  C09F  F080         	movff	floor@i+2,___fladd@f1+2
  3760  0044CE  C0A0  F081         	movff	floor@i+3,___fladd@f1+3
  3761  0044D2  0E00               	movlw	0
  3762  0044D4  0100               	movlb	0	; () banked
  3763  0044D6  6F82               	movwf	___fladd@f2& (0+255),b
  3764  0044D8  0E00               	movlw	0
  3765  0044DA  6F83               	movwf	(___fladd@f2+1)& (0+255),b
  3766  0044DC  0E80               	movlw	128
  3767  0044DE  6F84               	movwf	(___fladd@f2+2)& (0+255),b
  3768  0044E0  0EBF               	movlw	191
  3769  0044E2  6F85               	movwf	(___fladd@f2+3)& (0+255),b
  3770  0044E4  EC41  F01A         	call	___fladd	;wreg free
  3771  0044E8  C07E  F099         	movff	?___fladd,?_floor
  3772  0044EC  C07F  F09A         	movff	?___fladd+1,?_floor+1
  3773  0044F0  C080  F09B         	movff	?___fladd+2,?_floor+2
  3774  0044F4  C081  F09C         	movff	?___fladd+3,?_floor+3
  3775  0044F8  0012               	return	
  3776  0044FA                     l1413:
  3777                           
  3778                           ; BSR set to: 0
  3779  0044FA  C09D  F099         	movff	floor@i,?_floor
  3780  0044FE  C09E  F09A         	movff	floor@i+1,?_floor+1
  3781  004502  C09F  F09B         	movff	floor@i+2,?_floor+2
  3782  004506  C0A0  F09C         	movff	floor@i+3,?_floor+3
  3783  00450A  0012               	return		;funcret
  3784  00450C                     __end_of_floor:
  3785                           	opt stack 0
  3786                           tblptru	equ	0xFF8
  3787                           tblptrh	equ	0xFF7
  3788                           tblptrl	equ	0xFF6
  3789                           tablat	equ	0xFF5
  3790                           postinc0	equ	0xFEE
  3791                           wreg	equ	0xFE8
  3792                           status	equ	0xFD8
  3793                           
  3794 ;; *************** function _frexp *****************
  3795 ;; Defined at:
  3796 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  value           4    0[BANK0 ] int 
  3799 ;;  eptr            2    4[BANK0 ] PTR int 
  3800 ;;		 -> log@exponent(2), floor@expon(2), 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  4    0[BANK0 ] PTR int 
  3805 ;; Registers used:
  3806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3812 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3814 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3815 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;Total ram usage:        8 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    2
  3819 ;; This function calls:
  3820 ;;		Nothing
  3821 ;; This function is called by:
  3822 ;;		_floor
  3823 ;;		_log
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text8
  3828  004908                     __ptext8:
  3829                           	opt stack 0
  3830  004908                     _frexp:
  3831                           	opt stack 25
  3832                           
  3833                           ;incstack = 0
  3834  004908  0100               	movlb	0	; () banked
  3835  00490A  5160               	movf	frexp@value& (0+255),w,b
  3836  00490C  0100               	movlb	0	; () banked
  3837  00490E  1161               	iorwf	(frexp@value+1)& (0+255),w,b
  3838  004910  0100               	movlb	0	; () banked
  3839  004912  1162               	iorwf	(frexp@value+2)& (0+255),w,b
  3840  004914  0100               	movlb	0	; () banked
  3841  004916  1163               	iorwf	(frexp@value+3)& (0+255),w,b
  3842  004918  A4D8               	btfss	status,2,c
  3843  00491A  D012               	goto	l5595
  3844                           
  3845                           ; BSR set to: 0
  3846  00491C  C064  FFD9         	movff	frexp@eptr,fsr2l
  3847  004920  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  3848  004924  0E00               	movlw	0
  3849  004926  6EDE               	movwf	postinc2,c
  3850  004928  0E00               	movlw	0
  3851  00492A  6EDD               	movwf	postdec2,c
  3852                           
  3853                           ; BSR set to: 0
  3854  00492C  0E00               	movlw	0
  3855  00492E  0100               	movlb	0	; () banked
  3856  004930  6F60               	movwf	?_frexp& (0+255),b
  3857  004932  0E00               	movlw	0
  3858  004934  6F61               	movwf	(?_frexp+1)& (0+255),b
  3859  004936  0E00               	movlw	0
  3860  004938  6F62               	movwf	(?_frexp+2)& (0+255),b
  3861  00493A  0E00               	movlw	0
  3862  00493C  6F63               	movwf	(?_frexp+3)& (0+255),b
  3863                           
  3864                           ; BSR set to: 0
  3865  00493E  0012               	return	
  3866  004940                     l5595:
  3867                           
  3868                           ; BSR set to: 0
  3869  004940  0100               	movlb	0	; () banked
  3870  004942  5163               	movf	(frexp@value+3)& (0+255),w,b
  3871  004944  0B7F               	andlw	127
  3872  004946  0100               	movlb	0	; () banked
  3873  004948  6F66               	movwf	??_frexp& (0+255),b
  3874  00494A  6B67               	clrf	(??_frexp+1)& (0+255),b
  3875  00494C  90D8               	bcf	status,0,c
  3876  00494E  0100               	movlb	0	; () banked
  3877  004950  3766               	rlcf	??_frexp& (0+255),f,b
  3878  004952  3767               	rlcf	(??_frexp+1)& (0+255),f,b
  3879  004954  C064  FFD9         	movff	frexp@eptr,fsr2l
  3880  004958  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  3881  00495C  C066  FFDE         	movff	??_frexp,postinc2
  3882  004960  C067  FFDD         	movff	??_frexp+1,postdec2
  3883  004964  0100               	movlb	0	; () banked
  3884  004966  AF62               	btfss	(frexp@value+2)& (0+255),7,b
  3885  004968  D004               	goto	u6940
  3886  00496A  0100               	movlb	0	; () banked
  3887  00496C  6B66               	clrf	??_frexp& (0+255),b
  3888  00496E  2B66               	incf	??_frexp& (0+255),f,b
  3889  004970  D002               	goto	u6948
  3890  004972                     u6940:
  3891  004972  0100               	movlb	0	; () banked
  3892  004974  6B66               	clrf	??_frexp& (0+255),b
  3893  004976                     u6948:
  3894  004976  0100               	movlb	0	; () banked
  3895  004978  5166               	movf	??_frexp& (0+255),w,b
  3896  00497A  C064  FFD9         	movff	frexp@eptr,fsr2l
  3897  00497E  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  3898  004982  12DE               	iorwf	postinc2,f,c
  3899  004984  0E00               	movlw	0
  3900  004986  12DD               	iorwf	postdec2,f,c
  3901                           
  3902                           ; BSR set to: 0
  3903  004988  C064  FFD9         	movff	frexp@eptr,fsr2l
  3904  00498C  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  3905  004990  0E82               	movlw	130
  3906  004992  26DE               	addwf	postinc2,f,c
  3907  004994  0EFF               	movlw	255
  3908  004996  22DD               	addwfc	postdec2,f,c
  3909                           
  3910                           ; BSR set to: 0
  3911  004998  8163               	bsf	(frexp@value+3)& (0+255),0,b
  3912  00499A  8363               	bsf	(frexp@value+3)& (0+255),1,b
  3913  00499C  8563               	bsf	(frexp@value+3)& (0+255),2,b
  3914  00499E  8763               	bsf	(frexp@value+3)& (0+255),3,b
  3915  0049A0  8963               	bsf	(frexp@value+3)& (0+255),4,b
  3916  0049A2  8B63               	bsf	(frexp@value+3)& (0+255),5,b
  3917  0049A4  9D63               	bcf	(frexp@value+3)& (0+255),6,b
  3918                           
  3919                           ; BSR set to: 0
  3920  0049A6  0100               	movlb	0	; () banked
  3921  0049A8  9F62               	bcf	(frexp@value+2)& (0+255),7,b
  3922                           
  3923                           ; BSR set to: 0
  3924  0049AA  C060  F060         	movff	frexp@value,?_frexp
  3925  0049AE  C061  F061         	movff	frexp@value+1,?_frexp+1
  3926  0049B2  C062  F062         	movff	frexp@value+2,?_frexp+2
  3927  0049B6  C063  F063         	movff	frexp@value+3,?_frexp+3
  3928  0049BA  0012               	return	
  3929                           
  3930                           ; BSR set to: 0
  3931                           
  3932                           ; BSR set to: 0
  3933  0049BC  0012               	return		;funcret
  3934  0049BE                     __end_of_frexp:
  3935                           	opt stack 0
  3936                           tblptru	equ	0xFF8
  3937                           tblptrh	equ	0xFF7
  3938                           tblptrl	equ	0xFF6
  3939                           tablat	equ	0xFF5
  3940                           postinc0	equ	0xFEE
  3941                           wreg	equ	0xFE8
  3942                           postinc2	equ	0xFDE
  3943                           postdec2	equ	0xFDD
  3944                           fsr2h	equ	0xFDA
  3945                           fsr2l	equ	0xFD9
  3946                           status	equ	0xFD8
  3947                           
  3948 ;; *************** function ___fltol *****************
  3949 ;; Defined at:
  3950 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fltol.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  f1              4   42[BANK0 ] PTR int 
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  exp1            1   51[BANK0 ] unsigned char 
  3955 ;;  sign1           1   50[BANK0 ] unsigned char 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  4   42[BANK0 ] long 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3965 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3966 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3967 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3968 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3969 ;;Total ram usage:       10 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    2
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_rampe
  3976 ;;		_pow
  3977 ;;		_exp
  3978 ;;		_floor
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text9
  3983  00450C                     __ptext9:
  3984                           	opt stack 0
  3985  00450C                     ___fltol:
  3986                           	opt stack 24
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;incstack = 0
  3990  00450C  0100               	movlb	0	; () banked
  3991  00450E  358C               	rlcf	(___fltol@f1+2)& (0+255),w,b
  3992  004510  358D               	rlcf	(___fltol@f1+3)& (0+255),w,b
  3993  004512  0100               	movlb	0	; () banked
  3994  004514  6F93               	movwf	___fltol@exp1& (0+255),b
  3995  004516  0100               	movlb	0	; () banked
  3996  004518  5193               	movf	___fltol@exp1& (0+255),w,b
  3997  00451A  A4D8               	btfss	status,2,c
  3998  00451C  D00A               	goto	l5549
  3999                           
  4000                           ; BSR set to: 0
  4001  00451E  0E00               	movlw	0
  4002  004520  0100               	movlb	0	; () banked
  4003  004522  6F8A               	movwf	?___fltol& (0+255),b
  4004  004524  0E00               	movlw	0
  4005  004526  6F8B               	movwf	(?___fltol+1)& (0+255),b
  4006  004528  0E00               	movlw	0
  4007  00452A  6F8C               	movwf	(?___fltol+2)& (0+255),b
  4008  00452C  0E00               	movlw	0
  4009  00452E  6F8D               	movwf	(?___fltol+3)& (0+255),b
  4010                           
  4011                           ; BSR set to: 0
  4012  004530  0012               	return	
  4013  004532                     l5549:
  4014                           
  4015                           ; BSR set to: 0
  4016  004532  C08A  F08E         	movff	___fltol@f1,??___fltol
  4017  004536  C08B  F08F         	movff	___fltol@f1+1,??___fltol+1
  4018  00453A  C08C  F090         	movff	___fltol@f1+2,??___fltol+2
  4019  00453E  C08D  F091         	movff	___fltol@f1+3,??___fltol+3
  4020  004542  0E20               	movlw	32
  4021  004544  D006               	goto	u6870
  4022  004546                     u6875:
  4023  004546  0100               	movlb	0	; () banked
  4024  004548  90D8               	bcf	status,0,c
  4025  00454A  3391               	rrcf	(??___fltol+3)& (0+255),f,b
  4026  00454C  3390               	rrcf	(??___fltol+2)& (0+255),f,b
  4027  00454E  338F               	rrcf	(??___fltol+1)& (0+255),f,b
  4028  004550  338E               	rrcf	??___fltol& (0+255),f,b
  4029  004552                     u6870:
  4030  004552  2EE8               	decfsz	wreg,f,c
  4031  004554  D7F8               	goto	u6875
  4032  004556  0100               	movlb	0	; () banked
  4033  004558  518E               	movf	??___fltol& (0+255),w,b
  4034  00455A  0100               	movlb	0	; () banked
  4035  00455C  6F92               	movwf	___fltol@sign1& (0+255),b
  4036                           
  4037                           ; BSR set to: 0
  4038  00455E  0100               	movlb	0	; () banked
  4039  004560  8F8C               	bsf	(___fltol@f1+2)& (0+255),7,b
  4040                           
  4041                           ; BSR set to: 0
  4042  004562  0EFF               	movlw	255
  4043  004564  0100               	movlb	0	; () banked
  4044  004566  178A               	andwf	___fltol@f1& (0+255),f,b
  4045  004568  0EFF               	movlw	255
  4046  00456A  178B               	andwf	(___fltol@f1+1)& (0+255),f,b
  4047  00456C  0EFF               	movlw	255
  4048  00456E  178C               	andwf	(___fltol@f1+2)& (0+255),f,b
  4049  004570  0E00               	movlw	0
  4050  004572  178D               	andwf	(___fltol@f1+3)& (0+255),f,b
  4051                           
  4052                           ; BSR set to: 0
  4053  004574  0E96               	movlw	150
  4054  004576  0100               	movlb	0	; () banked
  4055  004578  5F93               	subwf	___fltol@exp1& (0+255),f,b
  4056                           
  4057                           ; BSR set to: 0
  4058  00457A  0100               	movlb	0	; () banked
  4059  00457C  AF93               	btfss	___fltol@exp1& (0+255),7,b
  4060  00457E  D01B               	goto	l5569
  4061                           
  4062                           ; BSR set to: 0
  4063  004580  0100               	movlb	0	; () banked
  4064  004582  5193               	movf	___fltol@exp1& (0+255),w,b
  4065  004584  0A80               	xorlw	128
  4066  004586  0F97               	addlw	151
  4067  004588  B0D8               	btfsc	status,0,c
  4068  00458A  D00B               	goto	l5565
  4069                           
  4070                           ; BSR set to: 0
  4071  00458C  0E00               	movlw	0
  4072  00458E  0100               	movlb	0	; () banked
  4073  004590  6F8A               	movwf	?___fltol& (0+255),b
  4074  004592  0E00               	movlw	0
  4075  004594  6F8B               	movwf	(?___fltol+1)& (0+255),b
  4076  004596  0E00               	movlw	0
  4077  004598  6F8C               	movwf	(?___fltol+2)& (0+255),b
  4078  00459A  0E00               	movlw	0
  4079  00459C  6F8D               	movwf	(?___fltol+3)& (0+255),b
  4080                           
  4081                           ; BSR set to: 0
  4082  00459E  0012               	return	
  4083                           
  4084                           ; BSR set to: 0
  4085  0045A0  D000               	goto	l5565
  4086  0045A2                     l5565:
  4087                           
  4088                           ; BSR set to: 0
  4089  0045A2  0100               	movlb	0	; () banked
  4090  0045A4  90D8               	bcf	status,0,c
  4091  0045A6  338D               	rrcf	(___fltol@f1+3)& (0+255),f,b
  4092  0045A8  338C               	rrcf	(___fltol@f1+2)& (0+255),f,b
  4093  0045AA  338B               	rrcf	(___fltol@f1+1)& (0+255),f,b
  4094  0045AC  338A               	rrcf	___fltol@f1& (0+255),f,b
  4095                           
  4096                           ; BSR set to: 0
  4097  0045AE  0100               	movlb	0	; () banked
  4098  0045B0  3F93               	incfsz	___fltol@exp1& (0+255),f,b
  4099  0045B2  D7F7               	goto	l5565
  4100                           
  4101                           ; BSR set to: 0
  4102  0045B4  D01F               	goto	l5579
  4103  0045B6                     l5569:
  4104                           
  4105                           ; BSR set to: 0
  4106  0045B6  0E1F               	movlw	31
  4107  0045B8  0100               	movlb	0	; () banked
  4108  0045BA  6593               	cpfsgt	___fltol@exp1& (0+255),b
  4109  0045BC  D014               	goto	l5577
  4110                           
  4111                           ; BSR set to: 0
  4112  0045BE  0E00               	movlw	0
  4113  0045C0  0100               	movlb	0	; () banked
  4114  0045C2  6F8A               	movwf	?___fltol& (0+255),b
  4115  0045C4  0E00               	movlw	0
  4116  0045C6  6F8B               	movwf	(?___fltol+1)& (0+255),b
  4117  0045C8  0E00               	movlw	0
  4118  0045CA  6F8C               	movwf	(?___fltol+2)& (0+255),b
  4119  0045CC  0E00               	movlw	0
  4120  0045CE  6F8D               	movwf	(?___fltol+3)& (0+255),b
  4121                           
  4122                           ; BSR set to: 0
  4123  0045D0  0012               	return	
  4124                           
  4125                           ; BSR set to: 0
  4126  0045D2  D009               	goto	l5577
  4127  0045D4                     l5575:
  4128                           
  4129                           ; BSR set to: 0
  4130  0045D4  0100               	movlb	0	; () banked
  4131  0045D6  90D8               	bcf	status,0,c
  4132  0045D8  378A               	rlcf	___fltol@f1& (0+255),f,b
  4133  0045DA  378B               	rlcf	(___fltol@f1+1)& (0+255),f,b
  4134  0045DC  378C               	rlcf	(___fltol@f1+2)& (0+255),f,b
  4135  0045DE  378D               	rlcf	(___fltol@f1+3)& (0+255),f,b
  4136  0045E0  0100               	movlb	0	; () banked
  4137  0045E2  0793               	decf	___fltol@exp1& (0+255),f,b
  4138  0045E4  D000               	goto	l5577
  4139  0045E6                     l5577:
  4140                           
  4141                           ; BSR set to: 0
  4142  0045E6  0100               	movlb	0	; () banked
  4143  0045E8  5193               	movf	___fltol@exp1& (0+255),w,b
  4144  0045EA  0100               	movlb	0	; () banked
  4145  0045EC  B4D8               	btfsc	status,2,c
  4146  0045EE  D002               	goto	l5579
  4147  0045F0  D7F1               	goto	l5575
  4148                           
  4149                           ; BSR set to: 0
  4150  0045F2  D000               	goto	l5579
  4151  0045F4                     l5579:
  4152                           
  4153                           ; BSR set to: 0
  4154  0045F4  0100               	movlb	0	; () banked
  4155  0045F6  5192               	movf	___fltol@sign1& (0+255),w,b
  4156  0045F8  0100               	movlb	0	; () banked
  4157  0045FA  B4D8               	btfsc	status,2,c
  4158  0045FC  D00A               	goto	l5583
  4159                           
  4160                           ; BSR set to: 0
  4161  0045FE  0100               	movlb	0	; () banked
  4162  004600  1F8D               	comf	(___fltol@f1+3)& (0+255),f,b
  4163  004602  1F8C               	comf	(___fltol@f1+2)& (0+255),f,b
  4164  004604  1F8B               	comf	(___fltol@f1+1)& (0+255),f,b
  4165  004606  6D8A               	negf	___fltol@f1& (0+255),b
  4166  004608  0E00               	movlw	0
  4167  00460A  238B               	addwfc	(___fltol@f1+1)& (0+255),f,b
  4168  00460C  238C               	addwfc	(___fltol@f1+2)& (0+255),f,b
  4169  00460E  238D               	addwfc	(___fltol@f1+3)& (0+255),f,b
  4170  004610  D000               	goto	l5583
  4171  004612                     l5583:
  4172                           
  4173                           ; BSR set to: 0
  4174  004612  C08A  F08A         	movff	___fltol@f1,?___fltol
  4175  004616  C08B  F08B         	movff	___fltol@f1+1,?___fltol+1
  4176  00461A  C08C  F08C         	movff	___fltol@f1+2,?___fltol+2
  4177  00461E  C08D  F08D         	movff	___fltol@f1+3,?___fltol+3
  4178  004622  0012               	return	
  4179                           
  4180                           ; BSR set to: 0
  4181                           
  4182                           ; BSR set to: 0
  4183  004624  0012               	return		;funcret
  4184  004626                     __end_of___fltol:
  4185                           	opt stack 0
  4186                           tblptru	equ	0xFF8
  4187                           tblptrh	equ	0xFF7
  4188                           tblptrl	equ	0xFF6
  4189                           tablat	equ	0xFF5
  4190                           postinc0	equ	0xFEE
  4191                           wreg	equ	0xFE8
  4192                           postinc2	equ	0xFDE
  4193                           postdec2	equ	0xFDD
  4194                           fsr2h	equ	0xFDA
  4195                           fsr2l	equ	0xFD9
  4196                           status	equ	0xFD8
  4197                           
  4198 ;; *************** function ___flge *****************
  4199 ;; Defined at:
  4200 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flge.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;  ff1             4    0[BANK0 ] long 
  4203 ;;  ff2             4    4[BANK0 ] long 
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;		None
  4206 ;; Return value:  Size  Location     Type
  4207 ;;		None               void
  4208 ;; Registers used:
  4209 ;;		wreg, status,2, status,0
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4215 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4217 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4218 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4219 ;;Total ram usage:       12 bytes
  4220 ;; Hardware stack levels used:    1
  4221 ;; Hardware stack levels required when called:    2
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		_pow
  4226 ;;		_exp
  4227 ;;		_floor
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text10
  4232  004740                     __ptext10:
  4233                           	opt stack 0
  4234  004740                     ___flge:
  4235                           	opt stack 24
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;incstack = 0
  4239  004740  0100               	movlb	0	; () banked
  4240  004742  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
  4241  004744  D027               	goto	l5533
  4242                           
  4243                           ; BSR set to: 0
  4244  004746  C060  F068         	movff	___flge@ff1,??___flge
  4245  00474A  C061  F069         	movff	___flge@ff1+1,??___flge+1
  4246  00474E  C062  F06A         	movff	___flge@ff1+2,??___flge+2
  4247  004752  C063  F06B         	movff	___flge@ff1+3,??___flge+3
  4248  004756  0100               	movlb	0	; () banked
  4249  004758  1F68               	comf	??___flge& (0+255),f,b
  4250  00475A  1F69               	comf	(??___flge+1)& (0+255),f,b
  4251  00475C  1F6A               	comf	(??___flge+2)& (0+255),f,b
  4252  00475E  1F6B               	comf	(??___flge+3)& (0+255),f,b
  4253  004760  2B68               	incf	??___flge& (0+255),f,b
  4254  004762  0E00               	movlw	0
  4255  004764  2369               	addwfc	(??___flge+1)& (0+255),f,b
  4256  004766  236A               	addwfc	(??___flge+2)& (0+255),f,b
  4257  004768  236B               	addwfc	(??___flge+3)& (0+255),f,b
  4258  00476A  0E00               	movlw	0
  4259  00476C  0100               	movlb	0	; () banked
  4260  00476E  2568               	addwf	??___flge& (0+255),w,b
  4261  004770  0100               	movlb	0	; () banked
  4262  004772  6F60               	movwf	___flge@ff1& (0+255),b
  4263  004774  0E00               	movlw	0
  4264  004776  0100               	movlb	0	; () banked
  4265  004778  2169               	addwfc	(??___flge+1)& (0+255),w,b
  4266  00477A  0100               	movlb	0	; () banked
  4267  00477C  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  4268  00477E  0E00               	movlw	0
  4269  004780  0100               	movlb	0	; () banked
  4270  004782  216A               	addwfc	(??___flge+2)& (0+255),w,b
  4271  004784  0100               	movlb	0	; () banked
  4272  004786  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  4273  004788  0E80               	movlw	128
  4274  00478A  0100               	movlb	0	; () banked
  4275  00478C  216B               	addwfc	(??___flge+3)& (0+255),w,b
  4276  00478E  0100               	movlb	0	; () banked
  4277  004790  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  4278  004792  D000               	goto	l5533
  4279  004794                     l5533:
  4280                           
  4281                           ; BSR set to: 0
  4282  004794  0100               	movlb	0	; () banked
  4283  004796  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
  4284  004798  D026               	goto	l1107
  4285                           
  4286                           ; BSR set to: 0
  4287  00479A  C064  F068         	movff	___flge@ff2,??___flge
  4288  00479E  C065  F069         	movff	___flge@ff2+1,??___flge+1
  4289  0047A2  C066  F06A         	movff	___flge@ff2+2,??___flge+2
  4290  0047A6  C067  F06B         	movff	___flge@ff2+3,??___flge+3
  4291  0047AA  0100               	movlb	0	; () banked
  4292  0047AC  1F68               	comf	??___flge& (0+255),f,b
  4293  0047AE  1F69               	comf	(??___flge+1)& (0+255),f,b
  4294  0047B0  1F6A               	comf	(??___flge+2)& (0+255),f,b
  4295  0047B2  1F6B               	comf	(??___flge+3)& (0+255),f,b
  4296  0047B4  2B68               	incf	??___flge& (0+255),f,b
  4297  0047B6  0E00               	movlw	0
  4298  0047B8  2369               	addwfc	(??___flge+1)& (0+255),f,b
  4299  0047BA  236A               	addwfc	(??___flge+2)& (0+255),f,b
  4300  0047BC  236B               	addwfc	(??___flge+3)& (0+255),f,b
  4301  0047BE  0E00               	movlw	0
  4302  0047C0  0100               	movlb	0	; () banked
  4303  0047C2  2568               	addwf	??___flge& (0+255),w,b
  4304  0047C4  0100               	movlb	0	; () banked
  4305  0047C6  6F64               	movwf	___flge@ff2& (0+255),b
  4306  0047C8  0E00               	movlw	0
  4307  0047CA  0100               	movlb	0	; () banked
  4308  0047CC  2169               	addwfc	(??___flge+1)& (0+255),w,b
  4309  0047CE  0100               	movlb	0	; () banked
  4310  0047D0  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  4311  0047D2  0E00               	movlw	0
  4312  0047D4  0100               	movlb	0	; () banked
  4313  0047D6  216A               	addwfc	(??___flge+2)& (0+255),w,b
  4314  0047D8  0100               	movlb	0	; () banked
  4315  0047DA  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  4316  0047DC  0E80               	movlw	128
  4317  0047DE  0100               	movlb	0	; () banked
  4318  0047E0  216B               	addwfc	(??___flge+3)& (0+255),w,b
  4319  0047E2  0100               	movlb	0	; () banked
  4320  0047E4  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  4321  0047E6                     l1107:
  4322                           
  4323                           ; BSR set to: 0
  4324  0047E6  0E00               	movlw	0
  4325  0047E8  0100               	movlb	0	; () banked
  4326  0047EA  1B60               	xorwf	___flge@ff1& (0+255),f,b
  4327  0047EC  0E00               	movlw	0
  4328  0047EE  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
  4329  0047F0  0E00               	movlw	0
  4330  0047F2  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
  4331  0047F4  0E80               	movlw	128
  4332  0047F6  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
  4333  0047F8  0E00               	movlw	0
  4334  0047FA  0100               	movlb	0	; () banked
  4335  0047FC  1B64               	xorwf	___flge@ff2& (0+255),f,b
  4336  0047FE  0E00               	movlw	0
  4337  004800  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
  4338  004802  0E00               	movlw	0
  4339  004804  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
  4340  004806  0E80               	movlw	128
  4341  004808  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
  4342  00480A  0100               	movlb	0	; () banked
  4343  00480C  5164               	movf	___flge@ff2& (0+255),w,b
  4344  00480E  0100               	movlb	0	; () banked
  4345  004810  5D60               	subwf	___flge@ff1& (0+255),w,b
  4346  004812  0100               	movlb	0	; () banked
  4347  004814  5165               	movf	(___flge@ff2+1)& (0+255),w,b
  4348  004816  0100               	movlb	0	; () banked
  4349  004818  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
  4350  00481A  0100               	movlb	0	; () banked
  4351  00481C  5166               	movf	(___flge@ff2+2)& (0+255),w,b
  4352  00481E  0100               	movlb	0	; () banked
  4353  004820  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
  4354  004822  0100               	movlb	0	; () banked
  4355  004824  5167               	movf	(___flge@ff2+3)& (0+255),w,b
  4356  004826  0100               	movlb	0	; () banked
  4357  004828  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
  4358  00482A  B0D8               	btfsc	status,0,c
  4359  00482C  D002               	goto	l5539
  4360                           
  4361                           ; BSR set to: 0
  4362  00482E  90D8               	bcf	status,0,c
  4363  004830  0012               	return	
  4364  004832                     l5539:
  4365                           
  4366                           ; BSR set to: 0
  4367  004832  80D8               	bsf	status,0,c
  4368                           
  4369                           ; BSR set to: 0
  4370  004834  0012               	return	
  4371                           
  4372                           ; BSR set to: 0
  4373                           
  4374                           ; BSR set to: 0
  4375  004836  0012               	return		;funcret
  4376  004838                     __end_of___flge:
  4377                           	opt stack 0
  4378                           tblptru	equ	0xFF8
  4379                           tblptrh	equ	0xFF7
  4380                           tblptrl	equ	0xFF6
  4381                           tablat	equ	0xFF5
  4382                           postinc0	equ	0xFEE
  4383                           wreg	equ	0xFE8
  4384                           postinc2	equ	0xFDE
  4385                           postdec2	equ	0xFDD
  4386                           fsr2h	equ	0xFDA
  4387                           fsr2l	equ	0xFD9
  4388                           status	equ	0xFD8
  4389                           
  4390 ;; *************** function ___altofl *****************
  4391 ;; Defined at:
  4392 ;;		line 36 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altofl.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  c               4   52[BANK0 ] long 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;  sign            1   56[BANK0 ] unsigned char 
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  4   52[BANK0 ] unsigned char 
  4399 ;; Registers used:
  4400 ;;		wreg, status,2, status,0, cstack
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4406 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4407 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4409 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4410 ;;Total ram usage:        5 bytes
  4411 ;; Hardware stack levels used:    1
  4412 ;; Hardware stack levels required when called:    3
  4413 ;; This function calls:
  4414 ;;		___flpack
  4415 ;; This function is called by:
  4416 ;;		_floor
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text11
  4421  004C44                     __ptext11:
  4422                           	opt stack 0
  4423  004C44                     ___altofl:
  4424                           	opt stack 23
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;incstack = 0
  4428  004C44  0E00               	movlw	0
  4429  004C46  0100               	movlb	0	; () banked
  4430  004C48  6F98               	movwf	___altofl@sign& (0+255),b
  4431                           
  4432                           ; BSR set to: 0
  4433  004C4A  0100               	movlb	0	; () banked
  4434  004C4C  AF97               	btfss	(___altofl@c+3)& (0+255),7,b
  4435  004C4E  D00D               	goto	l5407
  4436                           
  4437                           ; BSR set to: 0
  4438  004C50  0100               	movlb	0	; () banked
  4439  004C52  1F97               	comf	(___altofl@c+3)& (0+255),f,b
  4440  004C54  1F96               	comf	(___altofl@c+2)& (0+255),f,b
  4441  004C56  1F95               	comf	(___altofl@c+1)& (0+255),f,b
  4442  004C58  6D94               	negf	___altofl@c& (0+255),b
  4443  004C5A  0E00               	movlw	0
  4444  004C5C  2395               	addwfc	(___altofl@c+1)& (0+255),f,b
  4445  004C5E  2396               	addwfc	(___altofl@c+2)& (0+255),f,b
  4446  004C60  2397               	addwfc	(___altofl@c+3)& (0+255),f,b
  4447                           
  4448                           ; BSR set to: 0
  4449  004C62  0E01               	movlw	1
  4450  004C64  0100               	movlb	0	; () banked
  4451  004C66  6F98               	movwf	___altofl@sign& (0+255),b
  4452  004C68  D000               	goto	l5407
  4453  004C6A                     l5407:
  4454                           
  4455                           ; BSR set to: 0
  4456  004C6A  C094  F060         	movff	___altofl@c,___flpack@arg
  4457  004C6E  C095  F061         	movff	___altofl@c+1,___flpack@arg+1
  4458  004C72  C096  F062         	movff	___altofl@c+2,___flpack@arg+2
  4459  004C76  C097  F063         	movff	___altofl@c+3,___flpack@arg+3
  4460  004C7A  0E96               	movlw	150
  4461  004C7C  0100               	movlb	0	; () banked
  4462  004C7E  6F64               	movwf	___flpack@exp& (0+255),b
  4463  004C80  C098  F065         	movff	___altofl@sign,___flpack@sign
  4464  004C84  EC5E  F01D         	call	___flpack	;wreg free
  4465  004C88  C060  F094         	movff	?___flpack,?___altofl
  4466  004C8C  C061  F095         	movff	?___flpack+1,?___altofl+1
  4467  004C90  C062  F096         	movff	?___flpack+2,?___altofl+2
  4468  004C94  C063  F097         	movff	?___flpack+3,?___altofl+3
  4469  004C98  0012               	return	
  4470  004C9A  0012               	return		;funcret
  4471  004C9C                     __end_of___altofl:
  4472                           	opt stack 0
  4473                           tblptru	equ	0xFF8
  4474                           tblptrh	equ	0xFF7
  4475                           tblptrl	equ	0xFF6
  4476                           tablat	equ	0xFF5
  4477                           postinc0	equ	0xFEE
  4478                           wreg	equ	0xFE8
  4479                           postinc2	equ	0xFDE
  4480                           postdec2	equ	0xFDD
  4481                           fsr2h	equ	0xFDA
  4482                           fsr2l	equ	0xFD9
  4483                           status	equ	0xFD8
  4484                           
  4485 ;; *************** function _eval_poly *****************
  4486 ;; Defined at:
  4487 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\evalpoly.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  x               4   42[BANK0 ] unsigned char 
  4490 ;;  d               2   46[BANK0 ] PTR const 
  4491 ;;		 -> log@coeff(36), exp@coeff(40), 
  4492 ;;  n               2   48[BANK0 ] int 
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;  res             4   54[BANK0 ] int 
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  4   42[BANK0 ] int 
  4497 ;; Registers used:
  4498 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4504 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4505 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4506 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4507 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;Total ram usage:       16 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    4
  4511 ;; This function calls:
  4512 ;;		___fladd
  4513 ;;		___flmul
  4514 ;; This function is called by:
  4515 ;;		_exp
  4516 ;;		_log
  4517 ;; This function uses a non-reentrant model
  4518 ;;
  4519                           
  4520                           	psect	text12
  4521  004626                     __ptext12:
  4522                           	opt stack 0
  4523  004626                     _eval_poly:
  4524                           	opt stack 23
  4525                           
  4526                           ;incstack = 0
  4527  004626  C090  F092         	movff	eval_poly@n,??_eval_poly
  4528  00462A  C091  F093         	movff	eval_poly@n+1,??_eval_poly+1
  4529  00462E  0100               	movlb	0	; () banked
  4530  004630  90D8               	bcf	status,0,c
  4531  004632  3792               	rlcf	??_eval_poly& (0+255),f,b
  4532  004634  3793               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4533  004636  0100               	movlb	0	; () banked
  4534  004638  90D8               	bcf	status,0,c
  4535  00463A  3792               	rlcf	??_eval_poly& (0+255),f,b
  4536  00463C  3793               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4537  00463E  C08E  F094         	movff	eval_poly@d,??_eval_poly+2
  4538  004642  C08F  F095         	movff	eval_poly@d+1,??_eval_poly+3
  4539  004646  0100               	movlb	0	; () banked
  4540  004648  5192               	movf	??_eval_poly& (0+255),w,b
  4541  00464A  0100               	movlb	0	; () banked
  4542  00464C  2794               	addwf	(??_eval_poly+2)& (0+255),f,b
  4543  00464E  0100               	movlb	0	; () banked
  4544  004650  5193               	movf	(??_eval_poly+1)& (0+255),w,b
  4545  004652  0100               	movlb	0	; () banked
  4546  004654  2395               	addwfc	(??_eval_poly+3)& (0+255),f,b
  4547  004656  C094  FFF6         	movff	??_eval_poly+2,tblptrl
  4548  00465A  C095  FFF7         	movff	??_eval_poly+3,tblptrh
  4549  00465E                     	if	0	;tblptru may be non-zero
  4550  00465E                     	endif
  4551  00465E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4552  00465E  0E00               	movlw	low (__mediumconst shr (0+16))
  4553  004660  6EF8               	movwf	tblptru,c
  4554  004662                     	endif
  4555  004662  0009               	tblrd		*+
  4556  004664  CFF5 F096          	movff	tablat,eval_poly@res
  4557  004668  0009               	tblrd		*+
  4558  00466A  CFF5 F097          	movff	tablat,eval_poly@res+1
  4559  00466E  0009               	tblrd		*+
  4560  004670  CFF5 F098          	movff	tablat,eval_poly@res+2
  4561  004674  000A               	tblrd		*-
  4562  004676  CFF5 F099          	movff	tablat,eval_poly@res+3
  4563  00467A  D053               	goto	l5701
  4564  00467C                     l5699:
  4565                           
  4566                           ; BSR set to: 0
  4567  00467C  C096  F073         	movff	eval_poly@res,___flmul@f2
  4568  004680  C097  F074         	movff	eval_poly@res+1,___flmul@f2+1
  4569  004684  C098  F075         	movff	eval_poly@res+2,___flmul@f2+2
  4570  004688  C099  F076         	movff	eval_poly@res+3,___flmul@f2+3
  4571  00468C  C08A  F06F         	movff	eval_poly@x,___flmul@f1
  4572  004690  C08B  F070         	movff	eval_poly@x+1,___flmul@f1+1
  4573  004694  C08C  F071         	movff	eval_poly@x+2,___flmul@f1+2
  4574  004698  C08D  F072         	movff	eval_poly@x+3,___flmul@f1+3
  4575  00469C  ECDD  F01E         	call	___flmul	;wreg free
  4576  0046A0  C06F  F07E         	movff	?___flmul,___fladd@f1
  4577  0046A4  C070  F07F         	movff	?___flmul+1,___fladd@f1+1
  4578  0046A8  C071  F080         	movff	?___flmul+2,___fladd@f1+2
  4579  0046AC  C072  F081         	movff	?___flmul+3,___fladd@f1+3
  4580  0046B0  0100               	movlb	0	; () banked
  4581  0046B2  0790               	decf	eval_poly@n& (0+255),f,b
  4582  0046B4  A0D8               	btfss	status,0,c
  4583  0046B6  0791               	decf	(eval_poly@n+1)& (0+255),f,b
  4584  0046B8  C090  F092         	movff	eval_poly@n,??_eval_poly
  4585  0046BC  C091  F093         	movff	eval_poly@n+1,??_eval_poly+1
  4586  0046C0  0100               	movlb	0	; () banked
  4587  0046C2  90D8               	bcf	status,0,c
  4588  0046C4  3792               	rlcf	??_eval_poly& (0+255),f,b
  4589  0046C6  3793               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4590  0046C8  0100               	movlb	0	; () banked
  4591  0046CA  90D8               	bcf	status,0,c
  4592  0046CC  3792               	rlcf	??_eval_poly& (0+255),f,b
  4593  0046CE  3793               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4594  0046D0  C08E  F094         	movff	eval_poly@d,??_eval_poly+2
  4595  0046D4  C08F  F095         	movff	eval_poly@d+1,??_eval_poly+3
  4596  0046D8  0100               	movlb	0	; () banked
  4597  0046DA  5192               	movf	??_eval_poly& (0+255),w,b
  4598  0046DC  0100               	movlb	0	; () banked
  4599  0046DE  2794               	addwf	(??_eval_poly+2)& (0+255),f,b
  4600  0046E0  0100               	movlb	0	; () banked
  4601  0046E2  5193               	movf	(??_eval_poly+1)& (0+255),w,b
  4602  0046E4  0100               	movlb	0	; () banked
  4603  0046E6  2395               	addwfc	(??_eval_poly+3)& (0+255),f,b
  4604  0046E8  C094  FFF6         	movff	??_eval_poly+2,tblptrl
  4605  0046EC  C095  FFF7         	movff	??_eval_poly+3,tblptrh
  4606  0046F0                     	if	0	;tblptru may be non-zero
  4607  0046F0                     	endif
  4608  0046F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4609  0046F0  0E00               	movlw	low (__mediumconst shr (0+16))
  4610  0046F2  6EF8               	movwf	tblptru,c
  4611  0046F4                     	endif
  4612  0046F4  0009               	tblrd		*+
  4613  0046F6  CFF5 F082          	movff	tablat,___fladd@f2
  4614  0046FA  0009               	tblrd		*+
  4615  0046FC  CFF5 F083          	movff	tablat,___fladd@f2+1
  4616  004700  0009               	tblrd		*+
  4617  004702  CFF5 F084          	movff	tablat,___fladd@f2+2
  4618  004706  000A               	tblrd		*-
  4619  004708  CFF5 F085          	movff	tablat,___fladd@f2+3
  4620  00470C  EC41  F01A         	call	___fladd	;wreg free
  4621  004710  C07E  F096         	movff	?___fladd,eval_poly@res
  4622  004714  C07F  F097         	movff	?___fladd+1,eval_poly@res+1
  4623  004718  C080  F098         	movff	?___fladd+2,eval_poly@res+2
  4624  00471C  C081  F099         	movff	?___fladd+3,eval_poly@res+3
  4625  004720  D000               	goto	l5701
  4626  004722                     l5701:
  4627  004722  0100               	movlb	0	; () banked
  4628  004724  5190               	movf	eval_poly@n& (0+255),w,b
  4629  004726  0100               	movlb	0	; () banked
  4630  004728  1191               	iorwf	(eval_poly@n+1)& (0+255),w,b
  4631  00472A  A4D8               	btfss	status,2,c
  4632  00472C  D7A7               	goto	l5699
  4633                           
  4634                           ; BSR set to: 0
  4635  00472E  C096  F08A         	movff	eval_poly@res,?_eval_poly
  4636  004732  C097  F08B         	movff	eval_poly@res+1,?_eval_poly+1
  4637  004736  C098  F08C         	movff	eval_poly@res+2,?_eval_poly+2
  4638  00473A  C099  F08D         	movff	eval_poly@res+3,?_eval_poly+3
  4639                           
  4640                           ; BSR set to: 0
  4641  00473E  0012               	return		;funcret
  4642  004740                     __end_of_eval_poly:
  4643                           	opt stack 0
  4644                           tblptru	equ	0xFF8
  4645                           tblptrh	equ	0xFF7
  4646                           tblptrl	equ	0xFF6
  4647                           tablat	equ	0xFF5
  4648                           postinc0	equ	0xFEE
  4649                           wreg	equ	0xFE8
  4650                           postinc2	equ	0xFDE
  4651                           postdec2	equ	0xFDD
  4652                           fsr2h	equ	0xFDA
  4653                           fsr2l	equ	0xFD9
  4654                           status	equ	0xFD8
  4655                           
  4656 ;; *************** function ___flmul *****************
  4657 ;; Defined at:
  4658 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flmul.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  f1              4   15[BANK0 ] int 
  4661 ;;  f2              4   19[BANK0 ] int 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  f3_as_produc    4   24[BANK0 ] unsigned long 
  4664 ;;  sign            1   29[BANK0 ] unsigned char 
  4665 ;;  cntr            1   28[BANK0 ] unsigned char 
  4666 ;;  exp             1   23[BANK0 ] unsigned char 
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  4   15[BANK0 ] unsigned char 
  4669 ;; Registers used:
  4670 ;;		wreg, status,2, status,0, cstack
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4676 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4677 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4679 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4680 ;;Total ram usage:       15 bytes
  4681 ;; Hardware stack levels used:    1
  4682 ;; Hardware stack levels required when called:    3
  4683 ;; This function calls:
  4684 ;;		___flpack
  4685 ;; This function is called by:
  4686 ;;		_pow
  4687 ;;		_exp
  4688 ;;		_log
  4689 ;;		_eval_poly
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text13
  4694  003DBA                     __ptext13:
  4695                           	opt stack 0
  4696  003DBA                     ___flmul:
  4697                           	opt stack 23
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;incstack = 0
  4701  003DBA  0100               	movlb	0	; () banked
  4702  003DBC  3571               	rlcf	(___flmul@f1+2)& (0+255),w,b
  4703  003DBE  3572               	rlcf	(___flmul@f1+3)& (0+255),w,b
  4704  003DC0  0100               	movlb	0	; () banked
  4705  003DC2  6F77               	movwf	___flmul@exp& (0+255),b
  4706  003DC4  0100               	movlb	0	; () banked
  4707  003DC6  5177               	movf	___flmul@exp& (0+255),w,b
  4708  003DC8  A4D8               	btfss	status,2,c
  4709  003DCA  D00A               	goto	l5485
  4710                           
  4711                           ; BSR set to: 0
  4712  003DCC  0E00               	movlw	0
  4713  003DCE  0100               	movlb	0	; () banked
  4714  003DD0  6F6F               	movwf	?___flmul& (0+255),b
  4715  003DD2  0E00               	movlw	0
  4716  003DD4  6F70               	movwf	(?___flmul+1)& (0+255),b
  4717  003DD6  0E00               	movlw	0
  4718  003DD8  6F71               	movwf	(?___flmul+2)& (0+255),b
  4719  003DDA  0E00               	movlw	0
  4720  003DDC  6F72               	movwf	(?___flmul+3)& (0+255),b
  4721                           
  4722                           ; BSR set to: 0
  4723  003DDE  0012               	return	
  4724  003DE0                     l5485:
  4725                           
  4726                           ; BSR set to: 0
  4727  003DE0  0100               	movlb	0	; () banked
  4728  003DE2  3575               	rlcf	(___flmul@f2+2)& (0+255),w,b
  4729  003DE4  3576               	rlcf	(___flmul@f2+3)& (0+255),w,b
  4730  003DE6  0100               	movlb	0	; () banked
  4731  003DE8  6F7D               	movwf	___flmul@sign& (0+255),b
  4732  003DEA  0100               	movlb	0	; () banked
  4733  003DEC  517D               	movf	___flmul@sign& (0+255),w,b
  4734  003DEE  A4D8               	btfss	status,2,c
  4735  003DF0  D00A               	goto	l5491
  4736                           
  4737                           ; BSR set to: 0
  4738  003DF2  0E00               	movlw	0
  4739  003DF4  0100               	movlb	0	; () banked
  4740  003DF6  6F6F               	movwf	?___flmul& (0+255),b
  4741  003DF8  0E00               	movlw	0
  4742  003DFA  6F70               	movwf	(?___flmul+1)& (0+255),b
  4743  003DFC  0E00               	movlw	0
  4744  003DFE  6F71               	movwf	(?___flmul+2)& (0+255),b
  4745  003E00  0E00               	movlw	0
  4746  003E02  6F72               	movwf	(?___flmul+3)& (0+255),b
  4747                           
  4748                           ; BSR set to: 0
  4749  003E04  0012               	return	
  4750  003E06                     l5491:
  4751                           
  4752                           ; BSR set to: 0
  4753  003E06  0100               	movlb	0	; () banked
  4754  003E08  517D               	movf	___flmul@sign& (0+255),w,b
  4755  003E0A  0F7B               	addlw	123
  4756  003E0C  0100               	movlb	0	; () banked
  4757  003E0E  2777               	addwf	___flmul@exp& (0+255),f,b
  4758                           
  4759                           ; BSR set to: 0
  4760  003E10  C072  F07D         	movff	___flmul@f1+3,___flmul@sign
  4761  003E14  0100               	movlb	0	; () banked
  4762  003E16  5176               	movf	(___flmul@f2+3)& (0+255),w,b
  4763  003E18  0100               	movlb	0	; () banked
  4764  003E1A  1B7D               	xorwf	___flmul@sign& (0+255),f,b
  4765  003E1C  0E80               	movlw	128
  4766  003E1E  0100               	movlb	0	; () banked
  4767  003E20  177D               	andwf	___flmul@sign& (0+255),f,b
  4768                           
  4769                           ; BSR set to: 0
  4770  003E22  0100               	movlb	0	; () banked
  4771  003E24  8F71               	bsf	(___flmul@f1+2)& (0+255),7,b
  4772                           
  4773                           ; BSR set to: 0
  4774  003E26  0100               	movlb	0	; () banked
  4775  003E28  8F75               	bsf	(___flmul@f2+2)& (0+255),7,b
  4776  003E2A  0EFF               	movlw	255
  4777  003E2C  0100               	movlb	0	; () banked
  4778  003E2E  1773               	andwf	___flmul@f2& (0+255),f,b
  4779  003E30  0EFF               	movlw	255
  4780  003E32  1774               	andwf	(___flmul@f2+1)& (0+255),f,b
  4781  003E34  0EFF               	movlw	255
  4782  003E36  1775               	andwf	(___flmul@f2+2)& (0+255),f,b
  4783  003E38  0E00               	movlw	0
  4784  003E3A  1776               	andwf	(___flmul@f2+3)& (0+255),f,b
  4785                           
  4786                           ; BSR set to: 0
  4787  003E3C  0E00               	movlw	0
  4788  003E3E  0100               	movlb	0	; () banked
  4789  003E40  6F78               	movwf	___flmul@f3_as_product& (0+255),b
  4790  003E42  0E00               	movlw	0
  4791  003E44  6F79               	movwf	(___flmul@f3_as_product+1)& (0+255),b
  4792  003E46  0E00               	movlw	0
  4793  003E48  6F7A               	movwf	(___flmul@f3_as_product+2)& (0+255),b
  4794  003E4A  0E00               	movlw	0
  4795  003E4C  6F7B               	movwf	(___flmul@f3_as_product+3)& (0+255),b
  4796                           
  4797                           ; BSR set to: 0
  4798  003E4E  0E07               	movlw	7
  4799  003E50  0100               	movlb	0	; () banked
  4800  003E52  6F7C               	movwf	___flmul@cntr& (0+255),b
  4801  003E54  D000               	goto	l5503
  4802  003E56                     l5503:
  4803                           
  4804                           ; BSR set to: 0
  4805  003E56  0100               	movlb	0	; () banked
  4806  003E58  A16F               	btfss	___flmul@f1& (0+255),0,b
  4807  003E5A  D011               	goto	l5507
  4808                           
  4809                           ; BSR set to: 0
  4810  003E5C  0100               	movlb	0	; () banked
  4811  003E5E  5173               	movf	___flmul@f2& (0+255),w,b
  4812  003E60  0100               	movlb	0	; () banked
  4813  003E62  2778               	addwf	___flmul@f3_as_product& (0+255),f,b
  4814  003E64  0100               	movlb	0	; () banked
  4815  003E66  5174               	movf	(___flmul@f2+1)& (0+255),w,b
  4816  003E68  0100               	movlb	0	; () banked
  4817  003E6A  2379               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
  4818  003E6C  0100               	movlb	0	; () banked
  4819  003E6E  5175               	movf	(___flmul@f2+2)& (0+255),w,b
  4820  003E70  0100               	movlb	0	; () banked
  4821  003E72  237A               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
  4822  003E74  0100               	movlb	0	; () banked
  4823  003E76  5176               	movf	(___flmul@f2+3)& (0+255),w,b
  4824  003E78  0100               	movlb	0	; () banked
  4825  003E7A  237B               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
  4826  003E7C  D000               	goto	l5507
  4827  003E7E                     l5507:
  4828                           
  4829                           ; BSR set to: 0
  4830  003E7E  0100               	movlb	0	; () banked
  4831  003E80  90D8               	bcf	status,0,c
  4832  003E82  3372               	rrcf	(___flmul@f1+3)& (0+255),f,b
  4833  003E84  3371               	rrcf	(___flmul@f1+2)& (0+255),f,b
  4834  003E86  3370               	rrcf	(___flmul@f1+1)& (0+255),f,b
  4835  003E88  336F               	rrcf	___flmul@f1& (0+255),f,b
  4836                           
  4837                           ; BSR set to: 0
  4838  003E8A  0100               	movlb	0	; () banked
  4839  003E8C  90D8               	bcf	status,0,c
  4840  003E8E  3773               	rlcf	___flmul@f2& (0+255),f,b
  4841  003E90  3774               	rlcf	(___flmul@f2+1)& (0+255),f,b
  4842  003E92  3775               	rlcf	(___flmul@f2+2)& (0+255),f,b
  4843  003E94  3776               	rlcf	(___flmul@f2+3)& (0+255),f,b
  4844                           
  4845                           ; BSR set to: 0
  4846  003E96  0100               	movlb	0	; () banked
  4847  003E98  2F7C               	decfsz	___flmul@cntr& (0+255),f,b
  4848  003E9A  D7DD               	goto	l5503
  4849  003E9C  D000               	goto	l5513
  4850  003E9E                     l5513:
  4851                           
  4852                           ; BSR set to: 0
  4853  003E9E  0E11               	movlw	17
  4854  003EA0  0100               	movlb	0	; () banked
  4855  003EA2  6F7C               	movwf	___flmul@cntr& (0+255),b
  4856  003EA4  D000               	goto	l5515
  4857  003EA6                     l5515:
  4858                           
  4859                           ; BSR set to: 0
  4860  003EA6  0100               	movlb	0	; () banked
  4861  003EA8  A16F               	btfss	___flmul@f1& (0+255),0,b
  4862  003EAA  D011               	goto	l5519
  4863                           
  4864                           ; BSR set to: 0
  4865  003EAC  0100               	movlb	0	; () banked
  4866  003EAE  5173               	movf	___flmul@f2& (0+255),w,b
  4867  003EB0  0100               	movlb	0	; () banked
  4868  003EB2  2778               	addwf	___flmul@f3_as_product& (0+255),f,b
  4869  003EB4  0100               	movlb	0	; () banked
  4870  003EB6  5174               	movf	(___flmul@f2+1)& (0+255),w,b
  4871  003EB8  0100               	movlb	0	; () banked
  4872  003EBA  2379               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
  4873  003EBC  0100               	movlb	0	; () banked
  4874  003EBE  5175               	movf	(___flmul@f2+2)& (0+255),w,b
  4875  003EC0  0100               	movlb	0	; () banked
  4876  003EC2  237A               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
  4877  003EC4  0100               	movlb	0	; () banked
  4878  003EC6  5176               	movf	(___flmul@f2+3)& (0+255),w,b
  4879  003EC8  0100               	movlb	0	; () banked
  4880  003ECA  237B               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
  4881  003ECC  D000               	goto	l5519
  4882  003ECE                     l5519:
  4883                           
  4884                           ; BSR set to: 0
  4885  003ECE  0100               	movlb	0	; () banked
  4886  003ED0  90D8               	bcf	status,0,c
  4887  003ED2  3372               	rrcf	(___flmul@f1+3)& (0+255),f,b
  4888  003ED4  3371               	rrcf	(___flmul@f1+2)& (0+255),f,b
  4889  003ED6  3370               	rrcf	(___flmul@f1+1)& (0+255),f,b
  4890  003ED8  336F               	rrcf	___flmul@f1& (0+255),f,b
  4891                           
  4892                           ; BSR set to: 0
  4893  003EDA  0100               	movlb	0	; () banked
  4894  003EDC  90D8               	bcf	status,0,c
  4895  003EDE  337B               	rrcf	(___flmul@f3_as_product+3)& (0+255),f,b
  4896  003EE0  337A               	rrcf	(___flmul@f3_as_product+2)& (0+255),f,b
  4897  003EE2  3379               	rrcf	(___flmul@f3_as_product+1)& (0+255),f,b
  4898  003EE4  3378               	rrcf	___flmul@f3_as_product& (0+255),f,b
  4899                           
  4900                           ; BSR set to: 0
  4901  003EE6  0100               	movlb	0	; () banked
  4902  003EE8  2F7C               	decfsz	___flmul@cntr& (0+255),f,b
  4903  003EEA  D7DD               	goto	l5515
  4904  003EEC  D000               	goto	l5525
  4905  003EEE                     l5525:
  4906                           
  4907                           ; BSR set to: 0
  4908  003EEE  C078  F060         	movff	___flmul@f3_as_product,___flpack@arg
  4909  003EF2  C079  F061         	movff	___flmul@f3_as_product+1,___flpack@arg+1
  4910  003EF6  C07A  F062         	movff	___flmul@f3_as_product+2,___flpack@arg+2
  4911  003EFA  C07B  F063         	movff	___flmul@f3_as_product+3,___flpack@arg+3
  4912  003EFE  C077  F064         	movff	___flmul@exp,___flpack@exp
  4913  003F02  C07D  F065         	movff	___flmul@sign,___flpack@sign
  4914  003F06  EC5E  F01D         	call	___flpack	;wreg free
  4915  003F0A  C060  F06F         	movff	?___flpack,?___flmul
  4916  003F0E  C061  F070         	movff	?___flpack+1,?___flmul+1
  4917  003F12  C062  F071         	movff	?___flpack+2,?___flmul+2
  4918  003F16  C063  F072         	movff	?___flpack+3,?___flmul+3
  4919  003F1A  0012               	return	
  4920  003F1C  0012               	return		;funcret
  4921  003F1E                     __end_of___flmul:
  4922                           	opt stack 0
  4923                           tblptru	equ	0xFF8
  4924                           tblptrh	equ	0xFF7
  4925                           tblptrl	equ	0xFF6
  4926                           tablat	equ	0xFF5
  4927                           postinc0	equ	0xFEE
  4928                           wreg	equ	0xFE8
  4929                           postinc2	equ	0xFDE
  4930                           postdec2	equ	0xFDD
  4931                           fsr2h	equ	0xFDA
  4932                           fsr2l	equ	0xFD9
  4933                           status	equ	0xFD8
  4934                           
  4935 ;; *************** function ___flsub *****************
  4936 ;; Defined at:
  4937 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flsub.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  f1              4   42[BANK0 ] unsigned char 
  4940 ;;  f2              4   46[BANK0 ] unsigned char 
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;		None
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  4   42[BANK0 ] unsigned char 
  4945 ;; Registers used:
  4946 ;;		wreg, status,2, status,0, cstack
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4952 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4955 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;Total ram usage:        8 bytes
  4957 ;; Hardware stack levels used:    1
  4958 ;; Hardware stack levels required when called:    4
  4959 ;; This function calls:
  4960 ;;		___fladd
  4961 ;; This function is called by:
  4962 ;;		_exp
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text14
  4967  004B8C                     __ptext14:
  4968                           	opt stack 0
  4969  004B8C                     ___flsub:
  4970                           	opt stack 23
  4971                           
  4972                           ;incstack = 0
  4973  004B8C  0100               	movlb	0	; () banked
  4974  004B8E  518E               	movf	___flsub@f2& (0+255),w,b
  4975  004B90  0100               	movlb	0	; () banked
  4976  004B92  118F               	iorwf	(___flsub@f2+1)& (0+255),w,b
  4977  004B94  0100               	movlb	0	; () banked
  4978  004B96  1190               	iorwf	(___flsub@f2+2)& (0+255),w,b
  4979  004B98  0100               	movlb	0	; () banked
  4980  004B9A  1191               	iorwf	(___flsub@f2+3)& (0+255),w,b
  4981  004B9C  B4D8               	btfsc	status,2,c
  4982  004B9E  D00A               	goto	l5651
  4983                           
  4984                           ; BSR set to: 0
  4985  004BA0  0E00               	movlw	0
  4986  004BA2  0100               	movlb	0	; () banked
  4987  004BA4  1B8E               	xorwf	___flsub@f2& (0+255),f,b
  4988  004BA6  0E00               	movlw	0
  4989  004BA8  1B8F               	xorwf	(___flsub@f2+1)& (0+255),f,b
  4990  004BAA  0E00               	movlw	0
  4991  004BAC  1B90               	xorwf	(___flsub@f2+2)& (0+255),f,b
  4992  004BAE  0E80               	movlw	128
  4993  004BB0  1B91               	xorwf	(___flsub@f2+3)& (0+255),f,b
  4994  004BB2  D000               	goto	l5651
  4995  004BB4                     l5651:
  4996                           
  4997                           ; BSR set to: 0
  4998  004BB4  C08A  F07E         	movff	___flsub@f1,___fladd@f1
  4999  004BB8  C08B  F07F         	movff	___flsub@f1+1,___fladd@f1+1
  5000  004BBC  C08C  F080         	movff	___flsub@f1+2,___fladd@f1+2
  5001  004BC0  C08D  F081         	movff	___flsub@f1+3,___fladd@f1+3
  5002  004BC4  C08E  F082         	movff	___flsub@f2,___fladd@f2
  5003  004BC8  C08F  F083         	movff	___flsub@f2+1,___fladd@f2+1
  5004  004BCC  C090  F084         	movff	___flsub@f2+2,___fladd@f2+2
  5005  004BD0  C091  F085         	movff	___flsub@f2+3,___fladd@f2+3
  5006  004BD4  EC41  F01A         	call	___fladd	;wreg free
  5007  004BD8  C07E  F08A         	movff	?___fladd,?___flsub
  5008  004BDC  C07F  F08B         	movff	?___fladd+1,?___flsub+1
  5009  004BE0  C080  F08C         	movff	?___fladd+2,?___flsub+2
  5010  004BE4  C081  F08D         	movff	?___fladd+3,?___flsub+3
  5011  004BE8  0012               	return	
  5012  004BEA  0012               	return		;funcret
  5013  004BEC                     __end_of___flsub:
  5014                           	opt stack 0
  5015                           tblptru	equ	0xFF8
  5016                           tblptrh	equ	0xFF7
  5017                           tblptrl	equ	0xFF6
  5018                           tablat	equ	0xFF5
  5019                           postinc0	equ	0xFEE
  5020                           wreg	equ	0xFE8
  5021                           postinc2	equ	0xFDE
  5022                           postdec2	equ	0xFDD
  5023                           fsr2h	equ	0xFDA
  5024                           fsr2l	equ	0xFD9
  5025                           status	equ	0xFD8
  5026                           
  5027 ;; *************** function ___fladd *****************
  5028 ;; Defined at:
  5029 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fladd.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  f1              4   30[BANK0 ] unsigned char 
  5032 ;;  f2              4   34[BANK0 ] unsigned char 
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;  exp1            1   41[BANK0 ] unsigned char 
  5035 ;;  exp2            1   40[BANK0 ] unsigned char 
  5036 ;;  sign            1   39[BANK0 ] unsigned char 
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  4   30[BANK0 ] unsigned char 
  5039 ;; Registers used:
  5040 ;;		wreg, status,2, status,0, cstack
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5046 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5048 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5049 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5050 ;;Total ram usage:       12 bytes
  5051 ;; Hardware stack levels used:    1
  5052 ;; Hardware stack levels required when called:    3
  5053 ;; This function calls:
  5054 ;;		___flpack
  5055 ;; This function is called by:
  5056 ;;		_rampe
  5057 ;;		___flsub
  5058 ;;		_floor
  5059 ;;		_log
  5060 ;;		_eval_poly
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           	psect	text15
  5065  003482                     __ptext15:
  5066                           	opt stack 0
  5067  003482                     ___fladd:
  5068                           	opt stack 23
  5069                           
  5070                           ;incstack = 0
  5071  003482  0100               	movlb	0	; () banked
  5072  003484  3580               	rlcf	(___fladd@f1+2)& (0+255),w,b
  5073  003486  3581               	rlcf	(___fladd@f1+3)& (0+255),w,b
  5074  003488  0100               	movlb	0	; () banked
  5075  00348A  6F89               	movwf	___fladd@exp1& (0+255),b
  5076  00348C  0100               	movlb	0	; () banked
  5077  00348E  3584               	rlcf	(___fladd@f2+2)& (0+255),w,b
  5078  003490  3585               	rlcf	(___fladd@f2+3)& (0+255),w,b
  5079  003492  0100               	movlb	0	; () banked
  5080  003494  6F88               	movwf	___fladd@exp2& (0+255),b
  5081  003496  0100               	movlb	0	; () banked
  5082  003498  5189               	movf	___fladd@exp1& (0+255),w,b
  5083  00349A  0100               	movlb	0	; () banked
  5084  00349C  B4D8               	btfsc	status,2,c
  5085  00349E  D011               	goto	l1067
  5086                           
  5087                           ; BSR set to: 0
  5088  0034A0  0100               	movlb	0	; () banked
  5089  0034A2  5188               	movf	___fladd@exp2& (0+255),w,b
  5090  0034A4  0100               	movlb	0	; () banked
  5091  0034A6  5D89               	subwf	___fladd@exp1& (0+255),w,b
  5092  0034A8  B0D8               	btfsc	status,0,c
  5093  0034AA  D014               	goto	l5417
  5094                           
  5095                           ; BSR set to: 0
  5096  0034AC  0100               	movlb	0	; () banked
  5097  0034AE  5189               	movf	___fladd@exp1& (0+255),w,b
  5098  0034B0  0800               	sublw	0
  5099  0034B2  0100               	movlb	0	; () banked
  5100  0034B4  2588               	addwf	___fladd@exp2& (0+255),w,b
  5101  0034B6  0100               	movlb	0	; () banked
  5102  0034B8  6F86               	movwf	??___fladd& (0+255),b
  5103  0034BA  0E20               	movlw	32
  5104  0034BC  0100               	movlb	0	; () banked
  5105  0034BE  6586               	cpfsgt	??___fladd& (0+255),b
  5106  0034C0  D009               	goto	l5417
  5107  0034C2                     l1067:
  5108                           
  5109                           ; BSR set to: 0
  5110  0034C2  C082  F07E         	movff	___fladd@f2,?___fladd
  5111  0034C6  C083  F07F         	movff	___fladd@f2+1,?___fladd+1
  5112  0034CA  C084  F080         	movff	___fladd@f2+2,?___fladd+2
  5113  0034CE  C085  F081         	movff	___fladd@f2+3,?___fladd+3
  5114  0034D2  0012               	return	
  5115  0034D4                     l5417:
  5116                           
  5117                           ; BSR set to: 0
  5118  0034D4  0100               	movlb	0	; () banked
  5119  0034D6  5188               	movf	___fladd@exp2& (0+255),w,b
  5120  0034D8  0100               	movlb	0	; () banked
  5121  0034DA  B4D8               	btfsc	status,2,c
  5122  0034DC  D011               	goto	l1071
  5123                           
  5124                           ; BSR set to: 0
  5125  0034DE  0100               	movlb	0	; () banked
  5126  0034E0  5189               	movf	___fladd@exp1& (0+255),w,b
  5127  0034E2  0100               	movlb	0	; () banked
  5128  0034E4  5D88               	subwf	___fladd@exp2& (0+255),w,b
  5129  0034E6  B0D8               	btfsc	status,0,c
  5130  0034E8  D014               	goto	l5423
  5131                           
  5132                           ; BSR set to: 0
  5133  0034EA  0100               	movlb	0	; () banked
  5134  0034EC  5188               	movf	___fladd@exp2& (0+255),w,b
  5135  0034EE  0800               	sublw	0
  5136  0034F0  0100               	movlb	0	; () banked
  5137  0034F2  2589               	addwf	___fladd@exp1& (0+255),w,b
  5138  0034F4  0100               	movlb	0	; () banked
  5139  0034F6  6F86               	movwf	??___fladd& (0+255),b
  5140  0034F8  0E20               	movlw	32
  5141  0034FA  0100               	movlb	0	; () banked
  5142  0034FC  6586               	cpfsgt	??___fladd& (0+255),b
  5143  0034FE  D009               	goto	l5423
  5144  003500                     l1071:
  5145                           
  5146                           ; BSR set to: 0
  5147  003500  C07E  F07E         	movff	___fladd@f1,?___fladd
  5148  003504  C07F  F07F         	movff	___fladd@f1+1,?___fladd+1
  5149  003508  C080  F080         	movff	___fladd@f1+2,?___fladd+2
  5150  00350C  C081  F081         	movff	___fladd@f1+3,?___fladd+3
  5151  003510  0012               	return	
  5152  003512                     l5423:
  5153                           
  5154                           ; BSR set to: 0
  5155  003512  0E06               	movlw	6
  5156  003514  0100               	movlb	0	; () banked
  5157  003516  6F87               	movwf	___fladd@sign& (0+255),b
  5158                           
  5159                           ; BSR set to: 0
  5160  003518  0100               	movlb	0	; () banked
  5161  00351A  AF81               	btfss	(___fladd@f1+3)& (0+255),7,b
  5162  00351C  D003               	goto	l5429
  5163                           
  5164                           ; BSR set to: 0
  5165  00351E  0100               	movlb	0	; () banked
  5166  003520  8F87               	bsf	___fladd@sign& (0+255),7,b
  5167  003522  D000               	goto	l5429
  5168  003524                     l5429:
  5169                           
  5170                           ; BSR set to: 0
  5171  003524  0100               	movlb	0	; () banked
  5172  003526  AF85               	btfss	(___fladd@f2+3)& (0+255),7,b
  5173  003528  D002               	goto	l1073
  5174                           
  5175                           ; BSR set to: 0
  5176  00352A  0100               	movlb	0	; () banked
  5177  00352C  8D87               	bsf	___fladd@sign& (0+255),6,b
  5178  00352E                     l1073:
  5179                           
  5180                           ; BSR set to: 0
  5181  00352E  0100               	movlb	0	; () banked
  5182  003530  8F80               	bsf	(___fladd@f1+2)& (0+255),7,b
  5183                           
  5184                           ; BSR set to: 0
  5185  003532  0EFF               	movlw	255
  5186  003534  0100               	movlb	0	; () banked
  5187  003536  177E               	andwf	___fladd@f1& (0+255),f,b
  5188  003538  0EFF               	movlw	255
  5189  00353A  177F               	andwf	(___fladd@f1+1)& (0+255),f,b
  5190  00353C  0EFF               	movlw	255
  5191  00353E  1780               	andwf	(___fladd@f1+2)& (0+255),f,b
  5192  003540  0E00               	movlw	0
  5193  003542  1781               	andwf	(___fladd@f1+3)& (0+255),f,b
  5194                           
  5195                           ; BSR set to: 0
  5196  003544  0100               	movlb	0	; () banked
  5197  003546  8F84               	bsf	(___fladd@f2+2)& (0+255),7,b
  5198  003548  0EFF               	movlw	255
  5199  00354A  0100               	movlb	0	; () banked
  5200  00354C  1782               	andwf	___fladd@f2& (0+255),f,b
  5201  00354E  0EFF               	movlw	255
  5202  003550  1783               	andwf	(___fladd@f2+1)& (0+255),f,b
  5203  003552  0EFF               	movlw	255
  5204  003554  1784               	andwf	(___fladd@f2+2)& (0+255),f,b
  5205  003556  0E00               	movlw	0
  5206  003558  1785               	andwf	(___fladd@f2+3)& (0+255),f,b
  5207  00355A  0100               	movlb	0	; () banked
  5208  00355C  5188               	movf	___fladd@exp2& (0+255),w,b
  5209  00355E  0100               	movlb	0	; () banked
  5210  003560  5D89               	subwf	___fladd@exp1& (0+255),w,b
  5211  003562  B0D8               	btfsc	status,0,c
  5212  003564  D02A               	goto	l5447
  5213  003566                     l5437:
  5214                           
  5215                           ; BSR set to: 0
  5216  003566  0100               	movlb	0	; () banked
  5217  003568  90D8               	bcf	status,0,c
  5218  00356A  3782               	rlcf	___fladd@f2& (0+255),f,b
  5219  00356C  3783               	rlcf	(___fladd@f2+1)& (0+255),f,b
  5220  00356E  3784               	rlcf	(___fladd@f2+2)& (0+255),f,b
  5221  003570  3785               	rlcf	(___fladd@f2+3)& (0+255),f,b
  5222  003572  0100               	movlb	0	; () banked
  5223  003574  0788               	decf	___fladd@exp2& (0+255),f,b
  5224                           
  5225                           ; BSR set to: 0
  5226  003576  0100               	movlb	0	; () banked
  5227  003578  5189               	movf	___fladd@exp1& (0+255),w,b
  5228  00357A  0100               	movlb	0	; () banked
  5229  00357C  1988               	xorwf	___fladd@exp2& (0+255),w,b
  5230  00357E  B4D8               	btfsc	status,2,c
  5231  003580  D014               	goto	l5445
  5232                           
  5233                           ; BSR set to: 0
  5234  003582  0100               	movlb	0	; () banked
  5235  003584  0787               	decf	___fladd@sign& (0+255),f,b
  5236  003586  C087  F086         	movff	___fladd@sign,??___fladd
  5237  00358A  0E07               	movlw	7
  5238  00358C  0100               	movlb	0	; () banked
  5239  00358E  1786               	andwf	??___fladd& (0+255),f,b
  5240  003590  B4D8               	btfsc	status,2,c
  5241  003592  D00B               	goto	l5445
  5242  003594  D7E8               	goto	l5437
  5243                           
  5244                           ; BSR set to: 0
  5245                           
  5246                           ; BSR set to: 0
  5247  003596  D009               	goto	l5445
  5248  003598                     l5443:
  5249                           
  5250                           ; BSR set to: 0
  5251  003598  0100               	movlb	0	; () banked
  5252  00359A  90D8               	bcf	status,0,c
  5253  00359C  3381               	rrcf	(___fladd@f1+3)& (0+255),f,b
  5254  00359E  3380               	rrcf	(___fladd@f1+2)& (0+255),f,b
  5255  0035A0  337F               	rrcf	(___fladd@f1+1)& (0+255),f,b
  5256  0035A2  337E               	rrcf	___fladd@f1& (0+255),f,b
  5257  0035A4  0100               	movlb	0	; () banked
  5258  0035A6  2B89               	incf	___fladd@exp1& (0+255),f,b
  5259  0035A8  D000               	goto	l5445
  5260  0035AA                     l5445:
  5261                           
  5262                           ; BSR set to: 0
  5263  0035AA  0100               	movlb	0	; () banked
  5264  0035AC  5188               	movf	___fladd@exp2& (0+255),w,b
  5265  0035AE  0100               	movlb	0	; () banked
  5266  0035B0  1989               	xorwf	___fladd@exp1& (0+255),w,b
  5267  0035B2  B4D8               	btfsc	status,2,c
  5268  0035B4  D032               	goto	l1082
  5269  0035B6  D7F0               	goto	l5443
  5270                           
  5271                           ; BSR set to: 0
  5272  0035B8  D030               	goto	l1082
  5273  0035BA                     l5447:
  5274                           
  5275                           ; BSR set to: 0
  5276  0035BA  0100               	movlb	0	; () banked
  5277  0035BC  5189               	movf	___fladd@exp1& (0+255),w,b
  5278  0035BE  0100               	movlb	0	; () banked
  5279  0035C0  5D88               	subwf	___fladd@exp2& (0+255),w,b
  5280  0035C2  B0D8               	btfsc	status,0,c
  5281  0035C4  D02A               	goto	l1082
  5282  0035C6                     l5449:
  5283                           
  5284                           ; BSR set to: 0
  5285  0035C6  0100               	movlb	0	; () banked
  5286  0035C8  90D8               	bcf	status,0,c
  5287  0035CA  377E               	rlcf	___fladd@f1& (0+255),f,b
  5288  0035CC  377F               	rlcf	(___fladd@f1+1)& (0+255),f,b
  5289  0035CE  3780               	rlcf	(___fladd@f1+2)& (0+255),f,b
  5290  0035D0  3781               	rlcf	(___fladd@f1+3)& (0+255),f,b
  5291  0035D2  0100               	movlb	0	; () banked
  5292  0035D4  0789               	decf	___fladd@exp1& (0+255),f,b
  5293                           
  5294                           ; BSR set to: 0
  5295  0035D6  0100               	movlb	0	; () banked
  5296  0035D8  5189               	movf	___fladd@exp1& (0+255),w,b
  5297  0035DA  0100               	movlb	0	; () banked
  5298  0035DC  1988               	xorwf	___fladd@exp2& (0+255),w,b
  5299  0035DE  B4D8               	btfsc	status,2,c
  5300  0035E0  D014               	goto	l5457
  5301                           
  5302                           ; BSR set to: 0
  5303  0035E2  0100               	movlb	0	; () banked
  5304  0035E4  0787               	decf	___fladd@sign& (0+255),f,b
  5305  0035E6  C087  F086         	movff	___fladd@sign,??___fladd
  5306  0035EA  0E07               	movlw	7
  5307  0035EC  0100               	movlb	0	; () banked
  5308  0035EE  1786               	andwf	??___fladd& (0+255),f,b
  5309  0035F0  B4D8               	btfsc	status,2,c
  5310  0035F2  D00B               	goto	l5457
  5311  0035F4  D7E8               	goto	l5449
  5312                           
  5313                           ; BSR set to: 0
  5314                           
  5315                           ; BSR set to: 0
  5316  0035F6  D009               	goto	l5457
  5317  0035F8                     l5455:
  5318                           
  5319                           ; BSR set to: 0
  5320  0035F8  0100               	movlb	0	; () banked
  5321  0035FA  90D8               	bcf	status,0,c
  5322  0035FC  3385               	rrcf	(___fladd@f2+3)& (0+255),f,b
  5323  0035FE  3384               	rrcf	(___fladd@f2+2)& (0+255),f,b
  5324  003600  3383               	rrcf	(___fladd@f2+1)& (0+255),f,b
  5325  003602  3382               	rrcf	___fladd@f2& (0+255),f,b
  5326  003604  0100               	movlb	0	; () banked
  5327  003606  2B88               	incf	___fladd@exp2& (0+255),f,b
  5328  003608  D000               	goto	l5457
  5329  00360A                     l5457:
  5330                           
  5331                           ; BSR set to: 0
  5332  00360A  0100               	movlb	0	; () banked
  5333  00360C  5188               	movf	___fladd@exp2& (0+255),w,b
  5334  00360E  0100               	movlb	0	; () banked
  5335  003610  1989               	xorwf	___fladd@exp1& (0+255),w,b
  5336  003612  B4D8               	btfsc	status,2,c
  5337  003614  D002               	goto	l1082
  5338  003616  D7F0               	goto	l5455
  5339                           
  5340                           ; BSR set to: 0
  5341  003618  D000               	goto	l1082
  5342  00361A                     l1082:
  5343                           
  5344                           ; BSR set to: 0
  5345  00361A  0100               	movlb	0	; () banked
  5346  00361C  AF87               	btfss	___fladd@sign& (0+255),7,b
  5347  00361E  D011               	goto	l5461
  5348                           
  5349                           ; BSR set to: 0
  5350  003620  0EFF               	movlw	255
  5351  003622  0100               	movlb	0	; () banked
  5352  003624  1B7E               	xorwf	___fladd@f1& (0+255),f,b
  5353  003626  0EFF               	movlw	255
  5354  003628  1B7F               	xorwf	(___fladd@f1+1)& (0+255),f,b
  5355  00362A  0EFF               	movlw	255
  5356  00362C  1B80               	xorwf	(___fladd@f1+2)& (0+255),f,b
  5357  00362E  0EFF               	movlw	255
  5358  003630  1B81               	xorwf	(___fladd@f1+3)& (0+255),f,b
  5359  003632  0E01               	movlw	1
  5360  003634  0100               	movlb	0	; () banked
  5361  003636  277E               	addwf	___fladd@f1& (0+255),f,b
  5362  003638  0E00               	movlw	0
  5363  00363A  237F               	addwfc	(___fladd@f1+1)& (0+255),f,b
  5364  00363C  2380               	addwfc	(___fladd@f1+2)& (0+255),f,b
  5365  00363E  2381               	addwfc	(___fladd@f1+3)& (0+255),f,b
  5366  003640  D000               	goto	l5461
  5367  003642                     l5461:
  5368                           
  5369                           ; BSR set to: 0
  5370  003642  0100               	movlb	0	; () banked
  5371  003644  AD87               	btfss	___fladd@sign& (0+255),6,b
  5372  003646  D011               	goto	l5465
  5373                           
  5374                           ; BSR set to: 0
  5375  003648  0EFF               	movlw	255
  5376  00364A  0100               	movlb	0	; () banked
  5377  00364C  1B82               	xorwf	___fladd@f2& (0+255),f,b
  5378  00364E  0EFF               	movlw	255
  5379  003650  1B83               	xorwf	(___fladd@f2+1)& (0+255),f,b
  5380  003652  0EFF               	movlw	255
  5381  003654  1B84               	xorwf	(___fladd@f2+2)& (0+255),f,b
  5382  003656  0EFF               	movlw	255
  5383  003658  1B85               	xorwf	(___fladd@f2+3)& (0+255),f,b
  5384  00365A  0E01               	movlw	1
  5385  00365C  0100               	movlb	0	; () banked
  5386  00365E  2782               	addwf	___fladd@f2& (0+255),f,b
  5387  003660  0E00               	movlw	0
  5388  003662  2383               	addwfc	(___fladd@f2+1)& (0+255),f,b
  5389  003664  2384               	addwfc	(___fladd@f2+2)& (0+255),f,b
  5390  003666  2385               	addwfc	(___fladd@f2+3)& (0+255),f,b
  5391  003668  D000               	goto	l5465
  5392  00366A                     l5465:
  5393                           
  5394                           ; BSR set to: 0
  5395  00366A  0E00               	movlw	0
  5396  00366C  0100               	movlb	0	; () banked
  5397  00366E  6F87               	movwf	___fladd@sign& (0+255),b
  5398                           
  5399                           ; BSR set to: 0
  5400  003670  0100               	movlb	0	; () banked
  5401  003672  517E               	movf	___fladd@f1& (0+255),w,b
  5402  003674  0100               	movlb	0	; () banked
  5403  003676  2782               	addwf	___fladd@f2& (0+255),f,b
  5404  003678  0100               	movlb	0	; () banked
  5405  00367A  517F               	movf	(___fladd@f1+1)& (0+255),w,b
  5406  00367C  0100               	movlb	0	; () banked
  5407  00367E  2383               	addwfc	(___fladd@f2+1)& (0+255),f,b
  5408  003680  0100               	movlb	0	; () banked
  5409  003682  5180               	movf	(___fladd@f1+2)& (0+255),w,b
  5410  003684  0100               	movlb	0	; () banked
  5411  003686  2384               	addwfc	(___fladd@f2+2)& (0+255),f,b
  5412  003688  0100               	movlb	0	; () banked
  5413  00368A  5181               	movf	(___fladd@f1+3)& (0+255),w,b
  5414  00368C  0100               	movlb	0	; () banked
  5415  00368E  2385               	addwfc	(___fladd@f2+3)& (0+255),f,b
  5416                           
  5417                           ; BSR set to: 0
  5418  003690  0100               	movlb	0	; () banked
  5419  003692  AF85               	btfss	(___fladd@f2+3)& (0+255),7,b
  5420  003694  D014               	goto	l5475
  5421                           
  5422                           ; BSR set to: 0
  5423  003696  0EFF               	movlw	255
  5424  003698  0100               	movlb	0	; () banked
  5425  00369A  1B82               	xorwf	___fladd@f2& (0+255),f,b
  5426  00369C  0EFF               	movlw	255
  5427  00369E  1B83               	xorwf	(___fladd@f2+1)& (0+255),f,b
  5428  0036A0  0EFF               	movlw	255
  5429  0036A2  1B84               	xorwf	(___fladd@f2+2)& (0+255),f,b
  5430  0036A4  0EFF               	movlw	255
  5431  0036A6  1B85               	xorwf	(___fladd@f2+3)& (0+255),f,b
  5432  0036A8  0E01               	movlw	1
  5433  0036AA  0100               	movlb	0	; () banked
  5434  0036AC  2782               	addwf	___fladd@f2& (0+255),f,b
  5435  0036AE  0E00               	movlw	0
  5436  0036B0  2383               	addwfc	(___fladd@f2+1)& (0+255),f,b
  5437  0036B2  2384               	addwfc	(___fladd@f2+2)& (0+255),f,b
  5438  0036B4  2385               	addwfc	(___fladd@f2+3)& (0+255),f,b
  5439                           
  5440                           ; BSR set to: 0
  5441  0036B6  0E01               	movlw	1
  5442  0036B8  0100               	movlb	0	; () banked
  5443  0036BA  6F87               	movwf	___fladd@sign& (0+255),b
  5444  0036BC  D000               	goto	l5475
  5445  0036BE                     l5475:
  5446                           
  5447                           ; BSR set to: 0
  5448  0036BE  C082  F060         	movff	___fladd@f2,___flpack@arg
  5449  0036C2  C083  F061         	movff	___fladd@f2+1,___flpack@arg+1
  5450  0036C6  C084  F062         	movff	___fladd@f2+2,___flpack@arg+2
  5451  0036CA  C085  F063         	movff	___fladd@f2+3,___flpack@arg+3
  5452  0036CE  C089  F064         	movff	___fladd@exp1,___flpack@exp
  5453  0036D2  C087  F065         	movff	___fladd@sign,___flpack@sign
  5454  0036D6  EC5E  F01D         	call	___flpack	;wreg free
  5455  0036DA  C060  F07E         	movff	?___flpack,?___fladd
  5456  0036DE  C061  F07F         	movff	?___flpack+1,?___fladd+1
  5457  0036E2  C062  F080         	movff	?___flpack+2,?___fladd+2
  5458  0036E6  C063  F081         	movff	?___flpack+3,?___fladd+3
  5459  0036EA  0012               	return	
  5460  0036EC  0012               	return		;funcret
  5461  0036EE                     __end_of___fladd:
  5462                           	opt stack 0
  5463                           tblptru	equ	0xFF8
  5464                           tblptrh	equ	0xFF7
  5465                           tblptrl	equ	0xFF6
  5466                           tablat	equ	0xFF5
  5467                           postinc0	equ	0xFEE
  5468                           wreg	equ	0xFE8
  5469                           postinc2	equ	0xFDE
  5470                           postdec2	equ	0xFDD
  5471                           fsr2h	equ	0xFDA
  5472                           fsr2l	equ	0xFD9
  5473                           status	equ	0xFD8
  5474                           
  5475 ;; *************** function ___flneg *****************
  5476 ;; Defined at:
  5477 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\flneg.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  f1              4    0[BANK0 ] unsigned char 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  4    0[BANK0 ] unsigned char 
  5484 ;; Registers used:
  5485 ;;		wreg, status,2, status,0
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5491 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5494 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5495 ;;Total ram usage:        4 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    2
  5498 ;; This function calls:
  5499 ;;		Nothing
  5500 ;; This function is called by:
  5501 ;;		_pow
  5502 ;;		_exp
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text16
  5507  004DD2                     __ptext16:
  5508                           	opt stack 0
  5509  004DD2                     ___flneg:
  5510                           	opt stack 25
  5511                           
  5512                           ;incstack = 0
  5513  004DD2  0100               	movlb	0	; () banked
  5514  004DD4  5160               	movf	___flneg@f1& (0+255),w,b
  5515  004DD6  0100               	movlb	0	; () banked
  5516  004DD8  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5517  004DDA  0100               	movlb	0	; () banked
  5518  004DDC  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5519  004DDE  0100               	movlb	0	; () banked
  5520  004DE0  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5521  004DE2  B4D8               	btfsc	status,2,c
  5522  004DE4  D00A               	goto	l5669
  5523                           
  5524                           ; BSR set to: 0
  5525  004DE6  0E00               	movlw	0
  5526  004DE8  0100               	movlb	0	; () banked
  5527  004DEA  1B60               	xorwf	___flneg@f1& (0+255),f,b
  5528  004DEC  0E00               	movlw	0
  5529  004DEE  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5530  004DF0  0E00               	movlw	0
  5531  004DF2  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5532  004DF4  0E80               	movlw	128
  5533  004DF6  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  5534  004DF8  D000               	goto	l5669
  5535  004DFA                     l5669:
  5536                           
  5537                           ; BSR set to: 0
  5538  004DFA  C060  F060         	movff	___flneg@f1,?___flneg
  5539  004DFE  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  5540  004E02  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  5541  004E06  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  5542  004E0A  0012               	return	
  5543                           
  5544                           ; BSR set to: 0
  5545                           
  5546                           ; BSR set to: 0
  5547  004E0C  0012               	return		;funcret
  5548  004E0E                     __end_of___flneg:
  5549                           	opt stack 0
  5550                           tblptru	equ	0xFF8
  5551                           tblptrh	equ	0xFF7
  5552                           tblptrl	equ	0xFF6
  5553                           tablat	equ	0xFF5
  5554                           postinc0	equ	0xFEE
  5555                           wreg	equ	0xFE8
  5556                           postinc2	equ	0xFDE
  5557                           postdec2	equ	0xFDD
  5558                           fsr2h	equ	0xFDA
  5559                           fsr2l	equ	0xFD9
  5560                           status	equ	0xFD8
  5561                           
  5562 ;; *************** function ___fldiv *****************
  5563 ;; Defined at:
  5564 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldiv.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;  f1              4   10[BANK0 ] unsigned char 
  5567 ;;  f2              4   14[BANK0 ] unsigned char 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;  f3              4   18[BANK0 ] unsigned char 
  5570 ;;  sign            1   24[BANK0 ] unsigned char 
  5571 ;;  exp             1   23[BANK0 ] unsigned char 
  5572 ;;  cntr            1   22[BANK0 ] unsigned char 
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  4   10[BANK0 ] unsigned char 
  5575 ;; Registers used:
  5576 ;;		wreg, status,2, status,0, cstack
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5582 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5583 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5585 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5586 ;;Total ram usage:       15 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; Hardware stack levels required when called:    3
  5589 ;; This function calls:
  5590 ;;		___flpack
  5591 ;; This function is called by:
  5592 ;;		_exp
  5593 ;; This function uses a non-reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text17
  5597  004056                     __ptext17:
  5598                           	opt stack 0
  5599  004056                     ___fldiv:
  5600                           	opt stack 24
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;incstack = 0
  5604  004056  0100               	movlb	0	; () banked
  5605  004058  356C               	rlcf	(___fldiv@f1+2)& (0+255),w,b
  5606  00405A  356D               	rlcf	(___fldiv@f1+3)& (0+255),w,b
  5607  00405C  0100               	movlb	0	; () banked
  5608  00405E  6F77               	movwf	___fldiv@exp& (0+255),b
  5609  004060  0100               	movlb	0	; () banked
  5610  004062  5177               	movf	___fldiv@exp& (0+255),w,b
  5611  004064  A4D8               	btfss	status,2,c
  5612  004066  D00A               	goto	l5613
  5613                           
  5614                           ; BSR set to: 0
  5615  004068  0E00               	movlw	0
  5616  00406A  0100               	movlb	0	; () banked
  5617  00406C  6F6A               	movwf	?___fldiv& (0+255),b
  5618  00406E  0E00               	movlw	0
  5619  004070  6F6B               	movwf	(?___fldiv+1)& (0+255),b
  5620  004072  0E00               	movlw	0
  5621  004074  6F6C               	movwf	(?___fldiv+2)& (0+255),b
  5622  004076  0E00               	movlw	0
  5623  004078  6F6D               	movwf	(?___fldiv+3)& (0+255),b
  5624                           
  5625                           ; BSR set to: 0
  5626  00407A  0012               	return	
  5627  00407C                     l5613:
  5628                           
  5629                           ; BSR set to: 0
  5630  00407C  0100               	movlb	0	; () banked
  5631  00407E  3570               	rlcf	(___fldiv@f2+2)& (0+255),w,b
  5632  004080  3571               	rlcf	(___fldiv@f2+3)& (0+255),w,b
  5633  004082  0100               	movlb	0	; () banked
  5634  004084  6F78               	movwf	___fldiv@sign& (0+255),b
  5635  004086  0100               	movlb	0	; () banked
  5636  004088  5178               	movf	___fldiv@sign& (0+255),w,b
  5637  00408A  A4D8               	btfss	status,2,c
  5638  00408C  D00A               	goto	l5619
  5639                           
  5640                           ; BSR set to: 0
  5641  00408E  0E00               	movlw	0
  5642  004090  0100               	movlb	0	; () banked
  5643  004092  6F6A               	movwf	?___fldiv& (0+255),b
  5644  004094  0E00               	movlw	0
  5645  004096  6F6B               	movwf	(?___fldiv+1)& (0+255),b
  5646  004098  0E00               	movlw	0
  5647  00409A  6F6C               	movwf	(?___fldiv+2)& (0+255),b
  5648  00409C  0E00               	movlw	0
  5649  00409E  6F6D               	movwf	(?___fldiv+3)& (0+255),b
  5650                           
  5651                           ; BSR set to: 0
  5652  0040A0  0012               	return	
  5653  0040A2                     l5619:
  5654                           
  5655                           ; BSR set to: 0
  5656  0040A2  0100               	movlb	0	; () banked
  5657  0040A4  5178               	movf	___fldiv@sign& (0+255),w,b
  5658  0040A6  0F89               	addlw	137
  5659  0040A8  0100               	movlb	0	; () banked
  5660  0040AA  5F77               	subwf	___fldiv@exp& (0+255),f,b
  5661                           
  5662                           ; BSR set to: 0
  5663  0040AC  C06D  F078         	movff	___fldiv@f1+3,___fldiv@sign
  5664  0040B0  0100               	movlb	0	; () banked
  5665  0040B2  5171               	movf	(___fldiv@f2+3)& (0+255),w,b
  5666  0040B4  0100               	movlb	0	; () banked
  5667  0040B6  1B78               	xorwf	___fldiv@sign& (0+255),f,b
  5668  0040B8  0E80               	movlw	128
  5669  0040BA  0100               	movlb	0	; () banked
  5670  0040BC  1778               	andwf	___fldiv@sign& (0+255),f,b
  5671                           
  5672                           ; BSR set to: 0
  5673  0040BE  0100               	movlb	0	; () banked
  5674  0040C0  8F6C               	bsf	(___fldiv@f1+2)& (0+255),7,b
  5675                           
  5676                           ; BSR set to: 0
  5677  0040C2  0EFF               	movlw	255
  5678  0040C4  0100               	movlb	0	; () banked
  5679  0040C6  176A               	andwf	___fldiv@f1& (0+255),f,b
  5680  0040C8  0EFF               	movlw	255
  5681  0040CA  176B               	andwf	(___fldiv@f1+1)& (0+255),f,b
  5682  0040CC  0EFF               	movlw	255
  5683  0040CE  176C               	andwf	(___fldiv@f1+2)& (0+255),f,b
  5684  0040D0  0E00               	movlw	0
  5685  0040D2  176D               	andwf	(___fldiv@f1+3)& (0+255),f,b
  5686  0040D4  0100               	movlb	0	; () banked
  5687  0040D6  8F70               	bsf	(___fldiv@f2+2)& (0+255),7,b
  5688                           
  5689                           ; BSR set to: 0
  5690  0040D8  0EFF               	movlw	255
  5691  0040DA  0100               	movlb	0	; () banked
  5692  0040DC  176E               	andwf	___fldiv@f2& (0+255),f,b
  5693  0040DE  0EFF               	movlw	255
  5694  0040E0  176F               	andwf	(___fldiv@f2+1)& (0+255),f,b
  5695  0040E2  0EFF               	movlw	255
  5696  0040E4  1770               	andwf	(___fldiv@f2+2)& (0+255),f,b
  5697  0040E6  0E00               	movlw	0
  5698  0040E8  1771               	andwf	(___fldiv@f2+3)& (0+255),f,b
  5699                           
  5700                           ; BSR set to: 0
  5701  0040EA  0E20               	movlw	32
  5702  0040EC  0100               	movlb	0	; () banked
  5703  0040EE  6F76               	movwf	___fldiv@cntr& (0+255),b
  5704  0040F0  D000               	goto	l5631
  5705  0040F2                     l5631:
  5706                           
  5707                           ; BSR set to: 0
  5708  0040F2  0100               	movlb	0	; () banked
  5709  0040F4  90D8               	bcf	status,0,c
  5710  0040F6  3772               	rlcf	___fldiv@f3& (0+255),f,b
  5711  0040F8  3773               	rlcf	(___fldiv@f3+1)& (0+255),f,b
  5712  0040FA  3774               	rlcf	(___fldiv@f3+2)& (0+255),f,b
  5713  0040FC  3775               	rlcf	(___fldiv@f3+3)& (0+255),f,b
  5714                           
  5715                           ; BSR set to: 0
  5716  0040FE  0100               	movlb	0	; () banked
  5717  004100  516E               	movf	___fldiv@f2& (0+255),w,b
  5718  004102  0100               	movlb	0	; () banked
  5719  004104  5D6A               	subwf	___fldiv@f1& (0+255),w,b
  5720  004106  0100               	movlb	0	; () banked
  5721  004108  516F               	movf	(___fldiv@f2+1)& (0+255),w,b
  5722  00410A  0100               	movlb	0	; () banked
  5723  00410C  596B               	subwfb	(___fldiv@f1+1)& (0+255),w,b
  5724  00410E  0100               	movlb	0	; () banked
  5725  004110  5170               	movf	(___fldiv@f2+2)& (0+255),w,b
  5726  004112  0100               	movlb	0	; () banked
  5727  004114  596C               	subwfb	(___fldiv@f1+2)& (0+255),w,b
  5728  004116  0100               	movlb	0	; () banked
  5729  004118  5171               	movf	(___fldiv@f2+3)& (0+255),w,b
  5730  00411A  0100               	movlb	0	; () banked
  5731  00411C  596D               	subwfb	(___fldiv@f1+3)& (0+255),w,b
  5732  00411E  A0D8               	btfss	status,0,c
  5733  004120  D013               	goto	l5639
  5734                           
  5735                           ; BSR set to: 0
  5736  004122  0100               	movlb	0	; () banked
  5737  004124  516E               	movf	___fldiv@f2& (0+255),w,b
  5738  004126  0100               	movlb	0	; () banked
  5739  004128  5F6A               	subwf	___fldiv@f1& (0+255),f,b
  5740  00412A  0100               	movlb	0	; () banked
  5741  00412C  516F               	movf	(___fldiv@f2+1)& (0+255),w,b
  5742  00412E  0100               	movlb	0	; () banked
  5743  004130  5B6B               	subwfb	(___fldiv@f1+1)& (0+255),f,b
  5744  004132  0100               	movlb	0	; () banked
  5745  004134  5170               	movf	(___fldiv@f2+2)& (0+255),w,b
  5746  004136  0100               	movlb	0	; () banked
  5747  004138  5B6C               	subwfb	(___fldiv@f1+2)& (0+255),f,b
  5748  00413A  0100               	movlb	0	; () banked
  5749  00413C  5171               	movf	(___fldiv@f2+3)& (0+255),w,b
  5750  00413E  0100               	movlb	0	; () banked
  5751  004140  5B6D               	subwfb	(___fldiv@f1+3)& (0+255),f,b
  5752                           
  5753                           ; BSR set to: 0
  5754  004142  0100               	movlb	0	; () banked
  5755  004144  8172               	bsf	___fldiv@f3& (0+255),0,b
  5756  004146  D000               	goto	l5639
  5757  004148                     l5639:
  5758                           
  5759                           ; BSR set to: 0
  5760  004148  0100               	movlb	0	; () banked
  5761  00414A  90D8               	bcf	status,0,c
  5762  00414C  376A               	rlcf	___fldiv@f1& (0+255),f,b
  5763  00414E  376B               	rlcf	(___fldiv@f1+1)& (0+255),f,b
  5764  004150  376C               	rlcf	(___fldiv@f1+2)& (0+255),f,b
  5765  004152  376D               	rlcf	(___fldiv@f1+3)& (0+255),f,b
  5766                           
  5767                           ; BSR set to: 0
  5768  004154  0100               	movlb	0	; () banked
  5769  004156  2F76               	decfsz	___fldiv@cntr& (0+255),f,b
  5770  004158  D7CC               	goto	l5631
  5771  00415A  D000               	goto	l5643
  5772  00415C                     l5643:
  5773                           
  5774                           ; BSR set to: 0
  5775  00415C  C072  F060         	movff	___fldiv@f3,___flpack@arg
  5776  004160  C073  F061         	movff	___fldiv@f3+1,___flpack@arg+1
  5777  004164  C074  F062         	movff	___fldiv@f3+2,___flpack@arg+2
  5778  004168  C075  F063         	movff	___fldiv@f3+3,___flpack@arg+3
  5779  00416C  C077  F064         	movff	___fldiv@exp,___flpack@exp
  5780  004170  C078  F065         	movff	___fldiv@sign,___flpack@sign
  5781  004174  EC5E  F01D         	call	___flpack	;wreg free
  5782  004178  C060  F06A         	movff	?___flpack,?___fldiv
  5783  00417C  C061  F06B         	movff	?___flpack+1,?___fldiv+1
  5784  004180  C062  F06C         	movff	?___flpack+2,?___fldiv+2
  5785  004184  C063  F06D         	movff	?___flpack+3,?___fldiv+3
  5786  004188  0012               	return	
  5787  00418A  0012               	return		;funcret
  5788  00418C                     __end_of___fldiv:
  5789                           	opt stack 0
  5790                           tblptru	equ	0xFF8
  5791                           tblptrh	equ	0xFF7
  5792                           tblptrl	equ	0xFF6
  5793                           tablat	equ	0xFF5
  5794                           postinc0	equ	0xFEE
  5795                           wreg	equ	0xFE8
  5796                           postinc2	equ	0xFDE
  5797                           postdec2	equ	0xFDD
  5798                           fsr2h	equ	0xFDA
  5799                           fsr2l	equ	0xFD9
  5800                           status	equ	0xFD8
  5801                           
  5802 ;; *************** function ___awtofl *****************
  5803 ;; Defined at:
  5804 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtofl.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;  c               2   10[BANK0 ] int 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;  f1              4    0        int 
  5809 ;;  sign            1   14[BANK0 ] unsigned char 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  4   10[BANK0 ] unsigned char 
  5812 ;; Registers used:
  5813 ;;		wreg, status,2, status,0, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5819 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5820 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5822 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5823 ;;Total ram usage:        5 bytes
  5824 ;; Hardware stack levels used:    1
  5825 ;; Hardware stack levels required when called:    3
  5826 ;; This function calls:
  5827 ;;		___flpack
  5828 ;; This function is called by:
  5829 ;;		_exp
  5830 ;;		_log
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text18
  5835  004D42                     __ptext18:
  5836                           	opt stack 0
  5837  004D42                     ___awtofl:
  5838                           	opt stack 24
  5839                           
  5840                           ;incstack = 0
  5841  004D42  0E00               	movlw	0
  5842  004D44  0100               	movlb	0	; () banked
  5843  004D46  6F6E               	movwf	___awtofl@sign& (0+255),b
  5844                           
  5845                           ; BSR set to: 0
  5846  004D48  0100               	movlb	0	; () banked
  5847  004D4A  AF6B               	btfss	(___awtofl@c+1)& (0+255),7,b
  5848  004D4C  D008               	goto	l5661
  5849                           
  5850                           ; BSR set to: 0
  5851  004D4E  0100               	movlb	0	; () banked
  5852  004D50  6D6A               	negf	___awtofl@c& (0+255),b
  5853  004D52  1F6B               	comf	(___awtofl@c+1)& (0+255),f,b
  5854  004D54  B0D8               	btfsc	status,0,c
  5855  004D56  2B6B               	incf	(___awtofl@c+1)& (0+255),f,b
  5856  004D58  0100               	movlb	0	; () banked
  5857  004D5A  2B6E               	incf	___awtofl@sign& (0+255),f,b
  5858  004D5C  D000               	goto	l5661
  5859  004D5E                     l5661:
  5860                           
  5861                           ; BSR set to: 0
  5862  004D5E  C06A  F060         	movff	___awtofl@c,___flpack@arg
  5863  004D62  C06B  F061         	movff	___awtofl@c+1,___flpack@arg+1
  5864  004D66  0100               	movlb	0	; () banked
  5865  004D68  6B62               	clrf	(___flpack@arg+2)& (0+255),b
  5866  004D6A  6B63               	clrf	(___flpack@arg+3)& (0+255),b
  5867  004D6C  0E96               	movlw	150
  5868  004D6E  0100               	movlb	0	; () banked
  5869  004D70  6F64               	movwf	___flpack@exp& (0+255),b
  5870  004D72  C06E  F065         	movff	___awtofl@sign,___flpack@sign
  5871  004D76  EC5E  F01D         	call	___flpack	;wreg free
  5872  004D7A  C060  F06A         	movff	?___flpack,?___awtofl
  5873  004D7E  C061  F06B         	movff	?___flpack+1,?___awtofl+1
  5874  004D82  C062  F06C         	movff	?___flpack+2,?___awtofl+2
  5875  004D86  C063  F06D         	movff	?___flpack+3,?___awtofl+3
  5876  004D8A  0012               	return	
  5877  004D8C  0012               	return		;funcret
  5878  004D8E                     __end_of___awtofl:
  5879                           	opt stack 0
  5880                           tblptru	equ	0xFF8
  5881                           tblptrh	equ	0xFF7
  5882                           tblptrl	equ	0xFF6
  5883                           tablat	equ	0xFF5
  5884                           postinc0	equ	0xFEE
  5885                           wreg	equ	0xFE8
  5886                           postinc2	equ	0xFDE
  5887                           postdec2	equ	0xFDD
  5888                           fsr2h	equ	0xFDA
  5889                           fsr2l	equ	0xFD9
  5890                           status	equ	0xFD8
  5891                           
  5892 ;; *************** function ___lltofl *****************
  5893 ;; Defined at:
  5894 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltofl.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;  c               4   10[BANK0 ] unsigned long 
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;		None
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  4   10[BANK0 ] unsigned long 
  5901 ;; Registers used:
  5902 ;;		wreg, status,2, status,0, cstack
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5908 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5911 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5912 ;;Total ram usage:        4 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; Hardware stack levels required when called:    3
  5915 ;; This function calls:
  5916 ;;		___flpack
  5917 ;; This function is called by:
  5918 ;;		_pow
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           	psect	text19
  5923  004E46                     __ptext19:
  5924                           	opt stack 0
  5925  004E46                     ___lltofl:
  5926                           	opt stack 25
  5927                           
  5928                           ;incstack = 0
  5929  004E46  C06A  F060         	movff	___lltofl@c,___flpack@arg
  5930  004E4A  C06B  F061         	movff	___lltofl@c+1,___flpack@arg+1
  5931  004E4E  C06C  F062         	movff	___lltofl@c+2,___flpack@arg+2
  5932  004E52  C06D  F063         	movff	___lltofl@c+3,___flpack@arg+3
  5933  004E56  0E96               	movlw	150
  5934  004E58  0100               	movlb	0	; () banked
  5935  004E5A  6F64               	movwf	___flpack@exp& (0+255),b
  5936  004E5C  0E00               	movlw	0
  5937  004E5E  0100               	movlb	0	; () banked
  5938  004E60  6F65               	movwf	___flpack@sign& (0+255),b
  5939  004E62  EC5E  F01D         	call	___flpack	;wreg free
  5940  004E66  C060  F06A         	movff	?___flpack,?___lltofl
  5941  004E6A  C061  F06B         	movff	?___flpack+1,?___lltofl+1
  5942  004E6E  C062  F06C         	movff	?___flpack+2,?___lltofl+2
  5943  004E72  C063  F06D         	movff	?___flpack+3,?___lltofl+3
  5944  004E76  0012               	return	
  5945  004E78  0012               	return		;funcret
  5946  004E7A                     __end_of___lltofl:
  5947                           	opt stack 0
  5948                           tblptru	equ	0xFF8
  5949                           tblptrh	equ	0xFF7
  5950                           tblptrl	equ	0xFF6
  5951                           tablat	equ	0xFF5
  5952                           postinc0	equ	0xFEE
  5953                           wreg	equ	0xFE8
  5954                           postinc2	equ	0xFDE
  5955                           postdec2	equ	0xFDD
  5956                           fsr2h	equ	0xFDA
  5957                           fsr2l	equ	0xFD9
  5958                           status	equ	0xFD8
  5959                           
  5960 ;; *************** function _abs *****************
  5961 ;; Defined at:
  5962 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\abs.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;  a               2    0[BANK0 ] int 
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;		None
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  2    0[BANK0 ] int 
  5969 ;; Registers used:
  5970 ;;		wreg, status,2, status,0
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5976 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5978 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5979 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5980 ;;Total ram usage:        4 bytes
  5981 ;; Hardware stack levels used:    1
  5982 ;; Hardware stack levels required when called:    2
  5983 ;; This function calls:
  5984 ;;		Nothing
  5985 ;; This function is called by:
  5986 ;;		_rampe
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           	psect	text20
  5991  004EE0                     __ptext20:
  5992                           	opt stack 0
  5993  004EE0                     _abs:
  5994                           	opt stack 27
  5995                           
  5996                           ;incstack = 0
  5997  004EE0  0100               	movlb	0	; () banked
  5998  004EE2  AF61               	btfss	(abs@a+1)& (0+255),7,b
  5999  004EE4  D00E               	goto	l866
  6000                           
  6001                           ; BSR set to: 0
  6002  004EE6  C060  F062         	movff	abs@a,??_abs
  6003  004EEA  C061  F063         	movff	abs@a+1,??_abs+1
  6004  004EEE  0100               	movlb	0	; () banked
  6005  004EF0  1F62               	comf	??_abs& (0+255),f,b
  6006  004EF2  1F63               	comf	(??_abs+1)& (0+255),f,b
  6007  004EF4  4B62               	infsnz	??_abs& (0+255),f,b
  6008  004EF6  2B63               	incf	(??_abs+1)& (0+255),f,b
  6009  004EF8  C062  F060         	movff	??_abs,?_abs
  6010  004EFC  C063  F061         	movff	??_abs+1,?_abs+1
  6011  004F00  0012               	return	
  6012  004F02                     l866:
  6013                           
  6014                           ; BSR set to: 0
  6015  004F02  C060  F060         	movff	abs@a,?_abs
  6016  004F06  C061  F061         	movff	abs@a+1,?_abs+1
  6017                           
  6018                           ; BSR set to: 0
  6019  004F0A  0012               	return		;funcret
  6020  004F0C                     __end_of_abs:
  6021                           	opt stack 0
  6022                           tblptru	equ	0xFF8
  6023                           tblptrh	equ	0xFF7
  6024                           tblptrl	equ	0xFF6
  6025                           tablat	equ	0xFF5
  6026                           postinc0	equ	0xFEE
  6027                           wreg	equ	0xFE8
  6028                           postinc2	equ	0xFDE
  6029                           postdec2	equ	0xFDD
  6030                           fsr2h	equ	0xFDA
  6031                           fsr2l	equ	0xFD9
  6032                           status	equ	0xFD8
  6033                           
  6034 ;; *************** function ___lwtofl *****************
  6035 ;; Defined at:
  6036 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtofl.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;  c               2   10[BANK0 ] unsigned int 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;		None
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  4   10[BANK0 ] unsigned int 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0, cstack
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6050 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6053 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6054 ;;Total ram usage:        4 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; Hardware stack levels required when called:    3
  6057 ;; This function calls:
  6058 ;;		___flpack
  6059 ;; This function is called by:
  6060 ;;		_rampe
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text21
  6065  004EAE                     __ptext21:
  6066                           	opt stack 0
  6067  004EAE                     ___lwtofl:
  6068                           	opt stack 26
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;incstack = 0
  6072  004EAE  C06A  F060         	movff	___lwtofl@c,___flpack@arg
  6073  004EB2  C06B  F061         	movff	___lwtofl@c+1,___flpack@arg+1
  6074  004EB6  0100               	movlb	0	; () banked
  6075  004EB8  6B62               	clrf	(___flpack@arg+2)& (0+255),b
  6076  004EBA  6B63               	clrf	(___flpack@arg+3)& (0+255),b
  6077  004EBC  0E96               	movlw	150
  6078  004EBE  0100               	movlb	0	; () banked
  6079  004EC0  6F64               	movwf	___flpack@exp& (0+255),b
  6080  004EC2  0E00               	movlw	0
  6081  004EC4  0100               	movlb	0	; () banked
  6082  004EC6  6F65               	movwf	___flpack@sign& (0+255),b
  6083  004EC8  EC5E  F01D         	call	___flpack	;wreg free
  6084  004ECC  C060  F06A         	movff	?___flpack,?___lwtofl
  6085  004ED0  C061  F06B         	movff	?___flpack+1,?___lwtofl+1
  6086  004ED4  C062  F06C         	movff	?___flpack+2,?___lwtofl+2
  6087  004ED8  C063  F06D         	movff	?___flpack+3,?___lwtofl+3
  6088  004EDC  0012               	return	
  6089  004EDE  0012               	return		;funcret
  6090  004EE0                     __end_of___lwtofl:
  6091                           	opt stack 0
  6092                           tblptru	equ	0xFF8
  6093                           tblptrh	equ	0xFF7
  6094                           tblptrl	equ	0xFF6
  6095                           tablat	equ	0xFF5
  6096                           postinc0	equ	0xFEE
  6097                           wreg	equ	0xFE8
  6098                           postinc2	equ	0xFDE
  6099                           postdec2	equ	0xFDD
  6100                           fsr2h	equ	0xFDA
  6101                           fsr2l	equ	0xFD9
  6102                           status	equ	0xFD8
  6103                           
  6104 ;; *************** function ___flpack *****************
  6105 ;; Defined at:
  6106 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\double.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  arg             4    0[BANK0 ] unsigned long 
  6109 ;;  exp             1    4[BANK0 ] unsigned char 
  6110 ;;  sign            1    5[BANK0 ] unsigned char 
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;		None
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  4    0[BANK0 ] unsigned char 
  6115 ;; Registers used:
  6116 ;;		wreg, status,2, status,0
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6122 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6124 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;Total ram usage:       10 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; Hardware stack levels required when called:    2
  6129 ;; This function calls:
  6130 ;;		Nothing
  6131 ;; This function is called by:
  6132 ;;		___altofl
  6133 ;;		___awtofl
  6134 ;;		___fladd
  6135 ;;		___fldiv
  6136 ;;		___flmul
  6137 ;;		___lltofl
  6138 ;;		___lwtofl
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           	psect	text22
  6143  003ABC                     __ptext22:
  6144                           	opt stack 0
  6145  003ABC                     ___flpack:
  6146                           	opt stack 23
  6147                           
  6148                           ;incstack = 0
  6149  003ABC  0100               	movlb	0	; () banked
  6150  003ABE  5164               	movf	___flpack@exp& (0+255),w,b
  6151  003AC0  0100               	movlb	0	; () banked
  6152  003AC2  B4D8               	btfsc	status,2,c
  6153  003AC4  D00A               	goto	l5369
  6154                           
  6155                           ; BSR set to: 0
  6156  003AC6  0100               	movlb	0	; () banked
  6157  003AC8  5160               	movf	___flpack@arg& (0+255),w,b
  6158  003ACA  0100               	movlb	0	; () banked
  6159  003ACC  1161               	iorwf	(___flpack@arg+1)& (0+255),w,b
  6160  003ACE  0100               	movlb	0	; () banked
  6161  003AD0  1162               	iorwf	(___flpack@arg+2)& (0+255),w,b
  6162  003AD2  0100               	movlb	0	; () banked
  6163  003AD4  1163               	iorwf	(___flpack@arg+3)& (0+255),w,b
  6164  003AD6  A4D8               	btfss	status,2,c
  6165  003AD8  D014               	goto	l5375
  6166  003ADA                     l5369:
  6167                           
  6168                           ; BSR set to: 0
  6169  003ADA  0E00               	movlw	0
  6170  003ADC  0100               	movlb	0	; () banked
  6171  003ADE  6F60               	movwf	?___flpack& (0+255),b
  6172  003AE0  0E00               	movlw	0
  6173  003AE2  6F61               	movwf	(?___flpack+1)& (0+255),b
  6174  003AE4  0E00               	movlw	0
  6175  003AE6  6F62               	movwf	(?___flpack+2)& (0+255),b
  6176  003AE8  0E00               	movlw	0
  6177  003AEA  6F63               	movwf	(?___flpack+3)& (0+255),b
  6178                           
  6179                           ; BSR set to: 0
  6180  003AEC  0012               	return	
  6181                           
  6182                           ; BSR set to: 0
  6183  003AEE  D009               	goto	l5375
  6184  003AF0                     l5373:
  6185                           
  6186                           ; BSR set to: 0
  6187  003AF0  0100               	movlb	0	; () banked
  6188  003AF2  2B64               	incf	___flpack@exp& (0+255),f,b
  6189  003AF4  0100               	movlb	0	; () banked
  6190  003AF6  90D8               	bcf	status,0,c
  6191  003AF8  3363               	rrcf	(___flpack@arg+3)& (0+255),f,b
  6192  003AFA  3362               	rrcf	(___flpack@arg+2)& (0+255),f,b
  6193  003AFC  3361               	rrcf	(___flpack@arg+1)& (0+255),f,b
  6194  003AFE  3360               	rrcf	___flpack@arg& (0+255),f,b
  6195  003B00  D000               	goto	l5375
  6196  003B02                     l5375:
  6197                           
  6198                           ; BSR set to: 0
  6199  003B02  0E00               	movlw	0
  6200  003B04  0100               	movlb	0	; () banked
  6201  003B06  1560               	andwf	___flpack@arg& (0+255),w,b
  6202  003B08  0100               	movlb	0	; () banked
  6203  003B0A  6F66               	movwf	??___flpack& (0+255),b
  6204  003B0C  0E00               	movlw	0
  6205  003B0E  0100               	movlb	0	; () banked
  6206  003B10  1561               	andwf	(___flpack@arg+1)& (0+255),w,b
  6207  003B12  0100               	movlb	0	; () banked
  6208  003B14  6F67               	movwf	(??___flpack+1)& (0+255),b
  6209  003B16  0E00               	movlw	0
  6210  003B18  0100               	movlb	0	; () banked
  6211  003B1A  1562               	andwf	(___flpack@arg+2)& (0+255),w,b
  6212  003B1C  0100               	movlb	0	; () banked
  6213  003B1E  6F68               	movwf	(??___flpack+2)& (0+255),b
  6214  003B20  0EFE               	movlw	254
  6215  003B22  0100               	movlb	0	; () banked
  6216  003B24  1563               	andwf	(___flpack@arg+3)& (0+255),w,b
  6217  003B26  0100               	movlb	0	; () banked
  6218  003B28  6F69               	movwf	(??___flpack+3)& (0+255),b
  6219  003B2A  0100               	movlb	0	; () banked
  6220  003B2C  5166               	movf	??___flpack& (0+255),w,b
  6221  003B2E  0100               	movlb	0	; () banked
  6222  003B30  1167               	iorwf	(??___flpack+1)& (0+255),w,b
  6223  003B32  0100               	movlb	0	; () banked
  6224  003B34  1168               	iorwf	(??___flpack+2)& (0+255),w,b
  6225  003B36  0100               	movlb	0	; () banked
  6226  003B38  1169               	iorwf	(??___flpack+3)& (0+255),w,b
  6227  003B3A  B4D8               	btfsc	status,2,c
  6228  003B3C  D011               	goto	l1051
  6229  003B3E  D7D8               	goto	l5373
  6230                           
  6231                           ; BSR set to: 0
  6232  003B40  D00F               	goto	l1051
  6233  003B42                     l5377:
  6234                           
  6235                           ; BSR set to: 0
  6236  003B42  0100               	movlb	0	; () banked
  6237  003B44  2B64               	incf	___flpack@exp& (0+255),f,b
  6238                           
  6239                           ; BSR set to: 0
  6240  003B46  0E01               	movlw	1
  6241  003B48  0100               	movlb	0	; () banked
  6242  003B4A  2760               	addwf	___flpack@arg& (0+255),f,b
  6243  003B4C  0E00               	movlw	0
  6244  003B4E  2361               	addwfc	(___flpack@arg+1)& (0+255),f,b
  6245  003B50  2362               	addwfc	(___flpack@arg+2)& (0+255),f,b
  6246  003B52  2363               	addwfc	(___flpack@arg+3)& (0+255),f,b
  6247                           
  6248                           ; BSR set to: 0
  6249  003B54  0100               	movlb	0	; () banked
  6250  003B56  90D8               	bcf	status,0,c
  6251  003B58  3363               	rrcf	(___flpack@arg+3)& (0+255),f,b
  6252  003B5A  3362               	rrcf	(___flpack@arg+2)& (0+255),f,b
  6253  003B5C  3361               	rrcf	(___flpack@arg+1)& (0+255),f,b
  6254  003B5E  3360               	rrcf	___flpack@arg& (0+255),f,b
  6255  003B60                     l1051:
  6256                           
  6257                           ; BSR set to: 0
  6258  003B60  0E00               	movlw	0
  6259  003B62  0100               	movlb	0	; () banked
  6260  003B64  1560               	andwf	___flpack@arg& (0+255),w,b
  6261  003B66  0100               	movlb	0	; () banked
  6262  003B68  6F66               	movwf	??___flpack& (0+255),b
  6263  003B6A  0E00               	movlw	0
  6264  003B6C  0100               	movlb	0	; () banked
  6265  003B6E  1561               	andwf	(___flpack@arg+1)& (0+255),w,b
  6266  003B70  0100               	movlb	0	; () banked
  6267  003B72  6F67               	movwf	(??___flpack+1)& (0+255),b
  6268  003B74  0E00               	movlw	0
  6269  003B76  0100               	movlb	0	; () banked
  6270  003B78  1562               	andwf	(___flpack@arg+2)& (0+255),w,b
  6271  003B7A  0100               	movlb	0	; () banked
  6272  003B7C  6F68               	movwf	(??___flpack+2)& (0+255),b
  6273  003B7E  0EFF               	movlw	255
  6274  003B80  0100               	movlb	0	; () banked
  6275  003B82  1563               	andwf	(___flpack@arg+3)& (0+255),w,b
  6276  003B84  0100               	movlb	0	; () banked
  6277  003B86  6F69               	movwf	(??___flpack+3)& (0+255),b
  6278  003B88  0100               	movlb	0	; () banked
  6279  003B8A  5166               	movf	??___flpack& (0+255),w,b
  6280  003B8C  0100               	movlb	0	; () banked
  6281  003B8E  1167               	iorwf	(??___flpack+1)& (0+255),w,b
  6282  003B90  0100               	movlb	0	; () banked
  6283  003B92  1168               	iorwf	(??___flpack+2)& (0+255),w,b
  6284  003B94  0100               	movlb	0	; () banked
  6285  003B96  1169               	iorwf	(??___flpack+3)& (0+255),w,b
  6286  003B98  B4D8               	btfsc	status,2,c
  6287  003B9A  D00B               	goto	l5385
  6288  003B9C  D7D2               	goto	l5377
  6289                           
  6290                           ; BSR set to: 0
  6291  003B9E  D009               	goto	l5385
  6292  003BA0                     l5383:
  6293                           
  6294                           ; BSR set to: 0
  6295  003BA0  0100               	movlb	0	; () banked
  6296  003BA2  0764               	decf	___flpack@exp& (0+255),f,b
  6297  003BA4  0100               	movlb	0	; () banked
  6298  003BA6  90D8               	bcf	status,0,c
  6299  003BA8  3760               	rlcf	___flpack@arg& (0+255),f,b
  6300  003BAA  3761               	rlcf	(___flpack@arg+1)& (0+255),f,b
  6301  003BAC  3762               	rlcf	(___flpack@arg+2)& (0+255),f,b
  6302  003BAE  3763               	rlcf	(___flpack@arg+3)& (0+255),f,b
  6303  003BB0  D000               	goto	l5385
  6304  003BB2                     l5385:
  6305                           
  6306                           ; BSR set to: 0
  6307  003BB2  0100               	movlb	0	; () banked
  6308  003BB4  BF62               	btfsc	(___flpack@arg+2)& (0+255),7,b
  6309  003BB6  D005               	goto	l1058
  6310                           
  6311                           ; BSR set to: 0
  6312  003BB8  0E02               	movlw	2
  6313  003BBA  0100               	movlb	0	; () banked
  6314  003BBC  6164               	cpfslt	___flpack@exp& (0+255),b
  6315  003BBE  D7F0               	goto	l5383
  6316  003BC0  D000               	goto	l1058
  6317  003BC2                     l1058:
  6318                           
  6319                           ; BSR set to: 0
  6320  003BC2  0100               	movlb	0	; () banked
  6321  003BC4  B164               	btfsc	___flpack@exp& (0+255),0,b
  6322  003BC6  D009               	goto	l1059
  6323                           
  6324                           ; BSR set to: 0
  6325  003BC8  0EFF               	movlw	255
  6326  003BCA  0100               	movlb	0	; () banked
  6327  003BCC  1760               	andwf	___flpack@arg& (0+255),f,b
  6328  003BCE  0EFF               	movlw	255
  6329  003BD0  1761               	andwf	(___flpack@arg+1)& (0+255),f,b
  6330  003BD2  0E7F               	movlw	127
  6331  003BD4  1762               	andwf	(___flpack@arg+2)& (0+255),f,b
  6332  003BD6  0EFF               	movlw	255
  6333  003BD8  1763               	andwf	(___flpack@arg+3)& (0+255),f,b
  6334  003BDA                     l1059:
  6335                           
  6336                           ; BSR set to: 0
  6337  003BDA  0100               	movlb	0	; () banked
  6338  003BDC  90D8               	bcf	status,0,c
  6339  003BDE  3364               	rrcf	___flpack@exp& (0+255),f,b
  6340  003BE0  C064  F066         	movff	___flpack@exp,??___flpack
  6341  003BE4  0100               	movlb	0	; () banked
  6342  003BE6  6B67               	clrf	(??___flpack+1)& (0+255),b
  6343  003BE8  6B68               	clrf	(??___flpack+2)& (0+255),b
  6344  003BEA  6B69               	clrf	(??___flpack+3)& (0+255),b
  6345  003BEC  C066  F069         	movff	??___flpack,??___flpack+3
  6346  003BF0  0100               	movlb	0	; () banked
  6347  003BF2  6B68               	clrf	(??___flpack+2)& (0+255),b
  6348  003BF4  6B67               	clrf	(??___flpack+1)& (0+255),b
  6349  003BF6  6B66               	clrf	??___flpack& (0+255),b
  6350  003BF8  0100               	movlb	0	; () banked
  6351  003BFA  5166               	movf	??___flpack& (0+255),w,b
  6352  003BFC  0100               	movlb	0	; () banked
  6353  003BFE  1360               	iorwf	___flpack@arg& (0+255),f,b
  6354  003C00  0100               	movlb	0	; () banked
  6355  003C02  5167               	movf	(??___flpack+1)& (0+255),w,b
  6356  003C04  0100               	movlb	0	; () banked
  6357  003C06  1361               	iorwf	(___flpack@arg+1)& (0+255),f,b
  6358  003C08  0100               	movlb	0	; () banked
  6359  003C0A  5168               	movf	(??___flpack+2)& (0+255),w,b
  6360  003C0C  0100               	movlb	0	; () banked
  6361  003C0E  1362               	iorwf	(___flpack@arg+2)& (0+255),f,b
  6362  003C10  0100               	movlb	0	; () banked
  6363  003C12  5169               	movf	(??___flpack+3)& (0+255),w,b
  6364  003C14  0100               	movlb	0	; () banked
  6365  003C16  1363               	iorwf	(___flpack@arg+3)& (0+255),f,b
  6366                           
  6367                           ; BSR set to: 0
  6368  003C18  0100               	movlb	0	; () banked
  6369  003C1A  5165               	movf	___flpack@sign& (0+255),w,b
  6370  003C1C  0100               	movlb	0	; () banked
  6371  003C1E  B4D8               	btfsc	status,2,c
  6372  003C20  D003               	goto	l5395
  6373                           
  6374                           ; BSR set to: 0
  6375  003C22  0100               	movlb	0	; () banked
  6376  003C24  8F63               	bsf	(___flpack@arg+3)& (0+255),7,b
  6377  003C26  D000               	goto	l5395
  6378  003C28                     l5395:
  6379                           
  6380                           ; BSR set to: 0
  6381  003C28  C060  F060         	movff	___flpack@arg,?___flpack
  6382  003C2C  C061  F061         	movff	___flpack@arg+1,?___flpack+1
  6383  003C30  C062  F062         	movff	___flpack@arg+2,?___flpack+2
  6384  003C34  C063  F063         	movff	___flpack@arg+3,?___flpack+3
  6385  003C38  0012               	return	
  6386                           
  6387                           ; BSR set to: 0
  6388                           
  6389                           ; BSR set to: 0
  6390  003C3A  0012               	return		;funcret
  6391  003C3C                     __end_of___flpack:
  6392                           	opt stack 0
  6393                           tblptru	equ	0xFF8
  6394                           tblptrh	equ	0xFF7
  6395                           tblptrl	equ	0xFF6
  6396                           tablat	equ	0xFF5
  6397                           postinc0	equ	0xFEE
  6398                           wreg	equ	0xFE8
  6399                           postinc2	equ	0xFDE
  6400                           postdec2	equ	0xFDD
  6401                           fsr2h	equ	0xFDA
  6402                           fsr2l	equ	0xFD9
  6403                           status	equ	0xFD8
  6404                           
  6405 ;; *************** function ___lwdiv *****************
  6406 ;; Defined at:
  6407 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  dividend        2    0[BANK0 ] unsigned int 
  6410 ;;  divisor         2    2[BANK0 ] unsigned int 
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;  quotient        2    5[BANK0 ] unsigned int 
  6413 ;;  counter         1    4[BANK0 ] unsigned char 
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  2    0[BANK0 ] unsigned int 
  6416 ;; Registers used:
  6417 ;;		wreg, status,2, status,0
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6423 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6424 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;Total ram usage:        7 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:    2
  6430 ;; This function calls:
  6431 ;;		Nothing
  6432 ;; This function is called by:
  6433 ;;		_rampe
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           	psect	text23
  6438  004B0A                     __ptext23:
  6439                           	opt stack 0
  6440  004B0A                     ___lwdiv:
  6441                           	opt stack 27
  6442                           
  6443                           ; BSR set to: 0
  6444                           ;incstack = 0
  6445  004B0A  0E00               	movlw	0
  6446  004B0C  0100               	movlb	0	; () banked
  6447  004B0E  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6448  004B10  0E00               	movlw	0
  6449  004B12  6F65               	movwf	___lwdiv@quotient& (0+255),b
  6450                           
  6451                           ; BSR set to: 0
  6452  004B14  0100               	movlb	0	; () banked
  6453  004B16  5162               	movf	___lwdiv@divisor& (0+255),w,b
  6454  004B18  0100               	movlb	0	; () banked
  6455  004B1A  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6456  004B1C  B4D8               	btfsc	status,2,c
  6457  004B1E  D031               	goto	l1341
  6458                           
  6459                           ; BSR set to: 0
  6460  004B20  0E01               	movlw	1
  6461  004B22  0100               	movlb	0	; () banked
  6462  004B24  6F64               	movwf	___lwdiv@counter& (0+255),b
  6463  004B26  D007               	goto	l6683
  6464  004B28                     l6681:
  6465                           
  6466                           ; BSR set to: 0
  6467  004B28  0100               	movlb	0	; () banked
  6468  004B2A  90D8               	bcf	status,0,c
  6469  004B2C  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  6470  004B2E  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6471  004B30  0100               	movlb	0	; () banked
  6472  004B32  2B64               	incf	___lwdiv@counter& (0+255),f,b
  6473  004B34  D000               	goto	l6683
  6474  004B36                     l6683:
  6475                           
  6476                           ; BSR set to: 0
  6477  004B36  0100               	movlb	0	; () banked
  6478  004B38  BF63               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  6479  004B3A  D002               	goto	l6685
  6480  004B3C  D7F5               	goto	l6681
  6481                           
  6482                           ; BSR set to: 0
  6483  004B3E  D000               	goto	l6685
  6484  004B40                     l6685:
  6485                           
  6486                           ; BSR set to: 0
  6487  004B40  0100               	movlb	0	; () banked
  6488  004B42  90D8               	bcf	status,0,c
  6489  004B44  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  6490  004B46  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6491                           
  6492                           ; BSR set to: 0
  6493  004B48  0100               	movlb	0	; () banked
  6494  004B4A  5162               	movf	___lwdiv@divisor& (0+255),w,b
  6495  004B4C  0100               	movlb	0	; () banked
  6496  004B4E  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  6497  004B50  0100               	movlb	0	; () banked
  6498  004B52  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6499  004B54  0100               	movlb	0	; () banked
  6500  004B56  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6501  004B58  A0D8               	btfss	status,0,c
  6502  004B5A  D00B               	goto	l6693
  6503                           
  6504                           ; BSR set to: 0
  6505  004B5C  0100               	movlb	0	; () banked
  6506  004B5E  5162               	movf	___lwdiv@divisor& (0+255),w,b
  6507  004B60  0100               	movlb	0	; () banked
  6508  004B62  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  6509  004B64  0100               	movlb	0	; () banked
  6510  004B66  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6511  004B68  0100               	movlb	0	; () banked
  6512  004B6A  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6513                           
  6514                           ; BSR set to: 0
  6515  004B6C  0100               	movlb	0	; () banked
  6516  004B6E  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  6517  004B70  D000               	goto	l6693
  6518  004B72                     l6693:
  6519                           
  6520                           ; BSR set to: 0
  6521  004B72  0100               	movlb	0	; () banked
  6522  004B74  90D8               	bcf	status,0,c
  6523  004B76  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6524  004B78  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  6525                           
  6526                           ; BSR set to: 0
  6527  004B7A  0100               	movlb	0	; () banked
  6528  004B7C  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  6529  004B7E  D7E0               	goto	l6685
  6530  004B80  D000               	goto	l1341
  6531  004B82                     l1341:
  6532                           
  6533                           ; BSR set to: 0
  6534  004B82  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  6535  004B86  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6536                           
  6537                           ; BSR set to: 0
  6538  004B8A  0012               	return		;funcret
  6539  004B8C                     __end_of___lwdiv:
  6540                           	opt stack 0
  6541                           tblptru	equ	0xFF8
  6542                           tblptrh	equ	0xFF7
  6543                           tblptrl	equ	0xFF6
  6544                           tablat	equ	0xFF5
  6545                           postinc0	equ	0xFEE
  6546                           wreg	equ	0xFE8
  6547                           postinc2	equ	0xFDE
  6548                           postdec2	equ	0xFDD
  6549                           fsr2h	equ	0xFDA
  6550                           fsr2l	equ	0xFD9
  6551                           status	equ	0xFD8
  6552                           
  6553 ;; *************** function ___aldiv *****************
  6554 ;; Defined at:
  6555 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;  dividend        4    0[BANK0 ] long 
  6558 ;;  divisor         4    4[BANK0 ] long 
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;  quotient        4   10[BANK0 ] long 
  6561 ;;  sign            1    9[BANK0 ] unsigned char 
  6562 ;;  counter         1    8[BANK0 ] unsigned char 
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  4    0[BANK0 ] long 
  6565 ;; Registers used:
  6566 ;;		wreg, status,2, status,0
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6572 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6573 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6575 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6576 ;;Total ram usage:       14 bytes
  6577 ;; Hardware stack levels used:    1
  6578 ;; Hardware stack levels required when called:    2
  6579 ;; This function calls:
  6580 ;;		Nothing
  6581 ;; This function is called by:
  6582 ;;		_rampe
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text24
  6587  0042BE                     __ptext24:
  6588                           	opt stack 0
  6589  0042BE                     ___aldiv:
  6590                           	opt stack 27
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;incstack = 0
  6594  0042BE  0E00               	movlw	0
  6595  0042C0  0100               	movlb	0	; () banked
  6596  0042C2  6F69               	movwf	___aldiv@sign& (0+255),b
  6597                           
  6598                           ; BSR set to: 0
  6599  0042C4  0100               	movlb	0	; () banked
  6600  0042C6  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6601  0042C8  D00D               	goto	l6595
  6602                           
  6603                           ; BSR set to: 0
  6604  0042CA  0100               	movlb	0	; () banked
  6605  0042CC  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6606  0042CE  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6607  0042D0  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6608  0042D2  6D64               	negf	___aldiv@divisor& (0+255),b
  6609  0042D4  0E00               	movlw	0
  6610  0042D6  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6611  0042D8  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6612  0042DA  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6613                           
  6614                           ; BSR set to: 0
  6615  0042DC  0E01               	movlw	1
  6616  0042DE  0100               	movlb	0	; () banked
  6617  0042E0  6F69               	movwf	___aldiv@sign& (0+255),b
  6618  0042E2  D000               	goto	l6595
  6619  0042E4                     l6595:
  6620                           
  6621                           ; BSR set to: 0
  6622  0042E4  0100               	movlb	0	; () banked
  6623  0042E6  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  6624  0042E8  D00D               	goto	l6601
  6625                           
  6626                           ; BSR set to: 0
  6627  0042EA  0100               	movlb	0	; () banked
  6628  0042EC  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
  6629  0042EE  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
  6630  0042F0  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
  6631  0042F2  6D60               	negf	___aldiv@dividend& (0+255),b
  6632  0042F4  0E00               	movlw	0
  6633  0042F6  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  6634  0042F8  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  6635  0042FA  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  6636                           
  6637                           ; BSR set to: 0
  6638  0042FC  0E01               	movlw	1
  6639  0042FE  0100               	movlb	0	; () banked
  6640  004300  1B69               	xorwf	___aldiv@sign& (0+255),f,b
  6641  004302  D000               	goto	l6601
  6642  004304                     l6601:
  6643                           
  6644                           ; BSR set to: 0
  6645  004304  0E00               	movlw	0
  6646  004306  0100               	movlb	0	; () banked
  6647  004308  6F6A               	movwf	___aldiv@quotient& (0+255),b
  6648  00430A  0E00               	movlw	0
  6649  00430C  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
  6650  00430E  0E00               	movlw	0
  6651  004310  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
  6652  004312  0E00               	movlw	0
  6653  004314  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
  6654                           
  6655                           ; BSR set to: 0
  6656  004316  0100               	movlb	0	; () banked
  6657  004318  5164               	movf	___aldiv@divisor& (0+255),w,b
  6658  00431A  0100               	movlb	0	; () banked
  6659  00431C  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  6660  00431E  0100               	movlb	0	; () banked
  6661  004320  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  6662  004322  0100               	movlb	0	; () banked
  6663  004324  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  6664  004326  B4D8               	btfsc	status,2,c
  6665  004328  D047               	goto	l6623
  6666                           
  6667                           ; BSR set to: 0
  6668  00432A  0E01               	movlw	1
  6669  00432C  0100               	movlb	0	; () banked
  6670  00432E  6F68               	movwf	___aldiv@counter& (0+255),b
  6671  004330  D009               	goto	l6609
  6672  004332                     l6607:
  6673                           
  6674                           ; BSR set to: 0
  6675  004332  0100               	movlb	0	; () banked
  6676  004334  90D8               	bcf	status,0,c
  6677  004336  3764               	rlcf	___aldiv@divisor& (0+255),f,b
  6678  004338  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  6679  00433A  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  6680  00433C  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  6681  00433E  0100               	movlb	0	; () banked
  6682  004340  2B68               	incf	___aldiv@counter& (0+255),f,b
  6683  004342  D000               	goto	l6609
  6684  004344                     l6609:
  6685                           
  6686                           ; BSR set to: 0
  6687  004344  0100               	movlb	0	; () banked
  6688  004346  BF67               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  6689  004348  D002               	goto	l6611
  6690  00434A  D7F3               	goto	l6607
  6691                           
  6692                           ; BSR set to: 0
  6693  00434C  D000               	goto	l6611
  6694  00434E                     l6611:
  6695                           
  6696                           ; BSR set to: 0
  6697  00434E  0100               	movlb	0	; () banked
  6698  004350  90D8               	bcf	status,0,c
  6699  004352  376A               	rlcf	___aldiv@quotient& (0+255),f,b
  6700  004354  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  6701  004356  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  6702  004358  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  6703                           
  6704                           ; BSR set to: 0
  6705  00435A  0100               	movlb	0	; () banked
  6706  00435C  5164               	movf	___aldiv@divisor& (0+255),w,b
  6707  00435E  0100               	movlb	0	; () banked
  6708  004360  5D60               	subwf	___aldiv@dividend& (0+255),w,b
  6709  004362  0100               	movlb	0	; () banked
  6710  004364  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6711  004366  0100               	movlb	0	; () banked
  6712  004368  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  6713  00436A  0100               	movlb	0	; () banked
  6714  00436C  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6715  00436E  0100               	movlb	0	; () banked
  6716  004370  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  6717  004372  0100               	movlb	0	; () banked
  6718  004374  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6719  004376  0100               	movlb	0	; () banked
  6720  004378  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  6721  00437A  A0D8               	btfss	status,0,c
  6722  00437C  D013               	goto	l6619
  6723                           
  6724                           ; BSR set to: 0
  6725  00437E  0100               	movlb	0	; () banked
  6726  004380  5164               	movf	___aldiv@divisor& (0+255),w,b
  6727  004382  0100               	movlb	0	; () banked
  6728  004384  5F60               	subwf	___aldiv@dividend& (0+255),f,b
  6729  004386  0100               	movlb	0	; () banked
  6730  004388  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6731  00438A  0100               	movlb	0	; () banked
  6732  00438C  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  6733  00438E  0100               	movlb	0	; () banked
  6734  004390  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6735  004392  0100               	movlb	0	; () banked
  6736  004394  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  6737  004396  0100               	movlb	0	; () banked
  6738  004398  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6739  00439A  0100               	movlb	0	; () banked
  6740  00439C  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  6741                           
  6742                           ; BSR set to: 0
  6743  00439E  0100               	movlb	0	; () banked
  6744  0043A0  816A               	bsf	___aldiv@quotient& (0+255),0,b
  6745  0043A2  D000               	goto	l6619
  6746  0043A4                     l6619:
  6747                           
  6748                           ; BSR set to: 0
  6749  0043A4  0100               	movlb	0	; () banked
  6750  0043A6  90D8               	bcf	status,0,c
  6751  0043A8  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  6752  0043AA  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  6753  0043AC  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  6754  0043AE  3364               	rrcf	___aldiv@divisor& (0+255),f,b
  6755                           
  6756                           ; BSR set to: 0
  6757  0043B0  0100               	movlb	0	; () banked
  6758  0043B2  2F68               	decfsz	___aldiv@counter& (0+255),f,b
  6759  0043B4  D7CC               	goto	l6611
  6760                           
  6761                           ; BSR set to: 0
  6762  0043B6  D000               	goto	l6623
  6763  0043B8                     l6623:
  6764                           
  6765                           ; BSR set to: 0
  6766  0043B8  0100               	movlb	0	; () banked
  6767  0043BA  5169               	movf	___aldiv@sign& (0+255),w,b
  6768  0043BC  0100               	movlb	0	; () banked
  6769  0043BE  B4D8               	btfsc	status,2,c
  6770  0043C0  D00A               	goto	l6627
  6771                           
  6772                           ; BSR set to: 0
  6773  0043C2  0100               	movlb	0	; () banked
  6774  0043C4  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  6775  0043C6  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  6776  0043C8  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  6777  0043CA  6D6A               	negf	___aldiv@quotient& (0+255),b
  6778  0043CC  0E00               	movlw	0
  6779  0043CE  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  6780  0043D0  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  6781  0043D2  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  6782  0043D4  D000               	goto	l6627
  6783  0043D6                     l6627:
  6784                           
  6785                           ; BSR set to: 0
  6786  0043D6  C06A  F060         	movff	___aldiv@quotient,?___aldiv
  6787  0043DA  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
  6788  0043DE  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
  6789  0043E2  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
  6790  0043E6  0012               	return	
  6791                           
  6792                           ; BSR set to: 0
  6793                           
  6794                           ; BSR set to: 0
  6795  0043E8  0012               	return		;funcret
  6796  0043EA                     __end_of___aldiv:
  6797                           	opt stack 0
  6798                           tblptru	equ	0xFF8
  6799                           tblptrh	equ	0xFF7
  6800                           tblptrl	equ	0xFF6
  6801                           tablat	equ	0xFF5
  6802                           postinc0	equ	0xFEE
  6803                           wreg	equ	0xFE8
  6804                           postinc2	equ	0xFDE
  6805                           postdec2	equ	0xFDD
  6806                           fsr2h	equ	0xFDA
  6807                           fsr2l	equ	0xFD9
  6808                           status	equ	0xFD8
  6809                           
  6810 ;; *************** function _SetDCEPWM1 *****************
  6811 ;; Defined at:
  6812 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew1setdc.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  6817 ;; Return value:  Size  Location     Type
  6818 ;;		None               void
  6819 ;; Registers used:
  6820 ;;		wreg, status,2, status,0
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6826 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6828 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6829 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6830 ;;Total ram usage:        6 bytes
  6831 ;; Hardware stack levels used:    1
  6832 ;; Hardware stack levels required when called:    2
  6833 ;; This function calls:
  6834 ;;		Nothing
  6835 ;; This function is called by:
  6836 ;;		_main
  6837 ;;		_rampe
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text25
  6842  004D8E                     __ptext25:
  6843                           	opt stack 0
  6844  004D8E                     _SetDCEPWM1:
  6845                           	opt stack 27
  6846                           
  6847                           ; BSR set to: 0
  6848                           ;incstack = 0
  6849  004D8E  C060  F062         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  6850  004D92  C061  F063         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  6851  004D96  0E06               	movlw	6
  6852  004D98                     u8695:
  6853  004D98  90D8               	bcf	status,0,c
  6854  004D9A  0100               	movlb	0	; () banked
  6855  004D9C  3762               	rlcf	??_SetDCEPWM1& (0+255),f,b
  6856  004D9E  3763               	rlcf	(??_SetDCEPWM1+1)& (0+255),f,b
  6857  004DA0  2EE8               	decfsz	wreg,f,c
  6858  004DA2  D7FA               	goto	u8695
  6859  004DA4  C062  F064         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  6860  004DA8  C063  F065         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  6861                           
  6862                           ; BSR set to: 0
  6863  004DAC  C065  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  6864  004DB0  C064  F062         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  6865  004DB4  0100               	movlb	0	; () banked
  6866  004DB6  90D8               	bcf	status,0,c
  6867  004DB8  3362               	rrcf	??_SetDCEPWM1& (0+255),f,b
  6868  004DBA  0100               	movlb	0	; () banked
  6869  004DBC  90D8               	bcf	status,0,c
  6870  004DBE  3362               	rrcf	??_SetDCEPWM1& (0+255),f,b
  6871  004DC0  0E30               	movlw	48
  6872  004DC2  0100               	movlb	0	; () banked
  6873  004DC4  1762               	andwf	??_SetDCEPWM1& (0+255),f,b
  6874  004DC6  50BA               	movf	4026,w,c	;volatile
  6875  004DC8  0BCF               	andlw	207
  6876  004DCA  0100               	movlb	0	; () banked
  6877  004DCC  1162               	iorwf	??_SetDCEPWM1& (0+255),w,b
  6878  004DCE  6EBA               	movwf	4026,c	;volatile
  6879                           
  6880                           ; BSR set to: 0
  6881  004DD0  0012               	return		;funcret
  6882  004DD2                     __end_of_SetDCEPWM1:
  6883                           	opt stack 0
  6884                           tblptru	equ	0xFF8
  6885                           tblptrh	equ	0xFF7
  6886                           tblptrl	equ	0xFF6
  6887                           tablat	equ	0xFF5
  6888                           postinc0	equ	0xFEE
  6889                           wreg	equ	0xFE8
  6890                           postinc2	equ	0xFDE
  6891                           postdec2	equ	0xFDD
  6892                           fsr2h	equ	0xFDA
  6893                           fsr2l	equ	0xFD9
  6894                           status	equ	0xFD8
  6895                           
  6896 ;; *************** function _configurazione_iniziale *****************
  6897 ;; Defined at:
  6898 ;;		line 314 in file "motore.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;		None
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;		None
  6903 ;; Return value:  Size  Location     Type
  6904 ;;		None               void
  6905 ;; Registers used:
  6906 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6916 ;;Total ram usage:        0 bytes
  6917 ;; Hardware stack levels used:    1
  6918 ;; Hardware stack levels required when called:    4
  6919 ;; This function calls:
  6920 ;;		_CANInitialize
  6921 ;;		_SetOutputEPWM1
  6922 ;;		_delay_ms
  6923 ;; This function is called by:
  6924 ;;		_main
  6925 ;; This function uses a non-reentrant model
  6926 ;;
  6927                           
  6928                           	psect	text26
  6929  0049BE                     __ptext26:
  6930                           	opt stack 0
  6931  0049BE                     _configurazione_iniziale:
  6932                           	opt stack 26
  6933                           
  6934                           ;motore.c: 317: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;incstack = 0
  6938  0049BE  0E06               	movlw	6
  6939  0049C0  0100               	movlb	0	; () banked
  6940  0049C2  6F6E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  6941  0049C4  0E05               	movlw	5
  6942  0049C6  0100               	movlb	0	; () banked
  6943  0049C8  6F6F               	movwf	CANInitialize@phaseSeg2& (0+255),b
  6944  0049CA  0E01               	movlw	1
  6945  0049CC  0100               	movlb	0	; () banked
  6946  0049CE  6F70               	movwf	CANInitialize@SJW& (0+255),b
  6947  0049D0  0E03               	movlw	3
  6948  0049D2  0100               	movlb	0	; () banked
  6949  0049D4  6F71               	movwf	CANInitialize@BRP& (0+255),b
  6950  0049D6  0E9D               	movlw	157
  6951  0049D8  0100               	movlb	0	; () banked
  6952  0049DA  6F72               	movwf	CANInitialize@flags& (0+255),b
  6953  0049DC  0E04               	movlw	4
  6954  0049DE  EC77  F01C         	call	_CANInitialize
  6955                           
  6956                           ;motore.c: 318: RCONbits.IPEN = 1;
  6957  0049E2  8ED0               	bsf	4048,7,c	;volatile
  6958                           
  6959                           ;motore.c: 319: INTCONbits.INT0IF = 0;
  6960  0049E4  92F2               	bcf	intcon,1,c	;volatile
  6961                           
  6962                           ;motore.c: 320: PIR3bits.RXB1IF = 0;
  6963  0049E6  92A4               	bcf	4004,1,c	;volatile
  6964                           
  6965                           ;motore.c: 321: PIR3bits.RXB0IF = 0;
  6966  0049E8  90A4               	bcf	4004,0,c	;volatile
  6967                           
  6968                           ;motore.c: 323: IPR3bits.RXB1IP = 0;
  6969  0049EA  92A5               	bcf	4005,1,c	;volatile
  6970                           
  6971                           ;motore.c: 324: IPR3bits.RXB0IP = 0;
  6972  0049EC  90A5               	bcf	4005,0,c	;volatile
  6973                           
  6974                           ;motore.c: 325: INTCONbits.GIEH = 1;
  6975  0049EE  8EF2               	bsf	intcon,7,c	;volatile
  6976                           
  6977                           ;motore.c: 326: INTCONbits.GIEL = 1;
  6978  0049F0  8CF2               	bsf	intcon,6,c	;volatile
  6979                           
  6980                           ;motore.c: 329: T3CON = 0x01;
  6981  0049F2  0E01               	movlw	1
  6982  0049F4  6EB1               	movwf	4017,c	;volatile
  6983                           
  6984                           ;motore.c: 330: PIR2bits.TMR3IF = 0;
  6985  0049F6  92A1               	bcf	4001,1,c	;volatile
  6986                           
  6987                           ;motore.c: 331: IPR2bits.TMR3IP = 0;
  6988  0049F8  92A2               	bcf	4002,1,c	;volatile
  6989                           
  6990                           ;motore.c: 332: TMR3H = 0x63;
  6991  0049FA  0E63               	movlw	99
  6992  0049FC  6EB3               	movwf	4019,c	;volatile
  6993                           
  6994                           ;motore.c: 333: TMR3L = 0xC0;
  6995  0049FE  0EC0               	movlw	192
  6996  004A00  6EB2               	movwf	4018,c	;volatile
  6997                           
  6998                           ;motore.c: 338: ADCON0bits.ADON = 1;
  6999  004A02  80C2               	bsf	4034,0,c	;volatile
  7000                           
  7001                           ;motore.c: 339: ADCON0bits.CHS0 = 0;
  7002  004A04  94C2               	bcf	4034,2,c	;volatile
  7003                           
  7004                           ;motore.c: 340: ADCON0bits.CHS1 = 0;
  7005  004A06  96C2               	bcf	4034,3,c	;volatile
  7006                           
  7007                           ;motore.c: 341: ADCON0bits.CHS2 = 0;
  7008  004A08  98C2               	bcf	4034,4,c	;volatile
  7009                           
  7010                           ;motore.c: 342: ADCON0bits.CHS3 = 0;
  7011  004A0A  9AC2               	bcf	4034,5,c	;volatile
  7012                           
  7013                           ;motore.c: 343: ADCON1bits.PCFG0 = 0;
  7014  004A0C  90C1               	bcf	4033,0,c	;volatile
  7015                           
  7016                           ;motore.c: 344: ADCON1bits.PCFG1 = 1;
  7017  004A0E  82C1               	bsf	4033,1,c	;volatile
  7018                           
  7019                           ;motore.c: 345: ADCON1bits.PCFG2 = 1;
  7020  004A10  84C1               	bsf	4033,2,c	;volatile
  7021                           
  7022                           ;motore.c: 346: ADCON1bits.PCFG3 = 1;
  7023  004A12  86C1               	bsf	4033,3,c	;volatile
  7024                           
  7025                           ;motore.c: 347: ADCON1bits.VCFG0 = 0;
  7026  004A14  98C1               	bcf	4033,4,c	;volatile
  7027                           
  7028                           ;motore.c: 348: ADCON1bits.VCFG1 = 0;
  7029  004A16  9AC1               	bcf	4033,5,c	;volatile
  7030                           
  7031                           ;motore.c: 349: ADCON2bits.ADCS0 = 1;
  7032  004A18  80C0               	bsf	4032,0,c	;volatile
  7033                           
  7034                           ;motore.c: 350: ADCON2bits.ADCS1 = 0;
  7035  004A1A  92C0               	bcf	4032,1,c	;volatile
  7036                           
  7037                           ;motore.c: 351: ADCON2bits.ADCS2 = 1;
  7038  004A1C  84C0               	bsf	4032,2,c	;volatile
  7039                           
  7040                           ;motore.c: 352: ADCON2bits.ACQT0 = 0;
  7041  004A1E  96C0               	bcf	4032,3,c	;volatile
  7042                           
  7043                           ;motore.c: 353: ADCON2bits.ACQT1 = 1;
  7044  004A20  88C0               	bsf	4032,4,c	;volatile
  7045                           
  7046                           ;motore.c: 354: ADCON2bits.ACQT2 = 1;
  7047  004A22  8AC0               	bsf	4032,5,c	;volatile
  7048                           
  7049                           ;motore.c: 355: ADCON2bits.ADFM = 0;
  7050  004A24  9EC0               	bcf	4032,7,c	;volatile
  7051                           
  7052                           ;motore.c: 358: PIE3bits.RXB1IE = 1;
  7053  004A26  82A3               	bsf	4003,1,c	;volatile
  7054                           
  7055                           ;motore.c: 359: PIE3bits.RXB0IE = 1;
  7056  004A28  80A3               	bsf	4003,0,c	;volatile
  7057                           
  7058                           ;motore.c: 360: PIE2bits.TMR3IE = 1;
  7059  004A2A  82A0               	bsf	4000,1,c	;volatile
  7060                           
  7061                           ;motore.c: 362: LATA = 0x00;
  7062  004A2C  0E00               	movlw	0
  7063  004A2E  6E89               	movwf	3977,c	;volatile
  7064                           
  7065                           ;motore.c: 363: TRISA = 0b01111101;
  7066  004A30  0E7D               	movlw	125
  7067  004A32  6E92               	movwf	3986,c	;volatile
  7068                           
  7069                           ;motore.c: 365: LATB = 0x00;
  7070  004A34  0E00               	movlw	0
  7071  004A36  6E8A               	movwf	3978,c	;volatile
  7072                           
  7073                           ;motore.c: 366: TRISB = 0b11111011;
  7074  004A38  0EFB               	movlw	251
  7075  004A3A  6E93               	movwf	3987,c	;volatile
  7076                           
  7077                           ;motore.c: 368: LATC = 0x00;
  7078  004A3C  0E00               	movlw	0
  7079  004A3E  6E8B               	movwf	3979,c	;volatile
  7080                           
  7081                           ;motore.c: 369: TRISC = 0x00;
  7082  004A40  0E00               	movlw	0
  7083  004A42  6E94               	movwf	3988,c	;volatile
  7084                           
  7085                           ;motore.c: 371: LATD = 0x00;
  7086  004A44  0E00               	movlw	0
  7087  004A46  6E8C               	movwf	3980,c	;volatile
  7088                           
  7089                           ;motore.c: 372: TRISD = 0x00;
  7090  004A48  0E00               	movlw	0
  7091  004A4A  6E95               	movwf	3989,c	;volatile
  7092                           
  7093                           ;motore.c: 374: LATE = 0x00;
  7094  004A4C  0E00               	movlw	0
  7095  004A4E  6E8D               	movwf	3981,c	;volatile
  7096                           
  7097                           ;motore.c: 375: TRISE = 0xFF;
  7098  004A50  6896               	setf	3990,c	;volatile
  7099                           
  7100                           ;motore.c: 376: delay_ms(2);
  7101  004A52  0E00               	movlw	0
  7102  004A54  0100               	movlb	0	; () banked
  7103  004A56  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  7104  004A58  0E02               	movlw	2
  7105  004A5A  6F66               	movwf	delay_ms@value_ms& (0+255),b
  7106  004A5C  EC3D  F027         	call	_delay_ms	;wreg free
  7107                           
  7108                           ;motore.c: 377: SetOutputEPWM1(0b01111111, 0b11111100);
  7109  004A60  0EFC               	movlw	252
  7110  004A62  0100               	movlb	0	; () banked
  7111  004A64  6F60               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  7112  004A66  0E7F               	movlw	127
  7113  004A68  EC4E  F026         	call	_SetOutputEPWM1
  7114  004A6C  0012               	return		;funcret
  7115  004A6E                     __end_of_configurazione_iniziale:
  7116                           	opt stack 0
  7117                           tblptru	equ	0xFF8
  7118                           tblptrh	equ	0xFF7
  7119                           tblptrl	equ	0xFF6
  7120                           tablat	equ	0xFF5
  7121                           intcon	equ	0xFF2
  7122                           postinc0	equ	0xFEE
  7123                           wreg	equ	0xFE8
  7124                           postinc2	equ	0xFDE
  7125                           postdec2	equ	0xFDD
  7126                           fsr2h	equ	0xFDA
  7127                           fsr2l	equ	0xFD9
  7128                           status	equ	0xFD8
  7129                           
  7130 ;; *************** function _delay_ms *****************
  7131 ;; Defined at:
  7132 ;;		line 61 in file "delay.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;  value_ms        2    6[BANK0 ] unsigned int 
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;		None
  7137 ;; Return value:  Size  Location     Type
  7138 ;;		None               void
  7139 ;; Registers used:
  7140 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7146 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7149 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7150 ;;Total ram usage:        2 bytes
  7151 ;; Hardware stack levels used:    1
  7152 ;; Hardware stack levels required when called:    3
  7153 ;; This function calls:
  7154 ;;		___wmul
  7155 ;; This function is called by:
  7156 ;;		_main
  7157 ;;		_configurazione_iniziale
  7158 ;;		_delay_s
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           	psect	text27
  7163  004E7A                     __ptext27:
  7164                           	opt stack 0
  7165  004E7A                     _delay_ms:
  7166                           	opt stack 27
  7167                           
  7168                           ;delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  7169                           
  7170                           ;incstack = 0
  7171  004E7A  C042  F060         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  7172  004E7E  0100               	movlb	0	; () banked
  7173  004E80  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  7174  004E82  C066  F062         	movff	delay_ms@value_ms,___wmul@multiplicand
  7175  004E86  C067  F063         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  7176  004E8A  EC07  F027         	call	___wmul	;wreg free
  7177  004E8E  C060  F02F         	movff	?___wmul,_clock_counter_reference	;volatile
  7178  004E92  C061  F030         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  7179                           
  7180                           ;delay.c: 75: while (clock_counter_reference) {
  7181  004E96  D006               	goto	l575
  7182  004E98                     l6523:
  7183                           
  7184                           ;delay.c: 85: _delay(240);
  7185  004E98  0E50               	movlw	80
  7186  004E9A                     u9417:
  7187  004E9A  2EE8               	decfsz	wreg,f,c
  7188  004E9C  D7FE               	goto	u9417
  7189                           
  7190                           ;delay.c: 88: clock_counter_reference--;
  7191  004E9E  062F               	decf	_clock_counter_reference,f,c	;volatile
  7192  004EA0  A0D8               	btfss	status,0,c
  7193  004EA2  0630               	decf	_clock_counter_reference+1,f,c	;volatile
  7194  004EA4                     l575:
  7195  004EA4  502F               	movf	_clock_counter_reference,w,c	;volatile
  7196  004EA6  1030               	iorwf	_clock_counter_reference+1,w,c	;volatile
  7197  004EA8  A4D8               	btfss	status,2,c
  7198  004EAA  D7F6               	goto	l6523
  7199  004EAC  0012               	return		;funcret
  7200  004EAE                     __end_of_delay_ms:
  7201                           	opt stack 0
  7202                           tblptru	equ	0xFF8
  7203                           tblptrh	equ	0xFF7
  7204                           tblptrl	equ	0xFF6
  7205                           tablat	equ	0xFF5
  7206                           intcon	equ	0xFF2
  7207                           postinc0	equ	0xFEE
  7208                           wreg	equ	0xFE8
  7209                           postinc2	equ	0xFDE
  7210                           postdec2	equ	0xFDD
  7211                           fsr2h	equ	0xFDA
  7212                           fsr2l	equ	0xFD9
  7213                           status	equ	0xFD8
  7214                           
  7215 ;; *************** function _SetOutputEPWM1 *****************
  7216 ;; Defined at:
  7217 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew1setoc.c"
  7218 ;; Parameters:    Size  Location     Type
  7219 ;;  outputconfig    1    wreg     unsigned char 
  7220 ;;  outputmode      1    0[BANK0 ] unsigned char 
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;  outputconfig    1    1[BANK0 ] unsigned char 
  7223 ;; Return value:  Size  Location     Type
  7224 ;;		None               void
  7225 ;; Registers used:
  7226 ;;		wreg, status,2, status,0
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7232 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7233 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7235 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7236 ;;Total ram usage:        2 bytes
  7237 ;; Hardware stack levels used:    1
  7238 ;; Hardware stack levels required when called:    2
  7239 ;; This function calls:
  7240 ;;		Nothing
  7241 ;; This function is called by:
  7242 ;;		_main
  7243 ;;		_rampe
  7244 ;;		_configurazione_iniziale
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text28
  7249  004C9C                     __ptext28:
  7250                           	opt stack 0
  7251  004C9C                     _SetOutputEPWM1:
  7252                           	opt stack 27
  7253                           
  7254                           ;incstack = 0
  7255                           ;SetOutputEPWM1@outputconfig stored from wreg
  7256  004C9C  0100               	movlb	0	; () banked
  7257  004C9E  6F61               	movwf	SetOutputEPWM1@outputconfig& (0+255),b
  7258                           
  7259                           ; BSR set to: 0
  7260  004CA0  50BA               	movf	4026,w,c	;volatile
  7261  004CA2  09C0               	iorlw	192
  7262  004CA4  0100               	movlb	0	; () banked
  7263  004CA6  1561               	andwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7264  004CA8  6EBA               	movwf	4026,c	;volatile
  7265  004CAA  50BA               	movf	4026,w,c	;volatile
  7266  004CAC  090F               	iorlw	15
  7267  004CAE  0100               	movlb	0	; () banked
  7268  004CB0  1560               	andwf	SetOutputEPWM1@outputmode& (0+255),w,b
  7269  004CB2  6EBA               	movwf	4026,c	;volatile
  7270  004CB4  0E3F               	movlw	63
  7271  004CB6  0100               	movlb	0	; () banked
  7272  004CB8  1961               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7273  004CBA  A4D8               	btfss	status,2,c
  7274  004CBC  D002               	goto	l6531
  7275                           
  7276                           ; BSR set to: 0
  7277  004CBE  9895               	bcf	3989,4,c	;volatile
  7278  004CC0  0012               	return	
  7279  004CC2                     l6531:
  7280                           
  7281                           ; BSR set to: 0
  7282  004CC2  0EBF               	movlw	191
  7283  004CC4  0100               	movlb	0	; () banked
  7284  004CC6  1961               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7285  004CC8  A4D8               	btfss	status,2,c
  7286  004CCA  D003               	goto	l6535
  7287                           
  7288                           ; BSR set to: 0
  7289  004CCC  9895               	bcf	3989,4,c	;volatile
  7290  004CCE  9A95               	bcf	3989,5,c	;volatile
  7291  004CD0  0012               	return	
  7292  004CD2                     l6535:
  7293                           
  7294                           ; BSR set to: 0
  7295  004CD2  0E7F               	movlw	127
  7296  004CD4  0100               	movlb	0	; () banked
  7297  004CD6  1961               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7298  004CD8  B4D8               	btfsc	status,2,c
  7299  004CDA  D004               	goto	l800
  7300                           
  7301                           ; BSR set to: 0
  7302  004CDC  0100               	movlb	0	; () banked
  7303  004CDE  2961               	incf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7304  004CE0  A4D8               	btfss	status,2,c
  7305  004CE2  0012               	return	
  7306  004CE4                     l800:
  7307                           
  7308                           ; BSR set to: 0
  7309  004CE4  9895               	bcf	3989,4,c	;volatile
  7310  004CE6  9A95               	bcf	3989,5,c	;volatile
  7311  004CE8  9C95               	bcf	3989,6,c	;volatile
  7312  004CEA  9E95               	bcf	3989,7,c	;volatile
  7313                           
  7314                           ; BSR set to: 0
  7315                           
  7316                           ; BSR set to: 0
  7317  004CEC  0012               	return	
  7318                           
  7319                           ; BSR set to: 0
  7320                           
  7321                           ; BSR set to: 0
  7322  004CEE  0012               	return		;funcret
  7323  004CF0                     __end_of_SetOutputEPWM1:
  7324                           	opt stack 0
  7325                           tblptru	equ	0xFF8
  7326                           tblptrh	equ	0xFF7
  7327                           tblptrl	equ	0xFF6
  7328                           tablat	equ	0xFF5
  7329                           intcon	equ	0xFF2
  7330                           postinc0	equ	0xFEE
  7331                           wreg	equ	0xFE8
  7332                           postinc2	equ	0xFDE
  7333                           postdec2	equ	0xFDD
  7334                           fsr2h	equ	0xFDA
  7335                           fsr2l	equ	0xFD9
  7336                           status	equ	0xFD8
  7337                           
  7338 ;; *************** function _CANInitialize *****************
  7339 ;; Defined at:
  7340 ;;		line 218 in file "CANlib.h"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;  propSeg         1    wreg     unsigned char 
  7343 ;;  phaseSeg1       1   14[BANK0 ] unsigned char 
  7344 ;;  phaseSeg2       1   15[BANK0 ] unsigned char 
  7345 ;;  SJW             1   16[BANK0 ] unsigned char 
  7346 ;;  BRP             1   17[BANK0 ] unsigned char 
  7347 ;;  flags           1   18[BANK0 ] enum E16928
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;  propSeg         1   23[BANK0 ] unsigned char 
  7350 ;;  FilterConfig    1   25[BANK0 ] unsigned char 
  7351 ;;  FilterConfig    1   24[BANK0 ] unsigned char 
  7352 ;; Return value:  Size  Location     Type
  7353 ;;		None               void
  7354 ;; Registers used:
  7355 ;;		wreg, status,2, status,0, cstack
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7361 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7363 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7364 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7365 ;;Total ram usage:       12 bytes
  7366 ;; Hardware stack levels used:    1
  7367 ;; Hardware stack levels required when called:    3
  7368 ;; This function calls:
  7369 ;;		_CANOperationMode
  7370 ;;		_CANSetFilter
  7371 ;;		_CANSetMask
  7372 ;; This function is called by:
  7373 ;;		_configurazione_iniziale
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           	psect	text29
  7378  0038EE                     __ptext29:
  7379                           	opt stack 0
  7380  0038EE                     _CANInitialize:
  7381                           	opt stack 26
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;incstack = 0
  7385                           ;CANInitialize@propSeg stored from wreg
  7386  0038EE  0100               	movlb	0	; () banked
  7387  0038F0  6F77               	movwf	CANInitialize@propSeg& (0+255),b
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;CANlib.h: 220: BYTE FilterConfig1;
  7391                           ;CANlib.h: 221: BYTE FilterConfig2;
  7392                           ;CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  7393  0038F2  0E80               	movlw	128
  7394  0038F4  ECAA  F027         	call	_CANOperationMode
  7395                           
  7396                           ;CANlib.h: 225: BRGCON1 = 0x00;
  7397  0038F8  0E00               	movlw	0
  7398  0038FA  6E70               	movwf	3952,c	;volatile
  7399                           
  7400                           ;CANlib.h: 226: BRGCON2 = 0x00;
  7401  0038FC  0E00               	movlw	0
  7402  0038FE  6E71               	movwf	3953,c	;volatile
  7403                           
  7404                           ;CANlib.h: 227: BRGCON3 = 0x00;
  7405  003900  0E00               	movlw	0
  7406  003902  6E72               	movwf	3954,c	;volatile
  7407                           
  7408                           ;CANlib.h: 229: SJW= SJW << 6;
  7409  003904  0100               	movlb	0	; () banked
  7410  003906  4170               	rrncf	CANInitialize@SJW& (0+255),w,b
  7411  003908  42E8               	rrncf	wreg,f,c
  7412  00390A  0BC0               	andlw	192
  7413  00390C  0100               	movlb	0	; () banked
  7414  00390E  6F70               	movwf	CANInitialize@SJW& (0+255),b
  7415                           
  7416                           ; BSR set to: 0
  7417                           ;CANlib.h: 230: BRGCON1 |= SJW;
  7418  003910  0100               	movlb	0	; () banked
  7419  003912  5170               	movf	CANInitialize@SJW& (0+255),w,b
  7420  003914  1270               	iorwf	3952,f,c	;volatile
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;CANlib.h: 231: BRGCON1 |= BRP;
  7424  003916  0100               	movlb	0	; () banked
  7425  003918  5171               	movf	CANInitialize@BRP& (0+255),w,b
  7426  00391A  1270               	iorwf	3952,f,c	;volatile
  7427                           
  7428                           ; BSR set to: 0
  7429                           ;CANlib.h: 233: BRGCON2 |= propSeg;
  7430  00391C  0100               	movlb	0	; () banked
  7431  00391E  5177               	movf	CANInitialize@propSeg& (0+255),w,b
  7432  003920  1271               	iorwf	3953,f,c	;volatile
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  7436  003922  0100               	movlb	0	; () banked
  7437  003924  396E               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  7438  003926  42E8               	rrncf	wreg,f,c
  7439  003928  0BF8               	andlw	248
  7440  00392A  0100               	movlb	0	; () banked
  7441  00392C  6F6E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;CANlib.h: 235: BRGCON2 |= phaseSeg1;
  7445  00392E  0100               	movlb	0	; () banked
  7446  003930  516E               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  7447  003932  1271               	iorwf	3953,f,c	;volatile
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  7451  003934  0100               	movlb	0	; () banked
  7452  003936  A572               	btfss	CANInitialize@flags& (0+255),2,b
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;CANlib.h: 238: BRGCON2bits.SAM= 1;
  7456  003938  8C71               	bsf	3953,6,c	;volatile
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  7460  00393A  0100               	movlb	0	; () banked
  7461  00393C  A172               	btfss	CANInitialize@flags& (0+255),0,b
  7462  00393E  D002               	goto	l6253
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  7466  003940  8E71               	bsf	3953,7,c	;volatile
  7467  003942  D000               	goto	l6253
  7468  003944                     l6253:
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;CANlib.h: 243: BRGCON3 |= phaseSeg2;
  7472  003944  0100               	movlb	0	; () banked
  7473  003946  516F               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  7474  003948  1272               	iorwf	3954,f,c	;volatile
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  7478  00394A  0100               	movlb	0	; () banked
  7479  00394C  A372               	btfss	CANInitialize@flags& (0+255),1,b
  7480  00394E  D002               	goto	l6259
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  7484  003950  8C72               	bsf	3954,6,c	;volatile
  7485  003952  D000               	goto	l6259
  7486  003954                     l6259:
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  7490  003954  0100               	movlb	0	; () banked
  7491  003956  5172               	movf	CANInitialize@flags& (0+255),w,b
  7492  003958  0B60               	andlw	96
  7493  00395A  6E60               	movwf	3936,c	;volatile
  7494                           
  7495                           ;CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON )
  7496  00395C  0100               	movlb	0	; () banked
  7497  00395E  5172               	movf	CANInitialize@flags& (0+255),w,b
  7498  003960  0B10               	andlw	16
  7499  003962  0AFF               	xorlw	255
  7500  003964  B4D8               	btfsc	status,2,c
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  7504  003966  8460               	bsf	3936,2,c	;volatile
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;CANlib.h: 255: RXB1CON = RXB0CON;
  7508  003968  CF60 FF50          	movff	3936,3920	;volatile
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  7512  00396C  0E00               	movlw	0
  7513  00396E  0100               	movlb	0	; () banked
  7514  003970  6F60               	movwf	CANSetMask@mask& (0+255),b
  7515  003972  0E00               	movlw	0
  7516  003974  6F61               	movwf	(CANSetMask@mask+1)& (0+255),b
  7517  003976  0E00               	movlw	0
  7518  003978  6F62               	movwf	(CANSetMask@mask+2)& (0+255),b
  7519  00397A  0E00               	movlw	0
  7520  00397C  6F63               	movwf	(CANSetMask@mask+3)& (0+255),b
  7521  00397E  0EF7               	movlw	247
  7522  003980  0100               	movlb	0	; () banked
  7523  003982  6F64               	movwf	CANSetMask@type& (0+255),b
  7524  003984  0E01               	movlw	1
  7525  003986  EC83  F015         	call	_CANSetMask
  7526                           
  7527                           ;CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  7528  00398A  0E00               	movlw	0
  7529  00398C  0100               	movlb	0	; () banked
  7530  00398E  6F60               	movwf	CANSetMask@mask& (0+255),b
  7531  003990  0E00               	movlw	0
  7532  003992  6F61               	movwf	(CANSetMask@mask+1)& (0+255),b
  7533  003994  0E00               	movlw	0
  7534  003996  6F62               	movwf	(CANSetMask@mask+2)& (0+255),b
  7535  003998  0E00               	movlw	0
  7536  00399A  6F63               	movwf	(CANSetMask@mask+3)& (0+255),b
  7537  00399C  0EF7               	movlw	247
  7538  00399E  0100               	movlb	0	; () banked
  7539  0039A0  6F64               	movwf	CANSetMask@type& (0+255),b
  7540  0039A2  0E02               	movlw	2
  7541  0039A4  EC83  F015         	call	_CANSetMask
  7542                           
  7543                           ;CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  7544  0039A8  D00F               	goto	l6271
  7545  0039AA                     l6265:
  7546                           
  7547                           ;CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  7548  0039AA  0EF7               	movlw	247
  7549  0039AC  0100               	movlb	0	; () banked
  7550  0039AE  6F78               	movwf	CANInitialize@FilterConfig1& (0+255),b
  7551  0039B0  D007               	goto	l6267
  7552  0039B2                     l364:
  7553                           
  7554                           ; BSR set to: 0
  7555                           ;CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  7556  0039B2  0100               	movlb	0	; () banked
  7557  0039B4  6978               	setf	CANInitialize@FilterConfig1& (0+255),b
  7558                           
  7559                           ;CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  7560  0039B6  0100               	movlb	0	; () banked
  7561  0039B8  6979               	setf	CANInitialize@FilterConfig2& (0+255),b
  7562                           
  7563                           ;CANlib.h: 273: break;
  7564  0039BA  D028               	goto	l6273
  7565  0039BC                     l365:
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  7569  0039BC  0100               	movlb	0	; () banked
  7570  0039BE  6978               	setf	CANInitialize@FilterConfig1& (0+255),b
  7571  0039C0                     l6267:
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  7575  0039C0  0EF7               	movlw	247
  7576  0039C2  0100               	movlb	0	; () banked
  7577  0039C4  6F79               	movwf	CANInitialize@FilterConfig2& (0+255),b
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;CANlib.h: 278: }
  7581                           
  7582                           ;CANlib.h: 277: break;
  7583  0039C6  D022               	goto	l6273
  7584  0039C8                     l6271:
  7585  0039C8  0E9F               	movlw	159
  7586  0039CA  0100               	movlb	0	; () banked
  7587  0039CC  6F73               	movwf	??_CANInitialize& (0+255),b
  7588  0039CE  0EFF               	movlw	255
  7589  0039D0  0100               	movlb	0	; () banked
  7590  0039D2  6F74               	movwf	(??_CANInitialize+1)& (0+255),b
  7591  0039D4  0100               	movlb	0	; () banked
  7592  0039D6  5172               	movf	CANInitialize@flags& (0+255),w,b
  7593  0039D8  0B60               	andlw	96
  7594  0039DA  0100               	movlb	0	; () banked
  7595  0039DC  6F75               	movwf	(??_CANInitialize+2)& (0+255),b
  7596  0039DE  6B76               	clrf	(??_CANInitialize+3)& (0+255),b
  7597  0039E0  0100               	movlb	0	; () banked
  7598  0039E2  5173               	movf	??_CANInitialize& (0+255),w,b
  7599  0039E4  0100               	movlb	0	; () banked
  7600  0039E6  1375               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  7601  0039E8  0100               	movlb	0	; () banked
  7602  0039EA  5174               	movf	(??_CANInitialize+1)& (0+255),w,b
  7603  0039EC  0100               	movlb	0	; () banked
  7604  0039EE  1376               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  7605                           
  7606                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7607                           ; Switch size 1, requested type "space"
  7608                           ; Number of cases is 1, Range of values is 0 to 0
  7609                           ; switch strategies available:
  7610                           ; Name         Instructions Cycles
  7611                           ; simple_byte            4     3 (average)
  7612                           ;	Chosen strategy is simple_byte
  7613  0039F0  0100               	movlb	0	; () banked
  7614  0039F2  5176               	movf	(??_CANInitialize+3)& (0+255),w,b
  7615  0039F4  0A00               	xorlw	0	; case 0
  7616  0039F6  A4D8               	btfss	status,2,c
  7617  0039F8  D7E1               	goto	l365
  7618                           
  7619                           ; BSR set to: 0
  7620                           ; Switch size 1, requested type "space"
  7621                           ; Number of cases is 2, Range of values is 191 to 223
  7622                           ; switch strategies available:
  7623                           ; Name         Instructions Cycles
  7624                           ; simple_byte            7     4 (average)
  7625                           ;	Chosen strategy is simple_byte
  7626  0039FA  0100               	movlb	0	; () banked
  7627  0039FC  5175               	movf	(??_CANInitialize+2)& (0+255),w,b
  7628  0039FE  0ABF               	xorlw	191	; case 191
  7629  003A00  B4D8               	btfsc	status,2,c
  7630  003A02  D7D7               	goto	l364
  7631  003A04  0A60               	xorlw	96	; case 223
  7632  003A06  B4D8               	btfsc	status,2,c
  7633  003A08  D7D0               	goto	l6265
  7634  003A0A  D7D8               	goto	l365
  7635  003A0C                     l6273:
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  7639  003A0C  0E00               	movlw	0
  7640  003A0E  0100               	movlb	0	; () banked
  7641  003A10  6F60               	movwf	CANSetFilter@filter& (0+255),b
  7642  003A12  0E00               	movlw	0
  7643  003A14  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7644  003A16  0E00               	movlw	0
  7645  003A18  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7646  003A1A  0E00               	movlw	0
  7647  003A1C  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7648  003A1E  C078  F064         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  7649  003A22  0E00               	movlw	0
  7650  003A24  ECA7  F006         	call	_CANSetFilter
  7651                           
  7652                           ;CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  7653  003A28  0E00               	movlw	0
  7654  003A2A  0100               	movlb	0	; () banked
  7655  003A2C  6F60               	movwf	CANSetFilter@filter& (0+255),b
  7656  003A2E  0E00               	movlw	0
  7657  003A30  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7658  003A32  0E00               	movlw	0
  7659  003A34  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7660  003A36  0E00               	movlw	0
  7661  003A38  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7662  003A3A  C078  F064         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  7663  003A3E  0E01               	movlw	1
  7664  003A40  ECA7  F006         	call	_CANSetFilter
  7665                           
  7666                           ;CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  7667  003A44  0E00               	movlw	0
  7668  003A46  0100               	movlb	0	; () banked
  7669  003A48  6F60               	movwf	CANSetFilter@filter& (0+255),b
  7670  003A4A  0E00               	movlw	0
  7671  003A4C  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7672  003A4E  0E00               	movlw	0
  7673  003A50  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7674  003A52  0E00               	movlw	0
  7675  003A54  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7676  003A56  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  7677  003A5A  0E02               	movlw	2
  7678  003A5C  ECA7  F006         	call	_CANSetFilter
  7679                           
  7680                           ;CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  7681  003A60  0E00               	movlw	0
  7682  003A62  0100               	movlb	0	; () banked
  7683  003A64  6F60               	movwf	CANSetFilter@filter& (0+255),b
  7684  003A66  0E00               	movlw	0
  7685  003A68  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7686  003A6A  0E00               	movlw	0
  7687  003A6C  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7688  003A6E  0E00               	movlw	0
  7689  003A70  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7690  003A72  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  7691  003A76  0E03               	movlw	3
  7692  003A78  ECA7  F006         	call	_CANSetFilter
  7693                           
  7694                           ;CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  7695  003A7C  0E00               	movlw	0
  7696  003A7E  0100               	movlb	0	; () banked
  7697  003A80  6F60               	movwf	CANSetFilter@filter& (0+255),b
  7698  003A82  0E00               	movlw	0
  7699  003A84  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7700  003A86  0E00               	movlw	0
  7701  003A88  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7702  003A8A  0E00               	movlw	0
  7703  003A8C  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7704  003A8E  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  7705  003A92  0E04               	movlw	4
  7706  003A94  ECA7  F006         	call	_CANSetFilter
  7707                           
  7708                           ;CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  7709  003A98  0E00               	movlw	0
  7710  003A9A  0100               	movlb	0	; () banked
  7711  003A9C  6F60               	movwf	CANSetFilter@filter& (0+255),b
  7712  003A9E  0E00               	movlw	0
  7713  003AA0  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  7714  003AA2  0E00               	movlw	0
  7715  003AA4  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  7716  003AA6  0E00               	movlw	0
  7717  003AA8  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  7718  003AAA  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  7719  003AAE  0E05               	movlw	5
  7720  003AB0  ECA7  F006         	call	_CANSetFilter
  7721                           
  7722                           ;CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  7723  003AB4  0E00               	movlw	0
  7724  003AB6  ECAA  F027         	call	_CANOperationMode
  7725  003ABA  0012               	return		;funcret
  7726  003ABC                     __end_of_CANInitialize:
  7727                           	opt stack 0
  7728                           tblptru	equ	0xFF8
  7729                           tblptrh	equ	0xFF7
  7730                           tblptrl	equ	0xFF6
  7731                           tablat	equ	0xFF5
  7732                           intcon	equ	0xFF2
  7733                           postinc0	equ	0xFEE
  7734                           wreg	equ	0xFE8
  7735                           postinc2	equ	0xFDE
  7736                           postdec2	equ	0xFDD
  7737                           fsr2h	equ	0xFDA
  7738                           fsr2l	equ	0xFD9
  7739                           status	equ	0xFD8
  7740                           
  7741 ;; *************** function _CANSetMask *****************
  7742 ;; Defined at:
  7743 ;;		line 640 in file "CANlib.h"
  7744 ;; Parameters:    Size  Location     Type
  7745 ;;  numBuffer       1    wreg     enum E16962
  7746 ;;  mask            4    0[BANK0 ] unsigned long 
  7747 ;;  type            1    4[BANK0 ] enum E16928
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;  numBuffer       1    9[BANK0 ] enum E16962
  7750 ;;  tamp            4   10[BANK0 ] unsigned long 
  7751 ;; Return value:  Size  Location     Type
  7752 ;;		None               void
  7753 ;; Registers used:
  7754 ;;		wreg, status,2, status,0
  7755 ;; Tracked objects:
  7756 ;;		On entry : 0/0
  7757 ;;		On exit  : 0/0
  7758 ;;		Unchanged: 0/0
  7759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7760 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7763 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7764 ;;Total ram usage:       14 bytes
  7765 ;; Hardware stack levels used:    1
  7766 ;; Hardware stack levels required when called:    2
  7767 ;; This function calls:
  7768 ;;		Nothing
  7769 ;; This function is called by:
  7770 ;;		_CANInitialize
  7771 ;; This function uses a non-reentrant model
  7772 ;;
  7773                           
  7774                           	psect	text30
  7775  002B06                     __ptext30:
  7776                           	opt stack 0
  7777  002B06                     _CANSetMask:
  7778                           	opt stack 26
  7779                           
  7780                           ;incstack = 0
  7781                           ;CANSetMask@numBuffer stored from wreg
  7782  002B06  0100               	movlb	0	; () banked
  7783  002B08  6F69               	movwf	CANSetMask@numBuffer& (0+255),b
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  7787  002B0A  0100               	movlb	0	; () banked
  7788  002B0C  0569               	decf	CANSetMask@numBuffer& (0+255),w,b
  7789  002B0E  A4D8               	btfss	status,2,c
  7790  002B10  D057               	goto	l5759
  7791                           
  7792                           ; BSR set to: 0
  7793  002B12  0100               	movlb	0	; () banked
  7794  002B14  2964               	incf	CANSetMask@type& (0+255),w,b
  7795  002B16  A4D8               	btfss	status,2,c
  7796  002B18  D053               	goto	l5759
  7797                           
  7798                           ; BSR set to: 0
  7799                           ;CANlib.h: 644: {
  7800                           ;CANlib.h: 645: tamp = (mask >> 3);
  7801  002B1A  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  7802  002B1E  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  7803  002B22  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  7804  002B26  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  7805  002B2A  0E04               	movlw	4
  7806  002B2C  D006               	goto	u7140
  7807  002B2E                     u7145:
  7808  002B2E  0100               	movlb	0	; () banked
  7809  002B30  90D8               	bcf	status,0,c
  7810  002B32  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  7811  002B34  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  7812  002B36  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  7813  002B38  3365               	rrcf	??_CANSetMask& (0+255),f,b
  7814  002B3A                     u7140:
  7815  002B3A  2EE8               	decfsz	wreg,f,c
  7816  002B3C  D7F8               	goto	u7145
  7817  002B3E  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  7818  002B42  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  7819  002B46  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  7820  002B4A  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  7821                           
  7822                           ; BSR set to: 0
  7823                           ;CANlib.h: 646: tamp = tamp & 0x000000FF;
  7824  002B4E  0100               	movlb	0	; () banked
  7825  002B50  516A               	movf	CANSetMask@tamp& (0+255),w,b
  7826  002B52  0100               	movlb	0	; () banked
  7827  002B54  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  7828  002B56  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  7829  002B58  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  7830  002B5A  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  7834  002B5C  C06A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  7835                           
  7836                           ; BSR set to: 0
  7837                           ;CANlib.h: 649: tamp = mask & 0x00000007;
  7838  002B60  0E07               	movlw	7
  7839  002B62  0100               	movlb	0	; () banked
  7840  002B64  1560               	andwf	CANSetMask@mask& (0+255),w,b
  7841  002B66  0100               	movlb	0	; () banked
  7842  002B68  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  7843  002B6A  0E00               	movlw	0
  7844  002B6C  0100               	movlb	0	; () banked
  7845  002B6E  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  7846  002B70  0100               	movlb	0	; () banked
  7847  002B72  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  7848  002B74  0E00               	movlw	0
  7849  002B76  0100               	movlb	0	; () banked
  7850  002B78  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  7851  002B7A  0100               	movlb	0	; () banked
  7852  002B7C  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  7853  002B7E  0E00               	movlw	0
  7854  002B80  0100               	movlb	0	; () banked
  7855  002B82  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  7856  002B84  0100               	movlb	0	; () banked
  7857  002B86  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  7858                           
  7859                           ; BSR set to: 0
  7860                           ;CANlib.h: 650: tamp = tamp << 5;
  7861  002B88  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  7862  002B8C  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  7863  002B90  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  7864  002B94  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  7865  002B98  0E05               	movlw	5
  7866  002B9A                     u7155:
  7867  002B9A  90D8               	bcf	status,0,c
  7868  002B9C  0100               	movlb	0	; () banked
  7869  002B9E  3765               	rlcf	??_CANSetMask& (0+255),f,b
  7870  002BA0  3766               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  7871  002BA2  3767               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  7872  002BA4  3768               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  7873  002BA6  2EE8               	decfsz	wreg,f,c
  7874  002BA8  D7F8               	goto	u7155
  7875  002BAA  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  7876  002BAE  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  7877  002BB2  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  7878  002BB6  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  7882  002BBA  C06A  FF19         	movff	CANSetMask@tamp,3865	;volatile
  7883  002BBE  D000               	goto	l5759
  7884  002BC0                     l5759:
  7885                           
  7886                           ; BSR set to: 0
  7887                           ;CANlib.h: 652: }
  7888                           ;CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  7889  002BC0  0E02               	movlw	2
  7890  002BC2  0100               	movlb	0	; () banked
  7891  002BC4  1969               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  7892  002BC6  A4D8               	btfss	status,2,c
  7893  002BC8  D057               	goto	l5775
  7894                           
  7895                           ; BSR set to: 0
  7896  002BCA  0100               	movlb	0	; () banked
  7897  002BCC  2964               	incf	CANSetMask@type& (0+255),w,b
  7898  002BCE  A4D8               	btfss	status,2,c
  7899  002BD0  D053               	goto	l5775
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;CANlib.h: 655: {
  7903                           ;CANlib.h: 656: tamp = (mask >> 3);
  7904  002BD2  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  7905  002BD6  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  7906  002BDA  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  7907  002BDE  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  7908  002BE2  0E04               	movlw	4
  7909  002BE4  D006               	goto	u7180
  7910  002BE6                     u7185:
  7911  002BE6  0100               	movlb	0	; () banked
  7912  002BE8  90D8               	bcf	status,0,c
  7913  002BEA  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  7914  002BEC  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  7915  002BEE  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  7916  002BF0  3365               	rrcf	??_CANSetMask& (0+255),f,b
  7917  002BF2                     u7180:
  7918  002BF2  2EE8               	decfsz	wreg,f,c
  7919  002BF4  D7F8               	goto	u7185
  7920  002BF6  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  7921  002BFA  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  7922  002BFE  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  7923  002C02  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;CANlib.h: 657: tamp = tamp & 0x000000FF;
  7927  002C06  0100               	movlb	0	; () banked
  7928  002C08  516A               	movf	CANSetMask@tamp& (0+255),w,b
  7929  002C0A  0100               	movlb	0	; () banked
  7930  002C0C  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  7931  002C0E  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  7932  002C10  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  7933  002C12  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  7934                           
  7935                           ; BSR set to: 0
  7936                           ;CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  7937  002C14  C06A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;CANlib.h: 660: tamp = mask & 0x00000007;
  7941  002C18  0E07               	movlw	7
  7942  002C1A  0100               	movlb	0	; () banked
  7943  002C1C  1560               	andwf	CANSetMask@mask& (0+255),w,b
  7944  002C1E  0100               	movlb	0	; () banked
  7945  002C20  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  7946  002C22  0E00               	movlw	0
  7947  002C24  0100               	movlb	0	; () banked
  7948  002C26  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  7949  002C28  0100               	movlb	0	; () banked
  7950  002C2A  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  7951  002C2C  0E00               	movlw	0
  7952  002C2E  0100               	movlb	0	; () banked
  7953  002C30  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  7954  002C32  0100               	movlb	0	; () banked
  7955  002C34  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  7956  002C36  0E00               	movlw	0
  7957  002C38  0100               	movlb	0	; () banked
  7958  002C3A  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  7959  002C3C  0100               	movlb	0	; () banked
  7960  002C3E  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  7961                           
  7962                           ; BSR set to: 0
  7963                           ;CANlib.h: 661: tamp = tamp << 5;
  7964  002C40  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  7965  002C44  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  7966  002C48  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  7967  002C4C  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  7968  002C50  0E05               	movlw	5
  7969  002C52                     u7195:
  7970  002C52  90D8               	bcf	status,0,c
  7971  002C54  0100               	movlb	0	; () banked
  7972  002C56  3765               	rlcf	??_CANSetMask& (0+255),f,b
  7973  002C58  3766               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  7974  002C5A  3767               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  7975  002C5C  3768               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  7976  002C5E  2EE8               	decfsz	wreg,f,c
  7977  002C60  D7F8               	goto	u7195
  7978  002C62  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  7979  002C66  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  7980  002C6A  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  7981  002C6E  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  7982                           
  7983                           ; BSR set to: 0
  7984                           ;CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  7985  002C72  C06A  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  7986  002C76  D000               	goto	l5775
  7987  002C78                     l5775:
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;CANlib.h: 663: }
  7991                           ;CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  7992  002C78  0100               	movlb	0	; () banked
  7993  002C7A  0569               	decf	CANSetMask@numBuffer& (0+255),w,b
  7994  002C7C  A4D8               	btfss	status,2,c
  7995  002C7E  D089               	goto	l5807
  7996                           
  7997                           ; BSR set to: 0
  7998  002C80  0EF7               	movlw	247
  7999  002C82  0100               	movlb	0	; () banked
  8000  002C84  1964               	xorwf	CANSetMask@type& (0+255),w,b
  8001  002C86  A4D8               	btfss	status,2,c
  8002  002C88  D084               	goto	l5807
  8003                           
  8004                           ; BSR set to: 0
  8005                           ;CANlib.h: 666: {
  8006                           ;CANlib.h: 667: tamp = mask & 0x000000FF;
  8007  002C8A  0100               	movlb	0	; () banked
  8008  002C8C  5160               	movf	CANSetMask@mask& (0+255),w,b
  8009  002C8E  0100               	movlb	0	; () banked
  8010  002C90  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8011  002C92  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8012  002C94  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8013  002C96  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  8017  002C98  C06A  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;CANlib.h: 670: tamp = mask & 0x0000FF00;
  8021  002C9C  0E00               	movlw	0
  8022  002C9E  0100               	movlb	0	; () banked
  8023  002CA0  1560               	andwf	CANSetMask@mask& (0+255),w,b
  8024  002CA2  0100               	movlb	0	; () banked
  8025  002CA4  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8026  002CA6  0EFF               	movlw	255
  8027  002CA8  0100               	movlb	0	; () banked
  8028  002CAA  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  8029  002CAC  0100               	movlb	0	; () banked
  8030  002CAE  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  8031  002CB0  0E00               	movlw	0
  8032  002CB2  0100               	movlb	0	; () banked
  8033  002CB4  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  8034  002CB6  0100               	movlb	0	; () banked
  8035  002CB8  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  8036  002CBA  0E00               	movlw	0
  8037  002CBC  0100               	movlb	0	; () banked
  8038  002CBE  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  8039  002CC0  0100               	movlb	0	; () banked
  8040  002CC2  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  8041                           
  8042                           ; BSR set to: 0
  8043                           ;CANlib.h: 671: tamp = tamp >> 8;
  8044  002CC4  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  8045  002CC8  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  8046  002CCC  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  8047  002CD0  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  8048  002CD4  C066  F065         	movff	??_CANSetMask+1,??_CANSetMask
  8049  002CD8  C067  F066         	movff	??_CANSetMask+2,??_CANSetMask+1
  8050  002CDC  C068  F067         	movff	??_CANSetMask+3,??_CANSetMask+2
  8051  002CE0  0100               	movlb	0	; () banked
  8052  002CE2  6B68               	clrf	(??_CANSetMask+3)& (0+255),b
  8053  002CE4  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  8054  002CE8  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8055  002CEC  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8056  002CF0  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8057                           
  8058                           ; BSR set to: 0
  8059                           ;CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  8060  002CF4  C06A  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;CANlib.h: 674: if (mask & 0x00010000)
  8064  002CF8  0100               	movlb	0	; () banked
  8065  002CFA  A162               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  8066  002CFC  D003               	goto	l438
  8067                           
  8068                           ; BSR set to: 0
  8069                           ;CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  8070  002CFE  010F               	movlb	15	; () banked
  8071  002D00  8119               	bsf	25,0,b	;volatile
  8072  002D02  D002               	goto	l439
  8073  002D04                     l438:
  8074                           
  8075                           ; BSR set to: 0
  8076                           ;CANlib.h: 676: else
  8077                           ;CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  8078  002D04  010F               	movlb	15	; () banked
  8079  002D06  9119               	bcf	25,0,b	;volatile
  8080  002D08                     l439:
  8081                           
  8082                           ; BSR set to: 15
  8083                           ;CANlib.h: 679: if (mask & 0x00020000)
  8084  002D08  0100               	movlb	0	; () banked
  8085  002D0A  A362               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  8086  002D0C  D003               	goto	l440
  8087                           
  8088                           ; BSR set to: 0
  8089                           ;CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  8090  002D0E  010F               	movlb	15	; () banked
  8091  002D10  8319               	bsf	25,1,b	;volatile
  8092  002D12  D002               	goto	l441
  8093  002D14                     l440:
  8094                           
  8095                           ; BSR set to: 0
  8096                           ;CANlib.h: 681: else
  8097                           ;CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  8098  002D14  010F               	movlb	15	; () banked
  8099  002D16  9319               	bcf	25,1,b	;volatile
  8100  002D18                     l441:
  8101                           
  8102                           ; BSR set to: 15
  8103                           ;CANlib.h: 684: if (mask & 0x00040000)
  8104  002D18  0100               	movlb	0	; () banked
  8105  002D1A  A562               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  8106  002D1C  D003               	goto	l442
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  8110  002D1E  010F               	movlb	15	; () banked
  8111  002D20  8B19               	bsf	25,5,b	;volatile
  8112  002D22  D002               	goto	l443
  8113  002D24                     l442:
  8114                           
  8115                           ; BSR set to: 0
  8116                           ;CANlib.h: 686: else
  8117                           ;CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  8118  002D24  010F               	movlb	15	; () banked
  8119  002D26  9B19               	bcf	25,5,b	;volatile
  8120  002D28                     l443:
  8121                           
  8122                           ; BSR set to: 15
  8123                           ;CANlib.h: 689: if (mask & 0x00080000)
  8124  002D28  0100               	movlb	0	; () banked
  8125  002D2A  A762               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  8126  002D2C  D003               	goto	l444
  8127                           
  8128                           ; BSR set to: 0
  8129                           ;CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  8130  002D2E  010F               	movlb	15	; () banked
  8131  002D30  8D19               	bsf	25,6,b	;volatile
  8132  002D32  D002               	goto	l445
  8133  002D34                     l444:
  8134                           
  8135                           ; BSR set to: 0
  8136                           ;CANlib.h: 691: else
  8137                           ;CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  8138  002D34  010F               	movlb	15	; () banked
  8139  002D36  9D19               	bcf	25,6,b	;volatile
  8140  002D38                     l445:
  8141                           
  8142                           ; BSR set to: 15
  8143                           ;CANlib.h: 694: if (mask & 0x00100000)
  8144  002D38  0100               	movlb	0	; () banked
  8145  002D3A  A962               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  8146  002D3C  D003               	goto	l446
  8147                           
  8148                           ; BSR set to: 0
  8149                           ;CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  8150  002D3E  010F               	movlb	15	; () banked
  8151  002D40  8F19               	bsf	25,7,b	;volatile
  8152  002D42  D003               	goto	l5801
  8153  002D44                     l446:
  8154                           
  8155                           ; BSR set to: 0
  8156                           ;CANlib.h: 696: else
  8157                           ;CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  8158  002D44  010F               	movlb	15	; () banked
  8159  002D46  9F19               	bcf	25,7,b	;volatile
  8160  002D48  D000               	goto	l5801
  8161  002D4A                     l5801:
  8162                           
  8163                           ; BSR set to: 15
  8164                           ;CANlib.h: 699: tamp = (mask >> 21);
  8165  002D4A  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  8166  002D4E  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8167  002D52  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8168  002D56  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8169  002D5A  0E16               	movlw	22
  8170  002D5C  D006               	goto	u7270
  8171  002D5E                     u7275:
  8172  002D5E  0100               	movlb	0	; () banked
  8173  002D60  90D8               	bcf	status,0,c
  8174  002D62  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8175  002D64  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8176  002D66  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8177  002D68  3365               	rrcf	??_CANSetMask& (0+255),f,b
  8178  002D6A                     u7270:
  8179  002D6A  2EE8               	decfsz	wreg,f,c
  8180  002D6C  D7F8               	goto	u7275
  8181  002D6E  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  8182  002D72  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8183  002D76  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8184  002D7A  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8185                           
  8186                           ; BSR set to: 0
  8187                           ;CANlib.h: 700: tamp = tamp & 0x000000FF;
  8188  002D7E  0100               	movlb	0	; () banked
  8189  002D80  516A               	movf	CANSetMask@tamp& (0+255),w,b
  8190  002D82  0100               	movlb	0	; () banked
  8191  002D84  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8192  002D86  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8193  002D88  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8194  002D8A  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8195                           
  8196                           ; BSR set to: 0
  8197                           ;CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  8198  002D8C  C06A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  8199  002D90  D000               	goto	l5807
  8200  002D92                     l5807:
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;CANlib.h: 702: }
  8204                           ;CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  8205  002D92  0E02               	movlw	2
  8206  002D94  0100               	movlb	0	; () banked
  8207  002D96  1969               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  8208  002D98  A4D8               	btfss	status,2,c
  8209  002D9A  0012               	return	
  8210                           
  8211                           ; BSR set to: 0
  8212  002D9C  0EF7               	movlw	247
  8213  002D9E  0100               	movlb	0	; () banked
  8214  002DA0  1964               	xorwf	CANSetMask@type& (0+255),w,b
  8215  002DA2  A4D8               	btfss	status,2,c
  8216  002DA4  0012               	return	
  8217                           
  8218                           ; BSR set to: 0
  8219                           ;CANlib.h: 705: {
  8220                           ;CANlib.h: 706: tamp = mask & 0x000000FF;
  8221  002DA6  0100               	movlb	0	; () banked
  8222  002DA8  5160               	movf	CANSetMask@mask& (0+255),w,b
  8223  002DAA  0100               	movlb	0	; () banked
  8224  002DAC  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8225  002DAE  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8226  002DB0  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8227  002DB2  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8228                           
  8229                           ; BSR set to: 0
  8230                           ;CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  8231  002DB4  C06A  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  8232                           
  8233                           ; BSR set to: 0
  8234                           ;CANlib.h: 709: tamp = mask & 0x0000FF00;
  8235  002DB8  0E00               	movlw	0
  8236  002DBA  0100               	movlb	0	; () banked
  8237  002DBC  1560               	andwf	CANSetMask@mask& (0+255),w,b
  8238  002DBE  0100               	movlb	0	; () banked
  8239  002DC0  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8240  002DC2  0EFF               	movlw	255
  8241  002DC4  0100               	movlb	0	; () banked
  8242  002DC6  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  8243  002DC8  0100               	movlb	0	; () banked
  8244  002DCA  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  8245  002DCC  0E00               	movlw	0
  8246  002DCE  0100               	movlb	0	; () banked
  8247  002DD0  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  8248  002DD2  0100               	movlb	0	; () banked
  8249  002DD4  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  8250  002DD6  0E00               	movlw	0
  8251  002DD8  0100               	movlb	0	; () banked
  8252  002DDA  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  8253  002DDC  0100               	movlb	0	; () banked
  8254  002DDE  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  8255                           
  8256                           ; BSR set to: 0
  8257                           ;CANlib.h: 710: tamp = tamp >> 8;
  8258  002DE0  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  8259  002DE4  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  8260  002DE8  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  8261  002DEC  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  8262  002DF0  C066  F065         	movff	??_CANSetMask+1,??_CANSetMask
  8263  002DF4  C067  F066         	movff	??_CANSetMask+2,??_CANSetMask+1
  8264  002DF8  C068  F067         	movff	??_CANSetMask+3,??_CANSetMask+2
  8265  002DFC  0100               	movlb	0	; () banked
  8266  002DFE  6B68               	clrf	(??_CANSetMask+3)& (0+255),b
  8267  002E00  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  8268  002E04  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8269  002E08  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8270  002E0C  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8271                           
  8272                           ; BSR set to: 0
  8273                           ;CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  8274  002E10  C06A  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  8275                           
  8276                           ; BSR set to: 0
  8277                           ;CANlib.h: 713: if (mask & 0x00010000)
  8278  002E14  0100               	movlb	0	; () banked
  8279  002E16  A162               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  8280  002E18  D003               	goto	l449
  8281                           
  8282                           ; BSR set to: 0
  8283                           ;CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  8284  002E1A  010F               	movlb	15	; () banked
  8285  002E1C  811D               	bsf	29,0,b	;volatile
  8286  002E1E  D002               	goto	l450
  8287  002E20                     l449:
  8288                           
  8289                           ; BSR set to: 0
  8290                           ;CANlib.h: 715: else
  8291                           ;CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  8292  002E20  010F               	movlb	15	; () banked
  8293  002E22  911D               	bcf	29,0,b	;volatile
  8294  002E24                     l450:
  8295                           
  8296                           ; BSR set to: 15
  8297                           ;CANlib.h: 718: if (mask & 0x00020000)
  8298  002E24  0100               	movlb	0	; () banked
  8299  002E26  A362               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  8300  002E28  D003               	goto	l451
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  8304  002E2A  010F               	movlb	15	; () banked
  8305  002E2C  831D               	bsf	29,1,b	;volatile
  8306  002E2E  D002               	goto	l452
  8307  002E30                     l451:
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;CANlib.h: 720: else
  8311                           ;CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  8312  002E30  010F               	movlb	15	; () banked
  8313  002E32  931D               	bcf	29,1,b	;volatile
  8314  002E34                     l452:
  8315                           
  8316                           ; BSR set to: 15
  8317                           ;CANlib.h: 723: if (mask & 0x00040000)
  8318  002E34  0100               	movlb	0	; () banked
  8319  002E36  A562               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  8320  002E38  D003               	goto	l453
  8321                           
  8322                           ; BSR set to: 0
  8323                           ;CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  8324  002E3A  010F               	movlb	15	; () banked
  8325  002E3C  8B1D               	bsf	29,5,b	;volatile
  8326  002E3E  D002               	goto	l454
  8327  002E40                     l453:
  8328                           
  8329                           ; BSR set to: 0
  8330                           ;CANlib.h: 725: else
  8331                           ;CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  8332  002E40  010F               	movlb	15	; () banked
  8333  002E42  9B1D               	bcf	29,5,b	;volatile
  8334  002E44                     l454:
  8335                           
  8336                           ; BSR set to: 15
  8337                           ;CANlib.h: 728: if (mask & 0x00080000)
  8338  002E44  0100               	movlb	0	; () banked
  8339  002E46  A762               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  8340  002E48  D003               	goto	l455
  8341                           
  8342                           ; BSR set to: 0
  8343                           ;CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  8344  002E4A  010F               	movlb	15	; () banked
  8345  002E4C  8D1D               	bsf	29,6,b	;volatile
  8346  002E4E  D002               	goto	l456
  8347  002E50                     l455:
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;CANlib.h: 730: else
  8351                           ;CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  8352  002E50  010F               	movlb	15	; () banked
  8353  002E52  9D1D               	bcf	29,6,b	;volatile
  8354  002E54                     l456:
  8355                           
  8356                           ; BSR set to: 15
  8357                           ;CANlib.h: 733: if (mask & 0x00100000)
  8358  002E54  0100               	movlb	0	; () banked
  8359  002E56  A962               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  8360  002E58  D003               	goto	l457
  8361                           
  8362                           ; BSR set to: 0
  8363                           ;CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  8364  002E5A  010F               	movlb	15	; () banked
  8365  002E5C  8F1D               	bsf	29,7,b	;volatile
  8366  002E5E  D003               	goto	l5833
  8367  002E60                     l457:
  8368                           
  8369                           ; BSR set to: 0
  8370                           ;CANlib.h: 735: else
  8371                           ;CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  8372  002E60  010F               	movlb	15	; () banked
  8373  002E62  9F1D               	bcf	29,7,b	;volatile
  8374  002E64  D000               	goto	l5833
  8375  002E66                     l5833:
  8376                           
  8377                           ; BSR set to: 15
  8378                           ;CANlib.h: 738: tamp = (mask >> 21);
  8379  002E66  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  8380  002E6A  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8381  002E6E  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8382  002E72  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8383  002E76  0E16               	movlw	22
  8384  002E78  D006               	goto	u7350
  8385  002E7A                     u7355:
  8386  002E7A  0100               	movlb	0	; () banked
  8387  002E7C  90D8               	bcf	status,0,c
  8388  002E7E  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8389  002E80  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8390  002E82  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8391  002E84  3365               	rrcf	??_CANSetMask& (0+255),f,b
  8392  002E86                     u7350:
  8393  002E86  2EE8               	decfsz	wreg,f,c
  8394  002E88  D7F8               	goto	u7355
  8395  002E8A  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  8396  002E8E  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8397  002E92  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8398  002E96  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;CANlib.h: 739: tamp = tamp & 0x000000FF;
  8402  002E9A  0100               	movlb	0	; () banked
  8403  002E9C  516A               	movf	CANSetMask@tamp& (0+255),w,b
  8404  002E9E  0100               	movlb	0	; () banked
  8405  002EA0  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8406  002EA2  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8407  002EA4  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8408  002EA6  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8409                           
  8410                           ; BSR set to: 0
  8411                           ;CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  8412  002EA8  C06A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  8413  002EAC  0012               	return	
  8414                           
  8415                           ; BSR set to: 0
  8416                           
  8417                           ; BSR set to: 0
  8418  002EAE  0012               	return		;funcret
  8419  002EB0                     __end_of_CANSetMask:
  8420                           	opt stack 0
  8421                           tblptru	equ	0xFF8
  8422                           tblptrh	equ	0xFF7
  8423                           tblptrl	equ	0xFF6
  8424                           tablat	equ	0xFF5
  8425                           intcon	equ	0xFF2
  8426                           postinc0	equ	0xFEE
  8427                           wreg	equ	0xFE8
  8428                           postinc2	equ	0xFDE
  8429                           postdec2	equ	0xFDD
  8430                           fsr2h	equ	0xFDA
  8431                           fsr2l	equ	0xFD9
  8432                           status	equ	0xFD8
  8433                           
  8434 ;; *************** function _CANSetFilter *****************
  8435 ;; Defined at:
  8436 ;;		line 748 in file "CANlib.h"
  8437 ;; Parameters:    Size  Location     Type
  8438 ;;  numBuffer       1    wreg     enum E16965
  8439 ;;  filter          4    0[BANK0 ] unsigned long 
  8440 ;;  type            1    4[BANK0 ] enum E16928
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;  numBuffer       1    9[BANK0 ] enum E16965
  8443 ;;  tamp            4   10[BANK0 ] unsigned long 
  8444 ;; Return value:  Size  Location     Type
  8445 ;;		None               void
  8446 ;; Registers used:
  8447 ;;		wreg, status,2, status,0
  8448 ;; Tracked objects:
  8449 ;;		On entry : 0/0
  8450 ;;		On exit  : 0/0
  8451 ;;		Unchanged: 0/0
  8452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8453 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8454 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8455 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8456 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8457 ;;Total ram usage:       14 bytes
  8458 ;; Hardware stack levels used:    1
  8459 ;; Hardware stack levels required when called:    2
  8460 ;; This function calls:
  8461 ;;		Nothing
  8462 ;; This function is called by:
  8463 ;;		_CANInitialize
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           	psect	text31
  8468  000D4E                     __ptext31:
  8469                           	opt stack 0
  8470  000D4E                     _CANSetFilter:
  8471                           	opt stack 26
  8472                           
  8473                           ; BSR set to: 0
  8474                           ;incstack = 0
  8475                           ;CANSetFilter@numBuffer stored from wreg
  8476  000D4E  0100               	movlb	0	; () banked
  8477  000D50  6F69               	movwf	CANSetFilter@numBuffer& (0+255),b
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;CANlib.h: 750: unsigned long tamp;
  8481                           ;CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  8482  000D52  0100               	movlb	0	; () banked
  8483  000D54  5169               	movf	CANSetFilter@numBuffer& (0+255),w,b
  8484  000D56  0100               	movlb	0	; () banked
  8485  000D58  A4D8               	btfss	status,2,c
  8486  000D5A  D059               	goto	l5857
  8487                           
  8488                           ; BSR set to: 0
  8489  000D5C  0100               	movlb	0	; () banked
  8490  000D5E  2964               	incf	CANSetFilter@type& (0+255),w,b
  8491  000D60  A4D8               	btfss	status,2,c
  8492  000D62  D055               	goto	l5857
  8493                           
  8494                           ; BSR set to: 0
  8495                           ;CANlib.h: 753: {
  8496                           ;CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  8497  000D64  010F               	movlb	15	; () banked
  8498  000D66  9701               	bcf	1,3,b	;volatile
  8499                           
  8500                           ; BSR set to: 15
  8501                           ;CANlib.h: 756: tamp = (filter >> 3);
  8502  000D68  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  8503  000D6C  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8504  000D70  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8505  000D74  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8506  000D78  0E04               	movlw	4
  8507  000D7A  D006               	goto	u7380
  8508  000D7C                     u7385:
  8509  000D7C  0100               	movlb	0	; () banked
  8510  000D7E  90D8               	bcf	status,0,c
  8511  000D80  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8512  000D82  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8513  000D84  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8514  000D86  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  8515  000D88                     u7380:
  8516  000D88  2EE8               	decfsz	wreg,f,c
  8517  000D8A  D7F8               	goto	u7385
  8518  000D8C  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8519  000D90  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8520  000D94  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8521  000D98  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8522                           
  8523                           ; BSR set to: 0
  8524                           ;CANlib.h: 757: tamp = tamp & 0x000000FF;
  8525  000D9C  0100               	movlb	0	; () banked
  8526  000D9E  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  8527  000DA0  0100               	movlb	0	; () banked
  8528  000DA2  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8529  000DA4  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  8530  000DA6  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  8531  000DA8  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  8532                           
  8533                           ; BSR set to: 0
  8534                           ;CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  8535  000DAA  C06A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  8536                           
  8537                           ; BSR set to: 0
  8538                           ;CANlib.h: 760: tamp = filter & 0x00000007;
  8539  000DAE  0E07               	movlw	7
  8540  000DB0  0100               	movlb	0	; () banked
  8541  000DB2  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  8542  000DB4  0100               	movlb	0	; () banked
  8543  000DB6  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8544  000DB8  0E00               	movlw	0
  8545  000DBA  0100               	movlb	0	; () banked
  8546  000DBC  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  8547  000DBE  0100               	movlb	0	; () banked
  8548  000DC0  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  8549  000DC2  0E00               	movlw	0
  8550  000DC4  0100               	movlb	0	; () banked
  8551  000DC6  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  8552  000DC8  0100               	movlb	0	; () banked
  8553  000DCA  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  8554  000DCC  0E00               	movlw	0
  8555  000DCE  0100               	movlb	0	; () banked
  8556  000DD0  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  8557  000DD2  0100               	movlb	0	; () banked
  8558  000DD4  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  8559                           
  8560                           ; BSR set to: 0
  8561                           ;CANlib.h: 761: tamp = tamp << 5;
  8562  000DD6  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  8563  000DDA  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  8564  000DDE  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  8565  000DE2  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  8566  000DE6  0E05               	movlw	5
  8567  000DE8                     u7395:
  8568  000DE8  90D8               	bcf	status,0,c
  8569  000DEA  0100               	movlb	0	; () banked
  8570  000DEC  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  8571  000DEE  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  8572  000DF0  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  8573  000DF2  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  8574  000DF4  2EE8               	decfsz	wreg,f,c
  8575  000DF6  D7F8               	goto	u7395
  8576  000DF8  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8577  000DFC  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8578  000E00  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8579  000E04  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8580                           
  8581                           ; BSR set to: 0
  8582                           ;CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  8583  000E08  C06A  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  8584  000E0C  D000               	goto	l5857
  8585  000E0E                     l5857:
  8586                           
  8587                           ; BSR set to: 0
  8588                           ;CANlib.h: 763: }
  8589                           ;CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  8590  000E0E  0100               	movlb	0	; () banked
  8591  000E10  0569               	decf	CANSetFilter@numBuffer& (0+255),w,b
  8592  000E12  A4D8               	btfss	status,2,c
  8593  000E14  D059               	goto	l5875
  8594                           
  8595                           ; BSR set to: 0
  8596  000E16  0100               	movlb	0	; () banked
  8597  000E18  2964               	incf	CANSetFilter@type& (0+255),w,b
  8598  000E1A  A4D8               	btfss	status,2,c
  8599  000E1C  D055               	goto	l5875
  8600                           
  8601                           ; BSR set to: 0
  8602                           ;CANlib.h: 766: {
  8603                           ;CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  8604  000E1E  010F               	movlb	15	; () banked
  8605  000E20  9705               	bcf	5,3,b	;volatile
  8606                           
  8607                           ; BSR set to: 15
  8608                           ;CANlib.h: 769: tamp = (filter >> 3);
  8609  000E22  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  8610  000E26  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8611  000E2A  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8612  000E2E  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8613  000E32  0E04               	movlw	4
  8614  000E34  D006               	goto	u7420
  8615  000E36                     u7425:
  8616  000E36  0100               	movlb	0	; () banked
  8617  000E38  90D8               	bcf	status,0,c
  8618  000E3A  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8619  000E3C  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8620  000E3E  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8621  000E40  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  8622  000E42                     u7420:
  8623  000E42  2EE8               	decfsz	wreg,f,c
  8624  000E44  D7F8               	goto	u7425
  8625  000E46  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8626  000E4A  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8627  000E4E  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8628  000E52  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;CANlib.h: 770: tamp = tamp & 0x000000FF;
  8632  000E56  0100               	movlb	0	; () banked
  8633  000E58  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  8634  000E5A  0100               	movlb	0	; () banked
  8635  000E5C  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8636  000E5E  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  8637  000E60  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  8638  000E62  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  8642  000E64  C06A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  8643                           
  8644                           ; BSR set to: 0
  8645                           ;CANlib.h: 773: tamp = filter & 0x00000007;
  8646  000E68  0E07               	movlw	7
  8647  000E6A  0100               	movlb	0	; () banked
  8648  000E6C  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  8649  000E6E  0100               	movlb	0	; () banked
  8650  000E70  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8651  000E72  0E00               	movlw	0
  8652  000E74  0100               	movlb	0	; () banked
  8653  000E76  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  8654  000E78  0100               	movlb	0	; () banked
  8655  000E7A  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  8656  000E7C  0E00               	movlw	0
  8657  000E7E  0100               	movlb	0	; () banked
  8658  000E80  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  8659  000E82  0100               	movlb	0	; () banked
  8660  000E84  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  8661  000E86  0E00               	movlw	0
  8662  000E88  0100               	movlb	0	; () banked
  8663  000E8A  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  8664  000E8C  0100               	movlb	0	; () banked
  8665  000E8E  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  8666                           
  8667                           ; BSR set to: 0
  8668                           ;CANlib.h: 774: tamp = tamp << 5;
  8669  000E90  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  8670  000E94  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  8671  000E98  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  8672  000E9C  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  8673  000EA0  0E05               	movlw	5
  8674  000EA2                     u7435:
  8675  000EA2  90D8               	bcf	status,0,c
  8676  000EA4  0100               	movlb	0	; () banked
  8677  000EA6  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  8678  000EA8  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  8679  000EAA  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  8680  000EAC  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  8681  000EAE  2EE8               	decfsz	wreg,f,c
  8682  000EB0  D7F8               	goto	u7435
  8683  000EB2  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8684  000EB6  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8685  000EBA  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8686  000EBE  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8687                           
  8688                           ; BSR set to: 0
  8689                           ;CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  8690  000EC2  C06A  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  8691  000EC6  D000               	goto	l5875
  8692  000EC8                     l5875:
  8693                           
  8694                           ; BSR set to: 0
  8695                           ;CANlib.h: 776: }
  8696                           ;CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  8697  000EC8  0E02               	movlw	2
  8698  000ECA  0100               	movlb	0	; () banked
  8699  000ECC  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  8700  000ECE  A4D8               	btfss	status,2,c
  8701  000ED0  D059               	goto	l5893
  8702                           
  8703                           ; BSR set to: 0
  8704  000ED2  0100               	movlb	0	; () banked
  8705  000ED4  2964               	incf	CANSetFilter@type& (0+255),w,b
  8706  000ED6  A4D8               	btfss	status,2,c
  8707  000ED8  D055               	goto	l5893
  8708                           
  8709                           ; BSR set to: 0
  8710                           ;CANlib.h: 779: {
  8711                           ;CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  8712  000EDA  010F               	movlb	15	; () banked
  8713  000EDC  9709               	bcf	9,3,b	;volatile
  8714                           
  8715                           ; BSR set to: 15
  8716                           ;CANlib.h: 782: tamp = (filter >> 3);
  8717  000EDE  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  8718  000EE2  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8719  000EE6  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8720  000EEA  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8721  000EEE  0E04               	movlw	4
  8722  000EF0  D006               	goto	u7460
  8723  000EF2                     u7465:
  8724  000EF2  0100               	movlb	0	; () banked
  8725  000EF4  90D8               	bcf	status,0,c
  8726  000EF6  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8727  000EF8  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8728  000EFA  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8729  000EFC  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  8730  000EFE                     u7460:
  8731  000EFE  2EE8               	decfsz	wreg,f,c
  8732  000F00  D7F8               	goto	u7465
  8733  000F02  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8734  000F06  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8735  000F0A  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8736  000F0E  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8737                           
  8738                           ; BSR set to: 0
  8739                           ;CANlib.h: 783: tamp = tamp & 0x000000FF;
  8740  000F12  0100               	movlb	0	; () banked
  8741  000F14  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  8742  000F16  0100               	movlb	0	; () banked
  8743  000F18  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8744  000F1A  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  8745  000F1C  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  8746  000F1E  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  8750  000F20  C06A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  8751                           
  8752                           ; BSR set to: 0
  8753                           ;CANlib.h: 786: tamp = filter & 0x00000007;
  8754  000F24  0E07               	movlw	7
  8755  000F26  0100               	movlb	0	; () banked
  8756  000F28  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  8757  000F2A  0100               	movlb	0	; () banked
  8758  000F2C  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8759  000F2E  0E00               	movlw	0
  8760  000F30  0100               	movlb	0	; () banked
  8761  000F32  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  8762  000F34  0100               	movlb	0	; () banked
  8763  000F36  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  8764  000F38  0E00               	movlw	0
  8765  000F3A  0100               	movlb	0	; () banked
  8766  000F3C  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  8767  000F3E  0100               	movlb	0	; () banked
  8768  000F40  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  8769  000F42  0E00               	movlw	0
  8770  000F44  0100               	movlb	0	; () banked
  8771  000F46  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  8772  000F48  0100               	movlb	0	; () banked
  8773  000F4A  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  8774                           
  8775                           ; BSR set to: 0
  8776                           ;CANlib.h: 787: tamp = tamp << 5;
  8777  000F4C  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  8778  000F50  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  8779  000F54  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  8780  000F58  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  8781  000F5C  0E05               	movlw	5
  8782  000F5E                     u7475:
  8783  000F5E  90D8               	bcf	status,0,c
  8784  000F60  0100               	movlb	0	; () banked
  8785  000F62  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  8786  000F64  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  8787  000F66  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  8788  000F68  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  8789  000F6A  2EE8               	decfsz	wreg,f,c
  8790  000F6C  D7F8               	goto	u7475
  8791  000F6E  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8792  000F72  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8793  000F76  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8794  000F7A  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8795                           
  8796                           ; BSR set to: 0
  8797                           ;CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  8798  000F7E  C06A  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  8799  000F82  D000               	goto	l5893
  8800  000F84                     l5893:
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;CANlib.h: 789: }
  8804                           ;CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  8805  000F84  0E03               	movlw	3
  8806  000F86  0100               	movlb	0	; () banked
  8807  000F88  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  8808  000F8A  A4D8               	btfss	status,2,c
  8809  000F8C  D059               	goto	l5911
  8810                           
  8811                           ; BSR set to: 0
  8812  000F8E  0100               	movlb	0	; () banked
  8813  000F90  2964               	incf	CANSetFilter@type& (0+255),w,b
  8814  000F92  A4D8               	btfss	status,2,c
  8815  000F94  D055               	goto	l5911
  8816                           
  8817                           ; BSR set to: 0
  8818                           ;CANlib.h: 792: {
  8819                           ;CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  8820  000F96  010F               	movlb	15	; () banked
  8821  000F98  970D               	bcf	13,3,b	;volatile
  8822                           
  8823                           ; BSR set to: 15
  8824                           ;CANlib.h: 795: tamp = (filter >> 3);
  8825  000F9A  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  8826  000F9E  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8827  000FA2  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8828  000FA6  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8829  000FAA  0E04               	movlw	4
  8830  000FAC  D006               	goto	u7500
  8831  000FAE                     u7505:
  8832  000FAE  0100               	movlb	0	; () banked
  8833  000FB0  90D8               	bcf	status,0,c
  8834  000FB2  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8835  000FB4  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8836  000FB6  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8837  000FB8  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  8838  000FBA                     u7500:
  8839  000FBA  2EE8               	decfsz	wreg,f,c
  8840  000FBC  D7F8               	goto	u7505
  8841  000FBE  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8842  000FC2  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8843  000FC6  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8844  000FCA  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;CANlib.h: 796: tamp = tamp & 0x000000FF;
  8848  000FCE  0100               	movlb	0	; () banked
  8849  000FD0  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  8850  000FD2  0100               	movlb	0	; () banked
  8851  000FD4  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8852  000FD6  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  8853  000FD8  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  8854  000FDA  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  8855                           
  8856                           ; BSR set to: 0
  8857                           ;CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  8858  000FDC  C06A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  8859                           
  8860                           ; BSR set to: 0
  8861                           ;CANlib.h: 799: tamp = filter & 0x00000007;
  8862  000FE0  0E07               	movlw	7
  8863  000FE2  0100               	movlb	0	; () banked
  8864  000FE4  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  8865  000FE6  0100               	movlb	0	; () banked
  8866  000FE8  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8867  000FEA  0E00               	movlw	0
  8868  000FEC  0100               	movlb	0	; () banked
  8869  000FEE  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  8870  000FF0  0100               	movlb	0	; () banked
  8871  000FF2  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  8872  000FF4  0E00               	movlw	0
  8873  000FF6  0100               	movlb	0	; () banked
  8874  000FF8  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  8875  000FFA  0100               	movlb	0	; () banked
  8876  000FFC  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  8877  000FFE  0E00               	movlw	0
  8878  001000  0100               	movlb	0	; () banked
  8879  001002  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  8880  001004  0100               	movlb	0	; () banked
  8881  001006  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  8882                           
  8883                           ; BSR set to: 0
  8884                           ;CANlib.h: 800: tamp = tamp << 5;
  8885  001008  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  8886  00100C  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  8887  001010  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  8888  001014  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  8889  001018  0E05               	movlw	5
  8890  00101A                     u7515:
  8891  00101A  90D8               	bcf	status,0,c
  8892  00101C  0100               	movlb	0	; () banked
  8893  00101E  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  8894  001020  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  8895  001022  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  8896  001024  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  8897  001026  2EE8               	decfsz	wreg,f,c
  8898  001028  D7F8               	goto	u7515
  8899  00102A  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8900  00102E  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8901  001032  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8902  001036  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8903                           
  8904                           ; BSR set to: 0
  8905                           ;CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  8906  00103A  C06A  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  8907  00103E  D000               	goto	l5911
  8908  001040                     l5911:
  8909                           
  8910                           ; BSR set to: 0
  8911                           ;CANlib.h: 802: }
  8912                           ;CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  8913  001040  0E04               	movlw	4
  8914  001042  0100               	movlb	0	; () banked
  8915  001044  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  8916  001046  A4D8               	btfss	status,2,c
  8917  001048  D059               	goto	l5929
  8918                           
  8919                           ; BSR set to: 0
  8920  00104A  0100               	movlb	0	; () banked
  8921  00104C  2964               	incf	CANSetFilter@type& (0+255),w,b
  8922  00104E  A4D8               	btfss	status,2,c
  8923  001050  D055               	goto	l5929
  8924                           
  8925                           ; BSR set to: 0
  8926                           ;CANlib.h: 805: {
  8927                           ;CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  8928  001052  010F               	movlb	15	; () banked
  8929  001054  9711               	bcf	17,3,b	;volatile
  8930                           
  8931                           ; BSR set to: 15
  8932                           ;CANlib.h: 808: tamp = (filter >> 3);
  8933  001056  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  8934  00105A  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  8935  00105E  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  8936  001062  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  8937  001066  0E04               	movlw	4
  8938  001068  D006               	goto	u7540
  8939  00106A                     u7545:
  8940  00106A  0100               	movlb	0	; () banked
  8941  00106C  90D8               	bcf	status,0,c
  8942  00106E  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  8943  001070  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  8944  001072  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  8945  001074  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  8946  001076                     u7540:
  8947  001076  2EE8               	decfsz	wreg,f,c
  8948  001078  D7F8               	goto	u7545
  8949  00107A  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  8950  00107E  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  8951  001082  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  8952  001086  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  8953                           
  8954                           ; BSR set to: 0
  8955                           ;CANlib.h: 809: tamp = tamp & 0x000000FF;
  8956  00108A  0100               	movlb	0	; () banked
  8957  00108C  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  8958  00108E  0100               	movlb	0	; () banked
  8959  001090  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8960  001092  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  8961  001094  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  8962  001096  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  8966  001098  C06A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;CANlib.h: 812: tamp = filter & 0x00000007;
  8970  00109C  0E07               	movlw	7
  8971  00109E  0100               	movlb	0	; () banked
  8972  0010A0  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  8973  0010A2  0100               	movlb	0	; () banked
  8974  0010A4  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  8975  0010A6  0E00               	movlw	0
  8976  0010A8  0100               	movlb	0	; () banked
  8977  0010AA  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  8978  0010AC  0100               	movlb	0	; () banked
  8979  0010AE  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  8980  0010B0  0E00               	movlw	0
  8981  0010B2  0100               	movlb	0	; () banked
  8982  0010B4  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  8983  0010B6  0100               	movlb	0	; () banked
  8984  0010B8  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  8985  0010BA  0E00               	movlw	0
  8986  0010BC  0100               	movlb	0	; () banked
  8987  0010BE  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  8988  0010C0  0100               	movlb	0	; () banked
  8989  0010C2  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  8990                           
  8991                           ; BSR set to: 0
  8992                           ;CANlib.h: 813: tamp = tamp << 5;
  8993  0010C4  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  8994  0010C8  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  8995  0010CC  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  8996  0010D0  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  8997  0010D4  0E05               	movlw	5
  8998  0010D6                     u7555:
  8999  0010D6  90D8               	bcf	status,0,c
  9000  0010D8  0100               	movlb	0	; () banked
  9001  0010DA  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  9002  0010DC  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9003  0010DE  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9004  0010E0  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9005  0010E2  2EE8               	decfsz	wreg,f,c
  9006  0010E4  D7F8               	goto	u7555
  9007  0010E6  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9008  0010EA  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9009  0010EE  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9010  0010F2  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9011                           
  9012                           ; BSR set to: 0
  9013                           ;CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  9014  0010F6  C06A  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  9015  0010FA  D000               	goto	l5929
  9016  0010FC                     l5929:
  9017                           
  9018                           ; BSR set to: 0
  9019                           ;CANlib.h: 815: }
  9020                           ;CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  9021  0010FC  0E05               	movlw	5
  9022  0010FE  0100               	movlb	0	; () banked
  9023  001100  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9024  001102  A4D8               	btfss	status,2,c
  9025  001104  D059               	goto	l5947
  9026                           
  9027                           ; BSR set to: 0
  9028  001106  0100               	movlb	0	; () banked
  9029  001108  2964               	incf	CANSetFilter@type& (0+255),w,b
  9030  00110A  A4D8               	btfss	status,2,c
  9031  00110C  D055               	goto	l5947
  9032                           
  9033                           ; BSR set to: 0
  9034                           ;CANlib.h: 818: {
  9035                           ;CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  9036  00110E  010F               	movlb	15	; () banked
  9037  001110  9715               	bcf	21,3,b	;volatile
  9038                           
  9039                           ; BSR set to: 15
  9040                           ;CANlib.h: 821: tamp = (filter >> 3);
  9041  001112  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  9042  001116  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9043  00111A  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9044  00111E  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9045  001122  0E04               	movlw	4
  9046  001124  D006               	goto	u7580
  9047  001126                     u7585:
  9048  001126  0100               	movlb	0	; () banked
  9049  001128  90D8               	bcf	status,0,c
  9050  00112A  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9051  00112C  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9052  00112E  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9053  001130  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  9054  001132                     u7580:
  9055  001132  2EE8               	decfsz	wreg,f,c
  9056  001134  D7F8               	goto	u7585
  9057  001136  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9058  00113A  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9059  00113E  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9060  001142  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9061                           
  9062                           ; BSR set to: 0
  9063                           ;CANlib.h: 822: tamp = tamp & 0x000000FF;
  9064  001146  0100               	movlb	0	; () banked
  9065  001148  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  9066  00114A  0100               	movlb	0	; () banked
  9067  00114C  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9068  00114E  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9069  001150  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9070  001152  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9071                           
  9072                           ; BSR set to: 0
  9073                           ;CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  9074  001154  C06A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  9075                           
  9076                           ; BSR set to: 0
  9077                           ;CANlib.h: 825: tamp = filter & 0x00000007;
  9078  001158  0E07               	movlw	7
  9079  00115A  0100               	movlb	0	; () banked
  9080  00115C  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9081  00115E  0100               	movlb	0	; () banked
  9082  001160  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9083  001162  0E00               	movlw	0
  9084  001164  0100               	movlb	0	; () banked
  9085  001166  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9086  001168  0100               	movlb	0	; () banked
  9087  00116A  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9088  00116C  0E00               	movlw	0
  9089  00116E  0100               	movlb	0	; () banked
  9090  001170  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9091  001172  0100               	movlb	0	; () banked
  9092  001174  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9093  001176  0E00               	movlw	0
  9094  001178  0100               	movlb	0	; () banked
  9095  00117A  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9096  00117C  0100               	movlb	0	; () banked
  9097  00117E  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9098                           
  9099                           ; BSR set to: 0
  9100                           ;CANlib.h: 826: tamp = tamp << 5;
  9101  001180  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9102  001184  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9103  001188  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9104  00118C  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9105  001190  0E05               	movlw	5
  9106  001192                     u7595:
  9107  001192  90D8               	bcf	status,0,c
  9108  001194  0100               	movlb	0	; () banked
  9109  001196  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  9110  001198  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9111  00119A  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9112  00119C  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9113  00119E  2EE8               	decfsz	wreg,f,c
  9114  0011A0  D7F8               	goto	u7595
  9115  0011A2  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9116  0011A6  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9117  0011AA  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9118  0011AE  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9119                           
  9120                           ; BSR set to: 0
  9121                           ;CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  9122  0011B2  C06A  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  9123  0011B6  D000               	goto	l5947
  9124  0011B8                     l5947:
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;CANlib.h: 828: }
  9128                           ;CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  9129  0011B8  0100               	movlb	0	; () banked
  9130  0011BA  5169               	movf	CANSetFilter@numBuffer& (0+255),w,b
  9131  0011BC  0100               	movlb	0	; () banked
  9132  0011BE  A4D8               	btfss	status,2,c
  9133  0011C0  D08B               	goto	l5981
  9134                           
  9135                           ; BSR set to: 0
  9136  0011C2  0EF7               	movlw	247
  9137  0011C4  0100               	movlb	0	; () banked
  9138  0011C6  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  9139  0011C8  A4D8               	btfss	status,2,c
  9140  0011CA  D086               	goto	l5981
  9141                           
  9142                           ; BSR set to: 0
  9143                           ;CANlib.h: 832: {
  9144                           ;CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  9145  0011CC  010F               	movlb	15	; () banked
  9146  0011CE  8701               	bsf	1,3,b	;volatile
  9147                           
  9148                           ; BSR set to: 15
  9149                           ;CANlib.h: 835: tamp = filter & 0x000000FF;
  9150  0011D0  0100               	movlb	0	; () banked
  9151  0011D2  5160               	movf	CANSetFilter@filter& (0+255),w,b
  9152  0011D4  0100               	movlb	0	; () banked
  9153  0011D6  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9154  0011D8  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9155  0011DA  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9156  0011DC  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  9160  0011DE  C06A  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  9161                           
  9162                           ; BSR set to: 0
  9163                           ;CANlib.h: 838: tamp = filter & 0x0000FF00;
  9164  0011E2  0E00               	movlw	0
  9165  0011E4  0100               	movlb	0	; () banked
  9166  0011E6  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9167  0011E8  0100               	movlb	0	; () banked
  9168  0011EA  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9169  0011EC  0EFF               	movlw	255
  9170  0011EE  0100               	movlb	0	; () banked
  9171  0011F0  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9172  0011F2  0100               	movlb	0	; () banked
  9173  0011F4  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9174  0011F6  0E00               	movlw	0
  9175  0011F8  0100               	movlb	0	; () banked
  9176  0011FA  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9177  0011FC  0100               	movlb	0	; () banked
  9178  0011FE  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9179  001200  0E00               	movlw	0
  9180  001202  0100               	movlb	0	; () banked
  9181  001204  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9182  001206  0100               	movlb	0	; () banked
  9183  001208  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9184                           
  9185                           ; BSR set to: 0
  9186                           ;CANlib.h: 839: tamp = tamp >> 8;
  9187  00120A  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9188  00120E  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9189  001212  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9190  001216  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9191  00121A  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  9192  00121E  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  9193  001222  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  9194  001226  0100               	movlb	0	; () banked
  9195  001228  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  9196  00122A  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9197  00122E  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9198  001232  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9199  001236  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9200                           
  9201                           ; BSR set to: 0
  9202                           ;CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  9203  00123A  C06A  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;CANlib.h: 842: if (filter & 0x00010000)
  9207  00123E  0100               	movlb	0	; () banked
  9208  001240  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  9209  001242  D003               	goto	l469
  9210                           
  9211                           ; BSR set to: 0
  9212                           ;CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  9213  001244  010F               	movlb	15	; () banked
  9214  001246  8101               	bsf	1,0,b	;volatile
  9215  001248  D002               	goto	l470
  9216  00124A                     l469:
  9217                           
  9218                           ; BSR set to: 0
  9219                           ;CANlib.h: 844: else
  9220                           ;CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  9221  00124A  010F               	movlb	15	; () banked
  9222  00124C  9101               	bcf	1,0,b	;volatile
  9223  00124E                     l470:
  9224                           
  9225                           ; BSR set to: 15
  9226                           ;CANlib.h: 847: if (filter & 0x00020000)
  9227  00124E  0100               	movlb	0	; () banked
  9228  001250  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  9229  001252  D003               	goto	l471
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  9233  001254  010F               	movlb	15	; () banked
  9234  001256  8301               	bsf	1,1,b	;volatile
  9235  001258  D002               	goto	l472
  9236  00125A                     l471:
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;CANlib.h: 849: else
  9240                           ;CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  9241  00125A  010F               	movlb	15	; () banked
  9242  00125C  9301               	bcf	1,1,b	;volatile
  9243  00125E                     l472:
  9244                           
  9245                           ; BSR set to: 15
  9246                           ;CANlib.h: 852: if (filter & 0x00040000)
  9247  00125E  0100               	movlb	0	; () banked
  9248  001260  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  9249  001262  D003               	goto	l473
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  9253  001264  010F               	movlb	15	; () banked
  9254  001266  8B01               	bsf	1,5,b	;volatile
  9255  001268  D002               	goto	l474
  9256  00126A                     l473:
  9257                           
  9258                           ; BSR set to: 0
  9259                           ;CANlib.h: 854: else
  9260                           ;CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  9261  00126A  010F               	movlb	15	; () banked
  9262  00126C  9B01               	bcf	1,5,b	;volatile
  9263  00126E                     l474:
  9264                           
  9265                           ; BSR set to: 15
  9266                           ;CANlib.h: 857: if (filter & 0x00080000)
  9267  00126E  0100               	movlb	0	; () banked
  9268  001270  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  9269  001272  D003               	goto	l475
  9270                           
  9271                           ; BSR set to: 0
  9272                           ;CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  9273  001274  010F               	movlb	15	; () banked
  9274  001276  8D01               	bsf	1,6,b	;volatile
  9275  001278  D002               	goto	l476
  9276  00127A                     l475:
  9277                           
  9278                           ; BSR set to: 0
  9279                           ;CANlib.h: 859: else
  9280                           ;CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  9281  00127A  010F               	movlb	15	; () banked
  9282  00127C  9D01               	bcf	1,6,b	;volatile
  9283  00127E                     l476:
  9284                           
  9285                           ; BSR set to: 15
  9286                           ;CANlib.h: 862: if (filter & 0x00100000)
  9287  00127E  0100               	movlb	0	; () banked
  9288  001280  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  9289  001282  D003               	goto	l477
  9290                           
  9291                           ; BSR set to: 0
  9292                           ;CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  9293  001284  010F               	movlb	15	; () banked
  9294  001286  8F01               	bsf	1,7,b	;volatile
  9295  001288  D003               	goto	l5975
  9296  00128A                     l477:
  9297                           
  9298                           ; BSR set to: 0
  9299                           ;CANlib.h: 864: else
  9300                           ;CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  9301  00128A  010F               	movlb	15	; () banked
  9302  00128C  9F01               	bcf	1,7,b	;volatile
  9303  00128E  D000               	goto	l5975
  9304  001290                     l5975:
  9305                           
  9306                           ; BSR set to: 15
  9307                           ;CANlib.h: 867: tamp = (filter >> 21);
  9308  001290  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  9309  001294  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9310  001298  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9311  00129C  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9312  0012A0  0E16               	movlw	22
  9313  0012A2  D006               	goto	u7670
  9314  0012A4                     u7675:
  9315  0012A4  0100               	movlb	0	; () banked
  9316  0012A6  90D8               	bcf	status,0,c
  9317  0012A8  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9318  0012AA  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9319  0012AC  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9320  0012AE  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  9321  0012B0                     u7670:
  9322  0012B0  2EE8               	decfsz	wreg,f,c
  9323  0012B2  D7F8               	goto	u7675
  9324  0012B4  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9325  0012B8  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9326  0012BC  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9327  0012C0  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;CANlib.h: 868: tamp = tamp & 0x000000FF;
  9331  0012C4  0100               	movlb	0	; () banked
  9332  0012C6  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  9333  0012C8  0100               	movlb	0	; () banked
  9334  0012CA  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9335  0012CC  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9336  0012CE  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9337  0012D0  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9338                           
  9339                           ; BSR set to: 0
  9340                           ;CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  9341  0012D2  C06A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  9342  0012D6  D000               	goto	l5981
  9343  0012D8                     l5981:
  9344                           
  9345                           ; BSR set to: 0
  9346                           ;CANlib.h: 870: }
  9347                           ;CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  9348  0012D8  0100               	movlb	0	; () banked
  9349  0012DA  0569               	decf	CANSetFilter@numBuffer& (0+255),w,b
  9350  0012DC  A4D8               	btfss	status,2,c
  9351  0012DE  D08B               	goto	l6015
  9352                           
  9353                           ; BSR set to: 0
  9354  0012E0  0EF7               	movlw	247
  9355  0012E2  0100               	movlb	0	; () banked
  9356  0012E4  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  9357  0012E6  A4D8               	btfss	status,2,c
  9358  0012E8  D086               	goto	l6015
  9359                           
  9360                           ; BSR set to: 0
  9361                           ;CANlib.h: 873: {
  9362                           ;CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  9363  0012EA  010F               	movlb	15	; () banked
  9364  0012EC  8705               	bsf	5,3,b	;volatile
  9365                           
  9366                           ; BSR set to: 15
  9367                           ;CANlib.h: 876: tamp = filter & 0x000000FF;
  9368  0012EE  0100               	movlb	0	; () banked
  9369  0012F0  5160               	movf	CANSetFilter@filter& (0+255),w,b
  9370  0012F2  0100               	movlb	0	; () banked
  9371  0012F4  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9372  0012F6  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9373  0012F8  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9374  0012FA  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9375                           
  9376                           ; BSR set to: 0
  9377                           ;CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  9378  0012FC  C06A  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  9379                           
  9380                           ; BSR set to: 0
  9381                           ;CANlib.h: 879: tamp = filter & 0x0000FF00;
  9382  001300  0E00               	movlw	0
  9383  001302  0100               	movlb	0	; () banked
  9384  001304  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9385  001306  0100               	movlb	0	; () banked
  9386  001308  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9387  00130A  0EFF               	movlw	255
  9388  00130C  0100               	movlb	0	; () banked
  9389  00130E  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9390  001310  0100               	movlb	0	; () banked
  9391  001312  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9392  001314  0E00               	movlw	0
  9393  001316  0100               	movlb	0	; () banked
  9394  001318  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9395  00131A  0100               	movlb	0	; () banked
  9396  00131C  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9397  00131E  0E00               	movlw	0
  9398  001320  0100               	movlb	0	; () banked
  9399  001322  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9400  001324  0100               	movlb	0	; () banked
  9401  001326  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9402                           
  9403                           ; BSR set to: 0
  9404                           ;CANlib.h: 880: tamp = tamp >> 8;
  9405  001328  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9406  00132C  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9407  001330  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9408  001334  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9409  001338  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  9410  00133C  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  9411  001340  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  9412  001344  0100               	movlb	0	; () banked
  9413  001346  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  9414  001348  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9415  00134C  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9416  001350  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9417  001354  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  9421  001358  C06A  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  9422                           
  9423                           ; BSR set to: 0
  9424                           ;CANlib.h: 883: if (filter & 0x00010000)
  9425  00135C  0100               	movlb	0	; () banked
  9426  00135E  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  9427  001360  D003               	goto	l480
  9428                           
  9429                           ; BSR set to: 0
  9430                           ;CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  9431  001362  010F               	movlb	15	; () banked
  9432  001364  8105               	bsf	5,0,b	;volatile
  9433  001366  D002               	goto	l481
  9434  001368                     l480:
  9435                           
  9436                           ; BSR set to: 0
  9437                           ;CANlib.h: 885: else
  9438                           ;CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  9439  001368  010F               	movlb	15	; () banked
  9440  00136A  9105               	bcf	5,0,b	;volatile
  9441  00136C                     l481:
  9442                           
  9443                           ; BSR set to: 15
  9444                           ;CANlib.h: 888: if (filter & 0x00020000)
  9445  00136C  0100               	movlb	0	; () banked
  9446  00136E  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  9447  001370  D003               	goto	l482
  9448                           
  9449                           ; BSR set to: 0
  9450                           ;CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  9451  001372  010F               	movlb	15	; () banked
  9452  001374  8305               	bsf	5,1,b	;volatile
  9453  001376  D002               	goto	l483
  9454  001378                     l482:
  9455                           
  9456                           ; BSR set to: 0
  9457                           ;CANlib.h: 890: else
  9458                           ;CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  9459  001378  010F               	movlb	15	; () banked
  9460  00137A  9305               	bcf	5,1,b	;volatile
  9461  00137C                     l483:
  9462                           
  9463                           ; BSR set to: 15
  9464                           ;CANlib.h: 893: if (filter & 0x00040000)
  9465  00137C  0100               	movlb	0	; () banked
  9466  00137E  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  9467  001380  D003               	goto	l484
  9468                           
  9469                           ; BSR set to: 0
  9470                           ;CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  9471  001382  010F               	movlb	15	; () banked
  9472  001384  8B05               	bsf	5,5,b	;volatile
  9473  001386  D002               	goto	l485
  9474  001388                     l484:
  9475                           
  9476                           ; BSR set to: 0
  9477                           ;CANlib.h: 895: else
  9478                           ;CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  9479  001388  010F               	movlb	15	; () banked
  9480  00138A  9B05               	bcf	5,5,b	;volatile
  9481  00138C                     l485:
  9482                           
  9483                           ; BSR set to: 15
  9484                           ;CANlib.h: 898: if (filter & 0x00080000)
  9485  00138C  0100               	movlb	0	; () banked
  9486  00138E  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  9487  001390  D003               	goto	l486
  9488                           
  9489                           ; BSR set to: 0
  9490                           ;CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  9491  001392  010F               	movlb	15	; () banked
  9492  001394  8D05               	bsf	5,6,b	;volatile
  9493  001396  D002               	goto	l487
  9494  001398                     l486:
  9495                           
  9496                           ; BSR set to: 0
  9497                           ;CANlib.h: 900: else
  9498                           ;CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  9499  001398  010F               	movlb	15	; () banked
  9500  00139A  9D05               	bcf	5,6,b	;volatile
  9501  00139C                     l487:
  9502                           
  9503                           ; BSR set to: 15
  9504                           ;CANlib.h: 903: if (filter & 0x00100000)
  9505  00139C  0100               	movlb	0	; () banked
  9506  00139E  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  9507  0013A0  D003               	goto	l488
  9508                           
  9509                           ; BSR set to: 0
  9510                           ;CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  9511  0013A2  010F               	movlb	15	; () banked
  9512  0013A4  8F05               	bsf	5,7,b	;volatile
  9513  0013A6  D003               	goto	l6009
  9514  0013A8                     l488:
  9515                           
  9516                           ; BSR set to: 0
  9517                           ;CANlib.h: 905: else
  9518                           ;CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  9519  0013A8  010F               	movlb	15	; () banked
  9520  0013AA  9F05               	bcf	5,7,b	;volatile
  9521  0013AC  D000               	goto	l6009
  9522  0013AE                     l6009:
  9523                           
  9524                           ; BSR set to: 15
  9525                           ;CANlib.h: 908: tamp = (filter >> 21);
  9526  0013AE  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  9527  0013B2  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9528  0013B6  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9529  0013BA  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9530  0013BE  0E16               	movlw	22
  9531  0013C0  D006               	goto	u7750
  9532  0013C2                     u7755:
  9533  0013C2  0100               	movlb	0	; () banked
  9534  0013C4  90D8               	bcf	status,0,c
  9535  0013C6  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9536  0013C8  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9537  0013CA  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9538  0013CC  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  9539  0013CE                     u7750:
  9540  0013CE  2EE8               	decfsz	wreg,f,c
  9541  0013D0  D7F8               	goto	u7755
  9542  0013D2  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9543  0013D6  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9544  0013DA  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9545  0013DE  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9546                           
  9547                           ; BSR set to: 0
  9548                           ;CANlib.h: 909: tamp = tamp & 0x000000FF;
  9549  0013E2  0100               	movlb	0	; () banked
  9550  0013E4  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  9551  0013E6  0100               	movlb	0	; () banked
  9552  0013E8  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9553  0013EA  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9554  0013EC  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9555  0013EE  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9556                           
  9557                           ; BSR set to: 0
  9558                           ;CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  9559  0013F0  C06A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  9560  0013F4  D000               	goto	l6015
  9561  0013F6                     l6015:
  9562                           
  9563                           ; BSR set to: 0
  9564                           ;CANlib.h: 911: }
  9565                           ;CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  9566  0013F6  0E02               	movlw	2
  9567  0013F8  0100               	movlb	0	; () banked
  9568  0013FA  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9569  0013FC  A4D8               	btfss	status,2,c
  9570  0013FE  D08B               	goto	l6049
  9571                           
  9572                           ; BSR set to: 0
  9573  001400  0EF7               	movlw	247
  9574  001402  0100               	movlb	0	; () banked
  9575  001404  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  9576  001406  A4D8               	btfss	status,2,c
  9577  001408  D086               	goto	l6049
  9578                           
  9579                           ; BSR set to: 0
  9580                           ;CANlib.h: 915: {
  9581                           ;CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  9582  00140A  010F               	movlb	15	; () banked
  9583  00140C  8709               	bsf	9,3,b	;volatile
  9584                           
  9585                           ; BSR set to: 15
  9586                           ;CANlib.h: 918: tamp = filter & 0x000000FF;
  9587  00140E  0100               	movlb	0	; () banked
  9588  001410  5160               	movf	CANSetFilter@filter& (0+255),w,b
  9589  001412  0100               	movlb	0	; () banked
  9590  001414  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9591  001416  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9592  001418  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9593  00141A  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9594                           
  9595                           ; BSR set to: 0
  9596                           ;CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  9597  00141C  C06A  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  9598                           
  9599                           ; BSR set to: 0
  9600                           ;CANlib.h: 921: tamp = filter & 0x0000FF00;
  9601  001420  0E00               	movlw	0
  9602  001422  0100               	movlb	0	; () banked
  9603  001424  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9604  001426  0100               	movlb	0	; () banked
  9605  001428  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9606  00142A  0EFF               	movlw	255
  9607  00142C  0100               	movlb	0	; () banked
  9608  00142E  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9609  001430  0100               	movlb	0	; () banked
  9610  001432  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9611  001434  0E00               	movlw	0
  9612  001436  0100               	movlb	0	; () banked
  9613  001438  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9614  00143A  0100               	movlb	0	; () banked
  9615  00143C  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9616  00143E  0E00               	movlw	0
  9617  001440  0100               	movlb	0	; () banked
  9618  001442  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9619  001444  0100               	movlb	0	; () banked
  9620  001446  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9621                           
  9622                           ; BSR set to: 0
  9623                           ;CANlib.h: 922: tamp = tamp >> 8;
  9624  001448  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9625  00144C  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9626  001450  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9627  001454  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9628  001458  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  9629  00145C  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  9630  001460  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  9631  001464  0100               	movlb	0	; () banked
  9632  001466  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  9633  001468  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9634  00146C  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9635  001470  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9636  001474  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9637                           
  9638                           ; BSR set to: 0
  9639                           ;CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  9640  001478  C06A  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  9641                           
  9642                           ; BSR set to: 0
  9643                           ;CANlib.h: 925: if (filter & 0x00010000)
  9644  00147C  0100               	movlb	0	; () banked
  9645  00147E  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  9646  001480  D003               	goto	l491
  9647                           
  9648                           ; BSR set to: 0
  9649                           ;CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  9650  001482  010F               	movlb	15	; () banked
  9651  001484  8109               	bsf	9,0,b	;volatile
  9652  001486  D002               	goto	l492
  9653  001488                     l491:
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;CANlib.h: 927: else
  9657                           ;CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  9658  001488  010F               	movlb	15	; () banked
  9659  00148A  9109               	bcf	9,0,b	;volatile
  9660  00148C                     l492:
  9661                           
  9662                           ; BSR set to: 15
  9663                           ;CANlib.h: 930: if (filter & 0x00020000)
  9664  00148C  0100               	movlb	0	; () banked
  9665  00148E  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  9666  001490  D003               	goto	l493
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  9670  001492  010F               	movlb	15	; () banked
  9671  001494  8309               	bsf	9,1,b	;volatile
  9672  001496  D002               	goto	l494
  9673  001498                     l493:
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;CANlib.h: 932: else
  9677                           ;CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  9678  001498  010F               	movlb	15	; () banked
  9679  00149A  9309               	bcf	9,1,b	;volatile
  9680  00149C                     l494:
  9681                           
  9682                           ; BSR set to: 15
  9683                           ;CANlib.h: 935: if (filter & 0x00040000)
  9684  00149C  0100               	movlb	0	; () banked
  9685  00149E  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  9686  0014A0  D003               	goto	l495
  9687                           
  9688                           ; BSR set to: 0
  9689                           ;CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  9690  0014A2  010F               	movlb	15	; () banked
  9691  0014A4  8B09               	bsf	9,5,b	;volatile
  9692  0014A6  D002               	goto	l496
  9693  0014A8                     l495:
  9694                           
  9695                           ; BSR set to: 0
  9696                           ;CANlib.h: 937: else
  9697                           ;CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  9698  0014A8  010F               	movlb	15	; () banked
  9699  0014AA  9B09               	bcf	9,5,b	;volatile
  9700  0014AC                     l496:
  9701                           
  9702                           ; BSR set to: 15
  9703                           ;CANlib.h: 940: if (filter & 0x00080000)
  9704  0014AC  0100               	movlb	0	; () banked
  9705  0014AE  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  9706  0014B0  D003               	goto	l497
  9707                           
  9708                           ; BSR set to: 0
  9709                           ;CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  9710  0014B2  010F               	movlb	15	; () banked
  9711  0014B4  8D09               	bsf	9,6,b	;volatile
  9712  0014B6  D002               	goto	l498
  9713  0014B8                     l497:
  9714                           
  9715                           ; BSR set to: 0
  9716                           ;CANlib.h: 942: else
  9717                           ;CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  9718  0014B8  010F               	movlb	15	; () banked
  9719  0014BA  9D09               	bcf	9,6,b	;volatile
  9720  0014BC                     l498:
  9721                           
  9722                           ; BSR set to: 15
  9723                           ;CANlib.h: 945: if (filter & 0x00100000)
  9724  0014BC  0100               	movlb	0	; () banked
  9725  0014BE  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  9726  0014C0  D003               	goto	l499
  9727                           
  9728                           ; BSR set to: 0
  9729                           ;CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  9730  0014C2  010F               	movlb	15	; () banked
  9731  0014C4  8F09               	bsf	9,7,b	;volatile
  9732  0014C6  D003               	goto	l6043
  9733  0014C8                     l499:
  9734                           
  9735                           ; BSR set to: 0
  9736                           ;CANlib.h: 947: else
  9737                           ;CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  9738  0014C8  010F               	movlb	15	; () banked
  9739  0014CA  9F09               	bcf	9,7,b	;volatile
  9740  0014CC  D000               	goto	l6043
  9741  0014CE                     l6043:
  9742                           
  9743                           ; BSR set to: 15
  9744                           ;CANlib.h: 950: tamp = (filter >> 21);
  9745  0014CE  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  9746  0014D2  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9747  0014D6  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9748  0014DA  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9749  0014DE  0E16               	movlw	22
  9750  0014E0  D006               	goto	u7830
  9751  0014E2                     u7835:
  9752  0014E2  0100               	movlb	0	; () banked
  9753  0014E4  90D8               	bcf	status,0,c
  9754  0014E6  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9755  0014E8  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9756  0014EA  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9757  0014EC  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  9758  0014EE                     u7830:
  9759  0014EE  2EE8               	decfsz	wreg,f,c
  9760  0014F0  D7F8               	goto	u7835
  9761  0014F2  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9762  0014F6  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9763  0014FA  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9764  0014FE  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9765                           
  9766                           ; BSR set to: 0
  9767                           ;CANlib.h: 951: tamp = tamp & 0x000000FF;
  9768  001502  0100               	movlb	0	; () banked
  9769  001504  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  9770  001506  0100               	movlb	0	; () banked
  9771  001508  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9772  00150A  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9773  00150C  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9774  00150E  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9775                           
  9776                           ; BSR set to: 0
  9777                           ;CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  9778  001510  C06A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  9779  001514  D000               	goto	l6049
  9780  001516                     l6049:
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;CANlib.h: 953: }
  9784                           ;CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  9785  001516  0E03               	movlw	3
  9786  001518  0100               	movlb	0	; () banked
  9787  00151A  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9788  00151C  A4D8               	btfss	status,2,c
  9789  00151E  D08B               	goto	l6083
  9790                           
  9791                           ; BSR set to: 0
  9792  001520  0EF7               	movlw	247
  9793  001522  0100               	movlb	0	; () banked
  9794  001524  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  9795  001526  A4D8               	btfss	status,2,c
  9796  001528  D086               	goto	l6083
  9797                           
  9798                           ; BSR set to: 0
  9799                           ;CANlib.h: 956: {
  9800                           ;CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  9801  00152A  010F               	movlb	15	; () banked
  9802  00152C  870D               	bsf	13,3,b	;volatile
  9803                           
  9804                           ; BSR set to: 15
  9805                           ;CANlib.h: 959: tamp = filter & 0x000000FF;
  9806  00152E  0100               	movlb	0	; () banked
  9807  001530  5160               	movf	CANSetFilter@filter& (0+255),w,b
  9808  001532  0100               	movlb	0	; () banked
  9809  001534  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9810  001536  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9811  001538  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9812  00153A  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9813                           
  9814                           ; BSR set to: 0
  9815                           ;CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  9816  00153C  C06A  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  9817                           
  9818                           ; BSR set to: 0
  9819                           ;CANlib.h: 962: tamp = filter & 0x0000FF00;
  9820  001540  0E00               	movlw	0
  9821  001542  0100               	movlb	0	; () banked
  9822  001544  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9823  001546  0100               	movlb	0	; () banked
  9824  001548  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9825  00154A  0EFF               	movlw	255
  9826  00154C  0100               	movlb	0	; () banked
  9827  00154E  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9828  001550  0100               	movlb	0	; () banked
  9829  001552  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9830  001554  0E00               	movlw	0
  9831  001556  0100               	movlb	0	; () banked
  9832  001558  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9833  00155A  0100               	movlb	0	; () banked
  9834  00155C  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9835  00155E  0E00               	movlw	0
  9836  001560  0100               	movlb	0	; () banked
  9837  001562  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9838  001564  0100               	movlb	0	; () banked
  9839  001566  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;CANlib.h: 963: tamp = tamp >> 8;
  9843  001568  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9844  00156C  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9845  001570  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9846  001574  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9847  001578  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  9848  00157C  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  9849  001580  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  9850  001584  0100               	movlb	0	; () banked
  9851  001586  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  9852  001588  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9853  00158C  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9854  001590  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9855  001594  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9856                           
  9857                           ; BSR set to: 0
  9858                           ;CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  9859  001598  C06A  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  9860                           
  9861                           ; BSR set to: 0
  9862                           ;CANlib.h: 966: if (filter & 0x00010000)
  9863  00159C  0100               	movlb	0	; () banked
  9864  00159E  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  9865  0015A0  D003               	goto	l502
  9866                           
  9867                           ; BSR set to: 0
  9868                           ;CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  9869  0015A2  010F               	movlb	15	; () banked
  9870  0015A4  810D               	bsf	13,0,b	;volatile
  9871  0015A6  D002               	goto	l503
  9872  0015A8                     l502:
  9873                           
  9874                           ; BSR set to: 0
  9875                           ;CANlib.h: 968: else
  9876                           ;CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  9877  0015A8  010F               	movlb	15	; () banked
  9878  0015AA  910D               	bcf	13,0,b	;volatile
  9879  0015AC                     l503:
  9880                           
  9881                           ; BSR set to: 15
  9882                           ;CANlib.h: 971: if (filter & 0x00020000)
  9883  0015AC  0100               	movlb	0	; () banked
  9884  0015AE  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  9885  0015B0  D003               	goto	l504
  9886                           
  9887                           ; BSR set to: 0
  9888                           ;CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  9889  0015B2  010F               	movlb	15	; () banked
  9890  0015B4  830D               	bsf	13,1,b	;volatile
  9891  0015B6  D002               	goto	l505
  9892  0015B8                     l504:
  9893                           
  9894                           ; BSR set to: 0
  9895                           ;CANlib.h: 973: else
  9896                           ;CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  9897  0015B8  010F               	movlb	15	; () banked
  9898  0015BA  930D               	bcf	13,1,b	;volatile
  9899  0015BC                     l505:
  9900                           
  9901                           ; BSR set to: 15
  9902                           ;CANlib.h: 976: if (filter & 0x00040000)
  9903  0015BC  0100               	movlb	0	; () banked
  9904  0015BE  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  9905  0015C0  D003               	goto	l506
  9906                           
  9907                           ; BSR set to: 0
  9908                           ;CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  9909  0015C2  010F               	movlb	15	; () banked
  9910  0015C4  8B0D               	bsf	13,5,b	;volatile
  9911  0015C6  D002               	goto	l507
  9912  0015C8                     l506:
  9913                           
  9914                           ; BSR set to: 0
  9915                           ;CANlib.h: 978: else
  9916                           ;CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  9917  0015C8  010F               	movlb	15	; () banked
  9918  0015CA  9B0D               	bcf	13,5,b	;volatile
  9919  0015CC                     l507:
  9920                           
  9921                           ; BSR set to: 15
  9922                           ;CANlib.h: 981: if (filter & 0x00080000)
  9923  0015CC  0100               	movlb	0	; () banked
  9924  0015CE  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  9925  0015D0  D003               	goto	l508
  9926                           
  9927                           ; BSR set to: 0
  9928                           ;CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  9929  0015D2  010F               	movlb	15	; () banked
  9930  0015D4  8D0D               	bsf	13,6,b	;volatile
  9931  0015D6  D002               	goto	l509
  9932  0015D8                     l508:
  9933                           
  9934                           ; BSR set to: 0
  9935                           ;CANlib.h: 983: else
  9936                           ;CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  9937  0015D8  010F               	movlb	15	; () banked
  9938  0015DA  9D0D               	bcf	13,6,b	;volatile
  9939  0015DC                     l509:
  9940                           
  9941                           ; BSR set to: 15
  9942                           ;CANlib.h: 986: if (filter & 0x00100000)
  9943  0015DC  0100               	movlb	0	; () banked
  9944  0015DE  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  9945  0015E0  D003               	goto	l510
  9946                           
  9947                           ; BSR set to: 0
  9948                           ;CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  9949  0015E2  010F               	movlb	15	; () banked
  9950  0015E4  8F0D               	bsf	13,7,b	;volatile
  9951  0015E6  D003               	goto	l6077
  9952  0015E8                     l510:
  9953                           
  9954                           ; BSR set to: 0
  9955                           ;CANlib.h: 988: else
  9956                           ;CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  9957  0015E8  010F               	movlb	15	; () banked
  9958  0015EA  9F0D               	bcf	13,7,b	;volatile
  9959  0015EC  D000               	goto	l6077
  9960  0015EE                     l6077:
  9961                           
  9962                           ; BSR set to: 15
  9963                           ;CANlib.h: 991: tamp = (filter >> 21);
  9964  0015EE  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  9965  0015F2  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9966  0015F6  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9967  0015FA  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9968  0015FE  0E16               	movlw	22
  9969  001600  D006               	goto	u7910
  9970  001602                     u7915:
  9971  001602  0100               	movlb	0	; () banked
  9972  001604  90D8               	bcf	status,0,c
  9973  001606  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9974  001608  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9975  00160A  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9976  00160C  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  9977  00160E                     u7910:
  9978  00160E  2EE8               	decfsz	wreg,f,c
  9979  001610  D7F8               	goto	u7915
  9980  001612  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9981  001616  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9982  00161A  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9983  00161E  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9984                           
  9985                           ; BSR set to: 0
  9986                           ;CANlib.h: 992: tamp = tamp & 0x000000FF;
  9987  001622  0100               	movlb	0	; () banked
  9988  001624  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  9989  001626  0100               	movlb	0	; () banked
  9990  001628  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9991  00162A  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9992  00162C  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9993  00162E  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9994                           
  9995                           ; BSR set to: 0
  9996                           ;CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  9997  001630  C06A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  9998  001634  D000               	goto	l6083
  9999  001636                     l6083:
 10000                           
 10001                           ; BSR set to: 0
 10002                           ;CANlib.h: 994: }
 10003                           ;CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 10004  001636  0E04               	movlw	4
 10005  001638  0100               	movlb	0	; () banked
 10006  00163A  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10007  00163C  A4D8               	btfss	status,2,c
 10008  00163E  D08B               	goto	l6117
 10009                           
 10010                           ; BSR set to: 0
 10011  001640  0EF7               	movlw	247
 10012  001642  0100               	movlb	0	; () banked
 10013  001644  1964               	xorwf	CANSetFilter@type& (0+255),w,b
 10014  001646  A4D8               	btfss	status,2,c
 10015  001648  D086               	goto	l6117
 10016                           
 10017                           ; BSR set to: 0
 10018                           ;CANlib.h: 997: {
 10019                           ;CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
 10020  00164A  010F               	movlb	15	; () banked
 10021  00164C  8711               	bsf	17,3,b	;volatile
 10022                           
 10023                           ; BSR set to: 15
 10024                           ;CANlib.h: 1000: tamp = filter & 0x000000FF;
 10025  00164E  0100               	movlb	0	; () banked
 10026  001650  5160               	movf	CANSetFilter@filter& (0+255),w,b
 10027  001652  0100               	movlb	0	; () banked
 10028  001654  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10029  001656  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10030  001658  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10031  00165A  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10032                           
 10033                           ; BSR set to: 0
 10034                           ;CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
 10035  00165C  C06A  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 10036                           
 10037                           ; BSR set to: 0
 10038                           ;CANlib.h: 1003: tamp = filter & 0x0000FF00;
 10039  001660  0E00               	movlw	0
 10040  001662  0100               	movlb	0	; () banked
 10041  001664  1560               	andwf	CANSetFilter@filter& (0+255),w,b
 10042  001666  0100               	movlb	0	; () banked
 10043  001668  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10044  00166A  0EFF               	movlw	255
 10045  00166C  0100               	movlb	0	; () banked
 10046  00166E  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10047  001670  0100               	movlb	0	; () banked
 10048  001672  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10049  001674  0E00               	movlw	0
 10050  001676  0100               	movlb	0	; () banked
 10051  001678  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10052  00167A  0100               	movlb	0	; () banked
 10053  00167C  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10054  00167E  0E00               	movlw	0
 10055  001680  0100               	movlb	0	; () banked
 10056  001682  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10057  001684  0100               	movlb	0	; () banked
 10058  001686  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10059                           
 10060                           ; BSR set to: 0
 10061                           ;CANlib.h: 1004: tamp = tamp >> 8;
 10062  001688  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
 10063  00168C  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10064  001690  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10065  001694  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10066  001698  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
 10067  00169C  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10068  0016A0  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10069  0016A4  0100               	movlb	0	; () banked
 10070  0016A6  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
 10071  0016A8  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 10072  0016AC  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10073  0016B0  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10074  0016B4  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
 10078  0016B8  C06A  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 10079                           
 10080                           ; BSR set to: 0
 10081                           ;CANlib.h: 1007: if (filter & 0x00010000)
 10082  0016BC  0100               	movlb	0	; () banked
 10083  0016BE  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10084  0016C0  D003               	goto	l513
 10085                           
 10086                           ; BSR set to: 0
 10087                           ;CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 10088  0016C2  010F               	movlb	15	; () banked
 10089  0016C4  8111               	bsf	17,0,b	;volatile
 10090  0016C6  D002               	goto	l514
 10091  0016C8                     l513:
 10092                           
 10093                           ; BSR set to: 0
 10094                           ;CANlib.h: 1009: else
 10095                           ;CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 10096  0016C8  010F               	movlb	15	; () banked
 10097  0016CA  9111               	bcf	17,0,b	;volatile
 10098  0016CC                     l514:
 10099                           
 10100                           ; BSR set to: 15
 10101                           ;CANlib.h: 1012: if (filter & 0x00020000)
 10102  0016CC  0100               	movlb	0	; () banked
 10103  0016CE  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10104  0016D0  D003               	goto	l515
 10105                           
 10106                           ; BSR set to: 0
 10107                           ;CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 10108  0016D2  010F               	movlb	15	; () banked
 10109  0016D4  8311               	bsf	17,1,b	;volatile
 10110  0016D6  D002               	goto	l516
 10111  0016D8                     l515:
 10112                           
 10113                           ; BSR set to: 0
 10114                           ;CANlib.h: 1014: else
 10115                           ;CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 10116  0016D8  010F               	movlb	15	; () banked
 10117  0016DA  9311               	bcf	17,1,b	;volatile
 10118  0016DC                     l516:
 10119                           
 10120                           ; BSR set to: 15
 10121                           ;CANlib.h: 1017: if (filter & 0x00040000)
 10122  0016DC  0100               	movlb	0	; () banked
 10123  0016DE  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10124  0016E0  D003               	goto	l517
 10125                           
 10126                           ; BSR set to: 0
 10127                           ;CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 10128  0016E2  010F               	movlb	15	; () banked
 10129  0016E4  8B11               	bsf	17,5,b	;volatile
 10130  0016E6  D002               	goto	l518
 10131  0016E8                     l517:
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;CANlib.h: 1019: else
 10135                           ;CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 10136  0016E8  010F               	movlb	15	; () banked
 10137  0016EA  9B11               	bcf	17,5,b	;volatile
 10138  0016EC                     l518:
 10139                           
 10140                           ; BSR set to: 15
 10141                           ;CANlib.h: 1022: if (filter & 0x00080000)
 10142  0016EC  0100               	movlb	0	; () banked
 10143  0016EE  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10144  0016F0  D003               	goto	l519
 10145                           
 10146                           ; BSR set to: 0
 10147                           ;CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 10148  0016F2  010F               	movlb	15	; () banked
 10149  0016F4  8D11               	bsf	17,6,b	;volatile
 10150  0016F6  D002               	goto	l520
 10151  0016F8                     l519:
 10152                           
 10153                           ; BSR set to: 0
 10154                           ;CANlib.h: 1024: else
 10155                           ;CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 10156  0016F8  010F               	movlb	15	; () banked
 10157  0016FA  9D11               	bcf	17,6,b	;volatile
 10158  0016FC                     l520:
 10159                           
 10160                           ; BSR set to: 15
 10161                           ;CANlib.h: 1027: if (filter & 0x00100000)
 10162  0016FC  0100               	movlb	0	; () banked
 10163  0016FE  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10164  001700  D003               	goto	l521
 10165                           
 10166                           ; BSR set to: 0
 10167                           ;CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 10168  001702  010F               	movlb	15	; () banked
 10169  001704  8F11               	bsf	17,7,b	;volatile
 10170  001706  D003               	goto	l6111
 10171  001708                     l521:
 10172                           
 10173                           ; BSR set to: 0
 10174                           ;CANlib.h: 1029: else
 10175                           ;CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 10176  001708  010F               	movlb	15	; () banked
 10177  00170A  9F11               	bcf	17,7,b	;volatile
 10178  00170C  D000               	goto	l6111
 10179  00170E                     l6111:
 10180                           
 10181                           ; BSR set to: 15
 10182                           ;CANlib.h: 1032: tamp = (filter >> 21);
 10183  00170E  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
 10184  001712  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10185  001716  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10186  00171A  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10187  00171E  0E16               	movlw	22
 10188  001720  D006               	goto	u7990
 10189  001722                     u7995:
 10190  001722  0100               	movlb	0	; () banked
 10191  001724  90D8               	bcf	status,0,c
 10192  001726  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10193  001728  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10194  00172A  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10195  00172C  3365               	rrcf	??_CANSetFilter& (0+255),f,b
 10196  00172E                     u7990:
 10197  00172E  2EE8               	decfsz	wreg,f,c
 10198  001730  D7F8               	goto	u7995
 10199  001732  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 10200  001736  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10201  00173A  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10202  00173E  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10203                           
 10204                           ; BSR set to: 0
 10205                           ;CANlib.h: 1033: tamp = tamp & 0x000000FF;
 10206  001742  0100               	movlb	0	; () banked
 10207  001744  516A               	movf	CANSetFilter@tamp& (0+255),w,b
 10208  001746  0100               	movlb	0	; () banked
 10209  001748  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10210  00174A  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10211  00174C  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10212  00174E  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10213                           
 10214                           ; BSR set to: 0
 10215                           ;CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 10216  001750  C06A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 10217  001754  D000               	goto	l6117
 10218  001756                     l6117:
 10219                           
 10220                           ; BSR set to: 0
 10221                           ;CANlib.h: 1035: }
 10222                           ;CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 10223  001756  0E05               	movlw	5
 10224  001758  0100               	movlb	0	; () banked
 10225  00175A  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10226  00175C  A4D8               	btfss	status,2,c
 10227  00175E  0012               	return	
 10228                           
 10229                           ; BSR set to: 0
 10230  001760  0EF7               	movlw	247
 10231  001762  0100               	movlb	0	; () banked
 10232  001764  1964               	xorwf	CANSetFilter@type& (0+255),w,b
 10233  001766  A4D8               	btfss	status,2,c
 10234  001768  0012               	return	
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;CANlib.h: 1038: {
 10238                           ;CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 10239  00176A  010F               	movlb	15	; () banked
 10240  00176C  8715               	bsf	21,3,b	;volatile
 10241                           
 10242                           ; BSR set to: 15
 10243                           ;CANlib.h: 1041: tamp = filter & 0x000000FF;
 10244  00176E  0100               	movlb	0	; () banked
 10245  001770  5160               	movf	CANSetFilter@filter& (0+255),w,b
 10246  001772  0100               	movlb	0	; () banked
 10247  001774  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10248  001776  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10249  001778  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10250  00177A  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10251                           
 10252                           ; BSR set to: 0
 10253                           ;CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 10254  00177C  C06A  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;CANlib.h: 1044: tamp = filter & 0x0000FF00;
 10258  001780  0E00               	movlw	0
 10259  001782  0100               	movlb	0	; () banked
 10260  001784  1560               	andwf	CANSetFilter@filter& (0+255),w,b
 10261  001786  0100               	movlb	0	; () banked
 10262  001788  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10263  00178A  0EFF               	movlw	255
 10264  00178C  0100               	movlb	0	; () banked
 10265  00178E  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10266  001790  0100               	movlb	0	; () banked
 10267  001792  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10268  001794  0E00               	movlw	0
 10269  001796  0100               	movlb	0	; () banked
 10270  001798  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10271  00179A  0100               	movlb	0	; () banked
 10272  00179C  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10273  00179E  0E00               	movlw	0
 10274  0017A0  0100               	movlb	0	; () banked
 10275  0017A2  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10276  0017A4  0100               	movlb	0	; () banked
 10277  0017A6  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;CANlib.h: 1045: tamp = tamp >> 8;
 10281  0017A8  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
 10282  0017AC  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10283  0017B0  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10284  0017B4  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10285  0017B8  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
 10286  0017BC  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10287  0017C0  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10288  0017C4  0100               	movlb	0	; () banked
 10289  0017C6  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
 10290  0017C8  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 10291  0017CC  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10292  0017D0  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10293  0017D4  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10294                           
 10295                           ; BSR set to: 0
 10296                           ;CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 10297  0017D8  C06A  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 10298                           
 10299                           ; BSR set to: 0
 10300                           ;CANlib.h: 1048: if (filter & 0x00010000)
 10301  0017DC  0100               	movlb	0	; () banked
 10302  0017DE  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10303  0017E0  D003               	goto	l524
 10304                           
 10305                           ; BSR set to: 0
 10306                           ;CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 10307  0017E2  010F               	movlb	15	; () banked
 10308  0017E4  8115               	bsf	21,0,b	;volatile
 10309  0017E6  D002               	goto	l525
 10310  0017E8                     l524:
 10311                           
 10312                           ; BSR set to: 0
 10313                           ;CANlib.h: 1050: else
 10314                           ;CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 10315  0017E8  010F               	movlb	15	; () banked
 10316  0017EA  9115               	bcf	21,0,b	;volatile
 10317  0017EC                     l525:
 10318                           
 10319                           ; BSR set to: 15
 10320                           ;CANlib.h: 1053: if (filter & 0x00020000)
 10321  0017EC  0100               	movlb	0	; () banked
 10322  0017EE  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10323  0017F0  D003               	goto	l526
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 10327  0017F2  010F               	movlb	15	; () banked
 10328  0017F4  8315               	bsf	21,1,b	;volatile
 10329  0017F6  D002               	goto	l527
 10330  0017F8                     l526:
 10331                           
 10332                           ; BSR set to: 0
 10333                           ;CANlib.h: 1055: else
 10334                           ;CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 10335  0017F8  010F               	movlb	15	; () banked
 10336  0017FA  9315               	bcf	21,1,b	;volatile
 10337  0017FC                     l527:
 10338                           
 10339                           ; BSR set to: 15
 10340                           ;CANlib.h: 1058: if (filter & 0x00040000)
 10341  0017FC  0100               	movlb	0	; () banked
 10342  0017FE  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10343  001800  D003               	goto	l528
 10344                           
 10345                           ; BSR set to: 0
 10346                           ;CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 10347  001802  010F               	movlb	15	; () banked
 10348  001804  8B15               	bsf	21,5,b	;volatile
 10349  001806  D002               	goto	l529
 10350  001808                     l528:
 10351                           
 10352                           ; BSR set to: 0
 10353                           ;CANlib.h: 1060: else
 10354                           ;CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 10355  001808  010F               	movlb	15	; () banked
 10356  00180A  9B15               	bcf	21,5,b	;volatile
 10357  00180C                     l529:
 10358                           
 10359                           ; BSR set to: 15
 10360                           ;CANlib.h: 1063: if (filter & 0x00080000)
 10361  00180C  0100               	movlb	0	; () banked
 10362  00180E  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10363  001810  D003               	goto	l530
 10364                           
 10365                           ; BSR set to: 0
 10366                           ;CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 10367  001812  010F               	movlb	15	; () banked
 10368  001814  8D15               	bsf	21,6,b	;volatile
 10369  001816  D002               	goto	l531
 10370  001818                     l530:
 10371                           
 10372                           ; BSR set to: 0
 10373                           ;CANlib.h: 1065: else
 10374                           ;CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 10375  001818  010F               	movlb	15	; () banked
 10376  00181A  9D15               	bcf	21,6,b	;volatile
 10377  00181C                     l531:
 10378                           
 10379                           ; BSR set to: 15
 10380                           ;CANlib.h: 1068: if (filter & 0x00100000)
 10381  00181C  0100               	movlb	0	; () banked
 10382  00181E  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10383  001820  D003               	goto	l532
 10384                           
 10385                           ; BSR set to: 0
 10386                           ;CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 10387  001822  010F               	movlb	15	; () banked
 10388  001824  8F15               	bsf	21,7,b	;volatile
 10389  001826  D003               	goto	l6145
 10390  001828                     l532:
 10391                           
 10392                           ; BSR set to: 0
 10393                           ;CANlib.h: 1070: else
 10394                           ;CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 10395  001828  010F               	movlb	15	; () banked
 10396  00182A  9F15               	bcf	21,7,b	;volatile
 10397  00182C  D000               	goto	l6145
 10398  00182E                     l6145:
 10399                           
 10400                           ; BSR set to: 15
 10401                           ;CANlib.h: 1073: tamp = (filter >> 21);
 10402  00182E  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
 10403  001832  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10404  001836  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10405  00183A  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10406  00183E  0E16               	movlw	22
 10407  001840  D006               	goto	u8070
 10408  001842                     u8075:
 10409  001842  0100               	movlb	0	; () banked
 10410  001844  90D8               	bcf	status,0,c
 10411  001846  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10412  001848  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10413  00184A  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10414  00184C  3365               	rrcf	??_CANSetFilter& (0+255),f,b
 10415  00184E                     u8070:
 10416  00184E  2EE8               	decfsz	wreg,f,c
 10417  001850  D7F8               	goto	u8075
 10418  001852  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 10419  001856  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10420  00185A  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10421  00185E  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10422                           
 10423                           ; BSR set to: 0
 10424                           ;CANlib.h: 1074: tamp = tamp & 0x000000FF;
 10425  001862  0100               	movlb	0	; () banked
 10426  001864  516A               	movf	CANSetFilter@tamp& (0+255),w,b
 10427  001866  0100               	movlb	0	; () banked
 10428  001868  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10429  00186A  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10430  00186C  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10431  00186E  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10432                           
 10433                           ; BSR set to: 0
 10434                           ;CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 10435  001870  C06A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 10436  001874  0012               	return	
 10437                           
 10438                           ; BSR set to: 0
 10439                           
 10440                           ; BSR set to: 0
 10441  001876  0012               	return		;funcret
 10442  001878                     __end_of_CANSetFilter:
 10443                           	opt stack 0
 10444                           tblptru	equ	0xFF8
 10445                           tblptrh	equ	0xFF7
 10446                           tblptrl	equ	0xFF6
 10447                           tablat	equ	0xFF5
 10448                           intcon	equ	0xFF2
 10449                           postinc0	equ	0xFEE
 10450                           wreg	equ	0xFE8
 10451                           postinc2	equ	0xFDE
 10452                           postdec2	equ	0xFDD
 10453                           fsr2h	equ	0xFDA
 10454                           fsr2l	equ	0xFD9
 10455                           status	equ	0xFD8
 10456                           
 10457 ;; *************** function _CANOperationMode *****************
 10458 ;; Defined at:
 10459 ;;		line 206 in file "CANlib.h"
 10460 ;; Parameters:    Size  Location     Type
 10461 ;;  mode            1    wreg     enum E16922
 10462 ;; Auto vars:     Size  Location     Type
 10463 ;;  mode            1    0[BANK0 ] enum E16922
 10464 ;; Return value:  Size  Location     Type
 10465 ;;		None               void
 10466 ;; Registers used:
 10467 ;;		wreg, status,2, status,0
 10468 ;; Tracked objects:
 10469 ;;		On entry : 0/0
 10470 ;;		On exit  : 0/0
 10471 ;;		Unchanged: 0/0
 10472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10476 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10477 ;;Total ram usage:        1 bytes
 10478 ;; Hardware stack levels used:    1
 10479 ;; Hardware stack levels required when called:    2
 10480 ;; This function calls:
 10481 ;;		Nothing
 10482 ;; This function is called by:
 10483 ;;		_CANInitialize
 10484 ;; This function uses a non-reentrant model
 10485 ;;
 10486                           
 10487                           	psect	text32
 10488  004F54                     __ptext32:
 10489                           	opt stack 0
 10490  004F54                     _CANOperationMode:
 10491                           	opt stack 26
 10492                           
 10493                           ; BSR set to: 0
 10494                           ;incstack = 0
 10495                           ;CANOperationMode@mode stored from wreg
 10496  004F54  0100               	movlb	0	; () banked
 10497  004F56  6F60               	movwf	CANOperationMode@mode& (0+255),b
 10498                           
 10499                           ; BSR set to: 0
 10500                           ;CANlib.h: 208: CANCON = mode;
 10501  004F58  C060  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 10502                           
 10503                           ; BSR set to: 0
 10504                           
 10505                           ;CANlib.h: 210: while((CANSTAT & 0b11100000) != mode );
 10506  004F5C  D000               	goto	l5741
 10507  004F5E                     l5741:
 10508                           
 10509                           ; BSR set to: 0
 10510  004F5E  506E               	movf	3950,w,c	;volatile
 10511  004F60  0BE0               	andlw	224
 10512  004F62  0100               	movlb	0	; () banked
 10513  004F64  1960               	xorwf	CANOperationMode@mode& (0+255),w,b
 10514  004F66  A4D8               	btfss	status,2,c
 10515  004F68  D7FA               	goto	l5741
 10516                           
 10517                           ; BSR set to: 0
 10518                           
 10519                           ; BSR set to: 0
 10520  004F6A  0012               	return		;funcret
 10521  004F6C                     __end_of_CANOperationMode:
 10522                           	opt stack 0
 10523                           tblptru	equ	0xFF8
 10524                           tblptrh	equ	0xFF7
 10525                           tblptrl	equ	0xFF6
 10526                           tablat	equ	0xFF5
 10527                           intcon	equ	0xFF2
 10528                           postinc0	equ	0xFEE
 10529                           wreg	equ	0xFE8
 10530                           postinc2	equ	0xFDE
 10531                           postdec2	equ	0xFDD
 10532                           fsr2h	equ	0xFDA
 10533                           fsr2l	equ	0xFD9
 10534                           status	equ	0xFD8
 10535                           
 10536 ;; *************** function _can_interpreter *****************
 10537 ;; Defined at:
 10538 ;;		line 288 in file "motore.c"
 10539 ;; Parameters:    Size  Location     Type
 10540 ;;		None
 10541 ;; Auto vars:     Size  Location     Type
 10542 ;;		None
 10543 ;; Return value:  Size  Location     Type
 10544 ;;		None               void
 10545 ;; Registers used:
 10546 ;;		wreg, status,2, status,0
 10547 ;; Tracked objects:
 10548 ;;		On entry : 0/0
 10549 ;;		On exit  : 0/0
 10550 ;;		Unchanged: 0/0
 10551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10554 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10555 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10556 ;;Total ram usage:        2 bytes
 10557 ;; Hardware stack levels used:    1
 10558 ;; Hardware stack levels required when called:    2
 10559 ;; This function calls:
 10560 ;;		Nothing
 10561 ;; This function is called by:
 10562 ;;		_main
 10563 ;; This function uses a non-reentrant model
 10564 ;;
 10565                           
 10566                           	psect	text33
 10567  004A6E                     __ptext33:
 10568                           	opt stack 0
 10569  004A6E                     _can_interpreter:
 10570                           	opt stack 28
 10571                           
 10572                           ;motore.c: 289: if (new_message == 1) {
 10573                           
 10574                           ; BSR set to: 0
 10575                           ;incstack = 0
 10576  004A6E  AC40               	btfss	_new_message/(0+8),_new_message& (0+7),c	;volatile
 10577  004A70  D04A               	goto	l762
 10578                           
 10579                           ;motore.c: 290: if (id == 0b00000000001) {
 10580  004A72  0423               	decf	_id,w,c	;volatile
 10581  004A74  1024               	iorwf	_id+1,w,c	;volatile
 10582  004A76  1025               	iorwf	_id+2,w,c	;volatile
 10583  004A78  1026               	iorwf	_id+3,w,c	;volatile
 10584  004A7A  A4D8               	btfss	status,2,c
 10585  004A7C  D00A               	goto	l6821
 10586                           
 10587                           ;motore.c: 291: requestSpeed = 0;
 10588  004A7E  0E00               	movlw	0
 10589  004A80  6E2B               	movwf	_requestSpeed,c	;volatile
 10590  004A82  0E00               	movlw	0
 10591  004A84  6E2C               	movwf	_requestSpeed+1,c	;volatile
 10592  004A86  0E00               	movlw	0
 10593  004A88  6E2D               	movwf	_requestSpeed+2,c	;volatile
 10594  004A8A  0E00               	movlw	0
 10595  004A8C  6E2E               	movwf	_requestSpeed+3,c	;volatile
 10596                           
 10597                           ;motore.c: 292: PORTAbits.RA1 = 1;
 10598  004A8E  8280               	bsf	3968,1,c	;volatile
 10599  004A90  D000               	goto	l6821
 10600  004A92                     l6821:
 10601                           
 10602                           ;motore.c: 293: }
 10603                           ;motore.c: 294: if (id == 0b00000001000) {
 10604  004A92  0E08               	movlw	8
 10605  004A94  1823               	xorwf	_id,w,c	;volatile
 10606  004A96  1024               	iorwf	_id+1,w,c	;volatile
 10607  004A98  1025               	iorwf	_id+2,w,c	;volatile
 10608  004A9A  1026               	iorwf	_id+3,w,c	;volatile
 10609  004A9C  A4D8               	btfss	status,2,c
 10610  004A9E  D01C               	goto	l6831
 10611                           
 10612                           ;motore.c: 300: left_speed = data_array[1];
 10613  004AA0  C038  F0DF         	movff	_data_array+1,_left_speed	;volatile
 10614  004AA4  0100               	movlb	0	; () banked
 10615  004AA6  6BE0               	clrf	(_left_speed+1)& (0+255),b	;volatile
 10616                           
 10617                           ; BSR set to: 0
 10618                           ;motore.c: 301: left_speed = ((left_speed << 8) | (data_array[0]));
 10619  004AA8  0100               	movlb	0	; () banked
 10620  004AAA  51DF               	movf	_left_speed& (0+255),w,b	;volatile
 10621  004AAC  0100               	movlb	0	; () banked
 10622  004AAE  6F60               	movwf	??_can_interpreter& (0+255),b
 10623  004AB0  5037               	movf	_data_array,w,c
 10624  004AB2  0100               	movlb	0	; () banked
 10625  004AB4  6FDF               	movwf	_left_speed& (0+255),b	;volatile
 10626  004AB6  C060  F0E0         	movff	??_can_interpreter,_left_speed+1	;volatile
 10627                           
 10628                           ; BSR set to: 0
 10629                           ;motore.c: 302: right_speed = data_array[3];
 10630  004ABA  C03A  F0E3         	movff	_data_array+3,_right_speed	;volatile
 10631  004ABE  0100               	movlb	0	; () banked
 10632  004AC0  6BE4               	clrf	(_right_speed+1)& (0+255),b	;volatile
 10633                           
 10634                           ;motore.c: 303: right_speed = ((right_speed << 8) | (data_array[2]));
 10635  004AC2  0100               	movlb	0	; () banked
 10636  004AC4  51E3               	movf	_right_speed& (0+255),w,b	;volatile
 10637  004AC6  0100               	movlb	0	; () banked
 10638  004AC8  6F60               	movwf	??_can_interpreter& (0+255),b
 10639  004ACA  5039               	movf	_data_array+2,w,c
 10640  004ACC  0100               	movlb	0	; () banked
 10641  004ACE  6FE3               	movwf	_right_speed& (0+255),b	;volatile
 10642  004AD0  C060  F0E4         	movff	??_can_interpreter,_right_speed+1	;volatile
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;motore.c: 304: speed_fetched = 1;
 10646  004AD4  8441               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
 10647  004AD6  D000               	goto	l6831
 10648  004AD8                     l6831:
 10649                           
 10650                           ;motore.c: 305: }
 10651                           ;motore.c: 307: if ((id == 0b00000000010) || (id == 0b00000000011) || (id == 0b000000001
      +                          00)) {
 10652  004AD8  0E02               	movlw	2
 10653  004ADA  1823               	xorwf	_id,w,c	;volatile
 10654  004ADC  1024               	iorwf	_id+1,w,c	;volatile
 10655  004ADE  1025               	iorwf	_id+2,w,c	;volatile
 10656  004AE0  1026               	iorwf	_id+3,w,c	;volatile
 10657  004AE2  B4D8               	btfsc	status,2,c
 10658  004AE4  D00E               	goto	l767
 10659  004AE6  0E03               	movlw	3
 10660  004AE8  1823               	xorwf	_id,w,c	;volatile
 10661  004AEA  1024               	iorwf	_id+1,w,c	;volatile
 10662  004AEC  1025               	iorwf	_id+2,w,c	;volatile
 10663  004AEE  1026               	iorwf	_id+3,w,c	;volatile
 10664  004AF0  B4D8               	btfsc	status,2,c
 10665  004AF2  D007               	goto	l767
 10666  004AF4  0E04               	movlw	4
 10667  004AF6  1823               	xorwf	_id,w,c	;volatile
 10668  004AF8  1024               	iorwf	_id+1,w,c	;volatile
 10669  004AFA  1025               	iorwf	_id+2,w,c	;volatile
 10670  004AFC  1026               	iorwf	_id+3,w,c	;volatile
 10671  004AFE  A4D8               	btfss	status,2,c
 10672  004B00  D002               	goto	l762
 10673  004B02                     l767:
 10674                           
 10675                           ;motore.c: 308: ECU_error = 0;
 10676  004B02  9040               	bcf	_ECU_error/(0+8),_ECU_error& (0+7),c	;volatile
 10677  004B04  D000               	goto	l762
 10678  004B06                     l762:
 10679                           
 10680                           ;motore.c: 309: }
 10681                           ;motore.c: 310: }
 10682                           ;motore.c: 311: new_message = 0;
 10683  004B06  9C40               	bcf	_new_message/(0+8),_new_message& (0+7),c	;volatile
 10684  004B08  0012               	return		;funcret
 10685  004B0A                     __end_of_can_interpreter:
 10686                           	opt stack 0
 10687                           tblptru	equ	0xFF8
 10688                           tblptrh	equ	0xFF7
 10689                           tblptrl	equ	0xFF6
 10690                           tablat	equ	0xFF5
 10691                           intcon	equ	0xFF2
 10692                           postinc0	equ	0xFEE
 10693                           wreg	equ	0xFE8
 10694                           postinc2	equ	0xFDE
 10695                           postdec2	equ	0xFDD
 10696                           fsr2h	equ	0xFDA
 10697                           fsr2l	equ	0xFD9
 10698                           status	equ	0xFD8
 10699                           
 10700 ;; *************** function _battery_measure *****************
 10701 ;; Defined at:
 10702 ;;		line 263 in file "motore.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;		None
 10705 ;; Auto vars:     Size  Location     Type
 10706 ;;		None
 10707 ;; Return value:  Size  Location     Type
 10708 ;;		None               void
 10709 ;; Registers used:
 10710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10711 ;; Tracked objects:
 10712 ;;		On entry : 0/0
 10713 ;;		On exit  : 0/0
 10714 ;;		Unchanged: 0/0
 10715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10720 ;;Total ram usage:        0 bytes
 10721 ;; Hardware stack levels used:    1
 10722 ;; Hardware stack levels required when called:    3
 10723 ;; This function calls:
 10724 ;;		_CANisTxReady
 10725 ;;		_CANsendMessage
 10726 ;;		___awdiv
 10727 ;;		___wmul
 10728 ;; This function is called by:
 10729 ;;		_main
 10730 ;; This function uses a non-reentrant model
 10731 ;;
 10732                           
 10733                           	psect	text34
 10734  003F1E                     __ptext34:
 10735                           	opt stack 0
 10736  003F1E                     _battery_measure:
 10737                           	opt stack 27
 10738                           
 10739                           ;motore.c: 264: ADCON0bits.GO = 1;
 10740                           
 10741                           ;incstack = 0
 10742  003F1E  82C2               	bsf	4034,1,c	;volatile
 10743                           
 10744                           ;motore.c: 265: while (ADCON0bits.GO);
 10745  003F20  D000               	goto	l743
 10746  003F22                     l743:
 10747  003F22  B2C2               	btfsc	4034,1,c	;volatile
 10748  003F24  D7FE               	goto	l743
 10749                           
 10750                           ;motore.c: 266: vBatt = ADRESH;
 10751  003F26  CFC4 F033          	movff	4036,_vBatt	;volatile
 10752  003F2A  6A34               	clrf	_vBatt+1,c
 10753                           
 10754                           ;motore.c: 267: vBatt = (vBatt * 14) / 255;
 10755  003F2C  C033  F060         	movff	_vBatt,___wmul@multiplier
 10756  003F30  C034  F061         	movff	_vBatt+1,___wmul@multiplier+1
 10757  003F34  0E00               	movlw	0
 10758  003F36  0100               	movlb	0	; () banked
 10759  003F38  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10760  003F3A  0E0E               	movlw	14
 10761  003F3C  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10762  003F3E  EC07  F027         	call	___wmul	;wreg free
 10763  003F42  C060  F066         	movff	?___wmul,___awdiv@dividend
 10764  003F46  C061  F067         	movff	?___wmul+1,___awdiv@dividend+1
 10765  003F4A  0E00               	movlw	0
 10766  003F4C  0100               	movlb	0	; () banked
 10767  003F4E  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10768  003F50  6968               	setf	___awdiv@divisor& (0+255),b
 10769  003F52  EC1C  F024         	call	___awdiv	;wreg free
 10770  003F56  C066  F033         	movff	?___awdiv,_vBatt
 10771  003F5A  C067  F034         	movff	?___awdiv+1,_vBatt+1
 10772                           
 10773                           ;motore.c: 268: if (vBatt < 10) {
 10774  003F5E  BE34               	btfsc	_vBatt+1,7,c
 10775  003F60  D008               	goto	l6941
 10776  003F62  5034               	movf	_vBatt+1,w,c
 10777  003F64  E124               	bnz	l6947
 10778  003F66  0E0A               	movlw	10
 10779  003F68  5C33               	subwf	_vBatt,w,c
 10780  003F6A  A0D8               	btfss	status,0,c
 10781  003F6C  D002               	goto	l6941
 10782  003F6E  D01F               	goto	l6947
 10783                           
 10784                           ;motore.c: 269: while (CANisTxReady() != 1);
 10785  003F70  D000               	goto	l6941
 10786  003F72                     l6941:
 10787  003F72  EC86  F027         	call	_CANisTxReady	;wreg free
 10788  003F76  06E8               	decf	wreg,f,c
 10789  003F78  A4D8               	btfss	status,2,c
 10790  003F7A  D7FB               	goto	l6941
 10791                           
 10792                           ;motore.c: 270: CANsendMessage(0b00000001011, data_array, 8, CAN_CONFIG_STD_MSG & CAN_RE
      +                          MOTE_TX_FRAME & CAN_TX_PRIORITY_0);
 10793  003F7C  0E0B               	movlw	11
 10794  003F7E  0100               	movlb	0	; () banked
 10795  003F80  6F60               	movwf	CANsendMessage@identifier& (0+255),b
 10796  003F82  0E00               	movlw	0
 10797  003F84  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 10798  003F86  0E00               	movlw	0
 10799  003F88  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 10800  003F8A  0E00               	movlw	0
 10801  003F8C  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 10802  003F8E  0E37               	movlw	low _data_array
 10803  003F90  0100               	movlb	0	; () banked
 10804  003F92  6F64               	movwf	CANsendMessage@data& (0+255),b
 10805  003F94  0E00               	movlw	high _data_array
 10806  003F96  0100               	movlb	0	; () banked
 10807  003F98  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
 10808  003F9A  0E08               	movlw	8
 10809  003F9C  0100               	movlb	0	; () banked
 10810  003F9E  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
 10811  003FA0  0EFC               	movlw	252
 10812  003FA2  0100               	movlb	0	; () banked
 10813  003FA4  6F67               	movwf	CANsendMessage@flags& (0+255),b
 10814  003FA6  EC3C  F00C         	call	_CANsendMessage	;wreg free
 10815                           
 10816                           ;motore.c: 271: PORTCbits.RC1 = 1;
 10817  003FAA  8282               	bsf	3970,1,c	;volatile
 10818                           
 10819                           ;motore.c: 272: } else {
 10820  003FAC  D02B               	goto	l6959
 10821  003FAE                     l6947:
 10822                           
 10823                           ;motore.c: 273: if (vBatt < 13) {
 10824  003FAE  BE34               	btfsc	_vBatt+1,7,c
 10825  003FB0  D008               	goto	l6951
 10826  003FB2  5034               	movf	_vBatt+1,w,c
 10827  003FB4  E125               	bnz	l6957
 10828  003FB6  0E0D               	movlw	13
 10829  003FB8  5C33               	subwf	_vBatt,w,c
 10830  003FBA  A0D8               	btfss	status,0,c
 10831  003FBC  D002               	goto	l6951
 10832  003FBE  D020               	goto	l6957
 10833                           
 10834                           ;motore.c: 274: while (CANisTxReady() != 1);
 10835  003FC0  D000               	goto	l6951
 10836  003FC2                     l6951:
 10837  003FC2  EC86  F027         	call	_CANisTxReady	;wreg free
 10838  003FC6  06E8               	decf	wreg,f,c
 10839  003FC8  A4D8               	btfss	status,2,c
 10840  003FCA  D7FB               	goto	l6951
 10841                           
 10842                           ;motore.c: 276: data_battery [0] = 0;
 10843  003FCC  0E00               	movlw	0
 10844  003FCE  6E3F               	movwf	_data_battery,c
 10845                           
 10846                           ;motore.c: 277: CANsendMessage(0b00000010010, data_battery, 2, CAN_CONFIG_STD_MSG & CAN_
      +                          NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 10847  003FD0  0E12               	movlw	18
 10848  003FD2  0100               	movlb	0	; () banked
 10849  003FD4  6F60               	movwf	CANsendMessage@identifier& (0+255),b
 10850  003FD6  0E00               	movlw	0
 10851  003FD8  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 10852  003FDA  0E00               	movlw	0
 10853  003FDC  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 10854  003FDE  0E00               	movlw	0
 10855  003FE0  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 10856  003FE2  0E3F               	movlw	low _data_battery
 10857  003FE4  0100               	movlb	0	; () banked
 10858  003FE6  6F64               	movwf	CANsendMessage@data& (0+255),b
 10859  003FE8  0E00               	movlw	high _data_battery
 10860  003FEA  0100               	movlb	0	; () banked
 10861  003FEC  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
 10862  003FEE  0E02               	movlw	2
 10863  003FF0  0100               	movlb	0	; () banked
 10864  003FF2  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
 10865  003FF4  0EBC               	movlw	188
 10866  003FF6  0100               	movlb	0	; () banked
 10867  003FF8  6F67               	movwf	CANsendMessage@flags& (0+255),b
 10868  003FFA  EC3C  F00C         	call	_CANsendMessage	;wreg free
 10869  003FFE  D000               	goto	l6957
 10870  004000                     l6957:
 10871                           
 10872                           ;motore.c: 278: }
 10873                           ;motore.c: 279: PORTCbits.RC1 = 0;
 10874  004000  9282               	bcf	3970,1,c	;volatile
 10875  004002  D000               	goto	l6959
 10876  004004                     l6959:
 10877                           
 10878                           ;motore.c: 280: }
 10879                           ;motore.c: 281: if (vBatt > 13) {
 10880  004004  BE34               	btfsc	_vBatt+1,7,c
 10881  004006  0012               	return	
 10882  004008  5034               	movf	_vBatt+1,w,c
 10883  00400A  E105               	bnz	l6963
 10884  00400C  0E0E               	movlw	14
 10885  00400E  5C33               	subwf	_vBatt,w,c
 10886  004010  A0D8               	btfss	status,0,c
 10887  004012  0012               	return	
 10888                           
 10889                           ;motore.c: 282: while (CANisTxReady() != 1);
 10890  004014  D000               	goto	l6963
 10891  004016                     l6963:
 10892  004016  EC86  F027         	call	_CANisTxReady	;wreg free
 10893  00401A  06E8               	decf	wreg,f,c
 10894  00401C  A4D8               	btfss	status,2,c
 10895  00401E  D7FB               	goto	l6963
 10896                           
 10897                           ;motore.c: 283: data_battery [0] = 1;
 10898  004020  0E01               	movlw	1
 10899  004022  6E3F               	movwf	_data_battery,c
 10900                           
 10901                           ;motore.c: 284: CANsendMessage(0b00000010010, data_battery, 2, CAN_CONFIG_STD_MSG & CAN_
      +                          NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
 10902  004024  0E12               	movlw	18
 10903  004026  0100               	movlb	0	; () banked
 10904  004028  6F60               	movwf	CANsendMessage@identifier& (0+255),b
 10905  00402A  0E00               	movlw	0
 10906  00402C  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 10907  00402E  0E00               	movlw	0
 10908  004030  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 10909  004032  0E00               	movlw	0
 10910  004034  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 10911  004036  0E3F               	movlw	low _data_battery
 10912  004038  0100               	movlb	0	; () banked
 10913  00403A  6F64               	movwf	CANsendMessage@data& (0+255),b
 10914  00403C  0E00               	movlw	high _data_battery
 10915  00403E  0100               	movlb	0	; () banked
 10916  004040  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
 10917  004042  0E02               	movlw	2
 10918  004044  0100               	movlb	0	; () banked
 10919  004046  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
 10920  004048  0EBC               	movlw	188
 10921  00404A  0100               	movlb	0	; () banked
 10922  00404C  6F67               	movwf	CANsendMessage@flags& (0+255),b
 10923  00404E  EC3C  F00C         	call	_CANsendMessage	;wreg free
 10924  004052  0012               	return	
 10925  004054  0012               	return		;funcret
 10926  004056                     __end_of_battery_measure:
 10927                           	opt stack 0
 10928                           tblptru	equ	0xFF8
 10929                           tblptrh	equ	0xFF7
 10930                           tblptrl	equ	0xFF6
 10931                           tablat	equ	0xFF5
 10932                           intcon	equ	0xFF2
 10933                           postinc0	equ	0xFEE
 10934                           wreg	equ	0xFE8
 10935                           postinc2	equ	0xFDE
 10936                           postdec2	equ	0xFDD
 10937                           fsr2h	equ	0xFDA
 10938                           fsr2l	equ	0xFD9
 10939                           status	equ	0xFD8
 10940                           
 10941 ;; *************** function ___wmul *****************
 10942 ;; Defined at:
 10943 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 10944 ;; Parameters:    Size  Location     Type
 10945 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10946 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;  product         2    4[BANK0 ] unsigned int 
 10949 ;; Return value:  Size  Location     Type
 10950 ;;                  2    0[BANK0 ] unsigned int 
 10951 ;; Registers used:
 10952 ;;		wreg, status,2, status,0, prodl, prodh
 10953 ;; Tracked objects:
 10954 ;;		On entry : 0/0
 10955 ;;		On exit  : 0/0
 10956 ;;		Unchanged: 0/0
 10957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10958 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10959 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10961 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10962 ;;Total ram usage:        6 bytes
 10963 ;; Hardware stack levels used:    1
 10964 ;; Hardware stack levels required when called:    2
 10965 ;; This function calls:
 10966 ;;		Nothing
 10967 ;; This function is called by:
 10968 ;;		_delay_ms
 10969 ;;		_battery_measure
 10970 ;; This function uses a non-reentrant model
 10971 ;;
 10972                           
 10973                           	psect	text35
 10974  004E0E                     __ptext35:
 10975                           	opt stack 0
 10976  004E0E                     ___wmul:
 10977                           	opt stack 27
 10978                           
 10979                           ;incstack = 0
 10980  004E0E  0100               	movlb	0	; () banked
 10981  004E10  5160               	movf	___wmul@multiplier& (0+255),w,b
 10982  004E12  0100               	movlb	0	; () banked
 10983  004E14  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10984  004E16  CFF3 F064          	movff	prodl,___wmul@product
 10985  004E1A  CFF4 F065          	movff	prodh,___wmul@product+1
 10986  004E1E  0100               	movlb	0	; () banked
 10987  004E20  5160               	movf	___wmul@multiplier& (0+255),w,b
 10988  004E22  0100               	movlb	0	; () banked
 10989  004E24  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10990  004E26  50F3               	movf	prodl,w,c
 10991  004E28  0100               	movlb	0	; () banked
 10992  004E2A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10993  004E2C  0100               	movlb	0	; () banked
 10994  004E2E  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10995  004E30  0100               	movlb	0	; () banked
 10996  004E32  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10997  004E34  50F3               	movf	prodl,w,c
 10998  004E36  0100               	movlb	0	; () banked
 10999  004E38  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11000                           
 11001                           ; BSR set to: 0
 11002  004E3A  C064  F060         	movff	___wmul@product,?___wmul
 11003  004E3E  C065  F061         	movff	___wmul@product+1,?___wmul+1
 11004  004E42  0012               	return	
 11005                           
 11006                           ; BSR set to: 0
 11007                           
 11008                           ; BSR set to: 0
 11009  004E44  0012               	return		;funcret
 11010  004E46                     __end_of___wmul:
 11011                           	opt stack 0
 11012                           tblptru	equ	0xFF8
 11013                           tblptrh	equ	0xFF7
 11014                           tblptrl	equ	0xFF6
 11015                           tablat	equ	0xFF5
 11016                           prodh	equ	0xFF4
 11017                           prodl	equ	0xFF3
 11018                           intcon	equ	0xFF2
 11019                           postinc0	equ	0xFEE
 11020                           wreg	equ	0xFE8
 11021                           postinc2	equ	0xFDE
 11022                           postdec2	equ	0xFDD
 11023                           fsr2h	equ	0xFDA
 11024                           fsr2l	equ	0xFD9
 11025                           status	equ	0xFD8
 11026                           
 11027 ;; *************** function ___awdiv *****************
 11028 ;; Defined at:
 11029 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 11030 ;; Parameters:    Size  Location     Type
 11031 ;;  dividend        2    6[BANK0 ] int 
 11032 ;;  divisor         2    8[BANK0 ] int 
 11033 ;; Auto vars:     Size  Location     Type
 11034 ;;  quotient        2   12[BANK0 ] int 
 11035 ;;  sign            1   11[BANK0 ] unsigned char 
 11036 ;;  counter         1   10[BANK0 ] unsigned char 
 11037 ;; Return value:  Size  Location     Type
 11038 ;;                  2    6[BANK0 ] int 
 11039 ;; Registers used:
 11040 ;;		wreg, status,2, status,0
 11041 ;; Tracked objects:
 11042 ;;		On entry : 0/0
 11043 ;;		On exit  : 0/0
 11044 ;;		Unchanged: 0/0
 11045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11046 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11047 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11049 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11050 ;;Total ram usage:        8 bytes
 11051 ;; Hardware stack levels used:    1
 11052 ;; Hardware stack levels required when called:    2
 11053 ;; This function calls:
 11054 ;;		Nothing
 11055 ;; This function is called by:
 11056 ;;		_battery_measure
 11057 ;; This function uses a non-reentrant model
 11058 ;;
 11059                           
 11060                           	psect	text36
 11061  004838                     __ptext36:
 11062                           	opt stack 0
 11063  004838                     ___awdiv:
 11064                           	opt stack 27
 11065                           
 11066                           ; BSR set to: 0
 11067                           ;incstack = 0
 11068  004838  0E00               	movlw	0
 11069  00483A  0100               	movlb	0	; () banked
 11070  00483C  6F6B               	movwf	___awdiv@sign& (0+255),b
 11071                           
 11072                           ; BSR set to: 0
 11073  00483E  0100               	movlb	0	; () banked
 11074  004840  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11075  004842  D009               	goto	l6639
 11076                           
 11077                           ; BSR set to: 0
 11078  004844  0100               	movlb	0	; () banked
 11079  004846  6D68               	negf	___awdiv@divisor& (0+255),b
 11080  004848  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11081  00484A  B0D8               	btfsc	status,0,c
 11082  00484C  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11083                           
 11084                           ; BSR set to: 0
 11085  00484E  0E01               	movlw	1
 11086  004850  0100               	movlb	0	; () banked
 11087  004852  6F6B               	movwf	___awdiv@sign& (0+255),b
 11088  004854  D000               	goto	l6639
 11089  004856                     l6639:
 11090                           
 11091                           ; BSR set to: 0
 11092  004856  0100               	movlb	0	; () banked
 11093  004858  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11094  00485A  D009               	goto	l6645
 11095                           
 11096                           ; BSR set to: 0
 11097  00485C  0100               	movlb	0	; () banked
 11098  00485E  6D66               	negf	___awdiv@dividend& (0+255),b
 11099  004860  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11100  004862  B0D8               	btfsc	status,0,c
 11101  004864  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11102                           
 11103                           ; BSR set to: 0
 11104  004866  0E01               	movlw	1
 11105  004868  0100               	movlb	0	; () banked
 11106  00486A  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 11107  00486C  D000               	goto	l6645
 11108  00486E                     l6645:
 11109                           
 11110                           ; BSR set to: 0
 11111  00486E  0E00               	movlw	0
 11112  004870  0100               	movlb	0	; () banked
 11113  004872  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 11114  004874  0E00               	movlw	0
 11115  004876  6F6C               	movwf	___awdiv@quotient& (0+255),b
 11116                           
 11117                           ; BSR set to: 0
 11118  004878  0100               	movlb	0	; () banked
 11119  00487A  5168               	movf	___awdiv@divisor& (0+255),w,b
 11120  00487C  0100               	movlb	0	; () banked
 11121  00487E  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11122  004880  B4D8               	btfsc	status,2,c
 11123  004882  D031               	goto	l6667
 11124                           
 11125                           ; BSR set to: 0
 11126  004884  0E01               	movlw	1
 11127  004886  0100               	movlb	0	; () banked
 11128  004888  6F6A               	movwf	___awdiv@counter& (0+255),b
 11129  00488A  D007               	goto	l6653
 11130  00488C                     l6651:
 11131                           
 11132                           ; BSR set to: 0
 11133  00488C  0100               	movlb	0	; () banked
 11134  00488E  90D8               	bcf	status,0,c
 11135  004890  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 11136  004892  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11137  004894  0100               	movlb	0	; () banked
 11138  004896  2B6A               	incf	___awdiv@counter& (0+255),f,b
 11139  004898  D000               	goto	l6653
 11140  00489A                     l6653:
 11141                           
 11142                           ; BSR set to: 0
 11143  00489A  0100               	movlb	0	; () banked
 11144  00489C  BF69               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 11145  00489E  D002               	goto	l6655
 11146  0048A0  D7F5               	goto	l6651
 11147                           
 11148                           ; BSR set to: 0
 11149  0048A2  D000               	goto	l6655
 11150  0048A4                     l6655:
 11151                           
 11152                           ; BSR set to: 0
 11153  0048A4  0100               	movlb	0	; () banked
 11154  0048A6  90D8               	bcf	status,0,c
 11155  0048A8  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 11156  0048AA  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 11157                           
 11158                           ; BSR set to: 0
 11159  0048AC  0100               	movlb	0	; () banked
 11160  0048AE  5168               	movf	___awdiv@divisor& (0+255),w,b
 11161  0048B0  0100               	movlb	0	; () banked
 11162  0048B2  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 11163  0048B4  0100               	movlb	0	; () banked
 11164  0048B6  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11165  0048B8  0100               	movlb	0	; () banked
 11166  0048BA  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11167  0048BC  A0D8               	btfss	status,0,c
 11168  0048BE  D00B               	goto	l6663
 11169                           
 11170                           ; BSR set to: 0
 11171  0048C0  0100               	movlb	0	; () banked
 11172  0048C2  5168               	movf	___awdiv@divisor& (0+255),w,b
 11173  0048C4  0100               	movlb	0	; () banked
 11174  0048C6  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 11175  0048C8  0100               	movlb	0	; () banked
 11176  0048CA  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11177  0048CC  0100               	movlb	0	; () banked
 11178  0048CE  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11179                           
 11180                           ; BSR set to: 0
 11181  0048D0  0100               	movlb	0	; () banked
 11182  0048D2  816C               	bsf	___awdiv@quotient& (0+255),0,b
 11183  0048D4  D000               	goto	l6663
 11184  0048D6                     l6663:
 11185                           
 11186                           ; BSR set to: 0
 11187  0048D6  0100               	movlb	0	; () banked
 11188  0048D8  90D8               	bcf	status,0,c
 11189  0048DA  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11190  0048DC  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 11191                           
 11192                           ; BSR set to: 0
 11193  0048DE  0100               	movlb	0	; () banked
 11194  0048E0  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 11195  0048E2  D7E0               	goto	l6655
 11196                           
 11197                           ; BSR set to: 0
 11198  0048E4  D000               	goto	l6667
 11199  0048E6                     l6667:
 11200                           
 11201                           ; BSR set to: 0
 11202  0048E6  0100               	movlb	0	; () banked
 11203  0048E8  516B               	movf	___awdiv@sign& (0+255),w,b
 11204  0048EA  0100               	movlb	0	; () banked
 11205  0048EC  B4D8               	btfsc	status,2,c
 11206  0048EE  D006               	goto	l6671
 11207                           
 11208                           ; BSR set to: 0
 11209  0048F0  0100               	movlb	0	; () banked
 11210  0048F2  6D6C               	negf	___awdiv@quotient& (0+255),b
 11211  0048F4  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11212  0048F6  B0D8               	btfsc	status,0,c
 11213  0048F8  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11214  0048FA  D000               	goto	l6671
 11215  0048FC                     l6671:
 11216                           
 11217                           ; BSR set to: 0
 11218  0048FC  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 11219  004900  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 11220  004904  0012               	return	
 11221                           
 11222                           ; BSR set to: 0
 11223                           
 11224                           ; BSR set to: 0
 11225  004906  0012               	return		;funcret
 11226  004908                     __end_of___awdiv:
 11227                           	opt stack 0
 11228                           tblptru	equ	0xFF8
 11229                           tblptrh	equ	0xFF7
 11230                           tblptrl	equ	0xFF6
 11231                           tablat	equ	0xFF5
 11232                           prodh	equ	0xFF4
 11233                           prodl	equ	0xFF3
 11234                           intcon	equ	0xFF2
 11235                           postinc0	equ	0xFEE
 11236                           wreg	equ	0xFE8
 11237                           postinc2	equ	0xFDE
 11238                           postdec2	equ	0xFDD
 11239                           fsr2h	equ	0xFDA
 11240                           fsr2l	equ	0xFD9
 11241                           status	equ	0xFD8
 11242                           
 11243 ;; *************** function _CANsendMessage *****************
 11244 ;; Defined at:
 11245 ;;		line 294 in file "CANlib.h"
 11246 ;; Parameters:    Size  Location     Type
 11247 ;;  identifier      4    0[BANK0 ] unsigned long 
 11248 ;;  data            2    4[BANK0 ] PTR unsigned char 
 11249 ;;		 -> data_battery(1), data_array_debug(8), data_array(8), 
 11250 ;;  dataLength      1    6[BANK0 ] unsigned char 
 11251 ;;  flags           1    7[BANK0 ] enum E16950
 11252 ;; Auto vars:     Size  Location     Type
 11253 ;;  tamp            4   12[BANK0 ] unsigned long 
 11254 ;; Return value:  Size  Location     Type
 11255 ;;		None               void
 11256 ;; Registers used:
 11257 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11258 ;; Tracked objects:
 11259 ;;		On entry : 0/0
 11260 ;;		On exit  : 0/0
 11261 ;;		Unchanged: 0/0
 11262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11263 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11264 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11265 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11266 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11267 ;;Total ram usage:       16 bytes
 11268 ;; Hardware stack levels used:    1
 11269 ;; Hardware stack levels required when called:    2
 11270 ;; This function calls:
 11271 ;;		Nothing
 11272 ;; This function is called by:
 11273 ;;		_main
 11274 ;;		_rampe
 11275 ;;		_send_data
 11276 ;;		_battery_measure
 11277 ;; This function uses a non-reentrant model
 11278 ;;
 11279                           
 11280                           	psect	text37
 11281  001878                     __ptext37:
 11282                           	opt stack 0
 11283  001878                     _CANsendMessage:
 11284                           	opt stack 27
 11285                           
 11286                           ;CANlib.h: 296: unsigned long tamp;
 11287                           ;CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 11288                           
 11289                           ; BSR set to: 0
 11290                           ;incstack = 0
 11291  001878  010F               	movlb	15	; () banked
 11292  00187A  B740               	btfsc	64,3,b	;volatile
 11293  00187C  D142               	goto	l369
 11294                           
 11295                           ; BSR set to: 15
 11296                           ;CANlib.h: 299: { TXB0DLC = dataLength;
 11297  00187E  C066  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 11298                           
 11299                           ;CANlib.h: 300: if (0b01000000 & flags)
 11300  001882  0100               	movlb	0	; () banked
 11301  001884  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
 11302  001886  D003               	goto	l370
 11303                           
 11304                           ; BSR set to: 0
 11305                           ;CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 11306  001888  010F               	movlb	15	; () banked
 11307  00188A  8D45               	bsf	69,6,b	;volatile
 11308  00188C  D002               	goto	l371
 11309  00188E                     l370:
 11310                           
 11311                           ; BSR set to: 0
 11312                           ;CANlib.h: 302: else
 11313                           ;CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 11314  00188E  010F               	movlb	15	; () banked
 11315  001890  9D45               	bcf	69,6,b	;volatile
 11316  001892                     l371:
 11317                           
 11318                           ; BSR set to: 15
 11319                           ;CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 11320  001892  0100               	movlb	0	; () banked
 11321  001894  A767               	btfss	CANsendMessage@flags& (0+255),3,b
 11322  001896  D07A               	goto	l372
 11323                           
 11324                           ; BSR set to: 0
 11325                           ;CANlib.h: 306: {
 11326                           ;CANlib.h: 308: tamp = identifier & 0x000000FF;
 11327  001898  0100               	movlb	0	; () banked
 11328  00189A  5160               	movf	CANsendMessage@identifier& (0+255),w,b
 11329  00189C  0100               	movlb	0	; () banked
 11330  00189E  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11331  0018A0  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11332  0018A2  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11333  0018A4  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11334                           
 11335                           ; BSR set to: 0
 11336                           ;CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 11337  0018A6  C06C  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 11338                           
 11339                           ; BSR set to: 0
 11340                           ;CANlib.h: 311: tamp = identifier & 0x0000FF00;
 11341  0018AA  0E00               	movlw	0
 11342  0018AC  0100               	movlb	0	; () banked
 11343  0018AE  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 11344  0018B0  0100               	movlb	0	; () banked
 11345  0018B2  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11346  0018B4  0EFF               	movlw	255
 11347  0018B6  0100               	movlb	0	; () banked
 11348  0018B8  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 11349  0018BA  0100               	movlb	0	; () banked
 11350  0018BC  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 11351  0018BE  0E00               	movlw	0
 11352  0018C0  0100               	movlb	0	; () banked
 11353  0018C2  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 11354  0018C4  0100               	movlb	0	; () banked
 11355  0018C6  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 11356  0018C8  0E00               	movlw	0
 11357  0018CA  0100               	movlb	0	; () banked
 11358  0018CC  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 11359  0018CE  0100               	movlb	0	; () banked
 11360  0018D0  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 11361                           
 11362                           ; BSR set to: 0
 11363                           ;CANlib.h: 312: tamp = tamp >> 8;
 11364  0018D2  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 11365  0018D6  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 11366  0018DA  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 11367  0018DE  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 11368  0018E2  C069  F068         	movff	??_CANsendMessage+1,??_CANsendMessage
 11369  0018E6  C06A  F069         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 11370  0018EA  C06B  F06A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 11371  0018EE  0100               	movlb	0	; () banked
 11372  0018F0  6B6B               	clrf	(??_CANsendMessage+3)& (0+255),b
 11373  0018F2  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11374  0018F6  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11375  0018FA  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11376  0018FE  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11377                           
 11378                           ; BSR set to: 0
 11379                           ;CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 11380  001902  C06C  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 11381                           
 11382                           ; BSR set to: 0
 11383                           ;CANlib.h: 315: TXB0SIDL = 0x00;
 11384  001906  0E00               	movlw	0
 11385  001908  010F               	movlb	15	; () banked
 11386  00190A  6F42               	movwf	66,b	;volatile
 11387                           
 11388                           ; BSR set to: 15
 11389                           ;CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 11390  00190C  010F               	movlb	15	; () banked
 11391  00190E  8742               	bsf	66,3,b	;volatile
 11392                           
 11393                           ; BSR set to: 15
 11394                           ;CANlib.h: 318: if (identifier & 0x00010000)
 11395  001910  0100               	movlb	0	; () banked
 11396  001912  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 11397  001914  D002               	goto	l373
 11398                           
 11399                           ; BSR set to: 0
 11400                           ;CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 11401  001916  010F               	movlb	15	; () banked
 11402  001918  8142               	bsf	66,0,b	;volatile
 11403  00191A                     l373:
 11404                           
 11405                           ;CANlib.h: 320: if (identifier & 0x00020000)
 11406  00191A  0100               	movlb	0	; () banked
 11407  00191C  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 11408  00191E  D002               	goto	l374
 11409                           
 11410                           ; BSR set to: 0
 11411                           ;CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 11412  001920  010F               	movlb	15	; () banked
 11413  001922  8342               	bsf	66,1,b	;volatile
 11414  001924                     l374:
 11415                           
 11416                           ;CANlib.h: 322: if (identifier & 0x00040000)
 11417  001924  0100               	movlb	0	; () banked
 11418  001926  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 11419  001928  D002               	goto	l375
 11420                           
 11421                           ; BSR set to: 0
 11422                           ;CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 11423  00192A  010F               	movlb	15	; () banked
 11424  00192C  8B42               	bsf	66,5,b	;volatile
 11425  00192E                     l375:
 11426                           
 11427                           ;CANlib.h: 324: if (identifier & 0x00080000)
 11428  00192E  0100               	movlb	0	; () banked
 11429  001930  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 11430  001932  D002               	goto	l376
 11431                           
 11432                           ; BSR set to: 0
 11433                           ;CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 11434  001934  010F               	movlb	15	; () banked
 11435  001936  8D42               	bsf	66,6,b	;volatile
 11436  001938                     l376:
 11437                           
 11438                           ;CANlib.h: 326: if (identifier & 0x00100000)
 11439  001938  0100               	movlb	0	; () banked
 11440  00193A  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 11441  00193C  D003               	goto	l6311
 11442                           
 11443                           ; BSR set to: 0
 11444                           ;CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 11445  00193E  010F               	movlb	15	; () banked
 11446  001940  8F42               	bsf	66,7,b	;volatile
 11447  001942  D000               	goto	l6311
 11448  001944                     l6311:
 11449                           
 11450                           ;CANlib.h: 329: tamp = (identifier >> 21);
 11451  001944  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 11452  001948  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 11453  00194C  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 11454  001950  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 11455  001954  0E16               	movlw	22
 11456  001956  D006               	goto	u8300
 11457  001958                     u8305:
 11458  001958  0100               	movlb	0	; () banked
 11459  00195A  90D8               	bcf	status,0,c
 11460  00195C  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 11461  00195E  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 11462  001960  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 11463  001962  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 11464  001964                     u8300:
 11465  001964  2EE8               	decfsz	wreg,f,c
 11466  001966  D7F8               	goto	u8305
 11467  001968  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11468  00196C  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11469  001970  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11470  001974  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11471                           
 11472                           ; BSR set to: 0
 11473                           ;CANlib.h: 330: tamp = tamp & 0x000000FF;
 11474  001978  0100               	movlb	0	; () banked
 11475  00197A  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 11476  00197C  0100               	movlb	0	; () banked
 11477  00197E  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11478  001980  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11479  001982  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11480  001984  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11481                           
 11482                           ; BSR set to: 0
 11483                           ;CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 11484  001986  C06C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 11485                           
 11486                           ;CANlib.h: 332: }
 11487  00198A  D05A               	goto	l6331
 11488  00198C                     l372:
 11489                           
 11490                           ; BSR set to: 0
 11491                           ;CANlib.h: 334: else
 11492                           ;CANlib.h: 336: {
 11493                           ;CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 11494  00198C  010F               	movlb	15	; () banked
 11495  00198E  9742               	bcf	66,3,b	;volatile
 11496                           
 11497                           ; BSR set to: 15
 11498                           ;CANlib.h: 339: tamp = (identifier >> 3);
 11499  001990  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 11500  001994  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 11501  001998  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 11502  00199C  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 11503  0019A0  0E04               	movlw	4
 11504  0019A2  D006               	goto	u8310
 11505  0019A4                     u8315:
 11506  0019A4  0100               	movlb	0	; () banked
 11507  0019A6  90D8               	bcf	status,0,c
 11508  0019A8  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 11509  0019AA  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 11510  0019AC  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 11511  0019AE  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 11512  0019B0                     u8310:
 11513  0019B0  2EE8               	decfsz	wreg,f,c
 11514  0019B2  D7F8               	goto	u8315
 11515  0019B4  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11516  0019B8  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11517  0019BC  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11518  0019C0  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11519                           
 11520                           ; BSR set to: 0
 11521                           ;CANlib.h: 340: tamp = tamp & 0x000000FF;
 11522  0019C4  0100               	movlb	0	; () banked
 11523  0019C6  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 11524  0019C8  0100               	movlb	0	; () banked
 11525  0019CA  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11526  0019CC  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11527  0019CE  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11528  0019D0  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11529                           
 11530                           ; BSR set to: 0
 11531                           ;CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 11532  0019D2  C06C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 11533                           
 11534                           ; BSR set to: 0
 11535                           ;CANlib.h: 343: tamp = identifier & 0x00000007;
 11536  0019D6  0E07               	movlw	7
 11537  0019D8  0100               	movlb	0	; () banked
 11538  0019DA  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 11539  0019DC  0100               	movlb	0	; () banked
 11540  0019DE  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11541  0019E0  0E00               	movlw	0
 11542  0019E2  0100               	movlb	0	; () banked
 11543  0019E4  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 11544  0019E6  0100               	movlb	0	; () banked
 11545  0019E8  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 11546  0019EA  0E00               	movlw	0
 11547  0019EC  0100               	movlb	0	; () banked
 11548  0019EE  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 11549  0019F0  0100               	movlb	0	; () banked
 11550  0019F2  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 11551  0019F4  0E00               	movlw	0
 11552  0019F6  0100               	movlb	0	; () banked
 11553  0019F8  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 11554  0019FA  0100               	movlb	0	; () banked
 11555  0019FC  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 11556                           
 11557                           ; BSR set to: 0
 11558                           ;CANlib.h: 344: tamp = tamp << 5;
 11559  0019FE  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 11560  001A02  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 11561  001A06  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 11562  001A0A  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 11563  001A0E  0E05               	movlw	5
 11564  001A10                     u8325:
 11565  001A10  90D8               	bcf	status,0,c
 11566  001A12  0100               	movlb	0	; () banked
 11567  001A14  3768               	rlcf	??_CANsendMessage& (0+255),f,b
 11568  001A16  3769               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 11569  001A18  376A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 11570  001A1A  376B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 11571  001A1C  2EE8               	decfsz	wreg,f,c
 11572  001A1E  D7F8               	goto	u8325
 11573  001A20  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11574  001A24  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11575  001A28  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11576  001A2C  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11577                           
 11578                           ; BSR set to: 0
 11579                           ;CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 11580  001A30  010F               	movlb	15	; () banked
 11581  001A32  5142               	movf	66,w,b	;volatile
 11582  001A34  0B1F               	andlw	31
 11583  001A36  010F               	movlb	15	; () banked
 11584  001A38  6F42               	movwf	66,b	;volatile
 11585                           
 11586                           ; BSR set to: 15
 11587                           ;CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 11588  001A3A  C06C  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 11589  001A3E  D000               	goto	l6331
 11590  001A40                     l6331:
 11591                           
 11592                           ;CANlib.h: 347: }
 11593                           ;CANlib.h: 349: if (0b00000001 & flags)
 11594  001A40  0100               	movlb	0	; () banked
 11595  001A42  A167               	btfss	CANsendMessage@flags& (0+255),0,b
 11596  001A44  D003               	goto	l379
 11597                           
 11598                           ; BSR set to: 0
 11599                           ;CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 11600  001A46  010F               	movlb	15	; () banked
 11601  001A48  8140               	bsf	64,0,b	;volatile
 11602  001A4A  D002               	goto	l380
 11603  001A4C                     l379:
 11604                           
 11605                           ; BSR set to: 0
 11606                           ;CANlib.h: 351: else
 11607                           ;CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 11608  001A4C  010F               	movlb	15	; () banked
 11609  001A4E  9140               	bcf	64,0,b	;volatile
 11610  001A50                     l380:
 11611                           
 11612                           ; BSR set to: 15
 11613                           ;CANlib.h: 353: if (0b00000010 & flags)
 11614  001A50  0100               	movlb	0	; () banked
 11615  001A52  A367               	btfss	CANsendMessage@flags& (0+255),1,b
 11616  001A54  D003               	goto	l381
 11617                           
 11618                           ; BSR set to: 0
 11619                           ;CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 11620  001A56  010F               	movlb	15	; () banked
 11621  001A58  8340               	bsf	64,1,b	;volatile
 11622  001A5A  D003               	goto	l6337
 11623  001A5C                     l381:
 11624                           
 11625                           ; BSR set to: 0
 11626                           ;CANlib.h: 355: else
 11627                           ;CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 11628  001A5C  010F               	movlb	15	; () banked
 11629  001A5E  9340               	bcf	64,1,b	;volatile
 11630  001A60  D000               	goto	l6337
 11631  001A62                     l6337:
 11632                           
 11633                           ; BSR set to: 15
 11634                           ;CANlib.h: 358: TXB0D0 = data[0];
 11635  001A62  C064  FFD9         	movff	CANsendMessage@data,fsr2l
 11636  001A66  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
 11637  001A6A  50DF               	movf	indf2,w,c
 11638  001A6C  010F               	movlb	15	; () banked
 11639  001A6E  6F46               	movwf	70,b	;volatile
 11640                           
 11641                           ; BSR set to: 15
 11642                           ;CANlib.h: 359: TXB0D1 = data[1];
 11643  001A70  0100               	movlb	0	; () banked
 11644  001A72  EE20 F001          	lfsr	2,1
 11645  001A76  5164               	movf	CANsendMessage@data& (0+255),w,b
 11646  001A78  26D9               	addwf	fsr2l,f,c
 11647  001A7A  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11648  001A7C  22DA               	addwfc	fsr2h,f,c
 11649  001A7E  50DF               	movf	indf2,w,c
 11650  001A80  010F               	movlb	15	; () banked
 11651  001A82  6F47               	movwf	71,b	;volatile
 11652                           
 11653                           ; BSR set to: 15
 11654                           ;CANlib.h: 360: TXB0D2 = data[2];
 11655  001A84  0100               	movlb	0	; () banked
 11656  001A86  EE20 F002          	lfsr	2,2
 11657  001A8A  5164               	movf	CANsendMessage@data& (0+255),w,b
 11658  001A8C  26D9               	addwf	fsr2l,f,c
 11659  001A8E  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11660  001A90  22DA               	addwfc	fsr2h,f,c
 11661  001A92  50DF               	movf	indf2,w,c
 11662  001A94  010F               	movlb	15	; () banked
 11663  001A96  6F48               	movwf	72,b	;volatile
 11664                           
 11665                           ; BSR set to: 15
 11666                           ;CANlib.h: 361: TXB0D3 = data[3];
 11667  001A98  0100               	movlb	0	; () banked
 11668  001A9A  EE20 F003          	lfsr	2,3
 11669  001A9E  5164               	movf	CANsendMessage@data& (0+255),w,b
 11670  001AA0  26D9               	addwf	fsr2l,f,c
 11671  001AA2  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11672  001AA4  22DA               	addwfc	fsr2h,f,c
 11673  001AA6  50DF               	movf	indf2,w,c
 11674  001AA8  010F               	movlb	15	; () banked
 11675  001AAA  6F49               	movwf	73,b	;volatile
 11676                           
 11677                           ; BSR set to: 15
 11678                           ;CANlib.h: 362: TXB0D4 = data[4];
 11679  001AAC  0100               	movlb	0	; () banked
 11680  001AAE  EE20 F004          	lfsr	2,4
 11681  001AB2  5164               	movf	CANsendMessage@data& (0+255),w,b
 11682  001AB4  26D9               	addwf	fsr2l,f,c
 11683  001AB6  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11684  001AB8  22DA               	addwfc	fsr2h,f,c
 11685  001ABA  50DF               	movf	indf2,w,c
 11686  001ABC  010F               	movlb	15	; () banked
 11687  001ABE  6F4A               	movwf	74,b	;volatile
 11688                           
 11689                           ; BSR set to: 15
 11690                           ;CANlib.h: 363: TXB0D5 = data[5];
 11691  001AC0  0100               	movlb	0	; () banked
 11692  001AC2  EE20 F005          	lfsr	2,5
 11693  001AC6  5164               	movf	CANsendMessage@data& (0+255),w,b
 11694  001AC8  26D9               	addwf	fsr2l,f,c
 11695  001ACA  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11696  001ACC  22DA               	addwfc	fsr2h,f,c
 11697  001ACE  50DF               	movf	indf2,w,c
 11698  001AD0  010F               	movlb	15	; () banked
 11699  001AD2  6F4B               	movwf	75,b	;volatile
 11700                           
 11701                           ; BSR set to: 15
 11702                           ;CANlib.h: 364: TXB0D6 = data[6];
 11703  001AD4  0100               	movlb	0	; () banked
 11704  001AD6  EE20 F006          	lfsr	2,6
 11705  001ADA  5164               	movf	CANsendMessage@data& (0+255),w,b
 11706  001ADC  26D9               	addwf	fsr2l,f,c
 11707  001ADE  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11708  001AE0  22DA               	addwfc	fsr2h,f,c
 11709  001AE2  50DF               	movf	indf2,w,c
 11710  001AE4  010F               	movlb	15	; () banked
 11711  001AE6  6F4C               	movwf	76,b	;volatile
 11712                           
 11713                           ; BSR set to: 15
 11714                           ;CANlib.h: 365: TXB0D7 = data[7];
 11715  001AE8  0100               	movlb	0	; () banked
 11716  001AEA  EE20 F007          	lfsr	2,7
 11717  001AEE  5164               	movf	CANsendMessage@data& (0+255),w,b
 11718  001AF0  26D9               	addwf	fsr2l,f,c
 11719  001AF2  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 11720  001AF4  22DA               	addwfc	fsr2h,f,c
 11721  001AF6  50DF               	movf	indf2,w,c
 11722  001AF8  010F               	movlb	15	; () banked
 11723  001AFA  6F4D               	movwf	77,b	;volatile
 11724                           
 11725                           ; BSR set to: 15
 11726                           ;CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 11727  001AFC  010F               	movlb	15	; () banked
 11728  001AFE  8740               	bsf	64,3,b	;volatile
 11729                           
 11730                           ; BSR set to: 15
 11731                           ;CANlib.h: 368: return;
 11732  001B00  0012               	return	
 11733  001B02                     l369:
 11734                           
 11735                           ; BSR set to: 15
 11736                           ;CANlib.h: 369: }
 11737                           ;CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 11738  001B02  010F               	movlb	15	; () banked
 11739  001B04  B730               	btfsc	48,3,b	;volatile
 11740  001B06  D142               	goto	l384
 11741                           
 11742                           ; BSR set to: 15
 11743                           ;CANlib.h: 374: { TXB1DLC = dataLength;
 11744  001B08  C066  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 11745                           
 11746                           ;CANlib.h: 376: if (0b01000000 & flags)
 11747  001B0C  0100               	movlb	0	; () banked
 11748  001B0E  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
 11749  001B10  D003               	goto	l385
 11750                           
 11751                           ; BSR set to: 0
 11752                           ;CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 11753  001B12  010F               	movlb	15	; () banked
 11754  001B14  8D35               	bsf	53,6,b	;volatile
 11755  001B16  D002               	goto	l386
 11756  001B18                     l385:
 11757                           
 11758                           ; BSR set to: 0
 11759                           ;CANlib.h: 378: else
 11760                           ;CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 11761  001B18  010F               	movlb	15	; () banked
 11762  001B1A  9D35               	bcf	53,6,b	;volatile
 11763  001B1C                     l386:
 11764                           
 11765                           ; BSR set to: 15
 11766                           ;CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 11767  001B1C  0100               	movlb	0	; () banked
 11768  001B1E  A767               	btfss	CANsendMessage@flags& (0+255),3,b
 11769  001B20  D07A               	goto	l387
 11770                           
 11771                           ; BSR set to: 0
 11772                           ;CANlib.h: 382: {
 11773                           ;CANlib.h: 383: tamp = identifier & 0x000000FF;
 11774  001B22  0100               	movlb	0	; () banked
 11775  001B24  5160               	movf	CANsendMessage@identifier& (0+255),w,b
 11776  001B26  0100               	movlb	0	; () banked
 11777  001B28  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11778  001B2A  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11779  001B2C  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11780  001B2E  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11781                           
 11782                           ; BSR set to: 0
 11783                           ;CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 11784  001B30  C06C  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 11785                           
 11786                           ; BSR set to: 0
 11787                           ;CANlib.h: 386: tamp = identifier & 0x0000FF00;
 11788  001B34  0E00               	movlw	0
 11789  001B36  0100               	movlb	0	; () banked
 11790  001B38  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 11791  001B3A  0100               	movlb	0	; () banked
 11792  001B3C  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11793  001B3E  0EFF               	movlw	255
 11794  001B40  0100               	movlb	0	; () banked
 11795  001B42  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 11796  001B44  0100               	movlb	0	; () banked
 11797  001B46  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 11798  001B48  0E00               	movlw	0
 11799  001B4A  0100               	movlb	0	; () banked
 11800  001B4C  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 11801  001B4E  0100               	movlb	0	; () banked
 11802  001B50  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 11803  001B52  0E00               	movlw	0
 11804  001B54  0100               	movlb	0	; () banked
 11805  001B56  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 11806  001B58  0100               	movlb	0	; () banked
 11807  001B5A  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 11808                           
 11809                           ; BSR set to: 0
 11810                           ;CANlib.h: 387: tamp = tamp >> 8;
 11811  001B5C  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 11812  001B60  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 11813  001B64  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 11814  001B68  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 11815  001B6C  C069  F068         	movff	??_CANsendMessage+1,??_CANsendMessage
 11816  001B70  C06A  F069         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 11817  001B74  C06B  F06A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 11818  001B78  0100               	movlb	0	; () banked
 11819  001B7A  6B6B               	clrf	(??_CANsendMessage+3)& (0+255),b
 11820  001B7C  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11821  001B80  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11822  001B84  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11823  001B88  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11824                           
 11825                           ; BSR set to: 0
 11826                           ;CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 11827  001B8C  C06C  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 11828                           
 11829                           ; BSR set to: 0
 11830                           ;CANlib.h: 390: TXB1SIDL = 0x00;
 11831  001B90  0E00               	movlw	0
 11832  001B92  010F               	movlb	15	; () banked
 11833  001B94  6F32               	movwf	50,b	;volatile
 11834                           
 11835                           ; BSR set to: 15
 11836                           ;CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 11837  001B96  010F               	movlb	15	; () banked
 11838  001B98  8732               	bsf	50,3,b	;volatile
 11839                           
 11840                           ; BSR set to: 15
 11841                           ;CANlib.h: 393: if (identifier & 0x00010000)
 11842  001B9A  0100               	movlb	0	; () banked
 11843  001B9C  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 11844  001B9E  D002               	goto	l388
 11845                           
 11846                           ; BSR set to: 0
 11847                           ;CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 11848  001BA0  010F               	movlb	15	; () banked
 11849  001BA2  8132               	bsf	50,0,b	;volatile
 11850  001BA4                     l388:
 11851                           
 11852                           ;CANlib.h: 395: if (identifier & 0x00020000)
 11853  001BA4  0100               	movlb	0	; () banked
 11854  001BA6  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 11855  001BA8  D002               	goto	l389
 11856                           
 11857                           ; BSR set to: 0
 11858                           ;CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 11859  001BAA  010F               	movlb	15	; () banked
 11860  001BAC  8332               	bsf	50,1,b	;volatile
 11861  001BAE                     l389:
 11862                           
 11863                           ;CANlib.h: 397: if (identifier & 0x00040000)
 11864  001BAE  0100               	movlb	0	; () banked
 11865  001BB0  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 11866  001BB2  D002               	goto	l390
 11867                           
 11868                           ; BSR set to: 0
 11869                           ;CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 11870  001BB4  010F               	movlb	15	; () banked
 11871  001BB6  8B32               	bsf	50,5,b	;volatile
 11872  001BB8                     l390:
 11873                           
 11874                           ;CANlib.h: 399: if (identifier & 0x00080000)
 11875  001BB8  0100               	movlb	0	; () banked
 11876  001BBA  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 11877  001BBC  D002               	goto	l391
 11878                           
 11879                           ; BSR set to: 0
 11880                           ;CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 11881  001BBE  010F               	movlb	15	; () banked
 11882  001BC0  8D32               	bsf	50,6,b	;volatile
 11883  001BC2                     l391:
 11884                           
 11885                           ;CANlib.h: 401: if (identifier & 0x00100000)
 11886  001BC2  0100               	movlb	0	; () banked
 11887  001BC4  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 11888  001BC6  D003               	goto	l6387
 11889                           
 11890                           ; BSR set to: 0
 11891                           ;CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 11892  001BC8  010F               	movlb	15	; () banked
 11893  001BCA  8F32               	bsf	50,7,b	;volatile
 11894  001BCC  D000               	goto	l6387
 11895  001BCE                     l6387:
 11896                           
 11897                           ;CANlib.h: 404: tamp = (identifier >> 21);
 11898  001BCE  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 11899  001BD2  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 11900  001BD6  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 11901  001BDA  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 11902  001BDE  0E16               	movlw	22
 11903  001BE0  D006               	goto	u8430
 11904  001BE2                     u8435:
 11905  001BE2  0100               	movlb	0	; () banked
 11906  001BE4  90D8               	bcf	status,0,c
 11907  001BE6  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 11908  001BE8  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 11909  001BEA  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 11910  001BEC  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 11911  001BEE                     u8430:
 11912  001BEE  2EE8               	decfsz	wreg,f,c
 11913  001BF0  D7F8               	goto	u8435
 11914  001BF2  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11915  001BF6  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11916  001BFA  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11917  001BFE  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11918                           
 11919                           ; BSR set to: 0
 11920                           ;CANlib.h: 405: tamp = tamp & 0x000000FF;
 11921  001C02  0100               	movlb	0	; () banked
 11922  001C04  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 11923  001C06  0100               	movlb	0	; () banked
 11924  001C08  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11925  001C0A  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11926  001C0C  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11927  001C0E  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11928                           
 11929                           ; BSR set to: 0
 11930                           ;CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 11931  001C10  C06C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 11932                           
 11933                           ;CANlib.h: 407: }
 11934  001C14  D05A               	goto	l6407
 11935  001C16                     l387:
 11936                           
 11937                           ; BSR set to: 0
 11938                           ;CANlib.h: 409: else
 11939                           ;CANlib.h: 411: {
 11940                           ;CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 11941  001C16  010F               	movlb	15	; () banked
 11942  001C18  9732               	bcf	50,3,b	;volatile
 11943                           
 11944                           ; BSR set to: 15
 11945                           ;CANlib.h: 414: tamp = (identifier >> 3);
 11946  001C1A  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 11947  001C1E  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 11948  001C22  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 11949  001C26  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 11950  001C2A  0E04               	movlw	4
 11951  001C2C  D006               	goto	u8440
 11952  001C2E                     u8445:
 11953  001C2E  0100               	movlb	0	; () banked
 11954  001C30  90D8               	bcf	status,0,c
 11955  001C32  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 11956  001C34  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 11957  001C36  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 11958  001C38  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 11959  001C3A                     u8440:
 11960  001C3A  2EE8               	decfsz	wreg,f,c
 11961  001C3C  D7F8               	goto	u8445
 11962  001C3E  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11963  001C42  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11964  001C46  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11965  001C4A  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11966                           
 11967                           ; BSR set to: 0
 11968                           ;CANlib.h: 415: tamp = tamp & 0x000000FF;
 11969  001C4E  0100               	movlb	0	; () banked
 11970  001C50  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 11971  001C52  0100               	movlb	0	; () banked
 11972  001C54  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11973  001C56  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11974  001C58  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11975  001C5A  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11976                           
 11977                           ; BSR set to: 0
 11978                           ;CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 11979  001C5C  C06C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 11980                           
 11981                           ; BSR set to: 0
 11982                           ;CANlib.h: 418: tamp = identifier & 0x00000007;
 11983  001C60  0E07               	movlw	7
 11984  001C62  0100               	movlb	0	; () banked
 11985  001C64  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 11986  001C66  0100               	movlb	0	; () banked
 11987  001C68  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11988  001C6A  0E00               	movlw	0
 11989  001C6C  0100               	movlb	0	; () banked
 11990  001C6E  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 11991  001C70  0100               	movlb	0	; () banked
 11992  001C72  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 11993  001C74  0E00               	movlw	0
 11994  001C76  0100               	movlb	0	; () banked
 11995  001C78  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 11996  001C7A  0100               	movlb	0	; () banked
 11997  001C7C  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 11998  001C7E  0E00               	movlw	0
 11999  001C80  0100               	movlb	0	; () banked
 12000  001C82  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 12001  001C84  0100               	movlb	0	; () banked
 12002  001C86  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 12003                           
 12004                           ; BSR set to: 0
 12005                           ;CANlib.h: 419: tamp = tamp << 5;
 12006  001C88  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 12007  001C8C  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 12008  001C90  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 12009  001C94  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 12010  001C98  0E05               	movlw	5
 12011  001C9A                     u8455:
 12012  001C9A  90D8               	bcf	status,0,c
 12013  001C9C  0100               	movlb	0	; () banked
 12014  001C9E  3768               	rlcf	??_CANsendMessage& (0+255),f,b
 12015  001CA0  3769               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 12016  001CA2  376A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 12017  001CA4  376B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 12018  001CA6  2EE8               	decfsz	wreg,f,c
 12019  001CA8  D7F8               	goto	u8455
 12020  001CAA  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12021  001CAE  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12022  001CB2  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12023  001CB6  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12024                           
 12025                           ; BSR set to: 0
 12026                           ;CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 12027  001CBA  010F               	movlb	15	; () banked
 12028  001CBC  5132               	movf	50,w,b	;volatile
 12029  001CBE  0B1F               	andlw	31
 12030  001CC0  010F               	movlb	15	; () banked
 12031  001CC2  6F32               	movwf	50,b	;volatile
 12032                           
 12033                           ; BSR set to: 15
 12034                           ;CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 12035  001CC4  C06C  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 12036  001CC8  D000               	goto	l6407
 12037  001CCA                     l6407:
 12038                           
 12039                           ;CANlib.h: 422: }
 12040                           ;CANlib.h: 424: if (0b00000001 & flags)
 12041  001CCA  0100               	movlb	0	; () banked
 12042  001CCC  A167               	btfss	CANsendMessage@flags& (0+255),0,b
 12043  001CCE  D003               	goto	l394
 12044                           
 12045                           ; BSR set to: 0
 12046                           ;CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 12047  001CD0  010F               	movlb	15	; () banked
 12048  001CD2  8130               	bsf	48,0,b	;volatile
 12049  001CD4  D002               	goto	l395
 12050  001CD6                     l394:
 12051                           
 12052                           ; BSR set to: 0
 12053                           ;CANlib.h: 426: else
 12054                           ;CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 12055  001CD6  010F               	movlb	15	; () banked
 12056  001CD8  9130               	bcf	48,0,b	;volatile
 12057  001CDA                     l395:
 12058                           
 12059                           ; BSR set to: 15
 12060                           ;CANlib.h: 428: if (0b00000010 & flags)
 12061  001CDA  0100               	movlb	0	; () banked
 12062  001CDC  A367               	btfss	CANsendMessage@flags& (0+255),1,b
 12063  001CDE  D003               	goto	l396
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 12067  001CE0  010F               	movlb	15	; () banked
 12068  001CE2  8330               	bsf	48,1,b	;volatile
 12069  001CE4  D003               	goto	l6413
 12070  001CE6                     l396:
 12071                           
 12072                           ; BSR set to: 0
 12073                           ;CANlib.h: 430: else
 12074                           ;CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 12075  001CE6  010F               	movlb	15	; () banked
 12076  001CE8  9330               	bcf	48,1,b	;volatile
 12077  001CEA  D000               	goto	l6413
 12078  001CEC                     l6413:
 12079                           
 12080                           ; BSR set to: 15
 12081                           ;CANlib.h: 433: TXB1D0 = data[0];
 12082  001CEC  C064  FFD9         	movff	CANsendMessage@data,fsr2l
 12083  001CF0  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
 12084  001CF4  50DF               	movf	indf2,w,c
 12085  001CF6  010F               	movlb	15	; () banked
 12086  001CF8  6F36               	movwf	54,b	;volatile
 12087                           
 12088                           ; BSR set to: 15
 12089                           ;CANlib.h: 434: TXB1D1 = data[1];
 12090  001CFA  0100               	movlb	0	; () banked
 12091  001CFC  EE20 F001          	lfsr	2,1
 12092  001D00  5164               	movf	CANsendMessage@data& (0+255),w,b
 12093  001D02  26D9               	addwf	fsr2l,f,c
 12094  001D04  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12095  001D06  22DA               	addwfc	fsr2h,f,c
 12096  001D08  50DF               	movf	indf2,w,c
 12097  001D0A  010F               	movlb	15	; () banked
 12098  001D0C  6F37               	movwf	55,b	;volatile
 12099                           
 12100                           ; BSR set to: 15
 12101                           ;CANlib.h: 435: TXB1D2 = data[2];
 12102  001D0E  0100               	movlb	0	; () banked
 12103  001D10  EE20 F002          	lfsr	2,2
 12104  001D14  5164               	movf	CANsendMessage@data& (0+255),w,b
 12105  001D16  26D9               	addwf	fsr2l,f,c
 12106  001D18  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12107  001D1A  22DA               	addwfc	fsr2h,f,c
 12108  001D1C  50DF               	movf	indf2,w,c
 12109  001D1E  010F               	movlb	15	; () banked
 12110  001D20  6F38               	movwf	56,b	;volatile
 12111                           
 12112                           ; BSR set to: 15
 12113                           ;CANlib.h: 436: TXB1D3 = data[3];
 12114  001D22  0100               	movlb	0	; () banked
 12115  001D24  EE20 F003          	lfsr	2,3
 12116  001D28  5164               	movf	CANsendMessage@data& (0+255),w,b
 12117  001D2A  26D9               	addwf	fsr2l,f,c
 12118  001D2C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12119  001D2E  22DA               	addwfc	fsr2h,f,c
 12120  001D30  50DF               	movf	indf2,w,c
 12121  001D32  010F               	movlb	15	; () banked
 12122  001D34  6F39               	movwf	57,b	;volatile
 12123                           
 12124                           ; BSR set to: 15
 12125                           ;CANlib.h: 437: TXB1D4 = data[4];
 12126  001D36  0100               	movlb	0	; () banked
 12127  001D38  EE20 F004          	lfsr	2,4
 12128  001D3C  5164               	movf	CANsendMessage@data& (0+255),w,b
 12129  001D3E  26D9               	addwf	fsr2l,f,c
 12130  001D40  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12131  001D42  22DA               	addwfc	fsr2h,f,c
 12132  001D44  50DF               	movf	indf2,w,c
 12133  001D46  010F               	movlb	15	; () banked
 12134  001D48  6F3A               	movwf	58,b	;volatile
 12135                           
 12136                           ; BSR set to: 15
 12137                           ;CANlib.h: 438: TXB1D5 = data[5];
 12138  001D4A  0100               	movlb	0	; () banked
 12139  001D4C  EE20 F005          	lfsr	2,5
 12140  001D50  5164               	movf	CANsendMessage@data& (0+255),w,b
 12141  001D52  26D9               	addwf	fsr2l,f,c
 12142  001D54  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12143  001D56  22DA               	addwfc	fsr2h,f,c
 12144  001D58  50DF               	movf	indf2,w,c
 12145  001D5A  010F               	movlb	15	; () banked
 12146  001D5C  6F3B               	movwf	59,b	;volatile
 12147                           
 12148                           ; BSR set to: 15
 12149                           ;CANlib.h: 439: TXB1D6 = data[6];
 12150  001D5E  0100               	movlb	0	; () banked
 12151  001D60  EE20 F006          	lfsr	2,6
 12152  001D64  5164               	movf	CANsendMessage@data& (0+255),w,b
 12153  001D66  26D9               	addwf	fsr2l,f,c
 12154  001D68  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12155  001D6A  22DA               	addwfc	fsr2h,f,c
 12156  001D6C  50DF               	movf	indf2,w,c
 12157  001D6E  010F               	movlb	15	; () banked
 12158  001D70  6F3C               	movwf	60,b	;volatile
 12159                           
 12160                           ; BSR set to: 15
 12161                           ;CANlib.h: 440: TXB1D7 = data[7];
 12162  001D72  0100               	movlb	0	; () banked
 12163  001D74  EE20 F007          	lfsr	2,7
 12164  001D78  5164               	movf	CANsendMessage@data& (0+255),w,b
 12165  001D7A  26D9               	addwf	fsr2l,f,c
 12166  001D7C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12167  001D7E  22DA               	addwfc	fsr2h,f,c
 12168  001D80  50DF               	movf	indf2,w,c
 12169  001D82  010F               	movlb	15	; () banked
 12170  001D84  6F3D               	movwf	61,b	;volatile
 12171                           
 12172                           ; BSR set to: 15
 12173                           ;CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 12174  001D86  010F               	movlb	15	; () banked
 12175  001D88  8730               	bsf	48,3,b	;volatile
 12176                           
 12177                           ; BSR set to: 15
 12178                           ;CANlib.h: 444: return;
 12179  001D8A  0012               	return	
 12180  001D8C                     l384:
 12181                           
 12182                           ; BSR set to: 15
 12183                           ;CANlib.h: 445: }
 12184                           ;CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 12185  001D8C  010F               	movlb	15	; () banked
 12186  001D8E  B720               	btfsc	32,3,b	;volatile
 12187  001D90  0012               	return	
 12188                           
 12189                           ; BSR set to: 15
 12190                           ;CANlib.h: 450: { TXB2DLC = dataLength;
 12191  001D92  C066  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 12192                           
 12193                           ;CANlib.h: 452: if (0b01000000 & flags)
 12194  001D96  0100               	movlb	0	; () banked
 12195  001D98  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
 12196  001D9A  D003               	goto	l399
 12197                           
 12198                           ; BSR set to: 0
 12199                           ;CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 12200  001D9C  010F               	movlb	15	; () banked
 12201  001D9E  8D25               	bsf	37,6,b	;volatile
 12202  001DA0  D002               	goto	l400
 12203  001DA2                     l399:
 12204                           
 12205                           ; BSR set to: 0
 12206                           ;CANlib.h: 454: else
 12207                           ;CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 12208  001DA2  010F               	movlb	15	; () banked
 12209  001DA4  9D25               	bcf	37,6,b	;volatile
 12210  001DA6                     l400:
 12211                           
 12212                           ; BSR set to: 15
 12213                           ;CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 12214  001DA6  0100               	movlb	0	; () banked
 12215  001DA8  A767               	btfss	CANsendMessage@flags& (0+255),3,b
 12216  001DAA  D07A               	goto	l401
 12217                           
 12218                           ; BSR set to: 0
 12219                           ;CANlib.h: 458: {
 12220                           ;CANlib.h: 459: tamp = identifier & 0x000000FF;
 12221  001DAC  0100               	movlb	0	; () banked
 12222  001DAE  5160               	movf	CANsendMessage@identifier& (0+255),w,b
 12223  001DB0  0100               	movlb	0	; () banked
 12224  001DB2  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12225  001DB4  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 12226  001DB6  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 12227  001DB8  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 12228                           
 12229                           ; BSR set to: 0
 12230                           ;CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 12231  001DBA  C06C  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 12232                           
 12233                           ; BSR set to: 0
 12234                           ;CANlib.h: 462: tamp = identifier & 0x0000FF00;
 12235  001DBE  0E00               	movlw	0
 12236  001DC0  0100               	movlb	0	; () banked
 12237  001DC2  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 12238  001DC4  0100               	movlb	0	; () banked
 12239  001DC6  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12240  001DC8  0EFF               	movlw	255
 12241  001DCA  0100               	movlb	0	; () banked
 12242  001DCC  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 12243  001DCE  0100               	movlb	0	; () banked
 12244  001DD0  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 12245  001DD2  0E00               	movlw	0
 12246  001DD4  0100               	movlb	0	; () banked
 12247  001DD6  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 12248  001DD8  0100               	movlb	0	; () banked
 12249  001DDA  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 12250  001DDC  0E00               	movlw	0
 12251  001DDE  0100               	movlb	0	; () banked
 12252  001DE0  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 12253  001DE2  0100               	movlb	0	; () banked
 12254  001DE4  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 12255                           
 12256                           ; BSR set to: 0
 12257                           ;CANlib.h: 463: tamp = tamp >> 8;
 12258  001DE6  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 12259  001DEA  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 12260  001DEE  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 12261  001DF2  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 12262  001DF6  C069  F068         	movff	??_CANsendMessage+1,??_CANsendMessage
 12263  001DFA  C06A  F069         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 12264  001DFE  C06B  F06A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 12265  001E02  0100               	movlb	0	; () banked
 12266  001E04  6B6B               	clrf	(??_CANsendMessage+3)& (0+255),b
 12267  001E06  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12268  001E0A  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12269  001E0E  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12270  001E12  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12271                           
 12272                           ; BSR set to: 0
 12273                           ;CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 12274  001E16  C06C  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 12275                           
 12276                           ; BSR set to: 0
 12277                           ;CANlib.h: 466: TXB2SIDL = 0x00;
 12278  001E1A  0E00               	movlw	0
 12279  001E1C  010F               	movlb	15	; () banked
 12280  001E1E  6F22               	movwf	34,b	;volatile
 12281                           
 12282                           ; BSR set to: 15
 12283                           ;CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 12284  001E20  010F               	movlb	15	; () banked
 12285  001E22  8722               	bsf	34,3,b	;volatile
 12286                           
 12287                           ; BSR set to: 15
 12288                           ;CANlib.h: 469: if (identifier & 0x00010000)
 12289  001E24  0100               	movlb	0	; () banked
 12290  001E26  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 12291  001E28  D002               	goto	l402
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 12295  001E2A  010F               	movlb	15	; () banked
 12296  001E2C  8122               	bsf	34,0,b	;volatile
 12297  001E2E                     l402:
 12298                           
 12299                           ;CANlib.h: 471: if (identifier & 0x00020000)
 12300  001E2E  0100               	movlb	0	; () banked
 12301  001E30  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 12302  001E32  D002               	goto	l403
 12303                           
 12304                           ; BSR set to: 0
 12305                           ;CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 12306  001E34  010F               	movlb	15	; () banked
 12307  001E36  8322               	bsf	34,1,b	;volatile
 12308  001E38                     l403:
 12309                           
 12310                           ;CANlib.h: 473: if (identifier & 0x00040000)
 12311  001E38  0100               	movlb	0	; () banked
 12312  001E3A  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 12313  001E3C  D002               	goto	l404
 12314                           
 12315                           ; BSR set to: 0
 12316                           ;CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 12317  001E3E  010F               	movlb	15	; () banked
 12318  001E40  8B22               	bsf	34,5,b	;volatile
 12319  001E42                     l404:
 12320                           
 12321                           ;CANlib.h: 475: if (identifier & 0x00080000)
 12322  001E42  0100               	movlb	0	; () banked
 12323  001E44  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 12324  001E46  D002               	goto	l405
 12325                           
 12326                           ; BSR set to: 0
 12327                           ;CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 12328  001E48  010F               	movlb	15	; () banked
 12329  001E4A  8D22               	bsf	34,6,b	;volatile
 12330  001E4C                     l405:
 12331                           
 12332                           ;CANlib.h: 477: if (identifier & 0x00100000)
 12333  001E4C  0100               	movlb	0	; () banked
 12334  001E4E  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 12335  001E50  D003               	goto	l6463
 12336                           
 12337                           ; BSR set to: 0
 12338                           ;CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 12339  001E52  010F               	movlb	15	; () banked
 12340  001E54  8F22               	bsf	34,7,b	;volatile
 12341  001E56  D000               	goto	l6463
 12342  001E58                     l6463:
 12343                           
 12344                           ;CANlib.h: 480: tamp = (identifier >> 21);
 12345  001E58  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 12346  001E5C  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 12347  001E60  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 12348  001E64  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 12349  001E68  0E16               	movlw	22
 12350  001E6A  D006               	goto	u8560
 12351  001E6C                     u8565:
 12352  001E6C  0100               	movlb	0	; () banked
 12353  001E6E  90D8               	bcf	status,0,c
 12354  001E70  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 12355  001E72  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 12356  001E74  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 12357  001E76  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 12358  001E78                     u8560:
 12359  001E78  2EE8               	decfsz	wreg,f,c
 12360  001E7A  D7F8               	goto	u8565
 12361  001E7C  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12362  001E80  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12363  001E84  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12364  001E88  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12365                           
 12366                           ; BSR set to: 0
 12367                           ;CANlib.h: 481: tamp = tamp & 0x000000FF;
 12368  001E8C  0100               	movlb	0	; () banked
 12369  001E8E  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 12370  001E90  0100               	movlb	0	; () banked
 12371  001E92  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12372  001E94  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 12373  001E96  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 12374  001E98  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 12375                           
 12376                           ; BSR set to: 0
 12377                           ;CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 12378  001E9A  C06C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 12379                           
 12380                           ;CANlib.h: 483: }
 12381  001E9E  D05A               	goto	l6483
 12382  001EA0                     l401:
 12383                           
 12384                           ; BSR set to: 0
 12385                           ;CANlib.h: 485: else
 12386                           ;CANlib.h: 487: {
 12387                           ;CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 12388  001EA0  010F               	movlb	15	; () banked
 12389  001EA2  9722               	bcf	34,3,b	;volatile
 12390                           
 12391                           ; BSR set to: 15
 12392                           ;CANlib.h: 490: tamp = (identifier >> 3);
 12393  001EA4  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 12394  001EA8  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 12395  001EAC  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 12396  001EB0  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 12397  001EB4  0E04               	movlw	4
 12398  001EB6  D006               	goto	u8570
 12399  001EB8                     u8575:
 12400  001EB8  0100               	movlb	0	; () banked
 12401  001EBA  90D8               	bcf	status,0,c
 12402  001EBC  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 12403  001EBE  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 12404  001EC0  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 12405  001EC2  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 12406  001EC4                     u8570:
 12407  001EC4  2EE8               	decfsz	wreg,f,c
 12408  001EC6  D7F8               	goto	u8575
 12409  001EC8  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12410  001ECC  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12411  001ED0  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12412  001ED4  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12413                           
 12414                           ; BSR set to: 0
 12415                           ;CANlib.h: 491: tamp = tamp & 0x000000FF;
 12416  001ED8  0100               	movlb	0	; () banked
 12417  001EDA  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 12418  001EDC  0100               	movlb	0	; () banked
 12419  001EDE  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12420  001EE0  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 12421  001EE2  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 12422  001EE4  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 12423                           
 12424                           ; BSR set to: 0
 12425                           ;CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 12426  001EE6  C06C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 12427                           
 12428                           ; BSR set to: 0
 12429                           ;CANlib.h: 494: tamp = identifier & 0x00000007;
 12430  001EEA  0E07               	movlw	7
 12431  001EEC  0100               	movlb	0	; () banked
 12432  001EEE  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 12433  001EF0  0100               	movlb	0	; () banked
 12434  001EF2  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12435  001EF4  0E00               	movlw	0
 12436  001EF6  0100               	movlb	0	; () banked
 12437  001EF8  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 12438  001EFA  0100               	movlb	0	; () banked
 12439  001EFC  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 12440  001EFE  0E00               	movlw	0
 12441  001F00  0100               	movlb	0	; () banked
 12442  001F02  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 12443  001F04  0100               	movlb	0	; () banked
 12444  001F06  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 12445  001F08  0E00               	movlw	0
 12446  001F0A  0100               	movlb	0	; () banked
 12447  001F0C  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 12448  001F0E  0100               	movlb	0	; () banked
 12449  001F10  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 12450                           
 12451                           ; BSR set to: 0
 12452                           ;CANlib.h: 495: tamp = tamp << 5;
 12453  001F12  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 12454  001F16  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 12455  001F1A  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 12456  001F1E  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 12457  001F22  0E05               	movlw	5
 12458  001F24                     u8585:
 12459  001F24  90D8               	bcf	status,0,c
 12460  001F26  0100               	movlb	0	; () banked
 12461  001F28  3768               	rlcf	??_CANsendMessage& (0+255),f,b
 12462  001F2A  3769               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 12463  001F2C  376A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 12464  001F2E  376B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 12465  001F30  2EE8               	decfsz	wreg,f,c
 12466  001F32  D7F8               	goto	u8585
 12467  001F34  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12468  001F38  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12469  001F3C  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12470  001F40  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12471                           
 12472                           ; BSR set to: 0
 12473                           ;CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 12474  001F44  010F               	movlb	15	; () banked
 12475  001F46  5122               	movf	34,w,b	;volatile
 12476  001F48  0B1F               	andlw	31
 12477  001F4A  010F               	movlb	15	; () banked
 12478  001F4C  6F22               	movwf	34,b	;volatile
 12479                           
 12480                           ; BSR set to: 15
 12481                           ;CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 12482  001F4E  C06C  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 12483  001F52  D000               	goto	l6483
 12484  001F54                     l6483:
 12485                           
 12486                           ;CANlib.h: 498: }
 12487                           ;CANlib.h: 500: if (0b00000001 & flags)
 12488  001F54  0100               	movlb	0	; () banked
 12489  001F56  A167               	btfss	CANsendMessage@flags& (0+255),0,b
 12490  001F58  D003               	goto	l408
 12491                           
 12492                           ; BSR set to: 0
 12493                           ;CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 12494  001F5A  010F               	movlb	15	; () banked
 12495  001F5C  8120               	bsf	32,0,b	;volatile
 12496  001F5E  D002               	goto	l409
 12497  001F60                     l408:
 12498                           
 12499                           ; BSR set to: 0
 12500                           ;CANlib.h: 502: else
 12501                           ;CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 12502  001F60  010F               	movlb	15	; () banked
 12503  001F62  9120               	bcf	32,0,b	;volatile
 12504  001F64                     l409:
 12505                           
 12506                           ; BSR set to: 15
 12507                           ;CANlib.h: 504: if (0b00000010 & flags)
 12508  001F64  0100               	movlb	0	; () banked
 12509  001F66  A367               	btfss	CANsendMessage@flags& (0+255),1,b
 12510  001F68  D003               	goto	l410
 12511                           
 12512                           ; BSR set to: 0
 12513                           ;CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 12514  001F6A  010F               	movlb	15	; () banked
 12515  001F6C  8320               	bsf	32,1,b	;volatile
 12516  001F6E  D003               	goto	l6489
 12517  001F70                     l410:
 12518                           
 12519                           ; BSR set to: 0
 12520                           ;CANlib.h: 506: else
 12521                           ;CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 12522  001F70  010F               	movlb	15	; () banked
 12523  001F72  9320               	bcf	32,1,b	;volatile
 12524  001F74  D000               	goto	l6489
 12525  001F76                     l6489:
 12526                           
 12527                           ; BSR set to: 15
 12528                           ;CANlib.h: 509: TXB2D0 = data[0];
 12529  001F76  C064  FFD9         	movff	CANsendMessage@data,fsr2l
 12530  001F7A  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
 12531  001F7E  50DF               	movf	indf2,w,c
 12532  001F80  010F               	movlb	15	; () banked
 12533  001F82  6F26               	movwf	38,b	;volatile
 12534                           
 12535                           ; BSR set to: 15
 12536                           ;CANlib.h: 510: TXB2D1 = data[1];
 12537  001F84  0100               	movlb	0	; () banked
 12538  001F86  EE20 F001          	lfsr	2,1
 12539  001F8A  5164               	movf	CANsendMessage@data& (0+255),w,b
 12540  001F8C  26D9               	addwf	fsr2l,f,c
 12541  001F8E  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12542  001F90  22DA               	addwfc	fsr2h,f,c
 12543  001F92  50DF               	movf	indf2,w,c
 12544  001F94  010F               	movlb	15	; () banked
 12545  001F96  6F27               	movwf	39,b	;volatile
 12546                           
 12547                           ; BSR set to: 15
 12548                           ;CANlib.h: 511: TXB2D2 = data[2];
 12549  001F98  0100               	movlb	0	; () banked
 12550  001F9A  EE20 F002          	lfsr	2,2
 12551  001F9E  5164               	movf	CANsendMessage@data& (0+255),w,b
 12552  001FA0  26D9               	addwf	fsr2l,f,c
 12553  001FA2  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12554  001FA4  22DA               	addwfc	fsr2h,f,c
 12555  001FA6  50DF               	movf	indf2,w,c
 12556  001FA8  010F               	movlb	15	; () banked
 12557  001FAA  6F28               	movwf	40,b	;volatile
 12558                           
 12559                           ; BSR set to: 15
 12560                           ;CANlib.h: 512: TXB2D3 = data[3];
 12561  001FAC  0100               	movlb	0	; () banked
 12562  001FAE  EE20 F003          	lfsr	2,3
 12563  001FB2  5164               	movf	CANsendMessage@data& (0+255),w,b
 12564  001FB4  26D9               	addwf	fsr2l,f,c
 12565  001FB6  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12566  001FB8  22DA               	addwfc	fsr2h,f,c
 12567  001FBA  50DF               	movf	indf2,w,c
 12568  001FBC  010F               	movlb	15	; () banked
 12569  001FBE  6F29               	movwf	41,b	;volatile
 12570                           
 12571                           ; BSR set to: 15
 12572                           ;CANlib.h: 513: TXB2D4 = data[4];
 12573  001FC0  0100               	movlb	0	; () banked
 12574  001FC2  EE20 F004          	lfsr	2,4
 12575  001FC6  5164               	movf	CANsendMessage@data& (0+255),w,b
 12576  001FC8  26D9               	addwf	fsr2l,f,c
 12577  001FCA  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12578  001FCC  22DA               	addwfc	fsr2h,f,c
 12579  001FCE  50DF               	movf	indf2,w,c
 12580  001FD0  010F               	movlb	15	; () banked
 12581  001FD2  6F2A               	movwf	42,b	;volatile
 12582                           
 12583                           ; BSR set to: 15
 12584                           ;CANlib.h: 514: TXB2D5 = data[5];
 12585  001FD4  0100               	movlb	0	; () banked
 12586  001FD6  EE20 F005          	lfsr	2,5
 12587  001FDA  5164               	movf	CANsendMessage@data& (0+255),w,b
 12588  001FDC  26D9               	addwf	fsr2l,f,c
 12589  001FDE  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12590  001FE0  22DA               	addwfc	fsr2h,f,c
 12591  001FE2  50DF               	movf	indf2,w,c
 12592  001FE4  010F               	movlb	15	; () banked
 12593  001FE6  6F2B               	movwf	43,b	;volatile
 12594                           
 12595                           ; BSR set to: 15
 12596                           ;CANlib.h: 515: TXB2D6 = data[6];
 12597  001FE8  0100               	movlb	0	; () banked
 12598  001FEA  EE20 F006          	lfsr	2,6
 12599  001FEE  5164               	movf	CANsendMessage@data& (0+255),w,b
 12600  001FF0  26D9               	addwf	fsr2l,f,c
 12601  001FF2  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12602  001FF4  22DA               	addwfc	fsr2h,f,c
 12603  001FF6  50DF               	movf	indf2,w,c
 12604  001FF8  010F               	movlb	15	; () banked
 12605  001FFA  6F2C               	movwf	44,b	;volatile
 12606                           
 12607                           ; BSR set to: 15
 12608                           ;CANlib.h: 516: TXB2D7 = data[7];
 12609  001FFC  0100               	movlb	0	; () banked
 12610  001FFE  EE20 F007          	lfsr	2,7
 12611  002002  5164               	movf	CANsendMessage@data& (0+255),w,b
 12612  002004  26D9               	addwf	fsr2l,f,c
 12613  002006  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12614  002008  22DA               	addwfc	fsr2h,f,c
 12615  00200A  50DF               	movf	indf2,w,c
 12616  00200C  010F               	movlb	15	; () banked
 12617  00200E  6F2D               	movwf	45,b	;volatile
 12618                           
 12619                           ; BSR set to: 15
 12620                           ;CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 12621  002010  010F               	movlb	15	; () banked
 12622  002012  8720               	bsf	32,3,b	;volatile
 12623                           
 12624                           ; BSR set to: 15
 12625                           ;CANlib.h: 520: return;
 12626  002014  0012               	return	
 12627                           
 12628                           ; BSR set to: 15
 12629                           
 12630                           ; BSR set to: 15
 12631  002016  0012               	return		;funcret
 12632  002018                     __end_of_CANsendMessage:
 12633                           	opt stack 0
 12634                           tblptru	equ	0xFF8
 12635                           tblptrh	equ	0xFF7
 12636                           tblptrl	equ	0xFF6
 12637                           tablat	equ	0xFF5
 12638                           prodh	equ	0xFF4
 12639                           prodl	equ	0xFF3
 12640                           intcon	equ	0xFF2
 12641                           postinc0	equ	0xFEE
 12642                           wreg	equ	0xFE8
 12643                           indf2	equ	0xFDF
 12644                           postinc2	equ	0xFDE
 12645                           postdec2	equ	0xFDD
 12646                           fsr2h	equ	0xFDA
 12647                           fsr2l	equ	0xFD9
 12648                           status	equ	0xFD8
 12649                           
 12650 ;; *************** function _CANisTxReady *****************
 12651 ;; Defined at:
 12652 ;;		line 1154 in file "CANlib.h"
 12653 ;; Parameters:    Size  Location     Type
 12654 ;;		None
 12655 ;; Auto vars:     Size  Location     Type
 12656 ;;		None
 12657 ;; Return value:  Size  Location     Type
 12658 ;;                  1    wreg      unsigned char 
 12659 ;; Registers used:
 12660 ;;		wreg, status,2
 12661 ;; Tracked objects:
 12662 ;;		On entry : 0/0
 12663 ;;		On exit  : 0/0
 12664 ;;		Unchanged: 0/0
 12665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12667 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12669 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12670 ;;Total ram usage:        1 bytes
 12671 ;; Hardware stack levels used:    1
 12672 ;; Hardware stack levels required when called:    2
 12673 ;; This function calls:
 12674 ;;		Nothing
 12675 ;; This function is called by:
 12676 ;;		_main
 12677 ;;		_rampe
 12678 ;;		_send_data
 12679 ;;		_battery_measure
 12680 ;; This function uses a non-reentrant model
 12681 ;;
 12682                           
 12683                           	psect	text38
 12684  004F0C                     __ptext38:
 12685                           	opt stack 0
 12686  004F0C                     _CANisTxReady:
 12687                           	opt stack 27
 12688                           
 12689                           ;CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TXREQ)
      +                          ;
 12690                           
 12691                           ; BSR set to: 15
 12692                           ;incstack = 0
 12693  004F0C  0E01               	movlw	1
 12694  004F0E  0100               	movlb	0	; () banked
 12695  004F10  6F60               	movwf	_CANisTxReady$3005& (0+255),b
 12696                           
 12697                           ; BSR set to: 0
 12698  004F12  010F               	movlb	15	; () banked
 12699  004F14  A740               	btfss	64,3,b	;volatile
 12700  004F16  D009               	goto	l562
 12701                           
 12702                           ; BSR set to: 15
 12703  004F18  010F               	movlb	15	; () banked
 12704  004F1A  A730               	btfss	48,3,b	;volatile
 12705  004F1C  D006               	goto	l562
 12706                           
 12707                           ; BSR set to: 15
 12708  004F1E  010F               	movlb	15	; () banked
 12709  004F20  A720               	btfss	32,3,b	;volatile
 12710  004F22  D003               	goto	l562
 12711                           
 12712                           ; BSR set to: 15
 12713  004F24  0E00               	movlw	0
 12714  004F26  0100               	movlb	0	; () banked
 12715  004F28  6F60               	movwf	_CANisTxReady$3005& (0+255),b
 12716  004F2A                     l562:
 12717  004F2A  0100               	movlb	0	; () banked
 12718  004F2C  5160               	movf	_CANisTxReady$3005& (0+255),w,b
 12719  004F2E  0012               	return	
 12720                           
 12721                           ; BSR set to: 0
 12722                           
 12723                           ; BSR set to: 0
 12724  004F30  0012               	return		;funcret
 12725  004F32                     __end_of_CANisTxReady:
 12726                           	opt stack 0
 12727                           tblptru	equ	0xFF8
 12728                           tblptrh	equ	0xFF7
 12729                           tblptrl	equ	0xFF6
 12730                           tablat	equ	0xFF5
 12731                           prodh	equ	0xFF4
 12732                           prodl	equ	0xFF3
 12733                           intcon	equ	0xFF2
 12734                           postinc0	equ	0xFEE
 12735                           wreg	equ	0xFE8
 12736                           indf2	equ	0xFDF
 12737                           postinc2	equ	0xFDE
 12738                           postdec2	equ	0xFDD
 12739                           fsr2h	equ	0xFDA
 12740                           fsr2l	equ	0xFD9
 12741                           status	equ	0xFD8
 12742                           
 12743 ;; *************** function _OpenTimer2 *****************
 12744 ;; Defined at:
 12745 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t2open.c"
 12746 ;; Parameters:    Size  Location     Type
 12747 ;;  config          1    wreg     unsigned char 
 12748 ;; Auto vars:     Size  Location     Type
 12749 ;;  config          1    0[BANK0 ] unsigned char 
 12750 ;; Return value:  Size  Location     Type
 12751 ;;		None               void
 12752 ;; Registers used:
 12753 ;;		wreg, status,2, status,0
 12754 ;; Tracked objects:
 12755 ;;		On entry : 0/0
 12756 ;;		On exit  : 0/0
 12757 ;;		Unchanged: 0/0
 12758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12760 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12762 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12763 ;;Total ram usage:        1 bytes
 12764 ;; Hardware stack levels used:    1
 12765 ;; Hardware stack levels required when called:    2
 12766 ;; This function calls:
 12767 ;;		Nothing
 12768 ;; This function is called by:
 12769 ;;		_main
 12770 ;; This function uses a non-reentrant model
 12771 ;;
 12772                           
 12773                           	psect	text39
 12774  004F32                     __ptext39:
 12775                           	opt stack 0
 12776  004F32                     _OpenTimer2:
 12777                           	opt stack 28
 12778                           
 12779                           ; BSR set to: 0
 12780                           ;incstack = 0
 12781                           ;OpenTimer2@config stored from wreg
 12782  004F32  0100               	movlb	0	; () banked
 12783  004F34  6F60               	movwf	OpenTimer2@config& (0+255),b
 12784                           
 12785                           ; BSR set to: 0
 12786  004F36  0100               	movlb	0	; () banked
 12787  004F38  5160               	movf	OpenTimer2@config& (0+255),w,b
 12788  004F3A  0BFB               	andlw	251
 12789  004F3C  6ECA               	movwf	4042,c	;volatile
 12790                           
 12791                           ; BSR set to: 0
 12792  004F3E  0E00               	movlw	0
 12793  004F40  6ECC               	movwf	4044,c	;volatile
 12794                           
 12795                           ; BSR set to: 0
 12796  004F42  929E               	bcf	3998,1,c	;volatile
 12797                           
 12798                           ; BSR set to: 0
 12799  004F44  0100               	movlb	0	; () banked
 12800  004F46  AF60               	btfss	OpenTimer2@config& (0+255),7,b
 12801  004F48  D002               	goto	l814
 12802                           
 12803                           ; BSR set to: 0
 12804  004F4A  829D               	bsf	3997,1,c	;volatile
 12805  004F4C  D001               	goto	l815
 12806  004F4E                     l814:
 12807                           
 12808                           ; BSR set to: 0
 12809  004F4E  929D               	bcf	3997,1,c	;volatile
 12810  004F50                     l815:
 12811                           
 12812                           ; BSR set to: 0
 12813  004F50  84CA               	bsf	4042,2,c	;volatile
 12814                           
 12815                           ; BSR set to: 0
 12816  004F52  0012               	return		;funcret
 12817  004F54                     __end_of_OpenTimer2:
 12818                           	opt stack 0
 12819                           tblptru	equ	0xFF8
 12820                           tblptrh	equ	0xFF7
 12821                           tblptrl	equ	0xFF6
 12822                           tablat	equ	0xFF5
 12823                           prodh	equ	0xFF4
 12824                           prodl	equ	0xFF3
 12825                           intcon	equ	0xFF2
 12826                           postinc0	equ	0xFEE
 12827                           wreg	equ	0xFE8
 12828                           indf2	equ	0xFDF
 12829                           postinc2	equ	0xFDE
 12830                           postdec2	equ	0xFDD
 12831                           fsr2h	equ	0xFDA
 12832                           fsr2l	equ	0xFD9
 12833                           status	equ	0xFD8
 12834                           
 12835 ;; *************** function _OpenEPWM1 *****************
 12836 ;; Defined at:
 12837 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\PWM\ew1open.c"
 12838 ;; Parameters:    Size  Location     Type
 12839 ;;  period          1    wreg     unsigned char 
 12840 ;; Auto vars:     Size  Location     Type
 12841 ;;  period          1    0[BANK0 ] unsigned char 
 12842 ;; Return value:  Size  Location     Type
 12843 ;;		None               void
 12844 ;; Registers used:
 12845 ;;		wreg, status,2
 12846 ;; Tracked objects:
 12847 ;;		On entry : 0/0
 12848 ;;		On exit  : 0/0
 12849 ;;		Unchanged: 0/0
 12850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12852 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12854 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12855 ;;Total ram usage:        1 bytes
 12856 ;; Hardware stack levels used:    1
 12857 ;; Hardware stack levels required when called:    2
 12858 ;; This function calls:
 12859 ;;		Nothing
 12860 ;; This function is called by:
 12861 ;;		_main
 12862 ;; This function uses a non-reentrant model
 12863 ;;
 12864                           
 12865                           	psect	text40
 12866  004F84                     __ptext40:
 12867                           	opt stack 0
 12868  004F84                     _OpenEPWM1:
 12869                           	opt stack 28
 12870                           
 12871                           ; BSR set to: 0
 12872                           ;incstack = 0
 12873                           ;OpenEPWM1@period stored from wreg
 12874  004F84  0100               	movlb	0	; () banked
 12875  004F86  6F60               	movwf	OpenEPWM1@period& (0+255),b
 12876                           
 12877                           ; BSR set to: 0
 12878  004F88  0E0C               	movlw	12
 12879  004F8A  6EBA               	movwf	4026,c	;volatile
 12880                           
 12881                           ; BSR set to: 0
 12882  004F8C  94CA               	bcf	4042,2,c	;volatile
 12883                           
 12884                           ; BSR set to: 0
 12885  004F8E  C060  FFCB         	movff	OpenEPWM1@period,4043	;volatile
 12886                           
 12887                           ; BSR set to: 0
 12888  004F92  84CA               	bsf	4042,2,c	;volatile
 12889                           
 12890                           ; BSR set to: 0
 12891  004F94  0012               	return		;funcret
 12892  004F96                     __end_of_OpenEPWM1:
 12893                           	opt stack 0
 12894                           tblptru	equ	0xFF8
 12895                           tblptrh	equ	0xFF7
 12896                           tblptrl	equ	0xFF6
 12897                           tablat	equ	0xFF5
 12898                           prodh	equ	0xFF4
 12899                           prodl	equ	0xFF3
 12900                           intcon	equ	0xFF2
 12901                           postinc0	equ	0xFEE
 12902                           wreg	equ	0xFE8
 12903                           indf2	equ	0xFDF
 12904                           postinc2	equ	0xFDE
 12905                           postdec2	equ	0xFDD
 12906                           fsr2h	equ	0xFDA
 12907                           fsr2l	equ	0xFD9
 12908                           status	equ	0xFD8
 12909                           
 12910 ;; *************** function _ISR_bassa *****************
 12911 ;; Defined at:
 12912 ;;		line 97 in file "motore.c"
 12913 ;; Parameters:    Size  Location     Type
 12914 ;;		None
 12915 ;; Auto vars:     Size  Location     Type
 12916 ;;  i               1   33[COMRAM] unsigned char 
 12917 ;; Return value:  Size  Location     Type
 12918 ;;		None               void
 12919 ;; Registers used:
 12920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12921 ;; Tracked objects:
 12922 ;;		On entry : 0/0
 12923 ;;		On exit  : 0/0
 12924 ;;		Unchanged: 0/0
 12925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12928 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12929 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12930 ;;Total ram usage:       22 bytes
 12931 ;; Hardware stack levels used:    1
 12932 ;; Hardware stack levels required when called:    1
 12933 ;; This function calls:
 12934 ;;		_CANisRxReady
 12935 ;;		_CANreceiveMessage
 12936 ;; This function is called by:
 12937 ;;		Interrupt level 1
 12938 ;; This function uses a non-reentrant model
 12939 ;;
 12940                           
 12941                           	psect	intcodelo
 12942  000018                     __pintcodelo:
 12943                           	opt stack 0
 12944  000018                     _ISR_bassa:
 12945                           	opt stack 23
 12946                           
 12947                           ; BSR set to: 0
 12948                           ;incstack = 0
 12949  000018  CFD8 F011          	movff	status,??_ISR_bassa+4
 12950  00001C  CFE8 F012          	movff	wreg,??_ISR_bassa+5
 12951  000020  CFE0 F013          	movff	bsr,??_ISR_bassa+6
 12952  000024  CFFA F014          	movff	pclath,??_ISR_bassa+7
 12953  000028  CFFB F015          	movff	pclatu,??_ISR_bassa+8
 12954  00002C  CFE9 F016          	movff	fsr0l,??_ISR_bassa+9
 12955  000030  CFEA F017          	movff	fsr0h,??_ISR_bassa+10
 12956  000034  CFE1 F018          	movff	fsr1l,??_ISR_bassa+11
 12957  000038  CFE2 F019          	movff	fsr1h,??_ISR_bassa+12
 12958  00003C  CFD9 F01A          	movff	fsr2l,??_ISR_bassa+13
 12959  000040  CFDA F01B          	movff	fsr2h,??_ISR_bassa+14
 12960  000044  CFF3 F01C          	movff	prodl,??_ISR_bassa+15
 12961  000048  CFF4 F01D          	movff	prodh,??_ISR_bassa+16
 12962  00004C  CFF6 F01E          	movff	tblptrl,??_ISR_bassa+17
 12963  000050  CFF7 F01F          	movff	tblptrh,??_ISR_bassa+18
 12964  000054  CFF8 F020          	movff	tblptru,??_ISR_bassa+19
 12965  000058  CFF5 F021          	movff	tablat,??_ISR_bassa+20
 12966                           
 12967                           ;motore.c: 98: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 12968  00005C  B0A4               	btfsc	4004,0,c	;volatile
 12969  00005E  D002               	goto	i1l666
 12970  000060  A2A4               	btfss	4004,1,c	;volatile
 12971  000062  D05D               	goto	i1l5249
 12972  000064                     i1l666:
 12973                           
 12974                           ;motore.c: 99: if (PIR3bits.RXB0IF == 1) {
 12975  000064  A0A4               	btfss	4004,0,c	;volatile
 12976  000066  D002               	goto	i1l5215
 12977                           
 12978                           ;motore.c: 100: PORTCbits.RC1 = 1;
 12979  000068  8282               	bsf	3970,1,c	;volatile
 12980  00006A  D000               	goto	i1l5215
 12981  00006C                     i1l5215:
 12982                           
 12983                           ;motore.c: 101: }
 12984                           ;motore.c: 102: if (CANisRxReady()) {
 12985  00006C  ECB6  F027         	call	_CANisRxReady	;wreg free
 12986  000070  0900               	iorlw	0
 12987  000072  B4D8               	btfsc	status,2,c
 12988  000074  D051               	goto	i1l5245
 12989                           
 12990                           ;motore.c: 103: CANreceiveMessage(&msg);
 12991  000076  0EE6               	movlw	low _msg
 12992  000078  6E01               	movwf	CANreceiveMessage@msg,c
 12993  00007A  0E00               	movlw	high _msg
 12994  00007C  6E02               	movwf	CANreceiveMessage@msg+1,c
 12995  00007E  ECEC  F012         	call	_CANreceiveMessage	;wreg free
 12996                           
 12997                           ;motore.c: 104: remote_frame = msg.RTR;
 12998  000082  0100               	movlb	0	; () banked
 12999  000084  B1F4               	btfsc	(_msg+14)& (0+255),0,b
 13000  000086  D002               	bra	i1u632_25
 13001  000088  9E40               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
 13002  00008A  D001               	bra	i1u632_26
 13003  00008C                     i1u632_25:
 13004  00008C  8E40               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
 13005  00008E                     i1u632_26:
 13006                           
 13007                           ;motore.c: 105: id = msg.identifier;
 13008  00008E  C0E6  F023         	movff	_msg,_id	;volatile
 13009  000092  C0E7  F024         	movff	_msg+1,_id+1	;volatile
 13010  000096  C0E8  F025         	movff	_msg+2,_id+2	;volatile
 13011  00009A  C0E9  F026         	movff	_msg+3,_id+3	;volatile
 13012                           
 13013                           ;motore.c: 106: for (char i = 0; i < 8; i++) {
 13014  00009E  0E00               	movlw	0
 13015  0000A0  6E22               	movwf	ISR_bassa@i,c
 13016  0000A2                     i1l5225:
 13017  0000A2  0E07               	movlw	7
 13018  0000A4  6422               	cpfsgt	ISR_bassa@i,c
 13019  0000A6  D001               	goto	i1l5229
 13020  0000A8  D014               	goto	i1l5235
 13021  0000AA                     i1l5229:
 13022                           
 13023                           ;motore.c: 107: data_array[i] = msg.data[i];
 13024  0000AA  5022               	movf	ISR_bassa@i,w,c
 13025  0000AC  0D01               	mullw	1
 13026  0000AE  0EEA               	movlw	low (_msg+4)
 13027  0000B0  24F3               	addwf	prodl,w,c
 13028  0000B2  6ED9               	movwf	fsr2l,c
 13029  0000B4  0E00               	movlw	high (_msg+4)
 13030  0000B6  20F4               	addwfc	prodh,w,c
 13031  0000B8  6EDA               	movwf	fsr2h,c
 13032  0000BA  5022               	movf	ISR_bassa@i,w,c
 13033  0000BC  0D01               	mullw	1
 13034  0000BE  0E37               	movlw	low _data_array
 13035  0000C0  24F3               	addwf	prodl,w,c
 13036  0000C2  6EE1               	movwf	fsr1l,c
 13037  0000C4  0E00               	movlw	high _data_array
 13038  0000C6  20F4               	addwfc	prodh,w,c
 13039  0000C8  6EE2               	movwf	fsr1h,c
 13040  0000CA  CFDF FFE7          	movff	indf2,indf1
 13041  0000CE  2A22               	incf	ISR_bassa@i,f,c
 13042  0000D0  D7E8               	goto	i1l5225
 13043  0000D2                     i1l5235:
 13044                           
 13045                           ;motore.c: 108: }
 13046                           ;motore.c: 109: if (id == 0b00000000101) {
 13047  0000D2  0E05               	movlw	5
 13048  0000D4  1823               	xorwf	_id,w,c	;volatile
 13049  0000D6  1024               	iorwf	_id+1,w,c	;volatile
 13050  0000D8  1025               	iorwf	_id+2,w,c	;volatile
 13051  0000DA  1026               	iorwf	_id+3,w,c	;volatile
 13052  0000DC  A4D8               	btfss	status,2,c
 13053  0000DE  D01A               	goto	i1l5243
 13054                           
 13055                           ;motore.c: 110: requestSpeed = data_array[1];
 13056  0000E0  5038               	movf	_data_array+1,w,c
 13057  0000E2  6E2B               	movwf	_requestSpeed,c	;volatile
 13058  0000E4  6A2C               	clrf	_requestSpeed+1,c	;volatile
 13059  0000E6  6A2D               	clrf	_requestSpeed+2,c	;volatile
 13060  0000E8  6A2E               	clrf	_requestSpeed+3,c	;volatile
 13061                           
 13062                           ;motore.c: 111: requestSpeed = ((requestSpeed << 8) | data_array[0]);
 13063  0000EA  5037               	movf	_data_array,w,c
 13064  0000EC  C02B  F00E         	movff	_requestSpeed,??_ISR_bassa+1	;volatile
 13065  0000F0  C02C  F00F         	movff	_requestSpeed+1,??_ISR_bassa+2	;volatile
 13066  0000F4  C02D  F010         	movff	_requestSpeed+2,??_ISR_bassa+3	;volatile
 13067  0000F8  6A0D               	clrf	??_ISR_bassa& (0+255),c
 13068  0000FA  100D               	iorwf	??_ISR_bassa,w,c
 13069  0000FC  6E2B               	movwf	_requestSpeed,c	;volatile
 13070  0000FE  500E               	movf	??_ISR_bassa+1,w,c
 13071  000100  6E2C               	movwf	_requestSpeed+1,c	;volatile
 13072  000102  500F               	movf	??_ISR_bassa+2,w,c
 13073  000104  6E2D               	movwf	_requestSpeed+2,c	;volatile
 13074  000106  5010               	movf	??_ISR_bassa+3,w,c
 13075  000108  6E2E               	movwf	_requestSpeed+3,c	;volatile
 13076                           
 13077                           ;motore.c: 112: dir = data_array[2];
 13078  00010A  C039  F0FD         	movff	_data_array+2,_dir	;volatile
 13079  00010E  0100               	movlb	0	; () banked
 13080  000110  6BFE               	clrf	(_dir+1)& (0+255),b	;volatile
 13081  000112  D000               	goto	i1l5243
 13082  000114                     i1l5243:
 13083                           
 13084                           ;motore.c: 113: }
 13085                           ;motore.c: 114: new_message = 1;
 13086  000114  8C40               	bsf	_new_message/(0+8),_new_message& (0+7),c	;volatile
 13087  000116  D000               	goto	i1l5245
 13088  000118                     i1l5245:
 13089                           
 13090                           ;motore.c: 115: }
 13091                           ;motore.c: 116: PIR3bits.RXB0IF = 0;
 13092  000118  90A4               	bcf	4004,0,c	;volatile
 13093                           
 13094                           ;motore.c: 117: PIR3bits.RXB1IF = 0;
 13095  00011A  92A4               	bcf	4004,1,c	;volatile
 13096  00011C  D000               	goto	i1l5249
 13097  00011E                     i1l5249:
 13098                           
 13099                           ;motore.c: 118: }
 13100                           ;motore.c: 120: if (PIR2bits.TMR3IF) {
 13101  00011E  A2A1               	btfss	4001,1,c	;volatile
 13102  000120  D00D               	goto	i1l673
 13103                           
 13104                           ;motore.c: 121: timeCounter++;
 13105  000122  0E01               	movlw	1
 13106  000124  0100               	movlb	0	; () banked
 13107  000126  27D7               	addwf	_timeCounter& (0+255),f,b	;volatile
 13108  000128  0E00               	movlw	0
 13109  00012A  23D8               	addwfc	(_timeCounter+1)& (0+255),f,b	;volatile
 13110  00012C  23D9               	addwfc	(_timeCounter+2)& (0+255),f,b	;volatile
 13111  00012E  23DA               	addwfc	(_timeCounter+3)& (0+255),f,b	;volatile
 13112                           
 13113                           ; BSR set to: 0
 13114                           ;motore.c: 122: TMR3H = 0x63;
 13115  000130  0E63               	movlw	99
 13116  000132  6EB3               	movwf	4019,c	;volatile
 13117                           
 13118                           ; BSR set to: 0
 13119                           ;motore.c: 123: TMR3L = 0xC0;
 13120  000134  0EC0               	movlw	192
 13121  000136  6EB2               	movwf	4018,c	;volatile
 13122                           
 13123                           ; BSR set to: 0
 13124                           ;motore.c: 124: PIR2bits.TMR3IF = 0;
 13125  000138  92A1               	bcf	4001,1,c	;volatile
 13126  00013A  D000               	goto	i1l673
 13127  00013C                     i1l673:
 13128  00013C  C021  FFF5         	movff	??_ISR_bassa+20,tablat
 13129  000140  C020  FFF8         	movff	??_ISR_bassa+19,tblptru
 13130  000144  C01F  FFF7         	movff	??_ISR_bassa+18,tblptrh
 13131  000148  C01E  FFF6         	movff	??_ISR_bassa+17,tblptrl
 13132  00014C  C01D  FFF4         	movff	??_ISR_bassa+16,prodh
 13133  000150  C01C  FFF3         	movff	??_ISR_bassa+15,prodl
 13134  000154  C01B  FFDA         	movff	??_ISR_bassa+14,fsr2h
 13135  000158  C01A  FFD9         	movff	??_ISR_bassa+13,fsr2l
 13136  00015C  C019  FFE2         	movff	??_ISR_bassa+12,fsr1h
 13137  000160  C018  FFE1         	movff	??_ISR_bassa+11,fsr1l
 13138  000164  C017  FFEA         	movff	??_ISR_bassa+10,fsr0h
 13139  000168  C016  FFE9         	movff	??_ISR_bassa+9,fsr0l
 13140  00016C  C015  FFFB         	movff	??_ISR_bassa+8,pclatu
 13141  000170  C014  FFFA         	movff	??_ISR_bassa+7,pclath
 13142  000174  C013  FFE0         	movff	??_ISR_bassa+6,bsr
 13143  000178  C012  FFE8         	movff	??_ISR_bassa+5,wreg
 13144  00017C  C011  FFD8         	movff	??_ISR_bassa+4,status
 13145  000180  0010               	retfie	
 13146  000182                     __end_of_ISR_bassa:
 13147                           	opt stack 0
 13148                           pclatu	equ	0xFFB
 13149                           pclath	equ	0xFFA
 13150                           tblptru	equ	0xFF8
 13151                           tblptrh	equ	0xFF7
 13152                           tblptrl	equ	0xFF6
 13153                           tablat	equ	0xFF5
 13154                           prodh	equ	0xFF4
 13155                           prodl	equ	0xFF3
 13156                           intcon	equ	0xFF2
 13157                           postinc0	equ	0xFEE
 13158                           fsr0h	equ	0xFEA
 13159                           fsr0l	equ	0xFE9
 13160                           wreg	equ	0xFE8
 13161                           indf1	equ	0xFE7
 13162                           fsr1h	equ	0xFE2
 13163                           fsr1l	equ	0xFE1
 13164                           bsr	equ	0xFE0
 13165                           indf2	equ	0xFDF
 13166                           postinc2	equ	0xFDE
 13167                           postdec2	equ	0xFDD
 13168                           fsr2h	equ	0xFDA
 13169                           fsr2l	equ	0xFD9
 13170                           status	equ	0xFD8
 13171                           
 13172 ;; *************** function _CANreceiveMessage *****************
 13173 ;; Defined at:
 13174 ;;		line 528 in file "CANlib.h"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;  msg             2    0[COMRAM] PTR struct .
 13177 ;;		 -> msg(15), 
 13178 ;; Auto vars:     Size  Location     Type
 13179 ;;  tamp            1   11[COMRAM] unsigned char 
 13180 ;;  error           1   10[COMRAM] unsigned char 
 13181 ;; Return value:  Size  Location     Type
 13182 ;;                  1    wreg      unsigned char 
 13183 ;; Registers used:
 13184 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13185 ;; Tracked objects:
 13186 ;;		On entry : 0/0
 13187 ;;		On exit  : 0/0
 13188 ;;		Unchanged: 0/0
 13189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13192 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13193 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13194 ;;Total ram usage:       12 bytes
 13195 ;; Hardware stack levels used:    1
 13196 ;; This function calls:
 13197 ;;		Nothing
 13198 ;; This function is called by:
 13199 ;;		_ISR_bassa
 13200 ;; This function uses a non-reentrant model
 13201 ;;
 13202                           
 13203                           	psect	text42
 13204  0025D8                     __ptext42:
 13205                           	opt stack 0
 13206  0025D8                     _CANreceiveMessage:
 13207                           	opt stack 23
 13208                           
 13209                           ;CANlib.h: 530: BYTE tamp;
 13210                           ;CANlib.h: 531: BYTE error = 0;
 13211                           
 13212                           ;incstack = 0
 13213  0025D8  0E00               	movlw	0
 13214  0025DA  6E0B               	movwf	CANreceiveMessage@error,c
 13215                           
 13216                           ;CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 13217  0025DC  AE74               	btfss	3956,7,c	;volatile
 13218  0025DE  D002               	goto	i1l4793
 13219                           
 13220                           ;CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 13221  0025E0  800B               	bsf	CANreceiveMessage@error,0,c
 13222  0025E2  D000               	goto	i1l4793
 13223  0025E4                     i1l4793:
 13224                           
 13225                           ;CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 13226  0025E4  AC74               	btfss	3956,6,c	;volatile
 13227  0025E6  D002               	goto	i1l4797
 13228                           
 13229                           ;CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 13230  0025E8  820B               	bsf	CANreceiveMessage@error,1,c
 13231  0025EA  D000               	goto	i1l4797
 13232  0025EC                     i1l4797:
 13233                           
 13234                           ;CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 13235  0025EC  010F               	movlb	15	; () banked
 13236  0025EE  AF50               	btfss	80,7,b	;volatile
 13237  0025F0  D149               	goto	i1l416
 13238                           
 13239                           ; BSR set to: 15
 13240                           ;CANlib.h: 541: {
 13241                           ;CANlib.h: 542: msg->identifier = 0;
 13242  0025F2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13243  0025F6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13244  0025FA  6ADE               	clrf	postinc2,c
 13245  0025FC  6ADE               	clrf	postinc2,c
 13246  0025FE  6ADE               	clrf	postinc2,c
 13247  002600  6ADD               	clrf	postdec2,c
 13248                           
 13249                           ; BSR set to: 15
 13250                           ;CANlib.h: 543: msg->data[0] =RXB1D0;
 13251  002602  EE20 F004          	lfsr	2,4
 13252  002606  5001               	movf	CANreceiveMessage@msg,w,c
 13253  002608  26D9               	addwf	fsr2l,f,c
 13254  00260A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13255  00260C  22DA               	addwfc	fsr2h,f,c
 13256  00260E  CF56 FFDF          	movff	3926,indf2	;volatile
 13257                           
 13258                           ; BSR set to: 15
 13259                           ;CANlib.h: 544: msg->data[1] =RXB1D1;
 13260  002612  EE20 F005          	lfsr	2,5
 13261  002616  5001               	movf	CANreceiveMessage@msg,w,c
 13262  002618  26D9               	addwf	fsr2l,f,c
 13263  00261A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13264  00261C  22DA               	addwfc	fsr2h,f,c
 13265  00261E  CF57 FFDF          	movff	3927,indf2	;volatile
 13266                           
 13267                           ; BSR set to: 15
 13268                           ;CANlib.h: 545: msg->data[2] =RXB1D2;
 13269  002622  EE20 F006          	lfsr	2,6
 13270  002626  5001               	movf	CANreceiveMessage@msg,w,c
 13271  002628  26D9               	addwf	fsr2l,f,c
 13272  00262A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13273  00262C  22DA               	addwfc	fsr2h,f,c
 13274  00262E  CF58 FFDF          	movff	3928,indf2	;volatile
 13275                           
 13276                           ; BSR set to: 15
 13277                           ;CANlib.h: 546: msg->data[3] =RXB1D3;
 13278  002632  EE20 F007          	lfsr	2,7
 13279  002636  5001               	movf	CANreceiveMessage@msg,w,c
 13280  002638  26D9               	addwf	fsr2l,f,c
 13281  00263A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13282  00263C  22DA               	addwfc	fsr2h,f,c
 13283  00263E  CF59 FFDF          	movff	3929,indf2	;volatile
 13284                           
 13285                           ; BSR set to: 15
 13286                           ;CANlib.h: 547: msg->data[4] =RXB1D4;
 13287  002642  EE20 F008          	lfsr	2,8
 13288  002646  5001               	movf	CANreceiveMessage@msg,w,c
 13289  002648  26D9               	addwf	fsr2l,f,c
 13290  00264A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13291  00264C  22DA               	addwfc	fsr2h,f,c
 13292  00264E  CF5A FFDF          	movff	3930,indf2	;volatile
 13293                           
 13294                           ; BSR set to: 15
 13295                           ;CANlib.h: 548: msg->data[5] =RXB1D5;
 13296  002652  EE20 F009          	lfsr	2,9
 13297  002656  5001               	movf	CANreceiveMessage@msg,w,c
 13298  002658  26D9               	addwf	fsr2l,f,c
 13299  00265A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13300  00265C  22DA               	addwfc	fsr2h,f,c
 13301  00265E  CF5B FFDF          	movff	3931,indf2	;volatile
 13302                           
 13303                           ; BSR set to: 15
 13304                           ;CANlib.h: 549: msg->data[6] =RXB1D6;
 13305  002662  EE20 F00A          	lfsr	2,10
 13306  002666  5001               	movf	CANreceiveMessage@msg,w,c
 13307  002668  26D9               	addwf	fsr2l,f,c
 13308  00266A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13309  00266C  22DA               	addwfc	fsr2h,f,c
 13310  00266E  CF5C FFDF          	movff	3932,indf2	;volatile
 13311                           
 13312                           ; BSR set to: 15
 13313                           ;CANlib.h: 550: msg->data[7] =RXB1D7;
 13314  002672  EE20 F00B          	lfsr	2,11
 13315  002676  5001               	movf	CANreceiveMessage@msg,w,c
 13316  002678  26D9               	addwf	fsr2l,f,c
 13317  00267A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13318  00267C  22DA               	addwfc	fsr2h,f,c
 13319  00267E  CF5D FFDF          	movff	3933,indf2	;volatile
 13320                           
 13321                           ; BSR set to: 15
 13322                           ;CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 13323  002682  EE20 F00E          	lfsr	2,14
 13324  002686  5001               	movf	CANreceiveMessage@msg,w,c
 13325  002688  26D9               	addwf	fsr2l,f,c
 13326  00268A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13327  00268C  22DA               	addwfc	fsr2h,f,c
 13328  00268E  010F               	movlb	15	; () banked
 13329  002690  AD55               	btfss	85,6,b	;volatile
 13330  002692  D002               	goto	i1u570_20
 13331  002694  0E01               	movlw	1
 13332  002696  D001               	goto	i1u570_26
 13333  002698                     i1u570_20:
 13334  002698  0E00               	movlw	0
 13335  00269A                     i1u570_26:
 13336  00269A  6EDF               	movwf	indf2,c
 13337                           
 13338                           ; BSR set to: 15
 13339                           ;CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 13340  00269C  EE20 F00D          	lfsr	2,13
 13341  0026A0  5001               	movf	CANreceiveMessage@msg,w,c
 13342  0026A2  26D9               	addwf	fsr2l,f,c
 13343  0026A4  5002               	movf	CANreceiveMessage@msg+1,w,c
 13344  0026A6  22DA               	addwfc	fsr2h,f,c
 13345  0026A8  010F               	movlb	15	; () banked
 13346  0026AA  5155               	movf	85,w,b	;volatile
 13347  0026AC  0B0F               	andlw	15
 13348  0026AE  6EDF               	movwf	indf2,c
 13349                           
 13350                           ; BSR set to: 15
 13351                           ;CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 13352  0026B0  EE20 F00C          	lfsr	2,12
 13353  0026B4  5001               	movf	CANreceiveMessage@msg,w,c
 13354  0026B6  26D9               	addwf	fsr2l,f,c
 13355  0026B8  5002               	movf	CANreceiveMessage@msg+1,w,c
 13356  0026BA  22DA               	addwfc	fsr2h,f,c
 13357  0026BC  010F               	movlb	15	; () banked
 13358  0026BE  A752               	btfss	82,3,b	;volatile
 13359  0026C0  D002               	goto	i1u571_20
 13360  0026C2  0E01               	movlw	1
 13361  0026C4  D001               	goto	i1u571_26
 13362  0026C6                     i1u571_20:
 13363  0026C6  0E00               	movlw	0
 13364  0026C8                     i1u571_26:
 13365  0026C8  6EDF               	movwf	indf2,c
 13366                           
 13367                           ; BSR set to: 15
 13368                           ;CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 13369  0026CA  010F               	movlb	15	; () banked
 13370  0026CC  B752               	btfsc	82,3,b	;volatile
 13371  0026CE  D044               	goto	i1l4831
 13372                           
 13373                           ; BSR set to: 15
 13374                           ;CANlib.h: 559: {
 13375                           ;CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 13376  0026D0  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 13377  0026D4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13378  0026D6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13379  0026D8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13380  0026DA  0E03               	movlw	3
 13381  0026DC                     i1u573_25:
 13382  0026DC  90D8               	bcf	status,0,c
 13383  0026DE  3603               	rlcf	??_CANreceiveMessage,f,c
 13384  0026E0  3604               	rlcf	??_CANreceiveMessage+1,f,c
 13385  0026E2  3605               	rlcf	??_CANreceiveMessage+2,f,c
 13386  0026E4  3606               	rlcf	??_CANreceiveMessage+3,f,c
 13387  0026E6  2EE8               	decfsz	wreg,f,c
 13388  0026E8  D7F9               	goto	i1u573_25
 13389  0026EA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13390  0026EE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13391  0026F2  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 13392  0026F6  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 13393  0026FA  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 13394  0026FE  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 13395                           
 13396                           ; BSR set to: 15
 13397                           ;CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 13398  002702  010F               	movlb	15	; () banked
 13399  002704  3952               	swapf	82,w,b	;volatile
 13400  002706  42E8               	rrncf	wreg,f,c
 13401  002708  0B07               	andlw	7
 13402  00270A  0B07               	andlw	7
 13403  00270C  6E0C               	movwf	CANreceiveMessage@tamp,c
 13404                           
 13405                           ; BSR set to: 15
 13406                           ;CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 13407  00270E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13408  002712  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13409  002716  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 13410  00271A  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 13411  00271E  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 13412  002722  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 13413  002726  500C               	movf	CANreceiveMessage@tamp,w,c
 13414  002728  2403               	addwf	??_CANreceiveMessage,w,c
 13415  00272A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 13416  00272C  0E00               	movlw	0
 13417  00272E  2004               	addwfc	??_CANreceiveMessage+1,w,c
 13418  002730  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 13419  002732  0E00               	movlw	0
 13420  002734  2005               	addwfc	??_CANreceiveMessage+2,w,c
 13421  002736  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 13422  002738  0E00               	movlw	0
 13423  00273A  2006               	addwfc	??_CANreceiveMessage+3,w,c
 13424  00273C  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 13425  00273E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13426  002742  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13427  002746  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 13428  00274A  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 13429  00274E  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 13430  002752  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 13431                           
 13432                           ;CANlib.h: 563: }
 13433  002756  D093               	goto	i1l4857
 13434  002758                     i1l4831:
 13435                           
 13436                           ; BSR set to: 15
 13437                           ;CANlib.h: 564: else
 13438                           ;CANlib.h: 565: {
 13439                           ;CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 13440  002758  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 13441  00275C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13442  00275E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13443  002760  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13444  002762  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13445  002766  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13446  00276A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 13447  00276E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 13448  002772  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 13449  002776  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 13450                           
 13451                           ; BSR set to: 15
 13452                           ;CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 13453  00277A  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 13454  00277E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13455  002780  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13456  002782  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13457  002784  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 13458  002788  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 13459  00278C  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 13460  002790  6A03               	clrf	??_CANreceiveMessage,c
 13461  002792  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13462  002796  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13463  00279A  5003               	movf	??_CANreceiveMessage,w,c
 13464  00279C  26DE               	addwf	postinc2,f,c
 13465  00279E  5004               	movf	??_CANreceiveMessage+1,w,c
 13466  0027A0  22DE               	addwfc	postinc2,f,c
 13467  0027A2  5005               	movf	??_CANreceiveMessage+2,w,c
 13468  0027A4  22DE               	addwfc	postinc2,f,c
 13469  0027A6  5006               	movf	??_CANreceiveMessage+3,w,c
 13470  0027A8  22DE               	addwfc	postinc2,f,c
 13471                           
 13472                           ; BSR set to: 15
 13473                           ;CANlib.h: 569: if (RXB1SIDLbits.EID16)
 13474  0027AA  010F               	movlb	15	; () banked
 13475  0027AC  A152               	btfss	82,0,b	;volatile
 13476  0027AE  D00D               	goto	i1l4839
 13477                           
 13478                           ; BSR set to: 15
 13479                           ;CANlib.h: 570: msg->identifier |= 0x00010000;
 13480  0027B0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13481  0027B4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13482  0027B8  0E00               	movlw	0
 13483  0027BA  12DE               	iorwf	postinc2,f,c
 13484  0027BC  0E00               	movlw	0
 13485  0027BE  12DE               	iorwf	postinc2,f,c
 13486  0027C0  0E01               	movlw	1
 13487  0027C2  12DE               	iorwf	postinc2,f,c
 13488  0027C4  0E00               	movlw	0
 13489  0027C6  12DE               	iorwf	postinc2,f,c
 13490  0027C8  D000               	goto	i1l4839
 13491  0027CA                     i1l4839:
 13492                           
 13493                           ; BSR set to: 15
 13494                           ;CANlib.h: 571: if (RXB1SIDLbits.EID17)
 13495  0027CA  010F               	movlb	15	; () banked
 13496  0027CC  A352               	btfss	82,1,b	;volatile
 13497  0027CE  D00D               	goto	i1l4843
 13498                           
 13499                           ; BSR set to: 15
 13500                           ;CANlib.h: 572: msg->identifier |= 0x00020000;
 13501  0027D0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13502  0027D4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13503  0027D8  0E00               	movlw	0
 13504  0027DA  12DE               	iorwf	postinc2,f,c
 13505  0027DC  0E00               	movlw	0
 13506  0027DE  12DE               	iorwf	postinc2,f,c
 13507  0027E0  0E02               	movlw	2
 13508  0027E2  12DE               	iorwf	postinc2,f,c
 13509  0027E4  0E00               	movlw	0
 13510  0027E6  12DE               	iorwf	postinc2,f,c
 13511  0027E8  D000               	goto	i1l4843
 13512  0027EA                     i1l4843:
 13513                           
 13514                           ; BSR set to: 15
 13515                           ;CANlib.h: 573: if (RXB1SIDLbits.SID0)
 13516  0027EA  010F               	movlb	15	; () banked
 13517  0027EC  AB52               	btfss	82,5,b	;volatile
 13518  0027EE  D00D               	goto	i1l4847
 13519                           
 13520                           ; BSR set to: 15
 13521                           ;CANlib.h: 574: msg->identifier |= 0x00040000;
 13522  0027F0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13523  0027F4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13524  0027F8  0E00               	movlw	0
 13525  0027FA  12DE               	iorwf	postinc2,f,c
 13526  0027FC  0E00               	movlw	0
 13527  0027FE  12DE               	iorwf	postinc2,f,c
 13528  002800  0E04               	movlw	4
 13529  002802  12DE               	iorwf	postinc2,f,c
 13530  002804  0E00               	movlw	0
 13531  002806  12DE               	iorwf	postinc2,f,c
 13532  002808  D000               	goto	i1l4847
 13533  00280A                     i1l4847:
 13534                           
 13535                           ; BSR set to: 15
 13536                           ;CANlib.h: 575: if (RXB1SIDLbits.SID1)
 13537  00280A  010F               	movlb	15	; () banked
 13538  00280C  AD52               	btfss	82,6,b	;volatile
 13539  00280E  D00D               	goto	i1l4851
 13540                           
 13541                           ; BSR set to: 15
 13542                           ;CANlib.h: 576: msg->identifier |= 0x00080000;
 13543  002810  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13544  002814  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13545  002818  0E00               	movlw	0
 13546  00281A  12DE               	iorwf	postinc2,f,c
 13547  00281C  0E00               	movlw	0
 13548  00281E  12DE               	iorwf	postinc2,f,c
 13549  002820  0E08               	movlw	8
 13550  002822  12DE               	iorwf	postinc2,f,c
 13551  002824  0E00               	movlw	0
 13552  002826  12DE               	iorwf	postinc2,f,c
 13553  002828  D000               	goto	i1l4851
 13554  00282A                     i1l4851:
 13555                           
 13556                           ; BSR set to: 15
 13557                           ;CANlib.h: 577: if (RXB1SIDLbits.SID2)
 13558  00282A  010F               	movlb	15	; () banked
 13559  00282C  AF52               	btfss	82,7,b	;volatile
 13560  00282E  D00D               	goto	i1l4855
 13561                           
 13562                           ; BSR set to: 15
 13563                           ;CANlib.h: 578: msg->identifier |= 0x00100000;
 13564  002830  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13565  002834  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13566  002838  0E00               	movlw	0
 13567  00283A  12DE               	iorwf	postinc2,f,c
 13568  00283C  0E00               	movlw	0
 13569  00283E  12DE               	iorwf	postinc2,f,c
 13570  002840  0E10               	movlw	16
 13571  002842  12DE               	iorwf	postinc2,f,c
 13572  002844  0E00               	movlw	0
 13573  002846  12DE               	iorwf	postinc2,f,c
 13574  002848  D000               	goto	i1l4855
 13575  00284A                     i1l4855:
 13576                           
 13577                           ; BSR set to: 15
 13578                           ;CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 13579  00284A  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 13580  00284E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13581  002850  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13582  002852  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13583  002854  0E15               	movlw	21
 13584  002856                     i1u579_25:
 13585  002856  90D8               	bcf	status,0,c
 13586  002858  3603               	rlcf	??_CANreceiveMessage,f,c
 13587  00285A  3604               	rlcf	??_CANreceiveMessage+1,f,c
 13588  00285C  3605               	rlcf	??_CANreceiveMessage+2,f,c
 13589  00285E  3606               	rlcf	??_CANreceiveMessage+3,f,c
 13590  002860  2EE8               	decfsz	wreg,f,c
 13591  002862  D7F9               	goto	i1u579_25
 13592  002864  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13593  002868  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13594  00286C  5003               	movf	??_CANreceiveMessage,w,c
 13595  00286E  12DE               	iorwf	postinc2,f,c
 13596  002870  5004               	movf	??_CANreceiveMessage+1,w,c
 13597  002872  12DE               	iorwf	postinc2,f,c
 13598  002874  5005               	movf	??_CANreceiveMessage+2,w,c
 13599  002876  12DE               	iorwf	postinc2,f,c
 13600  002878  5006               	movf	??_CANreceiveMessage+3,w,c
 13601  00287A  12DE               	iorwf	postinc2,f,c
 13602  00287C  D000               	goto	i1l4857
 13603  00287E                     i1l4857:
 13604                           
 13605                           ; BSR set to: 15
 13606                           ;CANlib.h: 581: }
 13607                           ;CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 13608  00287E  010F               	movlb	15	; () banked
 13609  002880  9F50               	bcf	80,7,b	;volatile
 13610                           
 13611                           ; BSR set to: 15
 13612                           ;CANlib.h: 584: return (error);
 13613                           ;	Return value of _CANreceiveMessage is never used
 13614  002882  0012               	return	
 13615  002884                     i1l416:
 13616                           
 13617                           ; BSR set to: 15
 13618                           ;CANlib.h: 585: }
 13619                           ;CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 13620  002884  AE60               	btfss	3936,7,c	;volatile
 13621  002886  0012               	return	
 13622                           
 13623                           ; BSR set to: 15
 13624                           ;CANlib.h: 588: {
 13625                           ;CANlib.h: 589: msg->identifier = 0;
 13626  002888  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13627  00288C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13628  002890  6ADE               	clrf	postinc2,c
 13629  002892  6ADE               	clrf	postinc2,c
 13630  002894  6ADE               	clrf	postinc2,c
 13631  002896  6ADD               	clrf	postdec2,c
 13632                           
 13633                           ; BSR set to: 15
 13634                           ;CANlib.h: 590: msg->data[0] =RXB0D0;
 13635  002898  EE20 F004          	lfsr	2,4
 13636  00289C  5001               	movf	CANreceiveMessage@msg,w,c
 13637  00289E  26D9               	addwf	fsr2l,f,c
 13638  0028A0  5002               	movf	CANreceiveMessage@msg+1,w,c
 13639  0028A2  22DA               	addwfc	fsr2h,f,c
 13640  0028A4  CF66 FFDF          	movff	3942,indf2	;volatile
 13641                           
 13642                           ; BSR set to: 15
 13643                           ;CANlib.h: 591: msg->data[1] =RXB0D1;
 13644  0028A8  EE20 F005          	lfsr	2,5
 13645  0028AC  5001               	movf	CANreceiveMessage@msg,w,c
 13646  0028AE  26D9               	addwf	fsr2l,f,c
 13647  0028B0  5002               	movf	CANreceiveMessage@msg+1,w,c
 13648  0028B2  22DA               	addwfc	fsr2h,f,c
 13649  0028B4  CF67 FFDF          	movff	3943,indf2	;volatile
 13650                           
 13651                           ; BSR set to: 15
 13652                           ;CANlib.h: 592: msg->data[2] =RXB0D2;
 13653  0028B8  EE20 F006          	lfsr	2,6
 13654  0028BC  5001               	movf	CANreceiveMessage@msg,w,c
 13655  0028BE  26D9               	addwf	fsr2l,f,c
 13656  0028C0  5002               	movf	CANreceiveMessage@msg+1,w,c
 13657  0028C2  22DA               	addwfc	fsr2h,f,c
 13658  0028C4  CF68 FFDF          	movff	3944,indf2	;volatile
 13659                           
 13660                           ; BSR set to: 15
 13661                           ;CANlib.h: 593: msg->data[3] =RXB0D3;
 13662  0028C8  EE20 F007          	lfsr	2,7
 13663  0028CC  5001               	movf	CANreceiveMessage@msg,w,c
 13664  0028CE  26D9               	addwf	fsr2l,f,c
 13665  0028D0  5002               	movf	CANreceiveMessage@msg+1,w,c
 13666  0028D2  22DA               	addwfc	fsr2h,f,c
 13667  0028D4  CF69 FFDF          	movff	3945,indf2	;volatile
 13668                           
 13669                           ; BSR set to: 15
 13670                           ;CANlib.h: 594: msg->data[4] =RXB0D4;
 13671  0028D8  EE20 F008          	lfsr	2,8
 13672  0028DC  5001               	movf	CANreceiveMessage@msg,w,c
 13673  0028DE  26D9               	addwf	fsr2l,f,c
 13674  0028E0  5002               	movf	CANreceiveMessage@msg+1,w,c
 13675  0028E2  22DA               	addwfc	fsr2h,f,c
 13676  0028E4  CF6A FFDF          	movff	3946,indf2	;volatile
 13677                           
 13678                           ; BSR set to: 15
 13679                           ;CANlib.h: 595: msg->data[5] =RXB0D5;
 13680  0028E8  EE20 F009          	lfsr	2,9
 13681  0028EC  5001               	movf	CANreceiveMessage@msg,w,c
 13682  0028EE  26D9               	addwf	fsr2l,f,c
 13683  0028F0  5002               	movf	CANreceiveMessage@msg+1,w,c
 13684  0028F2  22DA               	addwfc	fsr2h,f,c
 13685  0028F4  CF6B FFDF          	movff	3947,indf2	;volatile
 13686                           
 13687                           ; BSR set to: 15
 13688                           ;CANlib.h: 596: msg->data[6] =RXB0D6;
 13689  0028F8  EE20 F00A          	lfsr	2,10
 13690  0028FC  5001               	movf	CANreceiveMessage@msg,w,c
 13691  0028FE  26D9               	addwf	fsr2l,f,c
 13692  002900  5002               	movf	CANreceiveMessage@msg+1,w,c
 13693  002902  22DA               	addwfc	fsr2h,f,c
 13694  002904  CF6C FFDF          	movff	3948,indf2	;volatile
 13695                           
 13696                           ; BSR set to: 15
 13697                           ;CANlib.h: 597: msg->data[7] =RXB0D7;
 13698  002908  EE20 F00B          	lfsr	2,11
 13699  00290C  5001               	movf	CANreceiveMessage@msg,w,c
 13700  00290E  26D9               	addwf	fsr2l,f,c
 13701  002910  5002               	movf	CANreceiveMessage@msg+1,w,c
 13702  002912  22DA               	addwfc	fsr2h,f,c
 13703  002914  CF6D FFDF          	movff	3949,indf2	;volatile
 13704                           
 13705                           ; BSR set to: 15
 13706                           ;CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 13707  002918  EE20 F00E          	lfsr	2,14
 13708  00291C  5001               	movf	CANreceiveMessage@msg,w,c
 13709  00291E  26D9               	addwf	fsr2l,f,c
 13710  002920  5002               	movf	CANreceiveMessage@msg+1,w,c
 13711  002922  22DA               	addwfc	fsr2h,f,c
 13712  002924  AC65               	btfss	3941,6,c	;volatile
 13713  002926  D002               	goto	i1u581_20
 13714  002928  0E01               	movlw	1
 13715  00292A  D001               	goto	i1u581_26
 13716  00292C                     i1u581_20:
 13717  00292C  0E00               	movlw	0
 13718  00292E                     i1u581_26:
 13719  00292E  6EDF               	movwf	indf2,c
 13720                           
 13721                           ; BSR set to: 15
 13722                           ;CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 13723  002930  EE20 F00D          	lfsr	2,13
 13724  002934  5001               	movf	CANreceiveMessage@msg,w,c
 13725  002936  26D9               	addwf	fsr2l,f,c
 13726  002938  5002               	movf	CANreceiveMessage@msg+1,w,c
 13727  00293A  22DA               	addwfc	fsr2h,f,c
 13728  00293C  5065               	movf	3941,w,c	;volatile
 13729  00293E  0B0F               	andlw	15
 13730  002940  6EDF               	movwf	indf2,c
 13731                           
 13732                           ; BSR set to: 15
 13733                           ;CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 13734  002942  EE20 F00C          	lfsr	2,12
 13735  002946  5001               	movf	CANreceiveMessage@msg,w,c
 13736  002948  26D9               	addwf	fsr2l,f,c
 13737  00294A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13738  00294C  22DA               	addwfc	fsr2h,f,c
 13739  00294E  A662               	btfss	3938,3,c	;volatile
 13740  002950  D002               	goto	i1u582_20
 13741  002952  0E01               	movlw	1
 13742  002954  D001               	goto	i1u582_26
 13743  002956                     i1u582_20:
 13744  002956  0E00               	movlw	0
 13745  002958                     i1u582_26:
 13746  002958  6EDF               	movwf	indf2,c
 13747                           
 13748                           ; BSR set to: 15
 13749                           ;CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 13750  00295A  B662               	btfsc	3938,3,c	;volatile
 13751  00295C  D043               	goto	i1l4893
 13752                           
 13753                           ; BSR set to: 15
 13754                           ;CANlib.h: 606: {
 13755                           ;CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 13756  00295E  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 13757  002962  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13758  002964  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13759  002966  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13760  002968  0E03               	movlw	3
 13761  00296A                     i1u584_25:
 13762  00296A  90D8               	bcf	status,0,c
 13763  00296C  3603               	rlcf	??_CANreceiveMessage,f,c
 13764  00296E  3604               	rlcf	??_CANreceiveMessage+1,f,c
 13765  002970  3605               	rlcf	??_CANreceiveMessage+2,f,c
 13766  002972  3606               	rlcf	??_CANreceiveMessage+3,f,c
 13767  002974  2EE8               	decfsz	wreg,f,c
 13768  002976  D7F9               	goto	i1u584_25
 13769  002978  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13770  00297C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13771  002980  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 13772  002984  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 13773  002988  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 13774  00298C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 13775                           
 13776                           ; BSR set to: 15
 13777                           ;CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 13778  002990  3862               	swapf	3938,w,c	;volatile
 13779  002992  42E8               	rrncf	wreg,f,c
 13780  002994  0B07               	andlw	7
 13781  002996  0B07               	andlw	7
 13782  002998  6E0C               	movwf	CANreceiveMessage@tamp,c
 13783                           
 13784                           ; BSR set to: 15
 13785                           ;CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 13786  00299A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13787  00299E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13788  0029A2  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 13789  0029A6  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 13790  0029AA  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 13791  0029AE  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 13792  0029B2  500C               	movf	CANreceiveMessage@tamp,w,c
 13793  0029B4  2403               	addwf	??_CANreceiveMessage,w,c
 13794  0029B6  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 13795  0029B8  0E00               	movlw	0
 13796  0029BA  2004               	addwfc	??_CANreceiveMessage+1,w,c
 13797  0029BC  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 13798  0029BE  0E00               	movlw	0
 13799  0029C0  2005               	addwfc	??_CANreceiveMessage+2,w,c
 13800  0029C2  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 13801  0029C4  0E00               	movlw	0
 13802  0029C6  2006               	addwfc	??_CANreceiveMessage+3,w,c
 13803  0029C8  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 13804  0029CA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13805  0029CE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13806  0029D2  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 13807  0029D6  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 13808  0029DA  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 13809  0029DE  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 13810                           
 13811                           ;CANlib.h: 610: }
 13812  0029E2  D08E               	goto	i1l4919
 13813  0029E4                     i1l4893:
 13814                           
 13815                           ; BSR set to: 15
 13816                           ;CANlib.h: 611: else
 13817                           ;CANlib.h: 612: {
 13818                           ;CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 13819  0029E4  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 13820  0029E8  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13821  0029EA  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13822  0029EC  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13823  0029EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13824  0029F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13825  0029F6  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 13826  0029FA  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 13827  0029FE  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 13828  002A02  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 13829                           
 13830                           ; BSR set to: 15
 13831                           ;CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 13832  002A06  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 13833  002A0A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13834  002A0C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13835  002A0E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13836  002A10  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 13837  002A14  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 13838  002A18  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 13839  002A1C  6A03               	clrf	??_CANreceiveMessage,c
 13840  002A1E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13841  002A22  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13842  002A26  5003               	movf	??_CANreceiveMessage,w,c
 13843  002A28  26DE               	addwf	postinc2,f,c
 13844  002A2A  5004               	movf	??_CANreceiveMessage+1,w,c
 13845  002A2C  22DE               	addwfc	postinc2,f,c
 13846  002A2E  5005               	movf	??_CANreceiveMessage+2,w,c
 13847  002A30  22DE               	addwfc	postinc2,f,c
 13848  002A32  5006               	movf	??_CANreceiveMessage+3,w,c
 13849  002A34  22DE               	addwfc	postinc2,f,c
 13850                           
 13851                           ; BSR set to: 15
 13852                           ;CANlib.h: 616: if (RXB0SIDLbits.EID16)
 13853  002A36  A062               	btfss	3938,0,c	;volatile
 13854  002A38  D00D               	goto	i1l4901
 13855                           
 13856                           ; BSR set to: 15
 13857                           ;CANlib.h: 617: msg->identifier |= 0x00010000;
 13858  002A3A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13859  002A3E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13860  002A42  0E00               	movlw	0
 13861  002A44  12DE               	iorwf	postinc2,f,c
 13862  002A46  0E00               	movlw	0
 13863  002A48  12DE               	iorwf	postinc2,f,c
 13864  002A4A  0E01               	movlw	1
 13865  002A4C  12DE               	iorwf	postinc2,f,c
 13866  002A4E  0E00               	movlw	0
 13867  002A50  12DE               	iorwf	postinc2,f,c
 13868  002A52  D000               	goto	i1l4901
 13869  002A54                     i1l4901:
 13870                           
 13871                           ; BSR set to: 15
 13872                           ;CANlib.h: 618: if (RXB0SIDLbits.EID17)
 13873  002A54  A262               	btfss	3938,1,c	;volatile
 13874  002A56  D00D               	goto	i1l4905
 13875                           
 13876                           ; BSR set to: 15
 13877                           ;CANlib.h: 619: msg->identifier |= 0x00020000;
 13878  002A58  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13879  002A5C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13880  002A60  0E00               	movlw	0
 13881  002A62  12DE               	iorwf	postinc2,f,c
 13882  002A64  0E00               	movlw	0
 13883  002A66  12DE               	iorwf	postinc2,f,c
 13884  002A68  0E02               	movlw	2
 13885  002A6A  12DE               	iorwf	postinc2,f,c
 13886  002A6C  0E00               	movlw	0
 13887  002A6E  12DE               	iorwf	postinc2,f,c
 13888  002A70  D000               	goto	i1l4905
 13889  002A72                     i1l4905:
 13890                           
 13891                           ; BSR set to: 15
 13892                           ;CANlib.h: 620: if (RXB0SIDLbits.SID0)
 13893  002A72  AA62               	btfss	3938,5,c	;volatile
 13894  002A74  D00D               	goto	i1l4909
 13895                           
 13896                           ; BSR set to: 15
 13897                           ;CANlib.h: 621: msg->identifier |= 0x00040000;
 13898  002A76  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13899  002A7A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13900  002A7E  0E00               	movlw	0
 13901  002A80  12DE               	iorwf	postinc2,f,c
 13902  002A82  0E00               	movlw	0
 13903  002A84  12DE               	iorwf	postinc2,f,c
 13904  002A86  0E04               	movlw	4
 13905  002A88  12DE               	iorwf	postinc2,f,c
 13906  002A8A  0E00               	movlw	0
 13907  002A8C  12DE               	iorwf	postinc2,f,c
 13908  002A8E  D000               	goto	i1l4909
 13909  002A90                     i1l4909:
 13910                           
 13911                           ; BSR set to: 15
 13912                           ;CANlib.h: 622: if (RXB0SIDLbits.SID1)
 13913  002A90  AC62               	btfss	3938,6,c	;volatile
 13914  002A92  D00D               	goto	i1l4913
 13915                           
 13916                           ; BSR set to: 15
 13917                           ;CANlib.h: 623: msg->identifier |= 0x00080000;
 13918  002A94  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13919  002A98  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13920  002A9C  0E00               	movlw	0
 13921  002A9E  12DE               	iorwf	postinc2,f,c
 13922  002AA0  0E00               	movlw	0
 13923  002AA2  12DE               	iorwf	postinc2,f,c
 13924  002AA4  0E08               	movlw	8
 13925  002AA6  12DE               	iorwf	postinc2,f,c
 13926  002AA8  0E00               	movlw	0
 13927  002AAA  12DE               	iorwf	postinc2,f,c
 13928  002AAC  D000               	goto	i1l4913
 13929  002AAE                     i1l4913:
 13930                           
 13931                           ; BSR set to: 15
 13932                           ;CANlib.h: 624: if (RXB0SIDLbits.SID2)
 13933  002AAE  AE62               	btfss	3938,7,c	;volatile
 13934  002AB0  D00D               	goto	i1l4917
 13935                           
 13936                           ; BSR set to: 15
 13937                           ;CANlib.h: 625: msg->identifier |= 0x00100000;
 13938  002AB2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13939  002AB6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13940  002ABA  0E00               	movlw	0
 13941  002ABC  12DE               	iorwf	postinc2,f,c
 13942  002ABE  0E00               	movlw	0
 13943  002AC0  12DE               	iorwf	postinc2,f,c
 13944  002AC2  0E10               	movlw	16
 13945  002AC4  12DE               	iorwf	postinc2,f,c
 13946  002AC6  0E00               	movlw	0
 13947  002AC8  12DE               	iorwf	postinc2,f,c
 13948  002ACA  D000               	goto	i1l4917
 13949  002ACC                     i1l4917:
 13950                           
 13951                           ; BSR set to: 15
 13952                           ;CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 13953  002ACC  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 13954  002AD0  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13955  002AD2  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13956  002AD4  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13957  002AD6  0E15               	movlw	21
 13958  002AD8                     i1u590_25:
 13959  002AD8  90D8               	bcf	status,0,c
 13960  002ADA  3603               	rlcf	??_CANreceiveMessage,f,c
 13961  002ADC  3604               	rlcf	??_CANreceiveMessage+1,f,c
 13962  002ADE  3605               	rlcf	??_CANreceiveMessage+2,f,c
 13963  002AE0  3606               	rlcf	??_CANreceiveMessage+3,f,c
 13964  002AE2  2EE8               	decfsz	wreg,f,c
 13965  002AE4  D7F9               	goto	i1u590_25
 13966  002AE6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13967  002AEA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13968  002AEE  5003               	movf	??_CANreceiveMessage,w,c
 13969  002AF0  12DE               	iorwf	postinc2,f,c
 13970  002AF2  5004               	movf	??_CANreceiveMessage+1,w,c
 13971  002AF4  12DE               	iorwf	postinc2,f,c
 13972  002AF6  5005               	movf	??_CANreceiveMessage+2,w,c
 13973  002AF8  12DE               	iorwf	postinc2,f,c
 13974  002AFA  5006               	movf	??_CANreceiveMessage+3,w,c
 13975  002AFC  12DE               	iorwf	postinc2,f,c
 13976  002AFE  D000               	goto	i1l4919
 13977  002B00                     i1l4919:
 13978                           
 13979                           ; BSR set to: 15
 13980                           ;CANlib.h: 629: }
 13981                           ;CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 13982  002B00  9E60               	bcf	3936,7,c	;volatile
 13983                           
 13984                           ; BSR set to: 15
 13985                           ;CANlib.h: 632: return (error);
 13986                           ;	Return value of _CANreceiveMessage is never used
 13987  002B02  0012               	return	
 13988                           
 13989                           ; BSR set to: 15
 13990                           
 13991                           ; BSR set to: 15
 13992  002B04  0012               	return		;funcret
 13993  002B06                     __end_of_CANreceiveMessage:
 13994                           	opt stack 0
 13995                           pclatu	equ	0xFFB
 13996                           pclath	equ	0xFFA
 13997                           tblptru	equ	0xFF8
 13998                           tblptrh	equ	0xFF7
 13999                           tblptrl	equ	0xFF6
 14000                           tablat	equ	0xFF5
 14001                           prodh	equ	0xFF4
 14002                           prodl	equ	0xFF3
 14003                           intcon	equ	0xFF2
 14004                           postinc0	equ	0xFEE
 14005                           fsr0h	equ	0xFEA
 14006                           fsr0l	equ	0xFE9
 14007                           wreg	equ	0xFE8
 14008                           indf1	equ	0xFE7
 14009                           fsr1h	equ	0xFE2
 14010                           fsr1l	equ	0xFE1
 14011                           bsr	equ	0xFE0
 14012                           indf2	equ	0xFDF
 14013                           postinc2	equ	0xFDE
 14014                           postdec2	equ	0xFDD
 14015                           fsr2h	equ	0xFDA
 14016                           fsr2l	equ	0xFD9
 14017                           status	equ	0xFD8
 14018                           
 14019 ;; *************** function _CANisRxReady *****************
 14020 ;; Defined at:
 14021 ;;		line 1163 in file "CANlib.h"
 14022 ;; Parameters:    Size  Location     Type
 14023 ;;		None
 14024 ;; Auto vars:     Size  Location     Type
 14025 ;;		None
 14026 ;; Return value:  Size  Location     Type
 14027 ;;                  1    wreg      unsigned char 
 14028 ;; Registers used:
 14029 ;;		wreg, status,2
 14030 ;; Tracked objects:
 14031 ;;		On entry : 0/0
 14032 ;;		On exit  : 0/0
 14033 ;;		Unchanged: 0/0
 14034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14038 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14039 ;;Total ram usage:        1 bytes
 14040 ;; Hardware stack levels used:    1
 14041 ;; This function calls:
 14042 ;;		Nothing
 14043 ;; This function is called by:
 14044 ;;		_ISR_bassa
 14045 ;; This function uses a non-reentrant model
 14046 ;;
 14047                           
 14048                           	psect	text43
 14049  004F6C                     __ptext43:
 14050                           	opt stack 0
 14051  004F6C                     _CANisRxReady:
 14052                           	opt stack 23
 14053                           
 14054                           ;CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 14055                           
 14056                           ; BSR set to: 15
 14057                           ;incstack = 0
 14058  004F6C  0E01               	movlw	1
 14059  004F6E  6E01               	movwf	_CANisRxReady$3007,c
 14060  004F70  BE60               	btfsc	3936,7,c	;volatile
 14061  004F72  D005               	goto	i1l567
 14062  004F74  010F               	movlb	15	; () banked
 14063  004F76  BF50               	btfsc	80,7,b	;volatile
 14064  004F78  D002               	goto	i1l567
 14065                           
 14066                           ; BSR set to: 15
 14067  004F7A  0E00               	movlw	0
 14068  004F7C  6E01               	movwf	_CANisRxReady$3007,c
 14069  004F7E                     i1l567:
 14070  004F7E  5001               	movf	_CANisRxReady$3007,w,c
 14071  004F80  0012               	return	
 14072  004F82  0012               	return		;funcret
 14073  004F84                     __end_of_CANisRxReady:
 14074                           	opt stack 0
 14075                           pclatu	equ	0xFFB
 14076                           pclath	equ	0xFFA
 14077                           tblptru	equ	0xFF8
 14078                           tblptrh	equ	0xFF7
 14079                           tblptrl	equ	0xFF6
 14080                           tablat	equ	0xFF5
 14081                           prodh	equ	0xFF4
 14082                           prodl	equ	0xFF3
 14083                           intcon	equ	0xFF2
 14084                           postinc0	equ	0xFEE
 14085                           fsr0h	equ	0xFEA
 14086                           fsr0l	equ	0xFE9
 14087                           wreg	equ	0xFE8
 14088                           indf1	equ	0xFE7
 14089                           fsr1h	equ	0xFE2
 14090                           fsr1l	equ	0xFE1
 14091                           bsr	equ	0xFE0
 14092                           indf2	equ	0xFDF
 14093                           postinc2	equ	0xFDE
 14094                           postdec2	equ	0xFDD
 14095                           fsr2h	equ	0xFDA
 14096                           fsr2l	equ	0xFD9
 14097                           status	equ	0xFD8
 14098                           pclatu	equ	0xFFB
 14099                           pclath	equ	0xFFA
 14100                           tblptru	equ	0xFF8
 14101                           tblptrh	equ	0xFF7
 14102                           tblptrl	equ	0xFF6
 14103                           tablat	equ	0xFF5
 14104                           prodh	equ	0xFF4
 14105                           prodl	equ	0xFF3
 14106                           intcon	equ	0xFF2
 14107                           postinc0	equ	0xFEE
 14108                           fsr0h	equ	0xFEA
 14109                           fsr0l	equ	0xFE9
 14110                           wreg	equ	0xFE8
 14111                           indf1	equ	0xFE7
 14112                           fsr1h	equ	0xFE2
 14113                           fsr1l	equ	0xFE1
 14114                           bsr	equ	0xFE0
 14115                           indf2	equ	0xFDF
 14116                           postinc2	equ	0xFDE
 14117                           postdec2	equ	0xFDD
 14118                           fsr2h	equ	0xFDA
 14119                           fsr2l	equ	0xFD9
 14120                           status	equ	0xFD8
 14121                           
 14122                           	psect	rparam
 14123  0000                     pclatu	equ	0xFFB
 14124                           pclath	equ	0xFFA
 14125                           tblptru	equ	0xFF8
 14126                           tblptrh	equ	0xFF7
 14127                           tblptrl	equ	0xFF6
 14128                           tablat	equ	0xFF5
 14129                           prodh	equ	0xFF4
 14130                           prodl	equ	0xFF3
 14131                           intcon	equ	0xFF2
 14132                           postinc0	equ	0xFEE
 14133                           fsr0h	equ	0xFEA
 14134                           fsr0l	equ	0xFE9
 14135                           wreg	equ	0xFE8
 14136                           indf1	equ	0xFE7
 14137                           fsr1h	equ	0xFE2
 14138                           fsr1l	equ	0xFE1
 14139                           bsr	equ	0xFE0
 14140                           indf2	equ	0xFDF
 14141                           postinc2	equ	0xFDE
 14142                           postdec2	equ	0xFDD
 14143                           fsr2h	equ	0xFDA
 14144                           fsr2l	equ	0xFD9
 14145                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    76
    Data        3
    BSS         107
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      66
    BANK0           160     95     159
    BANK1           256     25      41
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_battery(COMRAM[1]), data_array_debug(BANK0[8]), data_array(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _main->_rampe
    _send_data->_CANsendMessage
    _rampe->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altofl
    ___fltol->___fladd
    ___altofl->___fltol
    _eval_poly->___fladd
    ___flmul->___awtofl
    ___flsub->___fladd
    ___fladd->___flmul
    ___fldiv->___flpack
    ___awtofl->___flpack
    ___lltofl->___flpack
    ___lwtofl->___flpack
    _configurazione_iniziale->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->_CANsendMessage
    ___awdiv->___wmul

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_rampe
    _rampe->_pow

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0  108516
                                             94 BANK0      1     1      0
                                             17 BANK1      8     8      0
                       _CANisTxReady
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                    _battery_measure
                    _can_interpreter
            _configurazione_iniziale
                           _delay_ms
                              _rampe
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    5174
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (1) _rampe                                               24    24      0   81088
                                             86 BANK0      8     8      0
                                             13 BANK1      4     4      0
                       _CANisTxReady
                     _CANsendMessage
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___aldiv
                            ___fladd
                            ___fltol
                            ___lwdiv
                           ___lwtofl
                                _abs
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 21    13      8   64942
                                             78 BANK0      8     0      8
                                              0 BANK1     13    13      0
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___lltofl
                            ___lwdiv (ARG)
                           ___lwtofl (ARG)
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   20695
                                             58 BANK0      6     2      4
                           ___awtofl
                            ___fladd
                            ___flmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                 11     7      4   35530
                                             67 BANK0     11     7      4
                           ___awtofl
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                8     2      6     489
                                             58 BANK0      8     2      6
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                               10     6      4    9704
                                             57 BANK0     10     6      4
                           ___altofl
                            ___fladd
                             ___flge
                            ___fltol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                8     2      6     582
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     792
                                             42 BANK0     10     6      4
                            ___fladd (ARG)
                            ___lwdiv (ARG)
                           ___lwtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     718
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___altofl                                             5     1      4    2446
                                             52 BANK0      5     1      4
                           ___flpack
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     8      8    8943
                                             42 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             15     7      8    3566
                                             15 BANK0     15     7      8
                           ___awtofl (ARG)
                           ___flpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    5049
                                             42 BANK0      8     0      8
                           ___awtofl (ARG)
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             12     4      8    4733
                                             30 BANK0     12     4      8
                           ___awtofl (ARG)
                            ___flmul (ARG)
                           ___flpack
                            ___lwdiv (ARG)
                           ___lwtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     260
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             15     7      8    2885
                                             10 BANK0     15     7      8
                           ___flpack
 ---------------------------------------------------------------------------------
 (4) ___awtofl                                             9     5      4    2511
                                             10 BANK0      5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) ___lltofl                                             4     0      4    2344
                                             10 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     158
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwtofl                                             4     0      4    2539
                                             10 BANK0      4     0      4
                           ___flpack
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flpack                                            10     4      6    2248
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     761
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     575
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) _SetDCEPWM1                                           6     4      2     424
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    9124
                      _CANInitialize
                     _SetOutputEPWM1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     718
                                              6 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _SetOutputEPWM1                                       2     1      1     446
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    7960
                                             14 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1740
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5220
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0    6241
                       _CANisTxReady
                     _CANsendMessage
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     492
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     575
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    5137
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_bassa                                           22    22      0    1240
                                             12 COMRAM    22    22      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1126
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (8) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   _battery_measure
     _CANisTxReady
     _CANsendMessage
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _can_interpreter
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _SetOutputEPWM1
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul
   _rampe
     _CANisTxReady
     _CANsendMessage
     _SetDCEPWM1
     _SetOutputEPWM1
     ___aldiv
     ___fladd
       ___awtofl (ARG)
         ___flpack
       ___flmul (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
       ___flpack (ARG)
       ___lwdiv (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
       _frexp (ARG)
     ___fltol
       ___fladd (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flmul (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flpack (ARG)
         ___lwdiv (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
         _frexp (ARG)
       ___lwdiv (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
     ___lwdiv
     ___lwtofl
       ___flpack
       ___lwdiv (ARG)
     _abs
     _pow
       ___flge
       ___flmul
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         _frexp (ARG)
       ___flneg
       ___fltol
         ___fladd (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
           _frexp (ARG)
         ___lwdiv (ARG)
         ___lwtofl (ARG)
           ___flpack
           ___lwdiv (ARG)
       ___lltofl
         ___flpack
       ___lwdiv (ARG)
       ___lwtofl (ARG)
         ___flpack
         ___lwdiv (ARG)
       _exp (ARG)
         ___awtofl
           ___flpack
         ___fldiv
           ___flpack
         ___flge
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         ___flneg
         ___flsub
           ___awtofl (ARG)
             ___flpack
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             ___lwdiv (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
             _frexp (ARG)
         ___fltol
           ___fladd (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             ___lwdiv (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
             _frexp (ARG)
           ___lwdiv (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
         _eval_poly
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             ___lwdiv (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         _floor
           ___altofl
             ___flpack
             ___fltol (ARG)
               ___fladd (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___flmul (ARG)
                   ___awtofl (ARG)
                     ___flpack
                   ___flpack (ARG)
                   _frexp (ARG)
                 ___flpack (ARG)
                 ___lwdiv (ARG)
                 ___lwtofl (ARG)
                   ___flpack
                   ___lwdiv (ARG)
                 _frexp (ARG)
               ___lwdiv (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             ___lwdiv (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
             _frexp (ARG)
           ___flge
           ___fltol
             ___fladd (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               ___lwdiv (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___lwdiv (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               ___lwdiv (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
         _log (ARG)
           ___awtofl
             ___flpack
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             ___lwdiv (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___fladd
               ___awtofl (ARG)
                 ___flpack
               ___flmul (ARG)
                 ___awtofl (ARG)
                   ___flpack
                 ___flpack (ARG)
                 _frexp (ARG)
               ___flpack (ARG)
               ___lwdiv (ARG)
               ___lwtofl (ARG)
                 ___flpack
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___flmul
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
           _frexp
       _log (ARG)
         ___awtofl
           ___flpack
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___flmul (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
           ___flpack (ARG)
           ___lwdiv (ARG)
           ___lwtofl (ARG)
             ___flpack
             ___lwdiv (ARG)
           _frexp (ARG)
         ___flmul
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___fladd
             ___awtofl (ARG)
               ___flpack
             ___flmul (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               _frexp (ARG)
             ___flpack (ARG)
             ___lwdiv (ARG)
             ___lwtofl (ARG)
               ___flpack
               ___lwdiv (ARG)
             _frexp (ARG)
           ___flmul
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             _frexp (ARG)
         _frexp
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     19      29       7       16.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5F      9F       5       99.4%
BITCOMRAM           5F      0       2       0        2.1%
COMRAM              5F     22      42       1       69.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10A      20        0.0%
DATA                 0      0     10A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Jun 09 17:30:47 2016

                   ___altofl@sign 0098                      ___fldiv@cntr 0076  
            __end_of_CANSetFilter 1878                      ___fldiv@sign 0078  
                    ___awdiv@sign 006B                                _id 0023  
                              bsr 000FE0               ___wmul@multiplicand 0062  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 4C9C  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                     __CFG_OSC$HS 000000                      __CFG_CP4$OFF 000000  
                    __CFG_CP5$OFF 000000                      ___flpack@arg 0060  
                    ___flpack@exp 0064              _previousTimeCounter1 00CF  
            _previousTimeCounter2 00D3                               l400 1DA6  
            _previousTimeCounter3 0027                               l401 1EA0  
                             l410 1F70                               l402 1E2E  
                             l403 1E38                               l404 1E42  
                             l405 1E4C                               l510 15E8  
                             l502 15A8                               l503 15AC  
                             l408 1F60                               l520 16FC  
                             l504 15B8                               l440 2D14  
                             l409 1F64                               l521 1708  
                             l513 16C8                               l505 15BC  
                             l441 2D18                               l370 188E  
                             l530 1818                               l514 16CC  
                             l506 15C8                               l450 2E24  
                             l442 2D24                               l371 1892  
                             l531 181C                               l515 16D8  
                             l507 15CC                               l451 2E30  
                             l443 2D28                               l380 1A50  
                             l372 198C                               l532 1828  
                             l524 17E8                               l516 16DC  
                             l508 15D8                               l452 2E34  
                             l444 2D34                               l364 39B2  
                             l381 1A5C                               l373 191A  
                             l525 17EC                               l517 16E8  
                             l509 15DC                               l453 2E40  
                             l445 2D38                               l365 39BC  
                             l390 1BB8                               l374 1924  
                             l526 17F8                               l518 16EC  
                             l470 124E                               l454 2E44  
                             l446 2D44                               l438 2D04  
                             l391 1BC2                               l375 192E  
                             l527 17FC                               l519 16F8  
                             l471 125A                               l455 2E50  
                             l439 2D08                               l384 1D8C  
                             l376 1938                               l528 1808  
                             l480 1368                               l472 125E  
                             l456 2E54                               l800 4CE4  
                             l385 1B18                               l369 1B02  
                             l529 180C                               l481 136C  
                             l473 126A                               l457 2E60  
                             l449 2E20                               l562 4F2A  
                             l394 1CD6                               l386 1B1C  
                             l482 1378                               l474 126E  
                             l395 1CDA                               l387 1C16  
                             l379 1A4C                               l491 1488  
                             l483 137C                               l475 127A  
                             l396 1CE6                               l388 1BA4  
                             l492 148C                               l484 1388  
                             l476 127E                               l389 1BAE  
                             l493 1498                               l485 138C  
                             l477 128A                               l469 124A  
                             l814 4F4E                               l494 149C  
                             l486 1398                               l815 4F50  
                             l399 1DA2                               l743 3F22  
                             l495 14A8                               l487 139C  
                             l575 4EA4                               l496 14AC  
                             l488 13A8                               l736 4D3C  
                             l497 14B8                               l762 4B06  
                             l498 14BC                               l738 4D38  
                             l499 14C8                               l685 3080  
                             l767 4B02                               l695 315E  
                             l866 4F02                      __CFG_CPB$OFF 000000  
                             _PR2 000FCB                      __CFG_CPD$OFF 000000  
                             _abs 4EE0                               _dir 00FD  
                             _exp 31F6                               _log 3C3C  
                             _msg 00E6                               _pow 36EE  
                             prod 000FF3                               wreg 000FE8  
                    ___flmul@cntr 007C                      ___flmul@sign 007D  
                    __CFG_LVP$OFF 000000                     ___flpack@sign 0065  
                    ___fltol@exp1 0093                      __CFG_WDT$OFF 000000  
                            l1051 3B60                              l1107 47E6  
                            ?_abs 0060                              l1071 3500  
                            l1073 352E                              l1058 3BC2  
                            l1082 361A                              l1402 32F0  
                            l1059 3BDA                              l1067 34C2  
                            l1403 3470                              l1341 4B82  
                            l1413 44FA                              l1383 38DC  
                            l1378 373E                              l6111 170E  
                            l6015 13F6                              l6009 13AE  
                            l6201 32B2                              l6043 14CE  
                            l6117 1756                              l7013 2F84  
                            l7005 2F68                              l6311 1944  
                            l5423 3512                              l5503 3E56  
                            l5407 4C6A                              l6223 3438  
                            l7031 3094                              l7007 2F78  
                            l6145 182E                              l6049 1516  
                            l5417 34D4                              l5513 3E9E  
                            l7025 3078                              l6331 1A40  
                            l6083 1636                              l5443 3598  
                            l5515 3EA6                              l5507 3E7E  
                            l7043 310C                              l7051 3148  
                            l7019 3064                              l6413 1CEC  
                            l6077 15EE                              l6253 3944  
                            l5373 3AF0                              l5613 407C  
                            l5461 3642                              l5445 35AA  
                            l5437 3566                              l5429 3524  
                            l5525 3EEE                              l5701 4722  
                            l5533 4794                              l6173 3C92  
                            l7037 30D0                              l7029 3084  
                            l7053 3170                              l6407 1CCA  
                            l6271 39C8                              l5383 3BA0  
                            l5375 3B02                              l5631 40F2  
                            l5455 35F8                              l5447 35BA  
                            l5519 3ECE                              l6167 3C60  
                            l7047 3144                              l6337 1A62  
                            l5801 2D4A                              l6273 3A0C  
                            l6265 39AA                              l6601 4304  
                            l5385 3BB2                              l5377 3B42  
                            l5369 3ADA                              l5465 366A  
                            l5457 360A                              l5449 35C6  
                            l6267 39C0                              l6259 3954  
                            l6531 4CC2                              l6523 4E98  
                            l6611 434E                              l5395 3C28  
                            l5643 415C                              l5619 40A2  
                            l5475 36BE                              l5651 4BB4  
                            l5491 3E06                              l5539 4832  
                            l6195 3268                              ?_exp 00A3  
                            l5741 4F5E                              l5661 4D5E  
                            l5485 3DE0                              l5565 45A2  
                            l5549 4532                              l5733 4266  
                            l5717 421C                              l5709 41B4  
                            l6189 321E                              ?_log 009A  
                            l6463 1E58                              l5911 1040  
                            l5807 2D92                              l6535 4CD2  
                            l6607 4332                              l6623 43B8  
                            l5639 4148                              l5583 4612  
                            l5575 45D4                              l5735 42AA  
                            l5833 2E66                              l6609 4344  
                            l5577 45E6                              l5569 45B6  
                            l5729 4250                              l6483 1F54  
                            l6387 1BCE                              l6651 488C  
                            l6627 43D6                              l6619 43A4  
                            l5579 45F4                              l5595 4940  
                            l5691 4460                              l5683 442A  
                            l6571 3800                              l6563 377A  
                            l6653 489A                              l6645 486E  
                            l6821 4A92                              l5669 4DFA  
                            l6557 3752                              l6901 2436  
                            l6671 48FC                              l6663 48D6  
                            l6655 48A4                              l6639 4856  
                            l6831 4AD8                              l5775 2C78  
                            l5759 2BC0                              l5687 443E  
                            l6575 3830                              l6489 1F76  
                            l5929 10FC                              l5857 0E0E  
                            l6681 4B28                              l6913 25A0  
                            l6841 2030                              l6667 48E6  
                            l5947 11B8                              l5875 0EC8  
                            l6595 42E4                              l6683 4B36  
                            l5699 467C                              l6907 2536  
                            l6851 2086                              l6941 3F72  
                            l5981 12D8                              l5893 0F84  
                            l6693 4B72                              l6685 4B40  
                            l6909 2542                              l6951 3FC2  
                            l5975 1290                              l6871 2146  
                            l6855 20A0                              l6919 25C6  
                            l6929 4D2C                              l6963 4016  
                            l6947 3FAE                              l6883 223A  
                            l6875 2160                              l6867 211C  
                            l6957 4000                              l6959 4004  
                            l6895 2382                              l6889 22DE  
                            l6997 2EEE                              ?_pow 00AE  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u7030 444E  
                            u7140 2B3A                              u7070 41E6  
                            u7145 2B2E                              u8130 32BC  
                            u7155 2B9A                              u8300 1964  
                            u7500 0FBA                              u7420 0E42  
                            u7180 2BF2                              u8140 32BE  
                            u8310 19B0                              u8070 184E  
                            u7350 2E86                              u7270 2D6A  
                            u7078 41EA                              u9120 24A6  
                            u8305 1958                              u7505 0FAE  
                            u7425 0E36                              u7185 2BE6  
                            u9050 2102                              u8315 19A4  
                            u8075 1842                              u7515 101A  
                            u7435 0EA2                              u7355 2E7A  
                            u7275 2D5E                              u7195 2C52  
                            u7540 1076                              u7460 0EFE  
                            u7380 0D88                              u9140 258C  
                            u8325 1A10                              u8430 1BEE  
                            u8440 1C3A                              u9400 31DC  
                            u7545 106A                              u7465 0EF2  
                            u7385 0D7C                              u8435 1BE2  
                            u7555 10D6                              u7475 0F5E  
                            u7395 0DE8                              u7580 1132  
                            u6940 4972                              u8445 1C2E  
                            u7910 160E                              u7830 14EE  
                            u7750 13CE                              u7670 12B0  
                            u6870 4552                              u8455 1C9A  
                            u8560 1E78                              u9280 2F62  
                            u7585 1126                              u9417 4E9A  
                            u8570 1EC4                              u7915 1602  
                            u7835 14E2                              u7755 13C2  
                            u7675 12A4                              u7595 1192  
                            u6875 4546                              u6948 4976  
                            u8565 1E6C                              u8750 37E2  
                            u8575 1EB8                              u8585 1F24  
                            u7990 172E                              u8695 4D98  
                            u7995 1722                              _TMR2 000FCC  
             __size_of_CANSetMask 03AA                              abs@a 0060  
                            _main 2EB0                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              exp@x 00A3  
                            log@x 009A                              pclat 000FFA  
                            pow@x 00AE                              pow@y 00B2  
                            prodh 000FF4                              prodl 000FF3  
                            start 0182                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000010  
                _CANOperationMode 4F54            __end_of_SetOutputEPWM1 4CF0  
                           ??_abs 0062                             ??_exp 00A7  
                           ??_log 009E                             ??_pow 00B6  
      __size_of_CANreceiveMessage 052E                     ___fltol@sign1 0092  
                 __end_of___aldiv 43EA                   __end_of___fladd 36EE  
                           ?_main 0001                   __end_of___fldiv 418C  
                 __end_of___awdiv 4908                   __end_of___flneg 4E0E  
                 __end_of___flmul 3F1E                   __end_of___flsub 4BEC  
                 __end_of___fltol 4626                   ___awdiv@divisor 0068  
                           _T2CON 000FCA                             _T3CON 000FB1  
                 __end_of___lwdiv 4B8C                             i1l416 2884  
                           i1l567 4F7E                             i1l673 013C  
                           i1l666 0064                   ___awdiv@counter 006A  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
               _CANisRxReady$3007 0001                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
                   __CFG_WRT3$OFF 000000                     __CFG_WRT4$OFF 000000  
              __size_of_ISR_bassa 016A                     __CFG_WRT5$OFF 000000  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                CANInitialize@flags 0072  
                  __CFG_EBTR2$OFF 000000                     ___awtofl@sign 006E  
                  __CFG_EBTR3$OFF 000000                    __CFG_EBTR4$OFF 000000  
                  __CFG_EBTR5$OFF 000000                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _vBatt 0033  
                           _floor 43EA                             _ldexp 418C  
                           _frexp 4908                             _errno 00DB  
                           _rampe 2018                    __pbitbssCOMRAM 0200  
            __end_of_CANisRxReady 4F84                             tablat 000FF5  
            __end_of_CANisTxReady 4F32                             pow@yi 0109  
                           status 000FD8                       exp@exponent 00AB  
                      _SetDCEPWM1 4D8E                       ldexp@newexp 009E  
                 __initialization 4BEC                       log@exponent 009E  
        __size_of_battery_measure 0138                      __end_of_main 31F6  
                 ?_SetOutputEPWM1 0060                            ??_main 0111  
                   __activetblptr 000003                 _CANisTxReady$3005 0060  
                   _counter_array 0119                            ?_floor 0099  
                          ?_ldexp 009A                            ?_frexp 0060  
                __end_of___altofl 4C9C                            _CANCON 000F6F  
                          _ADRESH 000FC4                            ?_rampe 0001  
                __end_of___flpack 3C3C                  ___awdiv@dividend 0066  
                __end_of___awtofl 4D8E                   __CFG_BBSIZ$1024 000000  
                __end_of___lltofl 4E7A                            i1l5215 006C  
                          i1l5225 00A2                            i1l5243 0114  
                          i1l5235 00D2                            i1l5229 00AA  
                          i1l5245 0118                            i1l5249 011E  
                          i1l4901 2A54                            i1l4831 2758  
                          i1l4913 2AAE                            i1l4905 2A72  
                          i1l4851 282A                            i1l4843 27EA  
                      _OpenTimer2 4F32                            i1l4917 2ACC  
                          i1l4909 2A90                            i1l4919 2B00  
                          i1l4855 284A                            i1l4847 280A  
                          i1l4839 27CA                            i1l4857 287E  
                          i1l4793 25E4                            i1l4893 29E4  
                          i1l4797 25EC                  __end_of___lwtofl 4EE0  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 0064                CANsendMessage@tamp 006C  
                __end_of_delay_ms 4EAE             __size_of_CANSetFilter 0B2A  
                  __CFG_XINST$OFF 000000                __size_of_OpenEPWM1 0012  
               __end_of_ISR_bassa 0182                            ___flge 4740  
                       ??___aldiv 0068                         ??___fladd 0086  
                          ___wmul 4E0E                         ??___fldiv 0072  
                       ??___awdiv 006A                         ??___flneg 0064  
                  __CFG_STVREN$ON 000000                         ??___flmul 0077  
                       ??___flsub 0092                         ??___fltol 008E  
                       ??___lwdiv 0064                      ??_CANSetMask 0065  
                          _errore 00DD                  OpenTimer2@config 0060  
                          clear_0 4BF2                            clear_1 4BFE  
                          clear_2 4C0E                  ___awdiv@quotient 006C  
        ?_configurazione_iniziale 0001                            floor@i 009D  
                          floor@x 0099                   __CFG_BOREN$BOHW 000000  
                    __pdataCOMRAM 0042                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                      _CANSetFilter 0D4E  
                      ___fladd@f1 007E                        ___fladd@f2 0082  
                      ___flge@ff1 0060                        ___flge@ff2 0064  
                __end_ofexp@coeff 0D29                  __end_oflog@coeff 0D4D  
                      ___altofl@c 0094                        ___fldiv@f1 006A  
                      ___fldiv@f2 006E                        ___fldiv@f3 0072  
                      __accesstop 0060           __end_of__initialization 4C3E  
              __end_of_CANSetMask 2EB0                   __CFG_PBADEN$OFF 000000  
                      ___flneg@f1 0060                        ___flmul@f1 006F  
                      ___flmul@f2 0073                      eval_poly@res 0096  
                   ___rparam_used 000001                        ___flsub@f1 008A  
                      ___flsub@f2 008E                        ___fltol@f1 008A  
                      ___awtofl@c 006A                       ?_SetDCEPWM1 0060  
                    _data_battery 003F                    __pcstackCOMRAM 0001  
                    __pidataBANK0 4F96                        ___lltofl@c 006A  
                   __end_of_floor 450C                     __end_of_ldexp 42BE  
                   __end_of_frexp 49BE                     __end_of_rampe 25D8  
                      ___lwtofl@c 006A                 ??_battery_measure 0070  
           CANSetFilter@numBuffer 0069                   OpenEPWM1@period 0060  
           __size_of_CANisRxReady 0018             __size_of_CANisTxReady 0026  
               __end_of_OpenEPWM1 4F96                           ??_floor 009D  
                         ??_ldexp 00A0                           ??_frexp 0066  
                         ??_rampe 00B6          __end_of_CANOperationMode 4F6C  
                      __pbssBANK0 00BF                        __pbssBANK1 0119  
                     ?_OpenTimer2 0001                __size_of_eval_poly 011A  
                      _data_array 0037           __size_of_CANsendMessage 07A0  
        __size_of_can_interpreter 009C                           ?___flge 0060  
                         ?___wmul 0060                __size_of_send_data 0052  
                       ?___altofl 0094                         ?___flpack 0060  
                    _CANisRxReady 4F6C                           _ECCPR1L 000FBB  
                         _CANSTAT 000F6E                         ?___awtofl 006A  
                    _CANisTxReady 4F0C                         ?___lltofl 006A  
                         _BRGCON1 000F70                           _BRGCON2 000F71  
                         _BRGCON3 000F72                         ?___lwtofl 006A  
          __size_of_CANInitialize 01CE                         ?_delay_ms 0066  
                         _RXB0DLC 000F65                           _RXB1DLC 000F55  
                         _RXB0CON 000F60               __size_of_SetDCEPWM1 0044  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 0067                  _data_array_debug 00F5  
        SetOutputEPWM1@outputmode 0060                        _correzione 00BF  
                ??_SetOutputEPWM1 0061                           __Hparam 0000  
                      _left_speed 00DF                           __Lparam 0000  
                delay_ms@value_ms 0066                           ___aldiv 42BE  
                 __size_of___flge 00F8                           ___fladd 3482  
                         ___fldiv 4056                           ___awdiv 4838  
                         ___flneg 4DD2                           ___flmul 3DBA  
                         ___flsub 4B8C                           ___fltol 450C  
                 __size_of___wmul 0038                           ___lwdiv 4B0A  
                      _rampe$4019 010D                      __psmallconst 0D00  
                      ??___altofl 0098                        ??___flpack 0066  
            CANInitialize@propSeg 0077                           __pcinit 4BEC  
                      ??___awtofl 006E                 __end_of_eval_poly 4740  
                         __ramtop 0D00               __size_of_OpenTimer2 0022  
                      ??___lltofl 006E                           __ptext0 2EB0  
                         __ptext1 4CF0                           __ptext2 2018  
                         __ptext3 36EE                           __ptext4 3C3C  
                         __ptext5 31F6                           __ptext6 418C  
                         __ptext7 43EA                           __ptext8 4908  
                         __ptext9 450C                        ??___lwtofl 006E  
                       _T2CONbits 000FCA                      __size_of_abs 002C  
                         _current 0035                      __size_of_exp 028C  
                    __size_of_log 017E                      __size_of_pow 0200  
                      _duty_cycle 0031                  ___aldiv@dividend 0060  
                      ??_delay_ms 0068                         _ECU_error 0200  
          CANreceiveMessage@error 000B              end_of_initialization 4C3E  
                         exp@sign 00AD                 __end_of_send_data 4D42  
                   _CANInitialize 38EE                           pow@sign 0108  
                ___aldiv@quotient 006A                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
                       _ISR_bassa 0018                 ??_can_interpreter 0060  
                       _PORTAbits 000F80                    CANSetMask@mask 0060  
                       _PORTCbits 000F82                    CANSetMask@tamp 006A  
                  _centralina_abs 0202                    CANSetMask@type 0064  
                       _TRISDbits 000F95                       ___fldiv@exp 0077  
__size_of_configurazione_iniziale 00B0               _previousTimeCounter 00CB  
         _clock_counter_reference 002F                       ___flmul@exp 0077  
                  _CANsendMessage 1878                  CANInitialize@BRP 0071  
                CANInitialize@SJW 0070                    ?_CANInitialize 006E  
                      main@period 00BE                      ??_SetDCEPWM1 0062  
                 _battery_measure 3F1E                    __end_of___flge 4838  
                      ?_ISR_bassa 0001                    __end_of___wmul 4E46  
                   __pidataCOMRAM 4F98                        floor@expon 00A1  
             start_initialization 4BEC                        eval_poly@d 008E  
                      eval_poly@n 0090                        eval_poly@x 008A  
                      ldexp@value 009A                       __end_of_abs 4F0C  
                     __end_of_exp 3482                       __end_of_log 3DBA  
                     __end_of_pow 38EE                __end_of_SetDCEPWM1 4DD2  
             CANSetMask@numBuffer 0069            __end_of_CANsendMessage 2018  
               ?_CANOperationMode 0001                      ??_OpenTimer2 0060  
                       _OpenEPWM1 4F84                        frexp@value 0060  
              ??_CANOperationMode 0060        CANInitialize@FilterConfig1 0078  
      CANInitialize@FilterConfig2 0079                          ??___flge 0068  
                        ??___wmul 0064                       __pdataBANK0 00FD  
                __CFG_LPT1OSC$OFF 000000                __end_of_OpenTimer2 4F54  
               __size_of___altofl 0058                 __size_of___flpack 0180  
          CANInitialize@phaseSeg1 006E            CANInitialize@phaseSeg2 006F  
               __size_of___awtofl 004C                 __size_of___lltofl 0034  
                     __pbssCOMRAM 0023                 __size_of___lwtofl 0032  
                   __pcstackBANK0 0060                     __pcstackBANK1 0100  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
             SetDCEPWM1@dutycycle 0060                 __size_of_delay_ms 0034  
                 ?_CANsendMessage 0060                        ?_OpenEPWM1 0001  
         __end_of_battery_measure 4056                   ??_CANInitialize 0073  
                       _can_retry 0201                      _currentSpeed 00C3  
              CANSetFilter@filter 0060                  ___lwdiv@dividend 0060  
                       _ecu_cycle 00E5                          ?___aldiv 0060  
                        ?___fladd 007E                          ?___fldiv 006A  
                        ?___awdiv 0066                          ?___flneg 0060  
                        ?___flmul 006F                          ?___flsub 008A  
                        ?___fltol 008A                          ?___lwdiv 0060  
                     ??_ISR_bassa 000D                       __pintcodelo 0018  
                     __smallconst 0D00                          _ECCP1CON 000FBA  
                     _COMSTATbits 000F74        SetOutputEPWM1@outputconfig 0061  
                       _eval_poly 4626                        ISR_bassa@i 0022  
                   _remote_frame1 0208                  ___lwdiv@quotient 0065  
         _configurazione_iniziale 49BE                    __size_of_floor 0122  
                  __size_of_ldexp 0132                    __size_of_frexp 00B6  
                  __size_of_rampe 05C0                      _message_sent 0205  
                 ___aldiv@divisor 0064             CANreceiveMessage@tamp 000C  
                 ___aldiv@counter 0068                    ___wmul@product 0064  
                 _can_interpreter 4A6E                          _IPR2bits 000FA2  
    _delay_quartz_frequency_value 0042                          _PIE1bits 000F9D  
                        _IPR3bits 000FA5                          _PIE2bits 000FA0  
                       _send_data 4CF0                          _PIE3bits 000FA3  
                        i1u632_25 008C                          i1u632_26 008E  
                        i1u570_20 2698                          i1u570_26 269A  
                        i1u571_20 26C6                          i1u571_26 26C8  
                        i1u581_20 292C                          i1u573_25 26DC  
                        i1u581_26 292E                          i1u582_20 2956  
                        i1u590_25 2AD8                          i1u582_26 2958  
                        i1u584_25 296A                          _PIR1bits 000F9E  
                        i1u579_25 2856                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                       _scrittura 0036                          _RXB0SIDL 000F62  
                        _RXF0EIDH 000F02                          _RXB1SIDH 000F51  
                        _RXF0EIDL 000F03                          _RXB1SIDL 000F52  
                        _RXF1EIDH 000F06                          _RXF1EIDL 000F07  
                        _RXF2EIDH 000F0A                          _RXF2EIDL 000F0B  
                        _RXF3EIDH 000F0E                          _RXF3EIDL 000F0F  
                        _RXF4EIDH 000F12                          _RXF4EIDL 000F13  
                        _RXF5EIDH 000F16                          _RXF5EIDL 000F17  
                        _RXF0SIDH 000F00                          _RXF0SIDL 000F01  
                        _TXB0EIDH 000F43                          _RXF1SIDH 000F04  
                        _TXB0EIDL 000F44                          _RXF1SIDL 000F05  
                        _TXB1EIDH 000F33                          _RXF2SIDH 000F08  
                        _TXB1EIDL 000F34                          _RXF2SIDL 000F09  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                        _RXERRCNT 000F75                          _TXERRCNT 000F76  
                      _ADCON0bits 000FC2                        _ADCON1bits 000FC1  
                      _ADCON2bits 000FC0                 ___wmul@multiplier 0060  
                      ?_eval_poly 008A                     ?_CANSetFilter 0060  
                      _CANCONbits 000F6F                       ??_OpenEPWM1 0060  
                ?_battery_measure 0001                         frexp@eptr 0064  
                      ?_send_data 0001                          __Hrparam 0000  
                    _RXB0SIDLbits 000F62                  SetDCEPWM1@DCycle 0064  
                        __Lrparam 0000                      _RXB1SIDLbits 000F52  
              _centralina_comando 0203                  __size_of___aldiv 012C  
                __size_of___fladd 026C                        _CANSetMask 2B06  
                __size_of___fldiv 0136                  __size_of___awdiv 00D0  
                __size_of___flneg 003C                  __size_of___flmul 0164  
                __size_of___flsub 0060                  __size_of___fltol 011A  
                        ___altofl 4C44                          ___flpack 3ABC  
                __size_of___lwdiv 0082                          ___awtofl 4D42  
         __size_of_SetOutputEPWM1 0054                          ___lltofl 4E46  
                        ___lwtofl 4EAE                _currentSpeed_array 0121  
                        _exp$4022 00A7         ??_configurazione_iniziale 007A  
                    _RXF0SIDLbits 000F01                          _delay_ms 4E7A  
                 ___lwdiv@divisor 0062                      _RXF1SIDLbits 000F05  
                 ___lwdiv@counter 0064                    ??_CANSetFilter 0065  
                        __ptext10 4740                          __ptext11 4C44  
                        __ptext20 4EE0                          __ptext12 4626  
                        __ptext21 4EAE                          __ptext13 3DBA  
                        __ptext30 2B06                          __ptext22 3ABC  
                        __ptext14 4B8C                          __ptext31 0D4E  
                        __ptext23 4B0A                          __ptext15 3482  
                        __ptext40 4F84                          __ptext32 4F54  
                        __ptext24 42BE                          __ptext16 4DD2  
                        __ptext33 4A6E                          __ptext25 4D8E  
                        __ptext17 4056                          __ptext42 25D8  
                        __ptext34 3F1E                          __ptext26 49BE  
                        __ptext18 4D42                          __ptext43 4F6C  
                        __ptext35 4E0E                          __ptext27 4E7A  
                        __ptext19 4E46                          __ptext36 4838  
                        __ptext28 4C9C                          __ptext37 1878  
                        __ptext29 38EE                          __ptext38 4F0C  
                        __ptext39 4F32                      _RXF2SIDLbits 000F09  
         __end_of_can_interpreter 4B0A                      _RXF3SIDLbits 000F0D  
                        _pow$4020 0100                          _pow$4021 0104  
                    _RXF4SIDLbits 000F11                     _speed_fetched 020A  
                    _RXF5SIDLbits 000F15          CANsendMessage@dataLength 0066  
                    _remote_frame 0207                     __size_of_main 0346  
                        _duty_set 00C7              CANreceiveMessage@msg 0001  
                    _TXB0SIDLbits 000F42                       _new_message 0206  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
       __size_of_CANOperationMode 0018                     ?_CANisRxReady 0001  
                   ?_CANisTxReady 0001                       _RXB0DLCbits 000F65  
                        exp@coeff 0D01             ___flmul@f3_as_product 0078  
                        log@coeff 0D29                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 25D8  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                     ??_eval_poly 0092                  ??_CANsendMessage 0068  
                    _requestSpeed 002B                ?_CANreceiveMessage 0001  
                    _request_sent 0209          CANsendMessage@identifier 0060  
                        intlevel1 0000                 _centralina_sterzo 0204  
                CANSetFilter@tamp 006A                  CANSetFilter@type 0064  
             ??_CANreceiveMessage 0003                       _TXB0DLCbits 000F45  
                     _right_speed 00E3                       _TXB1DLCbits 000F35  
                     _TXB0CONbits 000F40                       ??_send_data 0070  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 4A6E  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
                     _timeCounter 00D7              CANOperationMode@mode 0060  
                  ??_CANisRxReady 0001                       ?_CANSetMask 0060  
                  ??_CANisTxReady 0060         __end_of_CANreceiveMessage 2B06  
                    ___aldiv@sign 0069                  ?_can_interpreter 0001  
                     _previousPwm 00E1                      ___fladd@exp1 0089  
                    ___fladd@exp2 0088                      ___fladd@sign 0087  
           __end_of_CANInitialize 3ABC  
