

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Feb 06 22:20:08 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	idataCOMRAM
    40  00284A                     __pidataCOMRAM:
    41                           	opt stack 0
    42                           
    43                           ;initializer for _currentSpeed
    44  00284A  0001               	dw	1
    45  00284C  0000               	dw	0
    46                           
    47                           ;initializer for _dir
    48  00284E  0001               	dw	1
    49                           
    50                           ;initializer for _delay_quartz_frequency_value
    51  002850  10                 	db	16
    52  0000                     _RXB1CON	set	3920
    53  0000                     _RXB1CONbits	set	3920
    54  0000                     _RXB1D0	set	3926
    55  0000                     _RXB1D1	set	3927
    56  0000                     _RXB1D2	set	3928
    57  0000                     _RXB1D3	set	3929
    58  0000                     _RXB1D4	set	3930
    59  0000                     _RXB1D5	set	3931
    60  0000                     _RXB1D6	set	3932
    61  0000                     _RXB1D7	set	3933
    62  0000                     _RXB1DLC	set	3925
    63  0000                     _RXB1DLCbits	set	3925
    64  0000                     _RXB1EIDH	set	3923
    65  0000                     _RXB1EIDL	set	3924
    66  0000                     _RXB1SIDH	set	3921
    67  0000                     _RXB1SIDL	set	3922
    68  0000                     _RXB1SIDLbits	set	3922
    69  0000                     _RXF0EIDH	set	3842
    70  0000                     _RXF0EIDL	set	3843
    71  0000                     _RXF0SIDH	set	3840
    72  0000                     _RXF0SIDL	set	3841
    73  0000                     _RXF0SIDLbits	set	3841
    74  0000                     _RXF1EIDH	set	3846
    75  0000                     _RXF1EIDL	set	3847
    76  0000                     _RXF1SIDH	set	3844
    77  0000                     _RXF1SIDL	set	3845
    78  0000                     _RXF1SIDLbits	set	3845
    79  0000                     _RXF2EIDH	set	3850
    80  0000                     _RXF2EIDL	set	3851
    81  0000                     _RXF2SIDH	set	3848
    82  0000                     _RXF2SIDL	set	3849
    83  0000                     _RXF2SIDLbits	set	3849
    84  0000                     _RXF3EIDH	set	3854
    85  0000                     _RXF3EIDL	set	3855
    86  0000                     _RXF3SIDH	set	3852
    87  0000                     _RXF3SIDL	set	3853
    88  0000                     _RXF3SIDLbits	set	3853
    89  0000                     _RXF4EIDH	set	3858
    90  0000                     _RXF4EIDL	set	3859
    91  0000                     _RXF4SIDH	set	3856
    92  0000                     _RXF4SIDL	set	3857
    93  0000                     _RXF4SIDLbits	set	3857
    94  0000                     _RXF5EIDH	set	3862
    95  0000                     _RXF5EIDL	set	3863
    96  0000                     _RXF5SIDH	set	3860
    97  0000                     _RXF5SIDL	set	3861
    98  0000                     _RXF5SIDLbits	set	3861
    99  0000                     _RXM0EIDH	set	3866
   100  0000                     _RXM0EIDL	set	3867
   101  0000                     _RXM0SIDH	set	3864
   102  0000                     _RXM0SIDL	set	3865
   103  0000                     _RXM0SIDLbits	set	3865
   104  0000                     _RXM1EIDH	set	3870
   105  0000                     _RXM1EIDL	set	3871
   106  0000                     _RXM1SIDH	set	3868
   107  0000                     _RXM1SIDL	set	3869
   108  0000                     _RXM1SIDLbits	set	3869
   109  0000                     _TXB0CONbits	set	3904
   110  0000                     _TXB0D0	set	3910
   111  0000                     _TXB0D1	set	3911
   112  0000                     _TXB0D2	set	3912
   113  0000                     _TXB0D3	set	3913
   114  0000                     _TXB0D4	set	3914
   115  0000                     _TXB0D5	set	3915
   116  0000                     _TXB0D6	set	3916
   117  0000                     _TXB0D7	set	3917
   118  0000                     _TXB0DLC	set	3909
   119  0000                     _TXB0DLCbits	set	3909
   120  0000                     _TXB0EIDH	set	3907
   121  0000                     _TXB0EIDL	set	3908
   122  0000                     _TXB0SIDH	set	3905
   123  0000                     _TXB0SIDL	set	3906
   124  0000                     _TXB0SIDLbits	set	3906
   125  0000                     _TXB1CONbits	set	3888
   126  0000                     _TXB1D0	set	3894
   127  0000                     _TXB1D1	set	3895
   128  0000                     _TXB1D2	set	3896
   129  0000                     _TXB1D3	set	3897
   130  0000                     _TXB1D4	set	3898
   131  0000                     _TXB1D5	set	3899
   132  0000                     _TXB1D6	set	3900
   133  0000                     _TXB1D7	set	3901
   134  0000                     _TXB1DLC	set	3893
   135  0000                     _TXB1DLCbits	set	3893
   136  0000                     _TXB1EIDH	set	3891
   137  0000                     _TXB1EIDL	set	3892
   138  0000                     _TXB1SIDH	set	3889
   139  0000                     _TXB1SIDL	set	3890
   140  0000                     _TXB1SIDLbits	set	3890
   141  0000                     _TXB2CONbits	set	3872
   142  0000                     _TXB2D0	set	3878
   143  0000                     _TXB2D1	set	3879
   144  0000                     _TXB2D2	set	3880
   145  0000                     _TXB2D3	set	3881
   146  0000                     _TXB2D4	set	3882
   147  0000                     _TXB2D5	set	3883
   148  0000                     _TXB2D6	set	3884
   149  0000                     _TXB2D7	set	3885
   150  0000                     _TXB2DLC	set	3877
   151  0000                     _TXB2DLCbits	set	3877
   152  0000                     _TXB2EIDH	set	3875
   153  0000                     _TXB2EIDL	set	3876
   154  0000                     _TXB2SIDH	set	3873
   155  0000                     _TXB2SIDL	set	3874
   156  0000                     _TXB2SIDLbits	set	3874
   157  0000                     _ADCON0bits	set	4034
   158  0000                     _ADCON1bits	set	4033
   159  0000                     _ADCON2bits	set	4032
   160  0000                     _ADRESH	set	4036
   161  0000                     _BRGCON1	set	3952
   162  0000                     _BRGCON2	set	3953
   163  0000                     _BRGCON2bits	set	3953
   164  0000                     _BRGCON3	set	3954
   165  0000                     _BRGCON3bits	set	3954
   166  0000                     _CANCON	set	3951
   167  0000                     _CANCONbits	set	3951
   168  0000                     _CANSTAT	set	3950
   169  0000                     _COMSTATbits	set	3956
   170  0000                     _ECCP1CON	set	4026
   171  0000                     _ECCPR1L	set	4027
   172  0000                     _INTCONbits	set	4082
   173  0000                     _IPR2bits	set	4002
   174  0000                     _IPR3bits	set	4005
   175  0000                     _LATA	set	3977
   176  0000                     _LATB	set	3978
   177  0000                     _LATC	set	3979
   178  0000                     _LATD	set	3980
   179  0000                     _LATE	set	3981
   180  0000                     _PIE1bits	set	3997
   181  0000                     _PIE2bits	set	4000
   182  0000                     _PIE3bits	set	4003
   183  0000                     _PIR1bits	set	3998
   184  0000                     _PIR2bits	set	4001
   185  0000                     _PIR3bits	set	4004
   186  0000                     _PORTAbits	set	3968
   187  0000                     _PORTCbits	set	3970
   188  0000                     _PR2	set	4043
   189  0000                     _RCONbits	set	4048
   190  0000                     _RXB0CON	set	3936
   191  0000                     _RXB0CONbits	set	3936
   192  0000                     _RXB0D0	set	3942
   193  0000                     _RXB0D1	set	3943
   194  0000                     _RXB0D2	set	3944
   195  0000                     _RXB0D3	set	3945
   196  0000                     _RXB0D4	set	3946
   197  0000                     _RXB0D5	set	3947
   198  0000                     _RXB0D6	set	3948
   199  0000                     _RXB0D7	set	3949
   200  0000                     _RXB0DLC	set	3941
   201  0000                     _RXB0DLCbits	set	3941
   202  0000                     _RXB0EIDH	set	3939
   203  0000                     _RXB0EIDL	set	3940
   204  0000                     _RXB0SIDH	set	3937
   205  0000                     _RXB0SIDL	set	3938
   206  0000                     _RXB0SIDLbits	set	3938
   207  0000                     _RXERRCNT	set	3957
   208  0000                     _T2CON	set	4042
   209  0000                     _T2CONbits	set	4042
   210  0000                     _T3CON	set	4017
   211  0000                     _TMR2	set	4044
   212  0000                     _TMR3H	set	4019
   213  0000                     _TMR3L	set	4018
   214  0000                     _TRISA	set	3986
   215  0000                     _TRISB	set	3987
   216  0000                     _TRISC	set	3988
   217  0000                     _TRISD	set	3989
   218  0000                     _TRISDbits	set	3989
   219  0000                     _TRISE	set	3990
   220  0000                     _TXERRCNT	set	3958
   221                           
   222                           ; #config settings
   223  0000                     
   224                           	psect	cinit
   225  00265E                     __pcinit:
   226                           	opt stack 0
   227  00265E                     start_initialization:
   228                           	opt stack 0
   229  00265E                     __initialization:
   230                           	opt stack 0
   231                           
   232                           ; Clear objects allocated to BANK0 (91 bytes)
   233  00265E  EE00  F060         	lfsr	0,__pbssBANK0
   234  002662  0E5B               	movlw	91
   235  002664                     clear_0:
   236  002664  6AEE               	clrf	postinc0,c
   237  002666  06E8               	decf	wreg,f,c
   238  002668  E1FD               	bnz	clear_0
   239                           
   240                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   241  00266A  6A3B               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   242  00266C  6A3A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   243                           
   244                           ; Clear objects allocated to COMRAM (26 bytes)
   245  00266E  EE00  F020         	lfsr	0,__pbssCOMRAM
   246  002672  0E1A               	movlw	26
   247  002674                     clear_1:
   248  002674  6AEE               	clrf	postinc0,c
   249  002676  06E8               	decf	wreg,f,c
   250  002678  E1FD               	bnz	clear_1
   251                           
   252                           ; Initialize objects allocated to COMRAM (7 bytes)
   253                           ; load TBLPTR registers with __pidataCOMRAM
   254  00267A  0E4A               	movlw	low __pidataCOMRAM
   255  00267C  6EF6               	movwf	tblptrl,c
   256  00267E  0E28               	movlw	high __pidataCOMRAM
   257  002680  6EF7               	movwf	tblptrh,c
   258  002682  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   259  002684  6EF8               	movwf	tblptru,c
   260  002686  EE00  F03C         	lfsr	0,__pdataCOMRAM
   261  00268A  EE10 F007          	lfsr	1,7
   262  00268E                     copy_data0:
   263  00268E  0009               	tblrd		*+
   264  002690  CFF5 FFEE          	movff	tablat,postinc0
   265  002694  50E5               	movf	postdec1,w,c
   266  002696  50E1               	movf	fsr1l,w,c
   267  002698  E1FA               	bnz	copy_data0
   268  00269A                     end_of_initialization:
   269                           	opt stack 0
   270  00269A                     __end_of__initialization:
   271                           	opt stack 0
   272  00269A  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   273  00269C  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   274  00269E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   275  0026A0  6EF8               	movwf	tblptru,c
   276  0026A2  0100               	movlb	0
   277  0026A4  EFC6  F00C         	goto	_main	;jump to C main() function
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           postdec1	equ	0xFE5
   285                           fsr1l	equ	0xFE1
   286                           
   287                           	psect	bitbssCOMRAM
   288  0001D0                     __pbitbssCOMRAM:
   289                           	opt stack 0
   290  0001D0                     _can_retry:
   291                           	opt stack 0
   292  0001D0                     	ds	1
   293  0001D1                     _centralina_abs:
   294                           	opt stack 0
   295  0001D1                     	ds	1
   296  0001D2                     _centralina_comando:
   297                           	opt stack 0
   298  0001D2                     	ds	1
   299  0001D3                     _centralina_sterzo:
   300                           	opt stack 0
   301  0001D3                     	ds	1
   302  0001D4                     _message_sent:
   303                           	opt stack 0
   304  0001D4                     	ds	1
   305  0001D5                     _remote_frame:
   306                           	opt stack 0
   307  0001D5                     	ds	1
   308  0001D6                     _remote_frame1:
   309                           	opt stack 0
   310  0001D6                     	ds	1
   311  0001D7                     _request_sent:
   312                           	opt stack 0
   313  0001D7                     	ds	1
   314  0001D8                     _speed_fetched:
   315                           	opt stack 0
   316  0001D8                     	ds	1
   317                           tblptru	equ	0xFF8
   318                           tblptrh	equ	0xFF7
   319                           tblptrl	equ	0xFF6
   320                           tablat	equ	0xFF5
   321                           postinc0	equ	0xFEE
   322                           wreg	equ	0xFE8
   323                           postdec1	equ	0xFE5
   324                           fsr1l	equ	0xFE1
   325                           
   326                           	psect	bssCOMRAM
   327  000020                     __pbssCOMRAM:
   328                           	opt stack 0
   329  000020                     _duty_set:
   330                           	opt stack 0
   331  000020                     	ds	4
   332  000024                     _requestSpeed:
   333                           	opt stack 0
   334  000024                     	ds	4
   335  000028                     _timeCounter:
   336                           	opt stack 0
   337  000028                     	ds	4
   338  00002C                     _clock_counter_reference:
   339                           	opt stack 0
   340  00002C                     	ds	2
   341  00002E                     _errore:
   342                           	opt stack 0
   343  00002E                     	ds	2
   344  000030                     _left_speed:
   345                           	opt stack 0
   346  000030                     	ds	2
   347  000032                     _previousPwm:
   348                           	opt stack 0
   349  000032                     	ds	2
   350  000034                     _right_speed:
   351                           	opt stack 0
   352  000034                     	ds	2
   353  000036                     _UART1Config:
   354                           	opt stack 0
   355  000036                     	ds	1
   356  000037                     _baud:
   357                           	opt stack 0
   358  000037                     	ds	1
   359  000038                     _current:
   360                           	opt stack 0
   361  000038                     	ds	1
   362  000039                     _scrittura:
   363                           	opt stack 0
   364  000039                     	ds	1
   365                           tblptru	equ	0xFF8
   366                           tblptrh	equ	0xFF7
   367                           tblptrl	equ	0xFF6
   368                           tablat	equ	0xFF5
   369                           postinc0	equ	0xFEE
   370                           wreg	equ	0xFE8
   371                           postdec1	equ	0xFE5
   372                           fsr1l	equ	0xFE1
   373                           
   374                           	psect	dataCOMRAM
   375  00003C                     __pdataCOMRAM:
   376                           	opt stack 0
   377  00003C                     _currentSpeed:
   378                           	opt stack 0
   379  00003C                     	ds	4
   380  000040                     _dir:
   381                           	opt stack 0
   382  000040                     	ds	2
   383  000042                     _delay_quartz_frequency_value:
   384                           	opt stack 0
   385  000042                     	ds	1
   386                           tblptru	equ	0xFF8
   387                           tblptrh	equ	0xFF7
   388                           tblptrl	equ	0xFF6
   389                           tablat	equ	0xFF5
   390                           postinc0	equ	0xFEE
   391                           wreg	equ	0xFE8
   392                           postdec1	equ	0xFE5
   393                           fsr1l	equ	0xFE1
   394                           
   395                           	psect	bssBANK0
   396  000060                     __pbssBANK0:
   397                           	opt stack 0
   398  000060                     _counter_array:
   399                           	opt stack 0
   400  000060                     	ds	8
   401  000068                     _currentSpeed_array:
   402                           	opt stack 0
   403  000068                     	ds	8
   404  000070                     _correzione:
   405                           	opt stack 0
   406  000070                     	ds	4
   407  000074                     _id:
   408                           	opt stack 0
   409  000074                     	ds	4
   410  000078                     _id1:
   411                           	opt stack 0
   412  000078                     	ds	4
   413  00007C                     _previousTimeCounter:
   414                           	opt stack 0
   415  00007C                     	ds	4
   416  000080                     _previousTimeCounter1:
   417                           	opt stack 0
   418  000080                     	ds	4
   419  000084                     _previousTimeCounter2:
   420                           	opt stack 0
   421  000084                     	ds	4
   422  000088                     _duty_cycle:
   423                           	opt stack 0
   424  000088                     	ds	2
   425  00008A                     _vBatt:
   426                           	opt stack 0
   427  00008A                     	ds	2
   428  00008C                     _msg:
   429                           	opt stack 0
   430  00008C                     	ds	15
   431  00009B                     _data_array:
   432                           	opt stack 0
   433  00009B                     	ds	8
   434  0000A3                     _data_array1:
   435                           	opt stack 0
   436  0000A3                     	ds	8
   437  0000AB                     _data_array_debug:
   438                           	opt stack 0
   439  0000AB                     	ds	8
   440  0000B3                     _data_debug1:
   441                           	opt stack 0
   442  0000B3                     	ds	8
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           postdec1	equ	0xFE5
   450                           fsr1l	equ	0xFE1
   451                           
   452                           	psect	cstackBANK0
   453  0000BB                     __pcstackBANK0:
   454                           	opt stack 0
   455  0000BB                     ?_abs:
   456                           	opt stack 0
   457  0000BB                     ?___lwdiv:
   458                           	opt stack 0
   459  0000BB                     CANOperationMode@mode:
   460                           	opt stack 0
   461  0000BB                     _CANisTxReady$2989:
   462                           	opt stack 0
   463  0000BB                     OpenEPWM1@period:
   464                           	opt stack 0
   465  0000BB                     SetOutputEPWM1@outputmode:
   466                           	opt stack 0
   467  0000BB                     OpenTimer2@config:
   468                           	opt stack 0
   469  0000BB                     SetDCEPWM1@dutycycle:
   470                           	opt stack 0
   471  0000BB                     abs@a:
   472                           	opt stack 0
   473  0000BB                     ___lwdiv@dividend:
   474                           	opt stack 0
   475  0000BB                     CANsendMessage@identifier:
   476                           	opt stack 0
   477  0000BB                     CANSetMask@mask:
   478                           	opt stack 0
   479  0000BB                     CANSetFilter@filter:
   480                           	opt stack 0
   481                           
   482                           ; 4 bytes @ 0x0
   483  0000BB                     	ds	1
   484  0000BC                     SetOutputEPWM1@outputconfig:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x1
   488  0000BC                     	ds	1
   489  0000BD                     ??_abs:
   490  0000BD                     ??_SetDCEPWM1:
   491  0000BD                     ___lwdiv@divisor:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x2
   495  0000BD                     	ds	2
   496  0000BF                     CANSetMask@type:
   497                           	opt stack 0
   498  0000BF                     CANSetFilter@type:
   499                           	opt stack 0
   500  0000BF                     ___lwdiv@counter:
   501                           	opt stack 0
   502  0000BF                     CANsendMessage@data:
   503                           	opt stack 0
   504  0000BF                     SetDCEPWM1@DCycle:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x4
   508  0000BF                     	ds	1
   509  0000C0                     ??_CANSetMask:
   510  0000C0                     ??_CANSetFilter:
   511  0000C0                     ___lwdiv@quotient:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0x5
   515  0000C0                     	ds	1
   516  0000C1                     CANsendMessage@dataLength:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x6
   520  0000C1                     	ds	1
   521  0000C2                     ?___wmul:
   522                           	opt stack 0
   523  0000C2                     CANsendMessage@flags:
   524                           	opt stack 0
   525  0000C2                     ___wmul@multiplier:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x7
   529  0000C2                     	ds	1
   530  0000C3                     ??_CANsendMessage:
   531                           
   532                           ; 0 bytes @ 0x8
   533  0000C3                     	ds	1
   534  0000C4                     CANSetMask@numBuffer:
   535                           	opt stack 0
   536  0000C4                     CANSetFilter@numBuffer:
   537                           	opt stack 0
   538  0000C4                     ___wmul@multiplicand:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x9
   542  0000C4                     	ds	1
   543  0000C5                     CANSetMask@tamp:
   544                           	opt stack 0
   545  0000C5                     CANSetFilter@tamp:
   546                           	opt stack 0
   547                           
   548                           ; 4 bytes @ 0xA
   549  0000C5                     	ds	1
   550  0000C6                     ___wmul@product:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0xB
   554  0000C6                     	ds	1
   555  0000C7                     CANsendMessage@tamp:
   556                           	opt stack 0
   557                           
   558                           ; 4 bytes @ 0xC
   559  0000C7                     	ds	1
   560  0000C8                     ?___awdiv:
   561                           	opt stack 0
   562  0000C8                     delay_ms@value_ms:
   563                           	opt stack 0
   564  0000C8                     ___awdiv@dividend:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0xD
   568  0000C8                     	ds	1
   569  0000C9                     CANInitialize@phaseSeg1:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0xE
   573  0000C9                     	ds	1
   574  0000CA                     CANInitialize@phaseSeg2:
   575                           	opt stack 0
   576  0000CA                     ___awdiv@divisor:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0xF
   580  0000CA                     	ds	1
   581  0000CB                     CANInitialize@SJW:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x10
   585  0000CB                     	ds	1
   586  0000CC                     CANInitialize@BRP:
   587                           	opt stack 0
   588  0000CC                     ___awdiv@counter:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x11
   592  0000CC                     	ds	1
   593  0000CD                     CANInitialize@flags:
   594                           	opt stack 0
   595  0000CD                     ___awdiv@sign:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x12
   599  0000CD                     	ds	1
   600  0000CE                     ??_CANInitialize:
   601  0000CE                     ___awdiv@quotient:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x13
   605  0000CE                     	ds	2
   606  0000D0                     
   607                           ; 0 bytes @ 0x15
   608  0000D0                     	ds	2
   609  0000D2                     CANInitialize@propSeg:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x17
   613  0000D2                     	ds	1
   614  0000D3                     CANInitialize@FilterConfig1:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x18
   618  0000D3                     	ds	1
   619  0000D4                     CANInitialize@FilterConfig2:
   620                           	opt stack 0
   621                           
   622                           ; 1 bytes @ 0x19
   623  0000D4                     	ds	1
   624  0000D5                     ??_main:
   625                           
   626                           ; 0 bytes @ 0x1A
   627  0000D5                     	ds	8
   628  0000DD                     main@period:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x22
   632  0000DD                     	ds	1
   633                           tblptru	equ	0xFF8
   634                           tblptrh	equ	0xFF7
   635                           tblptrl	equ	0xFF6
   636                           tablat	equ	0xFF5
   637                           postinc0	equ	0xFEE
   638                           wreg	equ	0xFE8
   639                           postdec1	equ	0xFE5
   640                           fsr1l	equ	0xFE1
   641                           
   642                           	psect	cstackCOMRAM
   643  000001                     __pcstackCOMRAM:
   644                           	opt stack 0
   645  000001                     _CANisRxReady$2991:
   646                           	opt stack 0
   647  000001                     i1SetOutputEPWM1@outputmode:
   648                           	opt stack 0
   649  000001                     CANreceiveMessage@msg:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x0
   653  000001                     	ds	1
   654  000002                     i1SetOutputEPWM1@outputconfig:
   655                           	opt stack 0
   656                           
   657                           ; 1 bytes @ 0x1
   658  000002                     	ds	1
   659  000003                     ??_CANreceiveMessage:
   660                           
   661                           ; 0 bytes @ 0x2
   662  000003                     	ds	8
   663  00000B                     CANreceiveMessage@error:
   664                           	opt stack 0
   665                           
   666                           ; 1 bytes @ 0xA
   667  00000B                     	ds	1
   668  00000C                     CANreceiveMessage@tamp:
   669                           	opt stack 0
   670                           
   671                           ; 1 bytes @ 0xB
   672  00000C                     	ds	1
   673  00000D                     ??_ISR_bassa:
   674                           
   675                           ; 0 bytes @ 0xC
   676  00000D                     	ds	19
   677                           tblptru	equ	0xFF8
   678                           tblptrh	equ	0xFF7
   679                           tblptrl	equ	0xFF6
   680                           tablat	equ	0xFF5
   681                           postinc0	equ	0xFEE
   682                           wreg	equ	0xFE8
   683                           postdec1	equ	0xFE5
   684                           fsr1l	equ	0xFE1
   685                           
   686 ;;
   687 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   688 ;;
   689 ;; *************** function _main *****************
   690 ;; Defined at:
   691 ;;		line 164 in file "motore.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  period          1   34[BANK0 ] unsigned char 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  2  672[None  ] int 
   698 ;; Registers used:
   699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   705 ;;      Params:         0       0       0       0
   706 ;;      Locals:         0       1       0       0
   707 ;;      Temps:          0       8       0       0
   708 ;;      Totals:         0       9       0       0
   709 ;;Total ram usage:        9 bytes
   710 ;; Hardware stack levels required when called:    5
   711 ;; This function calls:
   712 ;;		_CANisTxReady
   713 ;;		_CANsendMessage
   714 ;;		_OpenEPWM1
   715 ;;		_OpenTimer2
   716 ;;		_SetDCEPWM1
   717 ;;		_SetOutputEPWM1
   718 ;;		___lwdiv
   719 ;;		___wmul
   720 ;;		_abs
   721 ;;		_battery_measure
   722 ;;		_configurazione_iniziale
   723 ;;		_delay_ms
   724 ;; This function is called by:
   725 ;;		Startup code after reset
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text0
   730  00198C                     __ptext0:
   731                           	opt stack 0
   732  00198C                     _main:
   733                           	opt stack 26
   734                           
   735                           ;motore.c: 166: unsigned char period;
   736                           ;motore.c: 167: configurazione_iniziale();
   737                           
   738                           ;incstack = 0
   739  00198C  EC22  F012         	call	_configurazione_iniziale	;wreg free
   740                           
   741                           ;motore.c: 168: PORTAbits.RA1 = 1;
   742  001990  8280               	bsf	3968,1,c	;volatile
   743                           
   744                           ;motore.c: 169: PORTCbits.RC1 = 1;
   745  001992  8282               	bsf	3970,1,c	;volatile
   746                           
   747                           ;motore.c: 170: delay_ms(500);
   748  001994  0E01               	movlw	1
   749  001996  0100               	movlb	0	; () banked
   750  001998  6FC9               	movwf	(delay_ms@value_ms+1)& (0+255),b
   751  00199A  0EF4               	movlw	244
   752  00199C  6FC8               	movwf	delay_ms@value_ms& (0+255),b
   753  00199E  ECB3  F013         	call	_delay_ms	;wreg free
   754                           
   755                           ;motore.c: 171: PORTAbits.RA1 = 0;
   756  0019A2  9280               	bcf	3968,1,c	;volatile
   757                           
   758                           ;motore.c: 172: PORTCbits.RC1 = 0;
   759  0019A4  9282               	bcf	3970,1,c	;volatile
   760                           
   761                           ;motore.c: 173: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
   762  0019A6  0E06               	movlw	6
   763  0019A8  ECF5  F013         	call	_OpenTimer2
   764                           
   765                           ;motore.c: 174: period = 0xFE;
   766  0019AC  0EFE               	movlw	254
   767  0019AE  0100               	movlb	0	; () banked
   768  0019B0  6FDD               	movwf	main@period& (0+255),b
   769                           
   770                           ; BSR set to: 0
   771                           ;motore.c: 175: OpenEPWM1(period);
   772  0019B2  0100               	movlb	0	; () banked
   773  0019B4  51DD               	movf	main@period& (0+255),w,b
   774  0019B6  EC1C  F014         	call	_OpenEPWM1
   775                           
   776                           ;motore.c: 176: speed_fetched = 1;
   777  0019BA  803B               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
   778                           
   779                           ;motore.c: 177: SetOutputEPWM1(0b01111111, 0b11111100);
   780  0019BC  0EFC               	movlw	252
   781  0019BE  0100               	movlb	0	; () banked
   782  0019C0  6FBB               	movwf	SetOutputEPWM1@outputmode& (0+255),b
   783  0019C2  0E7F               	movlw	127
   784  0019C4  EC06  F013         	call	_SetOutputEPWM1
   785                           
   786                           ;motore.c: 178: PORTCbits.RC5 = 1;
   787  0019C8  8A82               	bsf	3970,5,c	;volatile
   788                           
   789                           ;motore.c: 179: PORTCbits.RC4 = 1;
   790  0019CA  8882               	bsf	3970,4,c	;volatile
   791  0019CC                     l4968:
   792                           
   793                           ;motore.c: 186: if ((timeCounter - previousTimeCounter1 >= 30)) {
   794  0019CC  C080  F0D5         	movff	_previousTimeCounter1,??_main
   795  0019D0  C081  F0D6         	movff	_previousTimeCounter1+1,??_main+1
   796  0019D4  C082  F0D7         	movff	_previousTimeCounter1+2,??_main+2
   797  0019D8  C083  F0D8         	movff	_previousTimeCounter1+3,??_main+3
   798  0019DC  0100               	movlb	0	; () banked
   799  0019DE  1FD5               	comf	??_main& (0+255),f,b
   800  0019E0  1FD6               	comf	(??_main+1)& (0+255),f,b
   801  0019E2  1FD7               	comf	(??_main+2)& (0+255),f,b
   802  0019E4  1FD8               	comf	(??_main+3)& (0+255),f,b
   803  0019E6  2BD5               	incf	??_main& (0+255),f,b
   804  0019E8  0E00               	movlw	0
   805  0019EA  23D6               	addwfc	(??_main+1)& (0+255),f,b
   806  0019EC  23D7               	addwfc	(??_main+2)& (0+255),f,b
   807  0019EE  23D8               	addwfc	(??_main+3)& (0+255),f,b
   808  0019F0  5028               	movf	_timeCounter,w,c	;volatile
   809  0019F2  0100               	movlb	0	; () banked
   810  0019F4  25D5               	addwf	??_main& (0+255),w,b
   811  0019F6  0100               	movlb	0	; () banked
   812  0019F8  6FD9               	movwf	(??_main+4)& (0+255),b
   813  0019FA  5029               	movf	_timeCounter+1,w,c	;volatile
   814  0019FC  0100               	movlb	0	; () banked
   815  0019FE  21D6               	addwfc	(??_main+1)& (0+255),w,b
   816  001A00  0100               	movlb	0	; () banked
   817  001A02  6FDA               	movwf	(??_main+5)& (0+255),b
   818  001A04  502A               	movf	_timeCounter+2,w,c	;volatile
   819  001A06  0100               	movlb	0	; () banked
   820  001A08  21D7               	addwfc	(??_main+2)& (0+255),w,b
   821  001A0A  0100               	movlb	0	; () banked
   822  001A0C  6FDB               	movwf	(??_main+6)& (0+255),b
   823  001A0E  502B               	movf	_timeCounter+3,w,c	;volatile
   824  001A10  0100               	movlb	0	; () banked
   825  001A12  21D8               	addwfc	(??_main+3)& (0+255),w,b
   826  001A14  0100               	movlb	0	; () banked
   827  001A16  6FDC               	movwf	(??_main+7)& (0+255),b
   828  001A18  0100               	movlb	0	; () banked
   829  001A1A  51DC               	movf	(??_main+7)& (0+255),w,b
   830  001A1C  0100               	movlb	0	; () banked
   831  001A1E  11DB               	iorwf	(??_main+6)& (0+255),w,b
   832  001A20  0100               	movlb	0	; () banked
   833  001A22  11DA               	iorwf	(??_main+5)& (0+255),w,b
   834  001A24  E105               	bnz	l4972
   835  001A26  0E1E               	movlw	30
   836  001A28  0100               	movlb	0	; () banked
   837  001A2A  5DD9               	subwf	(??_main+4)& (0+255),w,b
   838  001A2C  A0D8               	btfss	status,0,c
   839  001A2E  D145               	goto	l5012
   840  001A30                     l4972:
   841  001A30  ECE3  F013         	call	_CANisTxReady	;wreg free
   842  001A34  06E8               	decf	wreg,f,c
   843  001A36  A4D8               	btfss	status,2,c
   844  001A38  D7FB               	goto	l4972
   845                           
   846                           ;motore.c: 188: }
   847                           ;motore.c: 189: CANsendMessage(0b00000000000000000000000000110, data_array_debug, 8, CAN
      +                          _CONFIG_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   848  001A3A  0E06               	movlw	6
   849  001A3C  0100               	movlb	0	; () banked
   850  001A3E  6FBB               	movwf	CANsendMessage@identifier& (0+255),b
   851  001A40  0E00               	movlw	0
   852  001A42  6FBC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   853  001A44  0E00               	movlw	0
   854  001A46  6FBD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   855  001A48  0E00               	movlw	0
   856  001A4A  6FBE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   857  001A4C  0EAB               	movlw	low _data_array_debug
   858  001A4E  0100               	movlb	0	; () banked
   859  001A50  6FBF               	movwf	CANsendMessage@data& (0+255),b
   860  001A52  0E00               	movlw	high _data_array_debug
   861  001A54  0100               	movlb	0	; () banked
   862  001A56  6FC0               	movwf	(CANsendMessage@data+1)& (0+255),b
   863  001A58  0E08               	movlw	8
   864  001A5A  0100               	movlb	0	; () banked
   865  001A5C  6FC1               	movwf	CANsendMessage@dataLength& (0+255),b
   866  001A5E  0EFC               	movlw	252
   867  001A60  0100               	movlb	0	; () banked
   868  001A62  6FC2               	movwf	CANsendMessage@flags& (0+255),b
   869  001A64  EC7A  F006         	call	_CANsendMessage	;wreg free
   870                           
   871                           ;motore.c: 190: data_debug1[0] = 0x96;
   872  001A68  0E96               	movlw	150
   873  001A6A  0100               	movlb	0	; () banked
   874  001A6C  6FB3               	movwf	_data_debug1& (0+255),b
   875                           
   876                           ; BSR set to: 0
   877                           ;motore.c: 191: CANsendMessage(0b00000000000000000000000000101, data_debug1, 8, CAN_CONF
      +                          IG_STD_MSG & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
   878  001A6E  0E05               	movlw	5
   879  001A70  0100               	movlb	0	; () banked
   880  001A72  6FBB               	movwf	CANsendMessage@identifier& (0+255),b
   881  001A74  0E00               	movlw	0
   882  001A76  6FBC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   883  001A78  0E00               	movlw	0
   884  001A7A  6FBD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   885  001A7C  0E00               	movlw	0
   886  001A7E  6FBE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   887  001A80  0EB3               	movlw	low _data_debug1
   888  001A82  0100               	movlb	0	; () banked
   889  001A84  6FBF               	movwf	CANsendMessage@data& (0+255),b
   890  001A86  0E00               	movlw	high _data_debug1
   891  001A88  0100               	movlb	0	; () banked
   892  001A8A  6FC0               	movwf	(CANsendMessage@data+1)& (0+255),b
   893  001A8C  0E08               	movlw	8
   894  001A8E  0100               	movlb	0	; () banked
   895  001A90  6FC1               	movwf	CANsendMessage@dataLength& (0+255),b
   896  001A92  0EBC               	movlw	188
   897  001A94  0100               	movlb	0	; () banked
   898  001A96  6FC2               	movwf	CANsendMessage@flags& (0+255),b
   899  001A98  EC7A  F006         	call	_CANsendMessage	;wreg free
   900                           
   901                           ;motore.c: 192: if (speed_fetched == 1) {
   902  001A9C  A03B               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
   903  001A9E  D0FF               	goto	l5008
   904                           
   905                           ;motore.c: 201: speed_fetched = 0;
   906  001AA0  903B               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
   907                           
   908                           ;motore.c: 202: currentSpeed = ((left_speed + right_speed) / 2);
   909  001AA2  5034               	movf	_right_speed,w,c	;volatile
   910  001AA4  2430               	addwf	_left_speed,w,c	;volatile
   911  001AA6  0100               	movlb	0	; () banked
   912  001AA8  6FD5               	movwf	??_main& (0+255),b
   913  001AAA  5035               	movf	_right_speed+1,w,c	;volatile
   914  001AAC  2031               	addwfc	_left_speed+1,w,c	;volatile
   915  001AAE  0100               	movlb	0	; () banked
   916  001AB0  6FD6               	movwf	(??_main+1)& (0+255),b
   917  001AB2  90D8               	bcf	status,0,c
   918  001AB4  0100               	movlb	0	; () banked
   919  001AB6  31D6               	rrcf	(??_main+1)& (0+255),w,b
   920  001AB8  0100               	movlb	0	; () banked
   921  001ABA  6FD8               	movwf	(??_main+3)& (0+255),b
   922  001ABC  0100               	movlb	0	; () banked
   923  001ABE  31D5               	rrcf	??_main& (0+255),w,b
   924  001AC0  0100               	movlb	0	; () banked
   925  001AC2  6FD7               	movwf	(??_main+2)& (0+255),b
   926  001AC4  C0D7  F03C         	movff	??_main+2,_currentSpeed	;volatile
   927  001AC8  C0D8  F03D         	movff	??_main+3,_currentSpeed+1	;volatile
   928  001ACC  6A3E               	clrf	_currentSpeed+2,c	;volatile
   929  001ACE  6A3F               	clrf	_currentSpeed+3,c	;volatile
   930                           
   931                           ; BSR set to: 0
   932                           ;motore.c: 204: requestSpeed = 3000;
   933  001AD0  0EB8               	movlw	184
   934  001AD2  6E24               	movwf	_requestSpeed,c	;volatile
   935  001AD4  0E0B               	movlw	11
   936  001AD6  6E25               	movwf	_requestSpeed+1,c	;volatile
   937  001AD8  0E00               	movlw	0
   938  001ADA  6E26               	movwf	_requestSpeed+2,c	;volatile
   939  001ADC  0E00               	movlw	0
   940  001ADE  6E27               	movwf	_requestSpeed+3,c	;volatile
   941                           
   942                           ; BSR set to: 0
   943                           ;motore.c: 205: errore = abs((currentSpeed - requestSpeed));
   944  001AE0  C024  F0D5         	movff	_requestSpeed,??_main	;volatile
   945  001AE4  C025  F0D6         	movff	_requestSpeed+1,??_main+1	;volatile
   946  001AE8  0100               	movlb	0	; () banked
   947  001AEA  1FD5               	comf	??_main& (0+255),f,b
   948  001AEC  1FD6               	comf	(??_main+1)& (0+255),f,b
   949  001AEE  4BD5               	infsnz	??_main& (0+255),f,b
   950  001AF0  2BD6               	incf	(??_main+1)& (0+255),f,b
   951  001AF2  503C               	movf	_currentSpeed,w,c	;volatile
   952  001AF4  0100               	movlb	0	; () banked
   953  001AF6  25D5               	addwf	??_main& (0+255),w,b
   954  001AF8  0100               	movlb	0	; () banked
   955  001AFA  6FBB               	movwf	abs@a& (0+255),b
   956  001AFC  503D               	movf	_currentSpeed+1,w,c	;volatile
   957  001AFE  0100               	movlb	0	; () banked
   958  001B00  21D6               	addwfc	(??_main+1)& (0+255),w,b
   959  001B02  0100               	movlb	0	; () banked
   960  001B04  6FBC               	movwf	(abs@a+1)& (0+255),b
   961  001B06  ECCD  F013         	call	_abs	;wreg free
   962  001B0A  C0BB  F02E         	movff	?_abs,_errore
   963  001B0E  C0BC  F02F         	movff	?_abs+1,_errore+1
   964                           
   965                           ;motore.c: 206: correzione = ((errore / 150)*(errore / 150))*2;
   966  001B12  0E00               	movlw	0
   967  001B14  0100               	movlb	0	; () banked
   968  001B16  6FBE               	movwf	(___lwdiv@divisor+1)& (0+255),b
   969  001B18  0E96               	movlw	150
   970  001B1A  6FBD               	movwf	___lwdiv@divisor& (0+255),b
   971  001B1C  C02E  F0BB         	movff	_errore,___lwdiv@dividend
   972  001B20  C02F  F0BC         	movff	_errore+1,___lwdiv@dividend+1
   973  001B24  ECCA  F012         	call	___lwdiv	;wreg free
   974  001B28  C0BB  F0C2         	movff	?___lwdiv,___wmul@multiplier
   975  001B2C  C0BC  F0C3         	movff	?___lwdiv+1,___wmul@multiplier+1
   976  001B30  0E00               	movlw	0
   977  001B32  0100               	movlb	0	; () banked
   978  001B34  6FBE               	movwf	(___lwdiv@divisor+1)& (0+255),b
   979  001B36  0E96               	movlw	150
   980  001B38  6FBD               	movwf	___lwdiv@divisor& (0+255),b
   981  001B3A  C02E  F0BB         	movff	_errore,___lwdiv@dividend
   982  001B3E  C02F  F0BC         	movff	_errore+1,___lwdiv@dividend+1
   983  001B42  ECCA  F012         	call	___lwdiv	;wreg free
   984  001B46  C0BB  F0C4         	movff	?___lwdiv,___wmul@multiplicand
   985  001B4A  C0BC  F0C5         	movff	?___lwdiv+1,___wmul@multiplicand+1
   986  001B4E  EC98  F013         	call	___wmul	;wreg free
   987  001B52  90D8               	bcf	status,0,c
   988  001B54  0100               	movlb	0	; () banked
   989  001B56  37C2               	rlcf	?___wmul& (0+255),f,b
   990  001B58  0100               	movlb	0	; () banked
   991  001B5A  37C3               	rlcf	(?___wmul+1)& (0+255),f,b
   992  001B5C  0100               	movlb	0	; () banked
   993  001B5E  C0C2  F070         	movff	?___wmul,_correzione
   994  001B62  0100               	movlb	0	; () banked
   995  001B64  C0C3  F071         	movff	?___wmul+1,_correzione+1
   996  001B68  0100               	movlb	0	; () banked
   997  001B6A  6B72               	clrf	(_correzione+2)& (0+255),b
   998  001B6C  6B73               	clrf	(_correzione+3)& (0+255),b
   999                           
  1000                           ; BSR set to: 0
  1001                           ;motore.c: 207: if (correzione > 1) {
  1002  001B6E  0100               	movlb	0	; () banked
  1003  001B70  BF73               	btfsc	(_correzione+3)& (0+255),7,b
  1004  001B72  D08B               	goto	l5004
  1005  001B74  0100               	movlb	0	; () banked
  1006  001B76  5173               	movf	(_correzione+3)& (0+255),w,b
  1007  001B78  0100               	movlb	0	; () banked
  1008  001B7A  1172               	iorwf	(_correzione+2)& (0+255),w,b
  1009  001B7C  0100               	movlb	0	; () banked
  1010  001B7E  1171               	iorwf	(_correzione+1)& (0+255),w,b
  1011  001B80  E105               	bnz	u6220
  1012  001B82  0E02               	movlw	2
  1013  001B84  0100               	movlb	0	; () banked
  1014  001B86  5D70               	subwf	_correzione& (0+255),w,b
  1015  001B88  A0D8               	btfss	status,0,c
  1016  001B8A  D07F               	goto	l5004
  1017  001B8C                     u6220:
  1018                           
  1019                           ; BSR set to: 0
  1020                           ;motore.c: 208: if (currentSpeed - requestSpeed > 0) {
  1021  001B8C  C024  F0D5         	movff	_requestSpeed,??_main	;volatile
  1022  001B90  C025  F0D6         	movff	_requestSpeed+1,??_main+1	;volatile
  1023  001B94  C026  F0D7         	movff	_requestSpeed+2,??_main+2	;volatile
  1024  001B98  C027  F0D8         	movff	_requestSpeed+3,??_main+3	;volatile
  1025  001B9C  0100               	movlb	0	; () banked
  1026  001B9E  1FD5               	comf	??_main& (0+255),f,b
  1027  001BA0  1FD6               	comf	(??_main+1)& (0+255),f,b
  1028  001BA2  1FD7               	comf	(??_main+2)& (0+255),f,b
  1029  001BA4  1FD8               	comf	(??_main+3)& (0+255),f,b
  1030  001BA6  2BD5               	incf	??_main& (0+255),f,b
  1031  001BA8  0E00               	movlw	0
  1032  001BAA  23D6               	addwfc	(??_main+1)& (0+255),f,b
  1033  001BAC  23D7               	addwfc	(??_main+2)& (0+255),f,b
  1034  001BAE  23D8               	addwfc	(??_main+3)& (0+255),f,b
  1035  001BB0  503C               	movf	_currentSpeed,w,c	;volatile
  1036  001BB2  0100               	movlb	0	; () banked
  1037  001BB4  25D5               	addwf	??_main& (0+255),w,b
  1038  001BB6  0100               	movlb	0	; () banked
  1039  001BB8  6FD9               	movwf	(??_main+4)& (0+255),b
  1040  001BBA  503D               	movf	_currentSpeed+1,w,c	;volatile
  1041  001BBC  0100               	movlb	0	; () banked
  1042  001BBE  21D6               	addwfc	(??_main+1)& (0+255),w,b
  1043  001BC0  0100               	movlb	0	; () banked
  1044  001BC2  6FDA               	movwf	(??_main+5)& (0+255),b
  1045  001BC4  503E               	movf	_currentSpeed+2,w,c	;volatile
  1046  001BC6  0100               	movlb	0	; () banked
  1047  001BC8  21D7               	addwfc	(??_main+2)& (0+255),w,b
  1048  001BCA  0100               	movlb	0	; () banked
  1049  001BCC  6FDB               	movwf	(??_main+6)& (0+255),b
  1050  001BCE  503F               	movf	_currentSpeed+3,w,c	;volatile
  1051  001BD0  0100               	movlb	0	; () banked
  1052  001BD2  21D8               	addwfc	(??_main+3)& (0+255),w,b
  1053  001BD4  0100               	movlb	0	; () banked
  1054  001BD6  6FDC               	movwf	(??_main+7)& (0+255),b
  1055  001BD8  0100               	movlb	0	; () banked
  1056  001BDA  BFDC               	btfsc	(??_main+7)& (0+255),7,b
  1057  001BDC  D033               	goto	l5000
  1058  001BDE  0100               	movlb	0	; () banked
  1059  001BE0  51DC               	movf	(??_main+7)& (0+255),w,b
  1060  001BE2  0100               	movlb	0	; () banked
  1061  001BE4  11DB               	iorwf	(??_main+6)& (0+255),w,b
  1062  001BE6  0100               	movlb	0	; () banked
  1063  001BE8  11DA               	iorwf	(??_main+5)& (0+255),w,b
  1064  001BEA  E104               	bnz	u6230
  1065  001BEC  0100               	movlb	0	; () banked
  1066  001BEE  05D9               	decf	(??_main+4)& (0+255),w,b
  1067  001BF0  A0D8               	btfss	status,0,c
  1068  001BF2  D028               	goto	l5000
  1069  001BF4                     u6230:
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;motore.c: 209: duty_set = previousPwm - correzione;
  1073  001BF4  C070  F0D5         	movff	_correzione,??_main
  1074  001BF8  C071  F0D6         	movff	_correzione+1,??_main+1
  1075  001BFC  C072  F0D7         	movff	_correzione+2,??_main+2
  1076  001C00  C073  F0D8         	movff	_correzione+3,??_main+3
  1077  001C04  0100               	movlb	0	; () banked
  1078  001C06  1FD5               	comf	??_main& (0+255),f,b
  1079  001C08  1FD6               	comf	(??_main+1)& (0+255),f,b
  1080  001C0A  1FD7               	comf	(??_main+2)& (0+255),f,b
  1081  001C0C  1FD8               	comf	(??_main+3)& (0+255),f,b
  1082  001C0E  2BD5               	incf	??_main& (0+255),f,b
  1083  001C10  0E00               	movlw	0
  1084  001C12  23D6               	addwfc	(??_main+1)& (0+255),f,b
  1085  001C14  23D7               	addwfc	(??_main+2)& (0+255),f,b
  1086  001C16  23D8               	addwfc	(??_main+3)& (0+255),f,b
  1087  001C18  5032               	movf	_previousPwm,w,c
  1088  001C1A  0100               	movlb	0	; () banked
  1089  001C1C  25D5               	addwf	??_main& (0+255),w,b
  1090  001C1E  6E20               	movwf	_duty_set,c
  1091  001C20  5033               	movf	_previousPwm+1,w,c
  1092  001C22  0100               	movlb	0	; () banked
  1093  001C24  21D6               	addwfc	(??_main+1)& (0+255),w,b
  1094  001C26  6E21               	movwf	_duty_set+1,c
  1095  001C28  0E00               	movlw	0
  1096  001C2A  0100               	movlb	0	; () banked
  1097  001C2C  21D7               	addwfc	(??_main+2)& (0+255),w,b
  1098  001C2E  6E22               	movwf	_duty_set+2,c
  1099  001C30  0E00               	movlw	0
  1100  001C32  0100               	movlb	0	; () banked
  1101  001C34  21D8               	addwfc	(??_main+3)& (0+255),w,b
  1102  001C36  6E23               	movwf	_duty_set+3,c
  1103                           
  1104                           ;motore.c: 210: if (duty_set < 0) {
  1105  001C38  AE23               	btfss	_duty_set+3,7,c
  1106  001C3A  D02D               	goto	l5006
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;motore.c: 211: duty_set = 0;
  1110  001C3C  0E00               	movlw	0
  1111  001C3E  6E20               	movwf	_duty_set,c
  1112  001C40  0E00               	movlw	0
  1113  001C42  D01D               	goto	L1
  1114  001C44                     l5000:
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;motore.c: 214: duty_set = previousPwm + correzione;
  1118  001C44  5032               	movf	_previousPwm,w,c
  1119  001C46  0100               	movlb	0	; () banked
  1120  001C48  2570               	addwf	_correzione& (0+255),w,b
  1121  001C4A  6E20               	movwf	_duty_set,c
  1122  001C4C  5033               	movf	_previousPwm+1,w,c
  1123  001C4E  0100               	movlb	0	; () banked
  1124  001C50  2171               	addwfc	(_correzione+1)& (0+255),w,b
  1125  001C52  6E21               	movwf	_duty_set+1,c
  1126  001C54  0E00               	movlw	0
  1127  001C56  0100               	movlb	0	; () banked
  1128  001C58  2172               	addwfc	(_correzione+2)& (0+255),w,b
  1129  001C5A  6E22               	movwf	_duty_set+2,c
  1130  001C5C  0E00               	movlw	0
  1131  001C5E  0100               	movlb	0	; () banked
  1132  001C60  2173               	addwfc	(_correzione+3)& (0+255),w,b
  1133  001C62  6E23               	movwf	_duty_set+3,c
  1134                           
  1135                           ;motore.c: 215: if (duty_set > 1024) {
  1136  001C64  BE23               	btfsc	_duty_set+3,7,c
  1137  001C66  D017               	goto	l5006
  1138  001C68  5023               	movf	_duty_set+3,w,c
  1139  001C6A  1022               	iorwf	_duty_set+2,w,c
  1140  001C6C  E105               	bnz	u6250
  1141  001C6E  0420               	decf	_duty_set,w,c
  1142  001C70  0E04               	movlw	4
  1143  001C72  5821               	subwfb	_duty_set+1,w,c
  1144  001C74  A0D8               	btfss	status,0,c
  1145  001C76  D00F               	goto	l5006
  1146  001C78                     u6250:
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;motore.c: 216: duty_set = 1023;
  1150  001C78  0EFF               	movlw	255
  1151  001C7A  6E20               	movwf	_duty_set,c
  1152  001C7C  0E03               	movlw	3
  1153  001C7E                     L1:
  1154  001C7E  6E21               	movwf	_duty_set+1,c
  1155  001C80  0E00               	movlw	0
  1156  001C82  6E22               	movwf	_duty_set+2,c
  1157  001C84  0E00               	movlw	0
  1158  001C86  6E23               	movwf	_duty_set+3,c
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;motore.c: 217: }
  1162                           ;motore.c: 218: }
  1163                           ;motore.c: 219: } else {
  1164                           
  1165                           ; BSR set to: 0
  1166  001C88  D006               	goto	l5006
  1167  001C8A                     l5004:
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;motore.c: 220: duty_set = previousPwm;
  1171  001C8A  C032  F020         	movff	_previousPwm,_duty_set
  1172  001C8E  C033  F021         	movff	_previousPwm+1,_duty_set+1
  1173  001C92  6A22               	clrf	_duty_set+2,c
  1174  001C94  6A23               	clrf	_duty_set+3,c
  1175  001C96                     l5006:
  1176                           
  1177                           ; BSR set to: 0
  1178                           ;motore.c: 221: }
  1179                           ;motore.c: 222: previousPwm = duty_set;
  1180  001C96  C020  F032         	movff	_duty_set,_previousPwm
  1181  001C9A  C021  F033         	movff	_duty_set+1,_previousPwm+1
  1182  001C9E                     l5008:
  1183                           
  1184                           ;motore.c: 223: }
  1185                           ;motore.c: 224: previousTimeCounter1 = timeCounter;
  1186  001C9E  C028  F080         	movff	_timeCounter,_previousTimeCounter1	;volatile
  1187  001CA2  C029  F081         	movff	_timeCounter+1,_previousTimeCounter1+1	;volatile
  1188  001CA6  C02A  F082         	movff	_timeCounter+2,_previousTimeCounter1+2	;volatile
  1189  001CAA  C02B  F083         	movff	_timeCounter+3,_previousTimeCounter1+3	;volatile
  1190                           
  1191                           ;motore.c: 225: SetDCEPWM1(duty_set);
  1192  001CAE  C020  F0BB         	movff	_duty_set,SetDCEPWM1@dutycycle
  1193  001CB2  C021  F0BC         	movff	_duty_set+1,SetDCEPWM1@dutycycle+1
  1194  001CB6  EC54  F013         	call	_SetDCEPWM1	;wreg free
  1195  001CBA                     l5012:
  1196                           
  1197                           ;motore.c: 226: }
  1198                           ;motore.c: 247: if ((timeCounter - previousTimeCounter) > 500) {
  1199  001CBA  C07C  F0D5         	movff	_previousTimeCounter,??_main
  1200  001CBE  C07D  F0D6         	movff	_previousTimeCounter+1,??_main+1
  1201  001CC2  C07E  F0D7         	movff	_previousTimeCounter+2,??_main+2
  1202  001CC6  C07F  F0D8         	movff	_previousTimeCounter+3,??_main+3
  1203  001CCA  0100               	movlb	0	; () banked
  1204  001CCC  1FD5               	comf	??_main& (0+255),f,b
  1205  001CCE  1FD6               	comf	(??_main+1)& (0+255),f,b
  1206  001CD0  1FD7               	comf	(??_main+2)& (0+255),f,b
  1207  001CD2  1FD8               	comf	(??_main+3)& (0+255),f,b
  1208  001CD4  2BD5               	incf	??_main& (0+255),f,b
  1209  001CD6  0E00               	movlw	0
  1210  001CD8  23D6               	addwfc	(??_main+1)& (0+255),f,b
  1211  001CDA  23D7               	addwfc	(??_main+2)& (0+255),f,b
  1212  001CDC  23D8               	addwfc	(??_main+3)& (0+255),f,b
  1213  001CDE  5028               	movf	_timeCounter,w,c	;volatile
  1214  001CE0  0100               	movlb	0	; () banked
  1215  001CE2  25D5               	addwf	??_main& (0+255),w,b
  1216  001CE4  0100               	movlb	0	; () banked
  1217  001CE6  6FD9               	movwf	(??_main+4)& (0+255),b
  1218  001CE8  5029               	movf	_timeCounter+1,w,c	;volatile
  1219  001CEA  0100               	movlb	0	; () banked
  1220  001CEC  21D6               	addwfc	(??_main+1)& (0+255),w,b
  1221  001CEE  0100               	movlb	0	; () banked
  1222  001CF0  6FDA               	movwf	(??_main+5)& (0+255),b
  1223  001CF2  502A               	movf	_timeCounter+2,w,c	;volatile
  1224  001CF4  0100               	movlb	0	; () banked
  1225  001CF6  21D7               	addwfc	(??_main+2)& (0+255),w,b
  1226  001CF8  0100               	movlb	0	; () banked
  1227  001CFA  6FDB               	movwf	(??_main+6)& (0+255),b
  1228  001CFC  502B               	movf	_timeCounter+3,w,c	;volatile
  1229  001CFE  0100               	movlb	0	; () banked
  1230  001D00  21D8               	addwfc	(??_main+3)& (0+255),w,b
  1231  001D02  0100               	movlb	0	; () banked
  1232  001D04  6FDC               	movwf	(??_main+7)& (0+255),b
  1233  001D06  0100               	movlb	0	; () banked
  1234  001D08  51DC               	movf	(??_main+7)& (0+255),w,b
  1235  001D0A  0100               	movlb	0	; () banked
  1236  001D0C  11DB               	iorwf	(??_main+6)& (0+255),w,b
  1237  001D0E  E108               	bnz	u6260
  1238  001D10  0EF5               	movlw	245
  1239  001D12  0100               	movlb	0	; () banked
  1240  001D14  5DD9               	subwf	(??_main+4)& (0+255),w,b
  1241  001D16  0E01               	movlw	1
  1242  001D18  0100               	movlb	0	; () banked
  1243  001D1A  59DA               	subwfb	(??_main+5)& (0+255),w,b
  1244  001D1C  A0D8               	btfss	status,0,c
  1245  001D1E  D044               	goto	l5040
  1246  001D20                     u6260:
  1247                           
  1248                           ; BSR set to: 0
  1249                           ;motore.c: 248: if (request_sent == 0) {
  1250  001D20  BE3A               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1251  001D22  D01E               	goto	l686
  1252  001D24                     l5018:
  1253  001D24  ECE3  F013         	call	_CANisTxReady	;wreg free
  1254  001D28  06E8               	decf	wreg,f,c
  1255  001D2A  A4D8               	btfss	status,2,c
  1256  001D2C  D7FB               	goto	l5018
  1257                           
  1258                           ;motore.c: 250: }
  1259                           ;motore.c: 251: CANsendMessage(0b00000000000000000000000000010, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1260  001D2E  0E02               	movlw	2
  1261  001D30  0100               	movlb	0	; () banked
  1262  001D32  6FBB               	movwf	CANsendMessage@identifier& (0+255),b
  1263  001D34  0E00               	movlw	0
  1264  001D36  6FBC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1265  001D38  0E00               	movlw	0
  1266  001D3A  6FBD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1267  001D3C  0E00               	movlw	0
  1268  001D3E  6FBE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1269  001D40  0E9B               	movlw	low _data_array
  1270  001D42  0100               	movlb	0	; () banked
  1271  001D44  6FBF               	movwf	CANsendMessage@data& (0+255),b
  1272  001D46  0E00               	movlw	high _data_array
  1273  001D48  0100               	movlb	0	; () banked
  1274  001D4A  6FC0               	movwf	(CANsendMessage@data+1)& (0+255),b
  1275  001D4C  0E08               	movlw	8
  1276  001D4E  0100               	movlb	0	; () banked
  1277  001D50  6FC1               	movwf	CANsendMessage@dataLength& (0+255),b
  1278  001D52  0EFC               	movlw	252
  1279  001D54  0100               	movlb	0	; () banked
  1280  001D56  6FC2               	movwf	CANsendMessage@flags& (0+255),b
  1281  001D58  EC7A  F006         	call	_CANsendMessage	;wreg free
  1282                           
  1283                           ;motore.c: 252: request_sent = 1;
  1284  001D5C  8E3A               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1285                           
  1286                           ;motore.c: 253: } else {
  1287  001D5E  D01C               	goto	l5038
  1288  001D60                     l686:
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;motore.c: 254: if ((centralina_abs == 1)&&(centralina_sterzo == 1)&&(centralina_comando
      +                           == 1)) {
  1292  001D60  B23A               	btfsc	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
  1293                           
  1294                           ; BSR set to: 0
  1295  001D62  A63A               	btfss	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
  1296  001D64  D007               	goto	l691
  1297                           
  1298                           ; BSR set to: 0
  1299  001D66  A43A               	btfss	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  1300  001D68  D005               	goto	l691
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;motore.c: 255: centralina_abs = 0;
  1304  001D6A  923A               	bcf	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
  1305                           
  1306                           ;motore.c: 256: centralina_sterzo = 0;
  1307  001D6C  963A               	bcf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
  1308                           
  1309                           ;motore.c: 257: centralina_comando = 0;
  1310  001D6E  943A               	bcf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  1311                           
  1312                           ;motore.c: 258: PORTAbits.RA1 = 0;
  1313  001D70  9280               	bcf	3968,1,c	;volatile
  1314  001D72  D011               	goto	l5036
  1315  001D74                     l691:
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;motore.c: 262: PORTAbits.RA1 = 1;
  1319  001D74  8280               	bsf	3968,1,c	;volatile
  1320                           
  1321                           ; BSR set to: 0
  1322                           ;motore.c: 263: delay_ms(200);
  1323  001D76  0E00               	movlw	0
  1324  001D78  0100               	movlb	0	; () banked
  1325  001D7A  6FC9               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1326  001D7C  0EC8               	movlw	200
  1327  001D7E  6FC8               	movwf	delay_ms@value_ms& (0+255),b
  1328  001D80  ECB3  F013         	call	_delay_ms	;wreg free
  1329                           
  1330                           ;motore.c: 264: PORTAbits.RA1 = 0;
  1331  001D84  9280               	bcf	3968,1,c	;volatile
  1332                           
  1333                           ;motore.c: 265: delay_ms(200);
  1334  001D86  0E00               	movlw	0
  1335  001D88  0100               	movlb	0	; () banked
  1336  001D8A  6FC9               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1337  001D8C  0EC8               	movlw	200
  1338  001D8E  6FC8               	movwf	delay_ms@value_ms& (0+255),b
  1339  001D90  ECB3  F013         	call	_delay_ms	;wreg free
  1340                           
  1341                           ;motore.c: 266: PORTAbits.RA1 = 1;
  1342  001D94  8280               	bsf	3968,1,c	;volatile
  1343  001D96                     l5036:
  1344                           
  1345                           ;motore.c: 267: request_sent = 0;
  1346  001D96  9E3A               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1347  001D98                     l5038:
  1348                           
  1349                           ;motore.c: 268: }
  1350                           ;motore.c: 269: }
  1351                           ;motore.c: 270: previousTimeCounter = timeCounter;
  1352  001D98  C028  F07C         	movff	_timeCounter,_previousTimeCounter	;volatile
  1353  001D9C  C029  F07D         	movff	_timeCounter+1,_previousTimeCounter+1	;volatile
  1354  001DA0  C02A  F07E         	movff	_timeCounter+2,_previousTimeCounter+2	;volatile
  1355  001DA4  C02B  F07F         	movff	_timeCounter+3,_previousTimeCounter+3	;volatile
  1356  001DA8                     l5040:
  1357                           
  1358                           ;motore.c: 271: }
  1359                           ;motore.c: 272: if ((timeCounter - previousTimeCounter2 > 100)) {
  1360  001DA8  C084  F0D5         	movff	_previousTimeCounter2,??_main
  1361  001DAC  C085  F0D6         	movff	_previousTimeCounter2+1,??_main+1
  1362  001DB0  C086  F0D7         	movff	_previousTimeCounter2+2,??_main+2
  1363  001DB4  C087  F0D8         	movff	_previousTimeCounter2+3,??_main+3
  1364  001DB8  0100               	movlb	0	; () banked
  1365  001DBA  1FD5               	comf	??_main& (0+255),f,b
  1366  001DBC  1FD6               	comf	(??_main+1)& (0+255),f,b
  1367  001DBE  1FD7               	comf	(??_main+2)& (0+255),f,b
  1368  001DC0  1FD8               	comf	(??_main+3)& (0+255),f,b
  1369  001DC2  2BD5               	incf	??_main& (0+255),f,b
  1370  001DC4  0E00               	movlw	0
  1371  001DC6  23D6               	addwfc	(??_main+1)& (0+255),f,b
  1372  001DC8  23D7               	addwfc	(??_main+2)& (0+255),f,b
  1373  001DCA  23D8               	addwfc	(??_main+3)& (0+255),f,b
  1374  001DCC  5028               	movf	_timeCounter,w,c	;volatile
  1375  001DCE  0100               	movlb	0	; () banked
  1376  001DD0  25D5               	addwf	??_main& (0+255),w,b
  1377  001DD2  0100               	movlb	0	; () banked
  1378  001DD4  6FD9               	movwf	(??_main+4)& (0+255),b
  1379  001DD6  5029               	movf	_timeCounter+1,w,c	;volatile
  1380  001DD8  0100               	movlb	0	; () banked
  1381  001DDA  21D6               	addwfc	(??_main+1)& (0+255),w,b
  1382  001DDC  0100               	movlb	0	; () banked
  1383  001DDE  6FDA               	movwf	(??_main+5)& (0+255),b
  1384  001DE0  502A               	movf	_timeCounter+2,w,c	;volatile
  1385  001DE2  0100               	movlb	0	; () banked
  1386  001DE4  21D7               	addwfc	(??_main+2)& (0+255),w,b
  1387  001DE6  0100               	movlb	0	; () banked
  1388  001DE8  6FDB               	movwf	(??_main+6)& (0+255),b
  1389  001DEA  502B               	movf	_timeCounter+3,w,c	;volatile
  1390  001DEC  0100               	movlb	0	; () banked
  1391  001DEE  21D8               	addwfc	(??_main+3)& (0+255),w,b
  1392  001DF0  0100               	movlb	0	; () banked
  1393  001DF2  6FDC               	movwf	(??_main+7)& (0+255),b
  1394  001DF4  0100               	movlb	0	; () banked
  1395  001DF6  51DC               	movf	(??_main+7)& (0+255),w,b
  1396  001DF8  0100               	movlb	0	; () banked
  1397  001DFA  11DB               	iorwf	(??_main+6)& (0+255),w,b
  1398  001DFC  0100               	movlb	0	; () banked
  1399  001DFE  11DA               	iorwf	(??_main+5)& (0+255),w,b
  1400  001E00  E105               	bnz	u6320
  1401  001E02  0E65               	movlw	101
  1402  001E04  0100               	movlb	0	; () banked
  1403  001E06  5DD9               	subwf	(??_main+4)& (0+255),w,b
  1404  001E08  A0D8               	btfss	status,0,c
  1405  001E0A  D5E0               	goto	l4968
  1406  001E0C                     u6320:
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;motore.c: 273: battery_measure();
  1410  001E0C  EC7A  F012         	call	_battery_measure	;wreg free
  1411                           
  1412                           ;motore.c: 274: previousTimeCounter2 = timeCounter;
  1413  001E10  C028  F084         	movff	_timeCounter,_previousTimeCounter2	;volatile
  1414  001E14  C029  F085         	movff	_timeCounter+1,_previousTimeCounter2+1	;volatile
  1415  001E18  C02A  F086         	movff	_timeCounter+2,_previousTimeCounter2+2	;volatile
  1416  001E1C  C02B  F087         	movff	_timeCounter+3,_previousTimeCounter2+3	;volatile
  1417  001E20  D5D5               	goto	l4968
  1418  001E22                     __end_of_main:
  1419                           	opt stack 0
  1420                           tblptru	equ	0xFF8
  1421                           tblptrh	equ	0xFF7
  1422                           tblptrl	equ	0xFF6
  1423                           tablat	equ	0xFF5
  1424                           postinc0	equ	0xFEE
  1425                           wreg	equ	0xFE8
  1426                           postdec1	equ	0xFE5
  1427                           fsr1l	equ	0xFE1
  1428                           status	equ	0xFD8
  1429                           
  1430 ;; *************** function _configurazione_iniziale *****************
  1431 ;; Defined at:
  1432 ;;		line 332 in file "motore.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;		None               void
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1446 ;;      Params:         0       0       0       0
  1447 ;;      Locals:         0       0       0       0
  1448 ;;      Temps:          0       0       0       0
  1449 ;;      Totals:         0       0       0       0
  1450 ;;Total ram usage:        0 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    4
  1453 ;; This function calls:
  1454 ;;		_CANInitialize
  1455 ;;		_SetOutputEPWM1
  1456 ;;		_delay_ms
  1457 ;; This function is called by:
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text1
  1463  002444                     __ptext1:
  1464                           	opt stack 0
  1465  002444                     _configurazione_iniziale:
  1466                           	opt stack 26
  1467                           
  1468                           ;motore.c: 335: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1469                           
  1470                           ;incstack = 0
  1471  002444  0E06               	movlw	6
  1472  002446  0100               	movlb	0	; () banked
  1473  002448  6FC9               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1474  00244A  0E05               	movlw	5
  1475  00244C  0100               	movlb	0	; () banked
  1476  00244E  6FCA               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1477  002450  0E01               	movlw	1
  1478  002452  0100               	movlb	0	; () banked
  1479  002454  6FCB               	movwf	CANInitialize@SJW& (0+255),b
  1480  002456  0E03               	movlw	3
  1481  002458  0100               	movlb	0	; () banked
  1482  00245A  6FCC               	movwf	CANInitialize@BRP& (0+255),b
  1483  00245C  0E9D               	movlw	157
  1484  00245E  0100               	movlb	0	; () banked
  1485  002460  6FCD               	movwf	CANInitialize@flags& (0+255),b
  1486  002462  0E04               	movlw	4
  1487  002464  ECE0  F010         	call	_CANInitialize
  1488                           
  1489                           ;motore.c: 336: RCONbits.IPEN = 1;
  1490  002468  8ED0               	bsf	4048,7,c	;volatile
  1491                           
  1492                           ;motore.c: 337: INTCONbits.INT0IF = 0;
  1493  00246A  92F2               	bcf	intcon,1,c	;volatile
  1494                           
  1495                           ;motore.c: 338: PIR3bits.RXB1IF = 0;
  1496  00246C  92A4               	bcf	4004,1,c	;volatile
  1497                           
  1498                           ;motore.c: 339: PIR3bits.RXB0IF = 0;
  1499  00246E  90A4               	bcf	4004,0,c	;volatile
  1500                           
  1501                           ;motore.c: 341: IPR3bits.RXB1IP = 0;
  1502  002470  92A5               	bcf	4005,1,c	;volatile
  1503                           
  1504                           ;motore.c: 342: IPR3bits.RXB0IP = 0;
  1505  002472  90A5               	bcf	4005,0,c	;volatile
  1506                           
  1507                           ;motore.c: 343: INTCONbits.GIEH = 1;
  1508  002474  8EF2               	bsf	intcon,7,c	;volatile
  1509                           
  1510                           ;motore.c: 344: INTCONbits.GIEL = 1;
  1511  002476  8CF2               	bsf	intcon,6,c	;volatile
  1512                           
  1513                           ;motore.c: 347: T3CON = 0x01;
  1514  002478  0E01               	movlw	1
  1515  00247A  6EB1               	movwf	4017,c	;volatile
  1516                           
  1517                           ;motore.c: 348: PIR2bits.TMR3IF = 0;
  1518  00247C  92A1               	bcf	4001,1,c	;volatile
  1519                           
  1520                           ;motore.c: 349: IPR2bits.TMR3IP = 0;
  1521  00247E  92A2               	bcf	4002,1,c	;volatile
  1522                           
  1523                           ;motore.c: 350: TMR3H = 0x63;
  1524  002480  0E63               	movlw	99
  1525  002482  6EB3               	movwf	4019,c	;volatile
  1526                           
  1527                           ;motore.c: 351: TMR3L = 0xC0;
  1528  002484  0EC0               	movlw	192
  1529  002486  6EB2               	movwf	4018,c	;volatile
  1530                           
  1531                           ;motore.c: 356: ADCON0bits.ADON = 1;
  1532  002488  80C2               	bsf	4034,0,c	;volatile
  1533                           
  1534                           ;motore.c: 357: ADCON0bits.CHS0 = 0;
  1535  00248A  94C2               	bcf	4034,2,c	;volatile
  1536                           
  1537                           ;motore.c: 358: ADCON0bits.CHS1 = 0;
  1538  00248C  96C2               	bcf	4034,3,c	;volatile
  1539                           
  1540                           ;motore.c: 359: ADCON0bits.CHS2 = 0;
  1541  00248E  98C2               	bcf	4034,4,c	;volatile
  1542                           
  1543                           ;motore.c: 360: ADCON0bits.CHS3 = 0;
  1544  002490  9AC2               	bcf	4034,5,c	;volatile
  1545                           
  1546                           ;motore.c: 361: ADCON1bits.PCFG0 = 0;
  1547  002492  90C1               	bcf	4033,0,c	;volatile
  1548                           
  1549                           ;motore.c: 362: ADCON1bits.PCFG1 = 1;
  1550  002494  82C1               	bsf	4033,1,c	;volatile
  1551                           
  1552                           ;motore.c: 363: ADCON1bits.PCFG2 = 1;
  1553  002496  84C1               	bsf	4033,2,c	;volatile
  1554                           
  1555                           ;motore.c: 364: ADCON1bits.PCFG3 = 1;
  1556  002498  86C1               	bsf	4033,3,c	;volatile
  1557                           
  1558                           ;motore.c: 365: ADCON1bits.VCFG0 = 0;
  1559  00249A  98C1               	bcf	4033,4,c	;volatile
  1560                           
  1561                           ;motore.c: 366: ADCON1bits.VCFG1 = 0;
  1562  00249C  9AC1               	bcf	4033,5,c	;volatile
  1563                           
  1564                           ;motore.c: 367: ADCON2bits.ADCS0 = 1;
  1565  00249E  80C0               	bsf	4032,0,c	;volatile
  1566                           
  1567                           ;motore.c: 368: ADCON2bits.ADCS1 = 0;
  1568  0024A0  92C0               	bcf	4032,1,c	;volatile
  1569                           
  1570                           ;motore.c: 369: ADCON2bits.ADCS2 = 1;
  1571  0024A2  84C0               	bsf	4032,2,c	;volatile
  1572                           
  1573                           ;motore.c: 370: ADCON2bits.ACQT0 = 0;
  1574  0024A4  96C0               	bcf	4032,3,c	;volatile
  1575                           
  1576                           ;motore.c: 371: ADCON2bits.ACQT1 = 1;
  1577  0024A6  88C0               	bsf	4032,4,c	;volatile
  1578                           
  1579                           ;motore.c: 372: ADCON2bits.ACQT2 = 1;
  1580  0024A8  8AC0               	bsf	4032,5,c	;volatile
  1581                           
  1582                           ;motore.c: 373: ADCON2bits.ADFM = 0;
  1583  0024AA  9EC0               	bcf	4032,7,c	;volatile
  1584                           
  1585                           ;motore.c: 376: PIE3bits.RXB1IE = 1;
  1586  0024AC  82A3               	bsf	4003,1,c	;volatile
  1587                           
  1588                           ;motore.c: 377: PIE3bits.RXB0IE = 1;
  1589  0024AE  80A3               	bsf	4003,0,c	;volatile
  1590                           
  1591                           ;motore.c: 378: PIE2bits.TMR3IE = 1;
  1592  0024B0  82A0               	bsf	4000,1,c	;volatile
  1593                           
  1594                           ;motore.c: 380: LATA = 0x00;
  1595  0024B2  0E00               	movlw	0
  1596  0024B4  6E89               	movwf	3977,c	;volatile
  1597                           
  1598                           ;motore.c: 381: TRISA = 0b01111101;
  1599  0024B6  0E7D               	movlw	125
  1600  0024B8  6E92               	movwf	3986,c	;volatile
  1601                           
  1602                           ;motore.c: 383: LATB = 0x00;
  1603  0024BA  0E00               	movlw	0
  1604  0024BC  6E8A               	movwf	3978,c	;volatile
  1605                           
  1606                           ;motore.c: 384: TRISB = 0b11111011;
  1607  0024BE  0EFB               	movlw	251
  1608  0024C0  6E93               	movwf	3987,c	;volatile
  1609                           
  1610                           ;motore.c: 386: LATC = 0x00;
  1611  0024C2  0E00               	movlw	0
  1612  0024C4  6E8B               	movwf	3979,c	;volatile
  1613                           
  1614                           ;motore.c: 387: TRISC = 0x00;
  1615  0024C6  0E00               	movlw	0
  1616  0024C8  6E94               	movwf	3988,c	;volatile
  1617                           
  1618                           ;motore.c: 389: LATD = 0x00;
  1619  0024CA  0E00               	movlw	0
  1620  0024CC  6E8C               	movwf	3980,c	;volatile
  1621                           
  1622                           ;motore.c: 390: TRISD = 0x00;
  1623  0024CE  0E00               	movlw	0
  1624  0024D0  6E95               	movwf	3989,c	;volatile
  1625                           
  1626                           ;motore.c: 392: LATE = 0x00;
  1627  0024D2  0E00               	movlw	0
  1628  0024D4  6E8D               	movwf	3981,c	;volatile
  1629                           
  1630                           ;motore.c: 393: TRISE = 0xFF;
  1631  0024D6  6896               	setf	3990,c	;volatile
  1632                           
  1633                           ;motore.c: 394: delay_ms(2);
  1634  0024D8  0E00               	movlw	0
  1635  0024DA  0100               	movlb	0	; () banked
  1636  0024DC  6FC9               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1637  0024DE  0E02               	movlw	2
  1638  0024E0  6FC8               	movwf	delay_ms@value_ms& (0+255),b
  1639  0024E2  ECB3  F013         	call	_delay_ms	;wreg free
  1640                           
  1641                           ;motore.c: 395: SetOutputEPWM1(0b01111111, 0b11111100);
  1642  0024E6  0EFC               	movlw	252
  1643  0024E8  0100               	movlb	0	; () banked
  1644  0024EA  6FBB               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  1645  0024EC  0E7F               	movlw	127
  1646  0024EE  EC06  F013         	call	_SetOutputEPWM1
  1647  0024F2  0012               	return		;funcret
  1648  0024F4                     __end_of_configurazione_iniziale:
  1649                           	opt stack 0
  1650                           tblptru	equ	0xFF8
  1651                           tblptrh	equ	0xFF7
  1652                           tblptrl	equ	0xFF6
  1653                           tablat	equ	0xFF5
  1654                           intcon	equ	0xFF2
  1655                           postinc0	equ	0xFEE
  1656                           wreg	equ	0xFE8
  1657                           postdec1	equ	0xFE5
  1658                           fsr1l	equ	0xFE1
  1659                           status	equ	0xFD8
  1660                           
  1661 ;; *************** function _SetOutputEPWM1 *****************
  1662 ;; Defined at:
  1663 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  outputconfig    1    wreg     unsigned char 
  1666 ;;  outputmode      1    0[BANK0 ] unsigned char 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  outputconfig    1    1[BANK0 ] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;		None               void
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1678 ;;      Params:         0       1       0       0
  1679 ;;      Locals:         0       1       0       0
  1680 ;;      Temps:          0       0       0       0
  1681 ;;      Totals:         0       2       0       0
  1682 ;;Total ram usage:        2 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    2
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_main
  1689 ;;		_configurazione_iniziale
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text2
  1694  00260C                     __ptext2:
  1695                           	opt stack 0
  1696  00260C                     _SetOutputEPWM1:
  1697                           	opt stack 27
  1698                           
  1699                           ;incstack = 0
  1700                           ;SetOutputEPWM1@outputconfig stored from wreg
  1701  00260C  0100               	movlb	0	; () banked
  1702  00260E  6FBC               	movwf	SetOutputEPWM1@outputconfig& (0+255),b
  1703  002610  50BA               	movf	4026,w,c	;volatile
  1704  002612  09C0               	iorlw	192
  1705  002614  0100               	movlb	0	; () banked
  1706  002616  15BC               	andwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  1707  002618  6EBA               	movwf	4026,c	;volatile
  1708  00261A  50BA               	movf	4026,w,c	;volatile
  1709  00261C  090F               	iorlw	15
  1710  00261E  0100               	movlb	0	; () banked
  1711  002620  15BB               	andwf	SetOutputEPWM1@outputmode& (0+255),w,b
  1712  002622  6EBA               	movwf	4026,c	;volatile
  1713  002624  0E3F               	movlw	63
  1714  002626  0100               	movlb	0	; () banked
  1715  002628  19BC               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  1716  00262A  A4D8               	btfss	status,2,c
  1717  00262C  D002               	goto	l4728
  1718                           
  1719                           ; BSR set to: 0
  1720  00262E  9895               	bcf	3989,4,c	;volatile
  1721  002630  0012               	return	
  1722  002632                     l4728:
  1723                           
  1724                           ; BSR set to: 0
  1725  002632  0EBF               	movlw	191
  1726  002634  0100               	movlb	0	; () banked
  1727  002636  19BC               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  1728  002638  A4D8               	btfss	status,2,c
  1729  00263A  D003               	goto	l4732
  1730                           
  1731                           ; BSR set to: 0
  1732  00263C  9895               	bcf	3989,4,c	;volatile
  1733  00263E  9A95               	bcf	3989,5,c	;volatile
  1734  002640  0012               	return	
  1735  002642                     l4732:
  1736                           
  1737                           ; BSR set to: 0
  1738  002642  0E7F               	movlw	127
  1739  002644  0100               	movlb	0	; () banked
  1740  002646  19BC               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  1741  002648  B4D8               	btfsc	status,2,c
  1742  00264A  D004               	goto	l748
  1743                           
  1744                           ; BSR set to: 0
  1745  00264C  0100               	movlb	0	; () banked
  1746  00264E  29BC               	incf	SetOutputEPWM1@outputconfig& (0+255),w,b
  1747  002650  A4D8               	btfss	status,2,c
  1748  002652  0012               	return	
  1749  002654                     l748:
  1750                           
  1751                           ; BSR set to: 0
  1752  002654  9895               	bcf	3989,4,c	;volatile
  1753  002656  9A95               	bcf	3989,5,c	;volatile
  1754  002658  9C95               	bcf	3989,6,c	;volatile
  1755  00265A  9E95               	bcf	3989,7,c	;volatile
  1756                           
  1757                           ; BSR set to: 0
  1758                           
  1759                           ; BSR set to: 0
  1760  00265C  0012               	return	
  1761  00265E                     __end_of_SetOutputEPWM1:
  1762                           	opt stack 0
  1763                           tblptru	equ	0xFF8
  1764                           tblptrh	equ	0xFF7
  1765                           tblptrl	equ	0xFF6
  1766                           tablat	equ	0xFF5
  1767                           intcon	equ	0xFF2
  1768                           postinc0	equ	0xFEE
  1769                           wreg	equ	0xFE8
  1770                           postdec1	equ	0xFE5
  1771                           fsr1l	equ	0xFE1
  1772                           status	equ	0xFD8
  1773                           
  1774 ;; *************** function _CANInitialize *****************
  1775 ;; Defined at:
  1776 ;;		line 218 in file "CANlib.h"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  propSeg         1    wreg     unsigned char 
  1779 ;;  phaseSeg1       1   14[BANK0 ] unsigned char 
  1780 ;;  phaseSeg2       1   15[BANK0 ] unsigned char 
  1781 ;;  SJW             1   16[BANK0 ] unsigned char 
  1782 ;;  BRP             1   17[BANK0 ] unsigned char 
  1783 ;;  flags           1   18[BANK0 ] enum E16844
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  propSeg         1   23[BANK0 ] unsigned char 
  1786 ;;  FilterConfig    1   25[BANK0 ] unsigned char 
  1787 ;;  FilterConfig    1   24[BANK0 ] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;		None               void
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1797 ;;      Params:         0       5       0       0
  1798 ;;      Locals:         0       3       0       0
  1799 ;;      Temps:          0       4       0       0
  1800 ;;      Totals:         0      12       0       0
  1801 ;;Total ram usage:       12 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    3
  1804 ;; This function calls:
  1805 ;;		_CANOperationMode
  1806 ;;		_CANSetFilter
  1807 ;;		_CANSetMask
  1808 ;; This function is called by:
  1809 ;;		_configurazione_iniziale
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           	psect	text3
  1814  0021C0                     __ptext3:
  1815                           	opt stack 0
  1816  0021C0                     _CANInitialize:
  1817                           	opt stack 26
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;incstack = 0
  1821                           ;CANInitialize@propSeg stored from wreg
  1822  0021C0  0100               	movlb	0	; () banked
  1823  0021C2  6FD2               	movwf	CANInitialize@propSeg& (0+255),b
  1824                           
  1825                           ;CANlib.h: 220: BYTE FilterConfig1;
  1826                           ;CANlib.h: 221: BYTE FilterConfig2;
  1827                           ;CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  1828  0021C4  0E80               	movlw	128
  1829  0021C6  EC06  F014         	call	_CANOperationMode
  1830                           
  1831                           ;CANlib.h: 225: BRGCON1 = 0x00;
  1832  0021CA  0E00               	movlw	0
  1833  0021CC  6E70               	movwf	3952,c	;volatile
  1834                           
  1835                           ;CANlib.h: 226: BRGCON2 = 0x00;
  1836  0021CE  0E00               	movlw	0
  1837  0021D0  6E71               	movwf	3953,c	;volatile
  1838                           
  1839                           ;CANlib.h: 227: BRGCON3 = 0x00;
  1840  0021D2  0E00               	movlw	0
  1841  0021D4  6E72               	movwf	3954,c	;volatile
  1842                           
  1843                           ;CANlib.h: 229: SJW= SJW << 6;
  1844  0021D6  0100               	movlb	0	; () banked
  1845  0021D8  41CB               	rrncf	CANInitialize@SJW& (0+255),w,b
  1846  0021DA  42E8               	rrncf	wreg,f,c
  1847  0021DC  0BC0               	andlw	192
  1848  0021DE  0100               	movlb	0	; () banked
  1849  0021E0  6FCB               	movwf	CANInitialize@SJW& (0+255),b
  1850                           
  1851                           ; BSR set to: 0
  1852                           ;CANlib.h: 230: BRGCON1 |= SJW;
  1853  0021E2  0100               	movlb	0	; () banked
  1854  0021E4  51CB               	movf	CANInitialize@SJW& (0+255),w,b
  1855  0021E6  1270               	iorwf	3952,f,c	;volatile
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;CANlib.h: 231: BRGCON1 |= BRP;
  1859  0021E8  0100               	movlb	0	; () banked
  1860  0021EA  51CC               	movf	CANInitialize@BRP& (0+255),w,b
  1861  0021EC  1270               	iorwf	3952,f,c	;volatile
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;CANlib.h: 233: BRGCON2 |= propSeg;
  1865  0021EE  0100               	movlb	0	; () banked
  1866  0021F0  51D2               	movf	CANInitialize@propSeg& (0+255),w,b
  1867  0021F2  1271               	iorwf	3953,f,c	;volatile
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  1871  0021F4  0100               	movlb	0	; () banked
  1872  0021F6  39C9               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  1873  0021F8  42E8               	rrncf	wreg,f,c
  1874  0021FA  0BF8               	andlw	248
  1875  0021FC  0100               	movlb	0	; () banked
  1876  0021FE  6FC9               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;CANlib.h: 235: BRGCON2 |= phaseSeg1;
  1880  002200  0100               	movlb	0	; () banked
  1881  002202  51C9               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  1882  002204  1271               	iorwf	3953,f,c	;volatile
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  1886  002206  0100               	movlb	0	; () banked
  1887  002208  A5CD               	btfss	CANInitialize@flags& (0+255),2,b
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;CANlib.h: 238: BRGCON2bits.SAM= 1;
  1891  00220A  8C71               	bsf	3953,6,c	;volatile
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  1895  00220C  0100               	movlb	0	; () banked
  1896  00220E  B1CD               	btfsc	CANInitialize@flags& (0+255),0,b
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  1900  002210  8E71               	bsf	3953,7,c	;volatile
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;CANlib.h: 243: BRGCON3 |= phaseSeg2;
  1904                           
  1905                           ; BSR set to: 0
  1906  002212  0100               	movlb	0	; () banked
  1907  002214  51CA               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  1908  002216  1272               	iorwf	3954,f,c	;volatile
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  1912  002218  0100               	movlb	0	; () banked
  1913  00221A  B3CD               	btfsc	CANInitialize@flags& (0+255),1,b
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  1917  00221C  8C72               	bsf	3954,6,c	;volatile
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  1921                           
  1922                           ; BSR set to: 0
  1923  00221E  0100               	movlb	0	; () banked
  1924  002220  51CD               	movf	CANInitialize@flags& (0+255),w,b
  1925  002222  0B60               	andlw	96
  1926  002224  6E60               	movwf	3936,c	;volatile
  1927                           
  1928                           ;CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON )
  1929  002226  0100               	movlb	0	; () banked
  1930  002228  51CD               	movf	CANInitialize@flags& (0+255),w,b
  1931  00222A  0B10               	andlw	16
  1932  00222C  0AFF               	xorlw	255
  1933  00222E  B4D8               	btfsc	status,2,c
  1934                           
  1935                           ; BSR set to: 0
  1936                           ;CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  1937  002230  8460               	bsf	3936,2,c	;volatile
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;CANlib.h: 255: RXB1CON = RXB0CON;
  1941  002232  CF60 FF50          	movff	3936,3920	;volatile
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  1945  002236  0E00               	movlw	0
  1946  002238  0100               	movlb	0	; () banked
  1947  00223A  6FBB               	movwf	CANSetMask@mask& (0+255),b
  1948  00223C  0E00               	movlw	0
  1949  00223E  6FBC               	movwf	(CANSetMask@mask+1)& (0+255),b
  1950  002240  0E00               	movlw	0
  1951  002242  6FBD               	movwf	(CANSetMask@mask+2)& (0+255),b
  1952  002244  0E00               	movlw	0
  1953  002246  6FBE               	movwf	(CANSetMask@mask+3)& (0+255),b
  1954  002248  0EF7               	movlw	247
  1955  00224A  0100               	movlb	0	; () banked
  1956  00224C  6FBF               	movwf	CANSetMask@type& (0+255),b
  1957  00224E  0E01               	movlw	1
  1958  002250  EC11  F00F         	call	_CANSetMask
  1959                           
  1960                           ;CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  1961  002254  0E00               	movlw	0
  1962  002256  0100               	movlb	0	; () banked
  1963  002258  6FBB               	movwf	CANSetMask@mask& (0+255),b
  1964  00225A  0E00               	movlw	0
  1965  00225C  6FBC               	movwf	(CANSetMask@mask+1)& (0+255),b
  1966  00225E  0E00               	movlw	0
  1967  002260  6FBD               	movwf	(CANSetMask@mask+2)& (0+255),b
  1968  002262  0E00               	movlw	0
  1969  002264  6FBE               	movwf	(CANSetMask@mask+3)& (0+255),b
  1970  002266  0EF7               	movlw	247
  1971  002268  0100               	movlb	0	; () banked
  1972  00226A  6FBF               	movwf	CANSetMask@type& (0+255),b
  1973  00226C  0E02               	movlw	2
  1974  00226E  EC11  F00F         	call	_CANSetMask
  1975                           
  1976                           ;CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  1977  002272  D00F               	goto	l4468
  1978  002274                     l4462:
  1979                           
  1980                           ;CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  1981  002274  0EF7               	movlw	247
  1982  002276  0100               	movlb	0	; () banked
  1983  002278  6FD3               	movwf	CANInitialize@FilterConfig1& (0+255),b
  1984  00227A  D007               	goto	l4464
  1985  00227C                     l356:
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  1989  00227C  0100               	movlb	0	; () banked
  1990  00227E  69D3               	setf	CANInitialize@FilterConfig1& (0+255),b
  1991                           
  1992                           ;CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  1993  002280  0100               	movlb	0	; () banked
  1994  002282  69D4               	setf	CANInitialize@FilterConfig2& (0+255),b
  1995                           
  1996                           ;CANlib.h: 273: break;
  1997  002284  D028               	goto	l4470
  1998  002286                     l357:
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2002  002286  0100               	movlb	0	; () banked
  2003  002288  69D3               	setf	CANInitialize@FilterConfig1& (0+255),b
  2004  00228A                     l4464:
  2005                           
  2006                           ; BSR set to: 0
  2007                           ;CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2008  00228A  0EF7               	movlw	247
  2009  00228C  0100               	movlb	0	; () banked
  2010  00228E  6FD4               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;CANlib.h: 278: }
  2014                           
  2015                           ;CANlib.h: 277: break;
  2016  002290  D022               	goto	l4470
  2017  002292                     l4468:
  2018  002292  0E9F               	movlw	159
  2019  002294  0100               	movlb	0	; () banked
  2020  002296  6FCE               	movwf	??_CANInitialize& (0+255),b
  2021  002298  0EFF               	movlw	255
  2022  00229A  0100               	movlb	0	; () banked
  2023  00229C  6FCF               	movwf	(??_CANInitialize+1)& (0+255),b
  2024  00229E  0100               	movlb	0	; () banked
  2025  0022A0  51CD               	movf	CANInitialize@flags& (0+255),w,b
  2026  0022A2  0B60               	andlw	96
  2027  0022A4  0100               	movlb	0	; () banked
  2028  0022A6  6FD0               	movwf	(??_CANInitialize+2)& (0+255),b
  2029  0022A8  6BD1               	clrf	(??_CANInitialize+3)& (0+255),b
  2030  0022AA  0100               	movlb	0	; () banked
  2031  0022AC  51CE               	movf	??_CANInitialize& (0+255),w,b
  2032  0022AE  0100               	movlb	0	; () banked
  2033  0022B0  13D0               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2034  0022B2  0100               	movlb	0	; () banked
  2035  0022B4  51CF               	movf	(??_CANInitialize+1)& (0+255),w,b
  2036  0022B6  0100               	movlb	0	; () banked
  2037  0022B8  13D1               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2038                           
  2039                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2040                           ; Switch size 1, requested type "space"
  2041                           ; Number of cases is 1, Range of values is 0 to 0
  2042                           ; switch strategies available:
  2043                           ; Name         Instructions Cycles
  2044                           ; simple_byte            4     3 (average)
  2045                           ;	Chosen strategy is simple_byte
  2046  0022BA  0100               	movlb	0	; () banked
  2047  0022BC  51D1               	movf	(??_CANInitialize+3)& (0+255),w,b
  2048  0022BE  0A00               	xorlw	0	; case 0
  2049  0022C0  A4D8               	btfss	status,2,c
  2050  0022C2  D7E1               	goto	l357
  2051                           
  2052                           ; BSR set to: 0
  2053                           ; Switch size 1, requested type "space"
  2054                           ; Number of cases is 2, Range of values is 191 to 223
  2055                           ; switch strategies available:
  2056                           ; Name         Instructions Cycles
  2057                           ; simple_byte            7     4 (average)
  2058                           ;	Chosen strategy is simple_byte
  2059  0022C4  0100               	movlb	0	; () banked
  2060  0022C6  51D0               	movf	(??_CANInitialize+2)& (0+255),w,b
  2061  0022C8  0ABF               	xorlw	191	; case 191
  2062  0022CA  B4D8               	btfsc	status,2,c
  2063  0022CC  D7D7               	goto	l356
  2064  0022CE  0A60               	xorlw	96	; case 223
  2065  0022D0  B4D8               	btfsc	status,2,c
  2066  0022D2  D7D0               	goto	l4462
  2067  0022D4  D7D8               	goto	l357
  2068  0022D6                     l4470:
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2072  0022D6  0E00               	movlw	0
  2073  0022D8  0100               	movlb	0	; () banked
  2074  0022DA  6FBB               	movwf	CANSetFilter@filter& (0+255),b
  2075  0022DC  0E00               	movlw	0
  2076  0022DE  6FBC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2077  0022E0  0E00               	movlw	0
  2078  0022E2  6FBD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2079  0022E4  0E00               	movlw	0
  2080  0022E6  6FBE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2081  0022E8  C0D3  F0BF         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2082  0022EC  0E00               	movlw	0
  2083  0022EE  ECF7  F000         	call	_CANSetFilter
  2084                           
  2085                           ;CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2086  0022F2  0E00               	movlw	0
  2087  0022F4  0100               	movlb	0	; () banked
  2088  0022F6  6FBB               	movwf	CANSetFilter@filter& (0+255),b
  2089  0022F8  0E00               	movlw	0
  2090  0022FA  6FBC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2091  0022FC  0E00               	movlw	0
  2092  0022FE  6FBD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2093  002300  0E00               	movlw	0
  2094  002302  6FBE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2095  002304  C0D3  F0BF         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2096  002308  0E01               	movlw	1
  2097  00230A  ECF7  F000         	call	_CANSetFilter
  2098                           
  2099                           ;CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2100  00230E  0E00               	movlw	0
  2101  002310  0100               	movlb	0	; () banked
  2102  002312  6FBB               	movwf	CANSetFilter@filter& (0+255),b
  2103  002314  0E00               	movlw	0
  2104  002316  6FBC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2105  002318  0E00               	movlw	0
  2106  00231A  6FBD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2107  00231C  0E00               	movlw	0
  2108  00231E  6FBE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2109  002320  C0D4  F0BF         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2110  002324  0E02               	movlw	2
  2111  002326  ECF7  F000         	call	_CANSetFilter
  2112                           
  2113                           ;CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2114  00232A  0E00               	movlw	0
  2115  00232C  0100               	movlb	0	; () banked
  2116  00232E  6FBB               	movwf	CANSetFilter@filter& (0+255),b
  2117  002330  0E00               	movlw	0
  2118  002332  6FBC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2119  002334  0E00               	movlw	0
  2120  002336  6FBD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2121  002338  0E00               	movlw	0
  2122  00233A  6FBE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2123  00233C  C0D4  F0BF         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2124  002340  0E03               	movlw	3
  2125  002342  ECF7  F000         	call	_CANSetFilter
  2126                           
  2127                           ;CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2128  002346  0E00               	movlw	0
  2129  002348  0100               	movlb	0	; () banked
  2130  00234A  6FBB               	movwf	CANSetFilter@filter& (0+255),b
  2131  00234C  0E00               	movlw	0
  2132  00234E  6FBC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2133  002350  0E00               	movlw	0
  2134  002352  6FBD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2135  002354  0E00               	movlw	0
  2136  002356  6FBE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2137  002358  C0D4  F0BF         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2138  00235C  0E04               	movlw	4
  2139  00235E  ECF7  F000         	call	_CANSetFilter
  2140                           
  2141                           ;CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2142  002362  0E00               	movlw	0
  2143  002364  0100               	movlb	0	; () banked
  2144  002366  6FBB               	movwf	CANSetFilter@filter& (0+255),b
  2145  002368  0E00               	movlw	0
  2146  00236A  6FBC               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2147  00236C  0E00               	movlw	0
  2148  00236E  6FBD               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2149  002370  0E00               	movlw	0
  2150  002372  6FBE               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2151  002374  C0D4  F0BF         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2152  002378  0E05               	movlw	5
  2153  00237A  ECF7  F000         	call	_CANSetFilter
  2154                           
  2155                           ;CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2156  00237E  0E00               	movlw	0
  2157  002380  EC06  F014         	call	_CANOperationMode
  2158  002384  0012               	return		;funcret
  2159  002386                     __end_of_CANInitialize:
  2160                           	opt stack 0
  2161                           tblptru	equ	0xFF8
  2162                           tblptrh	equ	0xFF7
  2163                           tblptrl	equ	0xFF6
  2164                           tablat	equ	0xFF5
  2165                           intcon	equ	0xFF2
  2166                           postinc0	equ	0xFEE
  2167                           wreg	equ	0xFE8
  2168                           postdec1	equ	0xFE5
  2169                           fsr1l	equ	0xFE1
  2170                           status	equ	0xFD8
  2171                           
  2172 ;; *************** function _CANSetMask *****************
  2173 ;; Defined at:
  2174 ;;		line 640 in file "CANlib.h"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  numBuffer       1    wreg     enum E16878
  2177 ;;  mask            4    0[BANK0 ] unsigned long 
  2178 ;;  type            1    4[BANK0 ] enum E16844
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  numBuffer       1    9[BANK0 ] enum E16878
  2181 ;;  tamp            4   10[BANK0 ] unsigned long 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;		None               void
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2191 ;;      Params:         0       5       0       0
  2192 ;;      Locals:         0       5       0       0
  2193 ;;      Temps:          0       4       0       0
  2194 ;;      Totals:         0      14       0       0
  2195 ;;Total ram usage:       14 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:    2
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_CANInitialize
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text4
  2206  001E22                     __ptext4:
  2207                           	opt stack 0
  2208  001E22                     _CANSetMask:
  2209                           	opt stack 26
  2210                           
  2211                           ;incstack = 0
  2212                           ;CANSetMask@numBuffer stored from wreg
  2213  001E22  0100               	movlb	0	; () banked
  2214  001E24  6FC4               	movwf	CANSetMask@numBuffer& (0+255),b
  2215                           
  2216                           ;CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2217  001E26  0100               	movlb	0	; () banked
  2218  001E28  05C4               	decf	CANSetMask@numBuffer& (0+255),w,b
  2219  001E2A  A4D8               	btfss	status,2,c
  2220  001E2C  D056               	goto	l4026
  2221                           
  2222                           ; BSR set to: 0
  2223  001E2E  0100               	movlb	0	; () banked
  2224  001E30  29BF               	incf	CANSetMask@type& (0+255),w,b
  2225  001E32  A4D8               	btfss	status,2,c
  2226  001E34  D052               	goto	l4026
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;CANlib.h: 644: {
  2230                           ;CANlib.h: 645: tamp = (mask >> 3);
  2231  001E36  C0BB  F0C0         	movff	CANSetMask@mask,??_CANSetMask
  2232  001E3A  C0BC  F0C1         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2233  001E3E  C0BD  F0C2         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2234  001E42  C0BE  F0C3         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2235  001E46  0E04               	movlw	4
  2236  001E48  D006               	goto	u4580
  2237  001E4A                     u4585:
  2238  001E4A  0100               	movlb	0	; () banked
  2239  001E4C  90D8               	bcf	status,0,c
  2240  001E4E  33C3               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2241  001E50  33C2               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2242  001E52  33C1               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2243  001E54  33C0               	rrcf	??_CANSetMask& (0+255),f,b
  2244  001E56                     u4580:
  2245  001E56  2EE8               	decfsz	wreg,f,c
  2246  001E58  D7F8               	goto	u4585
  2247  001E5A  C0C0  F0C5         	movff	??_CANSetMask,CANSetMask@tamp
  2248  001E5E  C0C1  F0C6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2249  001E62  C0C2  F0C7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2250  001E66  C0C3  F0C8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;CANlib.h: 646: tamp = tamp & 0x000000FF;
  2254  001E6A  0100               	movlb	0	; () banked
  2255  001E6C  51C5               	movf	CANSetMask@tamp& (0+255),w,b
  2256  001E6E  0100               	movlb	0	; () banked
  2257  001E70  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2258  001E72  6BC6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2259  001E74  6BC7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2260  001E76  6BC8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  2264  001E78  C0C5  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;CANlib.h: 649: tamp = mask & 0x00000007;
  2268  001E7C  0E07               	movlw	7
  2269  001E7E  0100               	movlb	0	; () banked
  2270  001E80  15BB               	andwf	CANSetMask@mask& (0+255),w,b
  2271  001E82  0100               	movlb	0	; () banked
  2272  001E84  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2273  001E86  0E00               	movlw	0
  2274  001E88  0100               	movlb	0	; () banked
  2275  001E8A  15BC               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2276  001E8C  0100               	movlb	0	; () banked
  2277  001E8E  6FC6               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2278  001E90  0E00               	movlw	0
  2279  001E92  0100               	movlb	0	; () banked
  2280  001E94  15BD               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2281  001E96  0100               	movlb	0	; () banked
  2282  001E98  6FC7               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2283  001E9A  0E00               	movlw	0
  2284  001E9C  0100               	movlb	0	; () banked
  2285  001E9E  15BE               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2286  001EA0  0100               	movlb	0	; () banked
  2287  001EA2  6FC8               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;CANlib.h: 650: tamp = tamp << 5;
  2291  001EA4  C0C5  F0C0         	movff	CANSetMask@tamp,??_CANSetMask
  2292  001EA8  C0C6  F0C1         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2293  001EAC  C0C7  F0C2         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2294  001EB0  C0C8  F0C3         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2295  001EB4  0E05               	movlw	5
  2296  001EB6                     u4595:
  2297  001EB6  90D8               	bcf	status,0,c
  2298  001EB8  0100               	movlb	0	; () banked
  2299  001EBA  37C0               	rlcf	??_CANSetMask& (0+255),f,b
  2300  001EBC  37C1               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2301  001EBE  37C2               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2302  001EC0  37C3               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2303  001EC2  2EE8               	decfsz	wreg,f,c
  2304  001EC4  D7F8               	goto	u4595
  2305  001EC6  C0C0  F0C5         	movff	??_CANSetMask,CANSetMask@tamp
  2306  001ECA  C0C1  F0C6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2307  001ECE  C0C2  F0C7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2308  001ED2  C0C3  F0C8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  2312  001ED6  C0C5  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2313  001EDA                     l4026:
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;CANlib.h: 652: }
  2317                           ;CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2318  001EDA  0E02               	movlw	2
  2319  001EDC  0100               	movlb	0	; () banked
  2320  001EDE  19C4               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2321  001EE0  A4D8               	btfss	status,2,c
  2322  001EE2  D056               	goto	l4042
  2323                           
  2324                           ; BSR set to: 0
  2325  001EE4  0100               	movlb	0	; () banked
  2326  001EE6  29BF               	incf	CANSetMask@type& (0+255),w,b
  2327  001EE8  A4D8               	btfss	status,2,c
  2328  001EEA  D052               	goto	l4042
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;CANlib.h: 655: {
  2332                           ;CANlib.h: 656: tamp = (mask >> 3);
  2333  001EEC  C0BB  F0C0         	movff	CANSetMask@mask,??_CANSetMask
  2334  001EF0  C0BC  F0C1         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2335  001EF4  C0BD  F0C2         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2336  001EF8  C0BE  F0C3         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2337  001EFC  0E04               	movlw	4
  2338  001EFE  D006               	goto	u4620
  2339  001F00                     u4625:
  2340  001F00  0100               	movlb	0	; () banked
  2341  001F02  90D8               	bcf	status,0,c
  2342  001F04  33C3               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2343  001F06  33C2               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2344  001F08  33C1               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2345  001F0A  33C0               	rrcf	??_CANSetMask& (0+255),f,b
  2346  001F0C                     u4620:
  2347  001F0C  2EE8               	decfsz	wreg,f,c
  2348  001F0E  D7F8               	goto	u4625
  2349  001F10  C0C0  F0C5         	movff	??_CANSetMask,CANSetMask@tamp
  2350  001F14  C0C1  F0C6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2351  001F18  C0C2  F0C7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2352  001F1C  C0C3  F0C8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2353                           
  2354                           ; BSR set to: 0
  2355                           ;CANlib.h: 657: tamp = tamp & 0x000000FF;
  2356  001F20  0100               	movlb	0	; () banked
  2357  001F22  51C5               	movf	CANSetMask@tamp& (0+255),w,b
  2358  001F24  0100               	movlb	0	; () banked
  2359  001F26  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2360  001F28  6BC6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2361  001F2A  6BC7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2362  001F2C  6BC8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  2366  001F2E  C0C5  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;CANlib.h: 660: tamp = mask & 0x00000007;
  2370  001F32  0E07               	movlw	7
  2371  001F34  0100               	movlb	0	; () banked
  2372  001F36  15BB               	andwf	CANSetMask@mask& (0+255),w,b
  2373  001F38  0100               	movlb	0	; () banked
  2374  001F3A  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2375  001F3C  0E00               	movlw	0
  2376  001F3E  0100               	movlb	0	; () banked
  2377  001F40  15BC               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2378  001F42  0100               	movlb	0	; () banked
  2379  001F44  6FC6               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2380  001F46  0E00               	movlw	0
  2381  001F48  0100               	movlb	0	; () banked
  2382  001F4A  15BD               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2383  001F4C  0100               	movlb	0	; () banked
  2384  001F4E  6FC7               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2385  001F50  0E00               	movlw	0
  2386  001F52  0100               	movlb	0	; () banked
  2387  001F54  15BE               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2388  001F56  0100               	movlb	0	; () banked
  2389  001F58  6FC8               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;CANlib.h: 661: tamp = tamp << 5;
  2393  001F5A  C0C5  F0C0         	movff	CANSetMask@tamp,??_CANSetMask
  2394  001F5E  C0C6  F0C1         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2395  001F62  C0C7  F0C2         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2396  001F66  C0C8  F0C3         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2397  001F6A  0E05               	movlw	5
  2398  001F6C                     u4635:
  2399  001F6C  90D8               	bcf	status,0,c
  2400  001F6E  0100               	movlb	0	; () banked
  2401  001F70  37C0               	rlcf	??_CANSetMask& (0+255),f,b
  2402  001F72  37C1               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2403  001F74  37C2               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2404  001F76  37C3               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2405  001F78  2EE8               	decfsz	wreg,f,c
  2406  001F7A  D7F8               	goto	u4635
  2407  001F7C  C0C0  F0C5         	movff	??_CANSetMask,CANSetMask@tamp
  2408  001F80  C0C1  F0C6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2409  001F84  C0C2  F0C7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2410  001F88  C0C3  F0C8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  2414  001F8C  C0C5  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2415  001F90                     l4042:
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;CANlib.h: 663: }
  2419                           ;CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2420  001F90  0100               	movlb	0	; () banked
  2421  001F92  05C4               	decf	CANSetMask@numBuffer& (0+255),w,b
  2422  001F94  A4D8               	btfss	status,2,c
  2423  001F96  D087               	goto	l4074
  2424                           
  2425                           ; BSR set to: 0
  2426  001F98  0EF7               	movlw	247
  2427  001F9A  0100               	movlb	0	; () banked
  2428  001F9C  19BF               	xorwf	CANSetMask@type& (0+255),w,b
  2429  001F9E  A4D8               	btfss	status,2,c
  2430  001FA0  D082               	goto	l4074
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;CANlib.h: 666: {
  2434                           ;CANlib.h: 667: tamp = mask & 0x000000FF;
  2435  001FA2  0100               	movlb	0	; () banked
  2436  001FA4  51BB               	movf	CANSetMask@mask& (0+255),w,b
  2437  001FA6  0100               	movlb	0	; () banked
  2438  001FA8  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2439  001FAA  6BC6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2440  001FAC  6BC7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2441  001FAE  6BC8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  2445  001FB0  C0C5  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;CANlib.h: 670: tamp = mask & 0x0000FF00;
  2449  001FB4  0E00               	movlw	0
  2450  001FB6  0100               	movlb	0	; () banked
  2451  001FB8  15BB               	andwf	CANSetMask@mask& (0+255),w,b
  2452  001FBA  0100               	movlb	0	; () banked
  2453  001FBC  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2454  001FBE  0EFF               	movlw	255
  2455  001FC0  0100               	movlb	0	; () banked
  2456  001FC2  15BC               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2457  001FC4  0100               	movlb	0	; () banked
  2458  001FC6  6FC6               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2459  001FC8  0E00               	movlw	0
  2460  001FCA  0100               	movlb	0	; () banked
  2461  001FCC  15BD               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2462  001FCE  0100               	movlb	0	; () banked
  2463  001FD0  6FC7               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2464  001FD2  0E00               	movlw	0
  2465  001FD4  0100               	movlb	0	; () banked
  2466  001FD6  15BE               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2467  001FD8  0100               	movlb	0	; () banked
  2468  001FDA  6FC8               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;CANlib.h: 671: tamp = tamp >> 8;
  2472  001FDC  C0C5  F0C0         	movff	CANSetMask@tamp,??_CANSetMask
  2473  001FE0  C0C6  F0C1         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2474  001FE4  C0C7  F0C2         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2475  001FE8  C0C8  F0C3         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2476  001FEC  C0C1  F0C0         	movff	??_CANSetMask+1,??_CANSetMask
  2477  001FF0  C0C2  F0C1         	movff	??_CANSetMask+2,??_CANSetMask+1
  2478  001FF4  C0C3  F0C2         	movff	??_CANSetMask+3,??_CANSetMask+2
  2479  001FF8  0100               	movlb	0	; () banked
  2480  001FFA  6BC3               	clrf	(??_CANSetMask+3)& (0+255),b
  2481  001FFC  C0C0  F0C5         	movff	??_CANSetMask,CANSetMask@tamp
  2482  002000  C0C1  F0C6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2483  002004  C0C2  F0C7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2484  002008  C0C3  F0C8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2485                           
  2486                           ; BSR set to: 0
  2487                           ;CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  2488  00200C  C0C5  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;CANlib.h: 674: if (mask & 0x00010000)
  2492  002010  0100               	movlb	0	; () banked
  2493  002012  A1BD               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2494  002014  D003               	goto	l430
  2495                           
  2496                           ; BSR set to: 0
  2497                           ;CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  2498  002016  010F               	movlb	15	; () banked
  2499  002018  8119               	bsf	25,0,b	;volatile
  2500  00201A  D002               	goto	l431
  2501  00201C                     l430:
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;CANlib.h: 676: else
  2505                           ;CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  2506  00201C  010F               	movlb	15	; () banked
  2507  00201E  9119               	bcf	25,0,b	;volatile
  2508  002020                     l431:
  2509                           
  2510                           ; BSR set to: 15
  2511                           ;CANlib.h: 679: if (mask & 0x00020000)
  2512  002020  0100               	movlb	0	; () banked
  2513  002022  A3BD               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2514  002024  D003               	goto	l432
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  2518  002026  010F               	movlb	15	; () banked
  2519  002028  8319               	bsf	25,1,b	;volatile
  2520  00202A  D002               	goto	l433
  2521  00202C                     l432:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;CANlib.h: 681: else
  2525                           ;CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  2526  00202C  010F               	movlb	15	; () banked
  2527  00202E  9319               	bcf	25,1,b	;volatile
  2528  002030                     l433:
  2529                           
  2530                           ; BSR set to: 15
  2531                           ;CANlib.h: 684: if (mask & 0x00040000)
  2532  002030  0100               	movlb	0	; () banked
  2533  002032  A5BD               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2534  002034  D003               	goto	l434
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  2538  002036  010F               	movlb	15	; () banked
  2539  002038  8B19               	bsf	25,5,b	;volatile
  2540  00203A  D002               	goto	l435
  2541  00203C                     l434:
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;CANlib.h: 686: else
  2545                           ;CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  2546  00203C  010F               	movlb	15	; () banked
  2547  00203E  9B19               	bcf	25,5,b	;volatile
  2548  002040                     l435:
  2549                           
  2550                           ; BSR set to: 15
  2551                           ;CANlib.h: 689: if (mask & 0x00080000)
  2552  002040  0100               	movlb	0	; () banked
  2553  002042  A7BD               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2554  002044  D003               	goto	l436
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  2558  002046  010F               	movlb	15	; () banked
  2559  002048  8D19               	bsf	25,6,b	;volatile
  2560  00204A  D002               	goto	l437
  2561  00204C                     l436:
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;CANlib.h: 691: else
  2565                           ;CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  2566  00204C  010F               	movlb	15	; () banked
  2567  00204E  9D19               	bcf	25,6,b	;volatile
  2568  002050                     l437:
  2569                           
  2570                           ; BSR set to: 15
  2571                           ;CANlib.h: 694: if (mask & 0x00100000)
  2572  002050  0100               	movlb	0	; () banked
  2573  002052  A9BD               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2574  002054  D003               	goto	l438
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  2578  002056  010F               	movlb	15	; () banked
  2579  002058  8F19               	bsf	25,7,b	;volatile
  2580  00205A  D002               	goto	l4068
  2581  00205C                     l438:
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;CANlib.h: 696: else
  2585                           ;CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  2586  00205C  010F               	movlb	15	; () banked
  2587  00205E  9F19               	bcf	25,7,b	;volatile
  2588  002060                     l4068:
  2589                           
  2590                           ; BSR set to: 15
  2591                           ;CANlib.h: 699: tamp = (mask >> 21);
  2592  002060  C0BB  F0C0         	movff	CANSetMask@mask,??_CANSetMask
  2593  002064  C0BC  F0C1         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2594  002068  C0BD  F0C2         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2595  00206C  C0BE  F0C3         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2596  002070  0E16               	movlw	22
  2597  002072  D006               	goto	u4710
  2598  002074                     u4715:
  2599  002074  0100               	movlb	0	; () banked
  2600  002076  90D8               	bcf	status,0,c
  2601  002078  33C3               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2602  00207A  33C2               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2603  00207C  33C1               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2604  00207E  33C0               	rrcf	??_CANSetMask& (0+255),f,b
  2605  002080                     u4710:
  2606  002080  2EE8               	decfsz	wreg,f,c
  2607  002082  D7F8               	goto	u4715
  2608  002084  C0C0  F0C5         	movff	??_CANSetMask,CANSetMask@tamp
  2609  002088  C0C1  F0C6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2610  00208C  C0C2  F0C7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2611  002090  C0C3  F0C8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;CANlib.h: 700: tamp = tamp & 0x000000FF;
  2615  002094  0100               	movlb	0	; () banked
  2616  002096  51C5               	movf	CANSetMask@tamp& (0+255),w,b
  2617  002098  0100               	movlb	0	; () banked
  2618  00209A  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2619  00209C  6BC6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2620  00209E  6BC7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2621  0020A0  6BC8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  2625  0020A2  C0C5  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2626  0020A6                     l4074:
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;CANlib.h: 702: }
  2630                           ;CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2631  0020A6  0E02               	movlw	2
  2632  0020A8  0100               	movlb	0	; () banked
  2633  0020AA  19C4               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2634  0020AC  A4D8               	btfss	status,2,c
  2635  0020AE  0012               	return	
  2636                           
  2637                           ; BSR set to: 0
  2638  0020B0  0EF7               	movlw	247
  2639  0020B2  0100               	movlb	0	; () banked
  2640  0020B4  19BF               	xorwf	CANSetMask@type& (0+255),w,b
  2641  0020B6  A4D8               	btfss	status,2,c
  2642  0020B8  0012               	return	
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;CANlib.h: 705: {
  2646                           ;CANlib.h: 706: tamp = mask & 0x000000FF;
  2647  0020BA  0100               	movlb	0	; () banked
  2648  0020BC  51BB               	movf	CANSetMask@mask& (0+255),w,b
  2649  0020BE  0100               	movlb	0	; () banked
  2650  0020C0  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2651  0020C2  6BC6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2652  0020C4  6BC7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2653  0020C6  6BC8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  2657  0020C8  C0C5  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;CANlib.h: 709: tamp = mask & 0x0000FF00;
  2661  0020CC  0E00               	movlw	0
  2662  0020CE  0100               	movlb	0	; () banked
  2663  0020D0  15BB               	andwf	CANSetMask@mask& (0+255),w,b
  2664  0020D2  0100               	movlb	0	; () banked
  2665  0020D4  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2666  0020D6  0EFF               	movlw	255
  2667  0020D8  0100               	movlb	0	; () banked
  2668  0020DA  15BC               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2669  0020DC  0100               	movlb	0	; () banked
  2670  0020DE  6FC6               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2671  0020E0  0E00               	movlw	0
  2672  0020E2  0100               	movlb	0	; () banked
  2673  0020E4  15BD               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2674  0020E6  0100               	movlb	0	; () banked
  2675  0020E8  6FC7               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2676  0020EA  0E00               	movlw	0
  2677  0020EC  0100               	movlb	0	; () banked
  2678  0020EE  15BE               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2679  0020F0  0100               	movlb	0	; () banked
  2680  0020F2  6FC8               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;CANlib.h: 710: tamp = tamp >> 8;
  2684  0020F4  C0C5  F0C0         	movff	CANSetMask@tamp,??_CANSetMask
  2685  0020F8  C0C6  F0C1         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2686  0020FC  C0C7  F0C2         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2687  002100  C0C8  F0C3         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2688  002104  C0C1  F0C0         	movff	??_CANSetMask+1,??_CANSetMask
  2689  002108  C0C2  F0C1         	movff	??_CANSetMask+2,??_CANSetMask+1
  2690  00210C  C0C3  F0C2         	movff	??_CANSetMask+3,??_CANSetMask+2
  2691  002110  0100               	movlb	0	; () banked
  2692  002112  6BC3               	clrf	(??_CANSetMask+3)& (0+255),b
  2693  002114  C0C0  F0C5         	movff	??_CANSetMask,CANSetMask@tamp
  2694  002118  C0C1  F0C6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2695  00211C  C0C2  F0C7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2696  002120  C0C3  F0C8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  2700  002124  C0C5  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;CANlib.h: 713: if (mask & 0x00010000)
  2704  002128  0100               	movlb	0	; () banked
  2705  00212A  A1BD               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2706  00212C  D003               	goto	l441
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  2710  00212E  010F               	movlb	15	; () banked
  2711  002130  811D               	bsf	29,0,b	;volatile
  2712  002132  D002               	goto	l442
  2713  002134                     l441:
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;CANlib.h: 715: else
  2717                           ;CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  2718  002134  010F               	movlb	15	; () banked
  2719  002136  911D               	bcf	29,0,b	;volatile
  2720  002138                     l442:
  2721                           
  2722                           ; BSR set to: 15
  2723                           ;CANlib.h: 718: if (mask & 0x00020000)
  2724  002138  0100               	movlb	0	; () banked
  2725  00213A  A3BD               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2726  00213C  D003               	goto	l443
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  2730  00213E  010F               	movlb	15	; () banked
  2731  002140  831D               	bsf	29,1,b	;volatile
  2732  002142  D002               	goto	l444
  2733  002144                     l443:
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;CANlib.h: 720: else
  2737                           ;CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  2738  002144  010F               	movlb	15	; () banked
  2739  002146  931D               	bcf	29,1,b	;volatile
  2740  002148                     l444:
  2741                           
  2742                           ; BSR set to: 15
  2743                           ;CANlib.h: 723: if (mask & 0x00040000)
  2744  002148  0100               	movlb	0	; () banked
  2745  00214A  A5BD               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2746  00214C  D003               	goto	l445
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  2750  00214E  010F               	movlb	15	; () banked
  2751  002150  8B1D               	bsf	29,5,b	;volatile
  2752  002152  D002               	goto	l446
  2753  002154                     l445:
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;CANlib.h: 725: else
  2757                           ;CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  2758  002154  010F               	movlb	15	; () banked
  2759  002156  9B1D               	bcf	29,5,b	;volatile
  2760  002158                     l446:
  2761                           
  2762                           ; BSR set to: 15
  2763                           ;CANlib.h: 728: if (mask & 0x00080000)
  2764  002158  0100               	movlb	0	; () banked
  2765  00215A  A7BD               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2766  00215C  D003               	goto	l447
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  2770  00215E  010F               	movlb	15	; () banked
  2771  002160  8D1D               	bsf	29,6,b	;volatile
  2772  002162  D002               	goto	l448
  2773  002164                     l447:
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;CANlib.h: 730: else
  2777                           ;CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  2778  002164  010F               	movlb	15	; () banked
  2779  002166  9D1D               	bcf	29,6,b	;volatile
  2780  002168                     l448:
  2781                           
  2782                           ; BSR set to: 15
  2783                           ;CANlib.h: 733: if (mask & 0x00100000)
  2784  002168  0100               	movlb	0	; () banked
  2785  00216A  A9BD               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2786  00216C  D003               	goto	l449
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  2790  00216E  010F               	movlb	15	; () banked
  2791  002170  8F1D               	bsf	29,7,b	;volatile
  2792  002172  D002               	goto	l4100
  2793  002174                     l449:
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;CANlib.h: 735: else
  2797                           ;CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  2798  002174  010F               	movlb	15	; () banked
  2799  002176  9F1D               	bcf	29,7,b	;volatile
  2800  002178                     l4100:
  2801                           
  2802                           ; BSR set to: 15
  2803                           ;CANlib.h: 738: tamp = (mask >> 21);
  2804  002178  C0BB  F0C0         	movff	CANSetMask@mask,??_CANSetMask
  2805  00217C  C0BC  F0C1         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2806  002180  C0BD  F0C2         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2807  002184  C0BE  F0C3         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2808  002188  0E16               	movlw	22
  2809  00218A  D006               	goto	u4790
  2810  00218C                     u4795:
  2811  00218C  0100               	movlb	0	; () banked
  2812  00218E  90D8               	bcf	status,0,c
  2813  002190  33C3               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2814  002192  33C2               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2815  002194  33C1               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2816  002196  33C0               	rrcf	??_CANSetMask& (0+255),f,b
  2817  002198                     u4790:
  2818  002198  2EE8               	decfsz	wreg,f,c
  2819  00219A  D7F8               	goto	u4795
  2820  00219C  C0C0  F0C5         	movff	??_CANSetMask,CANSetMask@tamp
  2821  0021A0  C0C1  F0C6         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2822  0021A4  C0C2  F0C7         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2823  0021A8  C0C3  F0C8         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;CANlib.h: 739: tamp = tamp & 0x000000FF;
  2827  0021AC  0100               	movlb	0	; () banked
  2828  0021AE  51C5               	movf	CANSetMask@tamp& (0+255),w,b
  2829  0021B0  0100               	movlb	0	; () banked
  2830  0021B2  6FC5               	movwf	CANSetMask@tamp& (0+255),b
  2831  0021B4  6BC6               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2832  0021B6  6BC7               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2833  0021B8  6BC8               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  2837  0021BA  C0C5  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2838  0021BE  0012               	return	
  2839  0021C0                     __end_of_CANSetMask:
  2840                           	opt stack 0
  2841                           tblptru	equ	0xFF8
  2842                           tblptrh	equ	0xFF7
  2843                           tblptrl	equ	0xFF6
  2844                           tablat	equ	0xFF5
  2845                           intcon	equ	0xFF2
  2846                           postinc0	equ	0xFEE
  2847                           wreg	equ	0xFE8
  2848                           postdec1	equ	0xFE5
  2849                           fsr1l	equ	0xFE1
  2850                           status	equ	0xFD8
  2851                           
  2852 ;; *************** function _CANSetFilter *****************
  2853 ;; Defined at:
  2854 ;;		line 748 in file "CANlib.h"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  numBuffer       1    wreg     enum E16881
  2857 ;;  filter          4    0[BANK0 ] unsigned long 
  2858 ;;  type            1    4[BANK0 ] enum E16844
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  numBuffer       1    9[BANK0 ] enum E16881
  2861 ;;  tamp            4   10[BANK0 ] unsigned long 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;		None               void
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2871 ;;      Params:         0       5       0       0
  2872 ;;      Locals:         0       5       0       0
  2873 ;;      Temps:          0       4       0       0
  2874 ;;      Totals:         0      14       0       0
  2875 ;;Total ram usage:       14 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    2
  2878 ;; This function calls:
  2879 ;;		Nothing
  2880 ;; This function is called by:
  2881 ;;		_CANInitialize
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text5
  2886  0001EE                     __ptext5:
  2887                           	opt stack 0
  2888  0001EE                     _CANSetFilter:
  2889                           	opt stack 26
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;incstack = 0
  2893                           ;CANSetFilter@numBuffer stored from wreg
  2894  0001EE  0100               	movlb	0	; () banked
  2895  0001F0  6FC4               	movwf	CANSetFilter@numBuffer& (0+255),b
  2896                           
  2897                           ;CANlib.h: 750: unsigned long tamp;
  2898                           ;CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  2899  0001F2  0100               	movlb	0	; () banked
  2900  0001F4  51C4               	movf	CANSetFilter@numBuffer& (0+255),w,b
  2901  0001F6  0100               	movlb	0	; () banked
  2902  0001F8  A4D8               	btfss	status,2,c
  2903  0001FA  D058               	goto	l4124
  2904                           
  2905                           ; BSR set to: 0
  2906  0001FC  0100               	movlb	0	; () banked
  2907  0001FE  29BF               	incf	CANSetFilter@type& (0+255),w,b
  2908  000200  A4D8               	btfss	status,2,c
  2909  000202  D054               	goto	l4124
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;CANlib.h: 753: {
  2913                           ;CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  2914  000204  010F               	movlb	15	; () banked
  2915  000206  9701               	bcf	1,3,b	;volatile
  2916                           
  2917                           ; BSR set to: 15
  2918                           ;CANlib.h: 756: tamp = (filter >> 3);
  2919  000208  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  2920  00020C  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  2921  000210  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  2922  000214  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  2923  000218  0E04               	movlw	4
  2924  00021A  D006               	goto	u4820
  2925  00021C                     u4825:
  2926  00021C  0100               	movlb	0	; () banked
  2927  00021E  90D8               	bcf	status,0,c
  2928  000220  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  2929  000222  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  2930  000224  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  2931  000226  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  2932  000228                     u4820:
  2933  000228  2EE8               	decfsz	wreg,f,c
  2934  00022A  D7F8               	goto	u4825
  2935  00022C  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  2936  000230  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2937  000234  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2938  000238  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;CANlib.h: 757: tamp = tamp & 0x000000FF;
  2942  00023C  0100               	movlb	0	; () banked
  2943  00023E  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  2944  000240  0100               	movlb	0	; () banked
  2945  000242  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  2946  000244  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  2947  000246  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  2948  000248  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  2952  00024A  C0C5  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;CANlib.h: 760: tamp = filter & 0x00000007;
  2956  00024E  0E07               	movlw	7
  2957  000250  0100               	movlb	0	; () banked
  2958  000252  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  2959  000254  0100               	movlb	0	; () banked
  2960  000256  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  2961  000258  0E00               	movlw	0
  2962  00025A  0100               	movlb	0	; () banked
  2963  00025C  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  2964  00025E  0100               	movlb	0	; () banked
  2965  000260  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  2966  000262  0E00               	movlw	0
  2967  000264  0100               	movlb	0	; () banked
  2968  000266  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  2969  000268  0100               	movlb	0	; () banked
  2970  00026A  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  2971  00026C  0E00               	movlw	0
  2972  00026E  0100               	movlb	0	; () banked
  2973  000270  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  2974  000272  0100               	movlb	0	; () banked
  2975  000274  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;CANlib.h: 761: tamp = tamp << 5;
  2979  000276  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  2980  00027A  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  2981  00027E  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  2982  000282  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  2983  000286  0E05               	movlw	5
  2984  000288                     u4835:
  2985  000288  90D8               	bcf	status,0,c
  2986  00028A  0100               	movlb	0	; () banked
  2987  00028C  37C0               	rlcf	??_CANSetFilter& (0+255),f,b
  2988  00028E  37C1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  2989  000290  37C2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  2990  000292  37C3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  2991  000294  2EE8               	decfsz	wreg,f,c
  2992  000296  D7F8               	goto	u4835
  2993  000298  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  2994  00029C  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  2995  0002A0  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  2996  0002A4  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3000  0002A8  C0C5  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3001  0002AC                     l4124:
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;CANlib.h: 763: }
  3005                           ;CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3006  0002AC  0100               	movlb	0	; () banked
  3007  0002AE  05C4               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3008  0002B0  A4D8               	btfss	status,2,c
  3009  0002B2  D058               	goto	l4142
  3010                           
  3011                           ; BSR set to: 0
  3012  0002B4  0100               	movlb	0	; () banked
  3013  0002B6  29BF               	incf	CANSetFilter@type& (0+255),w,b
  3014  0002B8  A4D8               	btfss	status,2,c
  3015  0002BA  D054               	goto	l4142
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;CANlib.h: 766: {
  3019                           ;CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3020  0002BC  010F               	movlb	15	; () banked
  3021  0002BE  9705               	bcf	5,3,b	;volatile
  3022                           
  3023                           ; BSR set to: 15
  3024                           ;CANlib.h: 769: tamp = (filter >> 3);
  3025  0002C0  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  3026  0002C4  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3027  0002C8  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3028  0002CC  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3029  0002D0  0E04               	movlw	4
  3030  0002D2  D006               	goto	u4860
  3031  0002D4                     u4865:
  3032  0002D4  0100               	movlb	0	; () banked
  3033  0002D6  90D8               	bcf	status,0,c
  3034  0002D8  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3035  0002DA  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3036  0002DC  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3037  0002DE  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  3038  0002E0                     u4860:
  3039  0002E0  2EE8               	decfsz	wreg,f,c
  3040  0002E2  D7F8               	goto	u4865
  3041  0002E4  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3042  0002E8  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3043  0002EC  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3044  0002F0  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;CANlib.h: 770: tamp = tamp & 0x000000FF;
  3048  0002F4  0100               	movlb	0	; () banked
  3049  0002F6  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  3050  0002F8  0100               	movlb	0	; () banked
  3051  0002FA  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3052  0002FC  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3053  0002FE  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3054  000300  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3058  000302  C0C5  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;CANlib.h: 773: tamp = filter & 0x00000007;
  3062  000306  0E07               	movlw	7
  3063  000308  0100               	movlb	0	; () banked
  3064  00030A  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  3065  00030C  0100               	movlb	0	; () banked
  3066  00030E  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3067  000310  0E00               	movlw	0
  3068  000312  0100               	movlb	0	; () banked
  3069  000314  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3070  000316  0100               	movlb	0	; () banked
  3071  000318  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3072  00031A  0E00               	movlw	0
  3073  00031C  0100               	movlb	0	; () banked
  3074  00031E  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3075  000320  0100               	movlb	0	; () banked
  3076  000322  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3077  000324  0E00               	movlw	0
  3078  000326  0100               	movlb	0	; () banked
  3079  000328  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3080  00032A  0100               	movlb	0	; () banked
  3081  00032C  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;CANlib.h: 774: tamp = tamp << 5;
  3085  00032E  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  3086  000332  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3087  000336  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3088  00033A  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3089  00033E  0E05               	movlw	5
  3090  000340                     u4875:
  3091  000340  90D8               	bcf	status,0,c
  3092  000342  0100               	movlb	0	; () banked
  3093  000344  37C0               	rlcf	??_CANSetFilter& (0+255),f,b
  3094  000346  37C1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3095  000348  37C2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3096  00034A  37C3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3097  00034C  2EE8               	decfsz	wreg,f,c
  3098  00034E  D7F8               	goto	u4875
  3099  000350  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3100  000354  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3101  000358  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3102  00035C  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3106  000360  C0C5  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3107  000364                     l4142:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;CANlib.h: 776: }
  3111                           ;CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3112  000364  0E02               	movlw	2
  3113  000366  0100               	movlb	0	; () banked
  3114  000368  19C4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3115  00036A  A4D8               	btfss	status,2,c
  3116  00036C  D058               	goto	l4160
  3117                           
  3118                           ; BSR set to: 0
  3119  00036E  0100               	movlb	0	; () banked
  3120  000370  29BF               	incf	CANSetFilter@type& (0+255),w,b
  3121  000372  A4D8               	btfss	status,2,c
  3122  000374  D054               	goto	l4160
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;CANlib.h: 779: {
  3126                           ;CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3127  000376  010F               	movlb	15	; () banked
  3128  000378  9709               	bcf	9,3,b	;volatile
  3129                           
  3130                           ; BSR set to: 15
  3131                           ;CANlib.h: 782: tamp = (filter >> 3);
  3132  00037A  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  3133  00037E  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3134  000382  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3135  000386  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3136  00038A  0E04               	movlw	4
  3137  00038C  D006               	goto	u4900
  3138  00038E                     u4905:
  3139  00038E  0100               	movlb	0	; () banked
  3140  000390  90D8               	bcf	status,0,c
  3141  000392  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3142  000394  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3143  000396  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3144  000398  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  3145  00039A                     u4900:
  3146  00039A  2EE8               	decfsz	wreg,f,c
  3147  00039C  D7F8               	goto	u4905
  3148  00039E  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3149  0003A2  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3150  0003A6  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3151  0003AA  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;CANlib.h: 783: tamp = tamp & 0x000000FF;
  3155  0003AE  0100               	movlb	0	; () banked
  3156  0003B0  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  3157  0003B2  0100               	movlb	0	; () banked
  3158  0003B4  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3159  0003B6  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3160  0003B8  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3161  0003BA  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3165  0003BC  C0C5  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;CANlib.h: 786: tamp = filter & 0x00000007;
  3169  0003C0  0E07               	movlw	7
  3170  0003C2  0100               	movlb	0	; () banked
  3171  0003C4  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  3172  0003C6  0100               	movlb	0	; () banked
  3173  0003C8  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3174  0003CA  0E00               	movlw	0
  3175  0003CC  0100               	movlb	0	; () banked
  3176  0003CE  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3177  0003D0  0100               	movlb	0	; () banked
  3178  0003D2  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3179  0003D4  0E00               	movlw	0
  3180  0003D6  0100               	movlb	0	; () banked
  3181  0003D8  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3182  0003DA  0100               	movlb	0	; () banked
  3183  0003DC  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3184  0003DE  0E00               	movlw	0
  3185  0003E0  0100               	movlb	0	; () banked
  3186  0003E2  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3187  0003E4  0100               	movlb	0	; () banked
  3188  0003E6  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;CANlib.h: 787: tamp = tamp << 5;
  3192  0003E8  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  3193  0003EC  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3194  0003F0  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3195  0003F4  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3196  0003F8  0E05               	movlw	5
  3197  0003FA                     u4915:
  3198  0003FA  90D8               	bcf	status,0,c
  3199  0003FC  0100               	movlb	0	; () banked
  3200  0003FE  37C0               	rlcf	??_CANSetFilter& (0+255),f,b
  3201  000400  37C1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3202  000402  37C2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3203  000404  37C3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3204  000406  2EE8               	decfsz	wreg,f,c
  3205  000408  D7F8               	goto	u4915
  3206  00040A  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3207  00040E  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3208  000412  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3209  000416  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  3213  00041A  C0C5  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3214  00041E                     l4160:
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;CANlib.h: 789: }
  3218                           ;CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3219  00041E  0E03               	movlw	3
  3220  000420  0100               	movlb	0	; () banked
  3221  000422  19C4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3222  000424  A4D8               	btfss	status,2,c
  3223  000426  D058               	goto	l4178
  3224                           
  3225                           ; BSR set to: 0
  3226  000428  0100               	movlb	0	; () banked
  3227  00042A  29BF               	incf	CANSetFilter@type& (0+255),w,b
  3228  00042C  A4D8               	btfss	status,2,c
  3229  00042E  D054               	goto	l4178
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;CANlib.h: 792: {
  3233                           ;CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  3234  000430  010F               	movlb	15	; () banked
  3235  000432  970D               	bcf	13,3,b	;volatile
  3236                           
  3237                           ; BSR set to: 15
  3238                           ;CANlib.h: 795: tamp = (filter >> 3);
  3239  000434  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  3240  000438  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3241  00043C  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3242  000440  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3243  000444  0E04               	movlw	4
  3244  000446  D006               	goto	u4940
  3245  000448                     u4945:
  3246  000448  0100               	movlb	0	; () banked
  3247  00044A  90D8               	bcf	status,0,c
  3248  00044C  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3249  00044E  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3250  000450  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3251  000452  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  3252  000454                     u4940:
  3253  000454  2EE8               	decfsz	wreg,f,c
  3254  000456  D7F8               	goto	u4945
  3255  000458  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3256  00045C  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3257  000460  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3258  000464  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;CANlib.h: 796: tamp = tamp & 0x000000FF;
  3262  000468  0100               	movlb	0	; () banked
  3263  00046A  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  3264  00046C  0100               	movlb	0	; () banked
  3265  00046E  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3266  000470  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3267  000472  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3268  000474  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  3272  000476  C0C5  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;CANlib.h: 799: tamp = filter & 0x00000007;
  3276  00047A  0E07               	movlw	7
  3277  00047C  0100               	movlb	0	; () banked
  3278  00047E  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  3279  000480  0100               	movlb	0	; () banked
  3280  000482  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3281  000484  0E00               	movlw	0
  3282  000486  0100               	movlb	0	; () banked
  3283  000488  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3284  00048A  0100               	movlb	0	; () banked
  3285  00048C  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3286  00048E  0E00               	movlw	0
  3287  000490  0100               	movlb	0	; () banked
  3288  000492  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3289  000494  0100               	movlb	0	; () banked
  3290  000496  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3291  000498  0E00               	movlw	0
  3292  00049A  0100               	movlb	0	; () banked
  3293  00049C  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3294  00049E  0100               	movlb	0	; () banked
  3295  0004A0  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;CANlib.h: 800: tamp = tamp << 5;
  3299  0004A2  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  3300  0004A6  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3301  0004AA  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3302  0004AE  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3303  0004B2  0E05               	movlw	5
  3304  0004B4                     u4955:
  3305  0004B4  90D8               	bcf	status,0,c
  3306  0004B6  0100               	movlb	0	; () banked
  3307  0004B8  37C0               	rlcf	??_CANSetFilter& (0+255),f,b
  3308  0004BA  37C1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3309  0004BC  37C2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3310  0004BE  37C3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3311  0004C0  2EE8               	decfsz	wreg,f,c
  3312  0004C2  D7F8               	goto	u4955
  3313  0004C4  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3314  0004C8  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3315  0004CC  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3316  0004D0  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  3320  0004D4  C0C5  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3321  0004D8                     l4178:
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;CANlib.h: 802: }
  3325                           ;CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3326  0004D8  0E04               	movlw	4
  3327  0004DA  0100               	movlb	0	; () banked
  3328  0004DC  19C4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3329  0004DE  A4D8               	btfss	status,2,c
  3330  0004E0  D058               	goto	l4196
  3331                           
  3332                           ; BSR set to: 0
  3333  0004E2  0100               	movlb	0	; () banked
  3334  0004E4  29BF               	incf	CANSetFilter@type& (0+255),w,b
  3335  0004E6  A4D8               	btfss	status,2,c
  3336  0004E8  D054               	goto	l4196
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;CANlib.h: 805: {
  3340                           ;CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  3341  0004EA  010F               	movlb	15	; () banked
  3342  0004EC  9711               	bcf	17,3,b	;volatile
  3343                           
  3344                           ; BSR set to: 15
  3345                           ;CANlib.h: 808: tamp = (filter >> 3);
  3346  0004EE  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  3347  0004F2  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3348  0004F6  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3349  0004FA  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3350  0004FE  0E04               	movlw	4
  3351  000500  D006               	goto	u4980
  3352  000502                     u4985:
  3353  000502  0100               	movlb	0	; () banked
  3354  000504  90D8               	bcf	status,0,c
  3355  000506  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3356  000508  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3357  00050A  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3358  00050C  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  3359  00050E                     u4980:
  3360  00050E  2EE8               	decfsz	wreg,f,c
  3361  000510  D7F8               	goto	u4985
  3362  000512  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3363  000516  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3364  00051A  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3365  00051E  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;CANlib.h: 809: tamp = tamp & 0x000000FF;
  3369  000522  0100               	movlb	0	; () banked
  3370  000524  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  3371  000526  0100               	movlb	0	; () banked
  3372  000528  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3373  00052A  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3374  00052C  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3375  00052E  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  3379  000530  C0C5  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;CANlib.h: 812: tamp = filter & 0x00000007;
  3383  000534  0E07               	movlw	7
  3384  000536  0100               	movlb	0	; () banked
  3385  000538  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  3386  00053A  0100               	movlb	0	; () banked
  3387  00053C  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3388  00053E  0E00               	movlw	0
  3389  000540  0100               	movlb	0	; () banked
  3390  000542  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3391  000544  0100               	movlb	0	; () banked
  3392  000546  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3393  000548  0E00               	movlw	0
  3394  00054A  0100               	movlb	0	; () banked
  3395  00054C  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3396  00054E  0100               	movlb	0	; () banked
  3397  000550  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3398  000552  0E00               	movlw	0
  3399  000554  0100               	movlb	0	; () banked
  3400  000556  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3401  000558  0100               	movlb	0	; () banked
  3402  00055A  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;CANlib.h: 813: tamp = tamp << 5;
  3406  00055C  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  3407  000560  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3408  000564  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3409  000568  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3410  00056C  0E05               	movlw	5
  3411  00056E                     u4995:
  3412  00056E  90D8               	bcf	status,0,c
  3413  000570  0100               	movlb	0	; () banked
  3414  000572  37C0               	rlcf	??_CANSetFilter& (0+255),f,b
  3415  000574  37C1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3416  000576  37C2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3417  000578  37C3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3418  00057A  2EE8               	decfsz	wreg,f,c
  3419  00057C  D7F8               	goto	u4995
  3420  00057E  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3421  000582  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3422  000586  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3423  00058A  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  3427  00058E  C0C5  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3428  000592                     l4196:
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;CANlib.h: 815: }
  3432                           ;CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3433  000592  0E05               	movlw	5
  3434  000594  0100               	movlb	0	; () banked
  3435  000596  19C4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3436  000598  A4D8               	btfss	status,2,c
  3437  00059A  D058               	goto	l4214
  3438                           
  3439                           ; BSR set to: 0
  3440  00059C  0100               	movlb	0	; () banked
  3441  00059E  29BF               	incf	CANSetFilter@type& (0+255),w,b
  3442  0005A0  A4D8               	btfss	status,2,c
  3443  0005A2  D054               	goto	l4214
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;CANlib.h: 818: {
  3447                           ;CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  3448  0005A4  010F               	movlb	15	; () banked
  3449  0005A6  9715               	bcf	21,3,b	;volatile
  3450                           
  3451                           ; BSR set to: 15
  3452                           ;CANlib.h: 821: tamp = (filter >> 3);
  3453  0005A8  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  3454  0005AC  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3455  0005B0  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3456  0005B4  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3457  0005B8  0E04               	movlw	4
  3458  0005BA  D006               	goto	u5020
  3459  0005BC                     u5025:
  3460  0005BC  0100               	movlb	0	; () banked
  3461  0005BE  90D8               	bcf	status,0,c
  3462  0005C0  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3463  0005C2  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3464  0005C4  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3465  0005C6  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  3466  0005C8                     u5020:
  3467  0005C8  2EE8               	decfsz	wreg,f,c
  3468  0005CA  D7F8               	goto	u5025
  3469  0005CC  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3470  0005D0  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3471  0005D4  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3472  0005D8  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;CANlib.h: 822: tamp = tamp & 0x000000FF;
  3476  0005DC  0100               	movlb	0	; () banked
  3477  0005DE  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  3478  0005E0  0100               	movlb	0	; () banked
  3479  0005E2  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3480  0005E4  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3481  0005E6  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3482  0005E8  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  3486  0005EA  C0C5  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;CANlib.h: 825: tamp = filter & 0x00000007;
  3490  0005EE  0E07               	movlw	7
  3491  0005F0  0100               	movlb	0	; () banked
  3492  0005F2  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  3493  0005F4  0100               	movlb	0	; () banked
  3494  0005F6  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3495  0005F8  0E00               	movlw	0
  3496  0005FA  0100               	movlb	0	; () banked
  3497  0005FC  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3498  0005FE  0100               	movlb	0	; () banked
  3499  000600  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3500  000602  0E00               	movlw	0
  3501  000604  0100               	movlb	0	; () banked
  3502  000606  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3503  000608  0100               	movlb	0	; () banked
  3504  00060A  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3505  00060C  0E00               	movlw	0
  3506  00060E  0100               	movlb	0	; () banked
  3507  000610  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3508  000612  0100               	movlb	0	; () banked
  3509  000614  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;CANlib.h: 826: tamp = tamp << 5;
  3513  000616  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  3514  00061A  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3515  00061E  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3516  000622  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3517  000626  0E05               	movlw	5
  3518  000628                     u5035:
  3519  000628  90D8               	bcf	status,0,c
  3520  00062A  0100               	movlb	0	; () banked
  3521  00062C  37C0               	rlcf	??_CANSetFilter& (0+255),f,b
  3522  00062E  37C1               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3523  000630  37C2               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3524  000632  37C3               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3525  000634  2EE8               	decfsz	wreg,f,c
  3526  000636  D7F8               	goto	u5035
  3527  000638  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3528  00063C  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3529  000640  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3530  000644  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  3534  000648  C0C5  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3535  00064C                     l4214:
  3536                           
  3537                           ; BSR set to: 0
  3538                           ;CANlib.h: 828: }
  3539                           ;CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3540  00064C  0100               	movlb	0	; () banked
  3541  00064E  51C4               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3542  000650  0100               	movlb	0	; () banked
  3543  000652  A4D8               	btfss	status,2,c
  3544  000654  D089               	goto	l4248
  3545                           
  3546                           ; BSR set to: 0
  3547  000656  0EF7               	movlw	247
  3548  000658  0100               	movlb	0	; () banked
  3549  00065A  19BF               	xorwf	CANSetFilter@type& (0+255),w,b
  3550  00065C  A4D8               	btfss	status,2,c
  3551  00065E  D084               	goto	l4248
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;CANlib.h: 832: {
  3555                           ;CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  3556  000660  010F               	movlb	15	; () banked
  3557  000662  8701               	bsf	1,3,b	;volatile
  3558                           
  3559                           ; BSR set to: 15
  3560                           ;CANlib.h: 835: tamp = filter & 0x000000FF;
  3561  000664  0100               	movlb	0	; () banked
  3562  000666  51BB               	movf	CANSetFilter@filter& (0+255),w,b
  3563  000668  0100               	movlb	0	; () banked
  3564  00066A  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3565  00066C  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3566  00066E  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3567  000670  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  3571  000672  C0C5  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;CANlib.h: 838: tamp = filter & 0x0000FF00;
  3575  000676  0E00               	movlw	0
  3576  000678  0100               	movlb	0	; () banked
  3577  00067A  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  3578  00067C  0100               	movlb	0	; () banked
  3579  00067E  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3580  000680  0EFF               	movlw	255
  3581  000682  0100               	movlb	0	; () banked
  3582  000684  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3583  000686  0100               	movlb	0	; () banked
  3584  000688  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3585  00068A  0E00               	movlw	0
  3586  00068C  0100               	movlb	0	; () banked
  3587  00068E  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3588  000690  0100               	movlb	0	; () banked
  3589  000692  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3590  000694  0E00               	movlw	0
  3591  000696  0100               	movlb	0	; () banked
  3592  000698  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3593  00069A  0100               	movlb	0	; () banked
  3594  00069C  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;CANlib.h: 839: tamp = tamp >> 8;
  3598  00069E  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  3599  0006A2  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3600  0006A6  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3601  0006AA  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3602  0006AE  C0C1  F0C0         	movff	??_CANSetFilter+1,??_CANSetFilter
  3603  0006B2  C0C2  F0C1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3604  0006B6  C0C3  F0C2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3605  0006BA  0100               	movlb	0	; () banked
  3606  0006BC  6BC3               	clrf	(??_CANSetFilter+3)& (0+255),b
  3607  0006BE  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3608  0006C2  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3609  0006C6  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3610  0006CA  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  3614  0006CE  C0C5  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;CANlib.h: 842: if (filter & 0x00010000)
  3618  0006D2  0100               	movlb	0	; () banked
  3619  0006D4  A1BD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3620  0006D6  D003               	goto	l461
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  3624  0006D8  010F               	movlb	15	; () banked
  3625  0006DA  8101               	bsf	1,0,b	;volatile
  3626  0006DC  D002               	goto	l462
  3627  0006DE                     l461:
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;CANlib.h: 844: else
  3631                           ;CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  3632  0006DE  010F               	movlb	15	; () banked
  3633  0006E0  9101               	bcf	1,0,b	;volatile
  3634  0006E2                     l462:
  3635                           
  3636                           ; BSR set to: 15
  3637                           ;CANlib.h: 847: if (filter & 0x00020000)
  3638  0006E2  0100               	movlb	0	; () banked
  3639  0006E4  A3BD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3640  0006E6  D003               	goto	l463
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  3644  0006E8  010F               	movlb	15	; () banked
  3645  0006EA  8301               	bsf	1,1,b	;volatile
  3646  0006EC  D002               	goto	l464
  3647  0006EE                     l463:
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;CANlib.h: 849: else
  3651                           ;CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  3652  0006EE  010F               	movlb	15	; () banked
  3653  0006F0  9301               	bcf	1,1,b	;volatile
  3654  0006F2                     l464:
  3655                           
  3656                           ; BSR set to: 15
  3657                           ;CANlib.h: 852: if (filter & 0x00040000)
  3658  0006F2  0100               	movlb	0	; () banked
  3659  0006F4  A5BD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3660  0006F6  D003               	goto	l465
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  3664  0006F8  010F               	movlb	15	; () banked
  3665  0006FA  8B01               	bsf	1,5,b	;volatile
  3666  0006FC  D002               	goto	l466
  3667  0006FE                     l465:
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;CANlib.h: 854: else
  3671                           ;CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  3672  0006FE  010F               	movlb	15	; () banked
  3673  000700  9B01               	bcf	1,5,b	;volatile
  3674  000702                     l466:
  3675                           
  3676                           ; BSR set to: 15
  3677                           ;CANlib.h: 857: if (filter & 0x00080000)
  3678  000702  0100               	movlb	0	; () banked
  3679  000704  A7BD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3680  000706  D003               	goto	l467
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  3684  000708  010F               	movlb	15	; () banked
  3685  00070A  8D01               	bsf	1,6,b	;volatile
  3686  00070C  D002               	goto	l468
  3687  00070E                     l467:
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;CANlib.h: 859: else
  3691                           ;CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  3692  00070E  010F               	movlb	15	; () banked
  3693  000710  9D01               	bcf	1,6,b	;volatile
  3694  000712                     l468:
  3695                           
  3696                           ; BSR set to: 15
  3697                           ;CANlib.h: 862: if (filter & 0x00100000)
  3698  000712  0100               	movlb	0	; () banked
  3699  000714  A9BD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3700  000716  D003               	goto	l469
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  3704  000718  010F               	movlb	15	; () banked
  3705  00071A  8F01               	bsf	1,7,b	;volatile
  3706  00071C  D002               	goto	l4242
  3707  00071E                     l469:
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;CANlib.h: 864: else
  3711                           ;CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  3712  00071E  010F               	movlb	15	; () banked
  3713  000720  9F01               	bcf	1,7,b	;volatile
  3714  000722                     l4242:
  3715                           
  3716                           ; BSR set to: 15
  3717                           ;CANlib.h: 867: tamp = (filter >> 21);
  3718  000722  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  3719  000726  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3720  00072A  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3721  00072E  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3722  000732  0E16               	movlw	22
  3723  000734  D006               	goto	u5110
  3724  000736                     u5115:
  3725  000736  0100               	movlb	0	; () banked
  3726  000738  90D8               	bcf	status,0,c
  3727  00073A  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3728  00073C  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3729  00073E  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3730  000740  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  3731  000742                     u5110:
  3732  000742  2EE8               	decfsz	wreg,f,c
  3733  000744  D7F8               	goto	u5115
  3734  000746  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3735  00074A  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3736  00074E  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3737  000752  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;CANlib.h: 868: tamp = tamp & 0x000000FF;
  3741  000756  0100               	movlb	0	; () banked
  3742  000758  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  3743  00075A  0100               	movlb	0	; () banked
  3744  00075C  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3745  00075E  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3746  000760  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3747  000762  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  3751  000764  C0C5  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3752  000768                     l4248:
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;CANlib.h: 870: }
  3756                           ;CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  3757  000768  0100               	movlb	0	; () banked
  3758  00076A  05C4               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3759  00076C  A4D8               	btfss	status,2,c
  3760  00076E  D089               	goto	l4282
  3761                           
  3762                           ; BSR set to: 0
  3763  000770  0EF7               	movlw	247
  3764  000772  0100               	movlb	0	; () banked
  3765  000774  19BF               	xorwf	CANSetFilter@type& (0+255),w,b
  3766  000776  A4D8               	btfss	status,2,c
  3767  000778  D084               	goto	l4282
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;CANlib.h: 873: {
  3771                           ;CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  3772  00077A  010F               	movlb	15	; () banked
  3773  00077C  8705               	bsf	5,3,b	;volatile
  3774                           
  3775                           ; BSR set to: 15
  3776                           ;CANlib.h: 876: tamp = filter & 0x000000FF;
  3777  00077E  0100               	movlb	0	; () banked
  3778  000780  51BB               	movf	CANSetFilter@filter& (0+255),w,b
  3779  000782  0100               	movlb	0	; () banked
  3780  000784  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3781  000786  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3782  000788  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3783  00078A  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  3787  00078C  C0C5  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;CANlib.h: 879: tamp = filter & 0x0000FF00;
  3791  000790  0E00               	movlw	0
  3792  000792  0100               	movlb	0	; () banked
  3793  000794  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  3794  000796  0100               	movlb	0	; () banked
  3795  000798  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3796  00079A  0EFF               	movlw	255
  3797  00079C  0100               	movlb	0	; () banked
  3798  00079E  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3799  0007A0  0100               	movlb	0	; () banked
  3800  0007A2  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3801  0007A4  0E00               	movlw	0
  3802  0007A6  0100               	movlb	0	; () banked
  3803  0007A8  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3804  0007AA  0100               	movlb	0	; () banked
  3805  0007AC  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3806  0007AE  0E00               	movlw	0
  3807  0007B0  0100               	movlb	0	; () banked
  3808  0007B2  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3809  0007B4  0100               	movlb	0	; () banked
  3810  0007B6  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;CANlib.h: 880: tamp = tamp >> 8;
  3814  0007B8  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  3815  0007BC  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3816  0007C0  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3817  0007C4  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3818  0007C8  C0C1  F0C0         	movff	??_CANSetFilter+1,??_CANSetFilter
  3819  0007CC  C0C2  F0C1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3820  0007D0  C0C3  F0C2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3821  0007D4  0100               	movlb	0	; () banked
  3822  0007D6  6BC3               	clrf	(??_CANSetFilter+3)& (0+255),b
  3823  0007D8  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3824  0007DC  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3825  0007E0  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3826  0007E4  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  3830  0007E8  C0C5  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;CANlib.h: 883: if (filter & 0x00010000)
  3834  0007EC  0100               	movlb	0	; () banked
  3835  0007EE  A1BD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3836  0007F0  D003               	goto	l472
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  3840  0007F2  010F               	movlb	15	; () banked
  3841  0007F4  8105               	bsf	5,0,b	;volatile
  3842  0007F6  D002               	goto	l473
  3843  0007F8                     l472:
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;CANlib.h: 885: else
  3847                           ;CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  3848  0007F8  010F               	movlb	15	; () banked
  3849  0007FA  9105               	bcf	5,0,b	;volatile
  3850  0007FC                     l473:
  3851                           
  3852                           ; BSR set to: 15
  3853                           ;CANlib.h: 888: if (filter & 0x00020000)
  3854  0007FC  0100               	movlb	0	; () banked
  3855  0007FE  A3BD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3856  000800  D003               	goto	l474
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  3860  000802  010F               	movlb	15	; () banked
  3861  000804  8305               	bsf	5,1,b	;volatile
  3862  000806  D002               	goto	l475
  3863  000808                     l474:
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;CANlib.h: 890: else
  3867                           ;CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  3868  000808  010F               	movlb	15	; () banked
  3869  00080A  9305               	bcf	5,1,b	;volatile
  3870  00080C                     l475:
  3871                           
  3872                           ; BSR set to: 15
  3873                           ;CANlib.h: 893: if (filter & 0x00040000)
  3874  00080C  0100               	movlb	0	; () banked
  3875  00080E  A5BD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3876  000810  D003               	goto	l476
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  3880  000812  010F               	movlb	15	; () banked
  3881  000814  8B05               	bsf	5,5,b	;volatile
  3882  000816  D002               	goto	l477
  3883  000818                     l476:
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;CANlib.h: 895: else
  3887                           ;CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  3888  000818  010F               	movlb	15	; () banked
  3889  00081A  9B05               	bcf	5,5,b	;volatile
  3890  00081C                     l477:
  3891                           
  3892                           ; BSR set to: 15
  3893                           ;CANlib.h: 898: if (filter & 0x00080000)
  3894  00081C  0100               	movlb	0	; () banked
  3895  00081E  A7BD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3896  000820  D003               	goto	l478
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  3900  000822  010F               	movlb	15	; () banked
  3901  000824  8D05               	bsf	5,6,b	;volatile
  3902  000826  D002               	goto	l479
  3903  000828                     l478:
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;CANlib.h: 900: else
  3907                           ;CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  3908  000828  010F               	movlb	15	; () banked
  3909  00082A  9D05               	bcf	5,6,b	;volatile
  3910  00082C                     l479:
  3911                           
  3912                           ; BSR set to: 15
  3913                           ;CANlib.h: 903: if (filter & 0x00100000)
  3914  00082C  0100               	movlb	0	; () banked
  3915  00082E  A9BD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3916  000830  D003               	goto	l480
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  3920  000832  010F               	movlb	15	; () banked
  3921  000834  8F05               	bsf	5,7,b	;volatile
  3922  000836  D002               	goto	l4276
  3923  000838                     l480:
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;CANlib.h: 905: else
  3927                           ;CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  3928  000838  010F               	movlb	15	; () banked
  3929  00083A  9F05               	bcf	5,7,b	;volatile
  3930  00083C                     l4276:
  3931                           
  3932                           ; BSR set to: 15
  3933                           ;CANlib.h: 908: tamp = (filter >> 21);
  3934  00083C  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  3935  000840  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3936  000844  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3937  000848  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3938  00084C  0E16               	movlw	22
  3939  00084E  D006               	goto	u5190
  3940  000850                     u5195:
  3941  000850  0100               	movlb	0	; () banked
  3942  000852  90D8               	bcf	status,0,c
  3943  000854  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3944  000856  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3945  000858  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3946  00085A  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  3947  00085C                     u5190:
  3948  00085C  2EE8               	decfsz	wreg,f,c
  3949  00085E  D7F8               	goto	u5195
  3950  000860  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  3951  000864  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3952  000868  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3953  00086C  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;CANlib.h: 909: tamp = tamp & 0x000000FF;
  3957  000870  0100               	movlb	0	; () banked
  3958  000872  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  3959  000874  0100               	movlb	0	; () banked
  3960  000876  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3961  000878  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3962  00087A  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3963  00087C  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  3967  00087E  C0C5  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3968  000882                     l4282:
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;CANlib.h: 911: }
  3972                           ;CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  3973  000882  0E02               	movlw	2
  3974  000884  0100               	movlb	0	; () banked
  3975  000886  19C4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3976  000888  A4D8               	btfss	status,2,c
  3977  00088A  D089               	goto	l4316
  3978                           
  3979                           ; BSR set to: 0
  3980  00088C  0EF7               	movlw	247
  3981  00088E  0100               	movlb	0	; () banked
  3982  000890  19BF               	xorwf	CANSetFilter@type& (0+255),w,b
  3983  000892  A4D8               	btfss	status,2,c
  3984  000894  D084               	goto	l4316
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;CANlib.h: 915: {
  3988                           ;CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  3989  000896  010F               	movlb	15	; () banked
  3990  000898  8709               	bsf	9,3,b	;volatile
  3991                           
  3992                           ; BSR set to: 15
  3993                           ;CANlib.h: 918: tamp = filter & 0x000000FF;
  3994  00089A  0100               	movlb	0	; () banked
  3995  00089C  51BB               	movf	CANSetFilter@filter& (0+255),w,b
  3996  00089E  0100               	movlb	0	; () banked
  3997  0008A0  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  3998  0008A2  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3999  0008A4  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4000  0008A6  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4004  0008A8  C0C5  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;CANlib.h: 921: tamp = filter & 0x0000FF00;
  4008  0008AC  0E00               	movlw	0
  4009  0008AE  0100               	movlb	0	; () banked
  4010  0008B0  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  4011  0008B2  0100               	movlb	0	; () banked
  4012  0008B4  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4013  0008B6  0EFF               	movlw	255
  4014  0008B8  0100               	movlb	0	; () banked
  4015  0008BA  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4016  0008BC  0100               	movlb	0	; () banked
  4017  0008BE  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4018  0008C0  0E00               	movlw	0
  4019  0008C2  0100               	movlb	0	; () banked
  4020  0008C4  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4021  0008C6  0100               	movlb	0	; () banked
  4022  0008C8  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4023  0008CA  0E00               	movlw	0
  4024  0008CC  0100               	movlb	0	; () banked
  4025  0008CE  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4026  0008D0  0100               	movlb	0	; () banked
  4027  0008D2  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;CANlib.h: 922: tamp = tamp >> 8;
  4031  0008D4  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  4032  0008D8  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4033  0008DC  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4034  0008E0  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4035  0008E4  C0C1  F0C0         	movff	??_CANSetFilter+1,??_CANSetFilter
  4036  0008E8  C0C2  F0C1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4037  0008EC  C0C3  F0C2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4038  0008F0  0100               	movlb	0	; () banked
  4039  0008F2  6BC3               	clrf	(??_CANSetFilter+3)& (0+255),b
  4040  0008F4  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4041  0008F8  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4042  0008FC  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4043  000900  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4047  000904  C0C5  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;CANlib.h: 925: if (filter & 0x00010000)
  4051  000908  0100               	movlb	0	; () banked
  4052  00090A  A1BD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4053  00090C  D003               	goto	l483
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4057  00090E  010F               	movlb	15	; () banked
  4058  000910  8109               	bsf	9,0,b	;volatile
  4059  000912  D002               	goto	l484
  4060  000914                     l483:
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;CANlib.h: 927: else
  4064                           ;CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4065  000914  010F               	movlb	15	; () banked
  4066  000916  9109               	bcf	9,0,b	;volatile
  4067  000918                     l484:
  4068                           
  4069                           ; BSR set to: 15
  4070                           ;CANlib.h: 930: if (filter & 0x00020000)
  4071  000918  0100               	movlb	0	; () banked
  4072  00091A  A3BD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4073  00091C  D003               	goto	l485
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4077  00091E  010F               	movlb	15	; () banked
  4078  000920  8309               	bsf	9,1,b	;volatile
  4079  000922  D002               	goto	l486
  4080  000924                     l485:
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;CANlib.h: 932: else
  4084                           ;CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4085  000924  010F               	movlb	15	; () banked
  4086  000926  9309               	bcf	9,1,b	;volatile
  4087  000928                     l486:
  4088                           
  4089                           ; BSR set to: 15
  4090                           ;CANlib.h: 935: if (filter & 0x00040000)
  4091  000928  0100               	movlb	0	; () banked
  4092  00092A  A5BD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4093  00092C  D003               	goto	l487
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4097  00092E  010F               	movlb	15	; () banked
  4098  000930  8B09               	bsf	9,5,b	;volatile
  4099  000932  D002               	goto	l488
  4100  000934                     l487:
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;CANlib.h: 937: else
  4104                           ;CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4105  000934  010F               	movlb	15	; () banked
  4106  000936  9B09               	bcf	9,5,b	;volatile
  4107  000938                     l488:
  4108                           
  4109                           ; BSR set to: 15
  4110                           ;CANlib.h: 940: if (filter & 0x00080000)
  4111  000938  0100               	movlb	0	; () banked
  4112  00093A  A7BD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4113  00093C  D003               	goto	l489
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4117  00093E  010F               	movlb	15	; () banked
  4118  000940  8D09               	bsf	9,6,b	;volatile
  4119  000942  D002               	goto	l490
  4120  000944                     l489:
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;CANlib.h: 942: else
  4124                           ;CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4125  000944  010F               	movlb	15	; () banked
  4126  000946  9D09               	bcf	9,6,b	;volatile
  4127  000948                     l490:
  4128                           
  4129                           ; BSR set to: 15
  4130                           ;CANlib.h: 945: if (filter & 0x00100000)
  4131  000948  0100               	movlb	0	; () banked
  4132  00094A  A9BD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4133  00094C  D003               	goto	l491
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4137  00094E  010F               	movlb	15	; () banked
  4138  000950  8F09               	bsf	9,7,b	;volatile
  4139  000952  D002               	goto	l4310
  4140  000954                     l491:
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;CANlib.h: 947: else
  4144                           ;CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4145  000954  010F               	movlb	15	; () banked
  4146  000956  9F09               	bcf	9,7,b	;volatile
  4147  000958                     l4310:
  4148                           
  4149                           ; BSR set to: 15
  4150                           ;CANlib.h: 950: tamp = (filter >> 21);
  4151  000958  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  4152  00095C  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4153  000960  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4154  000964  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4155  000968  0E16               	movlw	22
  4156  00096A  D006               	goto	u5270
  4157  00096C                     u5275:
  4158  00096C  0100               	movlb	0	; () banked
  4159  00096E  90D8               	bcf	status,0,c
  4160  000970  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4161  000972  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4162  000974  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4163  000976  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  4164  000978                     u5270:
  4165  000978  2EE8               	decfsz	wreg,f,c
  4166  00097A  D7F8               	goto	u5275
  4167  00097C  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4168  000980  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4169  000984  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4170  000988  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;CANlib.h: 951: tamp = tamp & 0x000000FF;
  4174  00098C  0100               	movlb	0	; () banked
  4175  00098E  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  4176  000990  0100               	movlb	0	; () banked
  4177  000992  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4178  000994  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4179  000996  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4180  000998  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4184  00099A  C0C5  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4185  00099E                     l4316:
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;CANlib.h: 953: }
  4189                           ;CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4190  00099E  0E03               	movlw	3
  4191  0009A0  0100               	movlb	0	; () banked
  4192  0009A2  19C4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4193  0009A4  A4D8               	btfss	status,2,c
  4194  0009A6  D089               	goto	l4350
  4195                           
  4196                           ; BSR set to: 0
  4197  0009A8  0EF7               	movlw	247
  4198  0009AA  0100               	movlb	0	; () banked
  4199  0009AC  19BF               	xorwf	CANSetFilter@type& (0+255),w,b
  4200  0009AE  A4D8               	btfss	status,2,c
  4201  0009B0  D084               	goto	l4350
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;CANlib.h: 956: {
  4205                           ;CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  4206  0009B2  010F               	movlb	15	; () banked
  4207  0009B4  870D               	bsf	13,3,b	;volatile
  4208                           
  4209                           ; BSR set to: 15
  4210                           ;CANlib.h: 959: tamp = filter & 0x000000FF;
  4211  0009B6  0100               	movlb	0	; () banked
  4212  0009B8  51BB               	movf	CANSetFilter@filter& (0+255),w,b
  4213  0009BA  0100               	movlb	0	; () banked
  4214  0009BC  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4215  0009BE  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4216  0009C0  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4217  0009C2  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  4221  0009C4  C0C5  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4222                           
  4223                           ; BSR set to: 0
  4224                           ;CANlib.h: 962: tamp = filter & 0x0000FF00;
  4225  0009C8  0E00               	movlw	0
  4226  0009CA  0100               	movlb	0	; () banked
  4227  0009CC  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  4228  0009CE  0100               	movlb	0	; () banked
  4229  0009D0  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4230  0009D2  0EFF               	movlw	255
  4231  0009D4  0100               	movlb	0	; () banked
  4232  0009D6  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4233  0009D8  0100               	movlb	0	; () banked
  4234  0009DA  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4235  0009DC  0E00               	movlw	0
  4236  0009DE  0100               	movlb	0	; () banked
  4237  0009E0  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4238  0009E2  0100               	movlb	0	; () banked
  4239  0009E4  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4240  0009E6  0E00               	movlw	0
  4241  0009E8  0100               	movlb	0	; () banked
  4242  0009EA  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4243  0009EC  0100               	movlb	0	; () banked
  4244  0009EE  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;CANlib.h: 963: tamp = tamp >> 8;
  4248  0009F0  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  4249  0009F4  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4250  0009F8  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4251  0009FC  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4252  000A00  C0C1  F0C0         	movff	??_CANSetFilter+1,??_CANSetFilter
  4253  000A04  C0C2  F0C1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4254  000A08  C0C3  F0C2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4255  000A0C  0100               	movlb	0	; () banked
  4256  000A0E  6BC3               	clrf	(??_CANSetFilter+3)& (0+255),b
  4257  000A10  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4258  000A14  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4259  000A18  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4260  000A1C  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  4264  000A20  C0C5  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;CANlib.h: 966: if (filter & 0x00010000)
  4268  000A24  0100               	movlb	0	; () banked
  4269  000A26  A1BD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4270  000A28  D003               	goto	l494
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  4274  000A2A  010F               	movlb	15	; () banked
  4275  000A2C  810D               	bsf	13,0,b	;volatile
  4276  000A2E  D002               	goto	l495
  4277  000A30                     l494:
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;CANlib.h: 968: else
  4281                           ;CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  4282  000A30  010F               	movlb	15	; () banked
  4283  000A32  910D               	bcf	13,0,b	;volatile
  4284  000A34                     l495:
  4285                           
  4286                           ; BSR set to: 15
  4287                           ;CANlib.h: 971: if (filter & 0x00020000)
  4288  000A34  0100               	movlb	0	; () banked
  4289  000A36  A3BD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4290  000A38  D003               	goto	l496
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  4294  000A3A  010F               	movlb	15	; () banked
  4295  000A3C  830D               	bsf	13,1,b	;volatile
  4296  000A3E  D002               	goto	l497
  4297  000A40                     l496:
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;CANlib.h: 973: else
  4301                           ;CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  4302  000A40  010F               	movlb	15	; () banked
  4303  000A42  930D               	bcf	13,1,b	;volatile
  4304  000A44                     l497:
  4305                           
  4306                           ; BSR set to: 15
  4307                           ;CANlib.h: 976: if (filter & 0x00040000)
  4308  000A44  0100               	movlb	0	; () banked
  4309  000A46  A5BD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4310  000A48  D003               	goto	l498
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  4314  000A4A  010F               	movlb	15	; () banked
  4315  000A4C  8B0D               	bsf	13,5,b	;volatile
  4316  000A4E  D002               	goto	l499
  4317  000A50                     l498:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;CANlib.h: 978: else
  4321                           ;CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  4322  000A50  010F               	movlb	15	; () banked
  4323  000A52  9B0D               	bcf	13,5,b	;volatile
  4324  000A54                     l499:
  4325                           
  4326                           ; BSR set to: 15
  4327                           ;CANlib.h: 981: if (filter & 0x00080000)
  4328  000A54  0100               	movlb	0	; () banked
  4329  000A56  A7BD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4330  000A58  D003               	goto	l500
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  4334  000A5A  010F               	movlb	15	; () banked
  4335  000A5C  8D0D               	bsf	13,6,b	;volatile
  4336  000A5E  D002               	goto	l501
  4337  000A60                     l500:
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;CANlib.h: 983: else
  4341                           ;CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  4342  000A60  010F               	movlb	15	; () banked
  4343  000A62  9D0D               	bcf	13,6,b	;volatile
  4344  000A64                     l501:
  4345                           
  4346                           ; BSR set to: 15
  4347                           ;CANlib.h: 986: if (filter & 0x00100000)
  4348  000A64  0100               	movlb	0	; () banked
  4349  000A66  A9BD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4350  000A68  D003               	goto	l502
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  4354  000A6A  010F               	movlb	15	; () banked
  4355  000A6C  8F0D               	bsf	13,7,b	;volatile
  4356  000A6E  D002               	goto	l4344
  4357  000A70                     l502:
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;CANlib.h: 988: else
  4361                           ;CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  4362  000A70  010F               	movlb	15	; () banked
  4363  000A72  9F0D               	bcf	13,7,b	;volatile
  4364  000A74                     l4344:
  4365                           
  4366                           ; BSR set to: 15
  4367                           ;CANlib.h: 991: tamp = (filter >> 21);
  4368  000A74  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  4369  000A78  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4370  000A7C  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4371  000A80  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4372  000A84  0E16               	movlw	22
  4373  000A86  D006               	goto	u5350
  4374  000A88                     u5355:
  4375  000A88  0100               	movlb	0	; () banked
  4376  000A8A  90D8               	bcf	status,0,c
  4377  000A8C  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4378  000A8E  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4379  000A90  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4380  000A92  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  4381  000A94                     u5350:
  4382  000A94  2EE8               	decfsz	wreg,f,c
  4383  000A96  D7F8               	goto	u5355
  4384  000A98  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4385  000A9C  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4386  000AA0  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4387  000AA4  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;CANlib.h: 992: tamp = tamp & 0x000000FF;
  4391  000AA8  0100               	movlb	0	; () banked
  4392  000AAA  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  4393  000AAC  0100               	movlb	0	; () banked
  4394  000AAE  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4395  000AB0  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4396  000AB2  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4397  000AB4  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  4401  000AB6  C0C5  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4402  000ABA                     l4350:
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;CANlib.h: 994: }
  4406                           ;CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4407  000ABA  0E04               	movlw	4
  4408  000ABC  0100               	movlb	0	; () banked
  4409  000ABE  19C4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4410  000AC0  A4D8               	btfss	status,2,c
  4411  000AC2  D089               	goto	l4384
  4412                           
  4413                           ; BSR set to: 0
  4414  000AC4  0EF7               	movlw	247
  4415  000AC6  0100               	movlb	0	; () banked
  4416  000AC8  19BF               	xorwf	CANSetFilter@type& (0+255),w,b
  4417  000ACA  A4D8               	btfss	status,2,c
  4418  000ACC  D084               	goto	l4384
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;CANlib.h: 997: {
  4422                           ;CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  4423  000ACE  010F               	movlb	15	; () banked
  4424  000AD0  8711               	bsf	17,3,b	;volatile
  4425                           
  4426                           ; BSR set to: 15
  4427                           ;CANlib.h: 1000: tamp = filter & 0x000000FF;
  4428  000AD2  0100               	movlb	0	; () banked
  4429  000AD4  51BB               	movf	CANSetFilter@filter& (0+255),w,b
  4430  000AD6  0100               	movlb	0	; () banked
  4431  000AD8  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4432  000ADA  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4433  000ADC  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4434  000ADE  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  4438  000AE0  C0C5  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;CANlib.h: 1003: tamp = filter & 0x0000FF00;
  4442  000AE4  0E00               	movlw	0
  4443  000AE6  0100               	movlb	0	; () banked
  4444  000AE8  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  4445  000AEA  0100               	movlb	0	; () banked
  4446  000AEC  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4447  000AEE  0EFF               	movlw	255
  4448  000AF0  0100               	movlb	0	; () banked
  4449  000AF2  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4450  000AF4  0100               	movlb	0	; () banked
  4451  000AF6  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4452  000AF8  0E00               	movlw	0
  4453  000AFA  0100               	movlb	0	; () banked
  4454  000AFC  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4455  000AFE  0100               	movlb	0	; () banked
  4456  000B00  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4457  000B02  0E00               	movlw	0
  4458  000B04  0100               	movlb	0	; () banked
  4459  000B06  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4460  000B08  0100               	movlb	0	; () banked
  4461  000B0A  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;CANlib.h: 1004: tamp = tamp >> 8;
  4465  000B0C  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  4466  000B10  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4467  000B14  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4468  000B18  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4469  000B1C  C0C1  F0C0         	movff	??_CANSetFilter+1,??_CANSetFilter
  4470  000B20  C0C2  F0C1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4471  000B24  C0C3  F0C2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4472  000B28  0100               	movlb	0	; () banked
  4473  000B2A  6BC3               	clrf	(??_CANSetFilter+3)& (0+255),b
  4474  000B2C  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4475  000B30  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4476  000B34  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4477  000B38  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  4481  000B3C  C0C5  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;CANlib.h: 1007: if (filter & 0x00010000)
  4485  000B40  0100               	movlb	0	; () banked
  4486  000B42  A1BD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4487  000B44  D003               	goto	l505
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  4491  000B46  010F               	movlb	15	; () banked
  4492  000B48  8111               	bsf	17,0,b	;volatile
  4493  000B4A  D002               	goto	l506
  4494  000B4C                     l505:
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;CANlib.h: 1009: else
  4498                           ;CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  4499  000B4C  010F               	movlb	15	; () banked
  4500  000B4E  9111               	bcf	17,0,b	;volatile
  4501  000B50                     l506:
  4502                           
  4503                           ; BSR set to: 15
  4504                           ;CANlib.h: 1012: if (filter & 0x00020000)
  4505  000B50  0100               	movlb	0	; () banked
  4506  000B52  A3BD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4507  000B54  D003               	goto	l507
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  4511  000B56  010F               	movlb	15	; () banked
  4512  000B58  8311               	bsf	17,1,b	;volatile
  4513  000B5A  D002               	goto	l508
  4514  000B5C                     l507:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;CANlib.h: 1014: else
  4518                           ;CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  4519  000B5C  010F               	movlb	15	; () banked
  4520  000B5E  9311               	bcf	17,1,b	;volatile
  4521  000B60                     l508:
  4522                           
  4523                           ; BSR set to: 15
  4524                           ;CANlib.h: 1017: if (filter & 0x00040000)
  4525  000B60  0100               	movlb	0	; () banked
  4526  000B62  A5BD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4527  000B64  D003               	goto	l509
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  4531  000B66  010F               	movlb	15	; () banked
  4532  000B68  8B11               	bsf	17,5,b	;volatile
  4533  000B6A  D002               	goto	l510
  4534  000B6C                     l509:
  4535                           
  4536                           ; BSR set to: 0
  4537                           ;CANlib.h: 1019: else
  4538                           ;CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  4539  000B6C  010F               	movlb	15	; () banked
  4540  000B6E  9B11               	bcf	17,5,b	;volatile
  4541  000B70                     l510:
  4542                           
  4543                           ; BSR set to: 15
  4544                           ;CANlib.h: 1022: if (filter & 0x00080000)
  4545  000B70  0100               	movlb	0	; () banked
  4546  000B72  A7BD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4547  000B74  D003               	goto	l511
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  4551  000B76  010F               	movlb	15	; () banked
  4552  000B78  8D11               	bsf	17,6,b	;volatile
  4553  000B7A  D002               	goto	l512
  4554  000B7C                     l511:
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;CANlib.h: 1024: else
  4558                           ;CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  4559  000B7C  010F               	movlb	15	; () banked
  4560  000B7E  9D11               	bcf	17,6,b	;volatile
  4561  000B80                     l512:
  4562                           
  4563                           ; BSR set to: 15
  4564                           ;CANlib.h: 1027: if (filter & 0x00100000)
  4565  000B80  0100               	movlb	0	; () banked
  4566  000B82  A9BD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4567  000B84  D003               	goto	l513
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  4571  000B86  010F               	movlb	15	; () banked
  4572  000B88  8F11               	bsf	17,7,b	;volatile
  4573  000B8A  D002               	goto	l4378
  4574  000B8C                     l513:
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;CANlib.h: 1029: else
  4578                           ;CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  4579  000B8C  010F               	movlb	15	; () banked
  4580  000B8E  9F11               	bcf	17,7,b	;volatile
  4581  000B90                     l4378:
  4582                           
  4583                           ; BSR set to: 15
  4584                           ;CANlib.h: 1032: tamp = (filter >> 21);
  4585  000B90  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  4586  000B94  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4587  000B98  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4588  000B9C  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4589  000BA0  0E16               	movlw	22
  4590  000BA2  D006               	goto	u5430
  4591  000BA4                     u5435:
  4592  000BA4  0100               	movlb	0	; () banked
  4593  000BA6  90D8               	bcf	status,0,c
  4594  000BA8  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4595  000BAA  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4596  000BAC  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4597  000BAE  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  4598  000BB0                     u5430:
  4599  000BB0  2EE8               	decfsz	wreg,f,c
  4600  000BB2  D7F8               	goto	u5435
  4601  000BB4  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4602  000BB8  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4603  000BBC  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4604  000BC0  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;CANlib.h: 1033: tamp = tamp & 0x000000FF;
  4608  000BC4  0100               	movlb	0	; () banked
  4609  000BC6  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  4610  000BC8  0100               	movlb	0	; () banked
  4611  000BCA  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4612  000BCC  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4613  000BCE  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4614  000BD0  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  4618  000BD2  C0C5  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4619  000BD6                     l4384:
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;CANlib.h: 1035: }
  4623                           ;CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4624  000BD6  0E05               	movlw	5
  4625  000BD8  0100               	movlb	0	; () banked
  4626  000BDA  19C4               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4627  000BDC  A4D8               	btfss	status,2,c
  4628  000BDE  0012               	return	
  4629                           
  4630                           ; BSR set to: 0
  4631  000BE0  0EF7               	movlw	247
  4632  000BE2  0100               	movlb	0	; () banked
  4633  000BE4  19BF               	xorwf	CANSetFilter@type& (0+255),w,b
  4634  000BE6  A4D8               	btfss	status,2,c
  4635  000BE8  0012               	return	
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;CANlib.h: 1038: {
  4639                           ;CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  4640  000BEA  010F               	movlb	15	; () banked
  4641  000BEC  8715               	bsf	21,3,b	;volatile
  4642                           
  4643                           ; BSR set to: 15
  4644                           ;CANlib.h: 1041: tamp = filter & 0x000000FF;
  4645  000BEE  0100               	movlb	0	; () banked
  4646  000BF0  51BB               	movf	CANSetFilter@filter& (0+255),w,b
  4647  000BF2  0100               	movlb	0	; () banked
  4648  000BF4  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4649  000BF6  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4650  000BF8  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4651  000BFA  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  4655  000BFC  C0C5  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;CANlib.h: 1044: tamp = filter & 0x0000FF00;
  4659  000C00  0E00               	movlw	0
  4660  000C02  0100               	movlb	0	; () banked
  4661  000C04  15BB               	andwf	CANSetFilter@filter& (0+255),w,b
  4662  000C06  0100               	movlb	0	; () banked
  4663  000C08  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4664  000C0A  0EFF               	movlw	255
  4665  000C0C  0100               	movlb	0	; () banked
  4666  000C0E  15BC               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4667  000C10  0100               	movlb	0	; () banked
  4668  000C12  6FC6               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4669  000C14  0E00               	movlw	0
  4670  000C16  0100               	movlb	0	; () banked
  4671  000C18  15BD               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4672  000C1A  0100               	movlb	0	; () banked
  4673  000C1C  6FC7               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4674  000C1E  0E00               	movlw	0
  4675  000C20  0100               	movlb	0	; () banked
  4676  000C22  15BE               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4677  000C24  0100               	movlb	0	; () banked
  4678  000C26  6FC8               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;CANlib.h: 1045: tamp = tamp >> 8;
  4682  000C28  C0C5  F0C0         	movff	CANSetFilter@tamp,??_CANSetFilter
  4683  000C2C  C0C6  F0C1         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4684  000C30  C0C7  F0C2         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4685  000C34  C0C8  F0C3         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4686  000C38  C0C1  F0C0         	movff	??_CANSetFilter+1,??_CANSetFilter
  4687  000C3C  C0C2  F0C1         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4688  000C40  C0C3  F0C2         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4689  000C44  0100               	movlb	0	; () banked
  4690  000C46  6BC3               	clrf	(??_CANSetFilter+3)& (0+255),b
  4691  000C48  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4692  000C4C  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4693  000C50  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4694  000C54  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  4698  000C58  C0C5  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;CANlib.h: 1048: if (filter & 0x00010000)
  4702  000C5C  0100               	movlb	0	; () banked
  4703  000C5E  A1BD               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4704  000C60  D003               	goto	l516
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  4708  000C62  010F               	movlb	15	; () banked
  4709  000C64  8115               	bsf	21,0,b	;volatile
  4710  000C66  D002               	goto	l517
  4711  000C68                     l516:
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;CANlib.h: 1050: else
  4715                           ;CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  4716  000C68  010F               	movlb	15	; () banked
  4717  000C6A  9115               	bcf	21,0,b	;volatile
  4718  000C6C                     l517:
  4719                           
  4720                           ; BSR set to: 15
  4721                           ;CANlib.h: 1053: if (filter & 0x00020000)
  4722  000C6C  0100               	movlb	0	; () banked
  4723  000C6E  A3BD               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4724  000C70  D003               	goto	l518
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  4728  000C72  010F               	movlb	15	; () banked
  4729  000C74  8315               	bsf	21,1,b	;volatile
  4730  000C76  D002               	goto	l519
  4731  000C78                     l518:
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;CANlib.h: 1055: else
  4735                           ;CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  4736  000C78  010F               	movlb	15	; () banked
  4737  000C7A  9315               	bcf	21,1,b	;volatile
  4738  000C7C                     l519:
  4739                           
  4740                           ; BSR set to: 15
  4741                           ;CANlib.h: 1058: if (filter & 0x00040000)
  4742  000C7C  0100               	movlb	0	; () banked
  4743  000C7E  A5BD               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4744  000C80  D003               	goto	l520
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  4748  000C82  010F               	movlb	15	; () banked
  4749  000C84  8B15               	bsf	21,5,b	;volatile
  4750  000C86  D002               	goto	l521
  4751  000C88                     l520:
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;CANlib.h: 1060: else
  4755                           ;CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  4756  000C88  010F               	movlb	15	; () banked
  4757  000C8A  9B15               	bcf	21,5,b	;volatile
  4758  000C8C                     l521:
  4759                           
  4760                           ; BSR set to: 15
  4761                           ;CANlib.h: 1063: if (filter & 0x00080000)
  4762  000C8C  0100               	movlb	0	; () banked
  4763  000C8E  A7BD               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4764  000C90  D003               	goto	l522
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  4768  000C92  010F               	movlb	15	; () banked
  4769  000C94  8D15               	bsf	21,6,b	;volatile
  4770  000C96  D002               	goto	l523
  4771  000C98                     l522:
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;CANlib.h: 1065: else
  4775                           ;CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  4776  000C98  010F               	movlb	15	; () banked
  4777  000C9A  9D15               	bcf	21,6,b	;volatile
  4778  000C9C                     l523:
  4779                           
  4780                           ; BSR set to: 15
  4781                           ;CANlib.h: 1068: if (filter & 0x00100000)
  4782  000C9C  0100               	movlb	0	; () banked
  4783  000C9E  A9BD               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4784  000CA0  D003               	goto	l524
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  4788  000CA2  010F               	movlb	15	; () banked
  4789  000CA4  8F15               	bsf	21,7,b	;volatile
  4790  000CA6  D002               	goto	l4412
  4791  000CA8                     l524:
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;CANlib.h: 1070: else
  4795                           ;CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  4796  000CA8  010F               	movlb	15	; () banked
  4797  000CAA  9F15               	bcf	21,7,b	;volatile
  4798  000CAC                     l4412:
  4799                           
  4800                           ; BSR set to: 15
  4801                           ;CANlib.h: 1073: tamp = (filter >> 21);
  4802  000CAC  C0BB  F0C0         	movff	CANSetFilter@filter,??_CANSetFilter
  4803  000CB0  C0BC  F0C1         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4804  000CB4  C0BD  F0C2         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4805  000CB8  C0BE  F0C3         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4806  000CBC  0E16               	movlw	22
  4807  000CBE  D006               	goto	u5510
  4808  000CC0                     u5515:
  4809  000CC0  0100               	movlb	0	; () banked
  4810  000CC2  90D8               	bcf	status,0,c
  4811  000CC4  33C3               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4812  000CC6  33C2               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4813  000CC8  33C1               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4814  000CCA  33C0               	rrcf	??_CANSetFilter& (0+255),f,b
  4815  000CCC                     u5510:
  4816  000CCC  2EE8               	decfsz	wreg,f,c
  4817  000CCE  D7F8               	goto	u5515
  4818  000CD0  C0C0  F0C5         	movff	??_CANSetFilter,CANSetFilter@tamp
  4819  000CD4  C0C1  F0C6         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4820  000CD8  C0C2  F0C7         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4821  000CDC  C0C3  F0C8         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;CANlib.h: 1074: tamp = tamp & 0x000000FF;
  4825  000CE0  0100               	movlb	0	; () banked
  4826  000CE2  51C5               	movf	CANSetFilter@tamp& (0+255),w,b
  4827  000CE4  0100               	movlb	0	; () banked
  4828  000CE6  6FC5               	movwf	CANSetFilter@tamp& (0+255),b
  4829  000CE8  6BC6               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4830  000CEA  6BC7               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4831  000CEC  6BC8               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  4835  000CEE  C0C5  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4836  000CF2  0012               	return	
  4837  000CF4                     __end_of_CANSetFilter:
  4838                           	opt stack 0
  4839                           tblptru	equ	0xFF8
  4840                           tblptrh	equ	0xFF7
  4841                           tblptrl	equ	0xFF6
  4842                           tablat	equ	0xFF5
  4843                           intcon	equ	0xFF2
  4844                           postinc0	equ	0xFEE
  4845                           wreg	equ	0xFE8
  4846                           postdec1	equ	0xFE5
  4847                           fsr1l	equ	0xFE1
  4848                           status	equ	0xFD8
  4849                           
  4850 ;; *************** function _CANOperationMode *****************
  4851 ;; Defined at:
  4852 ;;		line 206 in file "CANlib.h"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  mode            1    wreg     enum E16838
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  mode            1    0[BANK0 ] enum E16838
  4857 ;; Return value:  Size  Location     Type
  4858 ;;		None               void
  4859 ;; Registers used:
  4860 ;;		wreg, status,2, status,0
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4866 ;;      Params:         0       0       0       0
  4867 ;;      Locals:         0       1       0       0
  4868 ;;      Temps:          0       0       0       0
  4869 ;;      Totals:         0       1       0       0
  4870 ;;Total ram usage:        1 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; Hardware stack levels required when called:    2
  4873 ;; This function calls:
  4874 ;;		Nothing
  4875 ;; This function is called by:
  4876 ;;		_CANInitialize
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           	psect	text6
  4881  00280C                     __ptext6:
  4882                           	opt stack 0
  4883  00280C                     _CANOperationMode:
  4884                           	opt stack 26
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;incstack = 0
  4888                           ;CANOperationMode@mode stored from wreg
  4889  00280C  0100               	movlb	0	; () banked
  4890  00280E  6FBB               	movwf	CANOperationMode@mode& (0+255),b
  4891                           
  4892                           ;CANlib.h: 208: CANCON = mode;
  4893  002810  C0BB  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  4894  002814                     l4008:
  4895  002814  506E               	movf	3950,w,c	;volatile
  4896  002816  0BE0               	andlw	224
  4897  002818  0100               	movlb	0	; () banked
  4898  00281A  19BB               	xorwf	CANOperationMode@mode& (0+255),w,b
  4899  00281C  B4D8               	btfsc	status,2,c
  4900  00281E  0012               	return	
  4901  002820  D7F9               	goto	l4008
  4902  002822                     __end_of_CANOperationMode:
  4903                           	opt stack 0
  4904                           tblptru	equ	0xFF8
  4905                           tblptrh	equ	0xFF7
  4906                           tblptrl	equ	0xFF6
  4907                           tablat	equ	0xFF5
  4908                           intcon	equ	0xFF2
  4909                           postinc0	equ	0xFEE
  4910                           wreg	equ	0xFE8
  4911                           postdec1	equ	0xFE5
  4912                           fsr1l	equ	0xFE1
  4913                           status	equ	0xFD8
  4914                           
  4915 ;; *************** function _battery_measure *****************
  4916 ;; Defined at:
  4917 ;;		line 314 in file "motore.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;		None
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;		None               void
  4924 ;; Registers used:
  4925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4931 ;;      Params:         0       0       0       0
  4932 ;;      Locals:         0       0       0       0
  4933 ;;      Temps:          0       0       0       0
  4934 ;;      Totals:         0       0       0       0
  4935 ;;Total ram usage:        0 bytes
  4936 ;; Hardware stack levels used:    1
  4937 ;; Hardware stack levels required when called:    4
  4938 ;; This function calls:
  4939 ;;		_CANisTxReady
  4940 ;;		_CANsendMessage
  4941 ;;		___awdiv
  4942 ;;		___wmul
  4943 ;;		_delay_ms
  4944 ;; This function is called by:
  4945 ;;		_main
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           	psect	text7
  4950  0024F4                     __ptext7:
  4951                           	opt stack 0
  4952  0024F4                     _battery_measure:
  4953                           	opt stack 26
  4954                           
  4955                           ;motore.c: 316: ADCON0bits.GO = 1;
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;incstack = 0
  4959  0024F4  82C2               	bsf	4034,1,c	;volatile
  4960  0024F6                     l708:
  4961  0024F6  B2C2               	btfsc	4034,1,c	;volatile
  4962  0024F8  D7FE               	goto	l708
  4963                           
  4964                           ;motore.c: 318: vBatt = ADRESH;
  4965  0024FA  CFC4 F08A          	movff	4036,_vBatt	;volatile
  4966  0024FE  0100               	movlb	0	; () banked
  4967  002500  6B8B               	clrf	(_vBatt+1)& (0+255),b
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;motore.c: 319: vBatt = (vBatt * 14) / 255;
  4971  002502  C08A  F0C2         	movff	_vBatt,___wmul@multiplier
  4972  002506  C08B  F0C3         	movff	_vBatt+1,___wmul@multiplier+1
  4973  00250A  0E00               	movlw	0
  4974  00250C  0100               	movlb	0	; () banked
  4975  00250E  6FC5               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4976  002510  0E0E               	movlw	14
  4977  002512  6FC4               	movwf	___wmul@multiplicand& (0+255),b
  4978  002514  EC98  F013         	call	___wmul	;wreg free
  4979  002518  C0C2  F0C8         	movff	?___wmul,___awdiv@dividend
  4980  00251C  C0C3  F0C9         	movff	?___wmul+1,___awdiv@dividend+1
  4981  002520  0E00               	movlw	0
  4982  002522  0100               	movlb	0	; () banked
  4983  002524  6FCB               	movwf	(___awdiv@divisor+1)& (0+255),b
  4984  002526  69CA               	setf	___awdiv@divisor& (0+255),b
  4985  002528  ECC3  F011         	call	___awdiv	;wreg free
  4986  00252C  C0C8  F08A         	movff	?___awdiv,_vBatt
  4987  002530  C0C9  F08B         	movff	?___awdiv+1,_vBatt+1
  4988                           
  4989                           ;motore.c: 320: if (vBatt < 8) {
  4990  002534  0100               	movlb	0	; () banked
  4991  002536  BF8B               	btfsc	(_vBatt+1)& (0+255),7,b
  4992  002538  D008               	goto	l4908
  4993  00253A  0100               	movlb	0	; () banked
  4994  00253C  518B               	movf	(_vBatt+1)& (0+255),w,b
  4995  00253E  E129               	bnz	l716
  4996  002540  0E08               	movlw	8
  4997  002542  0100               	movlb	0	; () banked
  4998  002544  5D8A               	subwf	_vBatt& (0+255),w,b
  4999  002546  B0D8               	btfsc	status,0,c
  5000  002548  0012               	return	
  5001  00254A                     l4908:
  5002  00254A  ECE3  F013         	call	_CANisTxReady	;wreg free
  5003  00254E  06E8               	decf	wreg,f,c
  5004  002550  A4D8               	btfss	status,2,c
  5005  002552  D7FB               	goto	l4908
  5006                           
  5007                           ;motore.c: 322: }
  5008                           ;motore.c: 323: CANsendMessage(0b00000000000000000000000001001, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5009  002554  0E09               	movlw	9
  5010  002556  0100               	movlb	0	; () banked
  5011  002558  6FBB               	movwf	CANsendMessage@identifier& (0+255),b
  5012  00255A  0E00               	movlw	0
  5013  00255C  6FBC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5014  00255E  0E00               	movlw	0
  5015  002560  6FBD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5016  002562  0E00               	movlw	0
  5017  002564  6FBE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5018  002566  0E9B               	movlw	low _data_array
  5019  002568  0100               	movlb	0	; () banked
  5020  00256A  6FBF               	movwf	CANsendMessage@data& (0+255),b
  5021  00256C  0E00               	movlw	high _data_array
  5022  00256E  0100               	movlb	0	; () banked
  5023  002570  6FC0               	movwf	(CANsendMessage@data+1)& (0+255),b
  5024  002572  0E08               	movlw	8
  5025  002574  0100               	movlb	0	; () banked
  5026  002576  6FC1               	movwf	CANsendMessage@dataLength& (0+255),b
  5027  002578  0EFC               	movlw	252
  5028  00257A  0100               	movlb	0	; () banked
  5029  00257C  6FC2               	movwf	CANsendMessage@flags& (0+255),b
  5030  00257E  EC7A  F006         	call	_CANsendMessage	;wreg free
  5031                           
  5032                           ;motore.c: 325: delay_ms(1000);
  5033  002582  0E03               	movlw	3
  5034  002584  0100               	movlb	0	; () banked
  5035  002586  6FC9               	movwf	(delay_ms@value_ms+1)& (0+255),b
  5036  002588  0EE8               	movlw	232
  5037  00258A  6FC8               	movwf	delay_ms@value_ms& (0+255),b
  5038  00258C  ECB3  F013         	call	_delay_ms	;wreg free
  5039                           
  5040                           ;motore.c: 326: } else {
  5041  002590  0012               	return	
  5042  002592                     l716:
  5043  002592  0012               	return		;funcret
  5044  002594                     __end_of_battery_measure:
  5045                           	opt stack 0
  5046                           tblptru	equ	0xFF8
  5047                           tblptrh	equ	0xFF7
  5048                           tblptrl	equ	0xFF6
  5049                           tablat	equ	0xFF5
  5050                           intcon	equ	0xFF2
  5051                           postinc0	equ	0xFEE
  5052                           wreg	equ	0xFE8
  5053                           postdec1	equ	0xFE5
  5054                           fsr1l	equ	0xFE1
  5055                           status	equ	0xFD8
  5056                           
  5057 ;; *************** function _delay_ms *****************
  5058 ;; Defined at:
  5059 ;;		line 61 in file "delay.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  value_ms        2   13[BANK0 ] unsigned int 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;		None               void
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5073 ;;      Params:         0       2       0       0
  5074 ;;      Locals:         0       0       0       0
  5075 ;;      Temps:          0       0       0       0
  5076 ;;      Totals:         0       2       0       0
  5077 ;;Total ram usage:        2 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    3
  5080 ;; This function calls:
  5081 ;;		___wmul
  5082 ;; This function is called by:
  5083 ;;		_main
  5084 ;;		_battery_measure
  5085 ;;		_configurazione_iniziale
  5086 ;;		_delay_s
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text8
  5091  002766                     __ptext8:
  5092                           	opt stack 0
  5093  002766                     _delay_ms:
  5094                           	opt stack 27
  5095                           
  5096                           ;delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  5097                           
  5098                           ;incstack = 0
  5099  002766  C042  F0C2         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  5100  00276A  0100               	movlb	0	; () banked
  5101  00276C  6BC3               	clrf	(___wmul@multiplier+1)& (0+255),b
  5102  00276E  C0C8  F0C4         	movff	delay_ms@value_ms,___wmul@multiplicand
  5103  002772  C0C9  F0C5         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  5104  002776  EC98  F013         	call	___wmul	;wreg free
  5105  00277A  C0C2  F02C         	movff	?___wmul,_clock_counter_reference	;volatile
  5106  00277E  C0C3  F02D         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  5107                           
  5108                           ;delay.c: 75: while (clock_counter_reference) {
  5109  002782  D006               	goto	l567
  5110  002784                     l4720:
  5111                           
  5112                           ;delay.c: 85: _delay(240);
  5113  002784  0E50               	movlw	80
  5114  002786                     u6387:
  5115  002786  2EE8               	decfsz	wreg,f,c
  5116  002788  D7FE               	goto	u6387
  5117                           
  5118                           ;delay.c: 88: clock_counter_reference--;
  5119  00278A  062C               	decf	_clock_counter_reference,f,c	;volatile
  5120  00278C  A0D8               	btfss	status,0,c
  5121  00278E  062D               	decf	_clock_counter_reference+1,f,c	;volatile
  5122  002790                     l567:
  5123  002790  502C               	movf	_clock_counter_reference,w,c	;volatile
  5124  002792  102D               	iorwf	_clock_counter_reference+1,w,c	;volatile
  5125  002794  B4D8               	btfsc	status,2,c
  5126  002796  0012               	return	
  5127  002798  D7F5               	goto	l4720
  5128  00279A                     __end_of_delay_ms:
  5129                           	opt stack 0
  5130                           tblptru	equ	0xFF8
  5131                           tblptrh	equ	0xFF7
  5132                           tblptrl	equ	0xFF6
  5133                           tablat	equ	0xFF5
  5134                           intcon	equ	0xFF2
  5135                           postinc0	equ	0xFEE
  5136                           wreg	equ	0xFE8
  5137                           postdec1	equ	0xFE5
  5138                           fsr1l	equ	0xFE1
  5139                           status	equ	0xFD8
  5140                           
  5141 ;; *************** function ___wmul *****************
  5142 ;; Defined at:
  5143 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  multiplier      2    7[BANK0 ] unsigned int 
  5146 ;;  multiplicand    2    9[BANK0 ] unsigned int 
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;  product         2   11[BANK0 ] unsigned int 
  5149 ;; Return value:  Size  Location     Type
  5150 ;;                  2    7[BANK0 ] unsigned int 
  5151 ;; Registers used:
  5152 ;;		wreg, status,2, status,0, prodl, prodh
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5158 ;;      Params:         0       4       0       0
  5159 ;;      Locals:         0       2       0       0
  5160 ;;      Temps:          0       0       0       0
  5161 ;;      Totals:         0       6       0       0
  5162 ;;Total ram usage:        6 bytes
  5163 ;; Hardware stack levels used:    1
  5164 ;; Hardware stack levels required when called:    2
  5165 ;; This function calls:
  5166 ;;		Nothing
  5167 ;; This function is called by:
  5168 ;;		_delay_ms
  5169 ;;		_main
  5170 ;;		_battery_measure
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text9
  5175  002730                     __ptext9:
  5176                           	opt stack 0
  5177  002730                     ___wmul:
  5178                           	opt stack 27
  5179                           
  5180                           ;incstack = 0
  5181  002730  0100               	movlb	0	; () banked
  5182  002732  51C2               	movf	___wmul@multiplier& (0+255),w,b
  5183  002734  0100               	movlb	0	; () banked
  5184  002736  03C4               	mulwf	___wmul@multiplicand& (0+255),b
  5185  002738  CFF3 F0C6          	movff	prodl,___wmul@product
  5186  00273C  CFF4 F0C7          	movff	prodh,___wmul@product+1
  5187  002740  0100               	movlb	0	; () banked
  5188  002742  51C2               	movf	___wmul@multiplier& (0+255),w,b
  5189  002744  0100               	movlb	0	; () banked
  5190  002746  03C5               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5191  002748  50F3               	movf	prodl,w,c
  5192  00274A  0100               	movlb	0	; () banked
  5193  00274C  27C7               	addwf	(___wmul@product+1)& (0+255),f,b
  5194  00274E  0100               	movlb	0	; () banked
  5195  002750  51C3               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5196  002752  0100               	movlb	0	; () banked
  5197  002754  03C4               	mulwf	___wmul@multiplicand& (0+255),b
  5198  002756  50F3               	movf	prodl,w,c
  5199  002758  0100               	movlb	0	; () banked
  5200  00275A  27C7               	addwf	(___wmul@product+1)& (0+255),f,b
  5201                           
  5202                           ; BSR set to: 0
  5203  00275C  C0C6  F0C2         	movff	___wmul@product,?___wmul
  5204  002760  C0C7  F0C3         	movff	___wmul@product+1,?___wmul+1
  5205  002764  0012               	return	
  5206  002766                     __end_of___wmul:
  5207                           	opt stack 0
  5208                           tblptru	equ	0xFF8
  5209                           tblptrh	equ	0xFF7
  5210                           tblptrl	equ	0xFF6
  5211                           tablat	equ	0xFF5
  5212                           prodh	equ	0xFF4
  5213                           prodl	equ	0xFF3
  5214                           intcon	equ	0xFF2
  5215                           postinc0	equ	0xFEE
  5216                           wreg	equ	0xFE8
  5217                           postdec1	equ	0xFE5
  5218                           fsr1l	equ	0xFE1
  5219                           status	equ	0xFD8
  5220                           
  5221 ;; *************** function ___awdiv *****************
  5222 ;; Defined at:
  5223 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;  dividend        2   13[BANK0 ] int 
  5226 ;;  divisor         2   15[BANK0 ] int 
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;  quotient        2   19[BANK0 ] int 
  5229 ;;  sign            1   18[BANK0 ] unsigned char 
  5230 ;;  counter         1   17[BANK0 ] unsigned char 
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  2   13[BANK0 ] int 
  5233 ;; Registers used:
  5234 ;;		wreg, status,2, status,0
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5240 ;;      Params:         0       4       0       0
  5241 ;;      Locals:         0       4       0       0
  5242 ;;      Temps:          0       0       0       0
  5243 ;;      Totals:         0       8       0       0
  5244 ;;Total ram usage:        8 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; Hardware stack levels required when called:    2
  5247 ;; This function calls:
  5248 ;;		Nothing
  5249 ;; This function is called by:
  5250 ;;		_battery_measure
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text10
  5255  002386                     __ptext10:
  5256                           	opt stack 0
  5257  002386                     ___awdiv:
  5258                           	opt stack 27
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;incstack = 0
  5262  002386  0E00               	movlw	0
  5263  002388  0100               	movlb	0	; () banked
  5264  00238A  6FCD               	movwf	___awdiv@sign& (0+255),b
  5265                           
  5266                           ; BSR set to: 0
  5267  00238C  0100               	movlb	0	; () banked
  5268  00238E  AFCB               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5269  002390  D008               	goto	l4744
  5270                           
  5271                           ; BSR set to: 0
  5272  002392  0100               	movlb	0	; () banked
  5273  002394  6DCA               	negf	___awdiv@divisor& (0+255),b
  5274  002396  1FCB               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5275  002398  B0D8               	btfsc	status,0,c
  5276  00239A  2BCB               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5277                           
  5278                           ; BSR set to: 0
  5279  00239C  0E01               	movlw	1
  5280  00239E  0100               	movlb	0	; () banked
  5281  0023A0  6FCD               	movwf	___awdiv@sign& (0+255),b
  5282  0023A2                     l4744:
  5283                           
  5284                           ; BSR set to: 0
  5285  0023A2  0100               	movlb	0	; () banked
  5286  0023A4  AFC9               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5287  0023A6  D008               	goto	l4750
  5288                           
  5289                           ; BSR set to: 0
  5290  0023A8  0100               	movlb	0	; () banked
  5291  0023AA  6DC8               	negf	___awdiv@dividend& (0+255),b
  5292  0023AC  1FC9               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5293  0023AE  B0D8               	btfsc	status,0,c
  5294  0023B0  2BC9               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5295                           
  5296                           ; BSR set to: 0
  5297  0023B2  0E01               	movlw	1
  5298  0023B4  0100               	movlb	0	; () banked
  5299  0023B6  1BCD               	xorwf	___awdiv@sign& (0+255),f,b
  5300  0023B8                     l4750:
  5301                           
  5302                           ; BSR set to: 0
  5303  0023B8  0E00               	movlw	0
  5304  0023BA  0100               	movlb	0	; () banked
  5305  0023BC  6FCF               	movwf	(___awdiv@quotient+1)& (0+255),b
  5306  0023BE  0E00               	movlw	0
  5307  0023C0  6FCE               	movwf	___awdiv@quotient& (0+255),b
  5308                           
  5309                           ; BSR set to: 0
  5310  0023C2  0100               	movlb	0	; () banked
  5311  0023C4  51CA               	movf	___awdiv@divisor& (0+255),w,b
  5312  0023C6  0100               	movlb	0	; () banked
  5313  0023C8  11CB               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5314  0023CA  B4D8               	btfsc	status,2,c
  5315  0023CC  D02C               	goto	l4772
  5316                           
  5317                           ; BSR set to: 0
  5318  0023CE  0E01               	movlw	1
  5319  0023D0  0100               	movlb	0	; () banked
  5320  0023D2  6FCC               	movwf	___awdiv@counter& (0+255),b
  5321  0023D4  D006               	goto	l4758
  5322  0023D6                     l4756:
  5323                           
  5324                           ; BSR set to: 0
  5325  0023D6  0100               	movlb	0	; () banked
  5326  0023D8  90D8               	bcf	status,0,c
  5327  0023DA  37CA               	rlcf	___awdiv@divisor& (0+255),f,b
  5328  0023DC  37CB               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5329  0023DE  0100               	movlb	0	; () banked
  5330  0023E0  2BCC               	incf	___awdiv@counter& (0+255),f,b
  5331  0023E2                     l4758:
  5332                           
  5333                           ; BSR set to: 0
  5334  0023E2  0100               	movlb	0	; () banked
  5335  0023E4  AFCB               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5336  0023E6  D7F7               	goto	l4756
  5337  0023E8                     l4760:
  5338                           
  5339                           ; BSR set to: 0
  5340  0023E8  0100               	movlb	0	; () banked
  5341  0023EA  90D8               	bcf	status,0,c
  5342  0023EC  37CE               	rlcf	___awdiv@quotient& (0+255),f,b
  5343  0023EE  37CF               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5344                           
  5345                           ; BSR set to: 0
  5346  0023F0  0100               	movlb	0	; () banked
  5347  0023F2  51CA               	movf	___awdiv@divisor& (0+255),w,b
  5348  0023F4  0100               	movlb	0	; () banked
  5349  0023F6  5DC8               	subwf	___awdiv@dividend& (0+255),w,b
  5350  0023F8  0100               	movlb	0	; () banked
  5351  0023FA  51CB               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5352  0023FC  0100               	movlb	0	; () banked
  5353  0023FE  59C9               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5354  002400  A0D8               	btfss	status,0,c
  5355  002402  D00A               	goto	l4768
  5356                           
  5357                           ; BSR set to: 0
  5358  002404  0100               	movlb	0	; () banked
  5359  002406  51CA               	movf	___awdiv@divisor& (0+255),w,b
  5360  002408  0100               	movlb	0	; () banked
  5361  00240A  5FC8               	subwf	___awdiv@dividend& (0+255),f,b
  5362  00240C  0100               	movlb	0	; () banked
  5363  00240E  51CB               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5364  002410  0100               	movlb	0	; () banked
  5365  002412  5BC9               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5366                           
  5367                           ; BSR set to: 0
  5368  002414  0100               	movlb	0	; () banked
  5369  002416  81CE               	bsf	___awdiv@quotient& (0+255),0,b
  5370  002418                     l4768:
  5371                           
  5372                           ; BSR set to: 0
  5373  002418  0100               	movlb	0	; () banked
  5374  00241A  90D8               	bcf	status,0,c
  5375  00241C  33CB               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5376  00241E  33CA               	rrcf	___awdiv@divisor& (0+255),f,b
  5377                           
  5378                           ; BSR set to: 0
  5379  002420  0100               	movlb	0	; () banked
  5380  002422  2FCC               	decfsz	___awdiv@counter& (0+255),f,b
  5381  002424  D7E1               	goto	l4760
  5382  002426                     l4772:
  5383                           
  5384                           ; BSR set to: 0
  5385  002426  0100               	movlb	0	; () banked
  5386  002428  51CD               	movf	___awdiv@sign& (0+255),w,b
  5387  00242A  0100               	movlb	0	; () banked
  5388  00242C  B4D8               	btfsc	status,2,c
  5389  00242E  D005               	goto	l4776
  5390                           
  5391                           ; BSR set to: 0
  5392  002430  0100               	movlb	0	; () banked
  5393  002432  6DCE               	negf	___awdiv@quotient& (0+255),b
  5394  002434  1FCF               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5395  002436  B0D8               	btfsc	status,0,c
  5396  002438  2BCF               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5397  00243A                     l4776:
  5398                           
  5399                           ; BSR set to: 0
  5400  00243A  C0CE  F0C8         	movff	___awdiv@quotient,?___awdiv
  5401  00243E  C0CF  F0C9         	movff	___awdiv@quotient+1,?___awdiv+1
  5402  002442  0012               	return	
  5403  002444                     __end_of___awdiv:
  5404                           	opt stack 0
  5405                           tblptru	equ	0xFF8
  5406                           tblptrh	equ	0xFF7
  5407                           tblptrl	equ	0xFF6
  5408                           tablat	equ	0xFF5
  5409                           prodh	equ	0xFF4
  5410                           prodl	equ	0xFF3
  5411                           intcon	equ	0xFF2
  5412                           postinc0	equ	0xFEE
  5413                           wreg	equ	0xFE8
  5414                           postdec1	equ	0xFE5
  5415                           fsr1l	equ	0xFE1
  5416                           status	equ	0xFD8
  5417                           
  5418 ;; *************** function _CANsendMessage *****************
  5419 ;; Defined at:
  5420 ;;		line 294 in file "CANlib.h"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;  identifier      4    0[BANK0 ] unsigned long 
  5423 ;;  data            2    4[BANK0 ] PTR unsigned char 
  5424 ;;		 -> data_array1(8), data_array(8), data_debug1(8), data_array_debug(8), 
  5425 ;;  dataLength      1    6[BANK0 ] unsigned char 
  5426 ;;  flags           1    7[BANK0 ] enum E16866
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;  tamp            4   12[BANK0 ] unsigned long 
  5429 ;; Return value:  Size  Location     Type
  5430 ;;		None               void
  5431 ;; Registers used:
  5432 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5438 ;;      Params:         0       8       0       0
  5439 ;;      Locals:         0       4       0       0
  5440 ;;      Temps:          0       4       0       0
  5441 ;;      Totals:         0      16       0       0
  5442 ;;Total ram usage:       16 bytes
  5443 ;; Hardware stack levels used:    1
  5444 ;; Hardware stack levels required when called:    2
  5445 ;; This function calls:
  5446 ;;		Nothing
  5447 ;; This function is called by:
  5448 ;;		_main
  5449 ;;		_battery_measure
  5450 ;;		_send_data
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           	psect	text11
  5455  000CF4                     __ptext11:
  5456                           	opt stack 0
  5457  000CF4                     _CANsendMessage:
  5458                           	opt stack 27
  5459                           
  5460                           ;CANlib.h: 296: unsigned long tamp;
  5461                           ;CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;incstack = 0
  5465  000CF4  010F               	movlb	15	; () banked
  5466  000CF6  B740               	btfsc	64,3,b	;volatile
  5467  000CF8  D13F               	goto	l361
  5468                           
  5469                           ; BSR set to: 15
  5470                           ;CANlib.h: 299: { TXB0DLC = dataLength;
  5471  000CFA  C0C1  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  5472                           
  5473                           ;CANlib.h: 300: if (0b01000000 & flags)
  5474  000CFE  0100               	movlb	0	; () banked
  5475  000D00  ADC2               	btfss	CANsendMessage@flags& (0+255),6,b
  5476  000D02  D003               	goto	l362
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  5480  000D04  010F               	movlb	15	; () banked
  5481  000D06  8D45               	bsf	69,6,b	;volatile
  5482  000D08  D002               	goto	l363
  5483  000D0A                     l362:
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;CANlib.h: 302: else
  5487                           ;CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  5488  000D0A  010F               	movlb	15	; () banked
  5489  000D0C  9D45               	bcf	69,6,b	;volatile
  5490  000D0E                     l363:
  5491                           
  5492                           ; BSR set to: 15
  5493                           ;CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  5494  000D0E  0100               	movlb	0	; () banked
  5495  000D10  A7C2               	btfss	CANsendMessage@flags& (0+255),3,b
  5496  000D12  D079               	goto	l364
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;CANlib.h: 306: {
  5500                           ;CANlib.h: 308: tamp = identifier & 0x000000FF;
  5501  000D14  0100               	movlb	0	; () banked
  5502  000D16  51BB               	movf	CANsendMessage@identifier& (0+255),w,b
  5503  000D18  0100               	movlb	0	; () banked
  5504  000D1A  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  5505  000D1C  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5506  000D1E  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5507  000D20  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  5511  000D22  C0C7  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;CANlib.h: 311: tamp = identifier & 0x0000FF00;
  5515  000D26  0E00               	movlw	0
  5516  000D28  0100               	movlb	0	; () banked
  5517  000D2A  15BB               	andwf	CANsendMessage@identifier& (0+255),w,b
  5518  000D2C  0100               	movlb	0	; () banked
  5519  000D2E  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  5520  000D30  0EFF               	movlw	255
  5521  000D32  0100               	movlb	0	; () banked
  5522  000D34  15BC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5523  000D36  0100               	movlb	0	; () banked
  5524  000D38  6FC8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5525  000D3A  0E00               	movlw	0
  5526  000D3C  0100               	movlb	0	; () banked
  5527  000D3E  15BD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5528  000D40  0100               	movlb	0	; () banked
  5529  000D42  6FC9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5530  000D44  0E00               	movlw	0
  5531  000D46  0100               	movlb	0	; () banked
  5532  000D48  15BE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5533  000D4A  0100               	movlb	0	; () banked
  5534  000D4C  6FCA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;CANlib.h: 312: tamp = tamp >> 8;
  5538  000D4E  C0C7  F0C3         	movff	CANsendMessage@tamp,??_CANsendMessage
  5539  000D52  C0C8  F0C4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5540  000D56  C0C9  F0C5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5541  000D5A  C0CA  F0C6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5542  000D5E  C0C4  F0C3         	movff	??_CANsendMessage+1,??_CANsendMessage
  5543  000D62  C0C5  F0C4         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5544  000D66  C0C6  F0C5         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5545  000D6A  0100               	movlb	0	; () banked
  5546  000D6C  6BC6               	clrf	(??_CANsendMessage+3)& (0+255),b
  5547  000D6E  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  5548  000D72  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5549  000D76  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5550  000D7A  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  5554  000D7E  C0C7  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;CANlib.h: 315: TXB0SIDL = 0x00;
  5558  000D82  0E00               	movlw	0
  5559  000D84  010F               	movlb	15	; () banked
  5560  000D86  6F42               	movwf	66,b	;volatile
  5561                           
  5562                           ; BSR set to: 15
  5563                           ;CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  5564  000D88  010F               	movlb	15	; () banked
  5565  000D8A  8742               	bsf	66,3,b	;volatile
  5566                           
  5567                           ; BSR set to: 15
  5568                           ;CANlib.h: 318: if (identifier & 0x00010000)
  5569  000D8C  0100               	movlb	0	; () banked
  5570  000D8E  A1BD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5571  000D90  D002               	goto	l365
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  5575  000D92  010F               	movlb	15	; () banked
  5576  000D94  8142               	bsf	66,0,b	;volatile
  5577  000D96                     l365:
  5578                           
  5579                           ;CANlib.h: 320: if (identifier & 0x00020000)
  5580  000D96  0100               	movlb	0	; () banked
  5581  000D98  A3BD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5582  000D9A  D002               	goto	l366
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  5586  000D9C  010F               	movlb	15	; () banked
  5587  000D9E  8342               	bsf	66,1,b	;volatile
  5588  000DA0                     l366:
  5589                           
  5590                           ;CANlib.h: 322: if (identifier & 0x00040000)
  5591  000DA0  0100               	movlb	0	; () banked
  5592  000DA2  A5BD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5593  000DA4  D002               	goto	l367
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  5597  000DA6  010F               	movlb	15	; () banked
  5598  000DA8  8B42               	bsf	66,5,b	;volatile
  5599  000DAA                     l367:
  5600                           
  5601                           ;CANlib.h: 324: if (identifier & 0x00080000)
  5602  000DAA  0100               	movlb	0	; () banked
  5603  000DAC  A7BD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5604  000DAE  D002               	goto	l368
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  5608  000DB0  010F               	movlb	15	; () banked
  5609  000DB2  8D42               	bsf	66,6,b	;volatile
  5610  000DB4                     l368:
  5611                           
  5612                           ;CANlib.h: 326: if (identifier & 0x00100000)
  5613  000DB4  0100               	movlb	0	; () banked
  5614  000DB6  A9BD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5615  000DB8  D002               	goto	l4508
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  5619  000DBA  010F               	movlb	15	; () banked
  5620  000DBC  8F42               	bsf	66,7,b	;volatile
  5621  000DBE                     l4508:
  5622                           
  5623                           ;CANlib.h: 329: tamp = (identifier >> 21);
  5624  000DBE  C0BB  F0C3         	movff	CANsendMessage@identifier,??_CANsendMessage
  5625  000DC2  C0BC  F0C4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5626  000DC6  C0BD  F0C5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5627  000DCA  C0BE  F0C6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5628  000DCE  0E16               	movlw	22
  5629  000DD0  D006               	goto	u5640
  5630  000DD2                     u5645:
  5631  000DD2  0100               	movlb	0	; () banked
  5632  000DD4  90D8               	bcf	status,0,c
  5633  000DD6  33C6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5634  000DD8  33C5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5635  000DDA  33C4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5636  000DDC  33C3               	rrcf	??_CANsendMessage& (0+255),f,b
  5637  000DDE                     u5640:
  5638  000DDE  2EE8               	decfsz	wreg,f,c
  5639  000DE0  D7F8               	goto	u5645
  5640  000DE2  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  5641  000DE6  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5642  000DEA  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5643  000DEE  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;CANlib.h: 330: tamp = tamp & 0x000000FF;
  5647  000DF2  0100               	movlb	0	; () banked
  5648  000DF4  51C7               	movf	CANsendMessage@tamp& (0+255),w,b
  5649  000DF6  0100               	movlb	0	; () banked
  5650  000DF8  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  5651  000DFA  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5652  000DFC  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5653  000DFE  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  5657  000E00  C0C7  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5658                           
  5659                           ;CANlib.h: 332: }
  5660  000E04  D059               	goto	l4528
  5661  000E06                     l364:
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;CANlib.h: 334: else
  5665                           ;CANlib.h: 336: {
  5666                           ;CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  5667  000E06  010F               	movlb	15	; () banked
  5668  000E08  9742               	bcf	66,3,b	;volatile
  5669                           
  5670                           ; BSR set to: 15
  5671                           ;CANlib.h: 339: tamp = (identifier >> 3);
  5672  000E0A  C0BB  F0C3         	movff	CANsendMessage@identifier,??_CANsendMessage
  5673  000E0E  C0BC  F0C4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5674  000E12  C0BD  F0C5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5675  000E16  C0BE  F0C6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5676  000E1A  0E04               	movlw	4
  5677  000E1C  D006               	goto	u5650
  5678  000E1E                     u5655:
  5679  000E1E  0100               	movlb	0	; () banked
  5680  000E20  90D8               	bcf	status,0,c
  5681  000E22  33C6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5682  000E24  33C5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5683  000E26  33C4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5684  000E28  33C3               	rrcf	??_CANsendMessage& (0+255),f,b
  5685  000E2A                     u5650:
  5686  000E2A  2EE8               	decfsz	wreg,f,c
  5687  000E2C  D7F8               	goto	u5655
  5688  000E2E  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  5689  000E32  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5690  000E36  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5691  000E3A  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;CANlib.h: 340: tamp = tamp & 0x000000FF;
  5695  000E3E  0100               	movlb	0	; () banked
  5696  000E40  51C7               	movf	CANsendMessage@tamp& (0+255),w,b
  5697  000E42  0100               	movlb	0	; () banked
  5698  000E44  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  5699  000E46  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5700  000E48  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5701  000E4A  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5702                           
  5703                           ; BSR set to: 0
  5704                           ;CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  5705  000E4C  C0C7  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;CANlib.h: 343: tamp = identifier & 0x00000007;
  5709  000E50  0E07               	movlw	7
  5710  000E52  0100               	movlb	0	; () banked
  5711  000E54  15BB               	andwf	CANsendMessage@identifier& (0+255),w,b
  5712  000E56  0100               	movlb	0	; () banked
  5713  000E58  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  5714  000E5A  0E00               	movlw	0
  5715  000E5C  0100               	movlb	0	; () banked
  5716  000E5E  15BC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5717  000E60  0100               	movlb	0	; () banked
  5718  000E62  6FC8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5719  000E64  0E00               	movlw	0
  5720  000E66  0100               	movlb	0	; () banked
  5721  000E68  15BD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5722  000E6A  0100               	movlb	0	; () banked
  5723  000E6C  6FC9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5724  000E6E  0E00               	movlw	0
  5725  000E70  0100               	movlb	0	; () banked
  5726  000E72  15BE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5727  000E74  0100               	movlb	0	; () banked
  5728  000E76  6FCA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;CANlib.h: 344: tamp = tamp << 5;
  5732  000E78  C0C7  F0C3         	movff	CANsendMessage@tamp,??_CANsendMessage
  5733  000E7C  C0C8  F0C4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5734  000E80  C0C9  F0C5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5735  000E84  C0CA  F0C6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5736  000E88  0E05               	movlw	5
  5737  000E8A                     u5665:
  5738  000E8A  90D8               	bcf	status,0,c
  5739  000E8C  0100               	movlb	0	; () banked
  5740  000E8E  37C3               	rlcf	??_CANsendMessage& (0+255),f,b
  5741  000E90  37C4               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  5742  000E92  37C5               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  5743  000E94  37C6               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  5744  000E96  2EE8               	decfsz	wreg,f,c
  5745  000E98  D7F8               	goto	u5665
  5746  000E9A  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  5747  000E9E  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5748  000EA2  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5749  000EA6  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5750                           
  5751                           ; BSR set to: 0
  5752                           ;CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  5753  000EAA  010F               	movlb	15	; () banked
  5754  000EAC  5142               	movf	66,w,b	;volatile
  5755  000EAE  0B1F               	andlw	31
  5756  000EB0  010F               	movlb	15	; () banked
  5757  000EB2  6F42               	movwf	66,b	;volatile
  5758                           
  5759                           ; BSR set to: 15
  5760                           ;CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  5761  000EB4  C0C7  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  5762  000EB8                     l4528:
  5763                           
  5764                           ;CANlib.h: 347: }
  5765                           ;CANlib.h: 349: if (0b00000001 & flags)
  5766  000EB8  0100               	movlb	0	; () banked
  5767  000EBA  A1C2               	btfss	CANsendMessage@flags& (0+255),0,b
  5768  000EBC  D003               	goto	l371
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  5772  000EBE  010F               	movlb	15	; () banked
  5773  000EC0  8140               	bsf	64,0,b	;volatile
  5774  000EC2  D002               	goto	l372
  5775  000EC4                     l371:
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;CANlib.h: 351: else
  5779                           ;CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  5780  000EC4  010F               	movlb	15	; () banked
  5781  000EC6  9140               	bcf	64,0,b	;volatile
  5782  000EC8                     l372:
  5783                           
  5784                           ; BSR set to: 15
  5785                           ;CANlib.h: 353: if (0b00000010 & flags)
  5786  000EC8  0100               	movlb	0	; () banked
  5787  000ECA  A3C2               	btfss	CANsendMessage@flags& (0+255),1,b
  5788  000ECC  D003               	goto	l373
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  5792  000ECE  010F               	movlb	15	; () banked
  5793  000ED0  8340               	bsf	64,1,b	;volatile
  5794  000ED2  D002               	goto	l4534
  5795  000ED4                     l373:
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;CANlib.h: 355: else
  5799                           ;CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  5800  000ED4  010F               	movlb	15	; () banked
  5801  000ED6  9340               	bcf	64,1,b	;volatile
  5802  000ED8                     l4534:
  5803                           
  5804                           ; BSR set to: 15
  5805                           ;CANlib.h: 358: TXB0D0 = data[0];
  5806  000ED8  C0BF  FFD9         	movff	CANsendMessage@data,fsr2l
  5807  000EDC  C0C0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  5808  000EE0  50DF               	movf	indf2,w,c
  5809  000EE2  010F               	movlb	15	; () banked
  5810  000EE4  6F46               	movwf	70,b	;volatile
  5811                           
  5812                           ; BSR set to: 15
  5813                           ;CANlib.h: 359: TXB0D1 = data[1];
  5814  000EE6  0100               	movlb	0	; () banked
  5815  000EE8  EE20 F001          	lfsr	2,1
  5816  000EEC  51BF               	movf	CANsendMessage@data& (0+255),w,b
  5817  000EEE  26D9               	addwf	fsr2l,f,c
  5818  000EF0  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5819  000EF2  22DA               	addwfc	fsr2h,f,c
  5820  000EF4  50DF               	movf	indf2,w,c
  5821  000EF6  010F               	movlb	15	; () banked
  5822  000EF8  6F47               	movwf	71,b	;volatile
  5823                           
  5824                           ; BSR set to: 15
  5825                           ;CANlib.h: 360: TXB0D2 = data[2];
  5826  000EFA  0100               	movlb	0	; () banked
  5827  000EFC  EE20 F002          	lfsr	2,2
  5828  000F00  51BF               	movf	CANsendMessage@data& (0+255),w,b
  5829  000F02  26D9               	addwf	fsr2l,f,c
  5830  000F04  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5831  000F06  22DA               	addwfc	fsr2h,f,c
  5832  000F08  50DF               	movf	indf2,w,c
  5833  000F0A  010F               	movlb	15	; () banked
  5834  000F0C  6F48               	movwf	72,b	;volatile
  5835                           
  5836                           ; BSR set to: 15
  5837                           ;CANlib.h: 361: TXB0D3 = data[3];
  5838  000F0E  0100               	movlb	0	; () banked
  5839  000F10  EE20 F003          	lfsr	2,3
  5840  000F14  51BF               	movf	CANsendMessage@data& (0+255),w,b
  5841  000F16  26D9               	addwf	fsr2l,f,c
  5842  000F18  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5843  000F1A  22DA               	addwfc	fsr2h,f,c
  5844  000F1C  50DF               	movf	indf2,w,c
  5845  000F1E  010F               	movlb	15	; () banked
  5846  000F20  6F49               	movwf	73,b	;volatile
  5847                           
  5848                           ; BSR set to: 15
  5849                           ;CANlib.h: 362: TXB0D4 = data[4];
  5850  000F22  0100               	movlb	0	; () banked
  5851  000F24  EE20 F004          	lfsr	2,4
  5852  000F28  51BF               	movf	CANsendMessage@data& (0+255),w,b
  5853  000F2A  26D9               	addwf	fsr2l,f,c
  5854  000F2C  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5855  000F2E  22DA               	addwfc	fsr2h,f,c
  5856  000F30  50DF               	movf	indf2,w,c
  5857  000F32  010F               	movlb	15	; () banked
  5858  000F34  6F4A               	movwf	74,b	;volatile
  5859                           
  5860                           ; BSR set to: 15
  5861                           ;CANlib.h: 363: TXB0D5 = data[5];
  5862  000F36  0100               	movlb	0	; () banked
  5863  000F38  EE20 F005          	lfsr	2,5
  5864  000F3C  51BF               	movf	CANsendMessage@data& (0+255),w,b
  5865  000F3E  26D9               	addwf	fsr2l,f,c
  5866  000F40  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5867  000F42  22DA               	addwfc	fsr2h,f,c
  5868  000F44  50DF               	movf	indf2,w,c
  5869  000F46  010F               	movlb	15	; () banked
  5870  000F48  6F4B               	movwf	75,b	;volatile
  5871                           
  5872                           ; BSR set to: 15
  5873                           ;CANlib.h: 364: TXB0D6 = data[6];
  5874  000F4A  0100               	movlb	0	; () banked
  5875  000F4C  EE20 F006          	lfsr	2,6
  5876  000F50  51BF               	movf	CANsendMessage@data& (0+255),w,b
  5877  000F52  26D9               	addwf	fsr2l,f,c
  5878  000F54  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5879  000F56  22DA               	addwfc	fsr2h,f,c
  5880  000F58  50DF               	movf	indf2,w,c
  5881  000F5A  010F               	movlb	15	; () banked
  5882  000F5C  6F4C               	movwf	76,b	;volatile
  5883                           
  5884                           ; BSR set to: 15
  5885                           ;CANlib.h: 365: TXB0D7 = data[7];
  5886  000F5E  0100               	movlb	0	; () banked
  5887  000F60  EE20 F007          	lfsr	2,7
  5888  000F64  51BF               	movf	CANsendMessage@data& (0+255),w,b
  5889  000F66  26D9               	addwf	fsr2l,f,c
  5890  000F68  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5891  000F6A  22DA               	addwfc	fsr2h,f,c
  5892  000F6C  50DF               	movf	indf2,w,c
  5893  000F6E  010F               	movlb	15	; () banked
  5894  000F70  6F4D               	movwf	77,b	;volatile
  5895                           
  5896                           ; BSR set to: 15
  5897                           ;CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  5898  000F72  010F               	movlb	15	; () banked
  5899  000F74  8740               	bsf	64,3,b	;volatile
  5900                           
  5901                           ; BSR set to: 15
  5902                           ;CANlib.h: 368: return;
  5903  000F76  0012               	return	
  5904  000F78                     l361:
  5905                           
  5906                           ; BSR set to: 15
  5907                           ;CANlib.h: 369: }
  5908                           ;CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  5909  000F78  010F               	movlb	15	; () banked
  5910  000F7A  B730               	btfsc	48,3,b	;volatile
  5911  000F7C  D13F               	goto	l376
  5912                           
  5913                           ; BSR set to: 15
  5914                           ;CANlib.h: 374: { TXB1DLC = dataLength;
  5915  000F7E  C0C1  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  5916                           
  5917                           ;CANlib.h: 376: if (0b01000000 & flags)
  5918  000F82  0100               	movlb	0	; () banked
  5919  000F84  ADC2               	btfss	CANsendMessage@flags& (0+255),6,b
  5920  000F86  D003               	goto	l377
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  5924  000F88  010F               	movlb	15	; () banked
  5925  000F8A  8D35               	bsf	53,6,b	;volatile
  5926  000F8C  D002               	goto	l378
  5927  000F8E                     l377:
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;CANlib.h: 378: else
  5931                           ;CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  5932  000F8E  010F               	movlb	15	; () banked
  5933  000F90  9D35               	bcf	53,6,b	;volatile
  5934  000F92                     l378:
  5935                           
  5936                           ; BSR set to: 15
  5937                           ;CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  5938  000F92  0100               	movlb	0	; () banked
  5939  000F94  A7C2               	btfss	CANsendMessage@flags& (0+255),3,b
  5940  000F96  D079               	goto	l379
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;CANlib.h: 382: {
  5944                           ;CANlib.h: 383: tamp = identifier & 0x000000FF;
  5945  000F98  0100               	movlb	0	; () banked
  5946  000F9A  51BB               	movf	CANsendMessage@identifier& (0+255),w,b
  5947  000F9C  0100               	movlb	0	; () banked
  5948  000F9E  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  5949  000FA0  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5950  000FA2  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5951  000FA4  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5952                           
  5953                           ; BSR set to: 0
  5954                           ;CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  5955  000FA6  C0C7  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;CANlib.h: 386: tamp = identifier & 0x0000FF00;
  5959  000FAA  0E00               	movlw	0
  5960  000FAC  0100               	movlb	0	; () banked
  5961  000FAE  15BB               	andwf	CANsendMessage@identifier& (0+255),w,b
  5962  000FB0  0100               	movlb	0	; () banked
  5963  000FB2  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  5964  000FB4  0EFF               	movlw	255
  5965  000FB6  0100               	movlb	0	; () banked
  5966  000FB8  15BC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5967  000FBA  0100               	movlb	0	; () banked
  5968  000FBC  6FC8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5969  000FBE  0E00               	movlw	0
  5970  000FC0  0100               	movlb	0	; () banked
  5971  000FC2  15BD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5972  000FC4  0100               	movlb	0	; () banked
  5973  000FC6  6FC9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5974  000FC8  0E00               	movlw	0
  5975  000FCA  0100               	movlb	0	; () banked
  5976  000FCC  15BE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5977  000FCE  0100               	movlb	0	; () banked
  5978  000FD0  6FCA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;CANlib.h: 387: tamp = tamp >> 8;
  5982  000FD2  C0C7  F0C3         	movff	CANsendMessage@tamp,??_CANsendMessage
  5983  000FD6  C0C8  F0C4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5984  000FDA  C0C9  F0C5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5985  000FDE  C0CA  F0C6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5986  000FE2  C0C4  F0C3         	movff	??_CANsendMessage+1,??_CANsendMessage
  5987  000FE6  C0C5  F0C4         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5988  000FEA  C0C6  F0C5         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5989  000FEE  0100               	movlb	0	; () banked
  5990  000FF0  6BC6               	clrf	(??_CANsendMessage+3)& (0+255),b
  5991  000FF2  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  5992  000FF6  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5993  000FFA  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5994  000FFE  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5995                           
  5996                           ; BSR set to: 0
  5997                           ;CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  5998  001002  C0C7  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;CANlib.h: 390: TXB1SIDL = 0x00;
  6002  001006  0E00               	movlw	0
  6003  001008  010F               	movlb	15	; () banked
  6004  00100A  6F32               	movwf	50,b	;volatile
  6005                           
  6006                           ; BSR set to: 15
  6007                           ;CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  6008  00100C  010F               	movlb	15	; () banked
  6009  00100E  8732               	bsf	50,3,b	;volatile
  6010                           
  6011                           ; BSR set to: 15
  6012                           ;CANlib.h: 393: if (identifier & 0x00010000)
  6013  001010  0100               	movlb	0	; () banked
  6014  001012  A1BD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6015  001014  D002               	goto	l380
  6016                           
  6017                           ; BSR set to: 0
  6018                           ;CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  6019  001016  010F               	movlb	15	; () banked
  6020  001018  8132               	bsf	50,0,b	;volatile
  6021  00101A                     l380:
  6022                           
  6023                           ;CANlib.h: 395: if (identifier & 0x00020000)
  6024  00101A  0100               	movlb	0	; () banked
  6025  00101C  A3BD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6026  00101E  D002               	goto	l381
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  6030  001020  010F               	movlb	15	; () banked
  6031  001022  8332               	bsf	50,1,b	;volatile
  6032  001024                     l381:
  6033                           
  6034                           ;CANlib.h: 397: if (identifier & 0x00040000)
  6035  001024  0100               	movlb	0	; () banked
  6036  001026  A5BD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6037  001028  D002               	goto	l382
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  6041  00102A  010F               	movlb	15	; () banked
  6042  00102C  8B32               	bsf	50,5,b	;volatile
  6043  00102E                     l382:
  6044                           
  6045                           ;CANlib.h: 399: if (identifier & 0x00080000)
  6046  00102E  0100               	movlb	0	; () banked
  6047  001030  A7BD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6048  001032  D002               	goto	l383
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  6052  001034  010F               	movlb	15	; () banked
  6053  001036  8D32               	bsf	50,6,b	;volatile
  6054  001038                     l383:
  6055                           
  6056                           ;CANlib.h: 401: if (identifier & 0x00100000)
  6057  001038  0100               	movlb	0	; () banked
  6058  00103A  A9BD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6059  00103C  D002               	goto	l4584
  6060                           
  6061                           ; BSR set to: 0
  6062                           ;CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  6063  00103E  010F               	movlb	15	; () banked
  6064  001040  8F32               	bsf	50,7,b	;volatile
  6065  001042                     l4584:
  6066                           
  6067                           ;CANlib.h: 404: tamp = (identifier >> 21);
  6068  001042  C0BB  F0C3         	movff	CANsendMessage@identifier,??_CANsendMessage
  6069  001046  C0BC  F0C4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6070  00104A  C0BD  F0C5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6071  00104E  C0BE  F0C6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6072  001052  0E16               	movlw	22
  6073  001054  D006               	goto	u5770
  6074  001056                     u5775:
  6075  001056  0100               	movlb	0	; () banked
  6076  001058  90D8               	bcf	status,0,c
  6077  00105A  33C6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6078  00105C  33C5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6079  00105E  33C4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6080  001060  33C3               	rrcf	??_CANsendMessage& (0+255),f,b
  6081  001062                     u5770:
  6082  001062  2EE8               	decfsz	wreg,f,c
  6083  001064  D7F8               	goto	u5775
  6084  001066  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  6085  00106A  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6086  00106E  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6087  001072  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;CANlib.h: 405: tamp = tamp & 0x000000FF;
  6091  001076  0100               	movlb	0	; () banked
  6092  001078  51C7               	movf	CANsendMessage@tamp& (0+255),w,b
  6093  00107A  0100               	movlb	0	; () banked
  6094  00107C  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  6095  00107E  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6096  001080  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6097  001082  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  6101  001084  C0C7  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6102                           
  6103                           ;CANlib.h: 407: }
  6104  001088  D059               	goto	l4604
  6105  00108A                     l379:
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;CANlib.h: 409: else
  6109                           ;CANlib.h: 411: {
  6110                           ;CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  6111  00108A  010F               	movlb	15	; () banked
  6112  00108C  9732               	bcf	50,3,b	;volatile
  6113                           
  6114                           ; BSR set to: 15
  6115                           ;CANlib.h: 414: tamp = (identifier >> 3);
  6116  00108E  C0BB  F0C3         	movff	CANsendMessage@identifier,??_CANsendMessage
  6117  001092  C0BC  F0C4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6118  001096  C0BD  F0C5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6119  00109A  C0BE  F0C6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6120  00109E  0E04               	movlw	4
  6121  0010A0  D006               	goto	u5780
  6122  0010A2                     u5785:
  6123  0010A2  0100               	movlb	0	; () banked
  6124  0010A4  90D8               	bcf	status,0,c
  6125  0010A6  33C6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6126  0010A8  33C5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6127  0010AA  33C4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6128  0010AC  33C3               	rrcf	??_CANsendMessage& (0+255),f,b
  6129  0010AE                     u5780:
  6130  0010AE  2EE8               	decfsz	wreg,f,c
  6131  0010B0  D7F8               	goto	u5785
  6132  0010B2  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  6133  0010B6  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6134  0010BA  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6135  0010BE  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;CANlib.h: 415: tamp = tamp & 0x000000FF;
  6139  0010C2  0100               	movlb	0	; () banked
  6140  0010C4  51C7               	movf	CANsendMessage@tamp& (0+255),w,b
  6141  0010C6  0100               	movlb	0	; () banked
  6142  0010C8  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  6143  0010CA  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6144  0010CC  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6145  0010CE  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  6149  0010D0  C0C7  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;CANlib.h: 418: tamp = identifier & 0x00000007;
  6153  0010D4  0E07               	movlw	7
  6154  0010D6  0100               	movlb	0	; () banked
  6155  0010D8  15BB               	andwf	CANsendMessage@identifier& (0+255),w,b
  6156  0010DA  0100               	movlb	0	; () banked
  6157  0010DC  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  6158  0010DE  0E00               	movlw	0
  6159  0010E0  0100               	movlb	0	; () banked
  6160  0010E2  15BC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6161  0010E4  0100               	movlb	0	; () banked
  6162  0010E6  6FC8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6163  0010E8  0E00               	movlw	0
  6164  0010EA  0100               	movlb	0	; () banked
  6165  0010EC  15BD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6166  0010EE  0100               	movlb	0	; () banked
  6167  0010F0  6FC9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6168  0010F2  0E00               	movlw	0
  6169  0010F4  0100               	movlb	0	; () banked
  6170  0010F6  15BE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6171  0010F8  0100               	movlb	0	; () banked
  6172  0010FA  6FCA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;CANlib.h: 419: tamp = tamp << 5;
  6176  0010FC  C0C7  F0C3         	movff	CANsendMessage@tamp,??_CANsendMessage
  6177  001100  C0C8  F0C4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6178  001104  C0C9  F0C5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6179  001108  C0CA  F0C6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6180  00110C  0E05               	movlw	5
  6181  00110E                     u5795:
  6182  00110E  90D8               	bcf	status,0,c
  6183  001110  0100               	movlb	0	; () banked
  6184  001112  37C3               	rlcf	??_CANsendMessage& (0+255),f,b
  6185  001114  37C4               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6186  001116  37C5               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6187  001118  37C6               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6188  00111A  2EE8               	decfsz	wreg,f,c
  6189  00111C  D7F8               	goto	u5795
  6190  00111E  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  6191  001122  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6192  001126  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6193  00112A  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  6197  00112E  010F               	movlb	15	; () banked
  6198  001130  5132               	movf	50,w,b	;volatile
  6199  001132  0B1F               	andlw	31
  6200  001134  010F               	movlb	15	; () banked
  6201  001136  6F32               	movwf	50,b	;volatile
  6202                           
  6203                           ; BSR set to: 15
  6204                           ;CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  6205  001138  C0C7  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6206  00113C                     l4604:
  6207                           
  6208                           ;CANlib.h: 422: }
  6209                           ;CANlib.h: 424: if (0b00000001 & flags)
  6210  00113C  0100               	movlb	0	; () banked
  6211  00113E  A1C2               	btfss	CANsendMessage@flags& (0+255),0,b
  6212  001140  D003               	goto	l386
  6213                           
  6214                           ; BSR set to: 0
  6215                           ;CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  6216  001142  010F               	movlb	15	; () banked
  6217  001144  8130               	bsf	48,0,b	;volatile
  6218  001146  D002               	goto	l387
  6219  001148                     l386:
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;CANlib.h: 426: else
  6223                           ;CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  6224  001148  010F               	movlb	15	; () banked
  6225  00114A  9130               	bcf	48,0,b	;volatile
  6226  00114C                     l387:
  6227                           
  6228                           ; BSR set to: 15
  6229                           ;CANlib.h: 428: if (0b00000010 & flags)
  6230  00114C  0100               	movlb	0	; () banked
  6231  00114E  A3C2               	btfss	CANsendMessage@flags& (0+255),1,b
  6232  001150  D003               	goto	l388
  6233                           
  6234                           ; BSR set to: 0
  6235                           ;CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  6236  001152  010F               	movlb	15	; () banked
  6237  001154  8330               	bsf	48,1,b	;volatile
  6238  001156  D002               	goto	l4610
  6239  001158                     l388:
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;CANlib.h: 430: else
  6243                           ;CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  6244  001158  010F               	movlb	15	; () banked
  6245  00115A  9330               	bcf	48,1,b	;volatile
  6246  00115C                     l4610:
  6247                           
  6248                           ; BSR set to: 15
  6249                           ;CANlib.h: 433: TXB1D0 = data[0];
  6250  00115C  C0BF  FFD9         	movff	CANsendMessage@data,fsr2l
  6251  001160  C0C0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6252  001164  50DF               	movf	indf2,w,c
  6253  001166  010F               	movlb	15	; () banked
  6254  001168  6F36               	movwf	54,b	;volatile
  6255                           
  6256                           ; BSR set to: 15
  6257                           ;CANlib.h: 434: TXB1D1 = data[1];
  6258  00116A  0100               	movlb	0	; () banked
  6259  00116C  EE20 F001          	lfsr	2,1
  6260  001170  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6261  001172  26D9               	addwf	fsr2l,f,c
  6262  001174  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6263  001176  22DA               	addwfc	fsr2h,f,c
  6264  001178  50DF               	movf	indf2,w,c
  6265  00117A  010F               	movlb	15	; () banked
  6266  00117C  6F37               	movwf	55,b	;volatile
  6267                           
  6268                           ; BSR set to: 15
  6269                           ;CANlib.h: 435: TXB1D2 = data[2];
  6270  00117E  0100               	movlb	0	; () banked
  6271  001180  EE20 F002          	lfsr	2,2
  6272  001184  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6273  001186  26D9               	addwf	fsr2l,f,c
  6274  001188  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6275  00118A  22DA               	addwfc	fsr2h,f,c
  6276  00118C  50DF               	movf	indf2,w,c
  6277  00118E  010F               	movlb	15	; () banked
  6278  001190  6F38               	movwf	56,b	;volatile
  6279                           
  6280                           ; BSR set to: 15
  6281                           ;CANlib.h: 436: TXB1D3 = data[3];
  6282  001192  0100               	movlb	0	; () banked
  6283  001194  EE20 F003          	lfsr	2,3
  6284  001198  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6285  00119A  26D9               	addwf	fsr2l,f,c
  6286  00119C  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6287  00119E  22DA               	addwfc	fsr2h,f,c
  6288  0011A0  50DF               	movf	indf2,w,c
  6289  0011A2  010F               	movlb	15	; () banked
  6290  0011A4  6F39               	movwf	57,b	;volatile
  6291                           
  6292                           ; BSR set to: 15
  6293                           ;CANlib.h: 437: TXB1D4 = data[4];
  6294  0011A6  0100               	movlb	0	; () banked
  6295  0011A8  EE20 F004          	lfsr	2,4
  6296  0011AC  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6297  0011AE  26D9               	addwf	fsr2l,f,c
  6298  0011B0  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6299  0011B2  22DA               	addwfc	fsr2h,f,c
  6300  0011B4  50DF               	movf	indf2,w,c
  6301  0011B6  010F               	movlb	15	; () banked
  6302  0011B8  6F3A               	movwf	58,b	;volatile
  6303                           
  6304                           ; BSR set to: 15
  6305                           ;CANlib.h: 438: TXB1D5 = data[5];
  6306  0011BA  0100               	movlb	0	; () banked
  6307  0011BC  EE20 F005          	lfsr	2,5
  6308  0011C0  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6309  0011C2  26D9               	addwf	fsr2l,f,c
  6310  0011C4  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6311  0011C6  22DA               	addwfc	fsr2h,f,c
  6312  0011C8  50DF               	movf	indf2,w,c
  6313  0011CA  010F               	movlb	15	; () banked
  6314  0011CC  6F3B               	movwf	59,b	;volatile
  6315                           
  6316                           ; BSR set to: 15
  6317                           ;CANlib.h: 439: TXB1D6 = data[6];
  6318  0011CE  0100               	movlb	0	; () banked
  6319  0011D0  EE20 F006          	lfsr	2,6
  6320  0011D4  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6321  0011D6  26D9               	addwf	fsr2l,f,c
  6322  0011D8  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6323  0011DA  22DA               	addwfc	fsr2h,f,c
  6324  0011DC  50DF               	movf	indf2,w,c
  6325  0011DE  010F               	movlb	15	; () banked
  6326  0011E0  6F3C               	movwf	60,b	;volatile
  6327                           
  6328                           ; BSR set to: 15
  6329                           ;CANlib.h: 440: TXB1D7 = data[7];
  6330  0011E2  0100               	movlb	0	; () banked
  6331  0011E4  EE20 F007          	lfsr	2,7
  6332  0011E8  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6333  0011EA  26D9               	addwf	fsr2l,f,c
  6334  0011EC  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6335  0011EE  22DA               	addwfc	fsr2h,f,c
  6336  0011F0  50DF               	movf	indf2,w,c
  6337  0011F2  010F               	movlb	15	; () banked
  6338  0011F4  6F3D               	movwf	61,b	;volatile
  6339                           
  6340                           ; BSR set to: 15
  6341                           ;CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  6342  0011F6  010F               	movlb	15	; () banked
  6343  0011F8  8730               	bsf	48,3,b	;volatile
  6344                           
  6345                           ; BSR set to: 15
  6346                           ;CANlib.h: 444: return;
  6347  0011FA  0012               	return	
  6348  0011FC                     l376:
  6349                           
  6350                           ; BSR set to: 15
  6351                           ;CANlib.h: 445: }
  6352                           ;CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  6353  0011FC  010F               	movlb	15	; () banked
  6354  0011FE  B720               	btfsc	32,3,b	;volatile
  6355  001200  0012               	return	
  6356                           
  6357                           ; BSR set to: 15
  6358                           ;CANlib.h: 450: { TXB2DLC = dataLength;
  6359  001202  C0C1  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6360                           
  6361                           ;CANlib.h: 452: if (0b01000000 & flags)
  6362  001206  0100               	movlb	0	; () banked
  6363  001208  ADC2               	btfss	CANsendMessage@flags& (0+255),6,b
  6364  00120A  D003               	goto	l391
  6365                           
  6366                           ; BSR set to: 0
  6367                           ;CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  6368  00120C  010F               	movlb	15	; () banked
  6369  00120E  8D25               	bsf	37,6,b	;volatile
  6370  001210  D002               	goto	l392
  6371  001212                     l391:
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;CANlib.h: 454: else
  6375                           ;CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  6376  001212  010F               	movlb	15	; () banked
  6377  001214  9D25               	bcf	37,6,b	;volatile
  6378  001216                     l392:
  6379                           
  6380                           ; BSR set to: 15
  6381                           ;CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  6382  001216  0100               	movlb	0	; () banked
  6383  001218  A7C2               	btfss	CANsendMessage@flags& (0+255),3,b
  6384  00121A  D079               	goto	l393
  6385                           
  6386                           ; BSR set to: 0
  6387                           ;CANlib.h: 458: {
  6388                           ;CANlib.h: 459: tamp = identifier & 0x000000FF;
  6389  00121C  0100               	movlb	0	; () banked
  6390  00121E  51BB               	movf	CANsendMessage@identifier& (0+255),w,b
  6391  001220  0100               	movlb	0	; () banked
  6392  001222  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  6393  001224  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6394  001226  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6395  001228  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  6399  00122A  C0C7  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6400                           
  6401                           ; BSR set to: 0
  6402                           ;CANlib.h: 462: tamp = identifier & 0x0000FF00;
  6403  00122E  0E00               	movlw	0
  6404  001230  0100               	movlb	0	; () banked
  6405  001232  15BB               	andwf	CANsendMessage@identifier& (0+255),w,b
  6406  001234  0100               	movlb	0	; () banked
  6407  001236  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  6408  001238  0EFF               	movlw	255
  6409  00123A  0100               	movlb	0	; () banked
  6410  00123C  15BC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6411  00123E  0100               	movlb	0	; () banked
  6412  001240  6FC8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6413  001242  0E00               	movlw	0
  6414  001244  0100               	movlb	0	; () banked
  6415  001246  15BD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6416  001248  0100               	movlb	0	; () banked
  6417  00124A  6FC9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6418  00124C  0E00               	movlw	0
  6419  00124E  0100               	movlb	0	; () banked
  6420  001250  15BE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6421  001252  0100               	movlb	0	; () banked
  6422  001254  6FCA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6423                           
  6424                           ; BSR set to: 0
  6425                           ;CANlib.h: 463: tamp = tamp >> 8;
  6426  001256  C0C7  F0C3         	movff	CANsendMessage@tamp,??_CANsendMessage
  6427  00125A  C0C8  F0C4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6428  00125E  C0C9  F0C5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6429  001262  C0CA  F0C6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6430  001266  C0C4  F0C3         	movff	??_CANsendMessage+1,??_CANsendMessage
  6431  00126A  C0C5  F0C4         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6432  00126E  C0C6  F0C5         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6433  001272  0100               	movlb	0	; () banked
  6434  001274  6BC6               	clrf	(??_CANsendMessage+3)& (0+255),b
  6435  001276  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  6436  00127A  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6437  00127E  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6438  001282  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  6442  001286  C0C7  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  6443                           
  6444                           ; BSR set to: 0
  6445                           ;CANlib.h: 466: TXB2SIDL = 0x00;
  6446  00128A  0E00               	movlw	0
  6447  00128C  010F               	movlb	15	; () banked
  6448  00128E  6F22               	movwf	34,b	;volatile
  6449                           
  6450                           ; BSR set to: 15
  6451                           ;CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  6452  001290  010F               	movlb	15	; () banked
  6453  001292  8722               	bsf	34,3,b	;volatile
  6454                           
  6455                           ; BSR set to: 15
  6456                           ;CANlib.h: 469: if (identifier & 0x00010000)
  6457  001294  0100               	movlb	0	; () banked
  6458  001296  A1BD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6459  001298  D002               	goto	l394
  6460                           
  6461                           ; BSR set to: 0
  6462                           ;CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  6463  00129A  010F               	movlb	15	; () banked
  6464  00129C  8122               	bsf	34,0,b	;volatile
  6465  00129E                     l394:
  6466                           
  6467                           ;CANlib.h: 471: if (identifier & 0x00020000)
  6468  00129E  0100               	movlb	0	; () banked
  6469  0012A0  A3BD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6470  0012A2  D002               	goto	l395
  6471                           
  6472                           ; BSR set to: 0
  6473                           ;CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  6474  0012A4  010F               	movlb	15	; () banked
  6475  0012A6  8322               	bsf	34,1,b	;volatile
  6476  0012A8                     l395:
  6477                           
  6478                           ;CANlib.h: 473: if (identifier & 0x00040000)
  6479  0012A8  0100               	movlb	0	; () banked
  6480  0012AA  A5BD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6481  0012AC  D002               	goto	l396
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  6485  0012AE  010F               	movlb	15	; () banked
  6486  0012B0  8B22               	bsf	34,5,b	;volatile
  6487  0012B2                     l396:
  6488                           
  6489                           ;CANlib.h: 475: if (identifier & 0x00080000)
  6490  0012B2  0100               	movlb	0	; () banked
  6491  0012B4  A7BD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6492  0012B6  D002               	goto	l397
  6493                           
  6494                           ; BSR set to: 0
  6495                           ;CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  6496  0012B8  010F               	movlb	15	; () banked
  6497  0012BA  8D22               	bsf	34,6,b	;volatile
  6498  0012BC                     l397:
  6499                           
  6500                           ;CANlib.h: 477: if (identifier & 0x00100000)
  6501  0012BC  0100               	movlb	0	; () banked
  6502  0012BE  A9BD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6503  0012C0  D002               	goto	l4660
  6504                           
  6505                           ; BSR set to: 0
  6506                           ;CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  6507  0012C2  010F               	movlb	15	; () banked
  6508  0012C4  8F22               	bsf	34,7,b	;volatile
  6509  0012C6                     l4660:
  6510                           
  6511                           ;CANlib.h: 480: tamp = (identifier >> 21);
  6512  0012C6  C0BB  F0C3         	movff	CANsendMessage@identifier,??_CANsendMessage
  6513  0012CA  C0BC  F0C4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6514  0012CE  C0BD  F0C5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6515  0012D2  C0BE  F0C6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6516  0012D6  0E16               	movlw	22
  6517  0012D8  D006               	goto	u5900
  6518  0012DA                     u5905:
  6519  0012DA  0100               	movlb	0	; () banked
  6520  0012DC  90D8               	bcf	status,0,c
  6521  0012DE  33C6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6522  0012E0  33C5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6523  0012E2  33C4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6524  0012E4  33C3               	rrcf	??_CANsendMessage& (0+255),f,b
  6525  0012E6                     u5900:
  6526  0012E6  2EE8               	decfsz	wreg,f,c
  6527  0012E8  D7F8               	goto	u5905
  6528  0012EA  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  6529  0012EE  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6530  0012F2  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6531  0012F6  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;CANlib.h: 481: tamp = tamp & 0x000000FF;
  6535  0012FA  0100               	movlb	0	; () banked
  6536  0012FC  51C7               	movf	CANsendMessage@tamp& (0+255),w,b
  6537  0012FE  0100               	movlb	0	; () banked
  6538  001300  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  6539  001302  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6540  001304  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6541  001306  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6542                           
  6543                           ; BSR set to: 0
  6544                           ;CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  6545  001308  C0C7  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6546                           
  6547                           ;CANlib.h: 483: }
  6548  00130C  D059               	goto	l4680
  6549  00130E                     l393:
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;CANlib.h: 485: else
  6553                           ;CANlib.h: 487: {
  6554                           ;CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  6555  00130E  010F               	movlb	15	; () banked
  6556  001310  9722               	bcf	34,3,b	;volatile
  6557                           
  6558                           ; BSR set to: 15
  6559                           ;CANlib.h: 490: tamp = (identifier >> 3);
  6560  001312  C0BB  F0C3         	movff	CANsendMessage@identifier,??_CANsendMessage
  6561  001316  C0BC  F0C4         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6562  00131A  C0BD  F0C5         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6563  00131E  C0BE  F0C6         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6564  001322  0E04               	movlw	4
  6565  001324  D006               	goto	u5910
  6566  001326                     u5915:
  6567  001326  0100               	movlb	0	; () banked
  6568  001328  90D8               	bcf	status,0,c
  6569  00132A  33C6               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6570  00132C  33C5               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6571  00132E  33C4               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6572  001330  33C3               	rrcf	??_CANsendMessage& (0+255),f,b
  6573  001332                     u5910:
  6574  001332  2EE8               	decfsz	wreg,f,c
  6575  001334  D7F8               	goto	u5915
  6576  001336  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  6577  00133A  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6578  00133E  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6579  001342  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;CANlib.h: 491: tamp = tamp & 0x000000FF;
  6583  001346  0100               	movlb	0	; () banked
  6584  001348  51C7               	movf	CANsendMessage@tamp& (0+255),w,b
  6585  00134A  0100               	movlb	0	; () banked
  6586  00134C  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  6587  00134E  6BC8               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6588  001350  6BC9               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6589  001352  6BCA               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6590                           
  6591                           ; BSR set to: 0
  6592                           ;CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  6593  001354  C0C7  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6594                           
  6595                           ; BSR set to: 0
  6596                           ;CANlib.h: 494: tamp = identifier & 0x00000007;
  6597  001358  0E07               	movlw	7
  6598  00135A  0100               	movlb	0	; () banked
  6599  00135C  15BB               	andwf	CANsendMessage@identifier& (0+255),w,b
  6600  00135E  0100               	movlb	0	; () banked
  6601  001360  6FC7               	movwf	CANsendMessage@tamp& (0+255),b
  6602  001362  0E00               	movlw	0
  6603  001364  0100               	movlb	0	; () banked
  6604  001366  15BC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6605  001368  0100               	movlb	0	; () banked
  6606  00136A  6FC8               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6607  00136C  0E00               	movlw	0
  6608  00136E  0100               	movlb	0	; () banked
  6609  001370  15BD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6610  001372  0100               	movlb	0	; () banked
  6611  001374  6FC9               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6612  001376  0E00               	movlw	0
  6613  001378  0100               	movlb	0	; () banked
  6614  00137A  15BE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6615  00137C  0100               	movlb	0	; () banked
  6616  00137E  6FCA               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;CANlib.h: 495: tamp = tamp << 5;
  6620  001380  C0C7  F0C3         	movff	CANsendMessage@tamp,??_CANsendMessage
  6621  001384  C0C8  F0C4         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6622  001388  C0C9  F0C5         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6623  00138C  C0CA  F0C6         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6624  001390  0E05               	movlw	5
  6625  001392                     u5925:
  6626  001392  90D8               	bcf	status,0,c
  6627  001394  0100               	movlb	0	; () banked
  6628  001396  37C3               	rlcf	??_CANsendMessage& (0+255),f,b
  6629  001398  37C4               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6630  00139A  37C5               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6631  00139C  37C6               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6632  00139E  2EE8               	decfsz	wreg,f,c
  6633  0013A0  D7F8               	goto	u5925
  6634  0013A2  C0C3  F0C7         	movff	??_CANsendMessage,CANsendMessage@tamp
  6635  0013A6  C0C4  F0C8         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6636  0013AA  C0C5  F0C9         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6637  0013AE  C0C6  F0CA         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6638                           
  6639                           ; BSR set to: 0
  6640                           ;CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  6641  0013B2  010F               	movlb	15	; () banked
  6642  0013B4  5122               	movf	34,w,b	;volatile
  6643  0013B6  0B1F               	andlw	31
  6644  0013B8  010F               	movlb	15	; () banked
  6645  0013BA  6F22               	movwf	34,b	;volatile
  6646                           
  6647                           ; BSR set to: 15
  6648                           ;CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  6649  0013BC  C0C7  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  6650  0013C0                     l4680:
  6651                           
  6652                           ;CANlib.h: 498: }
  6653                           ;CANlib.h: 500: if (0b00000001 & flags)
  6654  0013C0  0100               	movlb	0	; () banked
  6655  0013C2  A1C2               	btfss	CANsendMessage@flags& (0+255),0,b
  6656  0013C4  D003               	goto	l400
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  6660  0013C6  010F               	movlb	15	; () banked
  6661  0013C8  8120               	bsf	32,0,b	;volatile
  6662  0013CA  D002               	goto	l401
  6663  0013CC                     l400:
  6664                           
  6665                           ; BSR set to: 0
  6666                           ;CANlib.h: 502: else
  6667                           ;CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  6668  0013CC  010F               	movlb	15	; () banked
  6669  0013CE  9120               	bcf	32,0,b	;volatile
  6670  0013D0                     l401:
  6671                           
  6672                           ; BSR set to: 15
  6673                           ;CANlib.h: 504: if (0b00000010 & flags)
  6674  0013D0  0100               	movlb	0	; () banked
  6675  0013D2  A3C2               	btfss	CANsendMessage@flags& (0+255),1,b
  6676  0013D4  D003               	goto	l402
  6677                           
  6678                           ; BSR set to: 0
  6679                           ;CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  6680  0013D6  010F               	movlb	15	; () banked
  6681  0013D8  8320               	bsf	32,1,b	;volatile
  6682  0013DA  D002               	goto	l4686
  6683  0013DC                     l402:
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;CANlib.h: 506: else
  6687                           ;CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  6688  0013DC  010F               	movlb	15	; () banked
  6689  0013DE  9320               	bcf	32,1,b	;volatile
  6690  0013E0                     l4686:
  6691                           
  6692                           ; BSR set to: 15
  6693                           ;CANlib.h: 509: TXB2D0 = data[0];
  6694  0013E0  C0BF  FFD9         	movff	CANsendMessage@data,fsr2l
  6695  0013E4  C0C0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6696  0013E8  50DF               	movf	indf2,w,c
  6697  0013EA  010F               	movlb	15	; () banked
  6698  0013EC  6F26               	movwf	38,b	;volatile
  6699                           
  6700                           ; BSR set to: 15
  6701                           ;CANlib.h: 510: TXB2D1 = data[1];
  6702  0013EE  0100               	movlb	0	; () banked
  6703  0013F0  EE20 F001          	lfsr	2,1
  6704  0013F4  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6705  0013F6  26D9               	addwf	fsr2l,f,c
  6706  0013F8  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6707  0013FA  22DA               	addwfc	fsr2h,f,c
  6708  0013FC  50DF               	movf	indf2,w,c
  6709  0013FE  010F               	movlb	15	; () banked
  6710  001400  6F27               	movwf	39,b	;volatile
  6711                           
  6712                           ; BSR set to: 15
  6713                           ;CANlib.h: 511: TXB2D2 = data[2];
  6714  001402  0100               	movlb	0	; () banked
  6715  001404  EE20 F002          	lfsr	2,2
  6716  001408  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6717  00140A  26D9               	addwf	fsr2l,f,c
  6718  00140C  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6719  00140E  22DA               	addwfc	fsr2h,f,c
  6720  001410  50DF               	movf	indf2,w,c
  6721  001412  010F               	movlb	15	; () banked
  6722  001414  6F28               	movwf	40,b	;volatile
  6723                           
  6724                           ; BSR set to: 15
  6725                           ;CANlib.h: 512: TXB2D3 = data[3];
  6726  001416  0100               	movlb	0	; () banked
  6727  001418  EE20 F003          	lfsr	2,3
  6728  00141C  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6729  00141E  26D9               	addwf	fsr2l,f,c
  6730  001420  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6731  001422  22DA               	addwfc	fsr2h,f,c
  6732  001424  50DF               	movf	indf2,w,c
  6733  001426  010F               	movlb	15	; () banked
  6734  001428  6F29               	movwf	41,b	;volatile
  6735                           
  6736                           ; BSR set to: 15
  6737                           ;CANlib.h: 513: TXB2D4 = data[4];
  6738  00142A  0100               	movlb	0	; () banked
  6739  00142C  EE20 F004          	lfsr	2,4
  6740  001430  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6741  001432  26D9               	addwf	fsr2l,f,c
  6742  001434  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6743  001436  22DA               	addwfc	fsr2h,f,c
  6744  001438  50DF               	movf	indf2,w,c
  6745  00143A  010F               	movlb	15	; () banked
  6746  00143C  6F2A               	movwf	42,b	;volatile
  6747                           
  6748                           ; BSR set to: 15
  6749                           ;CANlib.h: 514: TXB2D5 = data[5];
  6750  00143E  0100               	movlb	0	; () banked
  6751  001440  EE20 F005          	lfsr	2,5
  6752  001444  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6753  001446  26D9               	addwf	fsr2l,f,c
  6754  001448  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6755  00144A  22DA               	addwfc	fsr2h,f,c
  6756  00144C  50DF               	movf	indf2,w,c
  6757  00144E  010F               	movlb	15	; () banked
  6758  001450  6F2B               	movwf	43,b	;volatile
  6759                           
  6760                           ; BSR set to: 15
  6761                           ;CANlib.h: 515: TXB2D6 = data[6];
  6762  001452  0100               	movlb	0	; () banked
  6763  001454  EE20 F006          	lfsr	2,6
  6764  001458  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6765  00145A  26D9               	addwf	fsr2l,f,c
  6766  00145C  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6767  00145E  22DA               	addwfc	fsr2h,f,c
  6768  001460  50DF               	movf	indf2,w,c
  6769  001462  010F               	movlb	15	; () banked
  6770  001464  6F2C               	movwf	44,b	;volatile
  6771                           
  6772                           ; BSR set to: 15
  6773                           ;CANlib.h: 516: TXB2D7 = data[7];
  6774  001466  0100               	movlb	0	; () banked
  6775  001468  EE20 F007          	lfsr	2,7
  6776  00146C  51BF               	movf	CANsendMessage@data& (0+255),w,b
  6777  00146E  26D9               	addwf	fsr2l,f,c
  6778  001470  51C0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6779  001472  22DA               	addwfc	fsr2h,f,c
  6780  001474  50DF               	movf	indf2,w,c
  6781  001476  010F               	movlb	15	; () banked
  6782  001478  6F2D               	movwf	45,b	;volatile
  6783                           
  6784                           ; BSR set to: 15
  6785                           ;CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  6786  00147A  010F               	movlb	15	; () banked
  6787  00147C  8720               	bsf	32,3,b	;volatile
  6788                           
  6789                           ; BSR set to: 15
  6790                           ;CANlib.h: 520: return;
  6791  00147E  0012               	return	
  6792  001480                     __end_of_CANsendMessage:
  6793                           	opt stack 0
  6794                           tblptru	equ	0xFF8
  6795                           tblptrh	equ	0xFF7
  6796                           tblptrl	equ	0xFF6
  6797                           tablat	equ	0xFF5
  6798                           prodh	equ	0xFF4
  6799                           prodl	equ	0xFF3
  6800                           intcon	equ	0xFF2
  6801                           postinc0	equ	0xFEE
  6802                           wreg	equ	0xFE8
  6803                           postdec1	equ	0xFE5
  6804                           fsr1l	equ	0xFE1
  6805                           indf2	equ	0xFDF
  6806                           fsr2h	equ	0xFDA
  6807                           fsr2l	equ	0xFD9
  6808                           status	equ	0xFD8
  6809                           
  6810 ;; *************** function _CANisTxReady *****************
  6811 ;; Defined at:
  6812 ;;		line 1154 in file "CANlib.h"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;		None
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;		None
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  1    wreg      unsigned char 
  6819 ;; Registers used:
  6820 ;;		wreg, status,2
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6826 ;;      Params:         0       0       0       0
  6827 ;;      Locals:         0       1       0       0
  6828 ;;      Temps:          0       0       0       0
  6829 ;;      Totals:         0       1       0       0
  6830 ;;Total ram usage:        1 bytes
  6831 ;; Hardware stack levels used:    1
  6832 ;; Hardware stack levels required when called:    2
  6833 ;; This function calls:
  6834 ;;		Nothing
  6835 ;; This function is called by:
  6836 ;;		_main
  6837 ;;		_battery_measure
  6838 ;;		_send_data
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text12
  6843  0027C6                     __ptext12:
  6844                           	opt stack 0
  6845  0027C6                     _CANisTxReady:
  6846                           	opt stack 27
  6847                           
  6848                           ;CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TXREQ)
      +                          ;
  6849                           
  6850                           ; BSR set to: 15
  6851                           ;incstack = 0
  6852  0027C6  0E01               	movlw	1
  6853  0027C8  0100               	movlb	0	; () banked
  6854  0027CA  6FBB               	movwf	_CANisTxReady$2989& (0+255),b
  6855                           
  6856                           ; BSR set to: 0
  6857  0027CC  010F               	movlb	15	; () banked
  6858  0027CE  A740               	btfss	64,3,b	;volatile
  6859  0027D0  D009               	goto	l554
  6860                           
  6861                           ; BSR set to: 15
  6862  0027D2  010F               	movlb	15	; () banked
  6863  0027D4  A730               	btfss	48,3,b	;volatile
  6864  0027D6  D006               	goto	l554
  6865                           
  6866                           ; BSR set to: 15
  6867  0027D8  010F               	movlb	15	; () banked
  6868  0027DA  A720               	btfss	32,3,b	;volatile
  6869  0027DC  D003               	goto	l554
  6870                           
  6871                           ; BSR set to: 15
  6872  0027DE  0E00               	movlw	0
  6873  0027E0  0100               	movlb	0	; () banked
  6874  0027E2  6FBB               	movwf	_CANisTxReady$2989& (0+255),b
  6875  0027E4                     l554:
  6876  0027E4  0100               	movlb	0	; () banked
  6877  0027E6  51BB               	movf	_CANisTxReady$2989& (0+255),w,b
  6878  0027E8  0012               	return	
  6879  0027EA                     __end_of_CANisTxReady:
  6880                           	opt stack 0
  6881                           tblptru	equ	0xFF8
  6882                           tblptrh	equ	0xFF7
  6883                           tblptrl	equ	0xFF6
  6884                           tablat	equ	0xFF5
  6885                           prodh	equ	0xFF4
  6886                           prodl	equ	0xFF3
  6887                           intcon	equ	0xFF2
  6888                           postinc0	equ	0xFEE
  6889                           wreg	equ	0xFE8
  6890                           postdec1	equ	0xFE5
  6891                           fsr1l	equ	0xFE1
  6892                           indf2	equ	0xFDF
  6893                           fsr2h	equ	0xFDA
  6894                           fsr2l	equ	0xFD9
  6895                           status	equ	0xFD8
  6896                           
  6897 ;; *************** function _abs *****************
  6898 ;; Defined at:
  6899 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;  a               2    0[BANK0 ] int 
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;		None
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  2    0[BANK0 ] int 
  6906 ;; Registers used:
  6907 ;;		wreg, status,2, status,0
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6913 ;;      Params:         0       2       0       0
  6914 ;;      Locals:         0       0       0       0
  6915 ;;      Temps:          0       2       0       0
  6916 ;;      Totals:         0       4       0       0
  6917 ;;Total ram usage:        4 bytes
  6918 ;; Hardware stack levels used:    1
  6919 ;; Hardware stack levels required when called:    2
  6920 ;; This function calls:
  6921 ;;		Nothing
  6922 ;; This function is called by:
  6923 ;;		_main
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text13
  6928  00279A                     __ptext13:
  6929                           	opt stack 0
  6930  00279A                     _abs:
  6931                           	opt stack 28
  6932                           
  6933                           ; BSR set to: 0
  6934                           ;incstack = 0
  6935  00279A  0100               	movlb	0	; () banked
  6936  00279C  AFBC               	btfss	(abs@a+1)& (0+255),7,b
  6937  00279E  D00E               	goto	l814
  6938                           
  6939                           ; BSR set to: 0
  6940  0027A0  C0BB  F0BD         	movff	abs@a,??_abs
  6941  0027A4  C0BC  F0BE         	movff	abs@a+1,??_abs+1
  6942  0027A8  0100               	movlb	0	; () banked
  6943  0027AA  1FBD               	comf	??_abs& (0+255),f,b
  6944  0027AC  1FBE               	comf	(??_abs+1)& (0+255),f,b
  6945  0027AE  4BBD               	infsnz	??_abs& (0+255),f,b
  6946  0027B0  2BBE               	incf	(??_abs+1)& (0+255),f,b
  6947  0027B2  C0BD  F0BB         	movff	??_abs,?_abs
  6948  0027B6  C0BE  F0BC         	movff	??_abs+1,?_abs+1
  6949  0027BA  0012               	return	
  6950  0027BC                     l814:
  6951                           
  6952                           ; BSR set to: 0
  6953  0027BC  C0BB  F0BB         	movff	abs@a,?_abs
  6954  0027C0  C0BC  F0BC         	movff	abs@a+1,?_abs+1
  6955                           
  6956                           ; BSR set to: 0
  6957  0027C4  0012               	return		;funcret
  6958  0027C6                     __end_of_abs:
  6959                           	opt stack 0
  6960                           tblptru	equ	0xFF8
  6961                           tblptrh	equ	0xFF7
  6962                           tblptrl	equ	0xFF6
  6963                           tablat	equ	0xFF5
  6964                           prodh	equ	0xFF4
  6965                           prodl	equ	0xFF3
  6966                           intcon	equ	0xFF2
  6967                           postinc0	equ	0xFEE
  6968                           wreg	equ	0xFE8
  6969                           postdec1	equ	0xFE5
  6970                           fsr1l	equ	0xFE1
  6971                           indf2	equ	0xFDF
  6972                           fsr2h	equ	0xFDA
  6973                           fsr2l	equ	0xFD9
  6974                           status	equ	0xFD8
  6975                           
  6976 ;; *************** function ___lwdiv *****************
  6977 ;; Defined at:
  6978 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;  dividend        2    0[BANK0 ] unsigned int 
  6981 ;;  divisor         2    2[BANK0 ] unsigned int 
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;  quotient        2    5[BANK0 ] unsigned int 
  6984 ;;  counter         1    4[BANK0 ] unsigned char 
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  2    0[BANK0 ] unsigned int 
  6987 ;; Registers used:
  6988 ;;		wreg, status,2, status,0
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6994 ;;      Params:         0       4       0       0
  6995 ;;      Locals:         0       3       0       0
  6996 ;;      Temps:          0       0       0       0
  6997 ;;      Totals:         0       7       0       0
  6998 ;;Total ram usage:        7 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    2
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		_main
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           	psect	text14
  7009  002594                     __ptext14:
  7010                           	opt stack 0
  7011  002594                     ___lwdiv:
  7012                           	opt stack 28
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;incstack = 0
  7016  002594  0E00               	movlw	0
  7017  002596  0100               	movlb	0	; () banked
  7018  002598  6FC1               	movwf	(___lwdiv@quotient+1)& (0+255),b
  7019  00259A  0E00               	movlw	0
  7020  00259C  6FC0               	movwf	___lwdiv@quotient& (0+255),b
  7021                           
  7022                           ; BSR set to: 0
  7023  00259E  0100               	movlb	0	; () banked
  7024  0025A0  51BD               	movf	___lwdiv@divisor& (0+255),w,b
  7025  0025A2  0100               	movlb	0	; () banked
  7026  0025A4  11BE               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  7027  0025A6  B4D8               	btfsc	status,2,c
  7028  0025A8  D02C               	goto	l1171
  7029                           
  7030                           ; BSR set to: 0
  7031  0025AA  0E01               	movlw	1
  7032  0025AC  0100               	movlb	0	; () banked
  7033  0025AE  6FBF               	movwf	___lwdiv@counter& (0+255),b
  7034  0025B0  D006               	goto	l4922
  7035  0025B2                     l4920:
  7036                           
  7037                           ; BSR set to: 0
  7038  0025B2  0100               	movlb	0	; () banked
  7039  0025B4  90D8               	bcf	status,0,c
  7040  0025B6  37BD               	rlcf	___lwdiv@divisor& (0+255),f,b
  7041  0025B8  37BE               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  7042  0025BA  0100               	movlb	0	; () banked
  7043  0025BC  2BBF               	incf	___lwdiv@counter& (0+255),f,b
  7044  0025BE                     l4922:
  7045                           
  7046                           ; BSR set to: 0
  7047  0025BE  0100               	movlb	0	; () banked
  7048  0025C0  AFBE               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  7049  0025C2  D7F7               	goto	l4920
  7050  0025C4                     l4924:
  7051                           
  7052                           ; BSR set to: 0
  7053  0025C4  0100               	movlb	0	; () banked
  7054  0025C6  90D8               	bcf	status,0,c
  7055  0025C8  37C0               	rlcf	___lwdiv@quotient& (0+255),f,b
  7056  0025CA  37C1               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  7057                           
  7058                           ; BSR set to: 0
  7059  0025CC  0100               	movlb	0	; () banked
  7060  0025CE  51BD               	movf	___lwdiv@divisor& (0+255),w,b
  7061  0025D0  0100               	movlb	0	; () banked
  7062  0025D2  5DBB               	subwf	___lwdiv@dividend& (0+255),w,b
  7063  0025D4  0100               	movlb	0	; () banked
  7064  0025D6  51BE               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7065  0025D8  0100               	movlb	0	; () banked
  7066  0025DA  59BC               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  7067  0025DC  A0D8               	btfss	status,0,c
  7068  0025DE  D00A               	goto	l4932
  7069                           
  7070                           ; BSR set to: 0
  7071  0025E0  0100               	movlb	0	; () banked
  7072  0025E2  51BD               	movf	___lwdiv@divisor& (0+255),w,b
  7073  0025E4  0100               	movlb	0	; () banked
  7074  0025E6  5FBB               	subwf	___lwdiv@dividend& (0+255),f,b
  7075  0025E8  0100               	movlb	0	; () banked
  7076  0025EA  51BE               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7077  0025EC  0100               	movlb	0	; () banked
  7078  0025EE  5BBC               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7079                           
  7080                           ; BSR set to: 0
  7081  0025F0  0100               	movlb	0	; () banked
  7082  0025F2  81C0               	bsf	___lwdiv@quotient& (0+255),0,b
  7083  0025F4                     l4932:
  7084                           
  7085                           ; BSR set to: 0
  7086  0025F4  0100               	movlb	0	; () banked
  7087  0025F6  90D8               	bcf	status,0,c
  7088  0025F8  33BE               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7089  0025FA  33BD               	rrcf	___lwdiv@divisor& (0+255),f,b
  7090                           
  7091                           ; BSR set to: 0
  7092  0025FC  0100               	movlb	0	; () banked
  7093  0025FE  2FBF               	decfsz	___lwdiv@counter& (0+255),f,b
  7094  002600  D7E1               	goto	l4924
  7095  002602                     l1171:
  7096                           
  7097                           ; BSR set to: 0
  7098  002602  C0C0  F0BB         	movff	___lwdiv@quotient,?___lwdiv
  7099  002606  C0C1  F0BC         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7100                           
  7101                           ; BSR set to: 0
  7102  00260A  0012               	return		;funcret
  7103  00260C                     __end_of___lwdiv:
  7104                           	opt stack 0
  7105                           tblptru	equ	0xFF8
  7106                           tblptrh	equ	0xFF7
  7107                           tblptrl	equ	0xFF6
  7108                           tablat	equ	0xFF5
  7109                           prodh	equ	0xFF4
  7110                           prodl	equ	0xFF3
  7111                           intcon	equ	0xFF2
  7112                           postinc0	equ	0xFEE
  7113                           wreg	equ	0xFE8
  7114                           postdec1	equ	0xFE5
  7115                           fsr1l	equ	0xFE1
  7116                           indf2	equ	0xFDF
  7117                           fsr2h	equ	0xFDA
  7118                           fsr2l	equ	0xFD9
  7119                           status	equ	0xFD8
  7120                           
  7121 ;; *************** function _SetDCEPWM1 *****************
  7122 ;; Defined at:
  7123 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  7126 ;; Auto vars:     Size  Location     Type
  7127 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  7128 ;; Return value:  Size  Location     Type
  7129 ;;		None               void
  7130 ;; Registers used:
  7131 ;;		wreg, status,2, status,0
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7137 ;;      Params:         0       2       0       0
  7138 ;;      Locals:         0       2       0       0
  7139 ;;      Temps:          0       2       0       0
  7140 ;;      Totals:         0       6       0       0
  7141 ;;Total ram usage:        6 bytes
  7142 ;; Hardware stack levels used:    1
  7143 ;; Hardware stack levels required when called:    2
  7144 ;; This function calls:
  7145 ;;		Nothing
  7146 ;; This function is called by:
  7147 ;;		_main
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           	psect	text15
  7152  0026A8                     __ptext15:
  7153                           	opt stack 0
  7154  0026A8                     _SetDCEPWM1:
  7155                           	opt stack 28
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;incstack = 0
  7159  0026A8  C0BB  F0BD         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  7160  0026AC  C0BC  F0BE         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  7161  0026B0  0E06               	movlw	6
  7162  0026B2                     u6115:
  7163  0026B2  90D8               	bcf	status,0,c
  7164  0026B4  0100               	movlb	0	; () banked
  7165  0026B6  37BD               	rlcf	??_SetDCEPWM1& (0+255),f,b
  7166  0026B8  37BE               	rlcf	(??_SetDCEPWM1+1)& (0+255),f,b
  7167  0026BA  2EE8               	decfsz	wreg,f,c
  7168  0026BC  D7FA               	goto	u6115
  7169  0026BE  C0BD  F0BF         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  7170  0026C2  C0BE  F0C0         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  7171                           
  7172                           ; BSR set to: 0
  7173  0026C6  C0C0  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  7174  0026CA  C0BF  F0BD         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  7175  0026CE  0100               	movlb	0	; () banked
  7176  0026D0  90D8               	bcf	status,0,c
  7177  0026D2  33BD               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7178  0026D4  0100               	movlb	0	; () banked
  7179  0026D6  90D8               	bcf	status,0,c
  7180  0026D8  33BD               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7181  0026DA  0E30               	movlw	48
  7182  0026DC  0100               	movlb	0	; () banked
  7183  0026DE  17BD               	andwf	??_SetDCEPWM1& (0+255),f,b
  7184  0026E0  50BA               	movf	4026,w,c	;volatile
  7185  0026E2  0BCF               	andlw	207
  7186  0026E4  0100               	movlb	0	; () banked
  7187  0026E6  11BD               	iorwf	??_SetDCEPWM1& (0+255),w,b
  7188  0026E8  6EBA               	movwf	4026,c	;volatile
  7189                           
  7190                           ; BSR set to: 0
  7191  0026EA  0012               	return		;funcret
  7192  0026EC                     __end_of_SetDCEPWM1:
  7193                           	opt stack 0
  7194                           tblptru	equ	0xFF8
  7195                           tblptrh	equ	0xFF7
  7196                           tblptrl	equ	0xFF6
  7197                           tablat	equ	0xFF5
  7198                           prodh	equ	0xFF4
  7199                           prodl	equ	0xFF3
  7200                           intcon	equ	0xFF2
  7201                           postinc0	equ	0xFEE
  7202                           wreg	equ	0xFE8
  7203                           postdec1	equ	0xFE5
  7204                           fsr1l	equ	0xFE1
  7205                           indf2	equ	0xFDF
  7206                           fsr2h	equ	0xFDA
  7207                           fsr2l	equ	0xFD9
  7208                           status	equ	0xFD8
  7209                           
  7210 ;; *************** function _OpenTimer2 *****************
  7211 ;; Defined at:
  7212 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;  config          1    wreg     unsigned char 
  7215 ;; Auto vars:     Size  Location     Type
  7216 ;;  config          1    0[BANK0 ] unsigned char 
  7217 ;; Return value:  Size  Location     Type
  7218 ;;		None               void
  7219 ;; Registers used:
  7220 ;;		wreg, status,2, status,0
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7226 ;;      Params:         0       0       0       0
  7227 ;;      Locals:         0       1       0       0
  7228 ;;      Temps:          0       0       0       0
  7229 ;;      Totals:         0       1       0       0
  7230 ;;Total ram usage:        1 bytes
  7231 ;; Hardware stack levels used:    1
  7232 ;; Hardware stack levels required when called:    2
  7233 ;; This function calls:
  7234 ;;		Nothing
  7235 ;; This function is called by:
  7236 ;;		_main
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           	psect	text16
  7241  0027EA                     __ptext16:
  7242                           	opt stack 0
  7243  0027EA                     _OpenTimer2:
  7244                           	opt stack 28
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;incstack = 0
  7248                           ;OpenTimer2@config stored from wreg
  7249  0027EA  0100               	movlb	0	; () banked
  7250  0027EC  6FBB               	movwf	OpenTimer2@config& (0+255),b
  7251  0027EE  0100               	movlb	0	; () banked
  7252  0027F0  51BB               	movf	OpenTimer2@config& (0+255),w,b
  7253  0027F2  0BFB               	andlw	251
  7254  0027F4  6ECA               	movwf	4042,c	;volatile
  7255                           
  7256                           ; BSR set to: 0
  7257  0027F6  0E00               	movlw	0
  7258  0027F8  6ECC               	movwf	4044,c	;volatile
  7259                           
  7260                           ; BSR set to: 0
  7261  0027FA  929E               	bcf	3998,1,c	;volatile
  7262                           
  7263                           ; BSR set to: 0
  7264  0027FC  0100               	movlb	0	; () banked
  7265  0027FE  AFBB               	btfss	OpenTimer2@config& (0+255),7,b
  7266  002800  D002               	goto	l762
  7267                           
  7268                           ; BSR set to: 0
  7269  002802  829D               	bsf	3997,1,c	;volatile
  7270  002804  D001               	goto	l763
  7271  002806                     l762:
  7272                           
  7273                           ; BSR set to: 0
  7274  002806  929D               	bcf	3997,1,c	;volatile
  7275  002808                     l763:
  7276                           
  7277                           ; BSR set to: 0
  7278  002808  84CA               	bsf	4042,2,c	;volatile
  7279                           
  7280                           ; BSR set to: 0
  7281  00280A  0012               	return		;funcret
  7282  00280C                     __end_of_OpenTimer2:
  7283                           	opt stack 0
  7284                           tblptru	equ	0xFF8
  7285                           tblptrh	equ	0xFF7
  7286                           tblptrl	equ	0xFF6
  7287                           tablat	equ	0xFF5
  7288                           prodh	equ	0xFF4
  7289                           prodl	equ	0xFF3
  7290                           intcon	equ	0xFF2
  7291                           postinc0	equ	0xFEE
  7292                           wreg	equ	0xFE8
  7293                           postdec1	equ	0xFE5
  7294                           fsr1l	equ	0xFE1
  7295                           indf2	equ	0xFDF
  7296                           fsr2h	equ	0xFDA
  7297                           fsr2l	equ	0xFD9
  7298                           status	equ	0xFD8
  7299                           
  7300 ;; *************** function _OpenEPWM1 *****************
  7301 ;; Defined at:
  7302 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;  period          1    wreg     unsigned char 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;  period          1    0[BANK0 ] unsigned char 
  7307 ;; Return value:  Size  Location     Type
  7308 ;;		None               void
  7309 ;; Registers used:
  7310 ;;		wreg, status,2
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7316 ;;      Params:         0       0       0       0
  7317 ;;      Locals:         0       1       0       0
  7318 ;;      Temps:          0       0       0       0
  7319 ;;      Totals:         0       1       0       0
  7320 ;;Total ram usage:        1 bytes
  7321 ;; Hardware stack levels used:    1
  7322 ;; Hardware stack levels required when called:    2
  7323 ;; This function calls:
  7324 ;;		Nothing
  7325 ;; This function is called by:
  7326 ;;		_main
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330                           	psect	text17
  7331  002838                     __ptext17:
  7332                           	opt stack 0
  7333  002838                     _OpenEPWM1:
  7334                           	opt stack 28
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;incstack = 0
  7338                           ;OpenEPWM1@period stored from wreg
  7339  002838  0100               	movlb	0	; () banked
  7340  00283A  6FBB               	movwf	OpenEPWM1@period& (0+255),b
  7341  00283C  0E0C               	movlw	12
  7342  00283E  6EBA               	movwf	4026,c	;volatile
  7343  002840  94CA               	bcf	4042,2,c	;volatile
  7344  002842  C0BB  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  7345  002846  84CA               	bsf	4042,2,c	;volatile
  7346  002848  0012               	return		;funcret
  7347  00284A                     __end_of_OpenEPWM1:
  7348                           	opt stack 0
  7349                           tblptru	equ	0xFF8
  7350                           tblptrh	equ	0xFF7
  7351                           tblptrl	equ	0xFF6
  7352                           tablat	equ	0xFF5
  7353                           prodh	equ	0xFF4
  7354                           prodl	equ	0xFF3
  7355                           intcon	equ	0xFF2
  7356                           postinc0	equ	0xFEE
  7357                           wreg	equ	0xFE8
  7358                           postdec1	equ	0xFE5
  7359                           fsr1l	equ	0xFE1
  7360                           indf2	equ	0xFDF
  7361                           fsr2h	equ	0xFDA
  7362                           fsr2l	equ	0xFD9
  7363                           status	equ	0xFD8
  7364                           
  7365 ;; *************** function _ISR_bassa *****************
  7366 ;; Defined at:
  7367 ;;		line 94 in file "motore.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;		None
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;		None
  7372 ;; Return value:  Size  Location     Type
  7373 ;;		None               void
  7374 ;; Registers used:
  7375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 0/0
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7381 ;;      Params:         0       0       0       0
  7382 ;;      Locals:         0       0       0       0
  7383 ;;      Temps:         19       0       0       0
  7384 ;;      Totals:        19       0       0       0
  7385 ;;Total ram usage:       19 bytes
  7386 ;; Hardware stack levels used:    1
  7387 ;; Hardware stack levels required when called:    1
  7388 ;; This function calls:
  7389 ;;		_CANisRxReady
  7390 ;;		_CANreceiveMessage
  7391 ;;		i1_SetOutputEPWM1
  7392 ;; This function is called by:
  7393 ;;		Interrupt level 1
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           
  7397                           	psect	intcodelo
  7398  000018                     __pintcodelo:
  7399                           	opt stack 0
  7400  000018                     _ISR_bassa:
  7401                           	opt stack 26
  7402                           
  7403                           ;incstack = 0
  7404  000018  8043               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7405  00001A  CFD8 F00F          	movff	status,??_ISR_bassa+2
  7406  00001E  CFE8 F010          	movff	wreg,??_ISR_bassa+3
  7407  000022  CFE0 F011          	movff	bsr,??_ISR_bassa+4
  7408  000026  CFFA F012          	movff	pclath,??_ISR_bassa+5
  7409  00002A  CFFB F013          	movff	pclatu,??_ISR_bassa+6
  7410  00002E  CFE9 F014          	movff	fsr0l,??_ISR_bassa+7
  7411  000032  CFEA F015          	movff	fsr0h,??_ISR_bassa+8
  7412  000036  CFE1 F016          	movff	fsr1l,??_ISR_bassa+9
  7413  00003A  CFE2 F017          	movff	fsr1h,??_ISR_bassa+10
  7414  00003E  CFD9 F018          	movff	fsr2l,??_ISR_bassa+11
  7415  000042  CFDA F019          	movff	fsr2h,??_ISR_bassa+12
  7416  000046  CFF3 F01A          	movff	prodl,??_ISR_bassa+13
  7417  00004A  CFF4 F01B          	movff	prodh,??_ISR_bassa+14
  7418  00004E  CFF6 F01C          	movff	tblptrl,??_ISR_bassa+15
  7419  000052  CFF7 F01D          	movff	tblptrh,??_ISR_bassa+16
  7420  000056  CFF8 F01E          	movff	tblptru,??_ISR_bassa+17
  7421  00005A  CFF5 F01F          	movff	tablat,??_ISR_bassa+18
  7422                           
  7423                           ;motore.c: 95: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7424  00005E  A0A4               	btfss	4004,0,c	;volatile
  7425  000060  B2A4               	btfsc	4004,1,c	;volatile
  7426  000062  D001               	goto	i1l3810
  7427  000064  D091               	goto	i1l656
  7428  000066                     i1l3810:
  7429                           
  7430                           ;motore.c: 96: PORTCbits.RC1 = ~PORTCbits.RC1;
  7431  000066  A282               	btfss	3970,1,c	;volatile
  7432  000068  D002               	goto	i1u424_20
  7433  00006A  0E01               	movlw	1
  7434  00006C  D001               	goto	i1u424_26
  7435  00006E                     i1u424_20:
  7436  00006E  0E00               	movlw	0
  7437  000070                     i1u424_26:
  7438  000070  0AFF               	xorlw	255
  7439  000072  6E0D               	movwf	??_ISR_bassa& (0+255),c
  7440  000074  460D               	rlncf	??_ISR_bassa,f,c
  7441  000076  5082               	movf	3970,w,c	;volatile
  7442  000078  180D               	xorwf	??_ISR_bassa,w,c
  7443  00007A  0BFD               	andlw	-3
  7444  00007C  180D               	xorwf	??_ISR_bassa,w,c
  7445  00007E  6E82               	movwf	3970,c	;volatile
  7446                           
  7447                           ;motore.c: 97: if (CANisRxReady()) {
  7448  000080  EC11  F014         	call	_CANisRxReady	;wreg free
  7449  000084  0900               	iorlw	0
  7450  000086  B4D8               	btfsc	status,2,c
  7451  000088  D07D               	goto	i1l659
  7452                           
  7453                           ;motore.c: 98: CANreceiveMessage(&msg);
  7454  00008A  0E8C               	movlw	low _msg
  7455  00008C  6E01               	movwf	CANreceiveMessage@msg,c
  7456  00008E  0E00               	movlw	high _msg
  7457  000090  6E02               	movwf	CANreceiveMessage@msg+1,c
  7458  000092  EC40  F00A         	call	_CANreceiveMessage	;wreg free
  7459                           
  7460                           ;motore.c: 99: if (msg.identifier == 0b00000000000000000000000000011) {
  7461  000096  0E03               	movlw	3
  7462  000098  0100               	movlb	0	; () banked
  7463  00009A  198C               	xorwf	_msg& (0+255),w,b
  7464  00009C  0100               	movlb	0	; () banked
  7465  00009E  118D               	iorwf	(_msg+1)& (0+255),w,b
  7466  0000A0  0100               	movlb	0	; () banked
  7467  0000A2  118E               	iorwf	(_msg+2)& (0+255),w,b
  7468  0000A4  0100               	movlb	0	; () banked
  7469  0000A6  118F               	iorwf	(_msg+3)& (0+255),w,b
  7470  0000A8  A4D8               	btfss	status,2,c
  7471  0000AA  D01B               	goto	i1l3830
  7472                           
  7473                           ; BSR set to: 0
  7474                           ;motore.c: 101: requestSpeed = msg.data[0];
  7475  0000AC  0100               	movlb	0	; () banked
  7476  0000AE  5190               	movf	(_msg+4)& (0+255),w,b
  7477  0000B0  6E24               	movwf	_requestSpeed,c	;volatile
  7478  0000B2  6A25               	clrf	_requestSpeed+1,c	;volatile
  7479  0000B4  6A26               	clrf	_requestSpeed+2,c	;volatile
  7480  0000B6  6A27               	clrf	_requestSpeed+3,c	;volatile
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;motore.c: 102: dir = msg.data[1];
  7484  0000B8  C091  F040         	movff	_msg+5,_dir	;volatile
  7485  0000BC  6A41               	clrf	_dir+1,c	;volatile
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;motore.c: 103: if (dir == 1) {
  7489  0000BE  0440               	decf	_dir,w,c	;volatile
  7490  0000C0  1041               	iorwf	_dir+1,w,c	;volatile
  7491  0000C2  A4D8               	btfss	status,2,c
  7492  0000C4  D005               	goto	i1l3826
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;motore.c: 104: SetOutputEPWM1(0b01111111, 0b11111100);
  7496  0000C6  0EFC               	movlw	252
  7497  0000C8  6E01               	movwf	i1SetOutputEPWM1@outputmode,c
  7498  0000CA  0E7F               	movlw	127
  7499  0000CC  EC76  F013         	call	i1_SetOutputEPWM1
  7500  0000D0                     i1l3826:
  7501                           
  7502                           ;motore.c: 105: }
  7503                           ;motore.c: 106: if (dir == 0) {
  7504  0000D0  5040               	movf	_dir,w,c	;volatile
  7505  0000D2  1041               	iorwf	_dir+1,w,c	;volatile
  7506  0000D4  A4D8               	btfss	status,2,c
  7507  0000D6  D005               	goto	i1l3830
  7508                           
  7509                           ;motore.c: 107: SetOutputEPWM1(0b11111111, 0b11111100);
  7510  0000D8  0EFC               	movlw	252
  7511  0000DA  6E01               	movwf	i1SetOutputEPWM1@outputmode,c
  7512  0000DC  0EFF               	movlw	255
  7513  0000DE  EC76  F013         	call	i1_SetOutputEPWM1
  7514  0000E2                     i1l3830:
  7515                           
  7516                           ;motore.c: 108: }
  7517                           ;motore.c: 112: }
  7518                           ;motore.c: 113: if (msg.identifier == 0b00000000000000000000000000001) {
  7519  0000E2  0100               	movlb	0	; () banked
  7520  0000E4  058C               	decf	_msg& (0+255),w,b
  7521  0000E6  0100               	movlb	0	; () banked
  7522  0000E8  118D               	iorwf	(_msg+1)& (0+255),w,b
  7523  0000EA  0100               	movlb	0	; () banked
  7524  0000EC  118E               	iorwf	(_msg+2)& (0+255),w,b
  7525  0000EE  0100               	movlb	0	; () banked
  7526  0000F0  118F               	iorwf	(_msg+3)& (0+255),w,b
  7527  0000F2  A4D8               	btfss	status,2,c
  7528  0000F4  D009               	goto	i1l3836
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;motore.c: 114: requestSpeed = 0;
  7532  0000F6  0E00               	movlw	0
  7533  0000F8  6E24               	movwf	_requestSpeed,c	;volatile
  7534  0000FA  0E00               	movlw	0
  7535  0000FC  6E25               	movwf	_requestSpeed+1,c	;volatile
  7536  0000FE  0E00               	movlw	0
  7537  000100  6E26               	movwf	_requestSpeed+2,c	;volatile
  7538  000102  0E00               	movlw	0
  7539  000104  6E27               	movwf	_requestSpeed+3,c	;volatile
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;motore.c: 115: PORTAbits.RA1 = 1;
  7543  000106  8280               	bsf	3968,1,c	;volatile
  7544  000108                     i1l3836:
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;motore.c: 116: }
  7548                           ;motore.c: 117: if (msg.identifier == 0b00000000000000000000000000110) {
  7549  000108  0E06               	movlw	6
  7550  00010A  0100               	movlb	0	; () banked
  7551  00010C  198C               	xorwf	_msg& (0+255),w,b
  7552  00010E  0100               	movlb	0	; () banked
  7553  000110  118D               	iorwf	(_msg+1)& (0+255),w,b
  7554  000112  0100               	movlb	0	; () banked
  7555  000114  118E               	iorwf	(_msg+2)& (0+255),w,b
  7556  000116  0100               	movlb	0	; () banked
  7557  000118  118F               	iorwf	(_msg+3)& (0+255),w,b
  7558  00011A  A4D8               	btfss	status,2,c
  7559  00011C  D015               	goto	i1l3846
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;motore.c: 130: left_speed = msg.data[1];
  7563  00011E  C091  F030         	movff	_msg+5,_left_speed	;volatile
  7564  000122  6A31               	clrf	_left_speed+1,c	;volatile
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;motore.c: 131: left_speed = ((left_speed << 8) | (msg.data[0]));
  7568  000124  5030               	movf	_left_speed,w,c	;volatile
  7569  000126  6E0D               	movwf	??_ISR_bassa& (0+255),c
  7570  000128  0100               	movlb	0	; () banked
  7571  00012A  5190               	movf	(_msg+4)& (0+255),w,b
  7572  00012C  6E30               	movwf	_left_speed,c	;volatile
  7573  00012E  C00D  F031         	movff	??_ISR_bassa,_left_speed+1	;volatile
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;motore.c: 132: right_speed = msg.data[3];
  7577  000132  C093  F034         	movff	_msg+7,_right_speed	;volatile
  7578  000136  6A35               	clrf	_right_speed+1,c	;volatile
  7579                           
  7580                           ;motore.c: 133: right_speed = ((right_speed << 8) | (msg.data[2]));
  7581  000138  5034               	movf	_right_speed,w,c	;volatile
  7582  00013A  6E0D               	movwf	??_ISR_bassa& (0+255),c
  7583  00013C  0100               	movlb	0	; () banked
  7584  00013E  5192               	movf	(_msg+6)& (0+255),w,b
  7585  000140  6E34               	movwf	_right_speed,c	;volatile
  7586  000142  C00D  F035         	movff	??_ISR_bassa,_right_speed+1	;volatile
  7587                           
  7588                           ; BSR set to: 0
  7589                           ;motore.c: 134: speed_fetched = 1;
  7590  000146  803B               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  7591  000148                     i1l3846:
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;motore.c: 135: }
  7595                           ;motore.c: 136: if (msg.identifier == 0b00000000000000000000000000010) {
  7596  000148  0E02               	movlw	2
  7597  00014A  0100               	movlb	0	; () banked
  7598  00014C  198C               	xorwf	_msg& (0+255),w,b
  7599  00014E  0100               	movlb	0	; () banked
  7600  000150  118D               	iorwf	(_msg+1)& (0+255),w,b
  7601  000152  0100               	movlb	0	; () banked
  7602  000154  118E               	iorwf	(_msg+2)& (0+255),w,b
  7603  000156  0100               	movlb	0	; () banked
  7604  000158  118F               	iorwf	(_msg+3)& (0+255),w,b
  7605  00015A  A4D8               	btfss	status,2,c
  7606  00015C  D013               	goto	i1l659
  7607                           
  7608                           ; BSR set to: 0
  7609                           ;motore.c: 138: if (msg.data[0] == 0x01) {
  7610  00015E  0100               	movlb	0	; () banked
  7611  000160  0590               	decf	(_msg+4)& (0+255),w,b
  7612  000162  A4D8               	btfss	status,2,c
  7613  000164  D002               	goto	i1l3852
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;motore.c: 139: centralina_abs = 1;
  7617  000166  823A               	bsf	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
  7618                           
  7619                           ;motore.c: 140: PORTCbits.RC5 = 0;
  7620  000168  9A82               	bcf	3970,5,c	;volatile
  7621  00016A                     i1l3852:
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;motore.c: 141: }
  7625                           ;motore.c: 142: if (msg.data[0] == 0x02) {
  7626  00016A  0E02               	movlw	2
  7627  00016C  0100               	movlb	0	; () banked
  7628  00016E  1990               	xorwf	(_msg+4)& (0+255),w,b
  7629  000170  A4D8               	btfss	status,2,c
  7630  000172  D003               	goto	i1l3856
  7631                           
  7632                           ; BSR set to: 0
  7633                           ;motore.c: 143: centralina_sterzo = 1;
  7634  000174  863A               	bsf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
  7635                           
  7636                           ;motore.c: 144: centralina_comando = 1;
  7637  000176  843A               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  7638                           
  7639                           ;motore.c: 145: PORTCbits.RC4 = 0;
  7640  000178  9882               	bcf	3970,4,c	;volatile
  7641  00017A                     i1l3856:
  7642                           
  7643                           ; BSR set to: 0
  7644                           ;motore.c: 146: }
  7645                           ;motore.c: 147: if (msg.data[0] == 0x03) {
  7646  00017A  0E03               	movlw	3
  7647  00017C  0100               	movlb	0	; () banked
  7648  00017E  1990               	xorwf	(_msg+4)& (0+255),w,b
  7649  000180  B4D8               	btfsc	status,2,c
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;motore.c: 148: centralina_comando = 1;
  7653  000182  843A               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  7654  000184                     i1l659:
  7655                           
  7656                           ;motore.c: 149: }
  7657                           ;motore.c: 151: }
  7658                           ;motore.c: 152: }
  7659                           ;motore.c: 153: PIR3bits.RXB0IF = 0;
  7660  000184  90A4               	bcf	4004,0,c	;volatile
  7661                           
  7662                           ;motore.c: 154: PIR3bits.RXB1IF = 0;
  7663  000186  92A4               	bcf	4004,1,c	;volatile
  7664  000188                     i1l656:
  7665                           
  7666                           ;motore.c: 155: }
  7667                           ;motore.c: 156: if (PIR2bits.TMR3IF) {
  7668  000188  A2A1               	btfss	4001,1,c	;volatile
  7669  00018A  D00B               	goto	i1l670
  7670                           
  7671                           ;motore.c: 157: timeCounter++;
  7672  00018C  0E01               	movlw	1
  7673  00018E  2628               	addwf	_timeCounter,f,c	;volatile
  7674  000190  0E00               	movlw	0
  7675  000192  2229               	addwfc	_timeCounter+1,f,c	;volatile
  7676  000194  222A               	addwfc	_timeCounter+2,f,c	;volatile
  7677  000196  222B               	addwfc	_timeCounter+3,f,c	;volatile
  7678                           
  7679                           ;motore.c: 158: TMR3H = 0x63;
  7680  000198  0E63               	movlw	99
  7681  00019A  6EB3               	movwf	4019,c	;volatile
  7682                           
  7683                           ;motore.c: 159: TMR3L = 0xC0;
  7684  00019C  0EC0               	movlw	192
  7685  00019E  6EB2               	movwf	4018,c	;volatile
  7686                           
  7687                           ;motore.c: 160: PIR2bits.TMR3IF = 0;
  7688  0001A0  92A1               	bcf	4001,1,c	;volatile
  7689  0001A2                     i1l670:
  7690  0001A2  C01F  FFF5         	movff	??_ISR_bassa+18,tablat
  7691  0001A6  C01E  FFF8         	movff	??_ISR_bassa+17,tblptru
  7692  0001AA  C01D  FFF7         	movff	??_ISR_bassa+16,tblptrh
  7693  0001AE  C01C  FFF6         	movff	??_ISR_bassa+15,tblptrl
  7694  0001B2  C01B  FFF4         	movff	??_ISR_bassa+14,prodh
  7695  0001B6  C01A  FFF3         	movff	??_ISR_bassa+13,prodl
  7696  0001BA  C019  FFDA         	movff	??_ISR_bassa+12,fsr2h
  7697  0001BE  C018  FFD9         	movff	??_ISR_bassa+11,fsr2l
  7698  0001C2  C017  FFE2         	movff	??_ISR_bassa+10,fsr1h
  7699  0001C6  C016  FFE1         	movff	??_ISR_bassa+9,fsr1l
  7700  0001CA  C015  FFEA         	movff	??_ISR_bassa+8,fsr0h
  7701  0001CE  C014  FFE9         	movff	??_ISR_bassa+7,fsr0l
  7702  0001D2  C013  FFFB         	movff	??_ISR_bassa+6,pclatu
  7703  0001D6  C012  FFFA         	movff	??_ISR_bassa+5,pclath
  7704  0001DA  C011  FFE0         	movff	??_ISR_bassa+4,bsr
  7705  0001DE  C010  FFE8         	movff	??_ISR_bassa+3,wreg
  7706  0001E2  C00F  FFD8         	movff	??_ISR_bassa+2,status
  7707  0001E6  9043               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7708  0001E8  0010               	retfie	
  7709  0001EA                     __end_of_ISR_bassa:
  7710                           	opt stack 0
  7711                           pclatu	equ	0xFFB
  7712                           pclath	equ	0xFFA
  7713                           tblptru	equ	0xFF8
  7714                           tblptrh	equ	0xFF7
  7715                           tblptrl	equ	0xFF6
  7716                           tablat	equ	0xFF5
  7717                           prodh	equ	0xFF4
  7718                           prodl	equ	0xFF3
  7719                           intcon	equ	0xFF2
  7720                           postinc0	equ	0xFEE
  7721                           fsr0h	equ	0xFEA
  7722                           fsr0l	equ	0xFE9
  7723                           wreg	equ	0xFE8
  7724                           postdec1	equ	0xFE5
  7725                           fsr1h	equ	0xFE2
  7726                           fsr1l	equ	0xFE1
  7727                           bsr	equ	0xFE0
  7728                           indf2	equ	0xFDF
  7729                           fsr2h	equ	0xFDA
  7730                           fsr2l	equ	0xFD9
  7731                           status	equ	0xFD8
  7732                           
  7733 ;; *************** function i1_SetOutputEPWM1 *****************
  7734 ;; Defined at:
  7735 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  outputconfig    1    wreg     unsigned char 
  7738 ;;  outputmode      1    0[COMRAM] unsigned char 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;  outputconfig    1    1[COMRAM] unsigned char 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;		None               void
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, status,0
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7750 ;;      Params:         1       0       0       0
  7751 ;;      Locals:         1       0       0       0
  7752 ;;      Temps:          0       0       0       0
  7753 ;;      Totals:         2       0       0       0
  7754 ;;Total ram usage:        2 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; This function calls:
  7757 ;;		Nothing
  7758 ;; This function is called by:
  7759 ;;		_ISR_bassa
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text19
  7764  0026EC                     __ptext19:
  7765                           	opt stack 0
  7766  0026EC                     i1_SetOutputEPWM1:
  7767                           	opt stack 26
  7768                           
  7769                           ;incstack = 0
  7770                           ;i1SetOutputEPWM1@outputconfig stored from wreg
  7771  0026EC  6E02               	movwf	i1SetOutputEPWM1@outputconfig,c
  7772  0026EE  50BA               	movf	4026,w,c	;volatile
  7773  0026F0  09C0               	iorlw	192
  7774  0026F2  1402               	andwf	i1SetOutputEPWM1@outputconfig,w,c
  7775  0026F4  6EBA               	movwf	4026,c	;volatile
  7776  0026F6  50BA               	movf	4026,w,c	;volatile
  7777  0026F8  090F               	iorlw	15
  7778  0026FA  1401               	andwf	i1SetOutputEPWM1@outputmode,w,c
  7779  0026FC  6EBA               	movwf	4026,c	;volatile
  7780  0026FE  0E3F               	movlw	63
  7781  002700  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  7782  002702  A4D8               	btfss	status,2,c
  7783  002704  D002               	goto	i1l3790
  7784  002706  9895               	bcf	3989,4,c	;volatile
  7785  002708  0012               	return	
  7786  00270A                     i1l3790:
  7787  00270A  0EBF               	movlw	191
  7788  00270C  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  7789  00270E  A4D8               	btfss	status,2,c
  7790  002710  D003               	goto	i1l3794
  7791  002712  9895               	bcf	3989,4,c	;volatile
  7792  002714  9A95               	bcf	3989,5,c	;volatile
  7793  002716  0012               	return	
  7794  002718                     i1l3794:
  7795  002718  0E7F               	movlw	127
  7796  00271A  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  7797  00271C  B4D8               	btfsc	status,2,c
  7798  00271E  D003               	goto	i1l748
  7799  002720  2802               	incf	i1SetOutputEPWM1@outputconfig,w,c
  7800  002722  A4D8               	btfss	status,2,c
  7801  002724  0012               	return	
  7802  002726                     i1l748:
  7803  002726  9895               	bcf	3989,4,c	;volatile
  7804  002728  9A95               	bcf	3989,5,c	;volatile
  7805  00272A  9C95               	bcf	3989,6,c	;volatile
  7806  00272C  9E95               	bcf	3989,7,c	;volatile
  7807  00272E  0012               	return	
  7808  002730                     __end_ofi1_SetOutputEPWM1:
  7809                           	opt stack 0
  7810                           pclatu	equ	0xFFB
  7811                           pclath	equ	0xFFA
  7812                           tblptru	equ	0xFF8
  7813                           tblptrh	equ	0xFF7
  7814                           tblptrl	equ	0xFF6
  7815                           tablat	equ	0xFF5
  7816                           prodh	equ	0xFF4
  7817                           prodl	equ	0xFF3
  7818                           intcon	equ	0xFF2
  7819                           postinc0	equ	0xFEE
  7820                           fsr0h	equ	0xFEA
  7821                           fsr0l	equ	0xFE9
  7822                           wreg	equ	0xFE8
  7823                           postdec1	equ	0xFE5
  7824                           fsr1h	equ	0xFE2
  7825                           fsr1l	equ	0xFE1
  7826                           bsr	equ	0xFE0
  7827                           indf2	equ	0xFDF
  7828                           fsr2h	equ	0xFDA
  7829                           fsr2l	equ	0xFD9
  7830                           status	equ	0xFD8
  7831                           
  7832 ;; *************** function _CANreceiveMessage *****************
  7833 ;; Defined at:
  7834 ;;		line 528 in file "CANlib.h"
  7835 ;; Parameters:    Size  Location     Type
  7836 ;;  msg             2    0[COMRAM] PTR struct .
  7837 ;;		 -> msg(15), 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;  tamp            1   11[COMRAM] unsigned char 
  7840 ;;  error           1   10[COMRAM] unsigned char 
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  1    wreg      unsigned char 
  7843 ;; Registers used:
  7844 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7850 ;;      Params:         2       0       0       0
  7851 ;;      Locals:         2       0       0       0
  7852 ;;      Temps:          8       0       0       0
  7853 ;;      Totals:        12       0       0       0
  7854 ;;Total ram usage:       12 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; This function calls:
  7857 ;;		Nothing
  7858 ;; This function is called by:
  7859 ;;		_ISR_bassa
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863                           	psect	text20
  7864  001480                     __ptext20:
  7865                           	opt stack 0
  7866  001480                     _CANreceiveMessage:
  7867                           	opt stack 26
  7868                           
  7869                           ;CANlib.h: 530: BYTE tamp;
  7870                           ;CANlib.h: 531: BYTE error = 0;
  7871                           
  7872                           ;incstack = 0
  7873  001480  0E00               	movlw	0
  7874  001482  6E0B               	movwf	CANreceiveMessage@error,c
  7875                           
  7876                           ;CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7877  001484  BE74               	btfsc	3956,7,c	;volatile
  7878                           
  7879                           ;CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7880  001486  800B               	bsf	CANreceiveMessage@error,0,c
  7881                           
  7882                           ;CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7883  001488  BC74               	btfsc	3956,6,c	;volatile
  7884                           
  7885                           ;CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7886  00148A  820B               	bsf	CANreceiveMessage@error,1,c
  7887                           
  7888                           ;CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7889  00148C  010F               	movlb	15	; () banked
  7890  00148E  AF50               	btfss	80,7,b	;volatile
  7891  001490  D143               	goto	i1l408
  7892                           
  7893                           ; BSR set to: 15
  7894                           ;CANlib.h: 541: {
  7895                           ;CANlib.h: 542: msg->identifier = 0;
  7896  001492  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7897  001496  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7898  00149A  6ADE               	clrf	postinc2,c
  7899  00149C  6ADE               	clrf	postinc2,c
  7900  00149E  6ADE               	clrf	postinc2,c
  7901  0014A0  6ADD               	clrf	postdec2,c
  7902                           
  7903                           ; BSR set to: 15
  7904                           ;CANlib.h: 543: msg->data[0] =RXB1D0;
  7905  0014A2  EE20 F004          	lfsr	2,4
  7906  0014A6  5001               	movf	CANreceiveMessage@msg,w,c
  7907  0014A8  26D9               	addwf	fsr2l,f,c
  7908  0014AA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7909  0014AC  22DA               	addwfc	fsr2h,f,c
  7910  0014AE  CF56 FFDF          	movff	3926,indf2	;volatile
  7911                           
  7912                           ; BSR set to: 15
  7913                           ;CANlib.h: 544: msg->data[1] =RXB1D1;
  7914  0014B2  EE20 F005          	lfsr	2,5
  7915  0014B6  5001               	movf	CANreceiveMessage@msg,w,c
  7916  0014B8  26D9               	addwf	fsr2l,f,c
  7917  0014BA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7918  0014BC  22DA               	addwfc	fsr2h,f,c
  7919  0014BE  CF57 FFDF          	movff	3927,indf2	;volatile
  7920                           
  7921                           ; BSR set to: 15
  7922                           ;CANlib.h: 545: msg->data[2] =RXB1D2;
  7923  0014C2  EE20 F006          	lfsr	2,6
  7924  0014C6  5001               	movf	CANreceiveMessage@msg,w,c
  7925  0014C8  26D9               	addwf	fsr2l,f,c
  7926  0014CA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7927  0014CC  22DA               	addwfc	fsr2h,f,c
  7928  0014CE  CF58 FFDF          	movff	3928,indf2	;volatile
  7929                           
  7930                           ; BSR set to: 15
  7931                           ;CANlib.h: 546: msg->data[3] =RXB1D3;
  7932  0014D2  EE20 F007          	lfsr	2,7
  7933  0014D6  5001               	movf	CANreceiveMessage@msg,w,c
  7934  0014D8  26D9               	addwf	fsr2l,f,c
  7935  0014DA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7936  0014DC  22DA               	addwfc	fsr2h,f,c
  7937  0014DE  CF59 FFDF          	movff	3929,indf2	;volatile
  7938                           
  7939                           ; BSR set to: 15
  7940                           ;CANlib.h: 547: msg->data[4] =RXB1D4;
  7941  0014E2  EE20 F008          	lfsr	2,8
  7942  0014E6  5001               	movf	CANreceiveMessage@msg,w,c
  7943  0014E8  26D9               	addwf	fsr2l,f,c
  7944  0014EA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7945  0014EC  22DA               	addwfc	fsr2h,f,c
  7946  0014EE  CF5A FFDF          	movff	3930,indf2	;volatile
  7947                           
  7948                           ; BSR set to: 15
  7949                           ;CANlib.h: 548: msg->data[5] =RXB1D5;
  7950  0014F2  EE20 F009          	lfsr	2,9
  7951  0014F6  5001               	movf	CANreceiveMessage@msg,w,c
  7952  0014F8  26D9               	addwf	fsr2l,f,c
  7953  0014FA  5002               	movf	CANreceiveMessage@msg+1,w,c
  7954  0014FC  22DA               	addwfc	fsr2h,f,c
  7955  0014FE  CF5B FFDF          	movff	3931,indf2	;volatile
  7956                           
  7957                           ; BSR set to: 15
  7958                           ;CANlib.h: 549: msg->data[6] =RXB1D6;
  7959  001502  EE20 F00A          	lfsr	2,10
  7960  001506  5001               	movf	CANreceiveMessage@msg,w,c
  7961  001508  26D9               	addwf	fsr2l,f,c
  7962  00150A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7963  00150C  22DA               	addwfc	fsr2h,f,c
  7964  00150E  CF5C FFDF          	movff	3932,indf2	;volatile
  7965                           
  7966                           ; BSR set to: 15
  7967                           ;CANlib.h: 550: msg->data[7] =RXB1D7;
  7968  001512  EE20 F00B          	lfsr	2,11
  7969  001516  5001               	movf	CANreceiveMessage@msg,w,c
  7970  001518  26D9               	addwf	fsr2l,f,c
  7971  00151A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7972  00151C  22DA               	addwfc	fsr2h,f,c
  7973  00151E  CF5D FFDF          	movff	3933,indf2	;volatile
  7974                           
  7975                           ; BSR set to: 15
  7976                           ;CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7977  001522  EE20 F00E          	lfsr	2,14
  7978  001526  5001               	movf	CANreceiveMessage@msg,w,c
  7979  001528  26D9               	addwf	fsr2l,f,c
  7980  00152A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7981  00152C  22DA               	addwfc	fsr2h,f,c
  7982  00152E  010F               	movlb	15	; () banked
  7983  001530  AD55               	btfss	85,6,b	;volatile
  7984  001532  D002               	goto	i1u385_20
  7985  001534  0E01               	movlw	1
  7986  001536  D001               	goto	i1u385_26
  7987  001538                     i1u385_20:
  7988  001538  0E00               	movlw	0
  7989  00153A                     i1u385_26:
  7990  00153A  6EDF               	movwf	indf2,c
  7991                           
  7992                           ; BSR set to: 15
  7993                           ;CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7994  00153C  EE20 F00D          	lfsr	2,13
  7995  001540  5001               	movf	CANreceiveMessage@msg,w,c
  7996  001542  26D9               	addwf	fsr2l,f,c
  7997  001544  5002               	movf	CANreceiveMessage@msg+1,w,c
  7998  001546  22DA               	addwfc	fsr2h,f,c
  7999  001548  010F               	movlb	15	; () banked
  8000  00154A  5155               	movf	85,w,b	;volatile
  8001  00154C  0B0F               	andlw	15
  8002  00154E  6EDF               	movwf	indf2,c
  8003                           
  8004                           ; BSR set to: 15
  8005                           ;CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  8006  001550  EE20 F00C          	lfsr	2,12
  8007  001554  5001               	movf	CANreceiveMessage@msg,w,c
  8008  001556  26D9               	addwf	fsr2l,f,c
  8009  001558  5002               	movf	CANreceiveMessage@msg+1,w,c
  8010  00155A  22DA               	addwfc	fsr2h,f,c
  8011  00155C  010F               	movlb	15	; () banked
  8012  00155E  A752               	btfss	82,3,b	;volatile
  8013  001560  D002               	goto	i1u386_20
  8014  001562  0E01               	movlw	1
  8015  001564  D001               	goto	i1u386_26
  8016  001566                     i1u386_20:
  8017  001566  0E00               	movlw	0
  8018  001568                     i1u386_26:
  8019  001568  6EDF               	movwf	indf2,c
  8020                           
  8021                           ; BSR set to: 15
  8022                           ;CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  8023  00156A  010F               	movlb	15	; () banked
  8024  00156C  B752               	btfsc	82,3,b	;volatile
  8025  00156E  D044               	goto	i1l3528
  8026                           
  8027                           ; BSR set to: 15
  8028                           ;CANlib.h: 559: {
  8029                           ;CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  8030  001570  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8031  001574  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8032  001576  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8033  001578  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8034  00157A  0E03               	movlw	3
  8035  00157C                     i1u388_25:
  8036  00157C  90D8               	bcf	status,0,c
  8037  00157E  3603               	rlcf	??_CANreceiveMessage,f,c
  8038  001580  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8039  001582  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8040  001584  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8041  001586  2EE8               	decfsz	wreg,f,c
  8042  001588  D7F9               	goto	i1u388_25
  8043  00158A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8044  00158E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8045  001592  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8046  001596  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8047  00159A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8048  00159E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8049                           
  8050                           ; BSR set to: 15
  8051                           ;CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  8052  0015A2  010F               	movlb	15	; () banked
  8053  0015A4  3952               	swapf	82,w,b	;volatile
  8054  0015A6  42E8               	rrncf	wreg,f,c
  8055  0015A8  0B07               	andlw	7
  8056  0015AA  0B07               	andlw	7
  8057  0015AC  6E0C               	movwf	CANreceiveMessage@tamp,c
  8058                           
  8059                           ; BSR set to: 15
  8060                           ;CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  8061  0015AE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8062  0015B2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8063  0015B6  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8064  0015BA  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8065  0015BE  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8066  0015C2  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8067  0015C6  500C               	movf	CANreceiveMessage@tamp,w,c
  8068  0015C8  2403               	addwf	??_CANreceiveMessage,w,c
  8069  0015CA  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8070  0015CC  0E00               	movlw	0
  8071  0015CE  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8072  0015D0  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8073  0015D2  0E00               	movlw	0
  8074  0015D4  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8075  0015D6  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8076  0015D8  0E00               	movlw	0
  8077  0015DA  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8078  0015DC  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8079  0015DE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8080  0015E2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8081  0015E6  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8082  0015EA  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8083  0015EE  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8084  0015F2  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8085                           
  8086                           ;CANlib.h: 563: }
  8087  0015F6  D08D               	goto	i1l3554
  8088  0015F8                     i1l3528:
  8089                           
  8090                           ; BSR set to: 15
  8091                           ;CANlib.h: 564: else
  8092                           ;CANlib.h: 565: {
  8093                           ;CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  8094  0015F8  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  8095  0015FC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8096  0015FE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8097  001600  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8098  001602  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8099  001606  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8100  00160A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8101  00160E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8102  001612  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8103  001616  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8104                           
  8105                           ; BSR set to: 15
  8106                           ;CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  8107  00161A  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  8108  00161E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8109  001620  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8110  001622  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8111  001624  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8112  001628  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8113  00162C  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8114  001630  6A03               	clrf	??_CANreceiveMessage,c
  8115  001632  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8116  001636  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8117  00163A  5003               	movf	??_CANreceiveMessage,w,c
  8118  00163C  26DE               	addwf	postinc2,f,c
  8119  00163E  5004               	movf	??_CANreceiveMessage+1,w,c
  8120  001640  22DE               	addwfc	postinc2,f,c
  8121  001642  5005               	movf	??_CANreceiveMessage+2,w,c
  8122  001644  22DE               	addwfc	postinc2,f,c
  8123  001646  5006               	movf	??_CANreceiveMessage+3,w,c
  8124  001648  22DE               	addwfc	postinc2,f,c
  8125                           
  8126                           ; BSR set to: 15
  8127                           ;CANlib.h: 569: if (RXB1SIDLbits.EID16)
  8128  00164A  010F               	movlb	15	; () banked
  8129  00164C  A152               	btfss	82,0,b	;volatile
  8130  00164E  D00C               	goto	i1l3536
  8131                           
  8132                           ; BSR set to: 15
  8133                           ;CANlib.h: 570: msg->identifier |= 0x00010000;
  8134  001650  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8135  001654  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8136  001658  0E00               	movlw	0
  8137  00165A  12DE               	iorwf	postinc2,f,c
  8138  00165C  0E00               	movlw	0
  8139  00165E  12DE               	iorwf	postinc2,f,c
  8140  001660  0E01               	movlw	1
  8141  001662  12DE               	iorwf	postinc2,f,c
  8142  001664  0E00               	movlw	0
  8143  001666  12DE               	iorwf	postinc2,f,c
  8144  001668                     i1l3536:
  8145                           
  8146                           ; BSR set to: 15
  8147                           ;CANlib.h: 571: if (RXB1SIDLbits.EID17)
  8148  001668  010F               	movlb	15	; () banked
  8149  00166A  A352               	btfss	82,1,b	;volatile
  8150  00166C  D00C               	goto	i1l3540
  8151                           
  8152                           ; BSR set to: 15
  8153                           ;CANlib.h: 572: msg->identifier |= 0x00020000;
  8154  00166E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8155  001672  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8156  001676  0E00               	movlw	0
  8157  001678  12DE               	iorwf	postinc2,f,c
  8158  00167A  0E00               	movlw	0
  8159  00167C  12DE               	iorwf	postinc2,f,c
  8160  00167E  0E02               	movlw	2
  8161  001680  12DE               	iorwf	postinc2,f,c
  8162  001682  0E00               	movlw	0
  8163  001684  12DE               	iorwf	postinc2,f,c
  8164  001686                     i1l3540:
  8165                           
  8166                           ; BSR set to: 15
  8167                           ;CANlib.h: 573: if (RXB1SIDLbits.SID0)
  8168  001686  010F               	movlb	15	; () banked
  8169  001688  AB52               	btfss	82,5,b	;volatile
  8170  00168A  D00C               	goto	i1l3544
  8171                           
  8172                           ; BSR set to: 15
  8173                           ;CANlib.h: 574: msg->identifier |= 0x00040000;
  8174  00168C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8175  001690  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8176  001694  0E00               	movlw	0
  8177  001696  12DE               	iorwf	postinc2,f,c
  8178  001698  0E00               	movlw	0
  8179  00169A  12DE               	iorwf	postinc2,f,c
  8180  00169C  0E04               	movlw	4
  8181  00169E  12DE               	iorwf	postinc2,f,c
  8182  0016A0  0E00               	movlw	0
  8183  0016A2  12DE               	iorwf	postinc2,f,c
  8184  0016A4                     i1l3544:
  8185                           
  8186                           ; BSR set to: 15
  8187                           ;CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8188  0016A4  010F               	movlb	15	; () banked
  8189  0016A6  AD52               	btfss	82,6,b	;volatile
  8190  0016A8  D00C               	goto	i1l3548
  8191                           
  8192                           ; BSR set to: 15
  8193                           ;CANlib.h: 576: msg->identifier |= 0x00080000;
  8194  0016AA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8195  0016AE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8196  0016B2  0E00               	movlw	0
  8197  0016B4  12DE               	iorwf	postinc2,f,c
  8198  0016B6  0E00               	movlw	0
  8199  0016B8  12DE               	iorwf	postinc2,f,c
  8200  0016BA  0E08               	movlw	8
  8201  0016BC  12DE               	iorwf	postinc2,f,c
  8202  0016BE  0E00               	movlw	0
  8203  0016C0  12DE               	iorwf	postinc2,f,c
  8204  0016C2                     i1l3548:
  8205                           
  8206                           ; BSR set to: 15
  8207                           ;CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8208  0016C2  010F               	movlb	15	; () banked
  8209  0016C4  AF52               	btfss	82,7,b	;volatile
  8210  0016C6  D00C               	goto	i1l3552
  8211                           
  8212                           ; BSR set to: 15
  8213                           ;CANlib.h: 578: msg->identifier |= 0x00100000;
  8214  0016C8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8215  0016CC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8216  0016D0  0E00               	movlw	0
  8217  0016D2  12DE               	iorwf	postinc2,f,c
  8218  0016D4  0E00               	movlw	0
  8219  0016D6  12DE               	iorwf	postinc2,f,c
  8220  0016D8  0E10               	movlw	16
  8221  0016DA  12DE               	iorwf	postinc2,f,c
  8222  0016DC  0E00               	movlw	0
  8223  0016DE  12DE               	iorwf	postinc2,f,c
  8224  0016E0                     i1l3552:
  8225                           
  8226                           ; BSR set to: 15
  8227                           ;CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8228  0016E0  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8229  0016E4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8230  0016E6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8231  0016E8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8232  0016EA  0E15               	movlw	21
  8233  0016EC                     i1u394_25:
  8234  0016EC  90D8               	bcf	status,0,c
  8235  0016EE  3603               	rlcf	??_CANreceiveMessage,f,c
  8236  0016F0  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8237  0016F2  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8238  0016F4  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8239  0016F6  2EE8               	decfsz	wreg,f,c
  8240  0016F8  D7F9               	goto	i1u394_25
  8241  0016FA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8242  0016FE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8243  001702  5003               	movf	??_CANreceiveMessage,w,c
  8244  001704  12DE               	iorwf	postinc2,f,c
  8245  001706  5004               	movf	??_CANreceiveMessage+1,w,c
  8246  001708  12DE               	iorwf	postinc2,f,c
  8247  00170A  5005               	movf	??_CANreceiveMessage+2,w,c
  8248  00170C  12DE               	iorwf	postinc2,f,c
  8249  00170E  5006               	movf	??_CANreceiveMessage+3,w,c
  8250  001710  12DE               	iorwf	postinc2,f,c
  8251  001712                     i1l3554:
  8252                           
  8253                           ; BSR set to: 15
  8254                           ;CANlib.h: 581: }
  8255                           ;CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8256  001712  010F               	movlb	15	; () banked
  8257  001714  9F50               	bcf	80,7,b	;volatile
  8258                           
  8259                           ; BSR set to: 15
  8260                           ;CANlib.h: 584: return (error);
  8261                           ;	Return value of _CANreceiveMessage is never used
  8262  001716  0012               	return	
  8263  001718                     i1l408:
  8264                           
  8265                           ; BSR set to: 15
  8266                           ;CANlib.h: 585: }
  8267                           ;CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8268  001718  AE60               	btfss	3936,7,c	;volatile
  8269  00171A  0012               	return	
  8270                           
  8271                           ; BSR set to: 15
  8272                           ;CANlib.h: 588: {
  8273                           ;CANlib.h: 589: msg->identifier = 0;
  8274  00171C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8275  001720  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8276  001724  6ADE               	clrf	postinc2,c
  8277  001726  6ADE               	clrf	postinc2,c
  8278  001728  6ADE               	clrf	postinc2,c
  8279  00172A  6ADD               	clrf	postdec2,c
  8280                           
  8281                           ; BSR set to: 15
  8282                           ;CANlib.h: 590: msg->data[0] =RXB0D0;
  8283  00172C  EE20 F004          	lfsr	2,4
  8284  001730  5001               	movf	CANreceiveMessage@msg,w,c
  8285  001732  26D9               	addwf	fsr2l,f,c
  8286  001734  5002               	movf	CANreceiveMessage@msg+1,w,c
  8287  001736  22DA               	addwfc	fsr2h,f,c
  8288  001738  CF66 FFDF          	movff	3942,indf2	;volatile
  8289                           
  8290                           ; BSR set to: 15
  8291                           ;CANlib.h: 591: msg->data[1] =RXB0D1;
  8292  00173C  EE20 F005          	lfsr	2,5
  8293  001740  5001               	movf	CANreceiveMessage@msg,w,c
  8294  001742  26D9               	addwf	fsr2l,f,c
  8295  001744  5002               	movf	CANreceiveMessage@msg+1,w,c
  8296  001746  22DA               	addwfc	fsr2h,f,c
  8297  001748  CF67 FFDF          	movff	3943,indf2	;volatile
  8298                           
  8299                           ; BSR set to: 15
  8300                           ;CANlib.h: 592: msg->data[2] =RXB0D2;
  8301  00174C  EE20 F006          	lfsr	2,6
  8302  001750  5001               	movf	CANreceiveMessage@msg,w,c
  8303  001752  26D9               	addwf	fsr2l,f,c
  8304  001754  5002               	movf	CANreceiveMessage@msg+1,w,c
  8305  001756  22DA               	addwfc	fsr2h,f,c
  8306  001758  CF68 FFDF          	movff	3944,indf2	;volatile
  8307                           
  8308                           ; BSR set to: 15
  8309                           ;CANlib.h: 593: msg->data[3] =RXB0D3;
  8310  00175C  EE20 F007          	lfsr	2,7
  8311  001760  5001               	movf	CANreceiveMessage@msg,w,c
  8312  001762  26D9               	addwf	fsr2l,f,c
  8313  001764  5002               	movf	CANreceiveMessage@msg+1,w,c
  8314  001766  22DA               	addwfc	fsr2h,f,c
  8315  001768  CF69 FFDF          	movff	3945,indf2	;volatile
  8316                           
  8317                           ; BSR set to: 15
  8318                           ;CANlib.h: 594: msg->data[4] =RXB0D4;
  8319  00176C  EE20 F008          	lfsr	2,8
  8320  001770  5001               	movf	CANreceiveMessage@msg,w,c
  8321  001772  26D9               	addwf	fsr2l,f,c
  8322  001774  5002               	movf	CANreceiveMessage@msg+1,w,c
  8323  001776  22DA               	addwfc	fsr2h,f,c
  8324  001778  CF6A FFDF          	movff	3946,indf2	;volatile
  8325                           
  8326                           ; BSR set to: 15
  8327                           ;CANlib.h: 595: msg->data[5] =RXB0D5;
  8328  00177C  EE20 F009          	lfsr	2,9
  8329  001780  5001               	movf	CANreceiveMessage@msg,w,c
  8330  001782  26D9               	addwf	fsr2l,f,c
  8331  001784  5002               	movf	CANreceiveMessage@msg+1,w,c
  8332  001786  22DA               	addwfc	fsr2h,f,c
  8333  001788  CF6B FFDF          	movff	3947,indf2	;volatile
  8334                           
  8335                           ; BSR set to: 15
  8336                           ;CANlib.h: 596: msg->data[6] =RXB0D6;
  8337  00178C  EE20 F00A          	lfsr	2,10
  8338  001790  5001               	movf	CANreceiveMessage@msg,w,c
  8339  001792  26D9               	addwf	fsr2l,f,c
  8340  001794  5002               	movf	CANreceiveMessage@msg+1,w,c
  8341  001796  22DA               	addwfc	fsr2h,f,c
  8342  001798  CF6C FFDF          	movff	3948,indf2	;volatile
  8343                           
  8344                           ; BSR set to: 15
  8345                           ;CANlib.h: 597: msg->data[7] =RXB0D7;
  8346  00179C  EE20 F00B          	lfsr	2,11
  8347  0017A0  5001               	movf	CANreceiveMessage@msg,w,c
  8348  0017A2  26D9               	addwf	fsr2l,f,c
  8349  0017A4  5002               	movf	CANreceiveMessage@msg+1,w,c
  8350  0017A6  22DA               	addwfc	fsr2h,f,c
  8351  0017A8  CF6D FFDF          	movff	3949,indf2	;volatile
  8352                           
  8353                           ; BSR set to: 15
  8354                           ;CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8355  0017AC  EE20 F00E          	lfsr	2,14
  8356  0017B0  5001               	movf	CANreceiveMessage@msg,w,c
  8357  0017B2  26D9               	addwf	fsr2l,f,c
  8358  0017B4  5002               	movf	CANreceiveMessage@msg+1,w,c
  8359  0017B6  22DA               	addwfc	fsr2h,f,c
  8360  0017B8  AC65               	btfss	3941,6,c	;volatile
  8361  0017BA  D002               	goto	i1u396_20
  8362  0017BC  0E01               	movlw	1
  8363  0017BE  D001               	goto	i1u396_26
  8364  0017C0                     i1u396_20:
  8365  0017C0  0E00               	movlw	0
  8366  0017C2                     i1u396_26:
  8367  0017C2  6EDF               	movwf	indf2,c
  8368                           
  8369                           ; BSR set to: 15
  8370                           ;CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8371  0017C4  EE20 F00D          	lfsr	2,13
  8372  0017C8  5001               	movf	CANreceiveMessage@msg,w,c
  8373  0017CA  26D9               	addwf	fsr2l,f,c
  8374  0017CC  5002               	movf	CANreceiveMessage@msg+1,w,c
  8375  0017CE  22DA               	addwfc	fsr2h,f,c
  8376  0017D0  5065               	movf	3941,w,c	;volatile
  8377  0017D2  0B0F               	andlw	15
  8378  0017D4  6EDF               	movwf	indf2,c
  8379                           
  8380                           ; BSR set to: 15
  8381                           ;CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8382  0017D6  EE20 F00C          	lfsr	2,12
  8383  0017DA  5001               	movf	CANreceiveMessage@msg,w,c
  8384  0017DC  26D9               	addwf	fsr2l,f,c
  8385  0017DE  5002               	movf	CANreceiveMessage@msg+1,w,c
  8386  0017E0  22DA               	addwfc	fsr2h,f,c
  8387  0017E2  A662               	btfss	3938,3,c	;volatile
  8388  0017E4  D002               	goto	i1u397_20
  8389  0017E6  0E01               	movlw	1
  8390  0017E8  D001               	goto	i1u397_26
  8391  0017EA                     i1u397_20:
  8392  0017EA  0E00               	movlw	0
  8393  0017EC                     i1u397_26:
  8394  0017EC  6EDF               	movwf	indf2,c
  8395                           
  8396                           ; BSR set to: 15
  8397                           ;CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8398  0017EE  B662               	btfsc	3938,3,c	;volatile
  8399  0017F0  D043               	goto	i1l3590
  8400                           
  8401                           ; BSR set to: 15
  8402                           ;CANlib.h: 606: {
  8403                           ;CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8404  0017F2  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8405  0017F6  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8406  0017F8  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8407  0017FA  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8408  0017FC  0E03               	movlw	3
  8409  0017FE                     i1u399_25:
  8410  0017FE  90D8               	bcf	status,0,c
  8411  001800  3603               	rlcf	??_CANreceiveMessage,f,c
  8412  001802  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8413  001804  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8414  001806  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8415  001808  2EE8               	decfsz	wreg,f,c
  8416  00180A  D7F9               	goto	i1u399_25
  8417  00180C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8418  001810  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8419  001814  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8420  001818  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8421  00181C  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8422  001820  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8423                           
  8424                           ; BSR set to: 15
  8425                           ;CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8426  001824  3862               	swapf	3938,w,c	;volatile
  8427  001826  42E8               	rrncf	wreg,f,c
  8428  001828  0B07               	andlw	7
  8429  00182A  0B07               	andlw	7
  8430  00182C  6E0C               	movwf	CANreceiveMessage@tamp,c
  8431                           
  8432                           ; BSR set to: 15
  8433                           ;CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8434  00182E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8435  001832  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8436  001836  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8437  00183A  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8438  00183E  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8439  001842  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8440  001846  500C               	movf	CANreceiveMessage@tamp,w,c
  8441  001848  2403               	addwf	??_CANreceiveMessage,w,c
  8442  00184A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8443  00184C  0E00               	movlw	0
  8444  00184E  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8445  001850  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8446  001852  0E00               	movlw	0
  8447  001854  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8448  001856  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8449  001858  0E00               	movlw	0
  8450  00185A  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8451  00185C  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8452  00185E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8453  001862  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8454  001866  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8455  00186A  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8456  00186E  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8457  001872  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8458                           
  8459                           ;CANlib.h: 610: }
  8460  001876  D088               	goto	i1l3616
  8461  001878                     i1l3590:
  8462                           
  8463                           ; BSR set to: 15
  8464                           ;CANlib.h: 611: else
  8465                           ;CANlib.h: 612: {
  8466                           ;CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8467  001878  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8468  00187C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8469  00187E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8470  001880  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8471  001882  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8472  001886  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8473  00188A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8474  00188E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8475  001892  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8476  001896  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8477                           
  8478                           ; BSR set to: 15
  8479                           ;CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8480  00189A  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8481  00189E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8482  0018A0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8483  0018A2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8484  0018A4  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8485  0018A8  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8486  0018AC  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8487  0018B0  6A03               	clrf	??_CANreceiveMessage,c
  8488  0018B2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8489  0018B6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8490  0018BA  5003               	movf	??_CANreceiveMessage,w,c
  8491  0018BC  26DE               	addwf	postinc2,f,c
  8492  0018BE  5004               	movf	??_CANreceiveMessage+1,w,c
  8493  0018C0  22DE               	addwfc	postinc2,f,c
  8494  0018C2  5005               	movf	??_CANreceiveMessage+2,w,c
  8495  0018C4  22DE               	addwfc	postinc2,f,c
  8496  0018C6  5006               	movf	??_CANreceiveMessage+3,w,c
  8497  0018C8  22DE               	addwfc	postinc2,f,c
  8498                           
  8499                           ; BSR set to: 15
  8500                           ;CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8501  0018CA  A062               	btfss	3938,0,c	;volatile
  8502  0018CC  D00C               	goto	i1l3598
  8503                           
  8504                           ; BSR set to: 15
  8505                           ;CANlib.h: 617: msg->identifier |= 0x00010000;
  8506  0018CE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8507  0018D2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8508  0018D6  0E00               	movlw	0
  8509  0018D8  12DE               	iorwf	postinc2,f,c
  8510  0018DA  0E00               	movlw	0
  8511  0018DC  12DE               	iorwf	postinc2,f,c
  8512  0018DE  0E01               	movlw	1
  8513  0018E0  12DE               	iorwf	postinc2,f,c
  8514  0018E2  0E00               	movlw	0
  8515  0018E4  12DE               	iorwf	postinc2,f,c
  8516  0018E6                     i1l3598:
  8517                           
  8518                           ; BSR set to: 15
  8519                           ;CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8520  0018E6  A262               	btfss	3938,1,c	;volatile
  8521  0018E8  D00C               	goto	i1l3602
  8522                           
  8523                           ; BSR set to: 15
  8524                           ;CANlib.h: 619: msg->identifier |= 0x00020000;
  8525  0018EA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8526  0018EE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8527  0018F2  0E00               	movlw	0
  8528  0018F4  12DE               	iorwf	postinc2,f,c
  8529  0018F6  0E00               	movlw	0
  8530  0018F8  12DE               	iorwf	postinc2,f,c
  8531  0018FA  0E02               	movlw	2
  8532  0018FC  12DE               	iorwf	postinc2,f,c
  8533  0018FE  0E00               	movlw	0
  8534  001900  12DE               	iorwf	postinc2,f,c
  8535  001902                     i1l3602:
  8536                           
  8537                           ; BSR set to: 15
  8538                           ;CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8539  001902  AA62               	btfss	3938,5,c	;volatile
  8540  001904  D00C               	goto	i1l3606
  8541                           
  8542                           ; BSR set to: 15
  8543                           ;CANlib.h: 621: msg->identifier |= 0x00040000;
  8544  001906  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8545  00190A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8546  00190E  0E00               	movlw	0
  8547  001910  12DE               	iorwf	postinc2,f,c
  8548  001912  0E00               	movlw	0
  8549  001914  12DE               	iorwf	postinc2,f,c
  8550  001916  0E04               	movlw	4
  8551  001918  12DE               	iorwf	postinc2,f,c
  8552  00191A  0E00               	movlw	0
  8553  00191C  12DE               	iorwf	postinc2,f,c
  8554  00191E                     i1l3606:
  8555                           
  8556                           ; BSR set to: 15
  8557                           ;CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8558  00191E  AC62               	btfss	3938,6,c	;volatile
  8559  001920  D00C               	goto	i1l3610
  8560                           
  8561                           ; BSR set to: 15
  8562                           ;CANlib.h: 623: msg->identifier |= 0x00080000;
  8563  001922  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8564  001926  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8565  00192A  0E00               	movlw	0
  8566  00192C  12DE               	iorwf	postinc2,f,c
  8567  00192E  0E00               	movlw	0
  8568  001930  12DE               	iorwf	postinc2,f,c
  8569  001932  0E08               	movlw	8
  8570  001934  12DE               	iorwf	postinc2,f,c
  8571  001936  0E00               	movlw	0
  8572  001938  12DE               	iorwf	postinc2,f,c
  8573  00193A                     i1l3610:
  8574                           
  8575                           ; BSR set to: 15
  8576                           ;CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8577  00193A  AE62               	btfss	3938,7,c	;volatile
  8578  00193C  D00C               	goto	i1l3614
  8579                           
  8580                           ; BSR set to: 15
  8581                           ;CANlib.h: 625: msg->identifier |= 0x00100000;
  8582  00193E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8583  001942  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8584  001946  0E00               	movlw	0
  8585  001948  12DE               	iorwf	postinc2,f,c
  8586  00194A  0E00               	movlw	0
  8587  00194C  12DE               	iorwf	postinc2,f,c
  8588  00194E  0E10               	movlw	16
  8589  001950  12DE               	iorwf	postinc2,f,c
  8590  001952  0E00               	movlw	0
  8591  001954  12DE               	iorwf	postinc2,f,c
  8592  001956                     i1l3614:
  8593                           
  8594                           ; BSR set to: 15
  8595                           ;CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8596  001956  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8597  00195A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8598  00195C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8599  00195E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8600  001960  0E15               	movlw	21
  8601  001962                     i1u405_25:
  8602  001962  90D8               	bcf	status,0,c
  8603  001964  3603               	rlcf	??_CANreceiveMessage,f,c
  8604  001966  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8605  001968  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8606  00196A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8607  00196C  2EE8               	decfsz	wreg,f,c
  8608  00196E  D7F9               	goto	i1u405_25
  8609  001970  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8610  001974  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8611  001978  5003               	movf	??_CANreceiveMessage,w,c
  8612  00197A  12DE               	iorwf	postinc2,f,c
  8613  00197C  5004               	movf	??_CANreceiveMessage+1,w,c
  8614  00197E  12DE               	iorwf	postinc2,f,c
  8615  001980  5005               	movf	??_CANreceiveMessage+2,w,c
  8616  001982  12DE               	iorwf	postinc2,f,c
  8617  001984  5006               	movf	??_CANreceiveMessage+3,w,c
  8618  001986  12DE               	iorwf	postinc2,f,c
  8619  001988                     i1l3616:
  8620                           
  8621                           ; BSR set to: 15
  8622                           ;CANlib.h: 629: }
  8623                           ;CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8624  001988  9E60               	bcf	3936,7,c	;volatile
  8625                           
  8626                           ; BSR set to: 15
  8627                           ;CANlib.h: 632: return (error);
  8628                           ;	Return value of _CANreceiveMessage is never used
  8629  00198A  0012               	return	
  8630  00198C                     __end_of_CANreceiveMessage:
  8631                           	opt stack 0
  8632                           pclatu	equ	0xFFB
  8633                           pclath	equ	0xFFA
  8634                           tblptru	equ	0xFF8
  8635                           tblptrh	equ	0xFF7
  8636                           tblptrl	equ	0xFF6
  8637                           tablat	equ	0xFF5
  8638                           prodh	equ	0xFF4
  8639                           prodl	equ	0xFF3
  8640                           intcon	equ	0xFF2
  8641                           postinc0	equ	0xFEE
  8642                           fsr0h	equ	0xFEA
  8643                           fsr0l	equ	0xFE9
  8644                           wreg	equ	0xFE8
  8645                           postdec1	equ	0xFE5
  8646                           fsr1h	equ	0xFE2
  8647                           fsr1l	equ	0xFE1
  8648                           bsr	equ	0xFE0
  8649                           indf2	equ	0xFDF
  8650                           postinc2	equ	0xFDE
  8651                           postdec2	equ	0xFDD
  8652                           fsr2h	equ	0xFDA
  8653                           fsr2l	equ	0xFD9
  8654                           status	equ	0xFD8
  8655                           
  8656 ;; *************** function _CANisRxReady *****************
  8657 ;; Defined at:
  8658 ;;		line 1163 in file "CANlib.h"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;		None
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;		None
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  1    wreg      unsigned char 
  8665 ;; Registers used:
  8666 ;;		wreg, status,2
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8672 ;;      Params:         0       0       0       0
  8673 ;;      Locals:         1       0       0       0
  8674 ;;      Temps:          0       0       0       0
  8675 ;;      Totals:         1       0       0       0
  8676 ;;Total ram usage:        1 bytes
  8677 ;; Hardware stack levels used:    1
  8678 ;; This function calls:
  8679 ;;		Nothing
  8680 ;; This function is called by:
  8681 ;;		_ISR_bassa
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           	psect	text21
  8686  002822                     __ptext21:
  8687                           	opt stack 0
  8688  002822                     _CANisRxReady:
  8689                           	opt stack 26
  8690                           
  8691                           ;CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8692                           
  8693                           ; BSR set to: 15
  8694                           ;incstack = 0
  8695  002822  0E01               	movlw	1
  8696  002824  6E01               	movwf	_CANisRxReady$2991,c
  8697  002826  BE60               	btfsc	3936,7,c	;volatile
  8698  002828  D005               	goto	i1l559
  8699  00282A  010F               	movlb	15	; () banked
  8700  00282C  BF50               	btfsc	80,7,b	;volatile
  8701  00282E  D002               	goto	i1l559
  8702                           
  8703                           ; BSR set to: 15
  8704  002830  0E00               	movlw	0
  8705  002832  6E01               	movwf	_CANisRxReady$2991,c
  8706  002834                     i1l559:
  8707  002834  5001               	movf	_CANisRxReady$2991,w,c
  8708  002836  0012               	return	
  8709  002838                     __end_of_CANisRxReady:
  8710                           	opt stack 0
  8711  0000                     pclatu	equ	0xFFB
  8712                           pclath	equ	0xFFA
  8713                           tblptru	equ	0xFF8
  8714                           tblptrh	equ	0xFF7
  8715                           tblptrl	equ	0xFF6
  8716                           tablat	equ	0xFF5
  8717                           prodh	equ	0xFF4
  8718                           prodl	equ	0xFF3
  8719                           intcon	equ	0xFF2
  8720                           postinc0	equ	0xFEE
  8721                           fsr0h	equ	0xFEA
  8722                           fsr0l	equ	0xFE9
  8723                           wreg	equ	0xFE8
  8724                           postdec1	equ	0xFE5
  8725                           fsr1h	equ	0xFE2
  8726                           fsr1l	equ	0xFE1
  8727                           bsr	equ	0xFE0
  8728                           indf2	equ	0xFDF
  8729                           postinc2	equ	0xFDE
  8730                           postdec2	equ	0xFDD
  8731                           fsr2h	equ	0xFDA
  8732                           fsr2l	equ	0xFD9
  8733                           status	equ	0xFD8
  8734                           pclatu	equ	0xFFB
  8735                           pclath	equ	0xFFA
  8736                           tblptru	equ	0xFF8
  8737                           tblptrh	equ	0xFF7
  8738                           tblptrl	equ	0xFF6
  8739                           tablat	equ	0xFF5
  8740                           prodh	equ	0xFF4
  8741                           prodl	equ	0xFF3
  8742                           intcon	equ	0xFF2
  8743                           postinc0	equ	0xFEE
  8744                           fsr0h	equ	0xFEA
  8745                           fsr0l	equ	0xFE9
  8746                           wreg	equ	0xFE8
  8747                           postdec1	equ	0xFE5
  8748                           fsr1h	equ	0xFE2
  8749                           fsr1l	equ	0xFE1
  8750                           bsr	equ	0xFE0
  8751                           indf2	equ	0xFDF
  8752                           postinc2	equ	0xFDE
  8753                           postdec2	equ	0xFDD
  8754                           fsr2h	equ	0xFDA
  8755                           fsr2l	equ	0xFD9
  8756                           status	equ	0xFD8
  8757                           
  8758                           	psect	rparam
  8759  0000                     pclatu	equ	0xFFB
  8760                           pclath	equ	0xFFA
  8761                           tblptru	equ	0xFF8
  8762                           tblptrh	equ	0xFF7
  8763                           tblptrl	equ	0xFF6
  8764                           tablat	equ	0xFF5
  8765                           prodh	equ	0xFF4
  8766                           prodl	equ	0xFF3
  8767                           intcon	equ	0xFF2
  8768                           postinc0	equ	0xFEE
  8769                           fsr0h	equ	0xFEA
  8770                           fsr0l	equ	0xFE9
  8771                           wreg	equ	0xFE8
  8772                           postdec1	equ	0xFE5
  8773                           fsr1h	equ	0xFE2
  8774                           fsr1l	equ	0xFE1
  8775                           bsr	equ	0xFE0
  8776                           indf2	equ	0xFDF
  8777                           postinc2	equ	0xFDE
  8778                           postdec2	equ	0xFDD
  8779                           fsr2h	equ	0xFDA
  8780                           fsr2l	equ	0xFD9
  8781                           status	equ	0xFD8
  8782                           
  8783                           	psect	temp
  8784  000043                     btemp:
  8785                           	opt stack 0
  8786  000043                     	ds	1
  8787  0000                     int$flags	set	btemp
  8788                           pclatu	equ	0xFFB
  8789                           pclath	equ	0xFFA
  8790                           tblptru	equ	0xFF8
  8791                           tblptrh	equ	0xFF7
  8792                           tblptrl	equ	0xFF6
  8793                           tablat	equ	0xFF5
  8794                           prodh	equ	0xFF4
  8795                           prodl	equ	0xFF3
  8796                           intcon	equ	0xFF2
  8797                           postinc0	equ	0xFEE
  8798                           fsr0h	equ	0xFEA
  8799                           fsr0l	equ	0xFE9
  8800                           wreg	equ	0xFE8
  8801                           postdec1	equ	0xFE5
  8802                           fsr1h	equ	0xFE2
  8803                           fsr1l	equ	0xFE1
  8804                           bsr	equ	0xFE0
  8805                           indf2	equ	0xFDF
  8806                           postinc2	equ	0xFDE
  8807                           postdec2	equ	0xFDD
  8808                           fsr2h	equ	0xFDA
  8809                           fsr2l	equ	0xFD9
  8810                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         117
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      66
    BANK0           160     35     126
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array1(BANK0[8]), data_array(BANK0[8]), data_debug1(BANK0[8]), data_array_debug(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->___awdiv
    _delay_ms->___wmul
    ___wmul->___lwdiv
    ___awdiv->___wmul

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   25514
                                             26 BANK0      9     9      0
                       _CANisTxReady
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___lwdiv
                             ___wmul
                                _abs
                    _battery_measure
            _configurazione_iniziale
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    9823
                      _CANInitialize
                     _SetOutputEPWM1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _SetOutputEPWM1                                       2     1      1     424
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                             14 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0    7422
                       _CANisTxReady
                     _CANsendMessage
                            ___awdiv
                             ___wmul
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1187
                                             13 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                              7 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     599
                                             13 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4905
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     170
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     549
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetDCEPWM1                                           6     4      2     176
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           19    19      0    1345
                                             12 COMRAM    19    19      0
                       _CANisRxReady
                  _CANreceiveMessage
                   i1_SetOutputEPWM1
 ---------------------------------------------------------------------------------
 (5) i1_SetOutputEPWM1                                     2     1      1     184
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   ___lwdiv
   ___wmul
     ___lwdiv (ARG)
   _abs
   _battery_measure
     _CANisTxReady
     _CANsendMessage
     ___awdiv
       ___wmul (ARG)
         ___lwdiv (ARG)
     ___wmul
       ___lwdiv (ARG)
     _delay_ms
       ___wmul
         ___lwdiv (ARG)
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _SetOutputEPWM1
     _delay_ms
       ___wmul
         ___lwdiv (ARG)
   _delay_ms
     ___wmul
       ___lwdiv (ARG)

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i1_SetOutputEPWM1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     23      7E       4       78.8%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     1F      42       1       70.2%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C0       9        0.0%
DATA                 0      0      C0      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Feb 06 22:20:08 2016

            __end_of_CANSetFilter 0CF4                      ___awdiv@sign 00CD  
                              _id 0074                                bsr 000FE0  
             ___wmul@multiplicand 00C4                       __CFG_BORV$3 000000  
                  _SetOutputEPWM1 260C                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                       __CFG_OSC$HS 000000  
            _previousTimeCounter1 0080              _previousTimeCounter2 0084  
                             l400 13CC                               l401 13D0  
                             l402 13DC                               l500 0A60  
                             l501 0A64                               l510 0B70  
                             l502 0A70                               l430 201C  
                             l511 0B7C                               l431 2020  
                             l520 0C88                               l512 0B80  
                             l432 202C                               l361 0F78  
                             l521 0C8C                               l513 0B8C  
                             l505 0B4C                               l441 2134  
                             l433 2030                               l362 0D0A  
                             l522 0C98                               l506 0B50  
                             l442 2138                               l434 203C  
                             l371 0EC4                               l363 0D0E  
                             l523 0C9C                               l507 0B5C  
                             l443 2144                               l435 2040  
                             l380 101A                               l372 0EC8  
                             l364 0E06                               l524 0CA8  
                             l516 0C68                               l508 0B60  
                             l444 2148                               l436 204C  
                             l356 227C                               l381 1024  
                             l373 0ED4                               l365 0D96  
                             l517 0C6C                               l509 0B6C  
                             l461 06DE                               l445 2154  
                             l437 2050                               l357 2286  
                             l382 102E                               l366 0DA0  
                             l518 0C78                               l462 06E2  
                             l446 2158                               l438 205C  
                             l391 1212                               l383 1038  
                             l367 0DAA                               l519 0C7C  
                             l463 06EE                               l447 2164  
                             l392 1216                               l376 11FC  
                             l368 0DB4                               l480 0838  
                             l472 07F8                               l464 06F2  
                             l448 2168                               l393 130E  
                             l377 0F8E                               l473 07FC  
                             l465 06FE                               l449 2174  
                             l554 27E4                               l394 129E  
                             l386 1148                               l378 0F92  
                             l490 0948                               l474 0808  
                             l466 0702                               l395 12A8  
                             l387 114C                               l379 108A  
                             l491 0954                               l483 0914  
                             l475 080C                               l467 070E  
                             l396 12B2                               l388 1158  
                             l716 2592                               l708 24F6  
                             l484 0918                               l476 0818  
                             l468 0712                               l397 12BC  
                             l485 0924                               l477 081C  
                             l469 071E                               l814 27BC  
                             l494 0A30                               l486 0928  
                             l478 0828                               l567 2790  
                             l495 0A34                               l487 0934  
                             l479 082C                               l496 0A40  
                             l488 0938                               l497 0A44  
                             l489 0944                               l762 2806  
                             l498 0A50                               l763 2808  
                             l499 0A54                               l691 1D74  
                             l748 2654                               l686 1D60  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                               _id1 0078  
                             _abs 279A                               _dir 0040  
                             _msg 008C                               wreg 000FE8  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
                            ?_abs 00BB                              l1171 2602  
                            l4100 2178                              l4008 2814  
                            l5000 1C44                              l4042 1F90  
                            l4026 1EDA                              l4124 02AC  
                            l5004 1C8A                              l5012 1CBA  
                            l4310 0958                              l4214 064C  
                            l4142 0364                              l5006 1C96  
                            l4160 041E                              l5040 1DA8  
                            l5008 1C9E                              l4242 0722  
                            l4074 20A6                              l5018 1D24  
                            l4412 0CAC                              l4316 099E  
                            l4068 2060                              l5036 1D96  
                            l4350 0ABA                              l5038 1D98  
                            l4344 0A74                              l4248 0768  
                            l4610 115C                              l4282 0882  
                            l4178 04D8                              l4604 113C  
                            l4508 0DBE                              l4276 083C  
                            l4196 0592                              l4534 0ED8  
                            l4470 22D6                              l4462 2274  
                            l4528 0EB8                              l4720 2784  
                            l4384 0BD6                              l4464 228A  
                            l4378 0B90                              l4660 12C6  
                            l4468 2292                              l4732 2642  
                            l4750 23B8                              l4920 25B2  
                            l4680 13C0                              l4584 1042  
                            l4760 23E8                              l4744 23A2  
                            l4728 2632                              l4922 25BE  
                            l4932 25F4                              l4924 25C4  
                            l4756 23D6                              l4772 2426  
                            l4908 254A                              l4686 13E0  
                            l4758 23E2                              l4776 243A  
                            l4768 2418                              l4972 1A30  
                            l4968 19CC                              _LATA 000F89  
                            _LATB 000F8A                              _LATC 000F8B  
                            _LATD 000F8C                              _LATE 000F8D  
                            u5020 05C8                              u5110 0742  
                            u5025 05BC                              u5115 0736  
                            u5035 0628                              u6115 26B2  
                            u4620 1F0C                              u6220 1B8C  
                            u5510 0CCC                              u5430 0BB0  
                            u5350 0A94                              u5270 0978  
                            u5190 085C                              u4710 2080  
                            u6230 1BF4                              u6320 1E0C  
                            u4625 1F00                              u6250 1C78  
                            u5515 0CC0                              u5435 0BA4  
                            u5355 0A88                              u5275 096C  
                            u5195 0850                              u4715 2074  
                            u4635 1F6C                              u4900 039A  
                            u4820 0228                              u4580 1E56  
                            u6260 1D20                              u5640 0DDE  
                            u4905 038E                              u4825 021C  
                            u4585 1E4A                              u5650 0E2A  
                            u4915 03FA                              u4835 0288  
                            u4595 1EB6                              u5900 12E6  
                            u4940 0454                              u4860 02E0  
                            u5645 0DD2                              u5910 1332  
                            u4790 2198                              u5655 0E1E  
                            u5905 12DA                              u5665 0E8A  
                            u4945 0448                              u4865 02D4  
                            u5770 1062                              u5915 1326  
                            u6387 2786                              u4955 04B4  
                            u4875 0340                              u4795 218C  
                            u5780 10AE                              u4980 050E  
                            u5925 1392                              u5775 1056  
                            u5785 10A2                              u4985 0502  
                            u5795 110E                              u4995 056E  
                            _TMR2 000FCC               __size_of_CANSetMask 039E  
                            abs@a 00BB                              _baud 0037  
                            _main 198C                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 0043                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 01EA                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000010  
                _CANOperationMode 280C            __end_of_SetOutputEPWM1 265E  
                           ??_abs 00BD        __size_of_CANreceiveMessage 050C  
                           ?_main 0001                   __end_of___awdiv 2444  
                 ___awdiv@divisor 00CA                             _T2CON 000FCA  
                           _T3CON 000FB1                   __end_of___lwdiv 260C  
                           i1l408 1718                             i1l670 01A2  
                           i1l559 2834                             i1l656 0188  
                           i1l659 0184                             i1l748 2726  
                 ___awdiv@counter 00CC                             _TMR3H 000FB3  
                           _TMR3L 000FB2                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
               _CANisRxReady$2991 0001                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
              __size_of_ISR_bassa 01D2                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 00CD                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _vBatt 008A  
                  __pbitbssCOMRAM 01D0              __end_of_CANisRxReady 2838  
       __size_ofi1_SetOutputEPWM1 0044                             tablat 000FF5  
            __end_of_CANisTxReady 27EA                             status 000FD8  
                  __CFG_PBADEN$ON 000000                        _SetDCEPWM1 26A8  
                 __initialization 265E          __size_of_battery_measure 00A0  
                    __end_of_main 1E22                   ?_SetOutputEPWM1 00BB  
                          ??_main 00D5                     __activetblptr 000002  
               _CANisTxReady$2989 00BB                     _counter_array 0060  
                          _CANCON 000F6F                            _ADRESH 000FC4  
                ___awdiv@dividend 00C8                   __CFG_BBSIZ$1024 000000  
                          i1l3610 193A                            i1l3602 1902  
                          i1l3540 1686                            i1l3614 1956  
                          i1l3606 191E                            i1l3616 1988  
                          i1l3552 16E0                            i1l3544 16A4  
                          i1l3536 1668                            i1l3528 15F8  
                          i1l3554 1712                            i1l3810 0066  
                          i1l3548 16C2                            i1l3590 1878  
                          i1l3830 00E2                            i1l3826 00D0  
                          i1l3852 016A                            i1l3836 0108  
                          i1l3598 18E6                            i1l3790 270A  
                          i1l3846 0148                            i1l3856 017A  
                          i1l3794 2718                        _OpenTimer2 27EA  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 00BF                CANsendMessage@tamp 00C7  
                __end_of_delay_ms 279A             __size_of_CANSetFilter 0B06  
                  __CFG_XINST$OFF 000000                __size_of_OpenEPWM1 0012  
               __end_of_ISR_bassa 01EA                            ___wmul 2730  
                       ??___awdiv 00CC                    __CFG_STVREN$ON 000000  
                       ??___lwdiv 00BF                      ??_CANSetMask 00C0  
                          _errore 002E                  OpenTimer2@config 00BB  
                          clear_0 2664                            clear_1 2674  
                ___awdiv@quotient 00CE          ?_configurazione_iniziale 0001  
                 __CFG_BOREN$BOHW 000000                      __pdataCOMRAM 003C  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                      _CANSetFilter 01EE  
                      __accesstop 0060           __end_of__initialization 269A  
              __end_of_CANSetMask 21C0                     ___rparam_used 000001  
                     ?_SetDCEPWM1 00BB                    __pcstackCOMRAM 0001  
               ??_battery_measure 00D0             CANSetFilter@numBuffer 00C4  
                 OpenEPWM1@period 00BB             __size_of_CANisRxReady 0016  
           __size_of_CANisTxReady 0024                 __end_of_OpenEPWM1 284A  
        __end_of_CANOperationMode 2822                  i1_SetOutputEPWM1 26EC  
                      __pbssBANK0 0060                       ?_OpenTimer2 0001  
                      _data_array 009B           __size_of_CANsendMessage 078C  
                         ?___wmul 00C2                      _CANisRxReady 2822  
                         _ECCPR1L 000FBB                           _CANSTAT 000F6E  
                    _CANisTxReady 27C6                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01C6                         ?_delay_ms 00C8  
                         _RXB0DLC 000F65                           _RXB1DLC 000F55  
                         _RXB0CON 000F60               __size_of_SetDCEPWM1 0044  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 00C2                  _data_array_debug 00AB  
        SetOutputEPWM1@outputmode 00BB                        _correzione 0070  
                ??_SetOutputEPWM1 00BC                           __Hparam 0000  
                      _left_speed 0030                           __Lparam 0000  
                delay_ms@value_ms 00C8                           ___awdiv 2386  
                 __size_of___wmul 0036                           ___lwdiv 2594  
            CANInitialize@propSeg 00D2                           __pcinit 265E  
                         __ramtop 0300               __size_of_OpenTimer2 0022  
                         __ptext0 198C                           __ptext1 2444  
                         __ptext2 260C                           __ptext3 21C0  
                         __ptext4 1E22                           __ptext5 01EE  
                         __ptext6 280C                           __ptext7 24F4  
                         __ptext8 2766                           __ptext9 2730  
                       _T2CONbits 000FCA                      __size_of_abs 002C  
                         _current 0038        i1SetOutputEPWM1@outputmode 0001  
                      _duty_cycle 0088                        ??_delay_ms 00CA  
          CANreceiveMessage@error 000B              end_of_initialization 269A  
                   __Lmediumconst 0000                     _CANInitialize 21C0  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
    i1SetOutputEPWM1@outputconfig 0002                         _ISR_bassa 0018  
                       _PORTAbits 000F80                    CANSetMask@mask 00BB  
                       _PORTCbits 000F82                    CANSetMask@tamp 00C5  
                  _centralina_abs 01D1                    CANSetMask@type 00BF  
                       _TRISDbits 000F95  __size_of_configurazione_iniziale 00B0  
             _previousTimeCounter 007C           _clock_counter_reference 002C  
                  _CANsendMessage 0CF4                  CANInitialize@BRP 00CC  
                CANInitialize@SJW 00CB                    ?_CANInitialize 00C9  
                      main@period 00DD                      ??_SetDCEPWM1 00BD  
                 _battery_measure 24F4                        ?_ISR_bassa 0001  
        __end_ofi1_SetOutputEPWM1 2730                    __end_of___wmul 2766  
                   __pidataCOMRAM 284A               start_initialization 265E  
                     __end_of_abs 27C6                __end_of_SetDCEPWM1 26EC  
             CANSetMask@numBuffer 00C4            __end_of_CANsendMessage 1480  
               ?_CANOperationMode 0001                      ??_OpenTimer2 00BB  
                       _OpenEPWM1 2838                ??_CANOperationMode 00BB  
      CANInitialize@FilterConfig1 00D3        CANInitialize@FilterConfig2 00D4  
                        ??___wmul 00C6                  __CFG_LPT1OSC$OFF 000000  
              __end_of_OpenTimer2 280C            CANInitialize@phaseSeg1 00C9  
          CANInitialize@phaseSeg2 00CA                       __pbssCOMRAM 0020  
                   __pcstackBANK0 00BB                       _data_debug1 00B3  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
                     _data_array1 00A3               SetDCEPWM1@dutycycle 00BB  
               __size_of_delay_ms 0034                   ?_CANsendMessage 00BB  
                      ?_OpenEPWM1 0001           __end_of_battery_measure 2594  
                 ??_CANInitialize 00CE                         _can_retry 01D0  
                    _currentSpeed 003C                CANSetFilter@filter 00BB  
                ___lwdiv@dividend 00BB                          ?___awdiv 00C8  
                        ?___lwdiv 00BB                       ??_ISR_bassa 000D  
                     __pintcodelo 0018                          _ECCP1CON 000FBA  
                     _COMSTATbits 000F74        SetOutputEPWM1@outputconfig 00BC  
                   _remote_frame1 01D6                  ___lwdiv@quotient 00C0  
         _configurazione_iniziale 2444                      _message_sent 01D4  
           CANreceiveMessage@tamp 000C                    ___wmul@product 00C6  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 0042  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                          _PIE3bits 000FA3  
                        i1u405_25 1962                          i1u424_20 006E  
                        i1u424_26 0070                          i1u385_20 1538  
                        i1u385_26 153A                          i1u386_20 1566  
                        i1u394_25 16EC                          i1u386_26 1568  
                        i1u396_20 17C0                          i1u388_25 157C  
                        i1u396_26 17C2                          i1u397_20 17EA  
                        i1u397_26 17EC                          i1u399_25 17FE  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                       _scrittura 0039                          _RXB0SIDL 000F62  
                        _RXF0EIDH 000F02                          _RXB1SIDH 000F51  
                        _RXF0EIDL 000F03                          _RXB1SIDL 000F52  
                        _RXF1EIDH 000F06                          _RXF1EIDL 000F07  
                        _RXF2EIDH 000F0A                          _RXF2EIDL 000F0B  
                        _RXF3EIDH 000F0E                          _RXF3EIDL 000F0F  
                        _RXF4EIDH 000F12                          _RXF4EIDL 000F13  
                        _RXF5EIDH 000F16                          _RXF5EIDL 000F17  
                        _RXF0SIDH 000F00                          _RXF0SIDL 000F01  
                        _TXB0EIDH 000F43                          _RXF1SIDH 000F04  
                        _TXB0EIDL 000F44                          _RXF1SIDL 000F05  
                        _TXB1EIDH 000F33                          _RXF2SIDH 000F08  
                        _TXB1EIDL 000F34                          _RXF2SIDL 000F09  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                        _RXERRCNT 000F75                          _TXERRCNT 000F76  
                      _ADCON0bits 000FC2                        _ADCON1bits 000FC1  
                      _ADCON2bits 000FC0                 ___wmul@multiplier 00C2  
                   ?_CANSetFilter 00BB                         copy_data0 268E  
                      _CANCONbits 000F6F                       ??_OpenEPWM1 00BB  
                ?_battery_measure 0001                          __Hrparam 0000  
                    _RXB0SIDLbits 000F62                  SetDCEPWM1@DCycle 00BF  
                        __Lrparam 0000                      _RXB1SIDLbits 000F52  
              _centralina_comando 01D2                        _CANSetMask 1E22  
                __size_of___awdiv 00BE                  __size_of___lwdiv 0078  
               ?i1_SetOutputEPWM1 0001           __size_of_SetOutputEPWM1 0052  
              ??i1_SetOutputEPWM1 0002                _currentSpeed_array 0068  
       ??_configurazione_iniziale 00D5                      _RXF0SIDLbits 000F01  
                        _delay_ms 2766                   ___lwdiv@divisor 00BD  
                    _RXF1SIDLbits 000F05                   ___lwdiv@counter 00BF  
                  ??_CANSetFilter 00C0                          __ptext10 2386  
                        __ptext11 0CF4                          __ptext20 1480  
                        __ptext12 27C6                          __ptext21 2822  
                        __ptext13 279A                          __ptext14 2594  
                        __ptext15 26A8                          __ptext16 27EA  
                        __ptext17 2838                          __ptext19 26EC  
                    _RXF2SIDLbits 000F09                      _RXF3SIDLbits 000F0D  
                    _RXF4SIDLbits 000F11                     _speed_fetched 01D8  
                    _RXF5SIDLbits 000F15          CANsendMessage@dataLength 00C1  
                    _remote_frame 01D5                     __size_of_main 0496  
                        _duty_set 0020              CANreceiveMessage@msg 0001  
                    _TXB0SIDLbits 000F42                      _TXB1SIDLbits 000F32  
                    _TXB2SIDLbits 000F22                          int$flags 0043  
                     _UART1Config 0036         __size_of_CANOperationMode 0016  
                   ?_CANisRxReady 0001                     ?_CANisTxReady 0001  
                     _RXB0DLCbits 000F65                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 1480  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                ??_CANsendMessage 00C3                      _requestSpeed 0024  
              ?_CANreceiveMessage 0001                      _request_sent 01D7  
        CANsendMessage@identifier 00BB                          intlevel1 0000  
               _centralina_sterzo 01D3                  CANSetFilter@tamp 00C5  
                CANSetFilter@type 00BF               ??_CANreceiveMessage 0003  
                     _TXB0DLCbits 000F45                       _right_speed 0034  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 24F4  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
                     _timeCounter 0028              CANOperationMode@mode 00BB  
                  ??_CANisRxReady 0001                       ?_CANSetMask 00BB  
                  ??_CANisTxReady 00BB         __end_of_CANreceiveMessage 198C  
                     _previousPwm 0032             __end_of_CANInitialize 2386  
