

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Jan 18 20:43:44 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	param0,global,class=BANK0,space=1,delta=1
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           	psect	idataBANK0
    43  002820                     __pidataBANK0:
    44                           	opt stack 0
    45                           
    46                           ;initializer for _currentSpeed
    47  002820  01                 	db	1
    48                           
    49                           ;initializer for _delay_quartz_frequency_value
    50  002821  08                 	db	8
    51  0000                     _RXB1CON	set	3920
    52  0000                     _RXB1CONbits	set	3920
    53  0000                     _RXB1D0	set	3926
    54  0000                     _RXB1D1	set	3927
    55  0000                     _RXB1D2	set	3928
    56  0000                     _RXB1D3	set	3929
    57  0000                     _RXB1D4	set	3930
    58  0000                     _RXB1D5	set	3931
    59  0000                     _RXB1D6	set	3932
    60  0000                     _RXB1D7	set	3933
    61  0000                     _RXB1DLC	set	3925
    62  0000                     _RXB1DLCbits	set	3925
    63  0000                     _RXB1EIDH	set	3923
    64  0000                     _RXB1EIDL	set	3924
    65  0000                     _RXB1SIDH	set	3921
    66  0000                     _RXB1SIDL	set	3922
    67  0000                     _RXB1SIDLbits	set	3922
    68  0000                     _RXF0EIDH	set	3842
    69  0000                     _RXF0EIDL	set	3843
    70  0000                     _RXF0SIDH	set	3840
    71  0000                     _RXF0SIDL	set	3841
    72  0000                     _RXF0SIDLbits	set	3841
    73  0000                     _RXF1EIDH	set	3846
    74  0000                     _RXF1EIDL	set	3847
    75  0000                     _RXF1SIDH	set	3844
    76  0000                     _RXF1SIDL	set	3845
    77  0000                     _RXF1SIDLbits	set	3845
    78  0000                     _RXF2EIDH	set	3850
    79  0000                     _RXF2EIDL	set	3851
    80  0000                     _RXF2SIDH	set	3848
    81  0000                     _RXF2SIDL	set	3849
    82  0000                     _RXF2SIDLbits	set	3849
    83  0000                     _RXF3EIDH	set	3854
    84  0000                     _RXF3EIDL	set	3855
    85  0000                     _RXF3SIDH	set	3852
    86  0000                     _RXF3SIDL	set	3853
    87  0000                     _RXF3SIDLbits	set	3853
    88  0000                     _RXF4EIDH	set	3858
    89  0000                     _RXF4EIDL	set	3859
    90  0000                     _RXF4SIDH	set	3856
    91  0000                     _RXF4SIDL	set	3857
    92  0000                     _RXF4SIDLbits	set	3857
    93  0000                     _RXF5EIDH	set	3862
    94  0000                     _RXF5EIDL	set	3863
    95  0000                     _RXF5SIDH	set	3860
    96  0000                     _RXF5SIDL	set	3861
    97  0000                     _RXF5SIDLbits	set	3861
    98  0000                     _RXM0EIDH	set	3866
    99  0000                     _RXM0EIDL	set	3867
   100  0000                     _RXM0SIDH	set	3864
   101  0000                     _RXM0SIDL	set	3865
   102  0000                     _RXM0SIDLbits	set	3865
   103  0000                     _RXM1EIDH	set	3870
   104  0000                     _RXM1EIDL	set	3871
   105  0000                     _RXM1SIDH	set	3868
   106  0000                     _RXM1SIDL	set	3869
   107  0000                     _RXM1SIDLbits	set	3869
   108  0000                     _TXB0CONbits	set	3904
   109  0000                     _TXB0D0	set	3910
   110  0000                     _TXB0D1	set	3911
   111  0000                     _TXB0D2	set	3912
   112  0000                     _TXB0D3	set	3913
   113  0000                     _TXB0D4	set	3914
   114  0000                     _TXB0D5	set	3915
   115  0000                     _TXB0D6	set	3916
   116  0000                     _TXB0D7	set	3917
   117  0000                     _TXB0DLC	set	3909
   118  0000                     _TXB0DLCbits	set	3909
   119  0000                     _TXB0EIDH	set	3907
   120  0000                     _TXB0EIDL	set	3908
   121  0000                     _TXB0SIDH	set	3905
   122  0000                     _TXB0SIDL	set	3906
   123  0000                     _TXB0SIDLbits	set	3906
   124  0000                     _TXB1CONbits	set	3888
   125  0000                     _TXB1D0	set	3894
   126  0000                     _TXB1D1	set	3895
   127  0000                     _TXB1D2	set	3896
   128  0000                     _TXB1D3	set	3897
   129  0000                     _TXB1D4	set	3898
   130  0000                     _TXB1D5	set	3899
   131  0000                     _TXB1D6	set	3900
   132  0000                     _TXB1D7	set	3901
   133  0000                     _TXB1DLC	set	3893
   134  0000                     _TXB1DLCbits	set	3893
   135  0000                     _TXB1EIDH	set	3891
   136  0000                     _TXB1EIDL	set	3892
   137  0000                     _TXB1SIDH	set	3889
   138  0000                     _TXB1SIDL	set	3890
   139  0000                     _TXB1SIDLbits	set	3890
   140  0000                     _TXB2CONbits	set	3872
   141  0000                     _TXB2D0	set	3878
   142  0000                     _TXB2D1	set	3879
   143  0000                     _TXB2D2	set	3880
   144  0000                     _TXB2D3	set	3881
   145  0000                     _TXB2D4	set	3882
   146  0000                     _TXB2D5	set	3883
   147  0000                     _TXB2D6	set	3884
   148  0000                     _TXB2D7	set	3885
   149  0000                     _TXB2DLC	set	3877
   150  0000                     _TXB2DLCbits	set	3877
   151  0000                     _TXB2EIDH	set	3875
   152  0000                     _TXB2EIDL	set	3876
   153  0000                     _TXB2SIDH	set	3873
   154  0000                     _TXB2SIDL	set	3874
   155  0000                     _TXB2SIDLbits	set	3874
   156  0000                     _ADCON0bits	set	4034
   157  0000                     _ADCON1bits	set	4033
   158  0000                     _ADCON2bits	set	4032
   159  0000                     _ADRESH	set	4036
   160  0000                     _BRGCON1	set	3952
   161  0000                     _BRGCON2	set	3953
   162  0000                     _BRGCON2bits	set	3953
   163  0000                     _BRGCON3	set	3954
   164  0000                     _BRGCON3bits	set	3954
   165  0000                     _CANCON	set	3951
   166  0000                     _CANCONbits	set	3951
   167  0000                     _CANSTAT	set	3950
   168  0000                     _COMSTATbits	set	3956
   169  0000                     _ECCP1CON	set	4026
   170  0000                     _ECCPR1L	set	4027
   171  0000                     _INTCON2bits	set	4081
   172  0000                     _INTCONbits	set	4082
   173  0000                     _IPR2bits	set	4002
   174  0000                     _IPR3bits	set	4005
   175  0000                     _LATA	set	3977
   176  0000                     _LATB	set	3978
   177  0000                     _LATC	set	3979
   178  0000                     _LATD	set	3980
   179  0000                     _LATE	set	3981
   180  0000                     _PIE1bits	set	3997
   181  0000                     _PIE2bits	set	4000
   182  0000                     _PIE3bits	set	4003
   183  0000                     _PIR1bits	set	3998
   184  0000                     _PIR2bits	set	4001
   185  0000                     _PIR3bits	set	4004
   186  0000                     _PORTAbits	set	3968
   187  0000                     _PORTCbits	set	3970
   188  0000                     _PORTD	set	3971
   189  0000                     _PR2	set	4043
   190  0000                     _RCONbits	set	4048
   191  0000                     _RXB0CON	set	3936
   192  0000                     _RXB0CONbits	set	3936
   193  0000                     _RXB0D0	set	3942
   194  0000                     _RXB0D1	set	3943
   195  0000                     _RXB0D2	set	3944
   196  0000                     _RXB0D3	set	3945
   197  0000                     _RXB0D4	set	3946
   198  0000                     _RXB0D5	set	3947
   199  0000                     _RXB0D6	set	3948
   200  0000                     _RXB0D7	set	3949
   201  0000                     _RXB0DLC	set	3941
   202  0000                     _RXB0DLCbits	set	3941
   203  0000                     _RXB0EIDH	set	3939
   204  0000                     _RXB0EIDL	set	3940
   205  0000                     _RXB0SIDH	set	3937
   206  0000                     _RXB0SIDL	set	3938
   207  0000                     _RXB0SIDLbits	set	3938
   208  0000                     _RXERRCNT	set	3957
   209  0000                     _T2CON	set	4042
   210  0000                     _T2CONbits	set	4042
   211  0000                     _T3CON	set	4017
   212  0000                     _TMR2	set	4044
   213  0000                     _TMR3H	set	4019
   214  0000                     _TMR3L	set	4018
   215  0000                     _TRISA	set	3986
   216  0000                     _TRISB	set	3987
   217  0000                     _TRISC	set	3988
   218  0000                     _TRISD	set	3989
   219  0000                     _TRISDbits	set	3989
   220  0000                     _TRISE	set	3990
   221  0000                     _TXERRCNT	set	3958
   222                           
   223                           ; #config settings
   224  0000                     
   225                           	psect	cinit
   226  0026A6                     __pcinit:
   227                           	opt stack 0
   228  0026A6                     start_initialization:
   229                           	opt stack 0
   230  0026A6                     __initialization:
   231                           	opt stack 0
   232                           
   233                           ; Clear objects allocated to BANK0 (43 bytes)
   234  0026A6  EE00  F091         	lfsr	0,__pbssBANK0
   235  0026AA  0E2B               	movlw	43
   236  0026AC                     clear_0:
   237  0026AC  6AEE               	clrf	postinc0,c
   238  0026AE  06E8               	decf	wreg,f,c
   239  0026B0  E1FD               	bnz	clear_0
   240                           
   241                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   242  0026B2  6A48               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   243  0026B4  6A47               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   244                           
   245                           ; Clear objects allocated to COMRAM (41 bytes)
   246  0026B6  EE00  F001         	lfsr	0,__pbssCOMRAM
   247  0026BA  0E29               	movlw	41
   248  0026BC                     clear_1:
   249  0026BC  6AEE               	clrf	postinc0,c
   250  0026BE  06E8               	decf	wreg,f,c
   251  0026C0  E1FD               	bnz	clear_1
   252                           
   253                           ; Initialize objects allocated to BANK0 (2 bytes)
   254                           ; load TBLPTR registers with __pidataBANK0
   255  0026C2  0E20               	movlw	low __pidataBANK0
   256  0026C4  6EF6               	movwf	tblptrl,c
   257  0026C6  0E28               	movlw	high __pidataBANK0
   258  0026C8  6EF7               	movwf	tblptrh,c
   259  0026CA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   260  0026CC  6EF8               	movwf	tblptru,c
   261  0026CE  0009               	tblrd		*+	;fetch initializer
   262  0026D0  CFF5 F0BC          	movff	tablat,__pdataBANK0
   263  0026D4  0009               	tblrd		*+	;fetch initializer
   264  0026D6  CFF5 F0BD          	movff	tablat,__pdataBANK0+1
   265  0026DA                     end_of_initialization:
   266                           	opt stack 0
   267  0026DA                     __end_of__initialization:
   268                           	opt stack 0
   269  0026DA  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   270  0026DC  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   271  0026DE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   272  0026E0  6EF8               	movwf	tblptru,c
   273  0026E2  0100               	movlb	0
   274  0026E4  EFA5  F00C         	goto	_main	;jump to C main() function
   275                           tblptru	equ	0xFF8
   276                           tblptrh	equ	0xFF7
   277                           tblptrl	equ	0xFF6
   278                           tablat	equ	0xFF5
   279                           postinc0	equ	0xFEE
   280                           wreg	equ	0xFE8
   281                           
   282                           	psect	bitbssCOMRAM
   283  000238                     __pbitbssCOMRAM:
   284                           	opt stack 0
   285  000238                     _can_retry:
   286                           	opt stack 0
   287  000238                     	ds	1
   288  000239                     _centralina_abs:
   289                           	opt stack 0
   290  000239                     	ds	1
   291  00023A                     _centralina_comando:
   292                           	opt stack 0
   293  00023A                     	ds	1
   294  00023B                     _centralina_sterzo:
   295                           	opt stack 0
   296  00023B                     	ds	1
   297  00023C                     _message_sent:
   298                           	opt stack 0
   299  00023C                     	ds	1
   300  00023D                     _remote_frame:
   301                           	opt stack 0
   302  00023D                     	ds	1
   303  00023E                     _remote_frame1:
   304                           	opt stack 0
   305  00023E                     	ds	1
   306  00023F                     _request_sent:
   307                           	opt stack 0
   308  00023F                     	ds	1
   309  000240                     _speed_fetched:
   310                           	opt stack 0
   311  000240                     	ds	1
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           
   319                           	psect	bssCOMRAM
   320  000001                     __pbssCOMRAM:
   321                           	opt stack 0
   322  000001                     _counter_array:
   323                           	opt stack 0
   324  000001                     	ds	8
   325  000009                     _counter:
   326                           	opt stack 0
   327  000009                     	ds	4
   328  00000D                     _id:
   329                           	opt stack 0
   330  00000D                     	ds	4
   331  000011                     _id1:
   332                           	opt stack 0
   333  000011                     	ds	4
   334  000015                     _timeCounter:
   335                           	opt stack 0
   336  000015                     	ds	4
   337  000019                     _duty_cycle:
   338                           	opt stack 0
   339  000019                     	ds	2
   340  00001B                     _msg:
   341                           	opt stack 0
   342  00001B                     	ds	15
   343                           tblptru	equ	0xFF8
   344                           tblptrh	equ	0xFF7
   345                           tblptrl	equ	0xFF6
   346                           tablat	equ	0xFF5
   347                           postinc0	equ	0xFEE
   348                           wreg	equ	0xFE8
   349                           
   350                           	psect	bssBANK0
   351  000091                     __pbssBANK0:
   352                           	opt stack 0
   353  000091                     _currentSpeed_array:
   354                           	opt stack 0
   355  000091                     	ds	8
   356  000099                     _previousTimeCounter:
   357                           	opt stack 0
   358  000099                     	ds	4
   359  00009D                     _previousTimeCounter1:
   360                           	opt stack 0
   361  00009D                     	ds	4
   362  0000A1                     _previousTimeCounter2:
   363                           	opt stack 0
   364  0000A1                     	ds	4
   365  0000A5                     _clock_counter_reference:
   366                           	opt stack 0
   367  0000A5                     	ds	2
   368  0000A7                     _correzione:
   369                           	opt stack 0
   370  0000A7                     	ds	2
   371  0000A9                     _dir:
   372                           	opt stack 0
   373  0000A9                     	ds	2
   374  0000AB                     _errore:
   375                           	opt stack 0
   376  0000AB                     	ds	2
   377  0000AD                     _vBatt:
   378                           	opt stack 0
   379  0000AD                     	ds	2
   380  0000AF                     _duty_set:
   381                           	opt stack 0
   382  0000AF                     	ds	1
   383  0000B0                     _left_speed:
   384                           	opt stack 0
   385  0000B0                     	ds	1
   386  0000B1                     _previousPwm:
   387                           	opt stack 0
   388  0000B1                     	ds	1
   389  0000B2                     _requestSpeed:
   390                           	opt stack 0
   391  0000B2                     	ds	1
   392  0000B3                     _right_speed:
   393                           	opt stack 0
   394  0000B3                     	ds	1
   395  0000B4                     _data_array:
   396                           	opt stack 0
   397  0000B4                     	ds	8
   398                           tblptru	equ	0xFF8
   399                           tblptrh	equ	0xFF7
   400                           tblptrl	equ	0xFF6
   401                           tablat	equ	0xFF5
   402                           postinc0	equ	0xFEE
   403                           wreg	equ	0xFE8
   404                           
   405                           	psect	dataBANK0
   406  0000BC                     __pdataBANK0:
   407                           	opt stack 0
   408  0000BC                     _currentSpeed:
   409                           	opt stack 0
   410  0000BC                     	ds	1
   411  0000BD                     _delay_quartz_frequency_value:
   412                           	opt stack 0
   413  0000BD                     	ds	1
   414                           tblptru	equ	0xFF8
   415                           tblptrh	equ	0xFF7
   416                           tblptrl	equ	0xFF6
   417                           tablat	equ	0xFF5
   418                           postinc0	equ	0xFEE
   419                           wreg	equ	0xFE8
   420                           
   421                           	psect	cstackBANK0
   422  000060                     __pcstackBANK0:
   423                           	opt stack 0
   424  000060                     ??_ISR_alta:
   425                           
   426                           ; 0 bytes @ 0x0
   427  000060                     	ds	14
   428  00006E                     ?_abs:
   429                           	opt stack 0
   430  00006E                     ?___awdiv:
   431                           	opt stack 0
   432  00006E                     CANOperationMode@mode:
   433                           	opt stack 0
   434  00006E                     _CANisTxReady$3033:
   435                           	opt stack 0
   436  00006E                     OpenEPWM1@period:
   437                           	opt stack 0
   438  00006E                     SetOutputEPWM1@outputmode:
   439                           	opt stack 0
   440  00006E                     OpenTimer2@config:
   441                           	opt stack 0
   442  00006E                     SetDCEPWM1@dutycycle:
   443                           	opt stack 0
   444  00006E                     abs@a:
   445                           	opt stack 0
   446  00006E                     ___awdiv@dividend:
   447                           	opt stack 0
   448  00006E                     CANsendMessage@identifier:
   449                           	opt stack 0
   450  00006E                     CANSetMask@mask:
   451                           	opt stack 0
   452  00006E                     CANSetFilter@filter:
   453                           	opt stack 0
   454                           
   455                           ; 4 bytes @ 0xE
   456  00006E                     	ds	1
   457  00006F                     SetOutputEPWM1@outputconfig:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0xF
   461  00006F                     	ds	1
   462  000070                     ??_abs:
   463  000070                     ??_SetDCEPWM1:
   464  000070                     ___awdiv@divisor:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x10
   468  000070                     	ds	2
   469  000072                     CANSetMask@type:
   470                           	opt stack 0
   471  000072                     CANSetFilter@type:
   472                           	opt stack 0
   473  000072                     ___awdiv@counter:
   474                           	opt stack 0
   475  000072                     CANsendMessage@data:
   476                           	opt stack 0
   477  000072                     SetDCEPWM1@DCycle:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x12
   481  000072                     	ds	1
   482  000073                     ??_CANSetMask:
   483  000073                     ??_CANSetFilter:
   484  000073                     ___awdiv@sign:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x13
   488  000073                     	ds	1
   489  000074                     CANsendMessage@dataLength:
   490                           	opt stack 0
   491  000074                     ___awdiv@quotient:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x14
   495  000074                     	ds	1
   496  000075                     CANsendMessage@flags:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x15
   500  000075                     	ds	1
   501  000076                     ??_CANsendMessage:
   502  000076                     ?___wmul:
   503                           	opt stack 0
   504  000076                     ___wmul@multiplier:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x16
   508  000076                     	ds	1
   509  000077                     CANSetMask@numBuffer:
   510                           	opt stack 0
   511  000077                     CANSetFilter@numBuffer:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x17
   515  000077                     	ds	1
   516  000078                     ___wmul@multiplicand:
   517                           	opt stack 0
   518  000078                     CANSetMask@tamp:
   519                           	opt stack 0
   520  000078                     CANSetFilter@tamp:
   521                           	opt stack 0
   522                           
   523                           ; 4 bytes @ 0x18
   524  000078                     	ds	2
   525  00007A                     ___wmul@product:
   526                           	opt stack 0
   527  00007A                     CANsendMessage@tamp:
   528                           	opt stack 0
   529                           
   530                           ; 4 bytes @ 0x1A
   531  00007A                     	ds	2
   532  00007C                     CANInitialize@phaseSeg1:
   533                           	opt stack 0
   534  00007C                     delay_ms@value_ms:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x1C
   538  00007C                     	ds	1
   539  00007D                     CANInitialize@phaseSeg2:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x1D
   543  00007D                     	ds	1
   544  00007E                     CANInitialize@SJW:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x1E
   548  00007E                     	ds	1
   549  00007F                     CANInitialize@BRP:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0x1F
   553  00007F                     	ds	1
   554  000080                     CANInitialize@flags:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x20
   558  000080                     	ds	1
   559  000081                     ??_CANInitialize:
   560                           
   561                           ; 0 bytes @ 0x21
   562  000081                     	ds	4
   563  000085                     CANInitialize@propSeg:
   564                           	opt stack 0
   565                           
   566                           ; 1 bytes @ 0x25
   567  000085                     	ds	1
   568  000086                     CANInitialize@FilterConfig1:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x26
   572  000086                     	ds	1
   573  000087                     CANInitialize@FilterConfig2:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0x27
   577  000087                     	ds	1
   578  000088                     ??_main:
   579                           
   580                           ; 0 bytes @ 0x28
   581  000088                     	ds	8
   582  000090                     main@period:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x30
   586  000090                     	ds	1
   587                           tblptru	equ	0xFF8
   588                           tblptrh	equ	0xFF7
   589                           tblptrl	equ	0xFF6
   590                           tablat	equ	0xFF5
   591                           postinc0	equ	0xFEE
   592                           wreg	equ	0xFE8
   593                           
   594                           	psect	cstackCOMRAM
   595  00002A                     __pcstackCOMRAM:
   596                           	opt stack 0
   597  00002A                     _CANisRxReady$3035:
   598                           	opt stack 0
   599  00002A                     CANreceiveMessage@msg:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x0
   603  00002A                     	ds	2
   604  00002C                     ??_CANreceiveMessage:
   605                           
   606                           ; 0 bytes @ 0x2
   607  00002C                     	ds	8
   608  000034                     CANreceiveMessage@error:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0xA
   612  000034                     	ds	1
   613  000035                     CANreceiveMessage@tamp:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0xB
   617  000035                     	ds	1
   618  000036                     ??_ISR_bassa:
   619                           
   620                           ; 0 bytes @ 0xC
   621  000036                     	ds	17
   622                           tblptru	equ	0xFF8
   623                           tblptrh	equ	0xFF7
   624                           tblptrl	equ	0xFF6
   625                           tablat	equ	0xFF5
   626                           postinc0	equ	0xFEE
   627                           wreg	equ	0xFE8
   628                           
   629 ;;
   630 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   631 ;;
   632 ;; *************** function _main *****************
   633 ;; Defined at:
   634 ;;		line 126 in file "motore.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;		None
   637 ;; Auto vars:     Size  Location     Type
   638 ;;  period          1   48[BANK0 ] unsigned char 
   639 ;; Return value:  Size  Location     Type
   640 ;;                  2  672[None  ] int 
   641 ;; Registers used:
   642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   648 ;;      Params:         0       0       0       0
   649 ;;      Locals:         0       1       0       0
   650 ;;      Temps:          0       8       0       0
   651 ;;      Totals:         0       9       0       0
   652 ;;Total ram usage:        9 bytes
   653 ;; Hardware stack levels required when called:    6
   654 ;; This function calls:
   655 ;;		_CANisRXwarningON
   656 ;;		_CANisTXwarningON
   657 ;;		_CANsendMessage
   658 ;;		_OpenEPWM1
   659 ;;		_OpenTimer2
   660 ;;		_SetDCEPWM1
   661 ;;		_SetOutputEPWM1
   662 ;;		___awdiv
   663 ;;		___wmul
   664 ;;		_abs
   665 ;;		_battery_measure
   666 ;;		_configurazione_iniziale
   667 ;;		_delay_ms
   668 ;;		_send_data
   669 ;; This function is called by:
   670 ;;		Startup code after reset
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           	psect	text0
   675  00194A                     __ptext0:
   676                           	opt stack 0
   677  00194A                     _main:
   678                           	opt stack 25
   679                           
   680                           ;motore.c: 127: unsigned char period;
   681                           ;motore.c: 128: configurazione_iniziale();
   682                           
   683                           ;incstack = 0
   684  00194A  EC00  F012         	call	_configurazione_iniziale	;wreg free
   685                           
   686                           ;motore.c: 129: OpenTimer2(0b01111111 & 0b11111100 & 0b10000111);
   687  00194E  0E04               	movlw	4
   688  001950  ECD4  F013         	call	_OpenTimer2
   689                           
   690                           ;motore.c: 130: period = 249;
   691  001954  0EF9               	movlw	249
   692  001956  0100               	movlb	0	; () banked
   693  001958  6F90               	movwf	main@period& (0+255),b
   694                           
   695                           ; BSR set to: 0
   696                           ;motore.c: 131: OpenEPWM1(period);
   697  00195A  0100               	movlb	0	; () banked
   698  00195C  5190               	movf	main@period& (0+255),w,b
   699  00195E  ECFB  F013         	call	_OpenEPWM1
   700                           
   701                           ;motore.c: 134: PORTD = 0xFF;
   702  001962  6883               	setf	3971,c	;volatile
   703                           
   704                           ;motore.c: 135: delay_ms(500);
   705  001964  0E01               	movlw	1
   706  001966  0100               	movlb	0	; () banked
   707  001968  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
   708  00196A  0EF4               	movlw	244
   709  00196C  6F7C               	movwf	delay_ms@value_ms& (0+255),b
   710  00196E  EC74  F013         	call	_delay_ms	;wreg free
   711                           
   712                           ;motore.c: 136: PORTD = 0x00;
   713  001972  0E00               	movlw	0
   714  001974  6E83               	movwf	3971,c	;volatile
   715                           
   716                           ;motore.c: 137: delay_ms(500);
   717  001976  0E01               	movlw	1
   718  001978  0100               	movlb	0	; () banked
   719  00197A  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
   720  00197C  0EF4               	movlw	244
   721  00197E  6F7C               	movwf	delay_ms@value_ms& (0+255),b
   722  001980  EC74  F013         	call	_delay_ms	;wreg free
   723                           
   724                           ;motore.c: 138: PORTD = 0xFF;
   725  001984  6883               	setf	3971,c	;volatile
   726                           
   727                           ;motore.c: 139: delay_ms(500);
   728  001986  0E01               	movlw	1
   729  001988  0100               	movlb	0	; () banked
   730  00198A  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
   731  00198C  0EF4               	movlw	244
   732  00198E  6F7C               	movwf	delay_ms@value_ms& (0+255),b
   733  001990  EC74  F013         	call	_delay_ms	;wreg free
   734                           
   735                           ;motore.c: 140: PORTD = 0x00;
   736  001994  0E00               	movlw	0
   737  001996  6E83               	movwf	3971,c	;volatile
   738                           
   739                           ;motore.c: 141: delay_ms(500);
   740  001998  0E01               	movlw	1
   741  00199A  0100               	movlb	0	; () banked
   742  00199C  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
   743  00199E  0EF4               	movlw	244
   744  0019A0  6F7C               	movwf	delay_ms@value_ms& (0+255),b
   745  0019A2  EC74  F013         	call	_delay_ms	;wreg free
   746  0019A6                     l4916:
   747                           
   748                           ;motore.c: 145: if (PORTAbits.RA7 == 0) {
   749  0019A6  BE80               	btfsc	3968,7,c	;volatile
   750  0019A8  D15B               	goto	l4970
   751                           
   752                           ;motore.c: 146: if (dir == 1) {
   753  0019AA  0100               	movlb	0	; () banked
   754  0019AC  05A9               	decf	_dir& (0+255),w,b
   755  0019AE  0100               	movlb	0	; () banked
   756  0019B0  11AA               	iorwf	(_dir+1)& (0+255),w,b
   757  0019B2  A4D8               	btfss	status,2,c
   758  0019B4  D008               	goto	l4926
   759                           
   760                           ; BSR set to: 0
   761                           ;motore.c: 147: SetOutputEPWM1(0b01111111, 0b11111100);
   762  0019B6  0EFC               	movlw	252
   763  0019B8  0100               	movlb	0	; () banked
   764  0019BA  6F6E               	movwf	SetOutputEPWM1@outputmode& (0+255),b
   765  0019BC  0E7F               	movlw	127
   766  0019BE  EC08  F013         	call	_SetOutputEPWM1
   767                           
   768                           ;motore.c: 148: PORTCbits.RC0 = 1;
   769  0019C2  8082               	bsf	3970,0,c	;volatile
   770                           
   771                           ;motore.c: 149: PORTCbits.RC1 = 0;
   772  0019C4  9282               	bcf	3970,1,c	;volatile
   773  0019C6                     l4926:
   774                           
   775                           ;motore.c: 150: }
   776                           ;motore.c: 151: if (dir == 0) {
   777  0019C6  0100               	movlb	0	; () banked
   778  0019C8  51A9               	movf	_dir& (0+255),w,b
   779  0019CA  0100               	movlb	0	; () banked
   780  0019CC  11AA               	iorwf	(_dir+1)& (0+255),w,b
   781  0019CE  A4D8               	btfss	status,2,c
   782  0019D0  D008               	goto	l4934
   783                           
   784                           ; BSR set to: 0
   785                           ;motore.c: 152: SetOutputEPWM1(0b11111111, 0b11111100);
   786  0019D2  0EFC               	movlw	252
   787  0019D4  0100               	movlb	0	; () banked
   788  0019D6  6F6E               	movwf	SetOutputEPWM1@outputmode& (0+255),b
   789  0019D8  0EFF               	movlw	255
   790  0019DA  EC08  F013         	call	_SetOutputEPWM1
   791                           
   792                           ;motore.c: 153: PORTCbits.RC0 = 0;
   793  0019DE  9082               	bcf	3970,0,c	;volatile
   794                           
   795                           ;motore.c: 154: PORTCbits.RC1 = 1;
   796  0019E0  8282               	bsf	3970,1,c	;volatile
   797  0019E2                     l4934:
   798                           
   799                           ;motore.c: 155: }
   800                           ;motore.c: 156: if (duty_set == 0) {
   801  0019E2  0100               	movlb	0	; () banked
   802  0019E4  51AF               	movf	_duty_set& (0+255),w,b
   803  0019E6  0100               	movlb	0	; () banked
   804  0019E8  A4D8               	btfss	status,2,c
   805  0019EA  D002               	goto	l4938
   806                           
   807                           ; BSR set to: 0
   808                           ;motore.c: 157: PORTCbits.RC0 = 0;
   809  0019EC  9082               	bcf	3970,0,c	;volatile
   810                           
   811                           ;motore.c: 158: PORTCbits.RC1 = 0;
   812  0019EE  9282               	bcf	3970,1,c	;volatile
   813  0019F0                     l4938:
   814                           
   815                           ; BSR set to: 0
   816                           ;motore.c: 159: }
   817                           ;motore.c: 160: if ((timeCounter - previousTimeCounter1 >= 10)) {
   818  0019F0  C09D  F088         	movff	_previousTimeCounter1,??_main
   819  0019F4  C09E  F089         	movff	_previousTimeCounter1+1,??_main+1
   820  0019F8  C09F  F08A         	movff	_previousTimeCounter1+2,??_main+2
   821  0019FC  C0A0  F08B         	movff	_previousTimeCounter1+3,??_main+3
   822  001A00  0100               	movlb	0	; () banked
   823  001A02  1F88               	comf	??_main& (0+255),f,b
   824  001A04  1F89               	comf	(??_main+1)& (0+255),f,b
   825  001A06  1F8A               	comf	(??_main+2)& (0+255),f,b
   826  001A08  1F8B               	comf	(??_main+3)& (0+255),f,b
   827  001A0A  2B88               	incf	??_main& (0+255),f,b
   828  001A0C  0E00               	movlw	0
   829  001A0E  2389               	addwfc	(??_main+1)& (0+255),f,b
   830  001A10  238A               	addwfc	(??_main+2)& (0+255),f,b
   831  001A12  238B               	addwfc	(??_main+3)& (0+255),f,b
   832  001A14  5015               	movf	_timeCounter,w,c
   833  001A16  0100               	movlb	0	; () banked
   834  001A18  2588               	addwf	??_main& (0+255),w,b
   835  001A1A  0100               	movlb	0	; () banked
   836  001A1C  6F8C               	movwf	(??_main+4)& (0+255),b
   837  001A1E  5016               	movf	_timeCounter+1,w,c
   838  001A20  0100               	movlb	0	; () banked
   839  001A22  2189               	addwfc	(??_main+1)& (0+255),w,b
   840  001A24  0100               	movlb	0	; () banked
   841  001A26  6F8D               	movwf	(??_main+5)& (0+255),b
   842  001A28  5017               	movf	_timeCounter+2,w,c
   843  001A2A  0100               	movlb	0	; () banked
   844  001A2C  218A               	addwfc	(??_main+2)& (0+255),w,b
   845  001A2E  0100               	movlb	0	; () banked
   846  001A30  6F8E               	movwf	(??_main+6)& (0+255),b
   847  001A32  5018               	movf	_timeCounter+3,w,c
   848  001A34  0100               	movlb	0	; () banked
   849  001A36  218B               	addwfc	(??_main+3)& (0+255),w,b
   850  001A38  0100               	movlb	0	; () banked
   851  001A3A  6F8F               	movwf	(??_main+7)& (0+255),b
   852  001A3C  0100               	movlb	0	; () banked
   853  001A3E  518F               	movf	(??_main+7)& (0+255),w,b
   854  001A40  0100               	movlb	0	; () banked
   855  001A42  118E               	iorwf	(??_main+6)& (0+255),w,b
   856  001A44  0100               	movlb	0	; () banked
   857  001A46  118D               	iorwf	(??_main+5)& (0+255),w,b
   858  001A48  E105               	bnz	u6410
   859  001A4A  0E0A               	movlw	10
   860  001A4C  0100               	movlb	0	; () banked
   861  001A4E  5D8C               	subwf	(??_main+4)& (0+255),w,b
   862  001A50  A0D8               	btfss	status,0,c
   863  001A52  D106               	goto	l4970
   864  001A54                     u6410:
   865                           
   866                           ; BSR set to: 0
   867                           ;motore.c: 161: CANsendMessage(0b00000000000000000000000000010, 0, 0, CAN_CONFIG_STD_MSG
      +                           & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   868  001A54  0E02               	movlw	2
   869  001A56  0100               	movlb	0	; () banked
   870  001A58  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
   871  001A5A  0E00               	movlw	0
   872  001A5C  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   873  001A5E  0E00               	movlw	0
   874  001A60  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   875  001A62  0E00               	movlw	0
   876  001A64  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   877  001A66  0E00               	movlw	0
   878  001A68  0100               	movlb	0	; () banked
   879  001A6A  6F72               	movwf	CANsendMessage@data& (0+255),b
   880  001A6C  0E00               	movlw	0
   881  001A6E  0100               	movlb	0	; () banked
   882  001A70  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
   883  001A72  0E00               	movlw	0
   884  001A74  0100               	movlb	0	; () banked
   885  001A76  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
   886  001A78  0EFC               	movlw	252
   887  001A7A  0100               	movlb	0	; () banked
   888  001A7C  6F75               	movwf	CANsendMessage@flags& (0+255),b
   889  001A7E  EC59  F006         	call	_CANsendMessage	;wreg free
   890                           
   891                           ;motore.c: 162: if (speed_fetched == 1) {
   892  001A82  A048               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   893  001A84  D0ED               	goto	l4970
   894                           
   895                           ;motore.c: 163: speed_fetched = 0;
   896  001A86  9048               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   897                           
   898                           ;motore.c: 164: currentSpeed = ((left_speed + right_speed) / 2);
   899  001A88  0100               	movlb	0	; () banked
   900  001A8A  51B0               	movf	_left_speed& (0+255),w,b
   901  001A8C  0100               	movlb	0	; () banked
   902  001A8E  25B3               	addwf	_right_speed& (0+255),w,b
   903  001A90  0100               	movlb	0	; () banked
   904  001A92  6F6E               	movwf	___awdiv@dividend& (0+255),b
   905  001A94  0100               	movlb	0	; () banked
   906  001A96  6B6F               	clrf	(___awdiv@dividend+1)& (0+255),b
   907  001A98  0100               	movlb	0	; () banked
   908  001A9A  376F               	rlcf	(___awdiv@dividend+1)& (0+255),f,b
   909  001A9C  0E00               	movlw	0
   910  001A9E  0100               	movlb	0	; () banked
   911  001AA0  6F71               	movwf	(___awdiv@divisor+1)& (0+255),b
   912  001AA2  0E02               	movlw	2
   913  001AA4  6F70               	movwf	___awdiv@divisor& (0+255),b
   914  001AA6  ECA1  F011         	call	___awdiv	;wreg free
   915  001AAA  0100               	movlb	0	; () banked
   916  001AAC  516E               	movf	?___awdiv& (0+255),w,b
   917  001AAE  0100               	movlb	0	; () banked
   918  001AB0  6FBC               	movwf	_currentSpeed& (0+255),b
   919                           
   920                           ; BSR set to: 0
   921                           ;motore.c: 165: if (currentSpeed - requestSpeed > 0) {
   922  001AB2  0100               	movlb	0	; () banked
   923  001AB4  51B2               	movf	_requestSpeed& (0+255),w,b
   924  001AB6  0100               	movlb	0	; () banked
   925  001AB8  6F88               	movwf	??_main& (0+255),b
   926  001ABA  6B89               	clrf	(??_main+1)& (0+255),b
   927  001ABC  0100               	movlb	0	; () banked
   928  001ABE  1F88               	comf	??_main& (0+255),f,b
   929  001AC0  1F89               	comf	(??_main+1)& (0+255),f,b
   930  001AC2  4B88               	infsnz	??_main& (0+255),f,b
   931  001AC4  2B89               	incf	(??_main+1)& (0+255),f,b
   932  001AC6  0100               	movlb	0	; () banked
   933  001AC8  51BC               	movf	_currentSpeed& (0+255),w,b
   934  001ACA  0100               	movlb	0	; () banked
   935  001ACC  6F8A               	movwf	(??_main+2)& (0+255),b
   936  001ACE  6B8B               	clrf	(??_main+3)& (0+255),b
   937  001AD0  0100               	movlb	0	; () banked
   938  001AD2  5188               	movf	??_main& (0+255),w,b
   939  001AD4  0100               	movlb	0	; () banked
   940  001AD6  278A               	addwf	(??_main+2)& (0+255),f,b
   941  001AD8  0100               	movlb	0	; () banked
   942  001ADA  5189               	movf	(??_main+1)& (0+255),w,b
   943  001ADC  0100               	movlb	0	; () banked
   944  001ADE  238B               	addwfc	(??_main+3)& (0+255),f,b
   945  001AE0  0100               	movlb	0	; () banked
   946  001AE2  BF8B               	btfsc	(??_main+3)& (0+255),7,b
   947  001AE4  D0B5               	goto	l4968
   948  001AE6  0100               	movlb	0	; () banked
   949  001AE8  518B               	movf	(??_main+3)& (0+255),w,b
   950  001AEA  E104               	bnz	u6430
   951  001AEC  0100               	movlb	0	; () banked
   952  001AEE  058A               	decf	(??_main+2)& (0+255),w,b
   953  001AF0  A0D8               	btfss	status,0,c
   954  001AF2  D0AE               	goto	l4968
   955  001AF4                     u6430:
   956                           
   957                           ; BSR set to: 0
   958                           ;motore.c: 166: errore = abs(currentSpeed - requestSpeed);
   959  001AF4  0100               	movlb	0	; () banked
   960  001AF6  51B2               	movf	_requestSpeed& (0+255),w,b
   961  001AF8  0100               	movlb	0	; () banked
   962  001AFA  6F88               	movwf	??_main& (0+255),b
   963  001AFC  6B89               	clrf	(??_main+1)& (0+255),b
   964  001AFE  0100               	movlb	0	; () banked
   965  001B00  1F88               	comf	??_main& (0+255),f,b
   966  001B02  1F89               	comf	(??_main+1)& (0+255),f,b
   967  001B04  4B88               	infsnz	??_main& (0+255),f,b
   968  001B06  2B89               	incf	(??_main+1)& (0+255),f,b
   969  001B08  0100               	movlb	0	; () banked
   970  001B0A  51BC               	movf	_currentSpeed& (0+255),w,b
   971  001B0C  0100               	movlb	0	; () banked
   972  001B0E  2588               	addwf	??_main& (0+255),w,b
   973  001B10  0100               	movlb	0	; () banked
   974  001B12  6F6E               	movwf	abs@a& (0+255),b
   975  001B14  0E00               	movlw	0
   976  001B16  0100               	movlb	0	; () banked
   977  001B18  2189               	addwfc	(??_main+1)& (0+255),w,b
   978  001B1A  0100               	movlb	0	; () banked
   979  001B1C  6F6F               	movwf	(abs@a+1)& (0+255),b
   980  001B1E  ECAC  F013         	call	_abs	;wreg free
   981  001B22  C06E  F0AB         	movff	?_abs,_errore
   982  001B26  C06F  F0AC         	movff	?_abs+1,_errore+1
   983                           
   984                           ;motore.c: 167: correzione = ((errore / 17)*(errore / 17))*4;
   985  001B2A  0E00               	movlw	0
   986  001B2C  0100               	movlb	0	; () banked
   987  001B2E  6F71               	movwf	(___awdiv@divisor+1)& (0+255),b
   988  001B30  0E11               	movlw	17
   989  001B32  6F70               	movwf	___awdiv@divisor& (0+255),b
   990  001B34  C0AB  F06E         	movff	_errore,___awdiv@dividend
   991  001B38  C0AC  F06F         	movff	_errore+1,___awdiv@dividend+1
   992  001B3C  ECA1  F011         	call	___awdiv	;wreg free
   993  001B40  C06E  F076         	movff	?___awdiv,___wmul@multiplier
   994  001B44  C06F  F077         	movff	?___awdiv+1,___wmul@multiplier+1
   995  001B48  0E00               	movlw	0
   996  001B4A  0100               	movlb	0	; () banked
   997  001B4C  6F71               	movwf	(___awdiv@divisor+1)& (0+255),b
   998  001B4E  0E11               	movlw	17
   999  001B50  6F70               	movwf	___awdiv@divisor& (0+255),b
  1000  001B52  C0AB  F06E         	movff	_errore,___awdiv@dividend
  1001  001B56  C0AC  F06F         	movff	_errore+1,___awdiv@dividend+1
  1002  001B5A  ECA1  F011         	call	___awdiv	;wreg free
  1003  001B5E  C06E  F078         	movff	?___awdiv,___wmul@multiplicand
  1004  001B62  C06F  F079         	movff	?___awdiv+1,___wmul@multiplicand+1
  1005  001B66  EC91  F013         	call	___wmul	;wreg free
  1006  001B6A  0100               	movlb	0	; () banked
  1007  001B6C  90D8               	bcf	status,0,c
  1008  001B6E  3776               	rlcf	?___wmul& (0+255),f,b
  1009  001B70  3777               	rlcf	(?___wmul+1)& (0+255),f,b
  1010  001B72  0100               	movlb	0	; () banked
  1011  001B74  90D8               	bcf	status,0,c
  1012  001B76  3776               	rlcf	?___wmul& (0+255),f,b
  1013  001B78  3777               	rlcf	(?___wmul+1)& (0+255),f,b
  1014  001B7A  C076  F0A7         	movff	?___wmul,_correzione
  1015  001B7E  C077  F0A8         	movff	?___wmul+1,_correzione+1
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;motore.c: 168: if (correzione > 1) {
  1019  001B82  0100               	movlb	0	; () banked
  1020  001B84  51A8               	movf	(_correzione+1)& (0+255),w,b
  1021  001B86  E105               	bnz	u6440
  1022  001B88  0E02               	movlw	2
  1023  001B8A  0100               	movlb	0	; () banked
  1024  001B8C  5DA7               	subwf	_correzione& (0+255),w,b
  1025  001B8E  A0D8               	btfss	status,0,c
  1026  001B90  D057               	goto	l681
  1027  001B92                     u6440:
  1028                           
  1029                           ; BSR set to: 0
  1030                           ;motore.c: 169: if ((currentSpeed - requestSpeed) > 0) {
  1031  001B92  0100               	movlb	0	; () banked
  1032  001B94  51B2               	movf	_requestSpeed& (0+255),w,b
  1033  001B96  0100               	movlb	0	; () banked
  1034  001B98  6F88               	movwf	??_main& (0+255),b
  1035  001B9A  6B89               	clrf	(??_main+1)& (0+255),b
  1036  001B9C  0100               	movlb	0	; () banked
  1037  001B9E  1F88               	comf	??_main& (0+255),f,b
  1038  001BA0  1F89               	comf	(??_main+1)& (0+255),f,b
  1039  001BA2  4B88               	infsnz	??_main& (0+255),f,b
  1040  001BA4  2B89               	incf	(??_main+1)& (0+255),f,b
  1041  001BA6  0100               	movlb	0	; () banked
  1042  001BA8  51BC               	movf	_currentSpeed& (0+255),w,b
  1043  001BAA  0100               	movlb	0	; () banked
  1044  001BAC  6F8A               	movwf	(??_main+2)& (0+255),b
  1045  001BAE  6B8B               	clrf	(??_main+3)& (0+255),b
  1046  001BB0  0100               	movlb	0	; () banked
  1047  001BB2  5188               	movf	??_main& (0+255),w,b
  1048  001BB4  0100               	movlb	0	; () banked
  1049  001BB6  278A               	addwf	(??_main+2)& (0+255),f,b
  1050  001BB8  0100               	movlb	0	; () banked
  1051  001BBA  5189               	movf	(??_main+1)& (0+255),w,b
  1052  001BBC  0100               	movlb	0	; () banked
  1053  001BBE  238B               	addwfc	(??_main+3)& (0+255),f,b
  1054  001BC0  0100               	movlb	0	; () banked
  1055  001BC2  BF8B               	btfsc	(??_main+3)& (0+255),7,b
  1056  001BC4  D036               	goto	l682
  1057  001BC6  0100               	movlb	0	; () banked
  1058  001BC8  518B               	movf	(??_main+3)& (0+255),w,b
  1059  001BCA  E104               	bnz	u6450
  1060  001BCC  0100               	movlb	0	; () banked
  1061  001BCE  058A               	decf	(??_main+2)& (0+255),w,b
  1062  001BD0  A0D8               	btfss	status,0,c
  1063  001BD2  D02F               	goto	l682
  1064  001BD4                     u6450:
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;motore.c: 170: if (previousPwm > correzione) {
  1068  001BD4  0100               	movlb	0	; () banked
  1069  001BD6  51B1               	movf	_previousPwm& (0+255),w,b
  1070  001BD8  0100               	movlb	0	; () banked
  1071  001BDA  5DA7               	subwf	_correzione& (0+255),w,b
  1072  001BDC  0E00               	movlw	0
  1073  001BDE  59A8               	subwfb	(_correzione+1)& (0+255),w,b
  1074  001BE0  B0D8               	btfsc	status,0,c
  1075  001BE2  D007               	goto	l683
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;motore.c: 171: duty_set = previousPwm - correzione;
  1079  001BE4  0100               	movlb	0	; () banked
  1080  001BE6  51A7               	movf	_correzione& (0+255),w,b
  1081  001BE8  0800               	sublw	0
  1082  001BEA  0100               	movlb	0	; () banked
  1083  001BEC  25B1               	addwf	_previousPwm& (0+255),w,b
  1084  001BEE  0100               	movlb	0	; () banked
  1085  001BF0  6FAF               	movwf	_duty_set& (0+255),b
  1086  001BF2                     l683:
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;motore.c: 172: }
  1090                           ;motore.c: 173: if ((currentSpeed - requestSpeed) < 0) {
  1091  001BF2  0100               	movlb	0	; () banked
  1092  001BF4  51B2               	movf	_requestSpeed& (0+255),w,b
  1093  001BF6  0100               	movlb	0	; () banked
  1094  001BF8  6F88               	movwf	??_main& (0+255),b
  1095  001BFA  6B89               	clrf	(??_main+1)& (0+255),b
  1096  001BFC  0100               	movlb	0	; () banked
  1097  001BFE  1F88               	comf	??_main& (0+255),f,b
  1098  001C00  1F89               	comf	(??_main+1)& (0+255),f,b
  1099  001C02  4B88               	infsnz	??_main& (0+255),f,b
  1100  001C04  2B89               	incf	(??_main+1)& (0+255),f,b
  1101  001C06  0100               	movlb	0	; () banked
  1102  001C08  51BC               	movf	_currentSpeed& (0+255),w,b
  1103  001C0A  0100               	movlb	0	; () banked
  1104  001C0C  6F8A               	movwf	(??_main+2)& (0+255),b
  1105  001C0E  6B8B               	clrf	(??_main+3)& (0+255),b
  1106  001C10  0100               	movlb	0	; () banked
  1107  001C12  5188               	movf	??_main& (0+255),w,b
  1108  001C14  0100               	movlb	0	; () banked
  1109  001C16  278A               	addwf	(??_main+2)& (0+255),f,b
  1110  001C18  0100               	movlb	0	; () banked
  1111  001C1A  5189               	movf	(??_main+1)& (0+255),w,b
  1112  001C1C  0100               	movlb	0	; () banked
  1113  001C1E  238B               	addwfc	(??_main+3)& (0+255),f,b
  1114  001C20  0100               	movlb	0	; () banked
  1115  001C22  AF8B               	btfss	(??_main+3)& (0+255),7,b
  1116  001C24  D006               	goto	l682
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;motore.c: 174: duty_set = previousPwm + correzione;
  1120  001C26  0100               	movlb	0	; () banked
  1121  001C28  51B1               	movf	_previousPwm& (0+255),w,b
  1122  001C2A  0100               	movlb	0	; () banked
  1123  001C2C  25A7               	addwf	_correzione& (0+255),w,b
  1124  001C2E  0100               	movlb	0	; () banked
  1125  001C30  6FAF               	movwf	_duty_set& (0+255),b
  1126  001C32                     l682:
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;motore.c: 175: }
  1130                           ;motore.c: 176: }
  1131                           ;motore.c: 177: if (correzione < 1) {
  1132  001C32  0100               	movlb	0	; () banked
  1133  001C34  51A7               	movf	_correzione& (0+255),w,b
  1134  001C36  0100               	movlb	0	; () banked
  1135  001C38  11A8               	iorwf	(_correzione+1)& (0+255),w,b
  1136  001C3A  B4D8               	btfsc	status,2,c
  1137                           
  1138                           ; BSR set to: 0
  1139                           ;motore.c: 178: duty_set = previousPwm;
  1140  001C3C  C0B1  F0AF         	movff	_previousPwm,_duty_set
  1141  001C40                     l681:
  1142                           
  1143                           ; BSR set to: 0
  1144                           ;motore.c: 179: }
  1145                           ;motore.c: 180: }
  1146                           ;motore.c: 181: previousPwm = duty_set;
  1147  001C40  C0AF  F0B1         	movff	_duty_set,_previousPwm
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;motore.c: 182: SetDCEPWM1(duty_set);
  1151  001C44  C0AF  F06E         	movff	_duty_set,SetDCEPWM1@dutycycle
  1152  001C48  0100               	movlb	0	; () banked
  1153  001C4A  6B6F               	clrf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1154  001C4C  EC31  F013         	call	_SetDCEPWM1	;wreg free
  1155  001C50                     l4968:
  1156                           
  1157                           ;motore.c: 183: }
  1158                           ;motore.c: 184: previousTimeCounter1 = timeCounter;
  1159  001C50  C015  F09D         	movff	_timeCounter,_previousTimeCounter1
  1160  001C54  C016  F09E         	movff	_timeCounter+1,_previousTimeCounter1+1
  1161  001C58  C017  F09F         	movff	_timeCounter+2,_previousTimeCounter1+2
  1162  001C5C  C018  F0A0         	movff	_timeCounter+3,_previousTimeCounter1+3
  1163  001C60                     l4970:
  1164                           
  1165                           ;motore.c: 185: }
  1166                           ;motore.c: 186: }
  1167                           ;motore.c: 187: }
  1168                           ;motore.c: 188: if ((remote_frame == 1) || (can_retry == 1)) {
  1169  001C60  AA47               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1170  001C62  B047               	btfsc	_can_retry/(0+8),_can_retry& (0+7),c
  1171  001C64  D001               	goto	l4974
  1172  001C66  D002               	goto	l4976
  1173  001C68                     l4974:
  1174                           
  1175                           ;motore.c: 189: send_data();
  1176  001C68  EC97  F012         	call	_send_data	;wreg free
  1177  001C6C                     l4976:
  1178                           
  1179                           ;motore.c: 190: }
  1180                           ;motore.c: 191: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
  1181  001C6C  EC04  F014         	call	_CANisTXwarningON	;wreg free
  1182  001C70  06E8               	decf	wreg,f,c
  1183  001C72  B4D8               	btfsc	status,2,c
  1184  001C74  D005               	goto	l4980
  1185  001C76  EC0A  F014         	call	_CANisRXwarningON	;wreg free
  1186  001C7A  06E8               	decf	wreg,f,c
  1187  001C7C  A4D8               	btfss	status,2,c
  1188  001C7E  D009               	goto	l689
  1189  001C80                     l4980:
  1190                           
  1191                           ;motore.c: 192: SetDCEPWM1(0);
  1192  001C80  0E00               	movlw	0
  1193  001C82  0100               	movlb	0	; () banked
  1194  001C84  6F6F               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1195  001C86  0E00               	movlw	0
  1196  001C88  6F6E               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  1197  001C8A  EC31  F013         	call	_SetDCEPWM1	;wreg free
  1198                           
  1199                           ;motore.c: 193: PORTAbits.RA7 = 1;
  1200  001C8E  8E80               	bsf	3968,7,c	;volatile
  1201                           
  1202                           ;motore.c: 194: } else {
  1203  001C90  D001               	goto	l4984
  1204  001C92                     l689:
  1205                           
  1206                           ;motore.c: 195: PORTAbits.RA7 = 0;
  1207  001C92  9E80               	bcf	3968,7,c	;volatile
  1208  001C94                     l4984:
  1209                           
  1210                           ;motore.c: 196: }
  1211                           ;motore.c: 199: if ((timeCounter - previousTimeCounter) > 100) {
  1212  001C94  C099  F088         	movff	_previousTimeCounter,??_main
  1213  001C98  C09A  F089         	movff	_previousTimeCounter+1,??_main+1
  1214  001C9C  C09B  F08A         	movff	_previousTimeCounter+2,??_main+2
  1215  001CA0  C09C  F08B         	movff	_previousTimeCounter+3,??_main+3
  1216  001CA4  0100               	movlb	0	; () banked
  1217  001CA6  1F88               	comf	??_main& (0+255),f,b
  1218  001CA8  1F89               	comf	(??_main+1)& (0+255),f,b
  1219  001CAA  1F8A               	comf	(??_main+2)& (0+255),f,b
  1220  001CAC  1F8B               	comf	(??_main+3)& (0+255),f,b
  1221  001CAE  2B88               	incf	??_main& (0+255),f,b
  1222  001CB0  0E00               	movlw	0
  1223  001CB2  2389               	addwfc	(??_main+1)& (0+255),f,b
  1224  001CB4  238A               	addwfc	(??_main+2)& (0+255),f,b
  1225  001CB6  238B               	addwfc	(??_main+3)& (0+255),f,b
  1226  001CB8  5015               	movf	_timeCounter,w,c
  1227  001CBA  0100               	movlb	0	; () banked
  1228  001CBC  2588               	addwf	??_main& (0+255),w,b
  1229  001CBE  0100               	movlb	0	; () banked
  1230  001CC0  6F8C               	movwf	(??_main+4)& (0+255),b
  1231  001CC2  5016               	movf	_timeCounter+1,w,c
  1232  001CC4  0100               	movlb	0	; () banked
  1233  001CC6  2189               	addwfc	(??_main+1)& (0+255),w,b
  1234  001CC8  0100               	movlb	0	; () banked
  1235  001CCA  6F8D               	movwf	(??_main+5)& (0+255),b
  1236  001CCC  5017               	movf	_timeCounter+2,w,c
  1237  001CCE  0100               	movlb	0	; () banked
  1238  001CD0  218A               	addwfc	(??_main+2)& (0+255),w,b
  1239  001CD2  0100               	movlb	0	; () banked
  1240  001CD4  6F8E               	movwf	(??_main+6)& (0+255),b
  1241  001CD6  5018               	movf	_timeCounter+3,w,c
  1242  001CD8  0100               	movlb	0	; () banked
  1243  001CDA  218B               	addwfc	(??_main+3)& (0+255),w,b
  1244  001CDC  0100               	movlb	0	; () banked
  1245  001CDE  6F8F               	movwf	(??_main+7)& (0+255),b
  1246  001CE0  0100               	movlb	0	; () banked
  1247  001CE2  518F               	movf	(??_main+7)& (0+255),w,b
  1248  001CE4  0100               	movlb	0	; () banked
  1249  001CE6  118E               	iorwf	(??_main+6)& (0+255),w,b
  1250  001CE8  0100               	movlb	0	; () banked
  1251  001CEA  118D               	iorwf	(??_main+5)& (0+255),w,b
  1252  001CEC  E105               	bnz	u6530
  1253  001CEE  0E65               	movlw	101
  1254  001CF0  0100               	movlb	0	; () banked
  1255  001CF2  5D8C               	subwf	(??_main+4)& (0+255),w,b
  1256  001CF4  A0D8               	btfss	status,0,c
  1257  001CF6  D036               	goto	l5008
  1258  001CF8                     u6530:
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;motore.c: 200: if (request_sent == 0) {
  1262  001CF8  BE47               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c
  1263  001CFA  D018               	goto	l4992
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;motore.c: 201: CANsendMessage(0b00000000000000000000000000001, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1267  001CFC  0E01               	movlw	1
  1268  001CFE  0100               	movlb	0	; () banked
  1269  001D00  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
  1270  001D02  0E00               	movlw	0
  1271  001D04  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1272  001D06  0E00               	movlw	0
  1273  001D08  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1274  001D0A  0E00               	movlw	0
  1275  001D0C  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1276  001D0E  0EB4               	movlw	low _data_array
  1277  001D10  0100               	movlb	0	; () banked
  1278  001D12  6F72               	movwf	CANsendMessage@data& (0+255),b
  1279  001D14  0E00               	movlw	high _data_array
  1280  001D16  0100               	movlb	0	; () banked
  1281  001D18  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
  1282  001D1A  0E08               	movlw	8
  1283  001D1C  0100               	movlb	0	; () banked
  1284  001D1E  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
  1285  001D20  0EFC               	movlw	252
  1286  001D22  0100               	movlb	0	; () banked
  1287  001D24  6F75               	movwf	CANsendMessage@flags& (0+255),b
  1288  001D26  EC59  F006         	call	_CANsendMessage	;wreg free
  1289                           
  1290                           ;motore.c: 202: request_sent = 1;
  1291  001D2A  8E47               	bsf	_request_sent/(0+8),_request_sent& (0+7),c
  1292  001D2C                     l4992:
  1293                           
  1294                           ;motore.c: 203: }
  1295                           ;motore.c: 204: if (request_sent == 1) {
  1296  001D2C  AE47               	btfss	_request_sent/(0+8),_request_sent& (0+7),c
  1297  001D2E  D012               	goto	l5006
  1298                           
  1299                           ;motore.c: 206: if ((centralina_abs == 1)&&(centralina_sterzo == 1)&&(centralina_comando
      +                           == 1)) {
  1300  001D30  B247               	btfsc	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1301  001D32  A647               	btfss	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1302  001D34  D007               	goto	l5002
  1303  001D36  A447               	btfss	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1304  001D38  D005               	goto	l5002
  1305                           
  1306                           ;motore.c: 207: centralina_abs = 0;
  1307  001D3A  9247               	bcf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1308                           
  1309                           ;motore.c: 208: centralina_sterzo = 0;
  1310  001D3C  9647               	bcf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1311                           
  1312                           ;motore.c: 209: centralina_comando = 0;
  1313  001D3E  9447               	bcf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1314                           
  1315                           ;motore.c: 210: PORTAbits.RA7 = 0;
  1316  001D40  9E80               	bcf	3968,7,c	;volatile
  1317                           
  1318                           ;motore.c: 211: } else {
  1319  001D42  D008               	goto	l5006
  1320  001D44                     l5002:
  1321                           
  1322                           ;motore.c: 212: SetDCEPWM1(0);
  1323  001D44  0E00               	movlw	0
  1324  001D46  0100               	movlb	0	; () banked
  1325  001D48  6F6F               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1326  001D4A  0E00               	movlw	0
  1327  001D4C  6F6E               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  1328  001D4E  EC31  F013         	call	_SetDCEPWM1	;wreg free
  1329                           
  1330                           ;motore.c: 213: PORTAbits.RA7 = 1;
  1331  001D52  8E80               	bsf	3968,7,c	;volatile
  1332  001D54                     l5006:
  1333                           
  1334                           ;motore.c: 214: }
  1335                           ;motore.c: 215: }
  1336                           ;motore.c: 216: previousTimeCounter = timeCounter;
  1337  001D54  C015  F099         	movff	_timeCounter,_previousTimeCounter
  1338  001D58  C016  F09A         	movff	_timeCounter+1,_previousTimeCounter+1
  1339  001D5C  C017  F09B         	movff	_timeCounter+2,_previousTimeCounter+2
  1340  001D60  C018  F09C         	movff	_timeCounter+3,_previousTimeCounter+3
  1341  001D64                     l5008:
  1342                           
  1343                           ;motore.c: 217: }
  1344                           ;motore.c: 218: if ((timeCounter - previousTimeCounter2 >= 100)) {
  1345  001D64  C0A1  F088         	movff	_previousTimeCounter2,??_main
  1346  001D68  C0A2  F089         	movff	_previousTimeCounter2+1,??_main+1
  1347  001D6C  C0A3  F08A         	movff	_previousTimeCounter2+2,??_main+2
  1348  001D70  C0A4  F08B         	movff	_previousTimeCounter2+3,??_main+3
  1349  001D74  0100               	movlb	0	; () banked
  1350  001D76  1F88               	comf	??_main& (0+255),f,b
  1351  001D78  1F89               	comf	(??_main+1)& (0+255),f,b
  1352  001D7A  1F8A               	comf	(??_main+2)& (0+255),f,b
  1353  001D7C  1F8B               	comf	(??_main+3)& (0+255),f,b
  1354  001D7E  2B88               	incf	??_main& (0+255),f,b
  1355  001D80  0E00               	movlw	0
  1356  001D82  2389               	addwfc	(??_main+1)& (0+255),f,b
  1357  001D84  238A               	addwfc	(??_main+2)& (0+255),f,b
  1358  001D86  238B               	addwfc	(??_main+3)& (0+255),f,b
  1359  001D88  5015               	movf	_timeCounter,w,c
  1360  001D8A  0100               	movlb	0	; () banked
  1361  001D8C  2588               	addwf	??_main& (0+255),w,b
  1362  001D8E  0100               	movlb	0	; () banked
  1363  001D90  6F8C               	movwf	(??_main+4)& (0+255),b
  1364  001D92  5016               	movf	_timeCounter+1,w,c
  1365  001D94  0100               	movlb	0	; () banked
  1366  001D96  2189               	addwfc	(??_main+1)& (0+255),w,b
  1367  001D98  0100               	movlb	0	; () banked
  1368  001D9A  6F8D               	movwf	(??_main+5)& (0+255),b
  1369  001D9C  5017               	movf	_timeCounter+2,w,c
  1370  001D9E  0100               	movlb	0	; () banked
  1371  001DA0  218A               	addwfc	(??_main+2)& (0+255),w,b
  1372  001DA2  0100               	movlb	0	; () banked
  1373  001DA4  6F8E               	movwf	(??_main+6)& (0+255),b
  1374  001DA6  5018               	movf	_timeCounter+3,w,c
  1375  001DA8  0100               	movlb	0	; () banked
  1376  001DAA  218B               	addwfc	(??_main+3)& (0+255),w,b
  1377  001DAC  0100               	movlb	0	; () banked
  1378  001DAE  6F8F               	movwf	(??_main+7)& (0+255),b
  1379  001DB0  0100               	movlb	0	; () banked
  1380  001DB2  518F               	movf	(??_main+7)& (0+255),w,b
  1381  001DB4  0100               	movlb	0	; () banked
  1382  001DB6  118E               	iorwf	(??_main+6)& (0+255),w,b
  1383  001DB8  0100               	movlb	0	; () banked
  1384  001DBA  118D               	iorwf	(??_main+5)& (0+255),w,b
  1385  001DBC  E105               	bnz	u6590
  1386  001DBE  0E64               	movlw	100
  1387  001DC0  0100               	movlb	0	; () banked
  1388  001DC2  5D8C               	subwf	(??_main+4)& (0+255),w,b
  1389  001DC4  A0D8               	btfss	status,0,c
  1390  001DC6  D5EF               	goto	l4916
  1391  001DC8                     u6590:
  1392                           
  1393                           ; BSR set to: 0
  1394                           ;motore.c: 220: battery_measure();
  1395  001DC8  EC4D  F012         	call	_battery_measure	;wreg free
  1396                           
  1397                           ;motore.c: 221: previousTimeCounter2 = timeCounter;
  1398  001DCC  C015  F0A1         	movff	_timeCounter,_previousTimeCounter2
  1399  001DD0  C016  F0A2         	movff	_timeCounter+1,_previousTimeCounter2+1
  1400  001DD4  C017  F0A3         	movff	_timeCounter+2,_previousTimeCounter2+2
  1401  001DD8  C018  F0A4         	movff	_timeCounter+3,_previousTimeCounter2+3
  1402  001DDC  D5E4               	goto	l4916
  1403  001DDE                     __end_of_main:
  1404                           	opt stack 0
  1405                           tblptru	equ	0xFF8
  1406                           tblptrh	equ	0xFF7
  1407                           tblptrl	equ	0xFF6
  1408                           tablat	equ	0xFF5
  1409                           postinc0	equ	0xFEE
  1410                           wreg	equ	0xFE8
  1411                           status	equ	0xFD8
  1412                           
  1413 ;; *************** function _send_data *****************
  1414 ;; Defined at:
  1415 ;;		line 226 in file "motore.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;		None
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;		None               void
  1422 ;; Registers used:
  1423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1429 ;;      Params:         0       0       0       0
  1430 ;;      Locals:         0       0       0       0
  1431 ;;      Temps:          0       0       0       0
  1432 ;;      Totals:         0       0       0       0
  1433 ;;Total ram usage:        0 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    4
  1436 ;; This function calls:
  1437 ;;		_CANisTxReady
  1438 ;;		_CANsendMessage
  1439 ;; This function is called by:
  1440 ;;		_main
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           	psect	text1
  1445  00252E                     __ptext1:
  1446                           	opt stack 0
  1447  00252E                     _send_data:
  1448                           	opt stack 26
  1449                           
  1450                           ;motore.c: 227: if (CANisTxReady()) {
  1451                           
  1452                           ;incstack = 0
  1453  00252E  ECC2  F013         	call	_CANisTxReady	;wreg free
  1454  002532  0900               	iorlw	0
  1455  002534  A4D8               	btfss	status,2,c
  1456                           
  1457                           ;motore.c: 228: if (remote_frame == 1) {
  1458  002536  AA47               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1459  002538  D017               	goto	l4868
  1460                           
  1461                           ;motore.c: 229: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1462  00253A  C00D  F06E         	movff	_id,CANsendMessage@identifier
  1463  00253E  C00E  F06F         	movff	_id+1,CANsendMessage@identifier+1
  1464  002542  C00F  F070         	movff	_id+2,CANsendMessage@identifier+2
  1465  002546  C010  F071         	movff	_id+3,CANsendMessage@identifier+3
  1466  00254A  0EB4               	movlw	low _data_array
  1467  00254C  0100               	movlb	0	; () banked
  1468  00254E  6F72               	movwf	CANsendMessage@data& (0+255),b
  1469  002550  0E00               	movlw	high _data_array
  1470  002552  0100               	movlb	0	; () banked
  1471  002554  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
  1472  002556  0E08               	movlw	8
  1473  002558  0100               	movlb	0	; () banked
  1474  00255A  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
  1475  00255C  0EBC               	movlw	188
  1476  00255E  0100               	movlb	0	; () banked
  1477  002560  6F75               	movwf	CANsendMessage@flags& (0+255),b
  1478  002562  EC59  F006         	call	_CANsendMessage	;wreg free
  1479                           
  1480                           ;motore.c: 230: remote_frame = 0;
  1481  002566  9A47               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1482  002568                     l4868:
  1483                           
  1484                           ;motore.c: 231: }
  1485                           ;motore.c: 232: }
  1486                           ;motore.c: 233: if ((TXB0CONbits.TXABT) || (TXB1CONbits.TXABT)) {
  1487  002568  010F               	movlb	15	; () banked
  1488  00256A  BD40               	btfsc	64,6,b	;volatile
  1489  00256C  D003               	goto	l708
  1490                           
  1491                           ; BSR set to: 15
  1492  00256E  010F               	movlb	15	; () banked
  1493  002570  AD30               	btfss	48,6,b	;volatile
  1494  002572  D002               	goto	l706
  1495  002574                     l708:
  1496                           
  1497                           ; BSR set to: 15
  1498                           ;motore.c: 234: can_retry = 1;
  1499  002574  8047               	bsf	_can_retry/(0+8),_can_retry& (0+7),c
  1500                           
  1501                           ;motore.c: 235: } else {
  1502  002576  0012               	return	
  1503  002578                     l706:
  1504                           
  1505                           ; BSR set to: 15
  1506                           ;motore.c: 236: can_retry = 0;
  1507  002578  9047               	bcf	_can_retry/(0+8),_can_retry& (0+7),c
  1508                           
  1509                           ;motore.c: 237: if (remote_frame1 != 0) {
  1510  00257A  AC47               	btfss	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1511  00257C  D010               	goto	l710
  1512                           
  1513                           ; BSR set to: 15
  1514                           ;motore.c: 238: remote_frame = remote_frame1;
  1515  00257E  AC47               	btfss	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1516  002580  D002               	goto	u6310
  1517  002582  8A47               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1518  002584  D001               	goto	u6325
  1519  002586                     u6310:
  1520  002586  9A47               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1521  002588                     u6325:
  1522                           
  1523                           ;motore.c: 239: id = id1;
  1524  002588  C011  F00D         	movff	_id1,_id
  1525  00258C  C012  F00E         	movff	_id1+1,_id+1
  1526  002590  C013  F00F         	movff	_id1+2,_id+2
  1527  002594  C014  F010         	movff	_id1+3,_id+3
  1528                           
  1529                           ;motore.c: 240: message_sent = 1;
  1530  002598  8847               	bsf	_message_sent/(0+8),_message_sent& (0+7),c
  1531                           
  1532                           ;motore.c: 241: remote_frame1 = 0;
  1533  00259A  9C47               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1534                           
  1535                           ;motore.c: 242: } else {
  1536  00259C  0012               	return	
  1537  00259E                     l710:
  1538                           
  1539                           ; BSR set to: 15
  1540                           ;motore.c: 244: message_sent = 0;
  1541  00259E  9847               	bcf	_message_sent/(0+8),_message_sent& (0+7),c
  1542                           
  1543                           ; BSR set to: 15
  1544  0025A0  0012               	return	
  1545  0025A2                     __end_of_send_data:
  1546                           	opt stack 0
  1547                           tblptru	equ	0xFF8
  1548                           tblptrh	equ	0xFF7
  1549                           tblptrl	equ	0xFF6
  1550                           tablat	equ	0xFF5
  1551                           postinc0	equ	0xFEE
  1552                           wreg	equ	0xFE8
  1553                           status	equ	0xFD8
  1554                           
  1555 ;; *************** function _delay_ms *****************
  1556 ;; Defined at:
  1557 ;;		line 61 in file "H:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  value_ms        2   28[BANK0 ] unsigned int 
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;		None               void
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1571 ;;      Params:         0       2       0       0
  1572 ;;      Locals:         0       0       0       0
  1573 ;;      Temps:          0       0       0       0
  1574 ;;      Totals:         0       2       0       0
  1575 ;;Total ram usage:        2 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; Hardware stack levels required when called:    4
  1578 ;; This function calls:
  1579 ;;		___wmul
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;;		_delay_s
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text2
  1587  0026E8                     __ptext2:
  1588                           	opt stack 0
  1589  0026E8                     _delay_ms:
  1590                           	opt stack 26
  1591                           
  1592                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  1593                           
  1594                           ;incstack = 0
  1595  0026E8  C0BD  F076         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  1596  0026EC  0100               	movlb	0	; () banked
  1597  0026EE  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  1598  0026F0  C07C  F078         	movff	delay_ms@value_ms,___wmul@multiplicand
  1599  0026F4  C07D  F079         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  1600  0026F8  EC91  F013         	call	___wmul	;wreg free
  1601  0026FC  C076  F0A5         	movff	?___wmul,_clock_counter_reference	;volatile
  1602  002700  C077  F0A6         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  1603                           
  1604                           ;src\delay.c: 75: while (clock_counter_reference) {
  1605  002704  D007               	goto	l573
  1606  002706                     l4724:
  1607                           
  1608                           ;src\delay.c: 85: _delay(240);
  1609  002706  0E50               	movlw	80
  1610  002708                     u6607:
  1611  002708  2EE8               	decfsz	wreg,f,c
  1612  00270A  D7FE               	goto	u6607
  1613                           
  1614                           ;src\delay.c: 88: clock_counter_reference--;
  1615  00270C  0100               	movlb	0	; () banked
  1616  00270E  07A5               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  1617  002710  A0D8               	btfss	status,0,c
  1618  002712  07A6               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  1619  002714                     l573:
  1620  002714  0100               	movlb	0	; () banked
  1621  002716  51A5               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  1622  002718  0100               	movlb	0	; () banked
  1623  00271A  11A6               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  1624  00271C  B4D8               	btfsc	status,2,c
  1625  00271E  0012               	return	
  1626  002720  D7F2               	goto	l4724
  1627  002722                     __end_of_delay_ms:
  1628                           	opt stack 0
  1629                           tblptru	equ	0xFF8
  1630                           tblptrh	equ	0xFF7
  1631                           tblptrl	equ	0xFF6
  1632                           tablat	equ	0xFF5
  1633                           postinc0	equ	0xFEE
  1634                           wreg	equ	0xFE8
  1635                           status	equ	0xFD8
  1636                           
  1637 ;; *************** function _configurazione_iniziale *****************
  1638 ;; Defined at:
  1639 ;;		line 261 in file "motore.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;		None
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;		None
  1644 ;; Return value:  Size  Location     Type
  1645 ;;		None               void
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1653 ;;      Params:         0       0       0       0
  1654 ;;      Locals:         0       0       0       0
  1655 ;;      Temps:          0       0       0       0
  1656 ;;      Totals:         0       0       0       0
  1657 ;;Total ram usage:        0 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    5
  1660 ;; This function calls:
  1661 ;;		_CANInitialize
  1662 ;; This function is called by:
  1663 ;;		_main
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text3
  1668  002400                     __ptext3:
  1669                           	opt stack 0
  1670  002400                     _configurazione_iniziale:
  1671                           	opt stack 25
  1672                           
  1673                           ;motore.c: 264: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;incstack = 0
  1677  002400  0E06               	movlw	6
  1678  002402  0100               	movlb	0	; () banked
  1679  002404  6F7C               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1680  002406  0E05               	movlw	5
  1681  002408  0100               	movlb	0	; () banked
  1682  00240A  6F7D               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1683  00240C  0E01               	movlw	1
  1684  00240E  0100               	movlb	0	; () banked
  1685  002410  6F7E               	movwf	CANInitialize@SJW& (0+255),b
  1686  002412  0E03               	movlw	3
  1687  002414  0100               	movlb	0	; () banked
  1688  002416  6F7F               	movwf	CANInitialize@BRP& (0+255),b
  1689  002418  0E9D               	movlw	157
  1690  00241A  0100               	movlb	0	; () banked
  1691  00241C  6F80               	movwf	CANInitialize@flags& (0+255),b
  1692  00241E  0E04               	movlw	4
  1693  002420  ECBE  F010         	call	_CANInitialize
  1694                           
  1695                           ;motore.c: 265: RCONbits.IPEN = 1;
  1696  002424  8ED0               	bsf	4048,7,c	;volatile
  1697                           
  1698                           ;motore.c: 266: INTCONbits.INT0IF = 0;
  1699  002426  92F2               	bcf	intcon,1,c	;volatile
  1700                           
  1701                           ;motore.c: 267: INTCONbits.INT0IE = 1;
  1702  002428  88F2               	bsf	intcon,4,c	;volatile
  1703                           
  1704                           ;motore.c: 268: PIR3bits.RXB1IF = 0;
  1705  00242A  92A4               	bcf	4004,1,c	;volatile
  1706                           
  1707                           ;motore.c: 269: PIR3bits.RXB0IF = 0;
  1708  00242C  90A4               	bcf	4004,0,c	;volatile
  1709                           
  1710                           ;motore.c: 270: PIE3bits.RXB1IE = 1;
  1711  00242E  82A3               	bsf	4003,1,c	;volatile
  1712                           
  1713                           ;motore.c: 271: PIE3bits.RXB0IE = 1;
  1714  002430  80A3               	bsf	4003,0,c	;volatile
  1715                           
  1716                           ;motore.c: 272: IPR3bits.RXB1IP = 0;
  1717  002432  92A5               	bcf	4005,1,c	;volatile
  1718                           
  1719                           ;motore.c: 273: IPR3bits.RXB0IP = 0;
  1720  002434  90A5               	bcf	4005,0,c	;volatile
  1721                           
  1722                           ;motore.c: 274: INTCONbits.GIEH = 1;
  1723  002436  8EF2               	bsf	intcon,7,c	;volatile
  1724                           
  1725                           ;motore.c: 275: INTCONbits.GIEL = 1;
  1726  002438  8CF2               	bsf	intcon,6,c	;volatile
  1727                           
  1728                           ;motore.c: 276: INTCON2bits.INTEDG0 = 1;
  1729  00243A  8CF1               	bsf	intcon2,6,c	;volatile
  1730                           
  1731                           ;motore.c: 279: T3CON = 0x01;
  1732  00243C  0E01               	movlw	1
  1733  00243E  6EB1               	movwf	4017,c	;volatile
  1734                           
  1735                           ;motore.c: 280: PIR2bits.TMR3IF = 0;
  1736  002440  92A1               	bcf	4001,1,c	;volatile
  1737                           
  1738                           ;motore.c: 281: IPR2bits.TMR3IP = 0;
  1739  002442  92A2               	bcf	4002,1,c	;volatile
  1740                           
  1741                           ;motore.c: 282: TMR3H = 0x63;
  1742  002444  0E63               	movlw	99
  1743  002446  6EB3               	movwf	4019,c	;volatile
  1744                           
  1745                           ;motore.c: 283: TMR3L = 0xC0;
  1746  002448  0EC0               	movlw	192
  1747  00244A  6EB2               	movwf	4018,c	;volatile
  1748                           
  1749                           ;motore.c: 284: PIE2bits.TMR3IE = 1;
  1750  00244C  82A0               	bsf	4000,1,c	;volatile
  1751                           
  1752                           ;motore.c: 288: ADCON0bits.ADON = 1;
  1753  00244E  80C2               	bsf	4034,0,c	;volatile
  1754                           
  1755                           ;motore.c: 289: ADCON0bits.CHS0 = 0;
  1756  002450  94C2               	bcf	4034,2,c	;volatile
  1757                           
  1758                           ;motore.c: 290: ADCON0bits.CHS1 = 0;
  1759  002452  96C2               	bcf	4034,3,c	;volatile
  1760                           
  1761                           ;motore.c: 291: ADCON0bits.CHS2 = 0;
  1762  002454  98C2               	bcf	4034,4,c	;volatile
  1763                           
  1764                           ;motore.c: 292: ADCON0bits.CHS3 = 0;
  1765  002456  9AC2               	bcf	4034,5,c	;volatile
  1766                           
  1767                           ;motore.c: 293: ADCON1bits.PCFG0 = 0;
  1768  002458  90C1               	bcf	4033,0,c	;volatile
  1769                           
  1770                           ;motore.c: 294: ADCON1bits.PCFG1 = 1;
  1771  00245A  82C1               	bsf	4033,1,c	;volatile
  1772                           
  1773                           ;motore.c: 295: ADCON1bits.PCFG2 = 1;
  1774  00245C  84C1               	bsf	4033,2,c	;volatile
  1775                           
  1776                           ;motore.c: 296: ADCON1bits.PCFG3 = 1;
  1777  00245E  86C1               	bsf	4033,3,c	;volatile
  1778                           
  1779                           ;motore.c: 297: ADCON1bits.VCFG0 = 0;
  1780  002460  98C1               	bcf	4033,4,c	;volatile
  1781                           
  1782                           ;motore.c: 298: ADCON1bits.VCFG1 = 0;
  1783  002462  9AC1               	bcf	4033,5,c	;volatile
  1784                           
  1785                           ;motore.c: 299: ADCON2bits.ADCS0 = 1;
  1786  002464  80C0               	bsf	4032,0,c	;volatile
  1787                           
  1788                           ;motore.c: 300: ADCON2bits.ADCS1 = 0;
  1789  002466  92C0               	bcf	4032,1,c	;volatile
  1790                           
  1791                           ;motore.c: 301: ADCON2bits.ADCS2 = 1;
  1792  002468  84C0               	bsf	4032,2,c	;volatile
  1793                           
  1794                           ;motore.c: 302: ADCON2bits.ACQT0 = 0;
  1795  00246A  96C0               	bcf	4032,3,c	;volatile
  1796                           
  1797                           ;motore.c: 303: ADCON2bits.ACQT1 = 1;
  1798  00246C  88C0               	bsf	4032,4,c	;volatile
  1799                           
  1800                           ;motore.c: 304: ADCON2bits.ACQT2 = 1;
  1801  00246E  8AC0               	bsf	4032,5,c	;volatile
  1802                           
  1803                           ;motore.c: 305: ADCON2bits.ADFM = 0;
  1804  002470  9EC0               	bcf	4032,7,c	;volatile
  1805                           
  1806                           ;motore.c: 309: LATA = 0x00;
  1807  002472  0E00               	movlw	0
  1808  002474  6E89               	movwf	3977,c	;volatile
  1809                           
  1810                           ;motore.c: 310: TRISA = 0b01111111;
  1811  002476  0E7F               	movlw	127
  1812  002478  6E92               	movwf	3986,c	;volatile
  1813                           
  1814                           ;motore.c: 312: LATB = 0x00;
  1815  00247A  0E00               	movlw	0
  1816  00247C  6E8A               	movwf	3978,c	;volatile
  1817                           
  1818                           ;motore.c: 313: TRISB = 0b11111011;
  1819  00247E  0EFB               	movlw	251
  1820  002480  6E93               	movwf	3987,c	;volatile
  1821                           
  1822                           ;motore.c: 315: LATC = 0x00;
  1823  002482  0E00               	movlw	0
  1824  002484  6E8B               	movwf	3979,c	;volatile
  1825                           
  1826                           ;motore.c: 316: TRISC = 0x00;
  1827  002486  0E00               	movlw	0
  1828  002488  6E94               	movwf	3988,c	;volatile
  1829                           
  1830                           ;motore.c: 318: LATD = 0x00;
  1831  00248A  0E00               	movlw	0
  1832  00248C  6E8C               	movwf	3980,c	;volatile
  1833                           
  1834                           ;motore.c: 319: TRISD = 0x00;
  1835  00248E  0E00               	movlw	0
  1836  002490  6E95               	movwf	3989,c	;volatile
  1837                           
  1838                           ;motore.c: 321: LATE = 0x00;
  1839  002492  0E00               	movlw	0
  1840  002494  6E8D               	movwf	3981,c	;volatile
  1841                           
  1842                           ;motore.c: 322: TRISE = 0xFF;
  1843  002496  6896               	setf	3990,c	;volatile
  1844  002498  0012               	return		;funcret
  1845  00249A                     __end_of_configurazione_iniziale:
  1846                           	opt stack 0
  1847                           tblptru	equ	0xFF8
  1848                           tblptrh	equ	0xFF7
  1849                           tblptrl	equ	0xFF6
  1850                           tablat	equ	0xFF5
  1851                           intcon	equ	0xFF2
  1852                           intcon2	equ	0xFF1
  1853                           postinc0	equ	0xFEE
  1854                           wreg	equ	0xFE8
  1855                           status	equ	0xFD8
  1856                           
  1857 ;; *************** function _CANInitialize *****************
  1858 ;; Defined at:
  1859 ;;		line 218 in file "H:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  propSeg         1    wreg     unsigned char 
  1862 ;;  phaseSeg1       1   28[BANK0 ] unsigned char 
  1863 ;;  phaseSeg2       1   29[BANK0 ] unsigned char 
  1864 ;;  SJW             1   30[BANK0 ] unsigned char 
  1865 ;;  BRP             1   31[BANK0 ] unsigned char 
  1866 ;;  flags           1   32[BANK0 ] enum E16844
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  propSeg         1   37[BANK0 ] unsigned char 
  1869 ;;  FilterConfig    1   39[BANK0 ] unsigned char 
  1870 ;;  FilterConfig    1   38[BANK0 ] unsigned char 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;		None               void
  1873 ;; Registers used:
  1874 ;;		wreg, status,2, status,0, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1880 ;;      Params:         0       5       0       0
  1881 ;;      Locals:         0       3       0       0
  1882 ;;      Temps:          0       4       0       0
  1883 ;;      Totals:         0      12       0       0
  1884 ;;Total ram usage:       12 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    4
  1887 ;; This function calls:
  1888 ;;		_CANOperationMode
  1889 ;;		_CANSetFilter
  1890 ;;		_CANSetMask
  1891 ;; This function is called by:
  1892 ;;		_configurazione_iniziale
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           	psect	text4
  1897  00217C                     __ptext4:
  1898                           	opt stack 0
  1899  00217C                     _CANInitialize:
  1900                           	opt stack 25
  1901                           
  1902                           ;incstack = 0
  1903                           ;CANInitialize@propSeg stored from wreg
  1904  00217C  0100               	movlb	0	; () banked
  1905  00217E  6F85               	movwf	CANInitialize@propSeg& (0+255),b
  1906                           
  1907                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  1908                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  1909                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  1910  002180  0E80               	movlw	128
  1911  002182  ECE5  F013         	call	_CANOperationMode
  1912                           
  1913                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  1914  002186  0E00               	movlw	0
  1915  002188  6E70               	movwf	3952,c	;volatile
  1916                           
  1917                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  1918  00218A  0E00               	movlw	0
  1919  00218C  6E71               	movwf	3953,c	;volatile
  1920                           
  1921                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  1922  00218E  0E00               	movlw	0
  1923  002190  6E72               	movwf	3954,c	;volatile
  1924                           
  1925                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  1926  002192  0100               	movlb	0	; () banked
  1927  002194  417E               	rrncf	CANInitialize@SJW& (0+255),w,b
  1928  002196  42E8               	rrncf	wreg,f,c
  1929  002198  0BC0               	andlw	192
  1930  00219A  0100               	movlb	0	; () banked
  1931  00219C  6F7E               	movwf	CANInitialize@SJW& (0+255),b
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  1935  00219E  0100               	movlb	0	; () banked
  1936  0021A0  517E               	movf	CANInitialize@SJW& (0+255),w,b
  1937  0021A2  1270               	iorwf	3952,f,c	;volatile
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  1941  0021A4  0100               	movlb	0	; () banked
  1942  0021A6  517F               	movf	CANInitialize@BRP& (0+255),w,b
  1943  0021A8  1270               	iorwf	3952,f,c	;volatile
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  1947  0021AA  0100               	movlb	0	; () banked
  1948  0021AC  5185               	movf	CANInitialize@propSeg& (0+255),w,b
  1949  0021AE  1271               	iorwf	3953,f,c	;volatile
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  1953  0021B0  0100               	movlb	0	; () banked
  1954  0021B2  397C               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  1955  0021B4  42E8               	rrncf	wreg,f,c
  1956  0021B6  0BF8               	andlw	248
  1957  0021B8  0100               	movlb	0	; () banked
  1958  0021BA  6F7C               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  1962  0021BC  0100               	movlb	0	; () banked
  1963  0021BE  517C               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  1964  0021C0  1271               	iorwf	3953,f,c	;volatile
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  1968  0021C2  0100               	movlb	0	; () banked
  1969  0021C4  A580               	btfss	CANInitialize@flags& (0+255),2,b
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  1973  0021C6  8C71               	bsf	3953,6,c	;volatile
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  1977  0021C8  0100               	movlb	0	; () banked
  1978  0021CA  B180               	btfsc	CANInitialize@flags& (0+255),0,b
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  1982  0021CC  8E71               	bsf	3953,7,c	;volatile
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  1986                           
  1987                           ; BSR set to: 0
  1988  0021CE  0100               	movlb	0	; () banked
  1989  0021D0  517D               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  1990  0021D2  1272               	iorwf	3954,f,c	;volatile
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  1994  0021D4  0100               	movlb	0	; () banked
  1995  0021D6  B380               	btfsc	CANInitialize@flags& (0+255),1,b
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  1999  0021D8  8C72               	bsf	3954,6,c	;volatile
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2003                           
  2004                           ; BSR set to: 0
  2005  0021DA  0100               	movlb	0	; () banked
  2006  0021DC  5180               	movf	CANInitialize@flags& (0+255),w,b
  2007  0021DE  0B60               	andlw	96
  2008  0021E0  6E60               	movwf	3936,c	;volatile
  2009                           
  2010                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  2011  0021E2  0100               	movlb	0	; () banked
  2012  0021E4  5180               	movf	CANInitialize@flags& (0+255),w,b
  2013  0021E6  0B10               	andlw	16
  2014  0021E8  0AFF               	xorlw	255
  2015  0021EA  B4D8               	btfsc	status,2,c
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2019  0021EC  8460               	bsf	3936,2,c	;volatile
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  2023  0021EE  CF60 FF50          	movff	3936,3920	;volatile
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2027  0021F2  0E00               	movlw	0
  2028  0021F4  0100               	movlb	0	; () banked
  2029  0021F6  6F6E               	movwf	CANSetMask@mask& (0+255),b
  2030  0021F8  0E00               	movlw	0
  2031  0021FA  6F6F               	movwf	(CANSetMask@mask+1)& (0+255),b
  2032  0021FC  0E00               	movlw	0
  2033  0021FE  6F70               	movwf	(CANSetMask@mask+2)& (0+255),b
  2034  002200  0E00               	movlw	0
  2035  002202  6F71               	movwf	(CANSetMask@mask+3)& (0+255),b
  2036  002204  0EF7               	movlw	247
  2037  002206  0100               	movlb	0	; () banked
  2038  002208  6F72               	movwf	CANSetMask@type& (0+255),b
  2039  00220A  0E01               	movlw	1
  2040  00220C  ECEF  F00E         	call	_CANSetMask
  2041                           
  2042                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2043  002210  0E00               	movlw	0
  2044  002212  0100               	movlb	0	; () banked
  2045  002214  6F6E               	movwf	CANSetMask@mask& (0+255),b
  2046  002216  0E00               	movlw	0
  2047  002218  6F6F               	movwf	(CANSetMask@mask+1)& (0+255),b
  2048  00221A  0E00               	movlw	0
  2049  00221C  6F70               	movwf	(CANSetMask@mask+2)& (0+255),b
  2050  00221E  0E00               	movlw	0
  2051  002220  6F71               	movwf	(CANSetMask@mask+3)& (0+255),b
  2052  002222  0EF7               	movlw	247
  2053  002224  0100               	movlb	0	; () banked
  2054  002226  6F72               	movwf	CANSetMask@type& (0+255),b
  2055  002228  0E02               	movlw	2
  2056  00222A  ECEF  F00E         	call	_CANSetMask
  2057                           
  2058                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2059  00222E  D00F               	goto	l4414
  2060  002230                     l4408:
  2061                           
  2062                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2063  002230  0EF7               	movlw	247
  2064  002232  0100               	movlb	0	; () banked
  2065  002234  6F86               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2066  002236  D007               	goto	l4410
  2067  002238                     l362:
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2071  002238  0100               	movlb	0	; () banked
  2072  00223A  6986               	setf	CANInitialize@FilterConfig1& (0+255),b
  2073                           
  2074                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2075  00223C  0100               	movlb	0	; () banked
  2076  00223E  6987               	setf	CANInitialize@FilterConfig2& (0+255),b
  2077                           
  2078                           ;inc\CANlib.h: 273: break;
  2079  002240  D028               	goto	l4416
  2080  002242                     l363:
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2084  002242  0100               	movlb	0	; () banked
  2085  002244  6986               	setf	CANInitialize@FilterConfig1& (0+255),b
  2086  002246                     l4410:
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2090  002246  0EF7               	movlw	247
  2091  002248  0100               	movlb	0	; () banked
  2092  00224A  6F87               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;inc\CANlib.h: 278: }
  2096                           
  2097                           ;inc\CANlib.h: 277: break;
  2098  00224C  D022               	goto	l4416
  2099  00224E                     l4414:
  2100  00224E  0E9F               	movlw	159
  2101  002250  0100               	movlb	0	; () banked
  2102  002252  6F81               	movwf	??_CANInitialize& (0+255),b
  2103  002254  0EFF               	movlw	255
  2104  002256  0100               	movlb	0	; () banked
  2105  002258  6F82               	movwf	(??_CANInitialize+1)& (0+255),b
  2106  00225A  0100               	movlb	0	; () banked
  2107  00225C  5180               	movf	CANInitialize@flags& (0+255),w,b
  2108  00225E  0B60               	andlw	96
  2109  002260  0100               	movlb	0	; () banked
  2110  002262  6F83               	movwf	(??_CANInitialize+2)& (0+255),b
  2111  002264  6B84               	clrf	(??_CANInitialize+3)& (0+255),b
  2112  002266  0100               	movlb	0	; () banked
  2113  002268  5181               	movf	??_CANInitialize& (0+255),w,b
  2114  00226A  0100               	movlb	0	; () banked
  2115  00226C  1383               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2116  00226E  0100               	movlb	0	; () banked
  2117  002270  5182               	movf	(??_CANInitialize+1)& (0+255),w,b
  2118  002272  0100               	movlb	0	; () banked
  2119  002274  1384               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2120                           
  2121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2122                           ; Switch size 1, requested type "space"
  2123                           ; Number of cases is 1, Range of values is 0 to 0
  2124                           ; switch strategies available:
  2125                           ; Name         Instructions Cycles
  2126                           ; simple_byte            4     3 (average)
  2127                           ;	Chosen strategy is simple_byte
  2128  002276  0100               	movlb	0	; () banked
  2129  002278  5184               	movf	(??_CANInitialize+3)& (0+255),w,b
  2130  00227A  0A00               	xorlw	0	; case 0
  2131  00227C  A4D8               	btfss	status,2,c
  2132  00227E  D7E1               	goto	l363
  2133                           
  2134                           ; BSR set to: 0
  2135                           ; Switch size 1, requested type "space"
  2136                           ; Number of cases is 2, Range of values is 191 to 223
  2137                           ; switch strategies available:
  2138                           ; Name         Instructions Cycles
  2139                           ; simple_byte            7     4 (average)
  2140                           ;	Chosen strategy is simple_byte
  2141  002280  0100               	movlb	0	; () banked
  2142  002282  5183               	movf	(??_CANInitialize+2)& (0+255),w,b
  2143  002284  0ABF               	xorlw	191	; case 191
  2144  002286  B4D8               	btfsc	status,2,c
  2145  002288  D7D7               	goto	l362
  2146  00228A  0A60               	xorlw	96	; case 223
  2147  00228C  B4D8               	btfsc	status,2,c
  2148  00228E  D7D0               	goto	l4408
  2149  002290  D7D8               	goto	l363
  2150  002292                     l4416:
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2154  002292  0E00               	movlw	0
  2155  002294  0100               	movlb	0	; () banked
  2156  002296  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2157  002298  0E00               	movlw	0
  2158  00229A  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2159  00229C  0E00               	movlw	0
  2160  00229E  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2161  0022A0  0E00               	movlw	0
  2162  0022A2  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2163  0022A4  C086  F072         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2164  0022A8  0E00               	movlw	0
  2165  0022AA  ECD6  F000         	call	_CANSetFilter
  2166                           
  2167                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2168  0022AE  0E00               	movlw	0
  2169  0022B0  0100               	movlb	0	; () banked
  2170  0022B2  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2171  0022B4  0E00               	movlw	0
  2172  0022B6  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2173  0022B8  0E00               	movlw	0
  2174  0022BA  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2175  0022BC  0E00               	movlw	0
  2176  0022BE  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2177  0022C0  C086  F072         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2178  0022C4  0E01               	movlw	1
  2179  0022C6  ECD6  F000         	call	_CANSetFilter
  2180                           
  2181                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2182  0022CA  0E00               	movlw	0
  2183  0022CC  0100               	movlb	0	; () banked
  2184  0022CE  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2185  0022D0  0E00               	movlw	0
  2186  0022D2  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2187  0022D4  0E00               	movlw	0
  2188  0022D6  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2189  0022D8  0E00               	movlw	0
  2190  0022DA  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2191  0022DC  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2192  0022E0  0E02               	movlw	2
  2193  0022E2  ECD6  F000         	call	_CANSetFilter
  2194                           
  2195                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2196  0022E6  0E00               	movlw	0
  2197  0022E8  0100               	movlb	0	; () banked
  2198  0022EA  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2199  0022EC  0E00               	movlw	0
  2200  0022EE  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2201  0022F0  0E00               	movlw	0
  2202  0022F2  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2203  0022F4  0E00               	movlw	0
  2204  0022F6  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2205  0022F8  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2206  0022FC  0E03               	movlw	3
  2207  0022FE  ECD6  F000         	call	_CANSetFilter
  2208                           
  2209                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2210  002302  0E00               	movlw	0
  2211  002304  0100               	movlb	0	; () banked
  2212  002306  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2213  002308  0E00               	movlw	0
  2214  00230A  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2215  00230C  0E00               	movlw	0
  2216  00230E  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2217  002310  0E00               	movlw	0
  2218  002312  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2219  002314  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2220  002318  0E04               	movlw	4
  2221  00231A  ECD6  F000         	call	_CANSetFilter
  2222                           
  2223                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2224  00231E  0E00               	movlw	0
  2225  002320  0100               	movlb	0	; () banked
  2226  002322  6F6E               	movwf	CANSetFilter@filter& (0+255),b
  2227  002324  0E00               	movlw	0
  2228  002326  6F6F               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2229  002328  0E00               	movlw	0
  2230  00232A  6F70               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2231  00232C  0E00               	movlw	0
  2232  00232E  6F71               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2233  002330  C087  F072         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2234  002334  0E05               	movlw	5
  2235  002336  ECD6  F000         	call	_CANSetFilter
  2236                           
  2237                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2238  00233A  0E00               	movlw	0
  2239  00233C  ECE5  F013         	call	_CANOperationMode
  2240  002340  0012               	return		;funcret
  2241  002342                     __end_of_CANInitialize:
  2242                           	opt stack 0
  2243                           tblptru	equ	0xFF8
  2244                           tblptrh	equ	0xFF7
  2245                           tblptrl	equ	0xFF6
  2246                           tablat	equ	0xFF5
  2247                           intcon	equ	0xFF2
  2248                           intcon2	equ	0xFF1
  2249                           postinc0	equ	0xFEE
  2250                           wreg	equ	0xFE8
  2251                           status	equ	0xFD8
  2252                           
  2253 ;; *************** function _CANSetMask *****************
  2254 ;; Defined at:
  2255 ;;		line 640 in file "H:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  numBuffer       1    wreg     enum E16878
  2258 ;;  mask            4   14[BANK0 ] unsigned long 
  2259 ;;  type            1   18[BANK0 ] enum E16844
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  numBuffer       1   23[BANK0 ] enum E16878
  2262 ;;  tamp            4   24[BANK0 ] unsigned long 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;		None               void
  2265 ;; Registers used:
  2266 ;;		wreg, status,2, status,0
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2272 ;;      Params:         0       5       0       0
  2273 ;;      Locals:         0       5       0       0
  2274 ;;      Temps:          0       4       0       0
  2275 ;;      Totals:         0      14       0       0
  2276 ;;Total ram usage:       14 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    3
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_CANInitialize
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text5
  2287  001DDE                     __ptext5:
  2288                           	opt stack 0
  2289  001DDE                     _CANSetMask:
  2290                           	opt stack 25
  2291                           
  2292                           ;incstack = 0
  2293                           ;CANSetMask@numBuffer stored from wreg
  2294  001DDE  0100               	movlb	0	; () banked
  2295  001DE0  6F77               	movwf	CANSetMask@numBuffer& (0+255),b
  2296                           
  2297                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2298  001DE2  0100               	movlb	0	; () banked
  2299  001DE4  0577               	decf	CANSetMask@numBuffer& (0+255),w,b
  2300  001DE6  A4D8               	btfss	status,2,c
  2301  001DE8  D056               	goto	l3978
  2302                           
  2303                           ; BSR set to: 0
  2304  001DEA  0100               	movlb	0	; () banked
  2305  001DEC  2972               	incf	CANSetMask@type& (0+255),w,b
  2306  001DEE  A4D8               	btfss	status,2,c
  2307  001DF0  D052               	goto	l3978
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;inc\CANlib.h: 644: {
  2311                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  2312  001DF2  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  2313  001DF6  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2314  001DFA  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2315  001DFE  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2316  001E02  0E04               	movlw	4
  2317  001E04  D006               	goto	u4700
  2318  001E06                     u4705:
  2319  001E06  0100               	movlb	0	; () banked
  2320  001E08  90D8               	bcf	status,0,c
  2321  001E0A  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2322  001E0C  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2323  001E0E  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2324  001E10  3373               	rrcf	??_CANSetMask& (0+255),f,b
  2325  001E12                     u4700:
  2326  001E12  2EE8               	decfsz	wreg,f,c
  2327  001E14  D7F8               	goto	u4705
  2328  001E16  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2329  001E1A  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2330  001E1E  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2331  001E22  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  2335  001E26  0100               	movlb	0	; () banked
  2336  001E28  5178               	movf	CANSetMask@tamp& (0+255),w,b
  2337  001E2A  0100               	movlb	0	; () banked
  2338  001E2C  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2339  001E2E  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2340  001E30  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2341  001E32  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  2345  001E34  C078  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  2349  001E38  0E07               	movlw	7
  2350  001E3A  0100               	movlb	0	; () banked
  2351  001E3C  156E               	andwf	CANSetMask@mask& (0+255),w,b
  2352  001E3E  0100               	movlb	0	; () banked
  2353  001E40  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2354  001E42  0E00               	movlw	0
  2355  001E44  0100               	movlb	0	; () banked
  2356  001E46  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2357  001E48  0100               	movlb	0	; () banked
  2358  001E4A  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2359  001E4C  0E00               	movlw	0
  2360  001E4E  0100               	movlb	0	; () banked
  2361  001E50  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2362  001E52  0100               	movlb	0	; () banked
  2363  001E54  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2364  001E56  0E00               	movlw	0
  2365  001E58  0100               	movlb	0	; () banked
  2366  001E5A  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2367  001E5C  0100               	movlb	0	; () banked
  2368  001E5E  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  2372  001E60  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  2373  001E64  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2374  001E68  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2375  001E6C  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2376  001E70  0E05               	movlw	5
  2377  001E72                     u4715:
  2378  001E72  90D8               	bcf	status,0,c
  2379  001E74  0100               	movlb	0	; () banked
  2380  001E76  3773               	rlcf	??_CANSetMask& (0+255),f,b
  2381  001E78  3774               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2382  001E7A  3775               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2383  001E7C  3776               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2384  001E7E  2EE8               	decfsz	wreg,f,c
  2385  001E80  D7F8               	goto	u4715
  2386  001E82  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2387  001E86  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2388  001E8A  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2389  001E8E  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  2393  001E92  C078  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2394  001E96                     l3978:
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;inc\CANlib.h: 652: }
  2398                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2399  001E96  0E02               	movlw	2
  2400  001E98  0100               	movlb	0	; () banked
  2401  001E9A  1977               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2402  001E9C  A4D8               	btfss	status,2,c
  2403  001E9E  D056               	goto	l3994
  2404                           
  2405                           ; BSR set to: 0
  2406  001EA0  0100               	movlb	0	; () banked
  2407  001EA2  2972               	incf	CANSetMask@type& (0+255),w,b
  2408  001EA4  A4D8               	btfss	status,2,c
  2409  001EA6  D052               	goto	l3994
  2410                           
  2411                           ; BSR set to: 0
  2412                           ;inc\CANlib.h: 655: {
  2413                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  2414  001EA8  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  2415  001EAC  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2416  001EB0  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2417  001EB4  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2418  001EB8  0E04               	movlw	4
  2419  001EBA  D006               	goto	u4740
  2420  001EBC                     u4745:
  2421  001EBC  0100               	movlb	0	; () banked
  2422  001EBE  90D8               	bcf	status,0,c
  2423  001EC0  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2424  001EC2  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2425  001EC4  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2426  001EC6  3373               	rrcf	??_CANSetMask& (0+255),f,b
  2427  001EC8                     u4740:
  2428  001EC8  2EE8               	decfsz	wreg,f,c
  2429  001ECA  D7F8               	goto	u4745
  2430  001ECC  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2431  001ED0  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2432  001ED4  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2433  001ED8  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  2437  001EDC  0100               	movlb	0	; () banked
  2438  001EDE  5178               	movf	CANSetMask@tamp& (0+255),w,b
  2439  001EE0  0100               	movlb	0	; () banked
  2440  001EE2  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2441  001EE4  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2442  001EE6  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2443  001EE8  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  2447  001EEA  C078  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  2451  001EEE  0E07               	movlw	7
  2452  001EF0  0100               	movlb	0	; () banked
  2453  001EF2  156E               	andwf	CANSetMask@mask& (0+255),w,b
  2454  001EF4  0100               	movlb	0	; () banked
  2455  001EF6  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2456  001EF8  0E00               	movlw	0
  2457  001EFA  0100               	movlb	0	; () banked
  2458  001EFC  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2459  001EFE  0100               	movlb	0	; () banked
  2460  001F00  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2461  001F02  0E00               	movlw	0
  2462  001F04  0100               	movlb	0	; () banked
  2463  001F06  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2464  001F08  0100               	movlb	0	; () banked
  2465  001F0A  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2466  001F0C  0E00               	movlw	0
  2467  001F0E  0100               	movlb	0	; () banked
  2468  001F10  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2469  001F12  0100               	movlb	0	; () banked
  2470  001F14  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2471                           
  2472                           ; BSR set to: 0
  2473                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  2474  001F16  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  2475  001F1A  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2476  001F1E  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2477  001F22  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2478  001F26  0E05               	movlw	5
  2479  001F28                     u4755:
  2480  001F28  90D8               	bcf	status,0,c
  2481  001F2A  0100               	movlb	0	; () banked
  2482  001F2C  3773               	rlcf	??_CANSetMask& (0+255),f,b
  2483  001F2E  3774               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2484  001F30  3775               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2485  001F32  3776               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2486  001F34  2EE8               	decfsz	wreg,f,c
  2487  001F36  D7F8               	goto	u4755
  2488  001F38  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2489  001F3C  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2490  001F40  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2491  001F44  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  2495  001F48  C078  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2496  001F4C                     l3994:
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;inc\CANlib.h: 663: }
  2500                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2501  001F4C  0100               	movlb	0	; () banked
  2502  001F4E  0577               	decf	CANSetMask@numBuffer& (0+255),w,b
  2503  001F50  A4D8               	btfss	status,2,c
  2504  001F52  D087               	goto	l4026
  2505                           
  2506                           ; BSR set to: 0
  2507  001F54  0EF7               	movlw	247
  2508  001F56  0100               	movlb	0	; () banked
  2509  001F58  1972               	xorwf	CANSetMask@type& (0+255),w,b
  2510  001F5A  A4D8               	btfss	status,2,c
  2511  001F5C  D082               	goto	l4026
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;inc\CANlib.h: 666: {
  2515                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  2516  001F5E  0100               	movlb	0	; () banked
  2517  001F60  516E               	movf	CANSetMask@mask& (0+255),w,b
  2518  001F62  0100               	movlb	0	; () banked
  2519  001F64  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2520  001F66  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2521  001F68  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2522  001F6A  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  2526  001F6C  C078  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  2530  001F70  0E00               	movlw	0
  2531  001F72  0100               	movlb	0	; () banked
  2532  001F74  156E               	andwf	CANSetMask@mask& (0+255),w,b
  2533  001F76  0100               	movlb	0	; () banked
  2534  001F78  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2535  001F7A  0EFF               	movlw	255
  2536  001F7C  0100               	movlb	0	; () banked
  2537  001F7E  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2538  001F80  0100               	movlb	0	; () banked
  2539  001F82  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2540  001F84  0E00               	movlw	0
  2541  001F86  0100               	movlb	0	; () banked
  2542  001F88  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2543  001F8A  0100               	movlb	0	; () banked
  2544  001F8C  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2545  001F8E  0E00               	movlw	0
  2546  001F90  0100               	movlb	0	; () banked
  2547  001F92  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2548  001F94  0100               	movlb	0	; () banked
  2549  001F96  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2550                           
  2551                           ; BSR set to: 0
  2552                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  2553  001F98  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  2554  001F9C  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2555  001FA0  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2556  001FA4  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2557  001FA8  C074  F073         	movff	??_CANSetMask+1,??_CANSetMask
  2558  001FAC  C075  F074         	movff	??_CANSetMask+2,??_CANSetMask+1
  2559  001FB0  C076  F075         	movff	??_CANSetMask+3,??_CANSetMask+2
  2560  001FB4  0100               	movlb	0	; () banked
  2561  001FB6  6B76               	clrf	(??_CANSetMask+3)& (0+255),b
  2562  001FB8  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2563  001FBC  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2564  001FC0  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2565  001FC4  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  2569  001FC8  C078  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  2573  001FCC  0100               	movlb	0	; () banked
  2574  001FCE  A170               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2575  001FD0  D003               	goto	l436
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  2579  001FD2  010F               	movlb	15	; () banked
  2580  001FD4  8119               	bsf	25,0,b	;volatile
  2581  001FD6  D002               	goto	l437
  2582  001FD8                     l436:
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;inc\CANlib.h: 676: else
  2586                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  2587  001FD8  010F               	movlb	15	; () banked
  2588  001FDA  9119               	bcf	25,0,b	;volatile
  2589  001FDC                     l437:
  2590                           
  2591                           ; BSR set to: 15
  2592                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  2593  001FDC  0100               	movlb	0	; () banked
  2594  001FDE  A370               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2595  001FE0  D003               	goto	l438
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  2599  001FE2  010F               	movlb	15	; () banked
  2600  001FE4  8319               	bsf	25,1,b	;volatile
  2601  001FE6  D002               	goto	l439
  2602  001FE8                     l438:
  2603                           
  2604                           ; BSR set to: 0
  2605                           ;inc\CANlib.h: 681: else
  2606                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  2607  001FE8  010F               	movlb	15	; () banked
  2608  001FEA  9319               	bcf	25,1,b	;volatile
  2609  001FEC                     l439:
  2610                           
  2611                           ; BSR set to: 15
  2612                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  2613  001FEC  0100               	movlb	0	; () banked
  2614  001FEE  A570               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2615  001FF0  D003               	goto	l440
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  2619  001FF2  010F               	movlb	15	; () banked
  2620  001FF4  8B19               	bsf	25,5,b	;volatile
  2621  001FF6  D002               	goto	l441
  2622  001FF8                     l440:
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;inc\CANlib.h: 686: else
  2626                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  2627  001FF8  010F               	movlb	15	; () banked
  2628  001FFA  9B19               	bcf	25,5,b	;volatile
  2629  001FFC                     l441:
  2630                           
  2631                           ; BSR set to: 15
  2632                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  2633  001FFC  0100               	movlb	0	; () banked
  2634  001FFE  A770               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2635  002000  D003               	goto	l442
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  2639  002002  010F               	movlb	15	; () banked
  2640  002004  8D19               	bsf	25,6,b	;volatile
  2641  002006  D002               	goto	l443
  2642  002008                     l442:
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;inc\CANlib.h: 691: else
  2646                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  2647  002008  010F               	movlb	15	; () banked
  2648  00200A  9D19               	bcf	25,6,b	;volatile
  2649  00200C                     l443:
  2650                           
  2651                           ; BSR set to: 15
  2652                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  2653  00200C  0100               	movlb	0	; () banked
  2654  00200E  A970               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2655  002010  D003               	goto	l444
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  2659  002012  010F               	movlb	15	; () banked
  2660  002014  8F19               	bsf	25,7,b	;volatile
  2661  002016  D002               	goto	l4020
  2662  002018                     l444:
  2663                           
  2664                           ; BSR set to: 0
  2665                           ;inc\CANlib.h: 696: else
  2666                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  2667  002018  010F               	movlb	15	; () banked
  2668  00201A  9F19               	bcf	25,7,b	;volatile
  2669  00201C                     l4020:
  2670                           
  2671                           ; BSR set to: 15
  2672                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  2673  00201C  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  2674  002020  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2675  002024  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2676  002028  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2677  00202C  0E16               	movlw	22
  2678  00202E  D006               	goto	u4830
  2679  002030                     u4835:
  2680  002030  0100               	movlb	0	; () banked
  2681  002032  90D8               	bcf	status,0,c
  2682  002034  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2683  002036  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2684  002038  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2685  00203A  3373               	rrcf	??_CANSetMask& (0+255),f,b
  2686  00203C                     u4830:
  2687  00203C  2EE8               	decfsz	wreg,f,c
  2688  00203E  D7F8               	goto	u4835
  2689  002040  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2690  002044  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2691  002048  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2692  00204C  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2693                           
  2694                           ; BSR set to: 0
  2695                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  2696  002050  0100               	movlb	0	; () banked
  2697  002052  5178               	movf	CANSetMask@tamp& (0+255),w,b
  2698  002054  0100               	movlb	0	; () banked
  2699  002056  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2700  002058  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2701  00205A  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2702  00205C  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  2706  00205E  C078  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2707  002062                     l4026:
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;inc\CANlib.h: 702: }
  2711                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2712  002062  0E02               	movlw	2
  2713  002064  0100               	movlb	0	; () banked
  2714  002066  1977               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2715  002068  A4D8               	btfss	status,2,c
  2716  00206A  0012               	return	
  2717                           
  2718                           ; BSR set to: 0
  2719  00206C  0EF7               	movlw	247
  2720  00206E  0100               	movlb	0	; () banked
  2721  002070  1972               	xorwf	CANSetMask@type& (0+255),w,b
  2722  002072  A4D8               	btfss	status,2,c
  2723  002074  0012               	return	
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;inc\CANlib.h: 705: {
  2727                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  2728  002076  0100               	movlb	0	; () banked
  2729  002078  516E               	movf	CANSetMask@mask& (0+255),w,b
  2730  00207A  0100               	movlb	0	; () banked
  2731  00207C  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2732  00207E  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2733  002080  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2734  002082  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  2738  002084  C078  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  2742  002088  0E00               	movlw	0
  2743  00208A  0100               	movlb	0	; () banked
  2744  00208C  156E               	andwf	CANSetMask@mask& (0+255),w,b
  2745  00208E  0100               	movlb	0	; () banked
  2746  002090  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2747  002092  0EFF               	movlw	255
  2748  002094  0100               	movlb	0	; () banked
  2749  002096  156F               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2750  002098  0100               	movlb	0	; () banked
  2751  00209A  6F79               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2752  00209C  0E00               	movlw	0
  2753  00209E  0100               	movlb	0	; () banked
  2754  0020A0  1570               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2755  0020A2  0100               	movlb	0	; () banked
  2756  0020A4  6F7A               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2757  0020A6  0E00               	movlw	0
  2758  0020A8  0100               	movlb	0	; () banked
  2759  0020AA  1571               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2760  0020AC  0100               	movlb	0	; () banked
  2761  0020AE  6F7B               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  2765  0020B0  C078  F073         	movff	CANSetMask@tamp,??_CANSetMask
  2766  0020B4  C079  F074         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2767  0020B8  C07A  F075         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2768  0020BC  C07B  F076         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2769  0020C0  C074  F073         	movff	??_CANSetMask+1,??_CANSetMask
  2770  0020C4  C075  F074         	movff	??_CANSetMask+2,??_CANSetMask+1
  2771  0020C8  C076  F075         	movff	??_CANSetMask+3,??_CANSetMask+2
  2772  0020CC  0100               	movlb	0	; () banked
  2773  0020CE  6B76               	clrf	(??_CANSetMask+3)& (0+255),b
  2774  0020D0  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2775  0020D4  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2776  0020D8  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2777  0020DC  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  2781  0020E0  C078  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  2785  0020E4  0100               	movlb	0	; () banked
  2786  0020E6  A170               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  2787  0020E8  D003               	goto	l447
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  2791  0020EA  010F               	movlb	15	; () banked
  2792  0020EC  811D               	bsf	29,0,b	;volatile
  2793  0020EE  D002               	goto	l448
  2794  0020F0                     l447:
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;inc\CANlib.h: 715: else
  2798                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  2799  0020F0  010F               	movlb	15	; () banked
  2800  0020F2  911D               	bcf	29,0,b	;volatile
  2801  0020F4                     l448:
  2802                           
  2803                           ; BSR set to: 15
  2804                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  2805  0020F4  0100               	movlb	0	; () banked
  2806  0020F6  A370               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  2807  0020F8  D003               	goto	l449
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  2811  0020FA  010F               	movlb	15	; () banked
  2812  0020FC  831D               	bsf	29,1,b	;volatile
  2813  0020FE  D002               	goto	l450
  2814  002100                     l449:
  2815                           
  2816                           ; BSR set to: 0
  2817                           ;inc\CANlib.h: 720: else
  2818                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  2819  002100  010F               	movlb	15	; () banked
  2820  002102  931D               	bcf	29,1,b	;volatile
  2821  002104                     l450:
  2822                           
  2823                           ; BSR set to: 15
  2824                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  2825  002104  0100               	movlb	0	; () banked
  2826  002106  A570               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  2827  002108  D003               	goto	l451
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  2831  00210A  010F               	movlb	15	; () banked
  2832  00210C  8B1D               	bsf	29,5,b	;volatile
  2833  00210E  D002               	goto	l452
  2834  002110                     l451:
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;inc\CANlib.h: 725: else
  2838                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  2839  002110  010F               	movlb	15	; () banked
  2840  002112  9B1D               	bcf	29,5,b	;volatile
  2841  002114                     l452:
  2842                           
  2843                           ; BSR set to: 15
  2844                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  2845  002114  0100               	movlb	0	; () banked
  2846  002116  A770               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  2847  002118  D003               	goto	l453
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  2851  00211A  010F               	movlb	15	; () banked
  2852  00211C  8D1D               	bsf	29,6,b	;volatile
  2853  00211E  D002               	goto	l454
  2854  002120                     l453:
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;inc\CANlib.h: 730: else
  2858                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  2859  002120  010F               	movlb	15	; () banked
  2860  002122  9D1D               	bcf	29,6,b	;volatile
  2861  002124                     l454:
  2862                           
  2863                           ; BSR set to: 15
  2864                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  2865  002124  0100               	movlb	0	; () banked
  2866  002126  A970               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  2867  002128  D003               	goto	l455
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  2871  00212A  010F               	movlb	15	; () banked
  2872  00212C  8F1D               	bsf	29,7,b	;volatile
  2873  00212E  D002               	goto	l4052
  2874  002130                     l455:
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;inc\CANlib.h: 735: else
  2878                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  2879  002130  010F               	movlb	15	; () banked
  2880  002132  9F1D               	bcf	29,7,b	;volatile
  2881  002134                     l4052:
  2882                           
  2883                           ; BSR set to: 15
  2884                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  2885  002134  C06E  F073         	movff	CANSetMask@mask,??_CANSetMask
  2886  002138  C06F  F074         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2887  00213C  C070  F075         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2888  002140  C071  F076         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2889  002144  0E16               	movlw	22
  2890  002146  D006               	goto	u4910
  2891  002148                     u4915:
  2892  002148  0100               	movlb	0	; () banked
  2893  00214A  90D8               	bcf	status,0,c
  2894  00214C  3376               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2895  00214E  3375               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2896  002150  3374               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2897  002152  3373               	rrcf	??_CANSetMask& (0+255),f,b
  2898  002154                     u4910:
  2899  002154  2EE8               	decfsz	wreg,f,c
  2900  002156  D7F8               	goto	u4915
  2901  002158  C073  F078         	movff	??_CANSetMask,CANSetMask@tamp
  2902  00215C  C074  F079         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2903  002160  C075  F07A         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2904  002164  C076  F07B         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  2908  002168  0100               	movlb	0	; () banked
  2909  00216A  5178               	movf	CANSetMask@tamp& (0+255),w,b
  2910  00216C  0100               	movlb	0	; () banked
  2911  00216E  6F78               	movwf	CANSetMask@tamp& (0+255),b
  2912  002170  6B79               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2913  002172  6B7A               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2914  002174  6B7B               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  2918  002176  C078  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2919  00217A  0012               	return	
  2920  00217C                     __end_of_CANSetMask:
  2921                           	opt stack 0
  2922                           tblptru	equ	0xFF8
  2923                           tblptrh	equ	0xFF7
  2924                           tblptrl	equ	0xFF6
  2925                           tablat	equ	0xFF5
  2926                           intcon	equ	0xFF2
  2927                           intcon2	equ	0xFF1
  2928                           postinc0	equ	0xFEE
  2929                           wreg	equ	0xFE8
  2930                           status	equ	0xFD8
  2931                           
  2932 ;; *************** function _CANSetFilter *****************
  2933 ;; Defined at:
  2934 ;;		line 748 in file "H:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  numBuffer       1    wreg     enum E16881
  2937 ;;  filter          4   14[BANK0 ] unsigned long 
  2938 ;;  type            1   18[BANK0 ] enum E16844
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  numBuffer       1   23[BANK0 ] enum E16881
  2941 ;;  tamp            4   24[BANK0 ] unsigned long 
  2942 ;; Return value:  Size  Location     Type
  2943 ;;		None               void
  2944 ;; Registers used:
  2945 ;;		wreg, status,2, status,0
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2951 ;;      Params:         0       5       0       0
  2952 ;;      Locals:         0       5       0       0
  2953 ;;      Temps:          0       4       0       0
  2954 ;;      Totals:         0      14       0       0
  2955 ;;Total ram usage:       14 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; Hardware stack levels required when called:    3
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_CANInitialize
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           	psect	text6
  2966  0001AC                     __ptext6:
  2967                           	opt stack 0
  2968  0001AC                     _CANSetFilter:
  2969                           	opt stack 25
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;incstack = 0
  2973                           ;CANSetFilter@numBuffer stored from wreg
  2974  0001AC  0100               	movlb	0	; () banked
  2975  0001AE  6F77               	movwf	CANSetFilter@numBuffer& (0+255),b
  2976                           
  2977                           ;inc\CANlib.h: 750: unsigned long tamp;
  2978                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  2979  0001B0  0100               	movlb	0	; () banked
  2980  0001B2  5177               	movf	CANSetFilter@numBuffer& (0+255),w,b
  2981  0001B4  0100               	movlb	0	; () banked
  2982  0001B6  A4D8               	btfss	status,2,c
  2983  0001B8  D058               	goto	l4076
  2984                           
  2985                           ; BSR set to: 0
  2986  0001BA  0100               	movlb	0	; () banked
  2987  0001BC  2972               	incf	CANSetFilter@type& (0+255),w,b
  2988  0001BE  A4D8               	btfss	status,2,c
  2989  0001C0  D054               	goto	l4076
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;inc\CANlib.h: 753: {
  2993                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  2994  0001C2  010F               	movlb	15	; () banked
  2995  0001C4  9701               	bcf	1,3,b	;volatile
  2996                           
  2997                           ; BSR set to: 15
  2998                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  2999  0001C6  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3000  0001CA  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3001  0001CE  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3002  0001D2  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3003  0001D6  0E04               	movlw	4
  3004  0001D8  D006               	goto	u4940
  3005  0001DA                     u4945:
  3006  0001DA  0100               	movlb	0	; () banked
  3007  0001DC  90D8               	bcf	status,0,c
  3008  0001DE  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3009  0001E0  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3010  0001E2  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3011  0001E4  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3012  0001E6                     u4940:
  3013  0001E6  2EE8               	decfsz	wreg,f,c
  3014  0001E8  D7F8               	goto	u4945
  3015  0001EA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3016  0001EE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3017  0001F2  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3018  0001F6  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  3022  0001FA  0100               	movlb	0	; () banked
  3023  0001FC  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3024  0001FE  0100               	movlb	0	; () banked
  3025  000200  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3026  000202  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3027  000204  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3028  000206  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3032  000208  C078  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  3036  00020C  0E07               	movlw	7
  3037  00020E  0100               	movlb	0	; () banked
  3038  000210  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3039  000212  0100               	movlb	0	; () banked
  3040  000214  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3041  000216  0E00               	movlw	0
  3042  000218  0100               	movlb	0	; () banked
  3043  00021A  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3044  00021C  0100               	movlb	0	; () banked
  3045  00021E  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3046  000220  0E00               	movlw	0
  3047  000222  0100               	movlb	0	; () banked
  3048  000224  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3049  000226  0100               	movlb	0	; () banked
  3050  000228  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3051  00022A  0E00               	movlw	0
  3052  00022C  0100               	movlb	0	; () banked
  3053  00022E  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3054  000230  0100               	movlb	0	; () banked
  3055  000232  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  3059  000234  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3060  000238  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3061  00023C  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3062  000240  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3063  000244  0E05               	movlw	5
  3064  000246                     u4955:
  3065  000246  90D8               	bcf	status,0,c
  3066  000248  0100               	movlb	0	; () banked
  3067  00024A  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3068  00024C  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3069  00024E  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3070  000250  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3071  000252  2EE8               	decfsz	wreg,f,c
  3072  000254  D7F8               	goto	u4955
  3073  000256  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3074  00025A  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3075  00025E  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3076  000262  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3080  000266  C078  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3081  00026A                     l4076:
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;inc\CANlib.h: 763: }
  3085                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3086  00026A  0100               	movlb	0	; () banked
  3087  00026C  0577               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3088  00026E  A4D8               	btfss	status,2,c
  3089  000270  D058               	goto	l4094
  3090                           
  3091                           ; BSR set to: 0
  3092  000272  0100               	movlb	0	; () banked
  3093  000274  2972               	incf	CANSetFilter@type& (0+255),w,b
  3094  000276  A4D8               	btfss	status,2,c
  3095  000278  D054               	goto	l4094
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;inc\CANlib.h: 766: {
  3099                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3100  00027A  010F               	movlb	15	; () banked
  3101  00027C  9705               	bcf	5,3,b	;volatile
  3102                           
  3103                           ; BSR set to: 15
  3104                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  3105  00027E  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3106  000282  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3107  000286  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3108  00028A  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3109  00028E  0E04               	movlw	4
  3110  000290  D006               	goto	u4980
  3111  000292                     u4985:
  3112  000292  0100               	movlb	0	; () banked
  3113  000294  90D8               	bcf	status,0,c
  3114  000296  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3115  000298  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3116  00029A  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3117  00029C  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3118  00029E                     u4980:
  3119  00029E  2EE8               	decfsz	wreg,f,c
  3120  0002A0  D7F8               	goto	u4985
  3121  0002A2  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3122  0002A6  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3123  0002AA  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3124  0002AE  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  3128  0002B2  0100               	movlb	0	; () banked
  3129  0002B4  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3130  0002B6  0100               	movlb	0	; () banked
  3131  0002B8  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3132  0002BA  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3133  0002BC  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3134  0002BE  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3138  0002C0  C078  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  3142  0002C4  0E07               	movlw	7
  3143  0002C6  0100               	movlb	0	; () banked
  3144  0002C8  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3145  0002CA  0100               	movlb	0	; () banked
  3146  0002CC  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3147  0002CE  0E00               	movlw	0
  3148  0002D0  0100               	movlb	0	; () banked
  3149  0002D2  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3150  0002D4  0100               	movlb	0	; () banked
  3151  0002D6  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3152  0002D8  0E00               	movlw	0
  3153  0002DA  0100               	movlb	0	; () banked
  3154  0002DC  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3155  0002DE  0100               	movlb	0	; () banked
  3156  0002E0  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3157  0002E2  0E00               	movlw	0
  3158  0002E4  0100               	movlb	0	; () banked
  3159  0002E6  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3160  0002E8  0100               	movlb	0	; () banked
  3161  0002EA  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  3165  0002EC  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3166  0002F0  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3167  0002F4  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3168  0002F8  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3169  0002FC  0E05               	movlw	5
  3170  0002FE                     u4995:
  3171  0002FE  90D8               	bcf	status,0,c
  3172  000300  0100               	movlb	0	; () banked
  3173  000302  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3174  000304  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3175  000306  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3176  000308  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3177  00030A  2EE8               	decfsz	wreg,f,c
  3178  00030C  D7F8               	goto	u4995
  3179  00030E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3180  000312  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3181  000316  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3182  00031A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3186  00031E  C078  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3187  000322                     l4094:
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;inc\CANlib.h: 776: }
  3191                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3192  000322  0E02               	movlw	2
  3193  000324  0100               	movlb	0	; () banked
  3194  000326  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3195  000328  A4D8               	btfss	status,2,c
  3196  00032A  D058               	goto	l4112
  3197                           
  3198                           ; BSR set to: 0
  3199  00032C  0100               	movlb	0	; () banked
  3200  00032E  2972               	incf	CANSetFilter@type& (0+255),w,b
  3201  000330  A4D8               	btfss	status,2,c
  3202  000332  D054               	goto	l4112
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;inc\CANlib.h: 779: {
  3206                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3207  000334  010F               	movlb	15	; () banked
  3208  000336  9709               	bcf	9,3,b	;volatile
  3209                           
  3210                           ; BSR set to: 15
  3211                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  3212  000338  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3213  00033C  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3214  000340  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3215  000344  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3216  000348  0E04               	movlw	4
  3217  00034A  D006               	goto	u5020
  3218  00034C                     u5025:
  3219  00034C  0100               	movlb	0	; () banked
  3220  00034E  90D8               	bcf	status,0,c
  3221  000350  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3222  000352  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3223  000354  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3224  000356  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3225  000358                     u5020:
  3226  000358  2EE8               	decfsz	wreg,f,c
  3227  00035A  D7F8               	goto	u5025
  3228  00035C  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3229  000360  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3230  000364  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3231  000368  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  3235  00036C  0100               	movlb	0	; () banked
  3236  00036E  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3237  000370  0100               	movlb	0	; () banked
  3238  000372  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3239  000374  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3240  000376  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3241  000378  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3245  00037A  C078  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  3249  00037E  0E07               	movlw	7
  3250  000380  0100               	movlb	0	; () banked
  3251  000382  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3252  000384  0100               	movlb	0	; () banked
  3253  000386  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3254  000388  0E00               	movlw	0
  3255  00038A  0100               	movlb	0	; () banked
  3256  00038C  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3257  00038E  0100               	movlb	0	; () banked
  3258  000390  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3259  000392  0E00               	movlw	0
  3260  000394  0100               	movlb	0	; () banked
  3261  000396  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3262  000398  0100               	movlb	0	; () banked
  3263  00039A  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3264  00039C  0E00               	movlw	0
  3265  00039E  0100               	movlb	0	; () banked
  3266  0003A0  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3267  0003A2  0100               	movlb	0	; () banked
  3268  0003A4  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  3272  0003A6  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3273  0003AA  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3274  0003AE  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3275  0003B2  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3276  0003B6  0E05               	movlw	5
  3277  0003B8                     u5035:
  3278  0003B8  90D8               	bcf	status,0,c
  3279  0003BA  0100               	movlb	0	; () banked
  3280  0003BC  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3281  0003BE  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3282  0003C0  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3283  0003C2  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3284  0003C4  2EE8               	decfsz	wreg,f,c
  3285  0003C6  D7F8               	goto	u5035
  3286  0003C8  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3287  0003CC  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3288  0003D0  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3289  0003D4  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  3293  0003D8  C078  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3294  0003DC                     l4112:
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;inc\CANlib.h: 789: }
  3298                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3299  0003DC  0E03               	movlw	3
  3300  0003DE  0100               	movlb	0	; () banked
  3301  0003E0  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3302  0003E2  A4D8               	btfss	status,2,c
  3303  0003E4  D058               	goto	l4130
  3304                           
  3305                           ; BSR set to: 0
  3306  0003E6  0100               	movlb	0	; () banked
  3307  0003E8  2972               	incf	CANSetFilter@type& (0+255),w,b
  3308  0003EA  A4D8               	btfss	status,2,c
  3309  0003EC  D054               	goto	l4130
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;inc\CANlib.h: 792: {
  3313                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  3314  0003EE  010F               	movlb	15	; () banked
  3315  0003F0  970D               	bcf	13,3,b	;volatile
  3316                           
  3317                           ; BSR set to: 15
  3318                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  3319  0003F2  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3320  0003F6  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3321  0003FA  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3322  0003FE  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3323  000402  0E04               	movlw	4
  3324  000404  D006               	goto	u5060
  3325  000406                     u5065:
  3326  000406  0100               	movlb	0	; () banked
  3327  000408  90D8               	bcf	status,0,c
  3328  00040A  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3329  00040C  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3330  00040E  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3331  000410  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3332  000412                     u5060:
  3333  000412  2EE8               	decfsz	wreg,f,c
  3334  000414  D7F8               	goto	u5065
  3335  000416  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3336  00041A  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3337  00041E  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3338  000422  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  3342  000426  0100               	movlb	0	; () banked
  3343  000428  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3344  00042A  0100               	movlb	0	; () banked
  3345  00042C  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3346  00042E  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3347  000430  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3348  000432  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  3352  000434  C078  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  3356  000438  0E07               	movlw	7
  3357  00043A  0100               	movlb	0	; () banked
  3358  00043C  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3359  00043E  0100               	movlb	0	; () banked
  3360  000440  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3361  000442  0E00               	movlw	0
  3362  000444  0100               	movlb	0	; () banked
  3363  000446  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3364  000448  0100               	movlb	0	; () banked
  3365  00044A  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3366  00044C  0E00               	movlw	0
  3367  00044E  0100               	movlb	0	; () banked
  3368  000450  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3369  000452  0100               	movlb	0	; () banked
  3370  000454  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3371  000456  0E00               	movlw	0
  3372  000458  0100               	movlb	0	; () banked
  3373  00045A  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3374  00045C  0100               	movlb	0	; () banked
  3375  00045E  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  3379  000460  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3380  000464  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3381  000468  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3382  00046C  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3383  000470  0E05               	movlw	5
  3384  000472                     u5075:
  3385  000472  90D8               	bcf	status,0,c
  3386  000474  0100               	movlb	0	; () banked
  3387  000476  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3388  000478  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3389  00047A  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3390  00047C  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3391  00047E  2EE8               	decfsz	wreg,f,c
  3392  000480  D7F8               	goto	u5075
  3393  000482  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3394  000486  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3395  00048A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3396  00048E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  3400  000492  C078  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3401  000496                     l4130:
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;inc\CANlib.h: 802: }
  3405                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3406  000496  0E04               	movlw	4
  3407  000498  0100               	movlb	0	; () banked
  3408  00049A  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3409  00049C  A4D8               	btfss	status,2,c
  3410  00049E  D058               	goto	l4148
  3411                           
  3412                           ; BSR set to: 0
  3413  0004A0  0100               	movlb	0	; () banked
  3414  0004A2  2972               	incf	CANSetFilter@type& (0+255),w,b
  3415  0004A4  A4D8               	btfss	status,2,c
  3416  0004A6  D054               	goto	l4148
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;inc\CANlib.h: 805: {
  3420                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  3421  0004A8  010F               	movlb	15	; () banked
  3422  0004AA  9711               	bcf	17,3,b	;volatile
  3423                           
  3424                           ; BSR set to: 15
  3425                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  3426  0004AC  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3427  0004B0  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3428  0004B4  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3429  0004B8  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3430  0004BC  0E04               	movlw	4
  3431  0004BE  D006               	goto	u5100
  3432  0004C0                     u5105:
  3433  0004C0  0100               	movlb	0	; () banked
  3434  0004C2  90D8               	bcf	status,0,c
  3435  0004C4  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3436  0004C6  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3437  0004C8  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3438  0004CA  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3439  0004CC                     u5100:
  3440  0004CC  2EE8               	decfsz	wreg,f,c
  3441  0004CE  D7F8               	goto	u5105
  3442  0004D0  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3443  0004D4  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3444  0004D8  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3445  0004DC  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  3449  0004E0  0100               	movlb	0	; () banked
  3450  0004E2  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3451  0004E4  0100               	movlb	0	; () banked
  3452  0004E6  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3453  0004E8  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3454  0004EA  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3455  0004EC  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  3459  0004EE  C078  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  3463  0004F2  0E07               	movlw	7
  3464  0004F4  0100               	movlb	0	; () banked
  3465  0004F6  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3466  0004F8  0100               	movlb	0	; () banked
  3467  0004FA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3468  0004FC  0E00               	movlw	0
  3469  0004FE  0100               	movlb	0	; () banked
  3470  000500  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3471  000502  0100               	movlb	0	; () banked
  3472  000504  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3473  000506  0E00               	movlw	0
  3474  000508  0100               	movlb	0	; () banked
  3475  00050A  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3476  00050C  0100               	movlb	0	; () banked
  3477  00050E  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3478  000510  0E00               	movlw	0
  3479  000512  0100               	movlb	0	; () banked
  3480  000514  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3481  000516  0100               	movlb	0	; () banked
  3482  000518  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  3486  00051A  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3487  00051E  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3488  000522  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3489  000526  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3490  00052A  0E05               	movlw	5
  3491  00052C                     u5115:
  3492  00052C  90D8               	bcf	status,0,c
  3493  00052E  0100               	movlb	0	; () banked
  3494  000530  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3495  000532  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3496  000534  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3497  000536  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3498  000538  2EE8               	decfsz	wreg,f,c
  3499  00053A  D7F8               	goto	u5115
  3500  00053C  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3501  000540  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3502  000544  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3503  000548  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  3507  00054C  C078  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3508  000550                     l4148:
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;inc\CANlib.h: 815: }
  3512                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3513  000550  0E05               	movlw	5
  3514  000552  0100               	movlb	0	; () banked
  3515  000554  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3516  000556  A4D8               	btfss	status,2,c
  3517  000558  D058               	goto	l4166
  3518                           
  3519                           ; BSR set to: 0
  3520  00055A  0100               	movlb	0	; () banked
  3521  00055C  2972               	incf	CANSetFilter@type& (0+255),w,b
  3522  00055E  A4D8               	btfss	status,2,c
  3523  000560  D054               	goto	l4166
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;inc\CANlib.h: 818: {
  3527                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  3528  000562  010F               	movlb	15	; () banked
  3529  000564  9715               	bcf	21,3,b	;volatile
  3530                           
  3531                           ; BSR set to: 15
  3532                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  3533  000566  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3534  00056A  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3535  00056E  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3536  000572  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3537  000576  0E04               	movlw	4
  3538  000578  D006               	goto	u5140
  3539  00057A                     u5145:
  3540  00057A  0100               	movlb	0	; () banked
  3541  00057C  90D8               	bcf	status,0,c
  3542  00057E  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3543  000580  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3544  000582  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3545  000584  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3546  000586                     u5140:
  3547  000586  2EE8               	decfsz	wreg,f,c
  3548  000588  D7F8               	goto	u5145
  3549  00058A  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3550  00058E  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3551  000592  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3552  000596  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  3556  00059A  0100               	movlb	0	; () banked
  3557  00059C  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3558  00059E  0100               	movlb	0	; () banked
  3559  0005A0  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3560  0005A2  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3561  0005A4  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3562  0005A6  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  3566  0005A8  C078  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  3570  0005AC  0E07               	movlw	7
  3571  0005AE  0100               	movlb	0	; () banked
  3572  0005B0  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3573  0005B2  0100               	movlb	0	; () banked
  3574  0005B4  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3575  0005B6  0E00               	movlw	0
  3576  0005B8  0100               	movlb	0	; () banked
  3577  0005BA  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3578  0005BC  0100               	movlb	0	; () banked
  3579  0005BE  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3580  0005C0  0E00               	movlw	0
  3581  0005C2  0100               	movlb	0	; () banked
  3582  0005C4  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3583  0005C6  0100               	movlb	0	; () banked
  3584  0005C8  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3585  0005CA  0E00               	movlw	0
  3586  0005CC  0100               	movlb	0	; () banked
  3587  0005CE  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3588  0005D0  0100               	movlb	0	; () banked
  3589  0005D2  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  3593  0005D4  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3594  0005D8  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3595  0005DC  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3596  0005E0  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3597  0005E4  0E05               	movlw	5
  3598  0005E6                     u5155:
  3599  0005E6  90D8               	bcf	status,0,c
  3600  0005E8  0100               	movlb	0	; () banked
  3601  0005EA  3773               	rlcf	??_CANSetFilter& (0+255),f,b
  3602  0005EC  3774               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3603  0005EE  3775               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3604  0005F0  3776               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3605  0005F2  2EE8               	decfsz	wreg,f,c
  3606  0005F4  D7F8               	goto	u5155
  3607  0005F6  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3608  0005FA  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3609  0005FE  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3610  000602  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  3614  000606  C078  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3615  00060A                     l4166:
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;inc\CANlib.h: 828: }
  3619                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3620  00060A  0100               	movlb	0	; () banked
  3621  00060C  5177               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3622  00060E  0100               	movlb	0	; () banked
  3623  000610  A4D8               	btfss	status,2,c
  3624  000612  D089               	goto	l4200
  3625                           
  3626                           ; BSR set to: 0
  3627  000614  0EF7               	movlw	247
  3628  000616  0100               	movlb	0	; () banked
  3629  000618  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  3630  00061A  A4D8               	btfss	status,2,c
  3631  00061C  D084               	goto	l4200
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;inc\CANlib.h: 832: {
  3635                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  3636  00061E  010F               	movlb	15	; () banked
  3637  000620  8701               	bsf	1,3,b	;volatile
  3638                           
  3639                           ; BSR set to: 15
  3640                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  3641  000622  0100               	movlb	0	; () banked
  3642  000624  516E               	movf	CANSetFilter@filter& (0+255),w,b
  3643  000626  0100               	movlb	0	; () banked
  3644  000628  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3645  00062A  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3646  00062C  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3647  00062E  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  3651  000630  C078  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  3655  000634  0E00               	movlw	0
  3656  000636  0100               	movlb	0	; () banked
  3657  000638  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3658  00063A  0100               	movlb	0	; () banked
  3659  00063C  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3660  00063E  0EFF               	movlw	255
  3661  000640  0100               	movlb	0	; () banked
  3662  000642  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3663  000644  0100               	movlb	0	; () banked
  3664  000646  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3665  000648  0E00               	movlw	0
  3666  00064A  0100               	movlb	0	; () banked
  3667  00064C  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3668  00064E  0100               	movlb	0	; () banked
  3669  000650  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3670  000652  0E00               	movlw	0
  3671  000654  0100               	movlb	0	; () banked
  3672  000656  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3673  000658  0100               	movlb	0	; () banked
  3674  00065A  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  3678  00065C  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3679  000660  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3680  000664  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3681  000668  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3682  00066C  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  3683  000670  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3684  000674  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3685  000678  0100               	movlb	0	; () banked
  3686  00067A  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  3687  00067C  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3688  000680  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3689  000684  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3690  000688  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  3694  00068C  C078  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3695                           
  3696                           ; BSR set to: 0
  3697                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  3698  000690  0100               	movlb	0	; () banked
  3699  000692  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3700  000694  D003               	goto	l467
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  3704  000696  010F               	movlb	15	; () banked
  3705  000698  8101               	bsf	1,0,b	;volatile
  3706  00069A  D002               	goto	l468
  3707  00069C                     l467:
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;inc\CANlib.h: 844: else
  3711                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  3712  00069C  010F               	movlb	15	; () banked
  3713  00069E  9101               	bcf	1,0,b	;volatile
  3714  0006A0                     l468:
  3715                           
  3716                           ; BSR set to: 15
  3717                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  3718  0006A0  0100               	movlb	0	; () banked
  3719  0006A2  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3720  0006A4  D003               	goto	l469
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  3724  0006A6  010F               	movlb	15	; () banked
  3725  0006A8  8301               	bsf	1,1,b	;volatile
  3726  0006AA  D002               	goto	l470
  3727  0006AC                     l469:
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;inc\CANlib.h: 849: else
  3731                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  3732  0006AC  010F               	movlb	15	; () banked
  3733  0006AE  9301               	bcf	1,1,b	;volatile
  3734  0006B0                     l470:
  3735                           
  3736                           ; BSR set to: 15
  3737                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  3738  0006B0  0100               	movlb	0	; () banked
  3739  0006B2  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3740  0006B4  D003               	goto	l471
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  3744  0006B6  010F               	movlb	15	; () banked
  3745  0006B8  8B01               	bsf	1,5,b	;volatile
  3746  0006BA  D002               	goto	l472
  3747  0006BC                     l471:
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;inc\CANlib.h: 854: else
  3751                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  3752  0006BC  010F               	movlb	15	; () banked
  3753  0006BE  9B01               	bcf	1,5,b	;volatile
  3754  0006C0                     l472:
  3755                           
  3756                           ; BSR set to: 15
  3757                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  3758  0006C0  0100               	movlb	0	; () banked
  3759  0006C2  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3760  0006C4  D003               	goto	l473
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  3764  0006C6  010F               	movlb	15	; () banked
  3765  0006C8  8D01               	bsf	1,6,b	;volatile
  3766  0006CA  D002               	goto	l474
  3767  0006CC                     l473:
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;inc\CANlib.h: 859: else
  3771                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  3772  0006CC  010F               	movlb	15	; () banked
  3773  0006CE  9D01               	bcf	1,6,b	;volatile
  3774  0006D0                     l474:
  3775                           
  3776                           ; BSR set to: 15
  3777                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  3778  0006D0  0100               	movlb	0	; () banked
  3779  0006D2  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3780  0006D4  D003               	goto	l475
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  3784  0006D6  010F               	movlb	15	; () banked
  3785  0006D8  8F01               	bsf	1,7,b	;volatile
  3786  0006DA  D002               	goto	l4194
  3787  0006DC                     l475:
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;inc\CANlib.h: 864: else
  3791                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  3792  0006DC  010F               	movlb	15	; () banked
  3793  0006DE  9F01               	bcf	1,7,b	;volatile
  3794  0006E0                     l4194:
  3795                           
  3796                           ; BSR set to: 15
  3797                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  3798  0006E0  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  3799  0006E4  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3800  0006E8  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3801  0006EC  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3802  0006F0  0E16               	movlw	22
  3803  0006F2  D006               	goto	u5230
  3804  0006F4                     u5235:
  3805  0006F4  0100               	movlb	0	; () banked
  3806  0006F6  90D8               	bcf	status,0,c
  3807  0006F8  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3808  0006FA  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3809  0006FC  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3810  0006FE  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  3811  000700                     u5230:
  3812  000700  2EE8               	decfsz	wreg,f,c
  3813  000702  D7F8               	goto	u5235
  3814  000704  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3815  000708  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3816  00070C  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3817  000710  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  3821  000714  0100               	movlb	0	; () banked
  3822  000716  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  3823  000718  0100               	movlb	0	; () banked
  3824  00071A  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3825  00071C  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3826  00071E  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3827  000720  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  3831  000722  C078  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3832  000726                     l4200:
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;inc\CANlib.h: 870: }
  3836                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  3837  000726  0100               	movlb	0	; () banked
  3838  000728  0577               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3839  00072A  A4D8               	btfss	status,2,c
  3840  00072C  D089               	goto	l4234
  3841                           
  3842                           ; BSR set to: 0
  3843  00072E  0EF7               	movlw	247
  3844  000730  0100               	movlb	0	; () banked
  3845  000732  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  3846  000734  A4D8               	btfss	status,2,c
  3847  000736  D084               	goto	l4234
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;inc\CANlib.h: 873: {
  3851                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  3852  000738  010F               	movlb	15	; () banked
  3853  00073A  8705               	bsf	5,3,b	;volatile
  3854                           
  3855                           ; BSR set to: 15
  3856                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  3857  00073C  0100               	movlb	0	; () banked
  3858  00073E  516E               	movf	CANSetFilter@filter& (0+255),w,b
  3859  000740  0100               	movlb	0	; () banked
  3860  000742  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3861  000744  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3862  000746  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3863  000748  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  3867  00074A  C078  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  3871  00074E  0E00               	movlw	0
  3872  000750  0100               	movlb	0	; () banked
  3873  000752  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  3874  000754  0100               	movlb	0	; () banked
  3875  000756  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  3876  000758  0EFF               	movlw	255
  3877  00075A  0100               	movlb	0	; () banked
  3878  00075C  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3879  00075E  0100               	movlb	0	; () banked
  3880  000760  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3881  000762  0E00               	movlw	0
  3882  000764  0100               	movlb	0	; () banked
  3883  000766  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3884  000768  0100               	movlb	0	; () banked
  3885  00076A  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3886  00076C  0E00               	movlw	0
  3887  00076E  0100               	movlb	0	; () banked
  3888  000770  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3889  000772  0100               	movlb	0	; () banked
  3890  000774  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  3894  000776  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  3895  00077A  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3896  00077E  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3897  000782  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3898  000786  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  3899  00078A  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3900  00078E  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3901  000792  0100               	movlb	0	; () banked
  3902  000794  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  3903  000796  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  3904  00079A  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3905  00079E  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3906  0007A2  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  3910  0007A6  C078  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  3914  0007AA  0100               	movlb	0	; () banked
  3915  0007AC  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  3916  0007AE  D003               	goto	l478
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  3920  0007B0  010F               	movlb	15	; () banked
  3921  0007B2  8105               	bsf	5,0,b	;volatile
  3922  0007B4  D002               	goto	l479
  3923  0007B6                     l478:
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;inc\CANlib.h: 885: else
  3927                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  3928  0007B6  010F               	movlb	15	; () banked
  3929  0007B8  9105               	bcf	5,0,b	;volatile
  3930  0007BA                     l479:
  3931                           
  3932                           ; BSR set to: 15
  3933                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  3934  0007BA  0100               	movlb	0	; () banked
  3935  0007BC  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  3936  0007BE  D003               	goto	l480
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  3940  0007C0  010F               	movlb	15	; () banked
  3941  0007C2  8305               	bsf	5,1,b	;volatile
  3942  0007C4  D002               	goto	l481
  3943  0007C6                     l480:
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;inc\CANlib.h: 890: else
  3947                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  3948  0007C6  010F               	movlb	15	; () banked
  3949  0007C8  9305               	bcf	5,1,b	;volatile
  3950  0007CA                     l481:
  3951                           
  3952                           ; BSR set to: 15
  3953                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  3954  0007CA  0100               	movlb	0	; () banked
  3955  0007CC  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  3956  0007CE  D003               	goto	l482
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  3960  0007D0  010F               	movlb	15	; () banked
  3961  0007D2  8B05               	bsf	5,5,b	;volatile
  3962  0007D4  D002               	goto	l483
  3963  0007D6                     l482:
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;inc\CANlib.h: 895: else
  3967                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  3968  0007D6  010F               	movlb	15	; () banked
  3969  0007D8  9B05               	bcf	5,5,b	;volatile
  3970  0007DA                     l483:
  3971                           
  3972                           ; BSR set to: 15
  3973                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  3974  0007DA  0100               	movlb	0	; () banked
  3975  0007DC  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  3976  0007DE  D003               	goto	l484
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  3980  0007E0  010F               	movlb	15	; () banked
  3981  0007E2  8D05               	bsf	5,6,b	;volatile
  3982  0007E4  D002               	goto	l485
  3983  0007E6                     l484:
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;inc\CANlib.h: 900: else
  3987                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  3988  0007E6  010F               	movlb	15	; () banked
  3989  0007E8  9D05               	bcf	5,6,b	;volatile
  3990  0007EA                     l485:
  3991                           
  3992                           ; BSR set to: 15
  3993                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  3994  0007EA  0100               	movlb	0	; () banked
  3995  0007EC  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  3996  0007EE  D003               	goto	l486
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4000  0007F0  010F               	movlb	15	; () banked
  4001  0007F2  8F05               	bsf	5,7,b	;volatile
  4002  0007F4  D002               	goto	l4228
  4003  0007F6                     l486:
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;inc\CANlib.h: 905: else
  4007                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4008  0007F6  010F               	movlb	15	; () banked
  4009  0007F8  9F05               	bcf	5,7,b	;volatile
  4010  0007FA                     l4228:
  4011                           
  4012                           ; BSR set to: 15
  4013                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  4014  0007FA  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4015  0007FE  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4016  000802  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4017  000806  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4018  00080A  0E16               	movlw	22
  4019  00080C  D006               	goto	u5310
  4020  00080E                     u5315:
  4021  00080E  0100               	movlb	0	; () banked
  4022  000810  90D8               	bcf	status,0,c
  4023  000812  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4024  000814  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4025  000816  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4026  000818  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4027  00081A                     u5310:
  4028  00081A  2EE8               	decfsz	wreg,f,c
  4029  00081C  D7F8               	goto	u5315
  4030  00081E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4031  000822  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4032  000826  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4033  00082A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  4037  00082E  0100               	movlb	0	; () banked
  4038  000830  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4039  000832  0100               	movlb	0	; () banked
  4040  000834  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4041  000836  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4042  000838  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4043  00083A  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4047  00083C  C078  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4048  000840                     l4234:
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;inc\CANlib.h: 911: }
  4052                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4053  000840  0E02               	movlw	2
  4054  000842  0100               	movlb	0	; () banked
  4055  000844  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4056  000846  A4D8               	btfss	status,2,c
  4057  000848  D089               	goto	l4268
  4058                           
  4059                           ; BSR set to: 0
  4060  00084A  0EF7               	movlw	247
  4061  00084C  0100               	movlb	0	; () banked
  4062  00084E  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4063  000850  A4D8               	btfss	status,2,c
  4064  000852  D084               	goto	l4268
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;inc\CANlib.h: 915: {
  4068                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4069  000854  010F               	movlb	15	; () banked
  4070  000856  8709               	bsf	9,3,b	;volatile
  4071                           
  4072                           ; BSR set to: 15
  4073                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  4074  000858  0100               	movlb	0	; () banked
  4075  00085A  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4076  00085C  0100               	movlb	0	; () banked
  4077  00085E  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4078  000860  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4079  000862  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4080  000864  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4084  000866  C078  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  4088  00086A  0E00               	movlw	0
  4089  00086C  0100               	movlb	0	; () banked
  4090  00086E  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4091  000870  0100               	movlb	0	; () banked
  4092  000872  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4093  000874  0EFF               	movlw	255
  4094  000876  0100               	movlb	0	; () banked
  4095  000878  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4096  00087A  0100               	movlb	0	; () banked
  4097  00087C  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4098  00087E  0E00               	movlw	0
  4099  000880  0100               	movlb	0	; () banked
  4100  000882  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4101  000884  0100               	movlb	0	; () banked
  4102  000886  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4103  000888  0E00               	movlw	0
  4104  00088A  0100               	movlb	0	; () banked
  4105  00088C  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4106  00088E  0100               	movlb	0	; () banked
  4107  000890  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  4111  000892  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4112  000896  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4113  00089A  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4114  00089E  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4115  0008A2  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4116  0008A6  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4117  0008AA  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4118  0008AE  0100               	movlb	0	; () banked
  4119  0008B0  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4120  0008B2  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4121  0008B6  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4122  0008BA  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4123  0008BE  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4127  0008C2  C078  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  4131  0008C6  0100               	movlb	0	; () banked
  4132  0008C8  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4133  0008CA  D003               	goto	l489
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4137  0008CC  010F               	movlb	15	; () banked
  4138  0008CE  8109               	bsf	9,0,b	;volatile
  4139  0008D0  D002               	goto	l490
  4140  0008D2                     l489:
  4141                           
  4142                           ; BSR set to: 0
  4143                           ;inc\CANlib.h: 927: else
  4144                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4145  0008D2  010F               	movlb	15	; () banked
  4146  0008D4  9109               	bcf	9,0,b	;volatile
  4147  0008D6                     l490:
  4148                           
  4149                           ; BSR set to: 15
  4150                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  4151  0008D6  0100               	movlb	0	; () banked
  4152  0008D8  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4153  0008DA  D003               	goto	l491
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4157  0008DC  010F               	movlb	15	; () banked
  4158  0008DE  8309               	bsf	9,1,b	;volatile
  4159  0008E0  D002               	goto	l492
  4160  0008E2                     l491:
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;inc\CANlib.h: 932: else
  4164                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4165  0008E2  010F               	movlb	15	; () banked
  4166  0008E4  9309               	bcf	9,1,b	;volatile
  4167  0008E6                     l492:
  4168                           
  4169                           ; BSR set to: 15
  4170                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  4171  0008E6  0100               	movlb	0	; () banked
  4172  0008E8  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4173  0008EA  D003               	goto	l493
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4177  0008EC  010F               	movlb	15	; () banked
  4178  0008EE  8B09               	bsf	9,5,b	;volatile
  4179  0008F0  D002               	goto	l494
  4180  0008F2                     l493:
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;inc\CANlib.h: 937: else
  4184                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4185  0008F2  010F               	movlb	15	; () banked
  4186  0008F4  9B09               	bcf	9,5,b	;volatile
  4187  0008F6                     l494:
  4188                           
  4189                           ; BSR set to: 15
  4190                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  4191  0008F6  0100               	movlb	0	; () banked
  4192  0008F8  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4193  0008FA  D003               	goto	l495
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4197  0008FC  010F               	movlb	15	; () banked
  4198  0008FE  8D09               	bsf	9,6,b	;volatile
  4199  000900  D002               	goto	l496
  4200  000902                     l495:
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;inc\CANlib.h: 942: else
  4204                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4205  000902  010F               	movlb	15	; () banked
  4206  000904  9D09               	bcf	9,6,b	;volatile
  4207  000906                     l496:
  4208                           
  4209                           ; BSR set to: 15
  4210                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  4211  000906  0100               	movlb	0	; () banked
  4212  000908  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4213  00090A  D003               	goto	l497
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4217  00090C  010F               	movlb	15	; () banked
  4218  00090E  8F09               	bsf	9,7,b	;volatile
  4219  000910  D002               	goto	l4262
  4220  000912                     l497:
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;inc\CANlib.h: 947: else
  4224                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4225  000912  010F               	movlb	15	; () banked
  4226  000914  9F09               	bcf	9,7,b	;volatile
  4227  000916                     l4262:
  4228                           
  4229                           ; BSR set to: 15
  4230                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  4231  000916  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4232  00091A  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4233  00091E  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4234  000922  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4235  000926  0E16               	movlw	22
  4236  000928  D006               	goto	u5390
  4237  00092A                     u5395:
  4238  00092A  0100               	movlb	0	; () banked
  4239  00092C  90D8               	bcf	status,0,c
  4240  00092E  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4241  000930  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4242  000932  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4243  000934  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4244  000936                     u5390:
  4245  000936  2EE8               	decfsz	wreg,f,c
  4246  000938  D7F8               	goto	u5395
  4247  00093A  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4248  00093E  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4249  000942  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4250  000946  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  4254  00094A  0100               	movlb	0	; () banked
  4255  00094C  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4256  00094E  0100               	movlb	0	; () banked
  4257  000950  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4258  000952  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4259  000954  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4260  000956  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4264  000958  C078  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4265  00095C                     l4268:
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;inc\CANlib.h: 953: }
  4269                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4270  00095C  0E03               	movlw	3
  4271  00095E  0100               	movlb	0	; () banked
  4272  000960  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4273  000962  A4D8               	btfss	status,2,c
  4274  000964  D089               	goto	l4302
  4275                           
  4276                           ; BSR set to: 0
  4277  000966  0EF7               	movlw	247
  4278  000968  0100               	movlb	0	; () banked
  4279  00096A  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4280  00096C  A4D8               	btfss	status,2,c
  4281  00096E  D084               	goto	l4302
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;inc\CANlib.h: 956: {
  4285                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  4286  000970  010F               	movlb	15	; () banked
  4287  000972  870D               	bsf	13,3,b	;volatile
  4288                           
  4289                           ; BSR set to: 15
  4290                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  4291  000974  0100               	movlb	0	; () banked
  4292  000976  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4293  000978  0100               	movlb	0	; () banked
  4294  00097A  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4295  00097C  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4296  00097E  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4297  000980  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  4301  000982  C078  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  4305  000986  0E00               	movlw	0
  4306  000988  0100               	movlb	0	; () banked
  4307  00098A  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4308  00098C  0100               	movlb	0	; () banked
  4309  00098E  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4310  000990  0EFF               	movlw	255
  4311  000992  0100               	movlb	0	; () banked
  4312  000994  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4313  000996  0100               	movlb	0	; () banked
  4314  000998  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4315  00099A  0E00               	movlw	0
  4316  00099C  0100               	movlb	0	; () banked
  4317  00099E  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4318  0009A0  0100               	movlb	0	; () banked
  4319  0009A2  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4320  0009A4  0E00               	movlw	0
  4321  0009A6  0100               	movlb	0	; () banked
  4322  0009A8  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4323  0009AA  0100               	movlb	0	; () banked
  4324  0009AC  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  4328  0009AE  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4329  0009B2  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4330  0009B6  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4331  0009BA  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4332  0009BE  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4333  0009C2  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4334  0009C6  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4335  0009CA  0100               	movlb	0	; () banked
  4336  0009CC  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4337  0009CE  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4338  0009D2  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4339  0009D6  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4340  0009DA  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  4344  0009DE  C078  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  4348  0009E2  0100               	movlb	0	; () banked
  4349  0009E4  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4350  0009E6  D003               	goto	l500
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  4354  0009E8  010F               	movlb	15	; () banked
  4355  0009EA  810D               	bsf	13,0,b	;volatile
  4356  0009EC  D002               	goto	l501
  4357  0009EE                     l500:
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;inc\CANlib.h: 968: else
  4361                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  4362  0009EE  010F               	movlb	15	; () banked
  4363  0009F0  910D               	bcf	13,0,b	;volatile
  4364  0009F2                     l501:
  4365                           
  4366                           ; BSR set to: 15
  4367                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  4368  0009F2  0100               	movlb	0	; () banked
  4369  0009F4  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4370  0009F6  D003               	goto	l502
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  4374  0009F8  010F               	movlb	15	; () banked
  4375  0009FA  830D               	bsf	13,1,b	;volatile
  4376  0009FC  D002               	goto	l503
  4377  0009FE                     l502:
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;inc\CANlib.h: 973: else
  4381                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  4382  0009FE  010F               	movlb	15	; () banked
  4383  000A00  930D               	bcf	13,1,b	;volatile
  4384  000A02                     l503:
  4385                           
  4386                           ; BSR set to: 15
  4387                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  4388  000A02  0100               	movlb	0	; () banked
  4389  000A04  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4390  000A06  D003               	goto	l504
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  4394  000A08  010F               	movlb	15	; () banked
  4395  000A0A  8B0D               	bsf	13,5,b	;volatile
  4396  000A0C  D002               	goto	l505
  4397  000A0E                     l504:
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;inc\CANlib.h: 978: else
  4401                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  4402  000A0E  010F               	movlb	15	; () banked
  4403  000A10  9B0D               	bcf	13,5,b	;volatile
  4404  000A12                     l505:
  4405                           
  4406                           ; BSR set to: 15
  4407                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  4408  000A12  0100               	movlb	0	; () banked
  4409  000A14  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4410  000A16  D003               	goto	l506
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  4414  000A18  010F               	movlb	15	; () banked
  4415  000A1A  8D0D               	bsf	13,6,b	;volatile
  4416  000A1C  D002               	goto	l507
  4417  000A1E                     l506:
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;inc\CANlib.h: 983: else
  4421                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  4422  000A1E  010F               	movlb	15	; () banked
  4423  000A20  9D0D               	bcf	13,6,b	;volatile
  4424  000A22                     l507:
  4425                           
  4426                           ; BSR set to: 15
  4427                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  4428  000A22  0100               	movlb	0	; () banked
  4429  000A24  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4430  000A26  D003               	goto	l508
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  4434  000A28  010F               	movlb	15	; () banked
  4435  000A2A  8F0D               	bsf	13,7,b	;volatile
  4436  000A2C  D002               	goto	l4296
  4437  000A2E                     l508:
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;inc\CANlib.h: 988: else
  4441                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  4442  000A2E  010F               	movlb	15	; () banked
  4443  000A30  9F0D               	bcf	13,7,b	;volatile
  4444  000A32                     l4296:
  4445                           
  4446                           ; BSR set to: 15
  4447                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  4448  000A32  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4449  000A36  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4450  000A3A  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4451  000A3E  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4452  000A42  0E16               	movlw	22
  4453  000A44  D006               	goto	u5470
  4454  000A46                     u5475:
  4455  000A46  0100               	movlb	0	; () banked
  4456  000A48  90D8               	bcf	status,0,c
  4457  000A4A  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4458  000A4C  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4459  000A4E  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4460  000A50  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4461  000A52                     u5470:
  4462  000A52  2EE8               	decfsz	wreg,f,c
  4463  000A54  D7F8               	goto	u5475
  4464  000A56  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4465  000A5A  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4466  000A5E  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4467  000A62  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  4471  000A66  0100               	movlb	0	; () banked
  4472  000A68  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4473  000A6A  0100               	movlb	0	; () banked
  4474  000A6C  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4475  000A6E  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4476  000A70  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4477  000A72  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  4481  000A74  C078  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4482  000A78                     l4302:
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;inc\CANlib.h: 994: }
  4486                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4487  000A78  0E04               	movlw	4
  4488  000A7A  0100               	movlb	0	; () banked
  4489  000A7C  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4490  000A7E  A4D8               	btfss	status,2,c
  4491  000A80  D089               	goto	l4336
  4492                           
  4493                           ; BSR set to: 0
  4494  000A82  0EF7               	movlw	247
  4495  000A84  0100               	movlb	0	; () banked
  4496  000A86  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4497  000A88  A4D8               	btfss	status,2,c
  4498  000A8A  D084               	goto	l4336
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;inc\CANlib.h: 997: {
  4502                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  4503  000A8C  010F               	movlb	15	; () banked
  4504  000A8E  8711               	bsf	17,3,b	;volatile
  4505                           
  4506                           ; BSR set to: 15
  4507                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  4508  000A90  0100               	movlb	0	; () banked
  4509  000A92  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4510  000A94  0100               	movlb	0	; () banked
  4511  000A96  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4512  000A98  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4513  000A9A  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4514  000A9C  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  4518  000A9E  C078  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  4522  000AA2  0E00               	movlw	0
  4523  000AA4  0100               	movlb	0	; () banked
  4524  000AA6  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4525  000AA8  0100               	movlb	0	; () banked
  4526  000AAA  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4527  000AAC  0EFF               	movlw	255
  4528  000AAE  0100               	movlb	0	; () banked
  4529  000AB0  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4530  000AB2  0100               	movlb	0	; () banked
  4531  000AB4  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4532  000AB6  0E00               	movlw	0
  4533  000AB8  0100               	movlb	0	; () banked
  4534  000ABA  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4535  000ABC  0100               	movlb	0	; () banked
  4536  000ABE  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4537  000AC0  0E00               	movlw	0
  4538  000AC2  0100               	movlb	0	; () banked
  4539  000AC4  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4540  000AC6  0100               	movlb	0	; () banked
  4541  000AC8  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  4545  000ACA  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4546  000ACE  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4547  000AD2  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4548  000AD6  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4549  000ADA  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4550  000ADE  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4551  000AE2  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4552  000AE6  0100               	movlb	0	; () banked
  4553  000AE8  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4554  000AEA  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4555  000AEE  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4556  000AF2  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4557  000AF6  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  4561  000AFA  C078  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  4565  000AFE  0100               	movlb	0	; () banked
  4566  000B00  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4567  000B02  D003               	goto	l511
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  4571  000B04  010F               	movlb	15	; () banked
  4572  000B06  8111               	bsf	17,0,b	;volatile
  4573  000B08  D002               	goto	l512
  4574  000B0A                     l511:
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;inc\CANlib.h: 1009: else
  4578                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  4579  000B0A  010F               	movlb	15	; () banked
  4580  000B0C  9111               	bcf	17,0,b	;volatile
  4581  000B0E                     l512:
  4582                           
  4583                           ; BSR set to: 15
  4584                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  4585  000B0E  0100               	movlb	0	; () banked
  4586  000B10  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4587  000B12  D003               	goto	l513
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  4591  000B14  010F               	movlb	15	; () banked
  4592  000B16  8311               	bsf	17,1,b	;volatile
  4593  000B18  D002               	goto	l514
  4594  000B1A                     l513:
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;inc\CANlib.h: 1014: else
  4598                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  4599  000B1A  010F               	movlb	15	; () banked
  4600  000B1C  9311               	bcf	17,1,b	;volatile
  4601  000B1E                     l514:
  4602                           
  4603                           ; BSR set to: 15
  4604                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  4605  000B1E  0100               	movlb	0	; () banked
  4606  000B20  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4607  000B22  D003               	goto	l515
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  4611  000B24  010F               	movlb	15	; () banked
  4612  000B26  8B11               	bsf	17,5,b	;volatile
  4613  000B28  D002               	goto	l516
  4614  000B2A                     l515:
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;inc\CANlib.h: 1019: else
  4618                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  4619  000B2A  010F               	movlb	15	; () banked
  4620  000B2C  9B11               	bcf	17,5,b	;volatile
  4621  000B2E                     l516:
  4622                           
  4623                           ; BSR set to: 15
  4624                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  4625  000B2E  0100               	movlb	0	; () banked
  4626  000B30  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4627  000B32  D003               	goto	l517
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  4631  000B34  010F               	movlb	15	; () banked
  4632  000B36  8D11               	bsf	17,6,b	;volatile
  4633  000B38  D002               	goto	l518
  4634  000B3A                     l517:
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;inc\CANlib.h: 1024: else
  4638                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  4639  000B3A  010F               	movlb	15	; () banked
  4640  000B3C  9D11               	bcf	17,6,b	;volatile
  4641  000B3E                     l518:
  4642                           
  4643                           ; BSR set to: 15
  4644                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  4645  000B3E  0100               	movlb	0	; () banked
  4646  000B40  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4647  000B42  D003               	goto	l519
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  4651  000B44  010F               	movlb	15	; () banked
  4652  000B46  8F11               	bsf	17,7,b	;volatile
  4653  000B48  D002               	goto	l4330
  4654  000B4A                     l519:
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;inc\CANlib.h: 1029: else
  4658                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  4659  000B4A  010F               	movlb	15	; () banked
  4660  000B4C  9F11               	bcf	17,7,b	;volatile
  4661  000B4E                     l4330:
  4662                           
  4663                           ; BSR set to: 15
  4664                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  4665  000B4E  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4666  000B52  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4667  000B56  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4668  000B5A  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4669  000B5E  0E16               	movlw	22
  4670  000B60  D006               	goto	u5550
  4671  000B62                     u5555:
  4672  000B62  0100               	movlb	0	; () banked
  4673  000B64  90D8               	bcf	status,0,c
  4674  000B66  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4675  000B68  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4676  000B6A  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4677  000B6C  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4678  000B6E                     u5550:
  4679  000B6E  2EE8               	decfsz	wreg,f,c
  4680  000B70  D7F8               	goto	u5555
  4681  000B72  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4682  000B76  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4683  000B7A  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4684  000B7E  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  4688  000B82  0100               	movlb	0	; () banked
  4689  000B84  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4690  000B86  0100               	movlb	0	; () banked
  4691  000B88  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4692  000B8A  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4693  000B8C  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4694  000B8E  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  4698  000B90  C078  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4699  000B94                     l4336:
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;inc\CANlib.h: 1035: }
  4703                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4704  000B94  0E05               	movlw	5
  4705  000B96  0100               	movlb	0	; () banked
  4706  000B98  1977               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4707  000B9A  A4D8               	btfss	status,2,c
  4708  000B9C  0012               	return	
  4709                           
  4710                           ; BSR set to: 0
  4711  000B9E  0EF7               	movlw	247
  4712  000BA0  0100               	movlb	0	; () banked
  4713  000BA2  1972               	xorwf	CANSetFilter@type& (0+255),w,b
  4714  000BA4  A4D8               	btfss	status,2,c
  4715  000BA6  0012               	return	
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;inc\CANlib.h: 1038: {
  4719                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  4720  000BA8  010F               	movlb	15	; () banked
  4721  000BAA  8715               	bsf	21,3,b	;volatile
  4722                           
  4723                           ; BSR set to: 15
  4724                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  4725  000BAC  0100               	movlb	0	; () banked
  4726  000BAE  516E               	movf	CANSetFilter@filter& (0+255),w,b
  4727  000BB0  0100               	movlb	0	; () banked
  4728  000BB2  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4729  000BB4  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4730  000BB6  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4731  000BB8  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4732                           
  4733                           ; BSR set to: 0
  4734                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  4735  000BBA  C078  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  4739  000BBE  0E00               	movlw	0
  4740  000BC0  0100               	movlb	0	; () banked
  4741  000BC2  156E               	andwf	CANSetFilter@filter& (0+255),w,b
  4742  000BC4  0100               	movlb	0	; () banked
  4743  000BC6  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4744  000BC8  0EFF               	movlw	255
  4745  000BCA  0100               	movlb	0	; () banked
  4746  000BCC  156F               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4747  000BCE  0100               	movlb	0	; () banked
  4748  000BD0  6F79               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4749  000BD2  0E00               	movlw	0
  4750  000BD4  0100               	movlb	0	; () banked
  4751  000BD6  1570               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4752  000BD8  0100               	movlb	0	; () banked
  4753  000BDA  6F7A               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4754  000BDC  0E00               	movlw	0
  4755  000BDE  0100               	movlb	0	; () banked
  4756  000BE0  1571               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4757  000BE2  0100               	movlb	0	; () banked
  4758  000BE4  6F7B               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  4762  000BE6  C078  F073         	movff	CANSetFilter@tamp,??_CANSetFilter
  4763  000BEA  C079  F074         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4764  000BEE  C07A  F075         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4765  000BF2  C07B  F076         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4766  000BF6  C074  F073         	movff	??_CANSetFilter+1,??_CANSetFilter
  4767  000BFA  C075  F074         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4768  000BFE  C076  F075         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4769  000C02  0100               	movlb	0	; () banked
  4770  000C04  6B76               	clrf	(??_CANSetFilter+3)& (0+255),b
  4771  000C06  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4772  000C0A  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4773  000C0E  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4774  000C12  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  4778  000C16  C078  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  4782  000C1A  0100               	movlb	0	; () banked
  4783  000C1C  A170               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4784  000C1E  D003               	goto	l522
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  4788  000C20  010F               	movlb	15	; () banked
  4789  000C22  8115               	bsf	21,0,b	;volatile
  4790  000C24  D002               	goto	l523
  4791  000C26                     l522:
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;inc\CANlib.h: 1050: else
  4795                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  4796  000C26  010F               	movlb	15	; () banked
  4797  000C28  9115               	bcf	21,0,b	;volatile
  4798  000C2A                     l523:
  4799                           
  4800                           ; BSR set to: 15
  4801                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  4802  000C2A  0100               	movlb	0	; () banked
  4803  000C2C  A370               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4804  000C2E  D003               	goto	l524
  4805                           
  4806                           ; BSR set to: 0
  4807                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  4808  000C30  010F               	movlb	15	; () banked
  4809  000C32  8315               	bsf	21,1,b	;volatile
  4810  000C34  D002               	goto	l525
  4811  000C36                     l524:
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;inc\CANlib.h: 1055: else
  4815                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  4816  000C36  010F               	movlb	15	; () banked
  4817  000C38  9315               	bcf	21,1,b	;volatile
  4818  000C3A                     l525:
  4819                           
  4820                           ; BSR set to: 15
  4821                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  4822  000C3A  0100               	movlb	0	; () banked
  4823  000C3C  A570               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4824  000C3E  D003               	goto	l526
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  4828  000C40  010F               	movlb	15	; () banked
  4829  000C42  8B15               	bsf	21,5,b	;volatile
  4830  000C44  D002               	goto	l527
  4831  000C46                     l526:
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;inc\CANlib.h: 1060: else
  4835                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  4836  000C46  010F               	movlb	15	; () banked
  4837  000C48  9B15               	bcf	21,5,b	;volatile
  4838  000C4A                     l527:
  4839                           
  4840                           ; BSR set to: 15
  4841                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  4842  000C4A  0100               	movlb	0	; () banked
  4843  000C4C  A770               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4844  000C4E  D003               	goto	l528
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  4848  000C50  010F               	movlb	15	; () banked
  4849  000C52  8D15               	bsf	21,6,b	;volatile
  4850  000C54  D002               	goto	l529
  4851  000C56                     l528:
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;inc\CANlib.h: 1065: else
  4855                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  4856  000C56  010F               	movlb	15	; () banked
  4857  000C58  9D15               	bcf	21,6,b	;volatile
  4858  000C5A                     l529:
  4859                           
  4860                           ; BSR set to: 15
  4861                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  4862  000C5A  0100               	movlb	0	; () banked
  4863  000C5C  A970               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4864  000C5E  D003               	goto	l530
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  4868  000C60  010F               	movlb	15	; () banked
  4869  000C62  8F15               	bsf	21,7,b	;volatile
  4870  000C64  D002               	goto	l4364
  4871  000C66                     l530:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;inc\CANlib.h: 1070: else
  4875                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  4876  000C66  010F               	movlb	15	; () banked
  4877  000C68  9F15               	bcf	21,7,b	;volatile
  4878  000C6A                     l4364:
  4879                           
  4880                           ; BSR set to: 15
  4881                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  4882  000C6A  C06E  F073         	movff	CANSetFilter@filter,??_CANSetFilter
  4883  000C6E  C06F  F074         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4884  000C72  C070  F075         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4885  000C76  C071  F076         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4886  000C7A  0E16               	movlw	22
  4887  000C7C  D006               	goto	u5630
  4888  000C7E                     u5635:
  4889  000C7E  0100               	movlb	0	; () banked
  4890  000C80  90D8               	bcf	status,0,c
  4891  000C82  3376               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4892  000C84  3375               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4893  000C86  3374               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4894  000C88  3373               	rrcf	??_CANSetFilter& (0+255),f,b
  4895  000C8A                     u5630:
  4896  000C8A  2EE8               	decfsz	wreg,f,c
  4897  000C8C  D7F8               	goto	u5635
  4898  000C8E  C073  F078         	movff	??_CANSetFilter,CANSetFilter@tamp
  4899  000C92  C074  F079         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4900  000C96  C075  F07A         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4901  000C9A  C076  F07B         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  4905  000C9E  0100               	movlb	0	; () banked
  4906  000CA0  5178               	movf	CANSetFilter@tamp& (0+255),w,b
  4907  000CA2  0100               	movlb	0	; () banked
  4908  000CA4  6F78               	movwf	CANSetFilter@tamp& (0+255),b
  4909  000CA6  6B79               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4910  000CA8  6B7A               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4911  000CAA  6B7B               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  4915  000CAC  C078  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4916  000CB0  0012               	return	
  4917  000CB2                     __end_of_CANSetFilter:
  4918                           	opt stack 0
  4919                           tblptru	equ	0xFF8
  4920                           tblptrh	equ	0xFF7
  4921                           tblptrl	equ	0xFF6
  4922                           tablat	equ	0xFF5
  4923                           intcon	equ	0xFF2
  4924                           intcon2	equ	0xFF1
  4925                           postinc0	equ	0xFEE
  4926                           wreg	equ	0xFE8
  4927                           status	equ	0xFD8
  4928                           
  4929 ;; *************** function _CANOperationMode *****************
  4930 ;; Defined at:
  4931 ;;		line 206 in file "H:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  mode            1    wreg     enum E16838
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;  mode            1   14[BANK0 ] enum E16838
  4936 ;; Return value:  Size  Location     Type
  4937 ;;		None               void
  4938 ;; Registers used:
  4939 ;;		wreg, status,2, status,0
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4945 ;;      Params:         0       0       0       0
  4946 ;;      Locals:         0       1       0       0
  4947 ;;      Temps:          0       0       0       0
  4948 ;;      Totals:         0       1       0       0
  4949 ;;Total ram usage:        1 bytes
  4950 ;; Hardware stack levels used:    1
  4951 ;; Hardware stack levels required when called:    3
  4952 ;; This function calls:
  4953 ;;		Nothing
  4954 ;; This function is called by:
  4955 ;;		_CANInitialize
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text7
  4960  0027CA                     __ptext7:
  4961                           	opt stack 0
  4962  0027CA                     _CANOperationMode:
  4963                           	opt stack 25
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;incstack = 0
  4967                           ;CANOperationMode@mode stored from wreg
  4968  0027CA  0100               	movlb	0	; () banked
  4969  0027CC  6F6E               	movwf	CANOperationMode@mode& (0+255),b
  4970                           
  4971                           ;inc\CANlib.h: 208: CANCON = mode;
  4972  0027CE  C06E  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  4973  0027D2                     l3960:
  4974  0027D2  506E               	movf	3950,w,c	;volatile
  4975  0027D4  0BE0               	andlw	224
  4976  0027D6  0100               	movlb	0	; () banked
  4977  0027D8  196E               	xorwf	CANOperationMode@mode& (0+255),w,b
  4978  0027DA  B4D8               	btfsc	status,2,c
  4979  0027DC  0012               	return	
  4980  0027DE  D7F9               	goto	l3960
  4981  0027E0                     __end_of_CANOperationMode:
  4982                           	opt stack 0
  4983                           tblptru	equ	0xFF8
  4984                           tblptrh	equ	0xFF7
  4985                           tblptrl	equ	0xFF6
  4986                           tablat	equ	0xFF5
  4987                           intcon	equ	0xFF2
  4988                           intcon2	equ	0xFF1
  4989                           postinc0	equ	0xFEE
  4990                           wreg	equ	0xFE8
  4991                           status	equ	0xFD8
  4992                           
  4993 ;; *************** function _battery_measure *****************
  4994 ;; Defined at:
  4995 ;;		line 249 in file "motore.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;		None               void
  5002 ;; Registers used:
  5003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5009 ;;      Params:         0       0       0       0
  5010 ;;      Locals:         0       0       0       0
  5011 ;;      Temps:          0       0       0       0
  5012 ;;      Totals:         0       0       0       0
  5013 ;;Total ram usage:        0 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; Hardware stack levels required when called:    4
  5016 ;; This function calls:
  5017 ;;		_CANisTxReady
  5018 ;;		_CANsendMessage
  5019 ;;		___awdiv
  5020 ;;		___wmul
  5021 ;; This function is called by:
  5022 ;;		_main
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text8
  5027  00249A                     __ptext8:
  5028                           	opt stack 0
  5029  00249A                     _battery_measure:
  5030                           	opt stack 26
  5031                           
  5032                           ;motore.c: 250: ADCON0bits.GO = 1;
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;incstack = 0
  5036  00249A  82C2               	bsf	4034,1,c	;volatile
  5037  00249C                     l715:
  5038  00249C  B2C2               	btfsc	4034,1,c	;volatile
  5039  00249E  D7FE               	goto	l715
  5040                           
  5041                           ;motore.c: 252: vBatt = ADRESH;
  5042  0024A0  CFC4 F0AD          	movff	4036,_vBatt	;volatile
  5043  0024A4  0100               	movlb	0	; () banked
  5044  0024A6  6BAE               	clrf	(_vBatt+1)& (0+255),b
  5045                           
  5046                           ; BSR set to: 0
  5047                           ;motore.c: 253: vBatt = (vBatt * 14) / 235;
  5048  0024A8  C0AD  F076         	movff	_vBatt,___wmul@multiplier
  5049  0024AC  C0AE  F077         	movff	_vBatt+1,___wmul@multiplier+1
  5050  0024B0  0E00               	movlw	0
  5051  0024B2  0100               	movlb	0	; () banked
  5052  0024B4  6F79               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5053  0024B6  0E0E               	movlw	14
  5054  0024B8  6F78               	movwf	___wmul@multiplicand& (0+255),b
  5055  0024BA  EC91  F013         	call	___wmul	;wreg free
  5056  0024BE  C076  F06E         	movff	?___wmul,___awdiv@dividend
  5057  0024C2  C077  F06F         	movff	?___wmul+1,___awdiv@dividend+1
  5058  0024C6  0E00               	movlw	0
  5059  0024C8  0100               	movlb	0	; () banked
  5060  0024CA  6F71               	movwf	(___awdiv@divisor+1)& (0+255),b
  5061  0024CC  0EEB               	movlw	235
  5062  0024CE  6F70               	movwf	___awdiv@divisor& (0+255),b
  5063  0024D0  ECA1  F011         	call	___awdiv	;wreg free
  5064  0024D4  C06E  F0AD         	movff	?___awdiv,_vBatt
  5065  0024D8  C06F  F0AE         	movff	?___awdiv+1,_vBatt+1
  5066                           
  5067                           ;motore.c: 254: if (vBatt < 10) {
  5068  0024DC  0100               	movlb	0	; () banked
  5069  0024DE  BFAE               	btfsc	(_vBatt+1)& (0+255),7,b
  5070  0024E0  D008               	goto	l4882
  5071  0024E2  0100               	movlb	0	; () banked
  5072  0024E4  51AE               	movf	(_vBatt+1)& (0+255),w,b
  5073  0024E6  E122               	bnz	l722
  5074  0024E8  0E0A               	movlw	10
  5075  0024EA  0100               	movlb	0	; () banked
  5076  0024EC  5DAD               	subwf	_vBatt& (0+255),w,b
  5077  0024EE  B0D8               	btfsc	status,0,c
  5078  0024F0  0012               	return	
  5079  0024F2                     l4882:
  5080  0024F2  ECC2  F013         	call	_CANisTxReady	;wreg free
  5081  0024F6  0900               	iorlw	0
  5082  0024F8  B4D8               	btfsc	status,2,c
  5083  0024FA  D7FB               	goto	l4882
  5084                           
  5085                           ;motore.c: 257: CANsendMessage(0b00000000000000000000000000001, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5086  0024FC  0E01               	movlw	1
  5087  0024FE  0100               	movlb	0	; () banked
  5088  002500  6F6E               	movwf	CANsendMessage@identifier& (0+255),b
  5089  002502  0E00               	movlw	0
  5090  002504  6F6F               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5091  002506  0E00               	movlw	0
  5092  002508  6F70               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5093  00250A  0E00               	movlw	0
  5094  00250C  6F71               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5095  00250E  0EB4               	movlw	low _data_array
  5096  002510  0100               	movlb	0	; () banked
  5097  002512  6F72               	movwf	CANsendMessage@data& (0+255),b
  5098  002514  0E00               	movlw	high _data_array
  5099  002516  0100               	movlb	0	; () banked
  5100  002518  6F73               	movwf	(CANsendMessage@data+1)& (0+255),b
  5101  00251A  0E08               	movlw	8
  5102  00251C  0100               	movlb	0	; () banked
  5103  00251E  6F74               	movwf	CANsendMessage@dataLength& (0+255),b
  5104  002520  0EFC               	movlw	252
  5105  002522  0100               	movlb	0	; () banked
  5106  002524  6F75               	movwf	CANsendMessage@flags& (0+255),b
  5107  002526  EC59  F006         	call	_CANsendMessage	;wreg free
  5108  00252A  0012               	return	
  5109  00252C                     l722:
  5110  00252C  0012               	return		;funcret
  5111  00252E                     __end_of_battery_measure:
  5112                           	opt stack 0
  5113                           tblptru	equ	0xFF8
  5114                           tblptrh	equ	0xFF7
  5115                           tblptrl	equ	0xFF6
  5116                           tablat	equ	0xFF5
  5117                           intcon	equ	0xFF2
  5118                           intcon2	equ	0xFF1
  5119                           postinc0	equ	0xFEE
  5120                           wreg	equ	0xFE8
  5121                           status	equ	0xFD8
  5122                           
  5123 ;; *************** function ___wmul *****************
  5124 ;; Defined at:
  5125 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;  multiplier      2   22[BANK0 ] unsigned int 
  5128 ;;  multiplicand    2   24[BANK0 ] unsigned int 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  product         2   26[BANK0 ] unsigned int 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  2   22[BANK0 ] unsigned int 
  5133 ;; Registers used:
  5134 ;;		wreg, status,2, status,0, prodl, prodh
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5140 ;;      Params:         0       4       0       0
  5141 ;;      Locals:         0       2       0       0
  5142 ;;      Temps:          0       0       0       0
  5143 ;;      Totals:         0       6       0       0
  5144 ;;Total ram usage:        6 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:    3
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_delay_ms
  5151 ;;		_main
  5152 ;;		_battery_measure
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           	psect	text9
  5157  002722                     __ptext9:
  5158                           	opt stack 0
  5159  002722                     ___wmul:
  5160                           	opt stack 26
  5161                           
  5162                           ;incstack = 0
  5163  002722  0100               	movlb	0	; () banked
  5164  002724  5176               	movf	___wmul@multiplier& (0+255),w,b
  5165  002726  0100               	movlb	0	; () banked
  5166  002728  0378               	mulwf	___wmul@multiplicand& (0+255),b
  5167  00272A  CFF3 F07A          	movff	prodl,___wmul@product
  5168  00272E  CFF4 F07B          	movff	prodh,___wmul@product+1
  5169  002732  0100               	movlb	0	; () banked
  5170  002734  5176               	movf	___wmul@multiplier& (0+255),w,b
  5171  002736  0100               	movlb	0	; () banked
  5172  002738  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5173  00273A  50F3               	movf	prodl,w,c
  5174  00273C  0100               	movlb	0	; () banked
  5175  00273E  277B               	addwf	(___wmul@product+1)& (0+255),f,b
  5176  002740  0100               	movlb	0	; () banked
  5177  002742  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5178  002744  0100               	movlb	0	; () banked
  5179  002746  0378               	mulwf	___wmul@multiplicand& (0+255),b
  5180  002748  50F3               	movf	prodl,w,c
  5181  00274A  0100               	movlb	0	; () banked
  5182  00274C  277B               	addwf	(___wmul@product+1)& (0+255),f,b
  5183                           
  5184                           ; BSR set to: 0
  5185  00274E  C07A  F076         	movff	___wmul@product,?___wmul
  5186  002752  C07B  F077         	movff	___wmul@product+1,?___wmul+1
  5187  002756  0012               	return	
  5188  002758                     __end_of___wmul:
  5189                           	opt stack 0
  5190                           tblptru	equ	0xFF8
  5191                           tblptrh	equ	0xFF7
  5192                           tblptrl	equ	0xFF6
  5193                           tablat	equ	0xFF5
  5194                           prodh	equ	0xFF4
  5195                           prodl	equ	0xFF3
  5196                           intcon	equ	0xFF2
  5197                           intcon2	equ	0xFF1
  5198                           postinc0	equ	0xFEE
  5199                           wreg	equ	0xFE8
  5200                           status	equ	0xFD8
  5201                           
  5202 ;; *************** function ___awdiv *****************
  5203 ;; Defined at:
  5204 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;  dividend        2   14[BANK0 ] int 
  5207 ;;  divisor         2   16[BANK0 ] int 
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;  quotient        2   20[BANK0 ] int 
  5210 ;;  sign            1   19[BANK0 ] unsigned char 
  5211 ;;  counter         1   18[BANK0 ] unsigned char 
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  2   14[BANK0 ] int 
  5214 ;; Registers used:
  5215 ;;		wreg, status,2, status,0
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5221 ;;      Params:         0       4       0       0
  5222 ;;      Locals:         0       4       0       0
  5223 ;;      Temps:          0       0       0       0
  5224 ;;      Totals:         0       8       0       0
  5225 ;;Total ram usage:        8 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; Hardware stack levels required when called:    3
  5228 ;; This function calls:
  5229 ;;		Nothing
  5230 ;; This function is called by:
  5231 ;;		_main
  5232 ;;		_battery_measure
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text10
  5237  002342                     __ptext10:
  5238                           	opt stack 0
  5239  002342                     ___awdiv:
  5240                           	opt stack 26
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;incstack = 0
  5244  002342  0E00               	movlw	0
  5245  002344  0100               	movlb	0	; () banked
  5246  002346  6F73               	movwf	___awdiv@sign& (0+255),b
  5247                           
  5248                           ; BSR set to: 0
  5249  002348  0100               	movlb	0	; () banked
  5250  00234A  AF71               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5251  00234C  D008               	goto	l4678
  5252                           
  5253                           ; BSR set to: 0
  5254  00234E  0100               	movlb	0	; () banked
  5255  002350  6D70               	negf	___awdiv@divisor& (0+255),b
  5256  002352  1F71               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5257  002354  B0D8               	btfsc	status,0,c
  5258  002356  2B71               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5259                           
  5260                           ; BSR set to: 0
  5261  002358  0E01               	movlw	1
  5262  00235A  0100               	movlb	0	; () banked
  5263  00235C  6F73               	movwf	___awdiv@sign& (0+255),b
  5264  00235E                     l4678:
  5265                           
  5266                           ; BSR set to: 0
  5267  00235E  0100               	movlb	0	; () banked
  5268  002360  AF6F               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5269  002362  D008               	goto	l4684
  5270                           
  5271                           ; BSR set to: 0
  5272  002364  0100               	movlb	0	; () banked
  5273  002366  6D6E               	negf	___awdiv@dividend& (0+255),b
  5274  002368  1F6F               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5275  00236A  B0D8               	btfsc	status,0,c
  5276  00236C  2B6F               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5277                           
  5278                           ; BSR set to: 0
  5279  00236E  0E01               	movlw	1
  5280  002370  0100               	movlb	0	; () banked
  5281  002372  1B73               	xorwf	___awdiv@sign& (0+255),f,b
  5282  002374                     l4684:
  5283                           
  5284                           ; BSR set to: 0
  5285  002374  0E00               	movlw	0
  5286  002376  0100               	movlb	0	; () banked
  5287  002378  6F75               	movwf	(___awdiv@quotient+1)& (0+255),b
  5288  00237A  0E00               	movlw	0
  5289  00237C  6F74               	movwf	___awdiv@quotient& (0+255),b
  5290                           
  5291                           ; BSR set to: 0
  5292  00237E  0100               	movlb	0	; () banked
  5293  002380  5170               	movf	___awdiv@divisor& (0+255),w,b
  5294  002382  0100               	movlb	0	; () banked
  5295  002384  1171               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5296  002386  B4D8               	btfsc	status,2,c
  5297  002388  D02C               	goto	l4706
  5298                           
  5299                           ; BSR set to: 0
  5300  00238A  0E01               	movlw	1
  5301  00238C  0100               	movlb	0	; () banked
  5302  00238E  6F72               	movwf	___awdiv@counter& (0+255),b
  5303  002390  D006               	goto	l4692
  5304  002392                     l4690:
  5305                           
  5306                           ; BSR set to: 0
  5307  002392  0100               	movlb	0	; () banked
  5308  002394  90D8               	bcf	status,0,c
  5309  002396  3770               	rlcf	___awdiv@divisor& (0+255),f,b
  5310  002398  3771               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5311  00239A  0100               	movlb	0	; () banked
  5312  00239C  2B72               	incf	___awdiv@counter& (0+255),f,b
  5313  00239E                     l4692:
  5314                           
  5315                           ; BSR set to: 0
  5316  00239E  0100               	movlb	0	; () banked
  5317  0023A0  AF71               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5318  0023A2  D7F7               	goto	l4690
  5319  0023A4                     l4694:
  5320                           
  5321                           ; BSR set to: 0
  5322  0023A4  0100               	movlb	0	; () banked
  5323  0023A6  90D8               	bcf	status,0,c
  5324  0023A8  3774               	rlcf	___awdiv@quotient& (0+255),f,b
  5325  0023AA  3775               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5326                           
  5327                           ; BSR set to: 0
  5328  0023AC  0100               	movlb	0	; () banked
  5329  0023AE  5170               	movf	___awdiv@divisor& (0+255),w,b
  5330  0023B0  0100               	movlb	0	; () banked
  5331  0023B2  5D6E               	subwf	___awdiv@dividend& (0+255),w,b
  5332  0023B4  0100               	movlb	0	; () banked
  5333  0023B6  5171               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5334  0023B8  0100               	movlb	0	; () banked
  5335  0023BA  596F               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5336  0023BC  A0D8               	btfss	status,0,c
  5337  0023BE  D00A               	goto	l4702
  5338                           
  5339                           ; BSR set to: 0
  5340  0023C0  0100               	movlb	0	; () banked
  5341  0023C2  5170               	movf	___awdiv@divisor& (0+255),w,b
  5342  0023C4  0100               	movlb	0	; () banked
  5343  0023C6  5F6E               	subwf	___awdiv@dividend& (0+255),f,b
  5344  0023C8  0100               	movlb	0	; () banked
  5345  0023CA  5171               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5346  0023CC  0100               	movlb	0	; () banked
  5347  0023CE  5B6F               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5348                           
  5349                           ; BSR set to: 0
  5350  0023D0  0100               	movlb	0	; () banked
  5351  0023D2  8174               	bsf	___awdiv@quotient& (0+255),0,b
  5352  0023D4                     l4702:
  5353                           
  5354                           ; BSR set to: 0
  5355  0023D4  0100               	movlb	0	; () banked
  5356  0023D6  90D8               	bcf	status,0,c
  5357  0023D8  3371               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5358  0023DA  3370               	rrcf	___awdiv@divisor& (0+255),f,b
  5359                           
  5360                           ; BSR set to: 0
  5361  0023DC  0100               	movlb	0	; () banked
  5362  0023DE  2F72               	decfsz	___awdiv@counter& (0+255),f,b
  5363  0023E0  D7E1               	goto	l4694
  5364  0023E2                     l4706:
  5365                           
  5366                           ; BSR set to: 0
  5367  0023E2  0100               	movlb	0	; () banked
  5368  0023E4  5173               	movf	___awdiv@sign& (0+255),w,b
  5369  0023E6  0100               	movlb	0	; () banked
  5370  0023E8  B4D8               	btfsc	status,2,c
  5371  0023EA  D005               	goto	l4710
  5372                           
  5373                           ; BSR set to: 0
  5374  0023EC  0100               	movlb	0	; () banked
  5375  0023EE  6D74               	negf	___awdiv@quotient& (0+255),b
  5376  0023F0  1F75               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5377  0023F2  B0D8               	btfsc	status,0,c
  5378  0023F4  2B75               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5379  0023F6                     l4710:
  5380                           
  5381                           ; BSR set to: 0
  5382  0023F6  C074  F06E         	movff	___awdiv@quotient,?___awdiv
  5383  0023FA  C075  F06F         	movff	___awdiv@quotient+1,?___awdiv+1
  5384  0023FE  0012               	return	
  5385  002400                     __end_of___awdiv:
  5386                           	opt stack 0
  5387                           tblptru	equ	0xFF8
  5388                           tblptrh	equ	0xFF7
  5389                           tblptrl	equ	0xFF6
  5390                           tablat	equ	0xFF5
  5391                           prodh	equ	0xFF4
  5392                           prodl	equ	0xFF3
  5393                           intcon	equ	0xFF2
  5394                           intcon2	equ	0xFF1
  5395                           postinc0	equ	0xFEE
  5396                           wreg	equ	0xFE8
  5397                           status	equ	0xFD8
  5398                           
  5399 ;; *************** function _CANsendMessage *****************
  5400 ;; Defined at:
  5401 ;;		line 294 in file "H:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;  identifier      4   14[BANK0 ] unsigned long 
  5404 ;;  data            2   18[BANK0 ] PTR unsigned char 
  5405 ;;		 -> data_array(8), NULL(0), 
  5406 ;;  dataLength      1   20[BANK0 ] unsigned char 
  5407 ;;  flags           1   21[BANK0 ] enum E16866
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;  tamp            4   26[BANK0 ] unsigned long 
  5410 ;; Return value:  Size  Location     Type
  5411 ;;		None               void
  5412 ;; Registers used:
  5413 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5419 ;;      Params:         0       8       0       0
  5420 ;;      Locals:         0       4       0       0
  5421 ;;      Temps:          0       4       0       0
  5422 ;;      Totals:         0      16       0       0
  5423 ;;Total ram usage:       16 bytes
  5424 ;; Hardware stack levels used:    1
  5425 ;; Hardware stack levels required when called:    3
  5426 ;; This function calls:
  5427 ;;		Nothing
  5428 ;; This function is called by:
  5429 ;;		_main
  5430 ;;		_send_data
  5431 ;;		_battery_measure
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435                           	psect	text11
  5436  000CB2                     __ptext11:
  5437                           	opt stack 0
  5438  000CB2                     _CANsendMessage:
  5439                           	opt stack 26
  5440                           
  5441                           ;inc\CANlib.h: 296: unsigned long tamp;
  5442                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;incstack = 0
  5446  000CB2  010F               	movlb	15	; () banked
  5447  000CB4  B740               	btfsc	64,3,b	;volatile
  5448  000CB6  D13F               	goto	l367
  5449                           
  5450                           ; BSR set to: 15
  5451                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  5452  000CB8  C074  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  5453                           
  5454                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  5455  000CBC  0100               	movlb	0	; () banked
  5456  000CBE  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
  5457  000CC0  D003               	goto	l368
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  5461  000CC2  010F               	movlb	15	; () banked
  5462  000CC4  8D45               	bsf	69,6,b	;volatile
  5463  000CC6  D002               	goto	l369
  5464  000CC8                     l368:
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;inc\CANlib.h: 302: else
  5468                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  5469  000CC8  010F               	movlb	15	; () banked
  5470  000CCA  9D45               	bcf	69,6,b	;volatile
  5471  000CCC                     l369:
  5472                           
  5473                           ; BSR set to: 15
  5474                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  5475  000CCC  0100               	movlb	0	; () banked
  5476  000CCE  A775               	btfss	CANsendMessage@flags& (0+255),3,b
  5477  000CD0  D079               	goto	l370
  5478                           
  5479                           ; BSR set to: 0
  5480                           ;inc\CANlib.h: 306: {
  5481                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  5482  000CD2  0100               	movlb	0	; () banked
  5483  000CD4  516E               	movf	CANsendMessage@identifier& (0+255),w,b
  5484  000CD6  0100               	movlb	0	; () banked
  5485  000CD8  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  5486  000CDA  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5487  000CDC  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5488  000CDE  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5489                           
  5490                           ; BSR set to: 0
  5491                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  5492  000CE0  C07A  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  5496  000CE4  0E00               	movlw	0
  5497  000CE6  0100               	movlb	0	; () banked
  5498  000CE8  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
  5499  000CEA  0100               	movlb	0	; () banked
  5500  000CEC  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  5501  000CEE  0EFF               	movlw	255
  5502  000CF0  0100               	movlb	0	; () banked
  5503  000CF2  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5504  000CF4  0100               	movlb	0	; () banked
  5505  000CF6  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5506  000CF8  0E00               	movlw	0
  5507  000CFA  0100               	movlb	0	; () banked
  5508  000CFC  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5509  000CFE  0100               	movlb	0	; () banked
  5510  000D00  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5511  000D02  0E00               	movlw	0
  5512  000D04  0100               	movlb	0	; () banked
  5513  000D06  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5514  000D08  0100               	movlb	0	; () banked
  5515  000D0A  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  5519  000D0C  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
  5520  000D10  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5521  000D14  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5522  000D18  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5523  000D1C  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
  5524  000D20  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5525  000D24  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5526  000D28  0100               	movlb	0	; () banked
  5527  000D2A  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
  5528  000D2C  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  5529  000D30  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5530  000D34  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5531  000D38  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  5535  000D3C  C07A  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  5539  000D40  0E00               	movlw	0
  5540  000D42  010F               	movlb	15	; () banked
  5541  000D44  6F42               	movwf	66,b	;volatile
  5542                           
  5543                           ; BSR set to: 15
  5544                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  5545  000D46  010F               	movlb	15	; () banked
  5546  000D48  8742               	bsf	66,3,b	;volatile
  5547                           
  5548                           ; BSR set to: 15
  5549                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  5550  000D4A  0100               	movlb	0	; () banked
  5551  000D4C  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5552  000D4E  D002               	goto	l371
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  5556  000D50  010F               	movlb	15	; () banked
  5557  000D52  8142               	bsf	66,0,b	;volatile
  5558  000D54                     l371:
  5559                           
  5560                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  5561  000D54  0100               	movlb	0	; () banked
  5562  000D56  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5563  000D58  D002               	goto	l372
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  5567  000D5A  010F               	movlb	15	; () banked
  5568  000D5C  8342               	bsf	66,1,b	;volatile
  5569  000D5E                     l372:
  5570                           
  5571                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  5572  000D5E  0100               	movlb	0	; () banked
  5573  000D60  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5574  000D62  D002               	goto	l373
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  5578  000D64  010F               	movlb	15	; () banked
  5579  000D66  8B42               	bsf	66,5,b	;volatile
  5580  000D68                     l373:
  5581                           
  5582                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  5583  000D68  0100               	movlb	0	; () banked
  5584  000D6A  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5585  000D6C  D002               	goto	l374
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  5589  000D6E  010F               	movlb	15	; () banked
  5590  000D70  8D42               	bsf	66,6,b	;volatile
  5591  000D72                     l374:
  5592                           
  5593                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  5594  000D72  0100               	movlb	0	; () banked
  5595  000D74  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5596  000D76  D002               	goto	l4454
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  5600  000D78  010F               	movlb	15	; () banked
  5601  000D7A  8F42               	bsf	66,7,b	;volatile
  5602  000D7C                     l4454:
  5603                           
  5604                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  5605  000D7C  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
  5606  000D80  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5607  000D84  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5608  000D88  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5609  000D8C  0E16               	movlw	22
  5610  000D8E  D006               	goto	u5760
  5611  000D90                     u5765:
  5612  000D90  0100               	movlb	0	; () banked
  5613  000D92  90D8               	bcf	status,0,c
  5614  000D94  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5615  000D96  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5616  000D98  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5617  000D9A  3376               	rrcf	??_CANsendMessage& (0+255),f,b
  5618  000D9C                     u5760:
  5619  000D9C  2EE8               	decfsz	wreg,f,c
  5620  000D9E  D7F8               	goto	u5765
  5621  000DA0  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  5622  000DA4  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5623  000DA8  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5624  000DAC  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  5628  000DB0  0100               	movlb	0	; () banked
  5629  000DB2  517A               	movf	CANsendMessage@tamp& (0+255),w,b
  5630  000DB4  0100               	movlb	0	; () banked
  5631  000DB6  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  5632  000DB8  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5633  000DBA  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5634  000DBC  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  5638  000DBE  C07A  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5639                           
  5640                           ;inc\CANlib.h: 332: }
  5641  000DC2  D059               	goto	l4474
  5642  000DC4                     l370:
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;inc\CANlib.h: 334: else
  5646                           ;inc\CANlib.h: 336: {
  5647                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  5648  000DC4  010F               	movlb	15	; () banked
  5649  000DC6  9742               	bcf	66,3,b	;volatile
  5650                           
  5651                           ; BSR set to: 15
  5652                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  5653  000DC8  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
  5654  000DCC  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5655  000DD0  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5656  000DD4  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5657  000DD8  0E04               	movlw	4
  5658  000DDA  D006               	goto	u5770
  5659  000DDC                     u5775:
  5660  000DDC  0100               	movlb	0	; () banked
  5661  000DDE  90D8               	bcf	status,0,c
  5662  000DE0  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  5663  000DE2  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  5664  000DE4  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  5665  000DE6  3376               	rrcf	??_CANsendMessage& (0+255),f,b
  5666  000DE8                     u5770:
  5667  000DE8  2EE8               	decfsz	wreg,f,c
  5668  000DEA  D7F8               	goto	u5775
  5669  000DEC  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  5670  000DF0  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5671  000DF4  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5672  000DF8  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  5676  000DFC  0100               	movlb	0	; () banked
  5677  000DFE  517A               	movf	CANsendMessage@tamp& (0+255),w,b
  5678  000E00  0100               	movlb	0	; () banked
  5679  000E02  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  5680  000E04  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5681  000E06  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5682  000E08  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  5686  000E0A  C07A  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  5690  000E0E  0E07               	movlw	7
  5691  000E10  0100               	movlb	0	; () banked
  5692  000E12  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
  5693  000E14  0100               	movlb	0	; () banked
  5694  000E16  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  5695  000E18  0E00               	movlw	0
  5696  000E1A  0100               	movlb	0	; () banked
  5697  000E1C  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5698  000E1E  0100               	movlb	0	; () banked
  5699  000E20  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5700  000E22  0E00               	movlw	0
  5701  000E24  0100               	movlb	0	; () banked
  5702  000E26  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5703  000E28  0100               	movlb	0	; () banked
  5704  000E2A  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5705  000E2C  0E00               	movlw	0
  5706  000E2E  0100               	movlb	0	; () banked
  5707  000E30  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5708  000E32  0100               	movlb	0	; () banked
  5709  000E34  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5710                           
  5711                           ; BSR set to: 0
  5712                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  5713  000E36  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
  5714  000E3A  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5715  000E3E  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5716  000E42  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5717  000E46  0E05               	movlw	5
  5718  000E48                     u5785:
  5719  000E48  90D8               	bcf	status,0,c
  5720  000E4A  0100               	movlb	0	; () banked
  5721  000E4C  3776               	rlcf	??_CANsendMessage& (0+255),f,b
  5722  000E4E  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  5723  000E50  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  5724  000E52  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  5725  000E54  2EE8               	decfsz	wreg,f,c
  5726  000E56  D7F8               	goto	u5785
  5727  000E58  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  5728  000E5C  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5729  000E60  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5730  000E64  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5731                           
  5732                           ; BSR set to: 0
  5733                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  5734  000E68  010F               	movlb	15	; () banked
  5735  000E6A  5142               	movf	66,w,b	;volatile
  5736  000E6C  0B1F               	andlw	31
  5737  000E6E  010F               	movlb	15	; () banked
  5738  000E70  6F42               	movwf	66,b	;volatile
  5739                           
  5740                           ; BSR set to: 15
  5741                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  5742  000E72  C07A  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  5743  000E76                     l4474:
  5744                           
  5745                           ;inc\CANlib.h: 347: }
  5746                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  5747  000E76  0100               	movlb	0	; () banked
  5748  000E78  A175               	btfss	CANsendMessage@flags& (0+255),0,b
  5749  000E7A  D003               	goto	l377
  5750                           
  5751                           ; BSR set to: 0
  5752                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  5753  000E7C  010F               	movlb	15	; () banked
  5754  000E7E  8140               	bsf	64,0,b	;volatile
  5755  000E80  D002               	goto	l378
  5756  000E82                     l377:
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;inc\CANlib.h: 351: else
  5760                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  5761  000E82  010F               	movlb	15	; () banked
  5762  000E84  9140               	bcf	64,0,b	;volatile
  5763  000E86                     l378:
  5764                           
  5765                           ; BSR set to: 15
  5766                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  5767  000E86  0100               	movlb	0	; () banked
  5768  000E88  A375               	btfss	CANsendMessage@flags& (0+255),1,b
  5769  000E8A  D003               	goto	l379
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  5773  000E8C  010F               	movlb	15	; () banked
  5774  000E8E  8340               	bsf	64,1,b	;volatile
  5775  000E90  D002               	goto	l4480
  5776  000E92                     l379:
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;inc\CANlib.h: 355: else
  5780                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  5781  000E92  010F               	movlb	15	; () banked
  5782  000E94  9340               	bcf	64,1,b	;volatile
  5783  000E96                     l4480:
  5784                           
  5785                           ; BSR set to: 15
  5786                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  5787  000E96  C072  FFD9         	movff	CANsendMessage@data,fsr2l
  5788  000E9A  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
  5789  000E9E  50DF               	movf	indf2,w,c
  5790  000EA0  010F               	movlb	15	; () banked
  5791  000EA2  6F46               	movwf	70,b	;volatile
  5792                           
  5793                           ; BSR set to: 15
  5794                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  5795  000EA4  0100               	movlb	0	; () banked
  5796  000EA6  EE20 F001          	lfsr	2,1
  5797  000EAA  5172               	movf	CANsendMessage@data& (0+255),w,b
  5798  000EAC  26D9               	addwf	fsr2l,f,c
  5799  000EAE  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5800  000EB0  22DA               	addwfc	fsr2h,f,c
  5801  000EB2  50DF               	movf	indf2,w,c
  5802  000EB4  010F               	movlb	15	; () banked
  5803  000EB6  6F47               	movwf	71,b	;volatile
  5804                           
  5805                           ; BSR set to: 15
  5806                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  5807  000EB8  0100               	movlb	0	; () banked
  5808  000EBA  EE20 F002          	lfsr	2,2
  5809  000EBE  5172               	movf	CANsendMessage@data& (0+255),w,b
  5810  000EC0  26D9               	addwf	fsr2l,f,c
  5811  000EC2  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5812  000EC4  22DA               	addwfc	fsr2h,f,c
  5813  000EC6  50DF               	movf	indf2,w,c
  5814  000EC8  010F               	movlb	15	; () banked
  5815  000ECA  6F48               	movwf	72,b	;volatile
  5816                           
  5817                           ; BSR set to: 15
  5818                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  5819  000ECC  0100               	movlb	0	; () banked
  5820  000ECE  EE20 F003          	lfsr	2,3
  5821  000ED2  5172               	movf	CANsendMessage@data& (0+255),w,b
  5822  000ED4  26D9               	addwf	fsr2l,f,c
  5823  000ED6  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5824  000ED8  22DA               	addwfc	fsr2h,f,c
  5825  000EDA  50DF               	movf	indf2,w,c
  5826  000EDC  010F               	movlb	15	; () banked
  5827  000EDE  6F49               	movwf	73,b	;volatile
  5828                           
  5829                           ; BSR set to: 15
  5830                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  5831  000EE0  0100               	movlb	0	; () banked
  5832  000EE2  EE20 F004          	lfsr	2,4
  5833  000EE6  5172               	movf	CANsendMessage@data& (0+255),w,b
  5834  000EE8  26D9               	addwf	fsr2l,f,c
  5835  000EEA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5836  000EEC  22DA               	addwfc	fsr2h,f,c
  5837  000EEE  50DF               	movf	indf2,w,c
  5838  000EF0  010F               	movlb	15	; () banked
  5839  000EF2  6F4A               	movwf	74,b	;volatile
  5840                           
  5841                           ; BSR set to: 15
  5842                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  5843  000EF4  0100               	movlb	0	; () banked
  5844  000EF6  EE20 F005          	lfsr	2,5
  5845  000EFA  5172               	movf	CANsendMessage@data& (0+255),w,b
  5846  000EFC  26D9               	addwf	fsr2l,f,c
  5847  000EFE  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5848  000F00  22DA               	addwfc	fsr2h,f,c
  5849  000F02  50DF               	movf	indf2,w,c
  5850  000F04  010F               	movlb	15	; () banked
  5851  000F06  6F4B               	movwf	75,b	;volatile
  5852                           
  5853                           ; BSR set to: 15
  5854                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  5855  000F08  0100               	movlb	0	; () banked
  5856  000F0A  EE20 F006          	lfsr	2,6
  5857  000F0E  5172               	movf	CANsendMessage@data& (0+255),w,b
  5858  000F10  26D9               	addwf	fsr2l,f,c
  5859  000F12  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5860  000F14  22DA               	addwfc	fsr2h,f,c
  5861  000F16  50DF               	movf	indf2,w,c
  5862  000F18  010F               	movlb	15	; () banked
  5863  000F1A  6F4C               	movwf	76,b	;volatile
  5864                           
  5865                           ; BSR set to: 15
  5866                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  5867  000F1C  0100               	movlb	0	; () banked
  5868  000F1E  EE20 F007          	lfsr	2,7
  5869  000F22  5172               	movf	CANsendMessage@data& (0+255),w,b
  5870  000F24  26D9               	addwf	fsr2l,f,c
  5871  000F26  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5872  000F28  22DA               	addwfc	fsr2h,f,c
  5873  000F2A  50DF               	movf	indf2,w,c
  5874  000F2C  010F               	movlb	15	; () banked
  5875  000F2E  6F4D               	movwf	77,b	;volatile
  5876                           
  5877                           ; BSR set to: 15
  5878                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  5879  000F30  010F               	movlb	15	; () banked
  5880  000F32  8740               	bsf	64,3,b	;volatile
  5881                           
  5882                           ; BSR set to: 15
  5883                           ;inc\CANlib.h: 368: return;
  5884  000F34  0012               	return	
  5885  000F36                     l367:
  5886                           
  5887                           ; BSR set to: 15
  5888                           ;inc\CANlib.h: 369: }
  5889                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  5890  000F36  010F               	movlb	15	; () banked
  5891  000F38  B730               	btfsc	48,3,b	;volatile
  5892  000F3A  D13F               	goto	l382
  5893                           
  5894                           ; BSR set to: 15
  5895                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  5896  000F3C  C074  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  5897                           
  5898                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  5899  000F40  0100               	movlb	0	; () banked
  5900  000F42  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
  5901  000F44  D003               	goto	l383
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  5905  000F46  010F               	movlb	15	; () banked
  5906  000F48  8D35               	bsf	53,6,b	;volatile
  5907  000F4A  D002               	goto	l384
  5908  000F4C                     l383:
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;inc\CANlib.h: 378: else
  5912                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  5913  000F4C  010F               	movlb	15	; () banked
  5914  000F4E  9D35               	bcf	53,6,b	;volatile
  5915  000F50                     l384:
  5916                           
  5917                           ; BSR set to: 15
  5918                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  5919  000F50  0100               	movlb	0	; () banked
  5920  000F52  A775               	btfss	CANsendMessage@flags& (0+255),3,b
  5921  000F54  D079               	goto	l385
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;inc\CANlib.h: 382: {
  5925                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  5926  000F56  0100               	movlb	0	; () banked
  5927  000F58  516E               	movf	CANsendMessage@identifier& (0+255),w,b
  5928  000F5A  0100               	movlb	0	; () banked
  5929  000F5C  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  5930  000F5E  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5931  000F60  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5932  000F62  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5933                           
  5934                           ; BSR set to: 0
  5935                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  5936  000F64  C07A  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  5940  000F68  0E00               	movlw	0
  5941  000F6A  0100               	movlb	0	; () banked
  5942  000F6C  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
  5943  000F6E  0100               	movlb	0	; () banked
  5944  000F70  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  5945  000F72  0EFF               	movlw	255
  5946  000F74  0100               	movlb	0	; () banked
  5947  000F76  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5948  000F78  0100               	movlb	0	; () banked
  5949  000F7A  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5950  000F7C  0E00               	movlw	0
  5951  000F7E  0100               	movlb	0	; () banked
  5952  000F80  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5953  000F82  0100               	movlb	0	; () banked
  5954  000F84  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5955  000F86  0E00               	movlw	0
  5956  000F88  0100               	movlb	0	; () banked
  5957  000F8A  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5958  000F8C  0100               	movlb	0	; () banked
  5959  000F8E  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  5963  000F90  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
  5964  000F94  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5965  000F98  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5966  000F9C  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5967  000FA0  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
  5968  000FA4  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5969  000FA8  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5970  000FAC  0100               	movlb	0	; () banked
  5971  000FAE  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
  5972  000FB0  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  5973  000FB4  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5974  000FB8  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5975  000FBC  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  5979  000FC0  C07A  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  5980                           
  5981                           ; BSR set to: 0
  5982                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  5983  000FC4  0E00               	movlw	0
  5984  000FC6  010F               	movlb	15	; () banked
  5985  000FC8  6F32               	movwf	50,b	;volatile
  5986                           
  5987                           ; BSR set to: 15
  5988                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  5989  000FCA  010F               	movlb	15	; () banked
  5990  000FCC  8732               	bsf	50,3,b	;volatile
  5991                           
  5992                           ; BSR set to: 15
  5993                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  5994  000FCE  0100               	movlb	0	; () banked
  5995  000FD0  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5996  000FD2  D002               	goto	l386
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  6000  000FD4  010F               	movlb	15	; () banked
  6001  000FD6  8132               	bsf	50,0,b	;volatile
  6002  000FD8                     l386:
  6003                           
  6004                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  6005  000FD8  0100               	movlb	0	; () banked
  6006  000FDA  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6007  000FDC  D002               	goto	l387
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  6011  000FDE  010F               	movlb	15	; () banked
  6012  000FE0  8332               	bsf	50,1,b	;volatile
  6013  000FE2                     l387:
  6014                           
  6015                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  6016  000FE2  0100               	movlb	0	; () banked
  6017  000FE4  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6018  000FE6  D002               	goto	l388
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  6022  000FE8  010F               	movlb	15	; () banked
  6023  000FEA  8B32               	bsf	50,5,b	;volatile
  6024  000FEC                     l388:
  6025                           
  6026                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  6027  000FEC  0100               	movlb	0	; () banked
  6028  000FEE  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6029  000FF0  D002               	goto	l389
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  6033  000FF2  010F               	movlb	15	; () banked
  6034  000FF4  8D32               	bsf	50,6,b	;volatile
  6035  000FF6                     l389:
  6036                           
  6037                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  6038  000FF6  0100               	movlb	0	; () banked
  6039  000FF8  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6040  000FFA  D002               	goto	l4530
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  6044  000FFC  010F               	movlb	15	; () banked
  6045  000FFE  8F32               	bsf	50,7,b	;volatile
  6046  001000                     l4530:
  6047                           
  6048                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  6049  001000  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
  6050  001004  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6051  001008  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6052  00100C  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6053  001010  0E16               	movlw	22
  6054  001012  D006               	goto	u5890
  6055  001014                     u5895:
  6056  001014  0100               	movlb	0	; () banked
  6057  001016  90D8               	bcf	status,0,c
  6058  001018  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6059  00101A  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6060  00101C  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6061  00101E  3376               	rrcf	??_CANsendMessage& (0+255),f,b
  6062  001020                     u5890:
  6063  001020  2EE8               	decfsz	wreg,f,c
  6064  001022  D7F8               	goto	u5895
  6065  001024  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  6066  001028  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6067  00102C  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6068  001030  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  6072  001034  0100               	movlb	0	; () banked
  6073  001036  517A               	movf	CANsendMessage@tamp& (0+255),w,b
  6074  001038  0100               	movlb	0	; () banked
  6075  00103A  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  6076  00103C  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6077  00103E  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6078  001040  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  6082  001042  C07A  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6083                           
  6084                           ;inc\CANlib.h: 407: }
  6085  001046  D059               	goto	l4550
  6086  001048                     l385:
  6087                           
  6088                           ; BSR set to: 0
  6089                           ;inc\CANlib.h: 409: else
  6090                           ;inc\CANlib.h: 411: {
  6091                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  6092  001048  010F               	movlb	15	; () banked
  6093  00104A  9732               	bcf	50,3,b	;volatile
  6094                           
  6095                           ; BSR set to: 15
  6096                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  6097  00104C  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
  6098  001050  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6099  001054  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6100  001058  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6101  00105C  0E04               	movlw	4
  6102  00105E  D006               	goto	u5900
  6103  001060                     u5905:
  6104  001060  0100               	movlb	0	; () banked
  6105  001062  90D8               	bcf	status,0,c
  6106  001064  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6107  001066  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6108  001068  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6109  00106A  3376               	rrcf	??_CANsendMessage& (0+255),f,b
  6110  00106C                     u5900:
  6111  00106C  2EE8               	decfsz	wreg,f,c
  6112  00106E  D7F8               	goto	u5905
  6113  001070  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  6114  001074  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6115  001078  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6116  00107C  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  6120  001080  0100               	movlb	0	; () banked
  6121  001082  517A               	movf	CANsendMessage@tamp& (0+255),w,b
  6122  001084  0100               	movlb	0	; () banked
  6123  001086  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  6124  001088  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6125  00108A  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6126  00108C  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  6130  00108E  C07A  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  6134  001092  0E07               	movlw	7
  6135  001094  0100               	movlb	0	; () banked
  6136  001096  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
  6137  001098  0100               	movlb	0	; () banked
  6138  00109A  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  6139  00109C  0E00               	movlw	0
  6140  00109E  0100               	movlb	0	; () banked
  6141  0010A0  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6142  0010A2  0100               	movlb	0	; () banked
  6143  0010A4  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6144  0010A6  0E00               	movlw	0
  6145  0010A8  0100               	movlb	0	; () banked
  6146  0010AA  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6147  0010AC  0100               	movlb	0	; () banked
  6148  0010AE  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6149  0010B0  0E00               	movlw	0
  6150  0010B2  0100               	movlb	0	; () banked
  6151  0010B4  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6152  0010B6  0100               	movlb	0	; () banked
  6153  0010B8  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  6157  0010BA  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
  6158  0010BE  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6159  0010C2  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6160  0010C6  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6161  0010CA  0E05               	movlw	5
  6162  0010CC                     u5915:
  6163  0010CC  90D8               	bcf	status,0,c
  6164  0010CE  0100               	movlb	0	; () banked
  6165  0010D0  3776               	rlcf	??_CANsendMessage& (0+255),f,b
  6166  0010D2  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6167  0010D4  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6168  0010D6  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6169  0010D8  2EE8               	decfsz	wreg,f,c
  6170  0010DA  D7F8               	goto	u5915
  6171  0010DC  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  6172  0010E0  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6173  0010E4  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6174  0010E8  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  6178  0010EC  010F               	movlb	15	; () banked
  6179  0010EE  5132               	movf	50,w,b	;volatile
  6180  0010F0  0B1F               	andlw	31
  6181  0010F2  010F               	movlb	15	; () banked
  6182  0010F4  6F32               	movwf	50,b	;volatile
  6183                           
  6184                           ; BSR set to: 15
  6185                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  6186  0010F6  C07A  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6187  0010FA                     l4550:
  6188                           
  6189                           ;inc\CANlib.h: 422: }
  6190                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  6191  0010FA  0100               	movlb	0	; () banked
  6192  0010FC  A175               	btfss	CANsendMessage@flags& (0+255),0,b
  6193  0010FE  D003               	goto	l392
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  6197  001100  010F               	movlb	15	; () banked
  6198  001102  8130               	bsf	48,0,b	;volatile
  6199  001104  D002               	goto	l393
  6200  001106                     l392:
  6201                           
  6202                           ; BSR set to: 0
  6203                           ;inc\CANlib.h: 426: else
  6204                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  6205  001106  010F               	movlb	15	; () banked
  6206  001108  9130               	bcf	48,0,b	;volatile
  6207  00110A                     l393:
  6208                           
  6209                           ; BSR set to: 15
  6210                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  6211  00110A  0100               	movlb	0	; () banked
  6212  00110C  A375               	btfss	CANsendMessage@flags& (0+255),1,b
  6213  00110E  D003               	goto	l394
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  6217  001110  010F               	movlb	15	; () banked
  6218  001112  8330               	bsf	48,1,b	;volatile
  6219  001114  D002               	goto	l4556
  6220  001116                     l394:
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;inc\CANlib.h: 430: else
  6224                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  6225  001116  010F               	movlb	15	; () banked
  6226  001118  9330               	bcf	48,1,b	;volatile
  6227  00111A                     l4556:
  6228                           
  6229                           ; BSR set to: 15
  6230                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  6231  00111A  C072  FFD9         	movff	CANsendMessage@data,fsr2l
  6232  00111E  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6233  001122  50DF               	movf	indf2,w,c
  6234  001124  010F               	movlb	15	; () banked
  6235  001126  6F36               	movwf	54,b	;volatile
  6236                           
  6237                           ; BSR set to: 15
  6238                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  6239  001128  0100               	movlb	0	; () banked
  6240  00112A  EE20 F001          	lfsr	2,1
  6241  00112E  5172               	movf	CANsendMessage@data& (0+255),w,b
  6242  001130  26D9               	addwf	fsr2l,f,c
  6243  001132  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6244  001134  22DA               	addwfc	fsr2h,f,c
  6245  001136  50DF               	movf	indf2,w,c
  6246  001138  010F               	movlb	15	; () banked
  6247  00113A  6F37               	movwf	55,b	;volatile
  6248                           
  6249                           ; BSR set to: 15
  6250                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  6251  00113C  0100               	movlb	0	; () banked
  6252  00113E  EE20 F002          	lfsr	2,2
  6253  001142  5172               	movf	CANsendMessage@data& (0+255),w,b
  6254  001144  26D9               	addwf	fsr2l,f,c
  6255  001146  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6256  001148  22DA               	addwfc	fsr2h,f,c
  6257  00114A  50DF               	movf	indf2,w,c
  6258  00114C  010F               	movlb	15	; () banked
  6259  00114E  6F38               	movwf	56,b	;volatile
  6260                           
  6261                           ; BSR set to: 15
  6262                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  6263  001150  0100               	movlb	0	; () banked
  6264  001152  EE20 F003          	lfsr	2,3
  6265  001156  5172               	movf	CANsendMessage@data& (0+255),w,b
  6266  001158  26D9               	addwf	fsr2l,f,c
  6267  00115A  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6268  00115C  22DA               	addwfc	fsr2h,f,c
  6269  00115E  50DF               	movf	indf2,w,c
  6270  001160  010F               	movlb	15	; () banked
  6271  001162  6F39               	movwf	57,b	;volatile
  6272                           
  6273                           ; BSR set to: 15
  6274                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  6275  001164  0100               	movlb	0	; () banked
  6276  001166  EE20 F004          	lfsr	2,4
  6277  00116A  5172               	movf	CANsendMessage@data& (0+255),w,b
  6278  00116C  26D9               	addwf	fsr2l,f,c
  6279  00116E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6280  001170  22DA               	addwfc	fsr2h,f,c
  6281  001172  50DF               	movf	indf2,w,c
  6282  001174  010F               	movlb	15	; () banked
  6283  001176  6F3A               	movwf	58,b	;volatile
  6284                           
  6285                           ; BSR set to: 15
  6286                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  6287  001178  0100               	movlb	0	; () banked
  6288  00117A  EE20 F005          	lfsr	2,5
  6289  00117E  5172               	movf	CANsendMessage@data& (0+255),w,b
  6290  001180  26D9               	addwf	fsr2l,f,c
  6291  001182  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6292  001184  22DA               	addwfc	fsr2h,f,c
  6293  001186  50DF               	movf	indf2,w,c
  6294  001188  010F               	movlb	15	; () banked
  6295  00118A  6F3B               	movwf	59,b	;volatile
  6296                           
  6297                           ; BSR set to: 15
  6298                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  6299  00118C  0100               	movlb	0	; () banked
  6300  00118E  EE20 F006          	lfsr	2,6
  6301  001192  5172               	movf	CANsendMessage@data& (0+255),w,b
  6302  001194  26D9               	addwf	fsr2l,f,c
  6303  001196  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6304  001198  22DA               	addwfc	fsr2h,f,c
  6305  00119A  50DF               	movf	indf2,w,c
  6306  00119C  010F               	movlb	15	; () banked
  6307  00119E  6F3C               	movwf	60,b	;volatile
  6308                           
  6309                           ; BSR set to: 15
  6310                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  6311  0011A0  0100               	movlb	0	; () banked
  6312  0011A2  EE20 F007          	lfsr	2,7
  6313  0011A6  5172               	movf	CANsendMessage@data& (0+255),w,b
  6314  0011A8  26D9               	addwf	fsr2l,f,c
  6315  0011AA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6316  0011AC  22DA               	addwfc	fsr2h,f,c
  6317  0011AE  50DF               	movf	indf2,w,c
  6318  0011B0  010F               	movlb	15	; () banked
  6319  0011B2  6F3D               	movwf	61,b	;volatile
  6320                           
  6321                           ; BSR set to: 15
  6322                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  6323  0011B4  010F               	movlb	15	; () banked
  6324  0011B6  8730               	bsf	48,3,b	;volatile
  6325                           
  6326                           ; BSR set to: 15
  6327                           ;inc\CANlib.h: 444: return;
  6328  0011B8  0012               	return	
  6329  0011BA                     l382:
  6330                           
  6331                           ; BSR set to: 15
  6332                           ;inc\CANlib.h: 445: }
  6333                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  6334  0011BA  010F               	movlb	15	; () banked
  6335  0011BC  B720               	btfsc	32,3,b	;volatile
  6336  0011BE  0012               	return	
  6337                           
  6338                           ; BSR set to: 15
  6339                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  6340  0011C0  C074  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6341                           
  6342                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  6343  0011C4  0100               	movlb	0	; () banked
  6344  0011C6  AD75               	btfss	CANsendMessage@flags& (0+255),6,b
  6345  0011C8  D003               	goto	l397
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  6349  0011CA  010F               	movlb	15	; () banked
  6350  0011CC  8D25               	bsf	37,6,b	;volatile
  6351  0011CE  D002               	goto	l398
  6352  0011D0                     l397:
  6353                           
  6354                           ; BSR set to: 0
  6355                           ;inc\CANlib.h: 454: else
  6356                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  6357  0011D0  010F               	movlb	15	; () banked
  6358  0011D2  9D25               	bcf	37,6,b	;volatile
  6359  0011D4                     l398:
  6360                           
  6361                           ; BSR set to: 15
  6362                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  6363  0011D4  0100               	movlb	0	; () banked
  6364  0011D6  A775               	btfss	CANsendMessage@flags& (0+255),3,b
  6365  0011D8  D079               	goto	l399
  6366                           
  6367                           ; BSR set to: 0
  6368                           ;inc\CANlib.h: 458: {
  6369                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  6370  0011DA  0100               	movlb	0	; () banked
  6371  0011DC  516E               	movf	CANsendMessage@identifier& (0+255),w,b
  6372  0011DE  0100               	movlb	0	; () banked
  6373  0011E0  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  6374  0011E2  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6375  0011E4  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6376  0011E6  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6377                           
  6378                           ; BSR set to: 0
  6379                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  6380  0011E8  C07A  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6381                           
  6382                           ; BSR set to: 0
  6383                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  6384  0011EC  0E00               	movlw	0
  6385  0011EE  0100               	movlb	0	; () banked
  6386  0011F0  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
  6387  0011F2  0100               	movlb	0	; () banked
  6388  0011F4  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  6389  0011F6  0EFF               	movlw	255
  6390  0011F8  0100               	movlb	0	; () banked
  6391  0011FA  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6392  0011FC  0100               	movlb	0	; () banked
  6393  0011FE  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6394  001200  0E00               	movlw	0
  6395  001202  0100               	movlb	0	; () banked
  6396  001204  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6397  001206  0100               	movlb	0	; () banked
  6398  001208  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6399  00120A  0E00               	movlw	0
  6400  00120C  0100               	movlb	0	; () banked
  6401  00120E  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6402  001210  0100               	movlb	0	; () banked
  6403  001212  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6404                           
  6405                           ; BSR set to: 0
  6406                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  6407  001214  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
  6408  001218  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6409  00121C  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6410  001220  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6411  001224  C077  F076         	movff	??_CANsendMessage+1,??_CANsendMessage
  6412  001228  C078  F077         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6413  00122C  C079  F078         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6414  001230  0100               	movlb	0	; () banked
  6415  001232  6B79               	clrf	(??_CANsendMessage+3)& (0+255),b
  6416  001234  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  6417  001238  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6418  00123C  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6419  001240  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  6423  001244  C07A  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  6427  001248  0E00               	movlw	0
  6428  00124A  010F               	movlb	15	; () banked
  6429  00124C  6F22               	movwf	34,b	;volatile
  6430                           
  6431                           ; BSR set to: 15
  6432                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  6433  00124E  010F               	movlb	15	; () banked
  6434  001250  8722               	bsf	34,3,b	;volatile
  6435                           
  6436                           ; BSR set to: 15
  6437                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  6438  001252  0100               	movlb	0	; () banked
  6439  001254  A170               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6440  001256  D002               	goto	l400
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  6444  001258  010F               	movlb	15	; () banked
  6445  00125A  8122               	bsf	34,0,b	;volatile
  6446  00125C                     l400:
  6447                           
  6448                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  6449  00125C  0100               	movlb	0	; () banked
  6450  00125E  A370               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6451  001260  D002               	goto	l401
  6452                           
  6453                           ; BSR set to: 0
  6454                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  6455  001262  010F               	movlb	15	; () banked
  6456  001264  8322               	bsf	34,1,b	;volatile
  6457  001266                     l401:
  6458                           
  6459                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  6460  001266  0100               	movlb	0	; () banked
  6461  001268  A570               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6462  00126A  D002               	goto	l402
  6463                           
  6464                           ; BSR set to: 0
  6465                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  6466  00126C  010F               	movlb	15	; () banked
  6467  00126E  8B22               	bsf	34,5,b	;volatile
  6468  001270                     l402:
  6469                           
  6470                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  6471  001270  0100               	movlb	0	; () banked
  6472  001272  A770               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6473  001274  D002               	goto	l403
  6474                           
  6475                           ; BSR set to: 0
  6476                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  6477  001276  010F               	movlb	15	; () banked
  6478  001278  8D22               	bsf	34,6,b	;volatile
  6479  00127A                     l403:
  6480                           
  6481                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  6482  00127A  0100               	movlb	0	; () banked
  6483  00127C  A970               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6484  00127E  D002               	goto	l4606
  6485                           
  6486                           ; BSR set to: 0
  6487                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  6488  001280  010F               	movlb	15	; () banked
  6489  001282  8F22               	bsf	34,7,b	;volatile
  6490  001284                     l4606:
  6491                           
  6492                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  6493  001284  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
  6494  001288  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6495  00128C  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6496  001290  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6497  001294  0E16               	movlw	22
  6498  001296  D006               	goto	u6020
  6499  001298                     u6025:
  6500  001298  0100               	movlb	0	; () banked
  6501  00129A  90D8               	bcf	status,0,c
  6502  00129C  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6503  00129E  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6504  0012A0  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6505  0012A2  3376               	rrcf	??_CANsendMessage& (0+255),f,b
  6506  0012A4                     u6020:
  6507  0012A4  2EE8               	decfsz	wreg,f,c
  6508  0012A6  D7F8               	goto	u6025
  6509  0012A8  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  6510  0012AC  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6511  0012B0  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6512  0012B4  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  6516  0012B8  0100               	movlb	0	; () banked
  6517  0012BA  517A               	movf	CANsendMessage@tamp& (0+255),w,b
  6518  0012BC  0100               	movlb	0	; () banked
  6519  0012BE  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  6520  0012C0  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6521  0012C2  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6522  0012C4  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  6526  0012C6  C07A  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6527                           
  6528                           ;inc\CANlib.h: 483: }
  6529  0012CA  D059               	goto	l4626
  6530  0012CC                     l399:
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;inc\CANlib.h: 485: else
  6534                           ;inc\CANlib.h: 487: {
  6535                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  6536  0012CC  010F               	movlb	15	; () banked
  6537  0012CE  9722               	bcf	34,3,b	;volatile
  6538                           
  6539                           ; BSR set to: 15
  6540                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  6541  0012D0  C06E  F076         	movff	CANsendMessage@identifier,??_CANsendMessage
  6542  0012D4  C06F  F077         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6543  0012D8  C070  F078         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6544  0012DC  C071  F079         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6545  0012E0  0E04               	movlw	4
  6546  0012E2  D006               	goto	u6030
  6547  0012E4                     u6035:
  6548  0012E4  0100               	movlb	0	; () banked
  6549  0012E6  90D8               	bcf	status,0,c
  6550  0012E8  3379               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6551  0012EA  3378               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6552  0012EC  3377               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6553  0012EE  3376               	rrcf	??_CANsendMessage& (0+255),f,b
  6554  0012F0                     u6030:
  6555  0012F0  2EE8               	decfsz	wreg,f,c
  6556  0012F2  D7F8               	goto	u6035
  6557  0012F4  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  6558  0012F8  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6559  0012FC  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6560  001300  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  6564  001304  0100               	movlb	0	; () banked
  6565  001306  517A               	movf	CANsendMessage@tamp& (0+255),w,b
  6566  001308  0100               	movlb	0	; () banked
  6567  00130A  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  6568  00130C  6B7B               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6569  00130E  6B7C               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6570  001310  6B7D               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  6574  001312  C07A  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  6578  001316  0E07               	movlw	7
  6579  001318  0100               	movlb	0	; () banked
  6580  00131A  156E               	andwf	CANsendMessage@identifier& (0+255),w,b
  6581  00131C  0100               	movlb	0	; () banked
  6582  00131E  6F7A               	movwf	CANsendMessage@tamp& (0+255),b
  6583  001320  0E00               	movlw	0
  6584  001322  0100               	movlb	0	; () banked
  6585  001324  156F               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6586  001326  0100               	movlb	0	; () banked
  6587  001328  6F7B               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6588  00132A  0E00               	movlw	0
  6589  00132C  0100               	movlb	0	; () banked
  6590  00132E  1570               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6591  001330  0100               	movlb	0	; () banked
  6592  001332  6F7C               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6593  001334  0E00               	movlw	0
  6594  001336  0100               	movlb	0	; () banked
  6595  001338  1571               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6596  00133A  0100               	movlb	0	; () banked
  6597  00133C  6F7D               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  6601  00133E  C07A  F076         	movff	CANsendMessage@tamp,??_CANsendMessage
  6602  001342  C07B  F077         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6603  001346  C07C  F078         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6604  00134A  C07D  F079         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6605  00134E  0E05               	movlw	5
  6606  001350                     u6045:
  6607  001350  90D8               	bcf	status,0,c
  6608  001352  0100               	movlb	0	; () banked
  6609  001354  3776               	rlcf	??_CANsendMessage& (0+255),f,b
  6610  001356  3777               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6611  001358  3778               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6612  00135A  3779               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6613  00135C  2EE8               	decfsz	wreg,f,c
  6614  00135E  D7F8               	goto	u6045
  6615  001360  C076  F07A         	movff	??_CANsendMessage,CANsendMessage@tamp
  6616  001364  C077  F07B         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6617  001368  C078  F07C         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6618  00136C  C079  F07D         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  6622  001370  010F               	movlb	15	; () banked
  6623  001372  5122               	movf	34,w,b	;volatile
  6624  001374  0B1F               	andlw	31
  6625  001376  010F               	movlb	15	; () banked
  6626  001378  6F22               	movwf	34,b	;volatile
  6627                           
  6628                           ; BSR set to: 15
  6629                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  6630  00137A  C07A  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  6631  00137E                     l4626:
  6632                           
  6633                           ;inc\CANlib.h: 498: }
  6634                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  6635  00137E  0100               	movlb	0	; () banked
  6636  001380  A175               	btfss	CANsendMessage@flags& (0+255),0,b
  6637  001382  D003               	goto	l406
  6638                           
  6639                           ; BSR set to: 0
  6640                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  6641  001384  010F               	movlb	15	; () banked
  6642  001386  8120               	bsf	32,0,b	;volatile
  6643  001388  D002               	goto	l407
  6644  00138A                     l406:
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;inc\CANlib.h: 502: else
  6648                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  6649  00138A  010F               	movlb	15	; () banked
  6650  00138C  9120               	bcf	32,0,b	;volatile
  6651  00138E                     l407:
  6652                           
  6653                           ; BSR set to: 15
  6654                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  6655  00138E  0100               	movlb	0	; () banked
  6656  001390  A375               	btfss	CANsendMessage@flags& (0+255),1,b
  6657  001392  D003               	goto	l408
  6658                           
  6659                           ; BSR set to: 0
  6660                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  6661  001394  010F               	movlb	15	; () banked
  6662  001396  8320               	bsf	32,1,b	;volatile
  6663  001398  D002               	goto	l4632
  6664  00139A                     l408:
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;inc\CANlib.h: 506: else
  6668                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  6669  00139A  010F               	movlb	15	; () banked
  6670  00139C  9320               	bcf	32,1,b	;volatile
  6671  00139E                     l4632:
  6672                           
  6673                           ; BSR set to: 15
  6674                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  6675  00139E  C072  FFD9         	movff	CANsendMessage@data,fsr2l
  6676  0013A2  C073  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6677  0013A6  50DF               	movf	indf2,w,c
  6678  0013A8  010F               	movlb	15	; () banked
  6679  0013AA  6F26               	movwf	38,b	;volatile
  6680                           
  6681                           ; BSR set to: 15
  6682                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  6683  0013AC  0100               	movlb	0	; () banked
  6684  0013AE  EE20 F001          	lfsr	2,1
  6685  0013B2  5172               	movf	CANsendMessage@data& (0+255),w,b
  6686  0013B4  26D9               	addwf	fsr2l,f,c
  6687  0013B6  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6688  0013B8  22DA               	addwfc	fsr2h,f,c
  6689  0013BA  50DF               	movf	indf2,w,c
  6690  0013BC  010F               	movlb	15	; () banked
  6691  0013BE  6F27               	movwf	39,b	;volatile
  6692                           
  6693                           ; BSR set to: 15
  6694                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  6695  0013C0  0100               	movlb	0	; () banked
  6696  0013C2  EE20 F002          	lfsr	2,2
  6697  0013C6  5172               	movf	CANsendMessage@data& (0+255),w,b
  6698  0013C8  26D9               	addwf	fsr2l,f,c
  6699  0013CA  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6700  0013CC  22DA               	addwfc	fsr2h,f,c
  6701  0013CE  50DF               	movf	indf2,w,c
  6702  0013D0  010F               	movlb	15	; () banked
  6703  0013D2  6F28               	movwf	40,b	;volatile
  6704                           
  6705                           ; BSR set to: 15
  6706                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  6707  0013D4  0100               	movlb	0	; () banked
  6708  0013D6  EE20 F003          	lfsr	2,3
  6709  0013DA  5172               	movf	CANsendMessage@data& (0+255),w,b
  6710  0013DC  26D9               	addwf	fsr2l,f,c
  6711  0013DE  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6712  0013E0  22DA               	addwfc	fsr2h,f,c
  6713  0013E2  50DF               	movf	indf2,w,c
  6714  0013E4  010F               	movlb	15	; () banked
  6715  0013E6  6F29               	movwf	41,b	;volatile
  6716                           
  6717                           ; BSR set to: 15
  6718                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  6719  0013E8  0100               	movlb	0	; () banked
  6720  0013EA  EE20 F004          	lfsr	2,4
  6721  0013EE  5172               	movf	CANsendMessage@data& (0+255),w,b
  6722  0013F0  26D9               	addwf	fsr2l,f,c
  6723  0013F2  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6724  0013F4  22DA               	addwfc	fsr2h,f,c
  6725  0013F6  50DF               	movf	indf2,w,c
  6726  0013F8  010F               	movlb	15	; () banked
  6727  0013FA  6F2A               	movwf	42,b	;volatile
  6728                           
  6729                           ; BSR set to: 15
  6730                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  6731  0013FC  0100               	movlb	0	; () banked
  6732  0013FE  EE20 F005          	lfsr	2,5
  6733  001402  5172               	movf	CANsendMessage@data& (0+255),w,b
  6734  001404  26D9               	addwf	fsr2l,f,c
  6735  001406  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6736  001408  22DA               	addwfc	fsr2h,f,c
  6737  00140A  50DF               	movf	indf2,w,c
  6738  00140C  010F               	movlb	15	; () banked
  6739  00140E  6F2B               	movwf	43,b	;volatile
  6740                           
  6741                           ; BSR set to: 15
  6742                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  6743  001410  0100               	movlb	0	; () banked
  6744  001412  EE20 F006          	lfsr	2,6
  6745  001416  5172               	movf	CANsendMessage@data& (0+255),w,b
  6746  001418  26D9               	addwf	fsr2l,f,c
  6747  00141A  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6748  00141C  22DA               	addwfc	fsr2h,f,c
  6749  00141E  50DF               	movf	indf2,w,c
  6750  001420  010F               	movlb	15	; () banked
  6751  001422  6F2C               	movwf	44,b	;volatile
  6752                           
  6753                           ; BSR set to: 15
  6754                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  6755  001424  0100               	movlb	0	; () banked
  6756  001426  EE20 F007          	lfsr	2,7
  6757  00142A  5172               	movf	CANsendMessage@data& (0+255),w,b
  6758  00142C  26D9               	addwf	fsr2l,f,c
  6759  00142E  5173               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6760  001430  22DA               	addwfc	fsr2h,f,c
  6761  001432  50DF               	movf	indf2,w,c
  6762  001434  010F               	movlb	15	; () banked
  6763  001436  6F2D               	movwf	45,b	;volatile
  6764                           
  6765                           ; BSR set to: 15
  6766                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  6767  001438  010F               	movlb	15	; () banked
  6768  00143A  8720               	bsf	32,3,b	;volatile
  6769                           
  6770                           ; BSR set to: 15
  6771                           ;inc\CANlib.h: 520: return;
  6772  00143C  0012               	return	
  6773  00143E                     __end_of_CANsendMessage:
  6774                           	opt stack 0
  6775                           tblptru	equ	0xFF8
  6776                           tblptrh	equ	0xFF7
  6777                           tblptrl	equ	0xFF6
  6778                           tablat	equ	0xFF5
  6779                           prodh	equ	0xFF4
  6780                           prodl	equ	0xFF3
  6781                           intcon	equ	0xFF2
  6782                           intcon2	equ	0xFF1
  6783                           postinc0	equ	0xFEE
  6784                           wreg	equ	0xFE8
  6785                           indf2	equ	0xFDF
  6786                           fsr2h	equ	0xFDA
  6787                           fsr2l	equ	0xFD9
  6788                           status	equ	0xFD8
  6789                           
  6790 ;; *************** function _CANisTxReady *****************
  6791 ;; Defined at:
  6792 ;;		line 1154 in file "H:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;		None
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;		None
  6797 ;; Return value:  Size  Location     Type
  6798 ;;                  1    wreg      unsigned char 
  6799 ;; Registers used:
  6800 ;;		wreg, status,2
  6801 ;; Tracked objects:
  6802 ;;		On entry : 0/0
  6803 ;;		On exit  : 0/0
  6804 ;;		Unchanged: 0/0
  6805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6806 ;;      Params:         0       0       0       0
  6807 ;;      Locals:         0       1       0       0
  6808 ;;      Temps:          0       0       0       0
  6809 ;;      Totals:         0       1       0       0
  6810 ;;Total ram usage:        1 bytes
  6811 ;; Hardware stack levels used:    1
  6812 ;; Hardware stack levels required when called:    3
  6813 ;; This function calls:
  6814 ;;		Nothing
  6815 ;; This function is called by:
  6816 ;;		_send_data
  6817 ;;		_battery_measure
  6818 ;; This function uses a non-reentrant model
  6819 ;;
  6820                           
  6821                           	psect	text12
  6822  002784                     __ptext12:
  6823                           	opt stack 0
  6824  002784                     _CANisTxReady:
  6825                           	opt stack 26
  6826                           
  6827                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  6828                           
  6829                           ; BSR set to: 15
  6830                           ;incstack = 0
  6831  002784  0E01               	movlw	1
  6832  002786  0100               	movlb	0	; () banked
  6833  002788  6F6E               	movwf	_CANisTxReady$3033& (0+255),b
  6834                           
  6835                           ; BSR set to: 0
  6836  00278A  010F               	movlb	15	; () banked
  6837  00278C  A740               	btfss	64,3,b	;volatile
  6838  00278E  D009               	goto	l560
  6839                           
  6840                           ; BSR set to: 15
  6841  002790  010F               	movlb	15	; () banked
  6842  002792  A730               	btfss	48,3,b	;volatile
  6843  002794  D006               	goto	l560
  6844                           
  6845                           ; BSR set to: 15
  6846  002796  010F               	movlb	15	; () banked
  6847  002798  A720               	btfss	32,3,b	;volatile
  6848  00279A  D003               	goto	l560
  6849                           
  6850                           ; BSR set to: 15
  6851  00279C  0E00               	movlw	0
  6852  00279E  0100               	movlb	0	; () banked
  6853  0027A0  6F6E               	movwf	_CANisTxReady$3033& (0+255),b
  6854  0027A2                     l560:
  6855  0027A2  0100               	movlb	0	; () banked
  6856  0027A4  516E               	movf	_CANisTxReady$3033& (0+255),w,b
  6857  0027A6  0012               	return	
  6858  0027A8                     __end_of_CANisTxReady:
  6859                           	opt stack 0
  6860                           tblptru	equ	0xFF8
  6861                           tblptrh	equ	0xFF7
  6862                           tblptrl	equ	0xFF6
  6863                           tablat	equ	0xFF5
  6864                           prodh	equ	0xFF4
  6865                           prodl	equ	0xFF3
  6866                           intcon	equ	0xFF2
  6867                           intcon2	equ	0xFF1
  6868                           postinc0	equ	0xFEE
  6869                           wreg	equ	0xFE8
  6870                           indf2	equ	0xFDF
  6871                           fsr2h	equ	0xFDA
  6872                           fsr2l	equ	0xFD9
  6873                           status	equ	0xFD8
  6874                           
  6875 ;; *************** function _abs *****************
  6876 ;; Defined at:
  6877 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;  a               2   14[BANK0 ] int 
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;		None
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  2   14[BANK0 ] int 
  6884 ;; Registers used:
  6885 ;;		wreg, status,2, status,0
  6886 ;; Tracked objects:
  6887 ;;		On entry : 0/0
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6891 ;;      Params:         0       2       0       0
  6892 ;;      Locals:         0       0       0       0
  6893 ;;      Temps:          0       2       0       0
  6894 ;;      Totals:         0       4       0       0
  6895 ;;Total ram usage:        4 bytes
  6896 ;; Hardware stack levels used:    1
  6897 ;; Hardware stack levels required when called:    3
  6898 ;; This function calls:
  6899 ;;		Nothing
  6900 ;; This function is called by:
  6901 ;;		_main
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           	psect	text13
  6906  002758                     __ptext13:
  6907                           	opt stack 0
  6908  002758                     _abs:
  6909                           	opt stack 27
  6910                           
  6911                           ; BSR set to: 0
  6912                           ;incstack = 0
  6913  002758  0100               	movlb	0	; () banked
  6914  00275A  AF6F               	btfss	(abs@a+1)& (0+255),7,b
  6915  00275C  D00E               	goto	l820
  6916                           
  6917                           ; BSR set to: 0
  6918  00275E  C06E  F070         	movff	abs@a,??_abs
  6919  002762  C06F  F071         	movff	abs@a+1,??_abs+1
  6920  002766  0100               	movlb	0	; () banked
  6921  002768  1F70               	comf	??_abs& (0+255),f,b
  6922  00276A  1F71               	comf	(??_abs+1)& (0+255),f,b
  6923  00276C  4B70               	infsnz	??_abs& (0+255),f,b
  6924  00276E  2B71               	incf	(??_abs+1)& (0+255),f,b
  6925  002770  C070  F06E         	movff	??_abs,?_abs
  6926  002774  C071  F06F         	movff	??_abs+1,?_abs+1
  6927  002778  0012               	return	
  6928  00277A                     l820:
  6929                           
  6930                           ; BSR set to: 0
  6931  00277A  C06E  F06E         	movff	abs@a,?_abs
  6932  00277E  C06F  F06F         	movff	abs@a+1,?_abs+1
  6933                           
  6934                           ; BSR set to: 0
  6935  002782  0012               	return		;funcret
  6936  002784                     __end_of_abs:
  6937                           	opt stack 0
  6938                           tblptru	equ	0xFF8
  6939                           tblptrh	equ	0xFF7
  6940                           tblptrl	equ	0xFF6
  6941                           tablat	equ	0xFF5
  6942                           prodh	equ	0xFF4
  6943                           prodl	equ	0xFF3
  6944                           intcon	equ	0xFF2
  6945                           intcon2	equ	0xFF1
  6946                           postinc0	equ	0xFEE
  6947                           wreg	equ	0xFE8
  6948                           indf2	equ	0xFDF
  6949                           fsr2h	equ	0xFDA
  6950                           fsr2l	equ	0xFD9
  6951                           status	equ	0xFD8
  6952                           
  6953 ;; *************** function _SetOutputEPWM1 *****************
  6954 ;; Defined at:
  6955 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  6956 ;; Parameters:    Size  Location     Type
  6957 ;;  outputconfig    1    wreg     unsigned char 
  6958 ;;  outputmode      1   14[BANK0 ] unsigned char 
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;  outputconfig    1   15[BANK0 ] unsigned char 
  6961 ;; Return value:  Size  Location     Type
  6962 ;;		None               void
  6963 ;; Registers used:
  6964 ;;		wreg, status,2, status,0
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6970 ;;      Params:         0       1       0       0
  6971 ;;      Locals:         0       1       0       0
  6972 ;;      Temps:          0       0       0       0
  6973 ;;      Totals:         0       2       0       0
  6974 ;;Total ram usage:        2 bytes
  6975 ;; Hardware stack levels used:    1
  6976 ;; Hardware stack levels required when called:    3
  6977 ;; This function calls:
  6978 ;;		Nothing
  6979 ;; This function is called by:
  6980 ;;		_main
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           
  6984                           	psect	text14
  6985  002610                     __ptext14:
  6986                           	opt stack 0
  6987  002610                     _SetOutputEPWM1:
  6988                           	opt stack 27
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;incstack = 0
  6992                           ;SetOutputEPWM1@outputconfig stored from wreg
  6993  002610  0100               	movlb	0	; () banked
  6994  002612  6F6F               	movwf	SetOutputEPWM1@outputconfig& (0+255),b
  6995  002614  50BA               	movf	4026,w,c	;volatile
  6996  002616  09C0               	iorlw	192
  6997  002618  0100               	movlb	0	; () banked
  6998  00261A  156F               	andwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  6999  00261C  6EBA               	movwf	4026,c	;volatile
  7000  00261E  50BA               	movf	4026,w,c	;volatile
  7001  002620  090F               	iorlw	15
  7002  002622  0100               	movlb	0	; () banked
  7003  002624  156E               	andwf	SetOutputEPWM1@outputmode& (0+255),w,b
  7004  002626  6EBA               	movwf	4026,c	;volatile
  7005  002628  0E3F               	movlw	63
  7006  00262A  0100               	movlb	0	; () banked
  7007  00262C  196F               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7008  00262E  A4D8               	btfss	status,2,c
  7009  002630  D002               	goto	l4844
  7010                           
  7011                           ; BSR set to: 0
  7012  002632  9895               	bcf	3989,4,c	;volatile
  7013  002634  0012               	return	
  7014  002636                     l4844:
  7015                           
  7016                           ; BSR set to: 0
  7017  002636  0EBF               	movlw	191
  7018  002638  0100               	movlb	0	; () banked
  7019  00263A  196F               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7020  00263C  A4D8               	btfss	status,2,c
  7021  00263E  D003               	goto	l4848
  7022                           
  7023                           ; BSR set to: 0
  7024  002640  9895               	bcf	3989,4,c	;volatile
  7025  002642  9A95               	bcf	3989,5,c	;volatile
  7026  002644  0012               	return	
  7027  002646                     l4848:
  7028                           
  7029                           ; BSR set to: 0
  7030  002646  0E7F               	movlw	127
  7031  002648  0100               	movlb	0	; () banked
  7032  00264A  196F               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7033  00264C  B4D8               	btfsc	status,2,c
  7034  00264E  D004               	goto	l754
  7035                           
  7036                           ; BSR set to: 0
  7037  002650  0100               	movlb	0	; () banked
  7038  002652  296F               	incf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7039  002654  A4D8               	btfss	status,2,c
  7040  002656  0012               	return	
  7041  002658                     l754:
  7042                           
  7043                           ; BSR set to: 0
  7044  002658  9895               	bcf	3989,4,c	;volatile
  7045  00265A  9A95               	bcf	3989,5,c	;volatile
  7046  00265C  9C95               	bcf	3989,6,c	;volatile
  7047  00265E  9E95               	bcf	3989,7,c	;volatile
  7048                           
  7049                           ; BSR set to: 0
  7050                           
  7051                           ; BSR set to: 0
  7052  002660  0012               	return	
  7053  002662                     __end_of_SetOutputEPWM1:
  7054                           	opt stack 0
  7055                           tblptru	equ	0xFF8
  7056                           tblptrh	equ	0xFF7
  7057                           tblptrl	equ	0xFF6
  7058                           tablat	equ	0xFF5
  7059                           prodh	equ	0xFF4
  7060                           prodl	equ	0xFF3
  7061                           intcon	equ	0xFF2
  7062                           intcon2	equ	0xFF1
  7063                           postinc0	equ	0xFEE
  7064                           wreg	equ	0xFE8
  7065                           indf2	equ	0xFDF
  7066                           fsr2h	equ	0xFDA
  7067                           fsr2l	equ	0xFD9
  7068                           status	equ	0xFD8
  7069                           
  7070 ;; *************** function _SetDCEPWM1 *****************
  7071 ;; Defined at:
  7072 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  7073 ;; Parameters:    Size  Location     Type
  7074 ;;  dutycycle       2   14[BANK0 ] unsigned int 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;  DCycle          2   18[BANK0 ] struct PWMDC
  7077 ;; Return value:  Size  Location     Type
  7078 ;;		None               void
  7079 ;; Registers used:
  7080 ;;		wreg, status,2, status,0
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7086 ;;      Params:         0       2       0       0
  7087 ;;      Locals:         0       2       0       0
  7088 ;;      Temps:          0       2       0       0
  7089 ;;      Totals:         0       6       0       0
  7090 ;;Total ram usage:        6 bytes
  7091 ;; Hardware stack levels used:    1
  7092 ;; Hardware stack levels required when called:    3
  7093 ;; This function calls:
  7094 ;;		Nothing
  7095 ;; This function is called by:
  7096 ;;		_main
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text15
  7101  002662                     __ptext15:
  7102                           	opt stack 0
  7103  002662                     _SetDCEPWM1:
  7104                           	opt stack 27
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;incstack = 0
  7108  002662  C06E  F070         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  7109  002666  C06F  F071         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  7110  00266A  0E06               	movlw	6
  7111  00266C                     u6255:
  7112  00266C  90D8               	bcf	status,0,c
  7113  00266E  0100               	movlb	0	; () banked
  7114  002670  3770               	rlcf	??_SetDCEPWM1& (0+255),f,b
  7115  002672  3771               	rlcf	(??_SetDCEPWM1+1)& (0+255),f,b
  7116  002674  2EE8               	decfsz	wreg,f,c
  7117  002676  D7FA               	goto	u6255
  7118  002678  C070  F072         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  7119  00267C  C071  F073         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  7120                           
  7121                           ; BSR set to: 0
  7122  002680  C073  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  7123  002684  C072  F070         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  7124  002688  0100               	movlb	0	; () banked
  7125  00268A  90D8               	bcf	status,0,c
  7126  00268C  3370               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7127  00268E  0100               	movlb	0	; () banked
  7128  002690  90D8               	bcf	status,0,c
  7129  002692  3370               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7130  002694  0E30               	movlw	48
  7131  002696  0100               	movlb	0	; () banked
  7132  002698  1770               	andwf	??_SetDCEPWM1& (0+255),f,b
  7133  00269A  50BA               	movf	4026,w,c	;volatile
  7134  00269C  0BCF               	andlw	207
  7135  00269E  0100               	movlb	0	; () banked
  7136  0026A0  1170               	iorwf	??_SetDCEPWM1& (0+255),w,b
  7137  0026A2  6EBA               	movwf	4026,c	;volatile
  7138                           
  7139                           ; BSR set to: 0
  7140  0026A4  0012               	return		;funcret
  7141  0026A6                     __end_of_SetDCEPWM1:
  7142                           	opt stack 0
  7143                           tblptru	equ	0xFF8
  7144                           tblptrh	equ	0xFF7
  7145                           tblptrl	equ	0xFF6
  7146                           tablat	equ	0xFF5
  7147                           prodh	equ	0xFF4
  7148                           prodl	equ	0xFF3
  7149                           intcon	equ	0xFF2
  7150                           intcon2	equ	0xFF1
  7151                           postinc0	equ	0xFEE
  7152                           wreg	equ	0xFE8
  7153                           indf2	equ	0xFDF
  7154                           fsr2h	equ	0xFDA
  7155                           fsr2l	equ	0xFD9
  7156                           status	equ	0xFD8
  7157                           
  7158 ;; *************** function _OpenTimer2 *****************
  7159 ;; Defined at:
  7160 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;  config          1    wreg     unsigned char 
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;  config          1   14[BANK0 ] unsigned char 
  7165 ;; Return value:  Size  Location     Type
  7166 ;;		None               void
  7167 ;; Registers used:
  7168 ;;		wreg, status,2, status,0
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7174 ;;      Params:         0       0       0       0
  7175 ;;      Locals:         0       1       0       0
  7176 ;;      Temps:          0       0       0       0
  7177 ;;      Totals:         0       1       0       0
  7178 ;;Total ram usage:        1 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; Hardware stack levels required when called:    3
  7181 ;; This function calls:
  7182 ;;		Nothing
  7183 ;; This function is called by:
  7184 ;;		_main
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           	psect	text16
  7189  0027A8                     __ptext16:
  7190                           	opt stack 0
  7191  0027A8                     _OpenTimer2:
  7192                           	opt stack 27
  7193                           
  7194                           ; BSR set to: 0
  7195                           ;incstack = 0
  7196                           ;OpenTimer2@config stored from wreg
  7197  0027A8  0100               	movlb	0	; () banked
  7198  0027AA  6F6E               	movwf	OpenTimer2@config& (0+255),b
  7199  0027AC  0100               	movlb	0	; () banked
  7200  0027AE  516E               	movf	OpenTimer2@config& (0+255),w,b
  7201  0027B0  0BFB               	andlw	251
  7202  0027B2  6ECA               	movwf	4042,c	;volatile
  7203                           
  7204                           ; BSR set to: 0
  7205  0027B4  0E00               	movlw	0
  7206  0027B6  6ECC               	movwf	4044,c	;volatile
  7207                           
  7208                           ; BSR set to: 0
  7209  0027B8  929E               	bcf	3998,1,c	;volatile
  7210                           
  7211                           ; BSR set to: 0
  7212  0027BA  0100               	movlb	0	; () banked
  7213  0027BC  AF6E               	btfss	OpenTimer2@config& (0+255),7,b
  7214  0027BE  D002               	goto	l768
  7215                           
  7216                           ; BSR set to: 0
  7217  0027C0  829D               	bsf	3997,1,c	;volatile
  7218  0027C2  D001               	goto	l769
  7219  0027C4                     l768:
  7220                           
  7221                           ; BSR set to: 0
  7222  0027C4  929D               	bcf	3997,1,c	;volatile
  7223  0027C6                     l769:
  7224                           
  7225                           ; BSR set to: 0
  7226  0027C6  84CA               	bsf	4042,2,c	;volatile
  7227                           
  7228                           ; BSR set to: 0
  7229  0027C8  0012               	return		;funcret
  7230  0027CA                     __end_of_OpenTimer2:
  7231                           	opt stack 0
  7232                           tblptru	equ	0xFF8
  7233                           tblptrh	equ	0xFF7
  7234                           tblptrl	equ	0xFF6
  7235                           tablat	equ	0xFF5
  7236                           prodh	equ	0xFF4
  7237                           prodl	equ	0xFF3
  7238                           intcon	equ	0xFF2
  7239                           intcon2	equ	0xFF1
  7240                           postinc0	equ	0xFEE
  7241                           wreg	equ	0xFE8
  7242                           indf2	equ	0xFDF
  7243                           fsr2h	equ	0xFDA
  7244                           fsr2l	equ	0xFD9
  7245                           status	equ	0xFD8
  7246                           
  7247 ;; *************** function _OpenEPWM1 *****************
  7248 ;; Defined at:
  7249 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;  period          1    wreg     unsigned char 
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;  period          1   14[BANK0 ] unsigned char 
  7254 ;; Return value:  Size  Location     Type
  7255 ;;		None               void
  7256 ;; Registers used:
  7257 ;;		wreg, status,2
  7258 ;; Tracked objects:
  7259 ;;		On entry : 0/0
  7260 ;;		On exit  : 0/0
  7261 ;;		Unchanged: 0/0
  7262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7263 ;;      Params:         0       0       0       0
  7264 ;;      Locals:         0       1       0       0
  7265 ;;      Temps:          0       0       0       0
  7266 ;;      Totals:         0       1       0       0
  7267 ;;Total ram usage:        1 bytes
  7268 ;; Hardware stack levels used:    1
  7269 ;; Hardware stack levels required when called:    3
  7270 ;; This function calls:
  7271 ;;		Nothing
  7272 ;; This function is called by:
  7273 ;;		_main
  7274 ;; This function uses a non-reentrant model
  7275 ;;
  7276                           
  7277                           	psect	text17
  7278  0027F6                     __ptext17:
  7279                           	opt stack 0
  7280  0027F6                     _OpenEPWM1:
  7281                           	opt stack 27
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;incstack = 0
  7285                           ;OpenEPWM1@period stored from wreg
  7286  0027F6  0100               	movlb	0	; () banked
  7287  0027F8  6F6E               	movwf	OpenEPWM1@period& (0+255),b
  7288  0027FA  0E0C               	movlw	12
  7289  0027FC  6EBA               	movwf	4026,c	;volatile
  7290  0027FE  94CA               	bcf	4042,2,c	;volatile
  7291  002800  C06E  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  7292  002804  84CA               	bsf	4042,2,c	;volatile
  7293  002806  0012               	return		;funcret
  7294  002808                     __end_of_OpenEPWM1:
  7295                           	opt stack 0
  7296                           tblptru	equ	0xFF8
  7297                           tblptrh	equ	0xFF7
  7298                           tblptrl	equ	0xFF6
  7299                           tablat	equ	0xFF5
  7300                           prodh	equ	0xFF4
  7301                           prodl	equ	0xFF3
  7302                           intcon	equ	0xFF2
  7303                           intcon2	equ	0xFF1
  7304                           postinc0	equ	0xFEE
  7305                           wreg	equ	0xFE8
  7306                           indf2	equ	0xFDF
  7307                           fsr2h	equ	0xFDA
  7308                           fsr2l	equ	0xFD9
  7309                           status	equ	0xFD8
  7310                           
  7311 ;; *************** function _CANisTXwarningON *****************
  7312 ;; Defined at:
  7313 ;;		line 1119 in file "H:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;		None
  7316 ;; Auto vars:     Size  Location     Type
  7317 ;;		None
  7318 ;; Return value:  Size  Location     Type
  7319 ;;                  1    wreg      unsigned char 
  7320 ;; Registers used:
  7321 ;;		wreg
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7327 ;;      Params:         0       0       0       0
  7328 ;;      Locals:         0       0       0       0
  7329 ;;      Temps:          0       0       0       0
  7330 ;;      Totals:         0       0       0       0
  7331 ;;Total ram usage:        0 bytes
  7332 ;; Hardware stack levels used:    1
  7333 ;; Hardware stack levels required when called:    3
  7334 ;; This function calls:
  7335 ;;		Nothing
  7336 ;; This function is called by:
  7337 ;;		_main
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           
  7341                           	psect	text18
  7342  002808                     __ptext18:
  7343                           	opt stack 0
  7344  002808                     _CANisTXwarningON:
  7345                           	opt stack 27
  7346                           
  7347                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7348                           
  7349                           ;incstack = 0
  7350  002808  A474               	btfss	3956,2,c	;volatile
  7351  00280A  D002               	goto	u6160
  7352  00280C  0E01               	movlw	1
  7353  00280E  0012               	return	
  7354  002810                     u6160:
  7355  002810  0E00               	movlw	0
  7356  002812  0012               	return	
  7357  002814                     __end_of_CANisTXwarningON:
  7358                           	opt stack 0
  7359                           tblptru	equ	0xFF8
  7360                           tblptrh	equ	0xFF7
  7361                           tblptrl	equ	0xFF6
  7362                           tablat	equ	0xFF5
  7363                           prodh	equ	0xFF4
  7364                           prodl	equ	0xFF3
  7365                           intcon	equ	0xFF2
  7366                           intcon2	equ	0xFF1
  7367                           postinc0	equ	0xFEE
  7368                           wreg	equ	0xFE8
  7369                           indf2	equ	0xFDF
  7370                           fsr2h	equ	0xFDA
  7371                           fsr2l	equ	0xFD9
  7372                           status	equ	0xFD8
  7373                           
  7374 ;; *************** function _CANisRXwarningON *****************
  7375 ;; Defined at:
  7376 ;;		line 1127 in file "H:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;		None
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;		None
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  1    wreg      unsigned char 
  7383 ;; Registers used:
  7384 ;;		wreg
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7390 ;;      Params:         0       0       0       0
  7391 ;;      Locals:         0       0       0       0
  7392 ;;      Temps:          0       0       0       0
  7393 ;;      Totals:         0       0       0       0
  7394 ;;Total ram usage:        0 bytes
  7395 ;; Hardware stack levels used:    1
  7396 ;; Hardware stack levels required when called:    3
  7397 ;; This function calls:
  7398 ;;		Nothing
  7399 ;; This function is called by:
  7400 ;;		_main
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           	psect	text19
  7405  002814                     __ptext19:
  7406                           	opt stack 0
  7407  002814                     _CANisRXwarningON:
  7408                           	opt stack 27
  7409                           
  7410                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7411                           
  7412                           ;incstack = 0
  7413  002814  A274               	btfss	3956,1,c	;volatile
  7414  002816  D002               	goto	u6170
  7415  002818  0E01               	movlw	1
  7416  00281A  0012               	return	
  7417  00281C                     u6170:
  7418  00281C  0E00               	movlw	0
  7419  00281E  0012               	return	
  7420  002820                     __end_of_CANisRXwarningON:
  7421                           	opt stack 0
  7422                           tblptru	equ	0xFF8
  7423                           tblptrh	equ	0xFF7
  7424                           tblptrl	equ	0xFF6
  7425                           tablat	equ	0xFF5
  7426                           prodh	equ	0xFF4
  7427                           prodl	equ	0xFF3
  7428                           intcon	equ	0xFF2
  7429                           intcon2	equ	0xFF1
  7430                           postinc0	equ	0xFEE
  7431                           wreg	equ	0xFE8
  7432                           indf2	equ	0xFDF
  7433                           fsr2h	equ	0xFDA
  7434                           fsr2l	equ	0xFD9
  7435                           status	equ	0xFD8
  7436                           
  7437 ;; *************** function _ISR_bassa *****************
  7438 ;; Defined at:
  7439 ;;		line 76 in file "motore.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;		None
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;		None
  7444 ;; Return value:  Size  Location     Type
  7445 ;;		None               void
  7446 ;; Registers used:
  7447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7453 ;;      Params:         0       0       0       0
  7454 ;;      Locals:         0       0       0       0
  7455 ;;      Temps:         17       0       0       0
  7456 ;;      Totals:        17       0       0       0
  7457 ;;Total ram usage:       17 bytes
  7458 ;; Hardware stack levels used:    1
  7459 ;; Hardware stack levels required when called:    2
  7460 ;; This function calls:
  7461 ;;		_CANisRxReady
  7462 ;;		_CANreceiveMessage
  7463 ;; This function is called by:
  7464 ;;		Interrupt level 1
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           	psect	intcodelo
  7469  000018                     __pintcodelo:
  7470                           	opt stack 0
  7471  000018                     _ISR_bassa:
  7472                           	opt stack 25
  7473                           
  7474                           ;incstack = 0
  7475  000018  8049               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7476  00001A  CFD8 F036          	movff	status,??_ISR_bassa
  7477  00001E  CFE8 F037          	movff	wreg,??_ISR_bassa+1
  7478  000022  CFE0 F038          	movff	bsr,??_ISR_bassa+2
  7479  000026  CFFA F039          	movff	pclath,??_ISR_bassa+3
  7480  00002A  CFFB F03A          	movff	pclatu,??_ISR_bassa+4
  7481  00002E  CFE9 F03B          	movff	fsr0l,??_ISR_bassa+5
  7482  000032  CFEA F03C          	movff	fsr0h,??_ISR_bassa+6
  7483  000036  CFE1 F03D          	movff	fsr1l,??_ISR_bassa+7
  7484  00003A  CFE2 F03E          	movff	fsr1h,??_ISR_bassa+8
  7485  00003E  CFD9 F03F          	movff	fsr2l,??_ISR_bassa+9
  7486  000042  CFDA F040          	movff	fsr2h,??_ISR_bassa+10
  7487  000046  CFF3 F041          	movff	prodl,??_ISR_bassa+11
  7488  00004A  CFF4 F042          	movff	prodh,??_ISR_bassa+12
  7489  00004E  CFF6 F043          	movff	tblptrl,??_ISR_bassa+13
  7490  000052  CFF7 F044          	movff	tblptrh,??_ISR_bassa+14
  7491  000056  CFF8 F045          	movff	tblptru,??_ISR_bassa+15
  7492  00005A  CFF5 F046          	movff	tablat,??_ISR_bassa+16
  7493                           
  7494                           ;motore.c: 77: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7495  00005E  A0A4               	btfss	4004,0,c	;volatile
  7496  000060  B2A4               	btfsc	4004,1,c	;volatile
  7497  000062  D001               	goto	i1l3768
  7498  000064  D07D               	goto	i1l670
  7499  000066                     i1l3768:
  7500                           
  7501                           ;motore.c: 78: if (CANisRxReady()) {
  7502  000066  ECF0  F013         	call	_CANisRxReady	;wreg free
  7503  00006A  0900               	iorlw	0
  7504  00006C  B4D8               	btfsc	status,2,c
  7505  00006E  D06B               	goto	i1l656
  7506                           
  7507                           ;motore.c: 79: CANreceiveMessage(&msg);
  7508  000070  0E1B               	movlw	low _msg
  7509  000072  6E2A               	movwf	CANreceiveMessage@msg,c
  7510  000074  0E00               	movlw	high _msg
  7511  000076  6E2B               	movwf	CANreceiveMessage@msg+1,c
  7512  000078  EC1F  F00A         	call	_CANreceiveMessage	;wreg free
  7513                           
  7514                           ;motore.c: 80: if (msg.RTR == 1) {
  7515  00007C  0429               	decf	_msg+14,w,c
  7516  00007E  A4D8               	btfss	status,2,c
  7517  000080  D01E               	goto	i1l3778
  7518                           
  7519                           ;motore.c: 81: if (message_sent == 0) {
  7520  000082  B847               	btfsc	_message_sent/(0+8),_message_sent& (0+7),c
  7521  000084  D00F               	goto	i1l658
  7522                           
  7523                           ;motore.c: 82: id = msg.identifier;
  7524  000086  C01B  F00D         	movff	_msg,_id
  7525  00008A  C01C  F00E         	movff	_msg+1,_id+1
  7526  00008E  C01D  F00F         	movff	_msg+2,_id+2
  7527  000092  C01E  F010         	movff	_msg+3,_id+3
  7528                           
  7529                           ;motore.c: 83: remote_frame = msg.RTR;
  7530  000096  A029               	btfss	_msg+14,0,c
  7531  000098  D002               	goto	i1u435_20
  7532  00009A  8A47               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7533  00009C  D001               	goto	i1u436_25
  7534  00009E                     i1u435_20:
  7535  00009E  9A47               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7536  0000A0                     i1u436_25:
  7537                           
  7538                           ;motore.c: 84: message_sent = 1;
  7539  0000A0  8847               	bsf	_message_sent/(0+8),_message_sent& (0+7),c
  7540                           
  7541                           ;motore.c: 85: } else {
  7542  0000A2  D00D               	goto	i1l3778
  7543  0000A4                     i1l658:
  7544                           
  7545                           ;motore.c: 86: id1 = msg.identifier;
  7546  0000A4  C01B  F011         	movff	_msg,_id1
  7547  0000A8  C01C  F012         	movff	_msg+1,_id1+1
  7548  0000AC  C01D  F013         	movff	_msg+2,_id1+2
  7549  0000B0  C01E  F014         	movff	_msg+3,_id1+3
  7550                           
  7551                           ;motore.c: 87: remote_frame1 = msg.RTR;
  7552  0000B4  A029               	btfss	_msg+14,0,c
  7553  0000B6  D002               	goto	i1u437_20
  7554  0000B8  8C47               	bsf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  7555  0000BA  D001               	goto	i1l3778
  7556  0000BC                     i1u437_20:
  7557  0000BC  9C47               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  7558  0000BE                     i1l3778:
  7559                           
  7560                           ;motore.c: 88: }
  7561                           ;motore.c: 89: }
  7562                           ;motore.c: 90: if (msg.identifier == 0b00000000000000000000000000010) {
  7563  0000BE  0E02               	movlw	2
  7564  0000C0  181B               	xorwf	_msg,w,c
  7565  0000C2  101C               	iorwf	_msg+1,w,c
  7566  0000C4  101D               	iorwf	_msg+2,w,c
  7567  0000C6  101E               	iorwf	_msg+3,w,c
  7568  0000C8  A4D8               	btfss	status,2,c
  7569  0000CA  D00E               	goto	i1l3782
  7570                           
  7571                           ;motore.c: 91: currentSpeed = msg.data[0];
  7572  0000CC  C01F  F0BC         	movff	_msg+4,_currentSpeed
  7573                           
  7574                           ;motore.c: 92: dir = msg.data[1];
  7575  0000D0  C020  F0A9         	movff	_msg+5,_dir
  7576  0000D4  0100               	movlb	0	; () banked
  7577  0000D6  6BAA               	clrf	(_dir+1)& (0+255),b
  7578                           
  7579                           ;motore.c: 93: previousTimeCounter = timeCounter;
  7580  0000D8  C015  F099         	movff	_timeCounter,_previousTimeCounter
  7581  0000DC  C016  F09A         	movff	_timeCounter+1,_previousTimeCounter+1
  7582  0000E0  C017  F09B         	movff	_timeCounter+2,_previousTimeCounter+2
  7583  0000E4  C018  F09C         	movff	_timeCounter+3,_previousTimeCounter+3
  7584  0000E8                     i1l3782:
  7585                           
  7586                           ;motore.c: 94: }
  7587                           ;motore.c: 95: if (msg.identifier == 0b00000000000000000000000000001) {
  7588  0000E8  041B               	decf	_msg,w,c
  7589  0000EA  101C               	iorwf	_msg+1,w,c
  7590  0000EC  101D               	iorwf	_msg+2,w,c
  7591  0000EE  101E               	iorwf	_msg+3,w,c
  7592  0000F0  A4D8               	btfss	status,2,c
  7593  0000F2  D004               	goto	i1l3788
  7594                           
  7595                           ;motore.c: 96: currentSpeed = 0;
  7596  0000F4  0E00               	movlw	0
  7597  0000F6  0100               	movlb	0	; () banked
  7598  0000F8  6FBC               	movwf	_currentSpeed& (0+255),b
  7599                           
  7600                           ; BSR set to: 0
  7601                           ;motore.c: 97: PORTAbits.RA1 = 1;
  7602  0000FA  8280               	bsf	3968,1,c	;volatile
  7603  0000FC                     i1l3788:
  7604                           
  7605                           ;motore.c: 98: }
  7606                           ;motore.c: 99: if (msg.identifier == 0b00000000000000000000000000010) {
  7607  0000FC  0E02               	movlw	2
  7608  0000FE  181B               	xorwf	_msg,w,c
  7609  000100  101C               	iorwf	_msg+1,w,c
  7610  000102  101D               	iorwf	_msg+2,w,c
  7611  000104  101E               	iorwf	_msg+3,w,c
  7612  000106  A4D8               	btfss	status,2,c
  7613  000108  D005               	goto	i1l3792
  7614                           
  7615                           ;motore.c: 100: left_speed = msg.data[0];
  7616  00010A  C01F  F0B0         	movff	_msg+4,_left_speed
  7617                           
  7618                           ;motore.c: 101: right_speed = msg.data[1];
  7619  00010E  C020  F0B3         	movff	_msg+5,_right_speed
  7620                           
  7621                           ;motore.c: 102: speed_fetched = 1;
  7622  000112  8048               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
  7623  000114                     i1l3792:
  7624                           
  7625                           ;motore.c: 103: }
  7626                           ;motore.c: 104: if (msg.identifier == 0b00000000000000000000000000001) {
  7627  000114  041B               	decf	_msg,w,c
  7628  000116  101C               	iorwf	_msg+1,w,c
  7629  000118  101D               	iorwf	_msg+2,w,c
  7630  00011A  101E               	iorwf	_msg+3,w,c
  7631  00011C  B4D8               	btfsc	status,2,c
  7632  00011E  D007               	goto	i1l3798
  7633  000120  D012               	goto	i1l656
  7634  000122                     i1l665:
  7635  000122  8247               	bsf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  7636                           
  7637                           ;motore.c: 107: break;
  7638  000124  D00E               	goto	i1l666
  7639  000126                     i1l667:
  7640  000126  8647               	bsf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  7641                           
  7642                           ;motore.c: 109: break;
  7643  000128  D00C               	goto	i1l666
  7644  00012A                     i1l668:
  7645  00012A  8447               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  7646                           
  7647                           ;motore.c: 112: }
  7648                           
  7649                           ;motore.c: 111: break;
  7650  00012C  D00A               	goto	i1l666
  7651  00012E                     i1l3798:
  7652  00012E  501F               	movf	_msg+4,w,c
  7653                           
  7654                           ; Switch size 1, requested type "space"
  7655                           ; Number of cases is 3, Range of values is 1 to 3
  7656                           ; switch strategies available:
  7657                           ; Name         Instructions Cycles
  7658                           ; simple_byte           10     6 (average)
  7659                           ;	Chosen strategy is simple_byte
  7660  000130  0A01               	xorlw	1	; case 1
  7661  000132  B4D8               	btfsc	status,2,c
  7662  000134  D7F6               	goto	i1l665
  7663  000136  0A03               	xorlw	3	; case 2
  7664  000138  B4D8               	btfsc	status,2,c
  7665  00013A  D7F5               	goto	i1l667
  7666  00013C  0A01               	xorlw	1	; case 3
  7667  00013E  B4D8               	btfsc	status,2,c
  7668  000140  D7F4               	goto	i1l668
  7669  000142                     i1l666:
  7670                           
  7671                           ;motore.c: 113: PIR3bits.RXB0IF = 0;
  7672  000142  90A4               	bcf	4004,0,c	;volatile
  7673                           
  7674                           ;motore.c: 114: PIR3bits.RXB1IF = 0;
  7675  000144  92A4               	bcf	4004,1,c	;volatile
  7676  000146                     i1l656:
  7677                           
  7678                           ;motore.c: 115: }
  7679                           ;motore.c: 116: }
  7680                           ;motore.c: 117: if (PIR2bits.TMR3IF) {
  7681  000146  A2A1               	btfss	4001,1,c	;volatile
  7682  000148  D00B               	goto	i1l670
  7683                           
  7684                           ;motore.c: 118: timeCounter++;
  7685  00014A  0E01               	movlw	1
  7686  00014C  2615               	addwf	_timeCounter,f,c
  7687  00014E  0E00               	movlw	0
  7688  000150  2216               	addwfc	_timeCounter+1,f,c
  7689  000152  2217               	addwfc	_timeCounter+2,f,c
  7690  000154  2218               	addwfc	_timeCounter+3,f,c
  7691                           
  7692                           ;motore.c: 119: TMR3H = 0x63;
  7693  000156  0E63               	movlw	99
  7694  000158  6EB3               	movwf	4019,c	;volatile
  7695                           
  7696                           ;motore.c: 120: TMR3L = 0xC0;
  7697  00015A  0EC0               	movlw	192
  7698  00015C  6EB2               	movwf	4018,c	;volatile
  7699                           
  7700                           ;motore.c: 121: PIR2bits.TMR3IF = 0;
  7701  00015E  92A1               	bcf	4001,1,c	;volatile
  7702  000160                     i1l670:
  7703  000160  C046  FFF5         	movff	??_ISR_bassa+16,tablat
  7704  000164  C045  FFF8         	movff	??_ISR_bassa+15,tblptru
  7705  000168  C044  FFF7         	movff	??_ISR_bassa+14,tblptrh
  7706  00016C  C043  FFF6         	movff	??_ISR_bassa+13,tblptrl
  7707  000170  C042  FFF4         	movff	??_ISR_bassa+12,prodh
  7708  000174  C041  FFF3         	movff	??_ISR_bassa+11,prodl
  7709  000178  C040  FFDA         	movff	??_ISR_bassa+10,fsr2h
  7710  00017C  C03F  FFD9         	movff	??_ISR_bassa+9,fsr2l
  7711  000180  C03E  FFE2         	movff	??_ISR_bassa+8,fsr1h
  7712  000184  C03D  FFE1         	movff	??_ISR_bassa+7,fsr1l
  7713  000188  C03C  FFEA         	movff	??_ISR_bassa+6,fsr0h
  7714  00018C  C03B  FFE9         	movff	??_ISR_bassa+5,fsr0l
  7715  000190  C03A  FFFB         	movff	??_ISR_bassa+4,pclatu
  7716  000194  C039  FFFA         	movff	??_ISR_bassa+3,pclath
  7717  000198  C038  FFE0         	movff	??_ISR_bassa+2,bsr
  7718  00019C  C037  FFE8         	movff	??_ISR_bassa+1,wreg
  7719  0001A0  C036  FFD8         	movff	??_ISR_bassa,status
  7720  0001A4  9049               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7721  0001A6  0010               	retfie	
  7722  0001A8                     __end_of_ISR_bassa:
  7723                           	opt stack 0
  7724                           pclatu	equ	0xFFB
  7725                           pclath	equ	0xFFA
  7726                           tblptru	equ	0xFF8
  7727                           tblptrh	equ	0xFF7
  7728                           tblptrl	equ	0xFF6
  7729                           tablat	equ	0xFF5
  7730                           prodh	equ	0xFF4
  7731                           prodl	equ	0xFF3
  7732                           intcon	equ	0xFF2
  7733                           intcon2	equ	0xFF1
  7734                           postinc0	equ	0xFEE
  7735                           fsr0h	equ	0xFEA
  7736                           fsr0l	equ	0xFE9
  7737                           wreg	equ	0xFE8
  7738                           fsr1h	equ	0xFE2
  7739                           fsr1l	equ	0xFE1
  7740                           bsr	equ	0xFE0
  7741                           indf2	equ	0xFDF
  7742                           fsr2h	equ	0xFDA
  7743                           fsr2l	equ	0xFD9
  7744                           status	equ	0xFD8
  7745                           
  7746 ;; *************** function _CANreceiveMessage *****************
  7747 ;; Defined at:
  7748 ;;		line 528 in file "H:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;  msg             2    0[COMRAM] PTR struct .
  7751 ;;		 -> msg(15), 
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;  tamp            1   11[COMRAM] unsigned char 
  7754 ;;  error           1   10[COMRAM] unsigned char 
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  1    wreg      unsigned char 
  7757 ;; Registers used:
  7758 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7759 ;; Tracked objects:
  7760 ;;		On entry : 0/0
  7761 ;;		On exit  : 0/0
  7762 ;;		Unchanged: 0/0
  7763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7764 ;;      Params:         2       0       0       0
  7765 ;;      Locals:         2       0       0       0
  7766 ;;      Temps:          8       0       0       0
  7767 ;;      Totals:        12       0       0       0
  7768 ;;Total ram usage:       12 bytes
  7769 ;; Hardware stack levels used:    1
  7770 ;; Hardware stack levels required when called:    1
  7771 ;; This function calls:
  7772 ;;		Nothing
  7773 ;; This function is called by:
  7774 ;;		_ISR_bassa
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777                           
  7778                           	psect	text21
  7779  00143E                     __ptext21:
  7780                           	opt stack 0
  7781  00143E                     _CANreceiveMessage:
  7782                           	opt stack 25
  7783                           
  7784                           ;inc\CANlib.h: 530: BYTE tamp;
  7785                           ;inc\CANlib.h: 531: BYTE error = 0;
  7786                           
  7787                           ;incstack = 0
  7788  00143E  0E00               	movlw	0
  7789  001440  6E34               	movwf	CANreceiveMessage@error,c
  7790                           
  7791                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7792  001442  BE74               	btfsc	3956,7,c	;volatile
  7793                           
  7794                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7795  001444  8034               	bsf	CANreceiveMessage@error,0,c
  7796                           
  7797                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7798  001446  BC74               	btfsc	3956,6,c	;volatile
  7799                           
  7800                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7801  001448  8234               	bsf	CANreceiveMessage@error,1,c
  7802                           
  7803                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7804  00144A  010F               	movlb	15	; () banked
  7805  00144C  AF50               	btfss	80,7,b	;volatile
  7806  00144E  D143               	goto	i1l414
  7807                           
  7808                           ; BSR set to: 15
  7809                           ;inc\CANlib.h: 541: {
  7810                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7811  001450  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7812  001454  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7813  001458  6ADE               	clrf	postinc2,c
  7814  00145A  6ADE               	clrf	postinc2,c
  7815  00145C  6ADE               	clrf	postinc2,c
  7816  00145E  6ADD               	clrf	postdec2,c
  7817                           
  7818                           ; BSR set to: 15
  7819                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7820  001460  EE20 F004          	lfsr	2,4
  7821  001464  502A               	movf	CANreceiveMessage@msg,w,c
  7822  001466  26D9               	addwf	fsr2l,f,c
  7823  001468  502B               	movf	CANreceiveMessage@msg+1,w,c
  7824  00146A  22DA               	addwfc	fsr2h,f,c
  7825  00146C  CF56 FFDF          	movff	3926,indf2	;volatile
  7826                           
  7827                           ; BSR set to: 15
  7828                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7829  001470  EE20 F005          	lfsr	2,5
  7830  001474  502A               	movf	CANreceiveMessage@msg,w,c
  7831  001476  26D9               	addwf	fsr2l,f,c
  7832  001478  502B               	movf	CANreceiveMessage@msg+1,w,c
  7833  00147A  22DA               	addwfc	fsr2h,f,c
  7834  00147C  CF57 FFDF          	movff	3927,indf2	;volatile
  7835                           
  7836                           ; BSR set to: 15
  7837                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7838  001480  EE20 F006          	lfsr	2,6
  7839  001484  502A               	movf	CANreceiveMessage@msg,w,c
  7840  001486  26D9               	addwf	fsr2l,f,c
  7841  001488  502B               	movf	CANreceiveMessage@msg+1,w,c
  7842  00148A  22DA               	addwfc	fsr2h,f,c
  7843  00148C  CF58 FFDF          	movff	3928,indf2	;volatile
  7844                           
  7845                           ; BSR set to: 15
  7846                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7847  001490  EE20 F007          	lfsr	2,7
  7848  001494  502A               	movf	CANreceiveMessage@msg,w,c
  7849  001496  26D9               	addwf	fsr2l,f,c
  7850  001498  502B               	movf	CANreceiveMessage@msg+1,w,c
  7851  00149A  22DA               	addwfc	fsr2h,f,c
  7852  00149C  CF59 FFDF          	movff	3929,indf2	;volatile
  7853                           
  7854                           ; BSR set to: 15
  7855                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7856  0014A0  EE20 F008          	lfsr	2,8
  7857  0014A4  502A               	movf	CANreceiveMessage@msg,w,c
  7858  0014A6  26D9               	addwf	fsr2l,f,c
  7859  0014A8  502B               	movf	CANreceiveMessage@msg+1,w,c
  7860  0014AA  22DA               	addwfc	fsr2h,f,c
  7861  0014AC  CF5A FFDF          	movff	3930,indf2	;volatile
  7862                           
  7863                           ; BSR set to: 15
  7864                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7865  0014B0  EE20 F009          	lfsr	2,9
  7866  0014B4  502A               	movf	CANreceiveMessage@msg,w,c
  7867  0014B6  26D9               	addwf	fsr2l,f,c
  7868  0014B8  502B               	movf	CANreceiveMessage@msg+1,w,c
  7869  0014BA  22DA               	addwfc	fsr2h,f,c
  7870  0014BC  CF5B FFDF          	movff	3931,indf2	;volatile
  7871                           
  7872                           ; BSR set to: 15
  7873                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7874  0014C0  EE20 F00A          	lfsr	2,10
  7875  0014C4  502A               	movf	CANreceiveMessage@msg,w,c
  7876  0014C6  26D9               	addwf	fsr2l,f,c
  7877  0014C8  502B               	movf	CANreceiveMessage@msg+1,w,c
  7878  0014CA  22DA               	addwfc	fsr2h,f,c
  7879  0014CC  CF5C FFDF          	movff	3932,indf2	;volatile
  7880                           
  7881                           ; BSR set to: 15
  7882                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7883  0014D0  EE20 F00B          	lfsr	2,11
  7884  0014D4  502A               	movf	CANreceiveMessage@msg,w,c
  7885  0014D6  26D9               	addwf	fsr2l,f,c
  7886  0014D8  502B               	movf	CANreceiveMessage@msg+1,w,c
  7887  0014DA  22DA               	addwfc	fsr2h,f,c
  7888  0014DC  CF5D FFDF          	movff	3933,indf2	;volatile
  7889                           
  7890                           ; BSR set to: 15
  7891                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7892  0014E0  EE20 F00E          	lfsr	2,14
  7893  0014E4  502A               	movf	CANreceiveMessage@msg,w,c
  7894  0014E6  26D9               	addwf	fsr2l,f,c
  7895  0014E8  502B               	movf	CANreceiveMessage@msg+1,w,c
  7896  0014EA  22DA               	addwfc	fsr2h,f,c
  7897  0014EC  010F               	movlb	15	; () banked
  7898  0014EE  AD55               	btfss	85,6,b	;volatile
  7899  0014F0  D002               	goto	i1u386_20
  7900  0014F2  0E01               	movlw	1
  7901  0014F4  D001               	goto	i1u386_26
  7902  0014F6                     i1u386_20:
  7903  0014F6  0E00               	movlw	0
  7904  0014F8                     i1u386_26:
  7905  0014F8  6EDF               	movwf	indf2,c
  7906                           
  7907                           ; BSR set to: 15
  7908                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7909  0014FA  EE20 F00D          	lfsr	2,13
  7910  0014FE  502A               	movf	CANreceiveMessage@msg,w,c
  7911  001500  26D9               	addwf	fsr2l,f,c
  7912  001502  502B               	movf	CANreceiveMessage@msg+1,w,c
  7913  001504  22DA               	addwfc	fsr2h,f,c
  7914  001506  010F               	movlb	15	; () banked
  7915  001508  5155               	movf	85,w,b	;volatile
  7916  00150A  0B0F               	andlw	15
  7917  00150C  6EDF               	movwf	indf2,c
  7918                           
  7919                           ; BSR set to: 15
  7920                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7921  00150E  EE20 F00C          	lfsr	2,12
  7922  001512  502A               	movf	CANreceiveMessage@msg,w,c
  7923  001514  26D9               	addwf	fsr2l,f,c
  7924  001516  502B               	movf	CANreceiveMessage@msg+1,w,c
  7925  001518  22DA               	addwfc	fsr2h,f,c
  7926  00151A  010F               	movlb	15	; () banked
  7927  00151C  A752               	btfss	82,3,b	;volatile
  7928  00151E  D002               	goto	i1u387_20
  7929  001520  0E01               	movlw	1
  7930  001522  D001               	goto	i1u387_26
  7931  001524                     i1u387_20:
  7932  001524  0E00               	movlw	0
  7933  001526                     i1u387_26:
  7934  001526  6EDF               	movwf	indf2,c
  7935                           
  7936                           ; BSR set to: 15
  7937                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7938  001528  010F               	movlb	15	; () banked
  7939  00152A  B752               	btfsc	82,3,b	;volatile
  7940  00152C  D044               	goto	i1l3480
  7941                           
  7942                           ; BSR set to: 15
  7943                           ;inc\CANlib.h: 559: {
  7944                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7945  00152E  CF51 F02C          	movff	3921,??_CANreceiveMessage	;volatile
  7946  001532  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7947  001534  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7948  001536  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7949  001538  0E03               	movlw	3
  7950  00153A                     i1u389_25:
  7951  00153A  90D8               	bcf	status,0,c
  7952  00153C  362C               	rlcf	??_CANreceiveMessage,f,c
  7953  00153E  362D               	rlcf	??_CANreceiveMessage+1,f,c
  7954  001540  362E               	rlcf	??_CANreceiveMessage+2,f,c
  7955  001542  362F               	rlcf	??_CANreceiveMessage+3,f,c
  7956  001544  2EE8               	decfsz	wreg,f,c
  7957  001546  D7F9               	goto	i1u389_25
  7958  001548  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7959  00154C  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7960  001550  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  7961  001554  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7962  001558  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7963  00155C  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7964                           
  7965                           ; BSR set to: 15
  7966                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7967  001560  010F               	movlb	15	; () banked
  7968  001562  3952               	swapf	82,w,b	;volatile
  7969  001564  42E8               	rrncf	wreg,f,c
  7970  001566  0B07               	andlw	7
  7971  001568  0B07               	andlw	7
  7972  00156A  6E35               	movwf	CANreceiveMessage@tamp,c
  7973                           
  7974                           ; BSR set to: 15
  7975                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7976  00156C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7977  001570  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7978  001574  CFDE F02C          	movff	postinc2,??_CANreceiveMessage
  7979  001578  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+1
  7980  00157C  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+2
  7981  001580  CFDE F02F          	movff	postinc2,??_CANreceiveMessage+3
  7982  001584  5035               	movf	CANreceiveMessage@tamp,w,c
  7983  001586  242C               	addwf	??_CANreceiveMessage,w,c
  7984  001588  6E30               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7985  00158A  0E00               	movlw	0
  7986  00158C  202D               	addwfc	??_CANreceiveMessage+1,w,c
  7987  00158E  6E31               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7988  001590  0E00               	movlw	0
  7989  001592  202E               	addwfc	??_CANreceiveMessage+2,w,c
  7990  001594  6E32               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7991  001596  0E00               	movlw	0
  7992  001598  202F               	addwfc	??_CANreceiveMessage+3,w,c
  7993  00159A  6E33               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7994  00159C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7995  0015A0  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7996  0015A4  C030  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7997  0015A8  C031  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7998  0015AC  C032  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7999  0015B0  C033  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8000                           
  8001                           ;inc\CANlib.h: 563: }
  8002  0015B4  D08D               	goto	i1l3506
  8003  0015B6                     i1l3480:
  8004                           
  8005                           ; BSR set to: 15
  8006                           ;inc\CANlib.h: 564: else
  8007                           ;inc\CANlib.h: 565: {
  8008                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  8009  0015B6  CF54 F02C          	movff	3924,??_CANreceiveMessage	;volatile
  8010  0015BA  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8011  0015BC  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8012  0015BE  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8013  0015C0  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8014  0015C4  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8015  0015C8  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  8016  0015CC  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8017  0015D0  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8018  0015D4  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8019                           
  8020                           ; BSR set to: 15
  8021                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  8022  0015D8  CF53 F02C          	movff	3923,??_CANreceiveMessage	;volatile
  8023  0015DC  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8024  0015DE  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8025  0015E0  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8026  0015E2  C02E  F02F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8027  0015E6  C02D  F02E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8028  0015EA  C02C  F02D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8029  0015EE  6A2C               	clrf	??_CANreceiveMessage,c
  8030  0015F0  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8031  0015F4  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8032  0015F8  502C               	movf	??_CANreceiveMessage,w,c
  8033  0015FA  26DE               	addwf	postinc2,f,c
  8034  0015FC  502D               	movf	??_CANreceiveMessage+1,w,c
  8035  0015FE  22DE               	addwfc	postinc2,f,c
  8036  001600  502E               	movf	??_CANreceiveMessage+2,w,c
  8037  001602  22DE               	addwfc	postinc2,f,c
  8038  001604  502F               	movf	??_CANreceiveMessage+3,w,c
  8039  001606  22DE               	addwfc	postinc2,f,c
  8040                           
  8041                           ; BSR set to: 15
  8042                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  8043  001608  010F               	movlb	15	; () banked
  8044  00160A  A152               	btfss	82,0,b	;volatile
  8045  00160C  D00C               	goto	i1l3488
  8046                           
  8047                           ; BSR set to: 15
  8048                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  8049  00160E  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8050  001612  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8051  001616  0E00               	movlw	0
  8052  001618  12DE               	iorwf	postinc2,f,c
  8053  00161A  0E00               	movlw	0
  8054  00161C  12DE               	iorwf	postinc2,f,c
  8055  00161E  0E01               	movlw	1
  8056  001620  12DE               	iorwf	postinc2,f,c
  8057  001622  0E00               	movlw	0
  8058  001624  12DE               	iorwf	postinc2,f,c
  8059  001626                     i1l3488:
  8060                           
  8061                           ; BSR set to: 15
  8062                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  8063  001626  010F               	movlb	15	; () banked
  8064  001628  A352               	btfss	82,1,b	;volatile
  8065  00162A  D00C               	goto	i1l3492
  8066                           
  8067                           ; BSR set to: 15
  8068                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  8069  00162C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8070  001630  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8071  001634  0E00               	movlw	0
  8072  001636  12DE               	iorwf	postinc2,f,c
  8073  001638  0E00               	movlw	0
  8074  00163A  12DE               	iorwf	postinc2,f,c
  8075  00163C  0E02               	movlw	2
  8076  00163E  12DE               	iorwf	postinc2,f,c
  8077  001640  0E00               	movlw	0
  8078  001642  12DE               	iorwf	postinc2,f,c
  8079  001644                     i1l3492:
  8080                           
  8081                           ; BSR set to: 15
  8082                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  8083  001644  010F               	movlb	15	; () banked
  8084  001646  AB52               	btfss	82,5,b	;volatile
  8085  001648  D00C               	goto	i1l3496
  8086                           
  8087                           ; BSR set to: 15
  8088                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  8089  00164A  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8090  00164E  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8091  001652  0E00               	movlw	0
  8092  001654  12DE               	iorwf	postinc2,f,c
  8093  001656  0E00               	movlw	0
  8094  001658  12DE               	iorwf	postinc2,f,c
  8095  00165A  0E04               	movlw	4
  8096  00165C  12DE               	iorwf	postinc2,f,c
  8097  00165E  0E00               	movlw	0
  8098  001660  12DE               	iorwf	postinc2,f,c
  8099  001662                     i1l3496:
  8100                           
  8101                           ; BSR set to: 15
  8102                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8103  001662  010F               	movlb	15	; () banked
  8104  001664  AD52               	btfss	82,6,b	;volatile
  8105  001666  D00C               	goto	i1l3500
  8106                           
  8107                           ; BSR set to: 15
  8108                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  8109  001668  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8110  00166C  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8111  001670  0E00               	movlw	0
  8112  001672  12DE               	iorwf	postinc2,f,c
  8113  001674  0E00               	movlw	0
  8114  001676  12DE               	iorwf	postinc2,f,c
  8115  001678  0E08               	movlw	8
  8116  00167A  12DE               	iorwf	postinc2,f,c
  8117  00167C  0E00               	movlw	0
  8118  00167E  12DE               	iorwf	postinc2,f,c
  8119  001680                     i1l3500:
  8120                           
  8121                           ; BSR set to: 15
  8122                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8123  001680  010F               	movlb	15	; () banked
  8124  001682  AF52               	btfss	82,7,b	;volatile
  8125  001684  D00C               	goto	i1l3504
  8126                           
  8127                           ; BSR set to: 15
  8128                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  8129  001686  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8130  00168A  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8131  00168E  0E00               	movlw	0
  8132  001690  12DE               	iorwf	postinc2,f,c
  8133  001692  0E00               	movlw	0
  8134  001694  12DE               	iorwf	postinc2,f,c
  8135  001696  0E10               	movlw	16
  8136  001698  12DE               	iorwf	postinc2,f,c
  8137  00169A  0E00               	movlw	0
  8138  00169C  12DE               	iorwf	postinc2,f,c
  8139  00169E                     i1l3504:
  8140                           
  8141                           ; BSR set to: 15
  8142                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8143  00169E  CF51 F02C          	movff	3921,??_CANreceiveMessage	;volatile
  8144  0016A2  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8145  0016A4  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8146  0016A6  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8147  0016A8  0E15               	movlw	21
  8148  0016AA                     i1u395_25:
  8149  0016AA  90D8               	bcf	status,0,c
  8150  0016AC  362C               	rlcf	??_CANreceiveMessage,f,c
  8151  0016AE  362D               	rlcf	??_CANreceiveMessage+1,f,c
  8152  0016B0  362E               	rlcf	??_CANreceiveMessage+2,f,c
  8153  0016B2  362F               	rlcf	??_CANreceiveMessage+3,f,c
  8154  0016B4  2EE8               	decfsz	wreg,f,c
  8155  0016B6  D7F9               	goto	i1u395_25
  8156  0016B8  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8157  0016BC  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8158  0016C0  502C               	movf	??_CANreceiveMessage,w,c
  8159  0016C2  12DE               	iorwf	postinc2,f,c
  8160  0016C4  502D               	movf	??_CANreceiveMessage+1,w,c
  8161  0016C6  12DE               	iorwf	postinc2,f,c
  8162  0016C8  502E               	movf	??_CANreceiveMessage+2,w,c
  8163  0016CA  12DE               	iorwf	postinc2,f,c
  8164  0016CC  502F               	movf	??_CANreceiveMessage+3,w,c
  8165  0016CE  12DE               	iorwf	postinc2,f,c
  8166  0016D0                     i1l3506:
  8167                           
  8168                           ; BSR set to: 15
  8169                           ;inc\CANlib.h: 581: }
  8170                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8171  0016D0  010F               	movlb	15	; () banked
  8172  0016D2  9F50               	bcf	80,7,b	;volatile
  8173                           
  8174                           ; BSR set to: 15
  8175                           ;inc\CANlib.h: 584: return (error);
  8176                           ;	Return value of _CANreceiveMessage is never used
  8177  0016D4  0012               	return	
  8178  0016D6                     i1l414:
  8179                           
  8180                           ; BSR set to: 15
  8181                           ;inc\CANlib.h: 585: }
  8182                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8183  0016D6  AE60               	btfss	3936,7,c	;volatile
  8184  0016D8  0012               	return	
  8185                           
  8186                           ; BSR set to: 15
  8187                           ;inc\CANlib.h: 588: {
  8188                           ;inc\CANlib.h: 589: msg->identifier = 0;
  8189  0016DA  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8190  0016DE  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8191  0016E2  6ADE               	clrf	postinc2,c
  8192  0016E4  6ADE               	clrf	postinc2,c
  8193  0016E6  6ADE               	clrf	postinc2,c
  8194  0016E8  6ADD               	clrf	postdec2,c
  8195                           
  8196                           ; BSR set to: 15
  8197                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  8198  0016EA  EE20 F004          	lfsr	2,4
  8199  0016EE  502A               	movf	CANreceiveMessage@msg,w,c
  8200  0016F0  26D9               	addwf	fsr2l,f,c
  8201  0016F2  502B               	movf	CANreceiveMessage@msg+1,w,c
  8202  0016F4  22DA               	addwfc	fsr2h,f,c
  8203  0016F6  CF66 FFDF          	movff	3942,indf2	;volatile
  8204                           
  8205                           ; BSR set to: 15
  8206                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  8207  0016FA  EE20 F005          	lfsr	2,5
  8208  0016FE  502A               	movf	CANreceiveMessage@msg,w,c
  8209  001700  26D9               	addwf	fsr2l,f,c
  8210  001702  502B               	movf	CANreceiveMessage@msg+1,w,c
  8211  001704  22DA               	addwfc	fsr2h,f,c
  8212  001706  CF67 FFDF          	movff	3943,indf2	;volatile
  8213                           
  8214                           ; BSR set to: 15
  8215                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  8216  00170A  EE20 F006          	lfsr	2,6
  8217  00170E  502A               	movf	CANreceiveMessage@msg,w,c
  8218  001710  26D9               	addwf	fsr2l,f,c
  8219  001712  502B               	movf	CANreceiveMessage@msg+1,w,c
  8220  001714  22DA               	addwfc	fsr2h,f,c
  8221  001716  CF68 FFDF          	movff	3944,indf2	;volatile
  8222                           
  8223                           ; BSR set to: 15
  8224                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  8225  00171A  EE20 F007          	lfsr	2,7
  8226  00171E  502A               	movf	CANreceiveMessage@msg,w,c
  8227  001720  26D9               	addwf	fsr2l,f,c
  8228  001722  502B               	movf	CANreceiveMessage@msg+1,w,c
  8229  001724  22DA               	addwfc	fsr2h,f,c
  8230  001726  CF69 FFDF          	movff	3945,indf2	;volatile
  8231                           
  8232                           ; BSR set to: 15
  8233                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  8234  00172A  EE20 F008          	lfsr	2,8
  8235  00172E  502A               	movf	CANreceiveMessage@msg,w,c
  8236  001730  26D9               	addwf	fsr2l,f,c
  8237  001732  502B               	movf	CANreceiveMessage@msg+1,w,c
  8238  001734  22DA               	addwfc	fsr2h,f,c
  8239  001736  CF6A FFDF          	movff	3946,indf2	;volatile
  8240                           
  8241                           ; BSR set to: 15
  8242                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  8243  00173A  EE20 F009          	lfsr	2,9
  8244  00173E  502A               	movf	CANreceiveMessage@msg,w,c
  8245  001740  26D9               	addwf	fsr2l,f,c
  8246  001742  502B               	movf	CANreceiveMessage@msg+1,w,c
  8247  001744  22DA               	addwfc	fsr2h,f,c
  8248  001746  CF6B FFDF          	movff	3947,indf2	;volatile
  8249                           
  8250                           ; BSR set to: 15
  8251                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  8252  00174A  EE20 F00A          	lfsr	2,10
  8253  00174E  502A               	movf	CANreceiveMessage@msg,w,c
  8254  001750  26D9               	addwf	fsr2l,f,c
  8255  001752  502B               	movf	CANreceiveMessage@msg+1,w,c
  8256  001754  22DA               	addwfc	fsr2h,f,c
  8257  001756  CF6C FFDF          	movff	3948,indf2	;volatile
  8258                           
  8259                           ; BSR set to: 15
  8260                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  8261  00175A  EE20 F00B          	lfsr	2,11
  8262  00175E  502A               	movf	CANreceiveMessage@msg,w,c
  8263  001760  26D9               	addwf	fsr2l,f,c
  8264  001762  502B               	movf	CANreceiveMessage@msg+1,w,c
  8265  001764  22DA               	addwfc	fsr2h,f,c
  8266  001766  CF6D FFDF          	movff	3949,indf2	;volatile
  8267                           
  8268                           ; BSR set to: 15
  8269                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8270  00176A  EE20 F00E          	lfsr	2,14
  8271  00176E  502A               	movf	CANreceiveMessage@msg,w,c
  8272  001770  26D9               	addwf	fsr2l,f,c
  8273  001772  502B               	movf	CANreceiveMessage@msg+1,w,c
  8274  001774  22DA               	addwfc	fsr2h,f,c
  8275  001776  AC65               	btfss	3941,6,c	;volatile
  8276  001778  D002               	goto	i1u397_20
  8277  00177A  0E01               	movlw	1
  8278  00177C  D001               	goto	i1u397_26
  8279  00177E                     i1u397_20:
  8280  00177E  0E00               	movlw	0
  8281  001780                     i1u397_26:
  8282  001780  6EDF               	movwf	indf2,c
  8283                           
  8284                           ; BSR set to: 15
  8285                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8286  001782  EE20 F00D          	lfsr	2,13
  8287  001786  502A               	movf	CANreceiveMessage@msg,w,c
  8288  001788  26D9               	addwf	fsr2l,f,c
  8289  00178A  502B               	movf	CANreceiveMessage@msg+1,w,c
  8290  00178C  22DA               	addwfc	fsr2h,f,c
  8291  00178E  5065               	movf	3941,w,c	;volatile
  8292  001790  0B0F               	andlw	15
  8293  001792  6EDF               	movwf	indf2,c
  8294                           
  8295                           ; BSR set to: 15
  8296                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8297  001794  EE20 F00C          	lfsr	2,12
  8298  001798  502A               	movf	CANreceiveMessage@msg,w,c
  8299  00179A  26D9               	addwf	fsr2l,f,c
  8300  00179C  502B               	movf	CANreceiveMessage@msg+1,w,c
  8301  00179E  22DA               	addwfc	fsr2h,f,c
  8302  0017A0  A662               	btfss	3938,3,c	;volatile
  8303  0017A2  D002               	goto	i1u398_20
  8304  0017A4  0E01               	movlw	1
  8305  0017A6  D001               	goto	i1u398_26
  8306  0017A8                     i1u398_20:
  8307  0017A8  0E00               	movlw	0
  8308  0017AA                     i1u398_26:
  8309  0017AA  6EDF               	movwf	indf2,c
  8310                           
  8311                           ; BSR set to: 15
  8312                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8313  0017AC  B662               	btfsc	3938,3,c	;volatile
  8314  0017AE  D043               	goto	i1l3542
  8315                           
  8316                           ; BSR set to: 15
  8317                           ;inc\CANlib.h: 606: {
  8318                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8319  0017B0  CF61 F02C          	movff	3937,??_CANreceiveMessage	;volatile
  8320  0017B4  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8321  0017B6  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8322  0017B8  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8323  0017BA  0E03               	movlw	3
  8324  0017BC                     i1u400_25:
  8325  0017BC  90D8               	bcf	status,0,c
  8326  0017BE  362C               	rlcf	??_CANreceiveMessage,f,c
  8327  0017C0  362D               	rlcf	??_CANreceiveMessage+1,f,c
  8328  0017C2  362E               	rlcf	??_CANreceiveMessage+2,f,c
  8329  0017C4  362F               	rlcf	??_CANreceiveMessage+3,f,c
  8330  0017C6  2EE8               	decfsz	wreg,f,c
  8331  0017C8  D7F9               	goto	i1u400_25
  8332  0017CA  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8333  0017CE  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8334  0017D2  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  8335  0017D6  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8336  0017DA  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8337  0017DE  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8338                           
  8339                           ; BSR set to: 15
  8340                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8341  0017E2  3862               	swapf	3938,w,c	;volatile
  8342  0017E4  42E8               	rrncf	wreg,f,c
  8343  0017E6  0B07               	andlw	7
  8344  0017E8  0B07               	andlw	7
  8345  0017EA  6E35               	movwf	CANreceiveMessage@tamp,c
  8346                           
  8347                           ; BSR set to: 15
  8348                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8349  0017EC  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8350  0017F0  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8351  0017F4  CFDE F02C          	movff	postinc2,??_CANreceiveMessage
  8352  0017F8  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+1
  8353  0017FC  CFDE F02E          	movff	postinc2,??_CANreceiveMessage+2
  8354  001800  CFDE F02F          	movff	postinc2,??_CANreceiveMessage+3
  8355  001804  5035               	movf	CANreceiveMessage@tamp,w,c
  8356  001806  242C               	addwf	??_CANreceiveMessage,w,c
  8357  001808  6E30               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8358  00180A  0E00               	movlw	0
  8359  00180C  202D               	addwfc	??_CANreceiveMessage+1,w,c
  8360  00180E  6E31               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8361  001810  0E00               	movlw	0
  8362  001812  202E               	addwfc	??_CANreceiveMessage+2,w,c
  8363  001814  6E32               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8364  001816  0E00               	movlw	0
  8365  001818  202F               	addwfc	??_CANreceiveMessage+3,w,c
  8366  00181A  6E33               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8367  00181C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8368  001820  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8369  001824  C030  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8370  001828  C031  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8371  00182C  C032  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8372  001830  C033  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8373                           
  8374                           ;inc\CANlib.h: 610: }
  8375  001834  D088               	goto	i1l3568
  8376  001836                     i1l3542:
  8377                           
  8378                           ; BSR set to: 15
  8379                           ;inc\CANlib.h: 611: else
  8380                           ;inc\CANlib.h: 612: {
  8381                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8382  001836  CF64 F02C          	movff	3940,??_CANreceiveMessage	;volatile
  8383  00183A  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8384  00183C  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8385  00183E  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8386  001840  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8387  001844  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8388  001848  C02C  FFDE         	movff	??_CANreceiveMessage,postinc2
  8389  00184C  C02D  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8390  001850  C02E  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8391  001854  C02F  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8392                           
  8393                           ; BSR set to: 15
  8394                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8395  001858  CF63 F02C          	movff	3939,??_CANreceiveMessage	;volatile
  8396  00185C  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8397  00185E  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8398  001860  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8399  001862  C02E  F02F         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8400  001866  C02D  F02E         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8401  00186A  C02C  F02D         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8402  00186E  6A2C               	clrf	??_CANreceiveMessage,c
  8403  001870  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8404  001874  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8405  001878  502C               	movf	??_CANreceiveMessage,w,c
  8406  00187A  26DE               	addwf	postinc2,f,c
  8407  00187C  502D               	movf	??_CANreceiveMessage+1,w,c
  8408  00187E  22DE               	addwfc	postinc2,f,c
  8409  001880  502E               	movf	??_CANreceiveMessage+2,w,c
  8410  001882  22DE               	addwfc	postinc2,f,c
  8411  001884  502F               	movf	??_CANreceiveMessage+3,w,c
  8412  001886  22DE               	addwfc	postinc2,f,c
  8413                           
  8414                           ; BSR set to: 15
  8415                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8416  001888  A062               	btfss	3938,0,c	;volatile
  8417  00188A  D00C               	goto	i1l3550
  8418                           
  8419                           ; BSR set to: 15
  8420                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8421  00188C  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8422  001890  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8423  001894  0E00               	movlw	0
  8424  001896  12DE               	iorwf	postinc2,f,c
  8425  001898  0E00               	movlw	0
  8426  00189A  12DE               	iorwf	postinc2,f,c
  8427  00189C  0E01               	movlw	1
  8428  00189E  12DE               	iorwf	postinc2,f,c
  8429  0018A0  0E00               	movlw	0
  8430  0018A2  12DE               	iorwf	postinc2,f,c
  8431  0018A4                     i1l3550:
  8432                           
  8433                           ; BSR set to: 15
  8434                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8435  0018A4  A262               	btfss	3938,1,c	;volatile
  8436  0018A6  D00C               	goto	i1l3554
  8437                           
  8438                           ; BSR set to: 15
  8439                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8440  0018A8  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8441  0018AC  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8442  0018B0  0E00               	movlw	0
  8443  0018B2  12DE               	iorwf	postinc2,f,c
  8444  0018B4  0E00               	movlw	0
  8445  0018B6  12DE               	iorwf	postinc2,f,c
  8446  0018B8  0E02               	movlw	2
  8447  0018BA  12DE               	iorwf	postinc2,f,c
  8448  0018BC  0E00               	movlw	0
  8449  0018BE  12DE               	iorwf	postinc2,f,c
  8450  0018C0                     i1l3554:
  8451                           
  8452                           ; BSR set to: 15
  8453                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8454  0018C0  AA62               	btfss	3938,5,c	;volatile
  8455  0018C2  D00C               	goto	i1l3558
  8456                           
  8457                           ; BSR set to: 15
  8458                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8459  0018C4  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8460  0018C8  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8461  0018CC  0E00               	movlw	0
  8462  0018CE  12DE               	iorwf	postinc2,f,c
  8463  0018D0  0E00               	movlw	0
  8464  0018D2  12DE               	iorwf	postinc2,f,c
  8465  0018D4  0E04               	movlw	4
  8466  0018D6  12DE               	iorwf	postinc2,f,c
  8467  0018D8  0E00               	movlw	0
  8468  0018DA  12DE               	iorwf	postinc2,f,c
  8469  0018DC                     i1l3558:
  8470                           
  8471                           ; BSR set to: 15
  8472                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8473  0018DC  AC62               	btfss	3938,6,c	;volatile
  8474  0018DE  D00C               	goto	i1l3562
  8475                           
  8476                           ; BSR set to: 15
  8477                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8478  0018E0  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8479  0018E4  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8480  0018E8  0E00               	movlw	0
  8481  0018EA  12DE               	iorwf	postinc2,f,c
  8482  0018EC  0E00               	movlw	0
  8483  0018EE  12DE               	iorwf	postinc2,f,c
  8484  0018F0  0E08               	movlw	8
  8485  0018F2  12DE               	iorwf	postinc2,f,c
  8486  0018F4  0E00               	movlw	0
  8487  0018F6  12DE               	iorwf	postinc2,f,c
  8488  0018F8                     i1l3562:
  8489                           
  8490                           ; BSR set to: 15
  8491                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8492  0018F8  AE62               	btfss	3938,7,c	;volatile
  8493  0018FA  D00C               	goto	i1l3566
  8494                           
  8495                           ; BSR set to: 15
  8496                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8497  0018FC  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8498  001900  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8499  001904  0E00               	movlw	0
  8500  001906  12DE               	iorwf	postinc2,f,c
  8501  001908  0E00               	movlw	0
  8502  00190A  12DE               	iorwf	postinc2,f,c
  8503  00190C  0E10               	movlw	16
  8504  00190E  12DE               	iorwf	postinc2,f,c
  8505  001910  0E00               	movlw	0
  8506  001912  12DE               	iorwf	postinc2,f,c
  8507  001914                     i1l3566:
  8508                           
  8509                           ; BSR set to: 15
  8510                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8511  001914  CF61 F02C          	movff	3937,??_CANreceiveMessage	;volatile
  8512  001918  6A2D               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8513  00191A  6A2E               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8514  00191C  6A2F               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8515  00191E  0E15               	movlw	21
  8516  001920                     i1u406_25:
  8517  001920  90D8               	bcf	status,0,c
  8518  001922  362C               	rlcf	??_CANreceiveMessage,f,c
  8519  001924  362D               	rlcf	??_CANreceiveMessage+1,f,c
  8520  001926  362E               	rlcf	??_CANreceiveMessage+2,f,c
  8521  001928  362F               	rlcf	??_CANreceiveMessage+3,f,c
  8522  00192A  2EE8               	decfsz	wreg,f,c
  8523  00192C  D7F9               	goto	i1u406_25
  8524  00192E  C02A  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8525  001932  C02B  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8526  001936  502C               	movf	??_CANreceiveMessage,w,c
  8527  001938  12DE               	iorwf	postinc2,f,c
  8528  00193A  502D               	movf	??_CANreceiveMessage+1,w,c
  8529  00193C  12DE               	iorwf	postinc2,f,c
  8530  00193E  502E               	movf	??_CANreceiveMessage+2,w,c
  8531  001940  12DE               	iorwf	postinc2,f,c
  8532  001942  502F               	movf	??_CANreceiveMessage+3,w,c
  8533  001944  12DE               	iorwf	postinc2,f,c
  8534  001946                     i1l3568:
  8535                           
  8536                           ; BSR set to: 15
  8537                           ;inc\CANlib.h: 629: }
  8538                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8539  001946  9E60               	bcf	3936,7,c	;volatile
  8540                           
  8541                           ; BSR set to: 15
  8542                           ;inc\CANlib.h: 632: return (error);
  8543                           ;	Return value of _CANreceiveMessage is never used
  8544  001948  0012               	return	
  8545  00194A                     __end_of_CANreceiveMessage:
  8546                           	opt stack 0
  8547                           pclatu	equ	0xFFB
  8548                           pclath	equ	0xFFA
  8549                           tblptru	equ	0xFF8
  8550                           tblptrh	equ	0xFF7
  8551                           tblptrl	equ	0xFF6
  8552                           tablat	equ	0xFF5
  8553                           prodh	equ	0xFF4
  8554                           prodl	equ	0xFF3
  8555                           intcon	equ	0xFF2
  8556                           intcon2	equ	0xFF1
  8557                           postinc0	equ	0xFEE
  8558                           fsr0h	equ	0xFEA
  8559                           fsr0l	equ	0xFE9
  8560                           wreg	equ	0xFE8
  8561                           fsr1h	equ	0xFE2
  8562                           fsr1l	equ	0xFE1
  8563                           bsr	equ	0xFE0
  8564                           indf2	equ	0xFDF
  8565                           postinc2	equ	0xFDE
  8566                           postdec2	equ	0xFDD
  8567                           fsr2h	equ	0xFDA
  8568                           fsr2l	equ	0xFD9
  8569                           status	equ	0xFD8
  8570                           
  8571 ;; *************** function _CANisRxReady *****************
  8572 ;; Defined at:
  8573 ;;		line 1163 in file "H:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;		None
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;		None
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  1    wreg      unsigned char 
  8580 ;; Registers used:
  8581 ;;		wreg, status,2
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8587 ;;      Params:         0       0       0       0
  8588 ;;      Locals:         1       0       0       0
  8589 ;;      Temps:          0       0       0       0
  8590 ;;      Totals:         1       0       0       0
  8591 ;;Total ram usage:        1 bytes
  8592 ;; Hardware stack levels used:    1
  8593 ;; Hardware stack levels required when called:    1
  8594 ;; This function calls:
  8595 ;;		Nothing
  8596 ;; This function is called by:
  8597 ;;		_ISR_bassa
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           	psect	text22
  8602  0027E0                     __ptext22:
  8603                           	opt stack 0
  8604  0027E0                     _CANisRxReady:
  8605                           	opt stack 25
  8606                           
  8607                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8608                           
  8609                           ; BSR set to: 15
  8610                           ;incstack = 0
  8611  0027E0  0E01               	movlw	1
  8612  0027E2  6E2A               	movwf	_CANisRxReady$3035,c
  8613  0027E4  BE60               	btfsc	3936,7,c	;volatile
  8614  0027E6  D005               	goto	i1l565
  8615  0027E8  010F               	movlb	15	; () banked
  8616  0027EA  BF50               	btfsc	80,7,b	;volatile
  8617  0027EC  D002               	goto	i1l565
  8618                           
  8619                           ; BSR set to: 15
  8620  0027EE  0E00               	movlw	0
  8621  0027F0  6E2A               	movwf	_CANisRxReady$3035,c
  8622  0027F2                     i1l565:
  8623  0027F2  502A               	movf	_CANisRxReady$3035,w,c
  8624  0027F4  0012               	return	
  8625  0027F6                     __end_of_CANisRxReady:
  8626                           	opt stack 0
  8627                           pclatu	equ	0xFFB
  8628                           pclath	equ	0xFFA
  8629                           tblptru	equ	0xFF8
  8630                           tblptrh	equ	0xFF7
  8631                           tblptrl	equ	0xFF6
  8632                           tablat	equ	0xFF5
  8633                           prodh	equ	0xFF4
  8634                           prodl	equ	0xFF3
  8635                           intcon	equ	0xFF2
  8636                           intcon2	equ	0xFF1
  8637                           postinc0	equ	0xFEE
  8638                           fsr0h	equ	0xFEA
  8639                           fsr0l	equ	0xFE9
  8640                           wreg	equ	0xFE8
  8641                           fsr1h	equ	0xFE2
  8642                           fsr1l	equ	0xFE1
  8643                           bsr	equ	0xFE0
  8644                           indf2	equ	0xFDF
  8645                           postinc2	equ	0xFDE
  8646                           postdec2	equ	0xFDD
  8647                           fsr2h	equ	0xFDA
  8648                           fsr2l	equ	0xFD9
  8649                           status	equ	0xFD8
  8650                           
  8651 ;; *************** function _ISR_alta *****************
  8652 ;; Defined at:
  8653 ;;		line 68 in file "motore.c"
  8654 ;; Parameters:    Size  Location     Type
  8655 ;;		None
  8656 ;; Auto vars:     Size  Location     Type
  8657 ;;		None
  8658 ;; Return value:  Size  Location     Type
  8659 ;;		None               void
  8660 ;; Registers used:
  8661 ;;		None
  8662 ;; Tracked objects:
  8663 ;;		On entry : 0/0
  8664 ;;		On exit  : 0/0
  8665 ;;		Unchanged: 0/0
  8666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8667 ;;      Params:         0       0       0       0
  8668 ;;      Locals:         0       0       0       0
  8669 ;;      Temps:          0      14       0       0
  8670 ;;      Totals:         0      14       0       0
  8671 ;;Total ram usage:       14 bytes
  8672 ;; Hardware stack levels used:    1
  8673 ;; This function calls:
  8674 ;;		Nothing
  8675 ;; This function is called by:
  8676 ;;		Interrupt level 2
  8677 ;; This function uses a non-reentrant model
  8678 ;;
  8679                           
  8680                           	psect	intcode
  8681  000008                     __pintcode:
  8682                           	opt stack 0
  8683  000008                     _ISR_alta:
  8684                           	opt stack 25
  8685                           
  8686                           ;incstack = 0
  8687  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8688  00000A  CFFA F060          	movff	pclath,??_ISR_alta
  8689  00000E  CFFB F061          	movff	pclatu,??_ISR_alta+1
  8690  000012  EDD1  F012         	call	int_func,f	;refresh shadow registers
  8691                           pclatu	equ	0xFFB
  8692                           pclath	equ	0xFFA
  8693                           tblptru	equ	0xFF8
  8694                           tblptrh	equ	0xFF7
  8695                           tblptrl	equ	0xFF6
  8696                           tablat	equ	0xFF5
  8697                           prodh	equ	0xFF4
  8698                           prodl	equ	0xFF3
  8699                           intcon	equ	0xFF2
  8700                           intcon2	equ	0xFF1
  8701                           postinc0	equ	0xFEE
  8702                           fsr0h	equ	0xFEA
  8703                           fsr0l	equ	0xFE9
  8704                           wreg	equ	0xFE8
  8705                           fsr1h	equ	0xFE2
  8706                           fsr1l	equ	0xFE1
  8707                           bsr	equ	0xFE0
  8708                           indf2	equ	0xFDF
  8709                           postinc2	equ	0xFDE
  8710                           postdec2	equ	0xFDD
  8711                           fsr2h	equ	0xFDA
  8712                           fsr2l	equ	0xFD9
  8713                           status	equ	0xFD8
  8714                           
  8715                           	psect	intcode_body
  8716  0025A2                     __pintcode_body:
  8717                           	opt stack 25
  8718  0025A2                     int_func:
  8719                           	opt stack 25
  8720  0025A2  0006               	pop		; remove dummy address from shadow register refresh
  8721  0025A4  CFE9 F062          	movff	fsr0l,??_ISR_alta+2
  8722  0025A8  CFEA F063          	movff	fsr0h,??_ISR_alta+3
  8723  0025AC  CFE1 F064          	movff	fsr1l,??_ISR_alta+4
  8724  0025B0  CFE2 F065          	movff	fsr1h,??_ISR_alta+5
  8725  0025B4  CFD9 F066          	movff	fsr2l,??_ISR_alta+6
  8726  0025B8  CFDA F067          	movff	fsr2h,??_ISR_alta+7
  8727  0025BC  CFF3 F068          	movff	prodl,??_ISR_alta+8
  8728  0025C0  CFF4 F069          	movff	prodh,??_ISR_alta+9
  8729  0025C4  CFF6 F06A          	movff	tblptrl,??_ISR_alta+10
  8730  0025C8  CFF7 F06B          	movff	tblptrh,??_ISR_alta+11
  8731  0025CC  CFF8 F06C          	movff	tblptru,??_ISR_alta+12
  8732  0025D0  CFF5 F06D          	movff	tablat,??_ISR_alta+13
  8733  0025D4  C06D  FFF5         	movff	??_ISR_alta+13,tablat
  8734  0025D8  C06C  FFF8         	movff	??_ISR_alta+12,tblptru
  8735  0025DC  C06B  FFF7         	movff	??_ISR_alta+11,tblptrh
  8736  0025E0  C06A  FFF6         	movff	??_ISR_alta+10,tblptrl
  8737  0025E4  C069  FFF4         	movff	??_ISR_alta+9,prodh
  8738  0025E8  C068  FFF3         	movff	??_ISR_alta+8,prodl
  8739  0025EC  C067  FFDA         	movff	??_ISR_alta+7,fsr2h
  8740  0025F0  C066  FFD9         	movff	??_ISR_alta+6,fsr2l
  8741  0025F4  C065  FFE2         	movff	??_ISR_alta+5,fsr1h
  8742  0025F8  C064  FFE1         	movff	??_ISR_alta+4,fsr1l
  8743  0025FC  C063  FFEA         	movff	??_ISR_alta+3,fsr0h
  8744  002600  C062  FFE9         	movff	??_ISR_alta+2,fsr0l
  8745  002604  C061  FFFB         	movff	??_ISR_alta+1,pclatu
  8746  002608  C060  FFFA         	movff	??_ISR_alta,pclath
  8747  00260C  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8748  00260E  0011               	retfie		f
  8749  002610                     __end_of_ISR_alta:
  8750                           	opt stack 0
  8751  0000                     pclatu	equ	0xFFB
  8752                           pclath	equ	0xFFA
  8753                           tblptru	equ	0xFF8
  8754                           tblptrh	equ	0xFF7
  8755                           tblptrl	equ	0xFF6
  8756                           tablat	equ	0xFF5
  8757                           prodh	equ	0xFF4
  8758                           prodl	equ	0xFF3
  8759                           intcon	equ	0xFF2
  8760                           intcon2	equ	0xFF1
  8761                           postinc0	equ	0xFEE
  8762                           fsr0h	equ	0xFEA
  8763                           fsr0l	equ	0xFE9
  8764                           wreg	equ	0xFE8
  8765                           fsr1h	equ	0xFE2
  8766                           fsr1l	equ	0xFE1
  8767                           bsr	equ	0xFE0
  8768                           indf2	equ	0xFDF
  8769                           postinc2	equ	0xFDE
  8770                           postdec2	equ	0xFDD
  8771                           fsr2h	equ	0xFDA
  8772                           fsr2l	equ	0xFD9
  8773                           status	equ	0xFD8
  8774                           pclatu	equ	0xFFB
  8775                           pclath	equ	0xFFA
  8776                           tblptru	equ	0xFF8
  8777                           tblptrh	equ	0xFF7
  8778                           tblptrl	equ	0xFF6
  8779                           tablat	equ	0xFF5
  8780                           prodh	equ	0xFF4
  8781                           prodl	equ	0xFF3
  8782                           intcon	equ	0xFF2
  8783                           intcon2	equ	0xFF1
  8784                           postinc0	equ	0xFEE
  8785                           fsr0h	equ	0xFEA
  8786                           fsr0l	equ	0xFE9
  8787                           wreg	equ	0xFE8
  8788                           fsr1h	equ	0xFE2
  8789                           fsr1l	equ	0xFE1
  8790                           bsr	equ	0xFE0
  8791                           indf2	equ	0xFDF
  8792                           postinc2	equ	0xFDE
  8793                           postdec2	equ	0xFDD
  8794                           fsr2h	equ	0xFDA
  8795                           fsr2l	equ	0xFD9
  8796                           status	equ	0xFD8
  8797                           
  8798                           	psect	param0
  8799  0000                     pclatu	equ	0xFFB
  8800                           pclath	equ	0xFFA
  8801                           tblptru	equ	0xFF8
  8802                           tblptrh	equ	0xFF7
  8803                           tblptrl	equ	0xFF6
  8804                           tablat	equ	0xFF5
  8805                           prodh	equ	0xFF4
  8806                           prodl	equ	0xFF3
  8807                           intcon	equ	0xFF2
  8808                           intcon2	equ	0xFF1
  8809                           postinc0	equ	0xFEE
  8810                           fsr0h	equ	0xFEA
  8811                           fsr0l	equ	0xFE9
  8812                           wreg	equ	0xFE8
  8813                           fsr1h	equ	0xFE2
  8814                           fsr1l	equ	0xFE1
  8815                           bsr	equ	0xFE0
  8816                           indf2	equ	0xFDF
  8817                           postinc2	equ	0xFDE
  8818                           postdec2	equ	0xFDD
  8819                           fsr2h	equ	0xFDA
  8820                           fsr2l	equ	0xFD9
  8821                           status	equ	0xFD8
  8822                           
  8823                           	psect	temp
  8824  000049                     btemp:
  8825                           	opt stack 0
  8826  000049                     	ds	1
  8827  0000                     int$flags	set	btemp
  8828                           pclatu	equ	0xFFB
  8829                           pclath	equ	0xFFA
  8830                           tblptru	equ	0xFF8
  8831                           tblptrh	equ	0xFF7
  8832                           tblptrl	equ	0xFF6
  8833                           tablat	equ	0xFF5
  8834                           prodh	equ	0xFF4
  8835                           prodl	equ	0xFF3
  8836                           intcon	equ	0xFF2
  8837                           intcon2	equ	0xFF1
  8838                           postinc0	equ	0xFEE
  8839                           fsr0h	equ	0xFEA
  8840                           fsr0l	equ	0xFE9
  8841                           wreg	equ	0xFE8
  8842                           fsr1h	equ	0xFE2
  8843                           fsr1l	equ	0xFE1
  8844                           bsr	equ	0xFE0
  8845                           indf2	equ	0xFDF
  8846                           postinc2	equ	0xFDE
  8847                           postdec2	equ	0xFDD
  8848                           fsr2h	equ	0xFDA
  8849                           fsr2l	equ	0xFD9
  8850                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      72
    BANK0           160     49      94
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array(BANK0[8]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _delay_ms->___wmul
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->_CANsendMessage
    ___wmul->___awdiv

Critical Paths under _ISR_alta in BANK0

    None.

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   26740
                                             40 BANK0      9     9      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___awdiv
                             ___wmul
                                _abs
                    _battery_measure
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    4326
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1110
                                             28 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    8212
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                             28 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             14 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             14 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0    6081
                       _CANisTxReady
                     _CANsendMessage
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                             22 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1061
                                             14 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4289
                                             14 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      37
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     170
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _SetOutputEPWM1                                       2     1      1     340
                                             14 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _SetDCEPWM1                                           6     4      2     330
                                             14 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      62
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      31
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_alta                                            14    14      0       0
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   ___awdiv
   ___wmul
     ___awdiv (ARG)
   _abs
   _battery_measure
     _CANisTxReady
     _CANsendMessage
     ___awdiv
     ___wmul
       ___awdiv (ARG)
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul
       ___awdiv (ARG)
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_alta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     31      5E       4       58.8%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     1D      48       1       76.6%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A6       9        0.0%
DATA                 0      0      A6      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Jan 18 20:43:44 2016

              ??_CANisTXwarningON 006E              __end_of_CANSetFilter 0CB2  
                    ___awdiv@sign 0073                                _id 000D  
                              bsr 000FE0               ___wmul@multiplicand 0078  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 2610  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000              _previousTimeCounter1 009D  
            _previousTimeCounter2 00A1                               l400 125C  
                             l401 1266                               l402 1270  
                             l403 127A                               l500 09EE  
                             l501 09F2                               l406 138A  
                             l502 09FE                               l407 138E  
                             l511 0B0A                               l503 0A02  
                             l408 139A                               l512 0B0E  
                             l504 0A0E                               l440 1FF8  
                             l513 0B1A                               l505 0A12  
                             l441 1FFC                               l370 0DC4  
                             l530 0C66                               l522 0C26  
                             l514 0B1E                               l506 0A1E  
                             l450 2104                               l442 2008  
                             l362 2238                               l371 0D54  
                             l523 0C2A                               l515 0B2A  
                             l507 0A22                               l451 2110  
                             l443 200C                               l363 2242  
                             l372 0D5E                               l524 0C36  
                             l516 0B2E                               l508 0A2E  
                             l452 2114                               l444 2018  
                             l436 1FD8                               l373 0D68  
                             l525 0C3A                               l517 0B3A  
                             l453 2120                               l437 1FDC  
                             l382 11BA                               l374 0D72  
                             l526 0C46                               l518 0B3E  
                             l470 06B0                               l454 2124  
                             l438 1FE8                               l710 259E  
                             l383 0F4C                               l367 0F36  
                             l527 0C4A                               l519 0B4A  
                             l471 06BC                               l455 2130  
                             l447 20F0                               l439 1FEC  
                             l560 27A2                               l392 1106  
                             l384 0F50                               l368 0CC8  
                             l528 0C56                               l480 07C6  
                             l472 06C0                               l448 20F4  
                             l393 110A                               l385 1048  
                             l377 0E82                               l369 0CCC  
                             l529 0C5A                               l481 07CA  
                             l473 06CC                               l449 2100  
                             l394 1116                               l386 0FD8  
                             l378 0E86                               l722 252C  
                             l490 08D6                               l482 07D6  
                             l474 06D0                               l706 2578  
                             l387 0FE2                               l379 0E92  
                             l715 249C                               l491 08E2  
                             l483 07DA                               l475 06DC  
                             l467 069C                               l820 277A  
                             l388 0FEC                               l492 08E6  
                             l484 07E6                               l468 06A0  
                             l708 2574                               l397 11D0  
                             l389 0FF6                               l493 08F2  
                             l485 07EA                               l469 06AC  
                             l573 2714                               l398 11D4  
                             l494 08F6                               l486 07F6  
                             l478 07B6                               l399 12CC  
                             l495 0902                               l479 07BA  
                             l496 0906                               l497 0912  
                             l489 08D2                               l681 1C40  
                             l754 2658                               l682 1C32  
                             l683 1BF2                               l768 27C4  
                             l769 27C6                               l689 1C92  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                               _id1 0011  
                             _abs 2758                               _dir 00A9  
                             _msg 001B                               wreg 000FE8  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
                            ?_abs 006E                              l4020 201C  
                            l4200 0726                              l4112 03DC  
                            l4130 0496                              l4026 2062  
                            l5002 1D44                              l4052 2134  
                            l4302 0A78                              l5006 1D54  
                            l5008 1D64                              l4330 0B4E  
                            l4234 0840                              l4410 2246  
                            l4228 07FA                              l4148 0550  
                            l4076 026A                              l4262 0916  
                            l4166 060A                              l4094 0322  
                            l4414 224E                              l4336 0B94  
                            l4416 2292                              l4408 2230  
                            l4530 1000                              l4194 06E0  
                            l4364 0C6A                              l4268 095C  
                            l4606 1284                              l4550 10FA  
                            l4454 0D7C                              l4710 23F6  
                            l4702 23D4                              l4632 139E  
                            l4480 0E96                              l4296 0A32  
                            l4626 137E                              l4474 0E76  
                            l4706 23E2                              l4556 111A  
                            l4724 2706                              l3960 27D2  
                            l4690 2392                              l4844 2636  
                            l4692 239E                              l4684 2374  
                            l4916 19A6                              l4694 23A4  
                            l4678 235E                              l4934 19E2  
                            l4926 19C6                              l4848 2646  
                            l4882 24F2                              l3994 1F4C  
                            l3978 1E96                              l4938 19F0  
                            l4970 1C60                              l4868 2568  
                            l4980 1C80                              l4974 1C68  
                            l4992 1D2C                              l4984 1C94  
                            l4976 1C6C                              l4968 1C50  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u5100 04CC  
                            u5020 0358                              u5105 04C0  
                            u5025 034C                              u5115 052C  
                            u5035 03B8                              u6020 12A4  
                            u5140 0586                              u5060 0412  
                            u6030 12F0                              u5310 081A  
                            u5230 0700                              u6025 1298  
                            u5145 057A                              u5065 0406  
                            u6035 12E4                              u5315 080E  
                            u5235 06F4                              u5155 05E6  
                            u5075 0472                              u4700 1E12  
                            u6045 1350                              u6310 2586  
                            u6160 2810                              u4705 1E06  
                            u6170 281C                              u6410 1A54  
                            u4715 1E72                              u4740 1EC8  
                            u6325 2588                              u5630 0C8A  
                            u5550 0B6E                              u5470 0A52  
                            u5390 0936                              u4910 2154  
                            u4830 203C                              u6430 1AF4  
                            u6255 266C                              u6440 1B92  
                            u4745 1EBC                              u6530 1CF8  
                            u6450 1BD4                              u5635 0C7E  
                            u5555 0B62                              u5475 0A46  
                            u5395 092A                              u4915 2148  
                            u4835 2030                              u4755 1F28  
                            u5900 106C                              u4940 01E6  
                            u6607 2708                              u5760 0D9C  
                            u5905 1060                              u4945 01DA  
                            u5770 0DE8                              u5915 10CC  
                            u4955 0246                              u4980 029E  
                            u5765 0D90                              u6590 1DC8  
                            u5775 0DDC                              u5785 0E48  
                            u4985 0292                              u5890 1020  
                            u4995 02FE                              u5895 1014  
                            _TMR2 000FCC               __size_of_CANSetMask 039E  
                            abs@a 006E                              _main 194A  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 0049  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 01A8  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000000                  _CANOperationMode 27CA  
          __end_of_SetOutputEPWM1 2662                             ??_abs 0070  
      __size_of_CANreceiveMessage 050C                             ?_main 002A  
                 __end_of___awdiv 2400                   ___awdiv@divisor 0070  
                           _T2CON 000FCA                             _T3CON 000FB1  
                           i1l414 16D6                             i1l565 27F2  
                           i1l670 0160                             i1l656 0146  
                           i1l665 0122                             i1l666 0142  
                           i1l658 00A4                             i1l667 0126  
                           i1l668 012A                   ___awdiv@counter 0072  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
                           _PORTD 000F83                 _CANisRxReady$3035 002A  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
              __size_of_ISR_bassa 0190                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 0080                  __end_of_ISR_alta 2610  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           _vBatt 00AD                    __pbitbssCOMRAM 0238  
            __end_of_CANisRxReady 27F6                             tablat 000FF5  
            __end_of_CANisTxReady 27A8                             status 000FD8  
                  __CFG_PBADEN$ON 000000                        _SetDCEPWM1 2662  
                 __initialization 26A6          __size_of_battery_measure 0094  
                    __end_of_main 1DDE                   ?_SetOutputEPWM1 006E  
                          ??_main 0088                     __activetblptr 000002  
               _CANisTxReady$3033 006E                     _counter_array 0001  
                          _CANCON 000F6F                            _ADRESH 000FC4  
                ___awdiv@dividend 006E                   __CFG_BBSIZ$1024 000000  
                          i1l3500 1680                            i1l3504 169E  
                          i1l3506 16D0                            i1l3550 18A4  
                          i1l3542 1836                            i1l3480 15B6  
                          i1l3562 18F8                            i1l3554 18C0  
                          i1l3492 1644                            i1l3566 1914  
                          i1l3558 18DC                            i1l3568 1946  
                          i1l3496 1662                            i1l3488 1626  
                          i1l3782 00E8                            i1l3792 0114  
                          i1l3768 0066                            i1l3778 00BE  
                      _OpenTimer2 27A8                            i1l3788 00FC  
                          i1l3798 012E                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB0D4 000F6A  
                          _RXB1D0 000F56                            _RXB0D5 000F6B  
                          _RXB1D1 000F57                            _RXB0D6 000F6C  
                          _RXB1D2 000F58                            _RXB0D7 000F6D  
                          _RXB1D3 000F59                            _RXB1D4 000F5A  
                          _RXB1D5 000F5B                            _RXB1D6 000F5C  
                          _RXB1D7 000F5D                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _TXB1D2 000F38  
                          _TXB0D6 000F4C                            _TXB1D3 000F39  
                          _TXB0D7 000F4D                            _TXB2D0 000F26  
                          _TXB1D4 000F3A                            _TXB2D1 000F27  
                          _TXB1D5 000F3B                            _TXB2D2 000F28  
                          _TXB1D6 000F3C                            _TXB2D3 000F29  
                          _TXB1D7 000F3D                            _TXB2D4 000F2A  
                          _TXB2D5 000F2B                            _TXB2D6 000F2C  
                          _TXB2D7 000F2D                CANsendMessage@data 0072  
              CANsendMessage@tamp 007A                  __end_of_delay_ms 2722  
           __size_of_CANSetFilter 0B06                    __CFG_XINST$OFF 000000  
              __size_of_OpenEPWM1 0012                 __end_of_ISR_bassa 01A8  
                          ___wmul 2722                         ??___awdiv 0072  
                  __CFG_STVREN$ON 000000                      ??_CANSetMask 0073  
                          _errore 00AB                  OpenTimer2@config 006E  
                          clear_0 26AC                            clear_1 26BC  
                ___awdiv@quotient 0074          ?_configurazione_iniziale 002A  
                 __CFG_BOREN$BOHW 000000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                    _CANSetFilter 01AC                        __accesstop 0060  
         __end_of__initialization 26DA                __end_of_CANSetMask 217C  
                   ___rparam_used 000000         __size_of_CANisRXwarningON 000C  
                     ?_SetDCEPWM1 006E                    __pcstackCOMRAM 002A  
                    __pidataBANK0 2820                         ?_ISR_alta 002A  
               ??_battery_measure 007E             CANSetFilter@numBuffer 0077  
                 OpenEPWM1@period 006E         __size_of_CANisTXwarningON 000C  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 0024  
               __end_of_OpenEPWM1 2808          __end_of_CANOperationMode 27E0  
                      __pbssBANK0 0091                       ?_OpenTimer2 002A  
                      _data_array 00B4           __size_of_CANsendMessage 078C  
                         ?___wmul 0076                        ??_ISR_alta 0060  
              __size_of_send_data 0074                      _CANisRxReady 27E0  
                         _ECCPR1L 000FBB                           _CANSTAT 000F6E  
                    _CANisTxReady 2784                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01C6                         ?_delay_ms 007C  
                         _RXB0DLC 000F65                           _RXB1DLC 000F55  
                         _RXB0CON 000F60               __size_of_SetDCEPWM1 0044  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 0075          SetOutputEPWM1@outputmode 006E  
                      _correzione 00A7                  ??_SetOutputEPWM1 006F  
                         __Hparam 0000                        _left_speed 00B0  
                         __Lparam 0000                  delay_ms@value_ms 007C  
                         ___awdiv 2342                   __size_of___wmul 0036  
            CANInitialize@propSeg 0085                           __pcinit 26A6  
                         __ramtop 0300               __size_of_OpenTimer2 0022  
                         __ptext0 194A                           __ptext1 252E  
                         __ptext2 26E8                           __ptext3 2400  
                         __ptext4 217C                           __ptext5 1DDE  
                         __ptext6 01AC                           __ptext7 27CA  
                         __ptext8 249A                           __ptext9 2722  
                         _counter 0009                         _T2CONbits 000FCA  
                    __size_of_abs 002C                        _duty_cycle 0019  
                      ??_delay_ms 007E            CANreceiveMessage@error 0034  
                  __pintcode_body 25A2              end_of_initialization 26DA  
               __end_of_send_data 25A2                     __Lmediumconst 0000  
                         int_func 25A2                  _CANisRXwarningON 2814  
                   _CANInitialize 217C                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
                       _ISR_bassa 0018                         _PORTAbits 000F80  
                  CANSetMask@mask 006E                         _PORTCbits 000F82  
                  CANSetMask@tamp 0078                    _centralina_abs 0239  
                  CANSetMask@type 0072                  _CANisTXwarningON 2808  
                       _TRISDbits 000F95  __size_of_configurazione_iniziale 009A  
             _previousTimeCounter 0099           _clock_counter_reference 00A5  
                  _CANsendMessage 0CB2                  CANInitialize@BRP 007F  
                CANInitialize@SJW 007E                    ?_CANInitialize 007C  
                      main@period 0090                      ??_SetDCEPWM1 0070  
                 _battery_measure 249A                        ?_ISR_bassa 002A  
                  __end_of___wmul 2758                 __size_of_ISR_alta 2608  
             start_initialization 26A6                       __end_of_abs 2784  
              __end_of_SetDCEPWM1 26A6               CANSetMask@numBuffer 0077  
          __end_of_CANsendMessage 143E                 ?_CANOperationMode 002A  
                    ??_OpenTimer2 006E                         _OpenEPWM1 27F6  
              ??_CANOperationMode 006E        CANInitialize@FilterConfig1 0086  
      CANInitialize@FilterConfig2 0087                          ??___wmul 007A  
                     __pdataBANK0 00BC                  __CFG_LPT1OSC$OFF 000000  
              __end_of_OpenTimer2 27CA            CANInitialize@phaseSeg1 007C  
          CANInitialize@phaseSeg2 007D                       __pbssCOMRAM 0001  
                   __pcstackBANK0 0060                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72               SetDCEPWM1@dutycycle 006E  
               __size_of_delay_ms 003A                   ?_CANsendMessage 006E  
                      ?_OpenEPWM1 002A           __end_of_battery_measure 252E  
                 ??_CANInitialize 0081                         _can_retry 0238  
                    _currentSpeed 00BC                CANSetFilter@filter 006E  
                       __pintcode 0008                          ?___awdiv 006E  
                     ??_ISR_bassa 0036                       __pintcodelo 0018  
                        _ECCP1CON 000FBA          __end_of_CANisRXwarningON 2820  
                     _COMSTATbits 000F74        SetOutputEPWM1@outputconfig 006F  
                   _remote_frame1 023E           _configurazione_iniziale 2400  
                    _message_sent 023C             CANreceiveMessage@tamp 0035  
                  ___wmul@product 007A                          _IPR2bits 000FA2  
    _delay_quartz_frequency_value 00BD                          _PIE1bits 000F9D  
                        _IPR3bits 000FA5                          _PIE2bits 000FA0  
                       _send_data 252E                          _PIE3bits 000FA3  
        __end_of_CANisTXwarningON 2814                          i1u400_25 17BC  
                        i1u406_25 1920                          i1u435_20 009E  
                        i1u436_25 00A0                          i1u437_20 00BC  
                        i1u386_20 14F6                          i1u386_26 14F8  
                        i1u387_20 1524                          i1u395_25 16AA  
                        i1u387_26 1526                          i1u397_20 177E  
                        i1u389_25 153A                          i1u397_26 1780  
                        i1u398_20 17A8                          i1u398_26 17AA  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _ISR_alta 0008  
                        _TXB2EIDH 000F23                          _RXF3SIDH 000F0C  
                        _TXB2EIDL 000F24                          _RXF3SIDL 000F0D  
                        _RXF4SIDH 000F10                          _RXF4SIDL 000F11  
                        _RXF5SIDH 000F14                          _RXF5SIDL 000F15  
                        _RXM0EIDH 000F1A                          _RXM0EIDL 000F1B  
                        _TXB0SIDH 000F41                          _RXM1EIDH 000F1E  
                        _TXB0SIDL 000F42                          _RXM1EIDL 000F1F  
                        _TXB1SIDH 000F31                          _TXB1SIDL 000F32  
                        _TXB2SIDH 000F21                          _TXB2SIDL 000F22  
                        _RXM0SIDH 000F18                          _RXM0SIDL 000F19  
                        _RXM1SIDH 000F1C                          _RXM1SIDL 000F1D  
                        _RXERRCNT 000F75                          _TXERRCNT 000F76  
                      _ADCON0bits 000FC2                        _ADCON1bits 000FC1  
                      _ADCON2bits 000FC0                 ___wmul@multiplier 0076  
                   ?_CANSetFilter 006E                       _INTCON2bits 000FF1  
                      _CANCONbits 000F6F                       ??_OpenEPWM1 006E  
                ?_battery_measure 002A                          __Hparam0 0000  
                      ?_send_data 002A                          __Lparam0 0000  
                    _RXB0SIDLbits 000F62                  SetDCEPWM1@DCycle 0072  
                    _RXB1SIDLbits 000F52                _centralina_comando 023A  
                      _CANSetMask 1DDE                  __size_of___awdiv 00BE  
         __size_of_SetOutputEPWM1 0052                _currentSpeed_array 0091  
       ??_configurazione_iniziale 0088                      _RXF0SIDLbits 000F01  
                        _delay_ms 26E8                      _RXF1SIDLbits 000F05  
                  ??_CANSetFilter 0073                          __ptext10 2342  
                        __ptext11 0CB2                          __ptext12 2784  
                        __ptext21 143E                          __ptext13 2758  
                        __ptext22 27E0                          __ptext14 2610  
                        __ptext15 2662                          __ptext16 27A8  
                        __ptext17 27F6                          __ptext18 2808  
                        __ptext19 2814                      _RXF2SIDLbits 000F09  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                   _speed_fetched 0240                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 0074                      _remote_frame 023D  
                   __size_of_main 0494                          _duty_set 00AF  
            CANreceiveMessage@msg 002A                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 0049         __size_of_CANOperationMode 0016  
                   ?_CANisRxReady 002A                     ?_CANisTxReady 002A  
                     _RXB0DLCbits 000F65                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 143E  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                ??_CANsendMessage 0076                      _requestSpeed 00B2  
              ?_CANreceiveMessage 002A                      _request_sent 023F  
        CANsendMessage@identifier 006E                          intlevel1 0000  
                        intlevel2 0000                 _centralina_sterzo 023B  
                CANSetFilter@tamp 0078                  CANSetFilter@type 0072  
             ??_CANreceiveMessage 002C                       _TXB0DLCbits 000F45  
                     _right_speed 00B3                       _TXB1DLCbits 000F35  
                     _TXB0CONbits 000F40                       ??_send_data 007E  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 249A  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
                     _timeCounter 0015              CANOperationMode@mode 006E  
                  ??_CANisRxReady 002A                       ?_CANSetMask 006E  
                  ??_CANisTxReady 006E         __end_of_CANreceiveMessage 194A  
               ?_CANisRXwarningON 002A                ??_CANisRXwarningON 006E  
                     _previousPwm 00B1             __end_of_CANInitialize 2342  
               ?_CANisTXwarningON 002A  
