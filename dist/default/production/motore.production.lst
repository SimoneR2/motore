

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Mar 28 17:11:29 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           	psect	idataCOMRAM
    62  005352                     __pidataCOMRAM:
    63                           	opt stack 0
    64                           
    65                           ;initializer for _delay_quartz_frequency_value
    66  005352  10                 	db	16
    67                           
    68                           	psect	idataBANK0
    69  005350                     __pidataBANK0:
    70                           	opt stack 0
    71                           
    72                           ;initializer for _dir
    73  005350  0001               	dw	1
    74                           
    75                           	psect	smallconst
    76  000D00                     __psmallconst:
    77                           	opt stack 0
    78  000D00  00                 	db	0
    79  000D01                     exp@coeff:
    80                           	opt stack 0
    81  000D01  0000               	dw	0
    82  000D03  3F80               	dw	16256
    83  000D05  7218               	dw	29208
    84  000D07  3F31               	dw	16177
    85  000D09  FDF0               	dw	65008
    86  000D0B  3E75               	dw	15989
    87  000D0D  5847               	dw	22599
    88  000D0F  3D63               	dw	15715
    89  000D11  9558               	dw	38232
    90  000D13  3C1D               	dw	15389
    91  000D15  C482               	dw	50306
    92  000D17  3AAE               	dw	15022
    93  000D19  78A8               	dw	30888
    94  000D1B  3921               	dw	14625
    95  000D1D  93EF               	dw	37871
    96  000D1F  3780               	dw	14208
    97  000D21  92A0               	dw	37536
    98  000D23  35A7               	dw	13735
    99  000D25  5646               	dw	22086
   100  000D27  3415               	dw	13333
   101  000D29                     __end_ofexp@coeff:
   102                           	opt stack 0
   103  000D29                     log@coeff:
   104                           	opt stack 0
   105  000D29  0000               	dw	0
   106  000D2B  0000               	dw	0
   107  000D2D  FFC4               	dw	65476
   108  000D2F  3F7F               	dw	16255
   109  000D31  EF80               	dw	61312
   110  000D33  BEFF               	dw	48895
   111  000D35  E190               	dw	57744
   112  000D37  3EA9               	dw	16041
   113  000D39  82EC               	dw	33516
   114  000D3B  BE76               	dw	48758
   115  000D3D  AD82               	dw	44418
   116  000D3F  3E2B               	dw	15915
   117  000D41  3C0E               	dw	15374
   118  000D43  BDC3               	dw	48579
   119  000D45  D187               	dw	53639
   120  000D47  3D13               	dw	15635
   121  000D49  7841               	dw	30785
   122  000D4B  BBD3               	dw	48083
   123  000D4D                     __end_oflog@coeff:
   124                           	opt stack 0
   125  0000                     _RXB1CON	set	3920
   126  0000                     _RXB1CONbits	set	3920
   127  0000                     _RXB1D0	set	3926
   128  0000                     _RXB1D1	set	3927
   129  0000                     _RXB1D2	set	3928
   130  0000                     _RXB1D3	set	3929
   131  0000                     _RXB1D4	set	3930
   132  0000                     _RXB1D5	set	3931
   133  0000                     _RXB1D6	set	3932
   134  0000                     _RXB1D7	set	3933
   135  0000                     _RXB1DLC	set	3925
   136  0000                     _RXB1DLCbits	set	3925
   137  0000                     _RXB1EIDH	set	3923
   138  0000                     _RXB1EIDL	set	3924
   139  0000                     _RXB1SIDH	set	3921
   140  0000                     _RXB1SIDL	set	3922
   141  0000                     _RXB1SIDLbits	set	3922
   142  0000                     _RXF0EIDH	set	3842
   143  0000                     _RXF0EIDL	set	3843
   144  0000                     _RXF0SIDH	set	3840
   145  0000                     _RXF0SIDL	set	3841
   146  0000                     _RXF0SIDLbits	set	3841
   147  0000                     _RXF1EIDH	set	3846
   148  0000                     _RXF1EIDL	set	3847
   149  0000                     _RXF1SIDH	set	3844
   150  0000                     _RXF1SIDL	set	3845
   151  0000                     _RXF1SIDLbits	set	3845
   152  0000                     _RXF2EIDH	set	3850
   153  0000                     _RXF2EIDL	set	3851
   154  0000                     _RXF2SIDH	set	3848
   155  0000                     _RXF2SIDL	set	3849
   156  0000                     _RXF2SIDLbits	set	3849
   157  0000                     _RXF3EIDH	set	3854
   158  0000                     _RXF3EIDL	set	3855
   159  0000                     _RXF3SIDH	set	3852
   160  0000                     _RXF3SIDL	set	3853
   161  0000                     _RXF3SIDLbits	set	3853
   162  0000                     _RXF4EIDH	set	3858
   163  0000                     _RXF4EIDL	set	3859
   164  0000                     _RXF4SIDH	set	3856
   165  0000                     _RXF4SIDL	set	3857
   166  0000                     _RXF4SIDLbits	set	3857
   167  0000                     _RXF5EIDH	set	3862
   168  0000                     _RXF5EIDL	set	3863
   169  0000                     _RXF5SIDH	set	3860
   170  0000                     _RXF5SIDL	set	3861
   171  0000                     _RXF5SIDLbits	set	3861
   172  0000                     _RXM0EIDH	set	3866
   173  0000                     _RXM0EIDL	set	3867
   174  0000                     _RXM0SIDH	set	3864
   175  0000                     _RXM0SIDL	set	3865
   176  0000                     _RXM0SIDLbits	set	3865
   177  0000                     _RXM1EIDH	set	3870
   178  0000                     _RXM1EIDL	set	3871
   179  0000                     _RXM1SIDH	set	3868
   180  0000                     _RXM1SIDL	set	3869
   181  0000                     _RXM1SIDLbits	set	3869
   182  0000                     _TXB0CONbits	set	3904
   183  0000                     _TXB0D0	set	3910
   184  0000                     _TXB0D1	set	3911
   185  0000                     _TXB0D2	set	3912
   186  0000                     _TXB0D3	set	3913
   187  0000                     _TXB0D4	set	3914
   188  0000                     _TXB0D5	set	3915
   189  0000                     _TXB0D6	set	3916
   190  0000                     _TXB0D7	set	3917
   191  0000                     _TXB0DLC	set	3909
   192  0000                     _TXB0DLCbits	set	3909
   193  0000                     _TXB0EIDH	set	3907
   194  0000                     _TXB0EIDL	set	3908
   195  0000                     _TXB0SIDH	set	3905
   196  0000                     _TXB0SIDL	set	3906
   197  0000                     _TXB0SIDLbits	set	3906
   198  0000                     _TXB1CONbits	set	3888
   199  0000                     _TXB1D0	set	3894
   200  0000                     _TXB1D1	set	3895
   201  0000                     _TXB1D2	set	3896
   202  0000                     _TXB1D3	set	3897
   203  0000                     _TXB1D4	set	3898
   204  0000                     _TXB1D5	set	3899
   205  0000                     _TXB1D6	set	3900
   206  0000                     _TXB1D7	set	3901
   207  0000                     _TXB1DLC	set	3893
   208  0000                     _TXB1DLCbits	set	3893
   209  0000                     _TXB1EIDH	set	3891
   210  0000                     _TXB1EIDL	set	3892
   211  0000                     _TXB1SIDH	set	3889
   212  0000                     _TXB1SIDL	set	3890
   213  0000                     _TXB1SIDLbits	set	3890
   214  0000                     _TXB2CONbits	set	3872
   215  0000                     _TXB2D0	set	3878
   216  0000                     _TXB2D1	set	3879
   217  0000                     _TXB2D2	set	3880
   218  0000                     _TXB2D3	set	3881
   219  0000                     _TXB2D4	set	3882
   220  0000                     _TXB2D5	set	3883
   221  0000                     _TXB2D6	set	3884
   222  0000                     _TXB2D7	set	3885
   223  0000                     _TXB2DLC	set	3877
   224  0000                     _TXB2DLCbits	set	3877
   225  0000                     _TXB2EIDH	set	3875
   226  0000                     _TXB2EIDL	set	3876
   227  0000                     _TXB2SIDH	set	3873
   228  0000                     _TXB2SIDL	set	3874
   229  0000                     _TXB2SIDLbits	set	3874
   230  0000                     _ADCON0bits	set	4034
   231  0000                     _ADCON1bits	set	4033
   232  0000                     _ADCON2bits	set	4032
   233  0000                     _ADRESH	set	4036
   234  0000                     _BRGCON1	set	3952
   235  0000                     _BRGCON2	set	3953
   236  0000                     _BRGCON2bits	set	3953
   237  0000                     _BRGCON3	set	3954
   238  0000                     _BRGCON3bits	set	3954
   239  0000                     _CANCON	set	3951
   240  0000                     _CANCONbits	set	3951
   241  0000                     _CANSTAT	set	3950
   242  0000                     _COMSTATbits	set	3956
   243  0000                     _ECCP1CON	set	4026
   244  0000                     _ECCPR1L	set	4027
   245  0000                     _INTCONbits	set	4082
   246  0000                     _IPR2bits	set	4002
   247  0000                     _IPR3bits	set	4005
   248  0000                     _LATA	set	3977
   249  0000                     _LATB	set	3978
   250  0000                     _LATC	set	3979
   251  0000                     _LATD	set	3980
   252  0000                     _LATE	set	3981
   253  0000                     _PIE1bits	set	3997
   254  0000                     _PIE2bits	set	4000
   255  0000                     _PIE3bits	set	4003
   256  0000                     _PIR1bits	set	3998
   257  0000                     _PIR2bits	set	4001
   258  0000                     _PIR3bits	set	4004
   259  0000                     _PORTAbits	set	3968
   260  0000                     _PORTCbits	set	3970
   261  0000                     _PR2	set	4043
   262  0000                     _RCONbits	set	4048
   263  0000                     _RXB0CON	set	3936
   264  0000                     _RXB0CONbits	set	3936
   265  0000                     _RXB0D0	set	3942
   266  0000                     _RXB0D1	set	3943
   267  0000                     _RXB0D2	set	3944
   268  0000                     _RXB0D3	set	3945
   269  0000                     _RXB0D4	set	3946
   270  0000                     _RXB0D5	set	3947
   271  0000                     _RXB0D6	set	3948
   272  0000                     _RXB0D7	set	3949
   273  0000                     _RXB0DLC	set	3941
   274  0000                     _RXB0DLCbits	set	3941
   275  0000                     _RXB0EIDH	set	3939
   276  0000                     _RXB0EIDL	set	3940
   277  0000                     _RXB0SIDH	set	3937
   278  0000                     _RXB0SIDL	set	3938
   279  0000                     _RXB0SIDLbits	set	3938
   280  0000                     _RXERRCNT	set	3957
   281  0000                     _T2CON	set	4042
   282  0000                     _T2CONbits	set	4042
   283  0000                     _T3CON	set	4017
   284  0000                     _TMR2	set	4044
   285  0000                     _TMR3H	set	4019
   286  0000                     _TMR3L	set	4018
   287  0000                     _TRISA	set	3986
   288  0000                     _TRISB	set	3987
   289  0000                     _TRISC	set	3988
   290  0000                     _TRISD	set	3989
   291  0000                     _TRISDbits	set	3989
   292  0000                     _TRISE	set	3990
   293  0000                     _TXERRCNT	set	3958
   294                           
   295                           ; #config settings
   296  000D4D  00                 	db	0	; dummy byte at the end
   297  0000                     
   298                           	psect	cinit
   299  005076                     __pcinit:
   300                           	opt stack 0
   301  005076                     start_initialization:
   302                           	opt stack 0
   303  005076                     __initialization:
   304                           	opt stack 0
   305                           
   306                           ; Clear objects allocated to BANK1 (39 bytes)
   307  005076  EE01  F000         	lfsr	0,__pbssBANK1
   308  00507A  0E27               	movlw	39
   309  00507C                     clear_0:
   310  00507C  6AEE               	clrf	postinc0,c
   311  00507E  06E8               	decf	wreg,f,c
   312  005080  E1FD               	bnz	clear_0
   313                           
   314                           ; Clear objects allocated to BANK0 (34 bytes)
   315  005082  EE00  F0DB         	lfsr	0,__pbssBANK0
   316  005086  0E22               	movlw	34
   317  005088                     clear_1:
   318  005088  6AEE               	clrf	postinc0,c
   319  00508A  06E8               	decf	wreg,f,c
   320  00508C  E1FD               	bnz	clear_1
   321                           
   322                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   323  00508E  6A40               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   324  005090  6A3F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   325                           
   326                           ; Clear objects allocated to COMRAM (28 bytes)
   327  005092  EE00  F023         	lfsr	0,__pbssCOMRAM
   328  005096  0E1C               	movlw	28
   329  005098                     clear_2:
   330  005098  6AEE               	clrf	postinc0,c
   331  00509A  06E8               	decf	wreg,f,c
   332  00509C  E1FD               	bnz	clear_2
   333                           
   334                           ; Initialize objects allocated to BANK0 (2 bytes)
   335                           ; load TBLPTR registers with __pidataBANK0
   336  00509E  0E50               	movlw	low __pidataBANK0
   337  0050A0  6EF6               	movwf	tblptrl,c
   338  0050A2  0E53               	movlw	high __pidataBANK0
   339  0050A4  6EF7               	movwf	tblptrh,c
   340  0050A6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   341  0050A8  6EF8               	movwf	tblptru,c
   342  0050AA  0009               	tblrd		*+	;fetch initializer
   343  0050AC  CFF5 F0FD          	movff	tablat,__pdataBANK0
   344  0050B0  0009               	tblrd		*+	;fetch initializer
   345  0050B2  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
   346                           
   347                           ; Initialize objects allocated to COMRAM (1 bytes)
   348                           ; load TBLPTR registers with __pidataCOMRAM
   349  0050B6  0E52               	movlw	low __pidataCOMRAM
   350  0050B8  6EF6               	movwf	tblptrl,c
   351  0050BA  0E53               	movlw	high __pidataCOMRAM
   352  0050BC  6EF7               	movwf	tblptrh,c
   353  0050BE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   354  0050C0  6EF8               	movwf	tblptru,c
   355  0050C2  0009               	tblrd		*+	;fetch initializer
   356  0050C4  CFF5 F041          	movff	tablat,__pdataCOMRAM
   357  0050C8                     end_of_initialization:
   358                           	opt stack 0
   359  0050C8                     __end_of__initialization:
   360                           	opt stack 0
   361  0050C8  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   362  0050CA  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   363  0050CC  0100               	movlb	0
   364  0050CE  EF2A  F01D         	goto	_main	;jump to C main() function
   365                           tblptru	equ	0xFF8
   366                           tblptrh	equ	0xFF7
   367                           tblptrl	equ	0xFF6
   368                           tablat	equ	0xFF5
   369                           postinc0	equ	0xFEE
   370                           wreg	equ	0xFE8
   371                           
   372                           	psect	bitbssCOMRAM
   373  0001F8                     __pbitbssCOMRAM:
   374                           	opt stack 0
   375  0001F8                     _can_retry:
   376                           	opt stack 0
   377  0001F8                     	ds	1
   378  0001F9                     _centralina_abs:
   379                           	opt stack 0
   380  0001F9                     	ds	1
   381  0001FA                     _centralina_comando:
   382                           	opt stack 0
   383  0001FA                     	ds	1
   384  0001FB                     _centralina_sterzo:
   385                           	opt stack 0
   386  0001FB                     	ds	1
   387  0001FC                     _message_sent:
   388                           	opt stack 0
   389  0001FC                     	ds	1
   390  0001FD                     _new_message:
   391                           	opt stack 0
   392  0001FD                     	ds	1
   393  0001FE                     _remote_frame:
   394                           	opt stack 0
   395  0001FE                     	ds	1
   396  0001FF                     _remote_frame1:
   397                           	opt stack 0
   398  0001FF                     	ds	1
   399  000200                     _request_sent:
   400                           	opt stack 0
   401  000200                     	ds	1
   402  000201                     _speed_fetched:
   403                           	opt stack 0
   404  000201                     	ds	1
   405                           tblptru	equ	0xFF8
   406                           tblptrh	equ	0xFF7
   407                           tblptrl	equ	0xFF6
   408                           tablat	equ	0xFF5
   409                           postinc0	equ	0xFEE
   410                           wreg	equ	0xFE8
   411                           
   412                           	psect	bssCOMRAM
   413  000023                     __pbssCOMRAM:
   414                           	opt stack 0
   415  000023                     _id:
   416                           	opt stack 0
   417  000023                     	ds	4
   418  000027                     _previousTimeCounter2:
   419                           	opt stack 0
   420  000027                     	ds	4
   421  00002B                     _requestSpeed:
   422                           	opt stack 0
   423  00002B                     	ds	4
   424  00002F                     _clock_counter_reference:
   425                           	opt stack 0
   426  00002F                     	ds	2
   427  000031                     _duty_cycle:
   428                           	opt stack 0
   429  000031                     	ds	2
   430  000033                     _vBatt:
   431                           	opt stack 0
   432  000033                     	ds	2
   433  000035                     _current:
   434                           	opt stack 0
   435  000035                     	ds	1
   436  000036                     _scrittura:
   437                           	opt stack 0
   438  000036                     	ds	1
   439  000037                     _data_array:
   440                           	opt stack 0
   441  000037                     	ds	8
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           
   449                           	psect	dataCOMRAM
   450  000041                     __pdataCOMRAM:
   451                           	opt stack 0
   452  000041                     _delay_quartz_frequency_value:
   453                           	opt stack 0
   454  000041                     	ds	1
   455                           tblptru	equ	0xFF8
   456                           tblptrh	equ	0xFF7
   457                           tblptrl	equ	0xFF6
   458                           tablat	equ	0xFF5
   459                           postinc0	equ	0xFEE
   460                           wreg	equ	0xFE8
   461                           
   462                           	psect	bssBANK0
   463  0000DB                     __pbssBANK0:
   464                           	opt stack 0
   465  0000DB                     _correzione:
   466                           	opt stack 0
   467  0000DB                     	ds	4
   468  0000DF                     _currentSpeed:
   469                           	opt stack 0
   470  0000DF                     	ds	4
   471  0000E3                     _duty_set:
   472                           	opt stack 0
   473  0000E3                     	ds	4
   474  0000E7                     _previousTimeCounter:
   475                           	opt stack 0
   476  0000E7                     	ds	4
   477  0000EB                     _previousTimeCounter1:
   478                           	opt stack 0
   479  0000EB                     	ds	4
   480  0000EF                     _timeCounter:
   481                           	opt stack 0
   482  0000EF                     	ds	4
   483  0000F3                     _errno:
   484                           	opt stack 0
   485  0000F3                     	ds	2
   486  0000F5                     _errore:
   487                           	opt stack 0
   488  0000F5                     	ds	2
   489  0000F7                     _left_speed:
   490                           	opt stack 0
   491  0000F7                     	ds	2
   492  0000F9                     _previousPwm:
   493                           	opt stack 0
   494  0000F9                     	ds	2
   495  0000FB                     _right_speed:
   496                           	opt stack 0
   497  0000FB                     	ds	2
   498                           tblptru	equ	0xFF8
   499                           tblptrh	equ	0xFF7
   500                           tblptrl	equ	0xFF6
   501                           tablat	equ	0xFF5
   502                           postinc0	equ	0xFEE
   503                           wreg	equ	0xFE8
   504                           
   505                           	psect	dataBANK0
   506  0000FD                     __pdataBANK0:
   507                           	opt stack 0
   508  0000FD                     _dir:
   509                           	opt stack 0
   510  0000FD                     	ds	2
   511                           tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           tblptrl	equ	0xFF6
   514                           tablat	equ	0xFF5
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           
   518                           	psect	bssBANK1
   519  000100                     __pbssBANK1:
   520                           	opt stack 0
   521  000100                     _counter_array:
   522                           	opt stack 0
   523  000100                     	ds	8
   524  000108                     _currentSpeed_array:
   525                           	opt stack 0
   526  000108                     	ds	8
   527  000110                     _msg:
   528                           	opt stack 0
   529  000110                     	ds	15
   530  00011F                     _data_array_debug:
   531                           	opt stack 0
   532  00011F                     	ds	8
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           
   540                           	psect	cstackBANK1
   541  000127                     __pcstackBANK1:
   542                           	opt stack 0
   543  000127                     ??_rampe:
   544                           
   545                           ; 0 bytes @ 0x0
   546  000127                     	ds	8
   547  00012F                     _rampe$4053:
   548                           	opt stack 0
   549                           
   550                           ; 4 bytes @ 0x8
   551  00012F                     	ds	4
   552  000133                     _rampe$4054:
   553                           	opt stack 0
   554                           
   555                           ; 4 bytes @ 0xC
   556  000133                     	ds	4
   557  000137                     ??_main:
   558                           
   559                           ; 0 bytes @ 0x10
   560  000137                     	ds	8
   561                           tblptru	equ	0xFF8
   562                           tblptrh	equ	0xFF7
   563                           tblptrl	equ	0xFF6
   564                           tablat	equ	0xFF5
   565                           postinc0	equ	0xFEE
   566                           wreg	equ	0xFE8
   567                           
   568                           	psect	cstackBANK0
   569  000060                     __pcstackBANK0:
   570                           	opt stack 0
   571  000060                     ??_can_interpreter:
   572  000060                     ?_abs:
   573                           	opt stack 0
   574  000060                     ?___wmul:
   575                           	opt stack 0
   576  000060                     ?___lwdiv:
   577                           	opt stack 0
   578  000060                     ?___fldiv:
   579                           	opt stack 0
   580  000060                     ?_frexp:
   581                           	opt stack 0
   582  000060                     ?___flneg:
   583                           	opt stack 0
   584  000060                     CANOperationMode@mode:
   585                           	opt stack 0
   586  000060                     _CANisTxReady$3005:
   587                           	opt stack 0
   588  000060                     OpenEPWM1@period:
   589                           	opt stack 0
   590  000060                     SetOutputEPWM1@outputmode:
   591                           	opt stack 0
   592  000060                     OpenTimer2@config:
   593                           	opt stack 0
   594  000060                     SetDCEPWM1@dutycycle:
   595                           	opt stack 0
   596  000060                     ___wmul@multiplier:
   597                           	opt stack 0
   598  000060                     abs@a:
   599                           	opt stack 0
   600  000060                     ___lwdiv@dividend:
   601                           	opt stack 0
   602  000060                     CANsendMessage@identifier:
   603                           	opt stack 0
   604  000060                     CANSetMask@mask:
   605                           	opt stack 0
   606  000060                     CANSetFilter@filter:
   607                           	opt stack 0
   608  000060                     ___flge@ff1:
   609                           	opt stack 0
   610  000060                     ___flneg@f1:
   611                           	opt stack 0
   612  000060                     ___fldiv@b:
   613                           	opt stack 0
   614  000060                     frexp@value:
   615                           	opt stack 0
   616                           
   617                           ; 4 bytes @ 0x0
   618  000060                     	ds	1
   619  000061                     SetOutputEPWM1@outputconfig:
   620                           	opt stack 0
   621                           
   622                           ; 1 bytes @ 0x1
   623  000061                     	ds	1
   624  000062                     ??_SetDCEPWM1:
   625  000062                     ??_abs:
   626  000062                     ___wmul@multiplicand:
   627                           	opt stack 0
   628  000062                     ___lwdiv@divisor:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x2
   632  000062                     	ds	2
   633  000064                     CANSetMask@type:
   634                           	opt stack 0
   635  000064                     CANSetFilter@type:
   636                           	opt stack 0
   637  000064                     ___lwdiv@counter:
   638                           	opt stack 0
   639  000064                     CANsendMessage@data:
   640                           	opt stack 0
   641  000064                     SetDCEPWM1@DCycle:
   642                           	opt stack 0
   643  000064                     ___wmul@product:
   644                           	opt stack 0
   645  000064                     frexp@eptr:
   646                           	opt stack 0
   647  000064                     ___flge@ff2:
   648                           	opt stack 0
   649  000064                     ___fldiv@a:
   650                           	opt stack 0
   651                           
   652                           ; 4 bytes @ 0x4
   653  000064                     	ds	1
   654  000065                     ??_CANSetMask:
   655  000065                     ??_CANSetFilter:
   656  000065                     ___lwdiv@quotient:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0x5
   660  000065                     	ds	1
   661  000066                     ??_frexp:
   662  000066                     ?___awdiv:
   663                           	opt stack 0
   664  000066                     CANsendMessage@dataLength:
   665                           	opt stack 0
   666  000066                     delay_ms@value_ms:
   667                           	opt stack 0
   668  000066                     ___awdiv@dividend:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x6
   672  000066                     	ds	1
   673  000067                     ?___xxtofl:
   674                           	opt stack 0
   675  000067                     CANsendMessage@flags:
   676                           	opt stack 0
   677  000067                     ___xxtofl@val:
   678                           	opt stack 0
   679                           
   680                           ; 4 bytes @ 0x7
   681  000067                     	ds	1
   682  000068                     ??___fldiv:
   683  000068                     ??_CANsendMessage:
   684  000068                     ??___flge:
   685  000068                     ___awdiv@divisor:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x8
   689  000068                     	ds	1
   690  000069                     CANSetMask@numBuffer:
   691                           	opt stack 0
   692  000069                     CANSetFilter@numBuffer:
   693                           	opt stack 0
   694                           
   695                           ; 1 bytes @ 0x9
   696  000069                     	ds	1
   697  00006A                     ___awdiv@counter:
   698                           	opt stack 0
   699  00006A                     CANSetMask@tamp:
   700                           	opt stack 0
   701  00006A                     CANSetFilter@tamp:
   702                           	opt stack 0
   703                           
   704                           ; 4 bytes @ 0xA
   705  00006A                     	ds	1
   706  00006B                     ??___xxtofl:
   707  00006B                     ___awdiv@sign:
   708                           	opt stack 0
   709                           
   710                           ; 1 bytes @ 0xB
   711  00006B                     	ds	1
   712  00006C                     ___fldiv@sign:
   713                           	opt stack 0
   714  00006C                     ___awdiv@quotient:
   715                           	opt stack 0
   716  00006C                     CANsendMessage@tamp:
   717                           	opt stack 0
   718                           
   719                           ; 4 bytes @ 0xC
   720  00006C                     	ds	1
   721  00006D                     ___fldiv@rem:
   722                           	opt stack 0
   723                           
   724                           ; 4 bytes @ 0xD
   725  00006D                     	ds	1
   726  00006E                     CANInitialize@phaseSeg1:
   727                           	opt stack 0
   728                           
   729                           ; 1 bytes @ 0xE
   730  00006E                     	ds	1
   731  00006F                     CANInitialize@phaseSeg2:
   732                           	opt stack 0
   733  00006F                     ___xxtofl@sign:
   734                           	opt stack 0
   735                           
   736                           ; 1 bytes @ 0xF
   737  00006F                     	ds	1
   738  000070                     CANInitialize@SJW:
   739                           	opt stack 0
   740  000070                     ___xxtofl@exp:
   741                           	opt stack 0
   742                           
   743                           ; 1 bytes @ 0x10
   744  000070                     	ds	1
   745  000071                     CANInitialize@BRP:
   746                           	opt stack 0
   747  000071                     ___fldiv@new_exp:
   748                           	opt stack 0
   749  000071                     ___xxtofl@arg:
   750                           	opt stack 0
   751                           
   752                           ; 4 bytes @ 0x11
   753  000071                     	ds	1
   754  000072                     CANInitialize@flags:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x12
   758  000072                     	ds	1
   759  000073                     ??_CANInitialize:
   760  000073                     ___fldiv@grs:
   761                           	opt stack 0
   762                           
   763                           ; 4 bytes @ 0x13
   764  000073                     	ds	2
   765  000075                     ?___flmul:
   766                           	opt stack 0
   767  000075                     ___flmul@b:
   768                           	opt stack 0
   769                           
   770                           ; 4 bytes @ 0x15
   771  000075                     	ds	2
   772  000077                     CANInitialize@propSeg:
   773                           	opt stack 0
   774  000077                     ___fldiv@bexp:
   775                           	opt stack 0
   776                           
   777                           ; 1 bytes @ 0x17
   778  000077                     	ds	1
   779  000078                     CANInitialize@FilterConfig1:
   780                           	opt stack 0
   781  000078                     ___fldiv@aexp:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x18
   785  000078                     	ds	1
   786  000079                     CANInitialize@FilterConfig2:
   787                           	opt stack 0
   788  000079                     ___flmul@a:
   789                           	opt stack 0
   790                           
   791                           ; 4 bytes @ 0x19
   792  000079                     	ds	1
   793  00007A                     
   794                           ; 0 bytes @ 0x1A
   795  00007A                     	ds	3
   796  00007D                     ??___flmul:
   797                           
   798                           ; 0 bytes @ 0x1D
   799  00007D                     	ds	4
   800  000081                     ___flmul@sign:
   801                           	opt stack 0
   802                           
   803                           ; 1 bytes @ 0x21
   804  000081                     	ds	1
   805  000082                     ___flmul@aexp:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x22
   809  000082                     	ds	1
   810  000083                     ___flmul@grs:
   811                           	opt stack 0
   812                           
   813                           ; 4 bytes @ 0x23
   814  000083                     	ds	4
   815  000087                     ___flmul@bexp:
   816                           	opt stack 0
   817                           
   818                           ; 1 bytes @ 0x27
   819  000087                     	ds	1
   820  000088                     ___flmul@prod:
   821                           	opt stack 0
   822                           
   823                           ; 4 bytes @ 0x28
   824  000088                     	ds	4
   825  00008C                     ___flmul@temp:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x2C
   829  00008C                     	ds	2
   830  00008E                     ?___fladd:
   831                           	opt stack 0
   832  00008E                     ___fladd@b:
   833                           	opt stack 0
   834                           
   835                           ; 4 bytes @ 0x2E
   836  00008E                     	ds	4
   837  000092                     ___fladd@a:
   838                           	opt stack 0
   839                           
   840                           ; 4 bytes @ 0x32
   841  000092                     	ds	4
   842  000096                     ??___fladd:
   843                           
   844                           ; 0 bytes @ 0x36
   845  000096                     	ds	8
   846  00009E                     ___fladd@signs:
   847                           	opt stack 0
   848                           
   849                           ; 1 bytes @ 0x3E
   850  00009E                     	ds	1
   851  00009F                     ___fladd@aexp:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x3F
   855  00009F                     	ds	1
   856  0000A0                     ___fladd@bexp:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0x40
   860  0000A0                     	ds	1
   861  0000A1                     ___fladd@grs:
   862                           	opt stack 0
   863                           
   864                           ; 1 bytes @ 0x41
   865  0000A1                     	ds	1
   866  0000A2                     ?___flsub:
   867                           	opt stack 0
   868  0000A2                     ?_eval_poly:
   869                           	opt stack 0
   870  0000A2                     ?___fltol:
   871                           	opt stack 0
   872  0000A2                     ___fltol@f1:
   873                           	opt stack 0
   874  0000A2                     ___flsub@b:
   875                           	opt stack 0
   876  0000A2                     eval_poly@x:
   877                           	opt stack 0
   878                           
   879                           ; 4 bytes @ 0x42
   880  0000A2                     	ds	4
   881  0000A6                     ??___fltol:
   882  0000A6                     eval_poly@d:
   883                           	opt stack 0
   884  0000A6                     ___flsub@a:
   885                           	opt stack 0
   886                           
   887                           ; 4 bytes @ 0x46
   888  0000A6                     	ds	2
   889  0000A8                     eval_poly@n:
   890                           	opt stack 0
   891                           
   892                           ; 2 bytes @ 0x48
   893  0000A8                     	ds	2
   894  0000AA                     ??_eval_poly:
   895  0000AA                     ___fltol@sign1:
   896                           	opt stack 0
   897                           
   898                           ; 1 bytes @ 0x4A
   899  0000AA                     	ds	1
   900  0000AB                     ___fltol@exp1:
   901                           	opt stack 0
   902                           
   903                           ; 1 bytes @ 0x4B
   904  0000AB                     	ds	1
   905  0000AC                     ?_floor:
   906                           	opt stack 0
   907  0000AC                     floor@x:
   908                           	opt stack 0
   909                           
   910                           ; 4 bytes @ 0x4C
   911  0000AC                     	ds	2
   912  0000AE                     eval_poly@res:
   913                           	opt stack 0
   914                           
   915                           ; 4 bytes @ 0x4E
   916  0000AE                     	ds	2
   917  0000B0                     floor@i:
   918                           	opt stack 0
   919                           
   920                           ; 4 bytes @ 0x50
   921  0000B0                     	ds	2
   922  0000B2                     ?_log:
   923                           	opt stack 0
   924  0000B2                     ?_ldexp:
   925                           	opt stack 0
   926  0000B2                     ldexp@value:
   927                           	opt stack 0
   928  0000B2                     log@x:
   929                           	opt stack 0
   930                           
   931                           ; 4 bytes @ 0x52
   932  0000B2                     	ds	2
   933  0000B4                     floor@expon:
   934                           	opt stack 0
   935                           
   936                           ; 2 bytes @ 0x54
   937  0000B4                     	ds	2
   938  0000B6                     ldexp@newexp:
   939                           	opt stack 0
   940  0000B6                     log@exponent:
   941                           	opt stack 0
   942                           
   943                           ; 2 bytes @ 0x56
   944  0000B6                     	ds	2
   945  0000B8                     ??_ldexp:
   946                           
   947                           ; 0 bytes @ 0x58
   948  0000B8                     	ds	2
   949  0000BA                     ?_exp:
   950                           	opt stack 0
   951  0000BA                     exp@x:
   952                           	opt stack 0
   953                           
   954                           ; 4 bytes @ 0x5A
   955  0000BA                     	ds	4
   956  0000BE                     _exp$4057:
   957                           	opt stack 0
   958                           
   959                           ; 4 bytes @ 0x5E
   960  0000BE                     	ds	4
   961  0000C2                     exp@exponent:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0x62
   965  0000C2                     	ds	2
   966  0000C4                     exp@sign:
   967                           	opt stack 0
   968                           
   969                           ; 1 bytes @ 0x64
   970  0000C4                     	ds	1
   971  0000C5                     ?_pow:
   972                           	opt stack 0
   973  0000C5                     pow@x:
   974                           	opt stack 0
   975                           
   976                           ; 4 bytes @ 0x65
   977  0000C5                     	ds	4
   978  0000C9                     pow@y:
   979                           	opt stack 0
   980                           
   981                           ; 4 bytes @ 0x69
   982  0000C9                     	ds	4
   983  0000CD                     _pow$4055:
   984                           	opt stack 0
   985                           
   986                           ; 4 bytes @ 0x6D
   987  0000CD                     	ds	4
   988  0000D1                     _pow$4056:
   989                           	opt stack 0
   990                           
   991                           ; 4 bytes @ 0x71
   992  0000D1                     	ds	4
   993  0000D5                     pow@sign:
   994                           	opt stack 0
   995                           
   996                           ; 1 bytes @ 0x75
   997  0000D5                     	ds	1
   998  0000D6                     pow@yi:
   999                           	opt stack 0
  1000                           
  1001                           ; 4 bytes @ 0x76
  1002  0000D6                     	ds	4
  1003  0000DA                     main@period:
  1004                           	opt stack 0
  1005                           
  1006                           ; 1 bytes @ 0x7A
  1007  0000DA                     	ds	1
  1008                           tblptru	equ	0xFF8
  1009                           tblptrh	equ	0xFF7
  1010                           tblptrl	equ	0xFF6
  1011                           tablat	equ	0xFF5
  1012                           postinc0	equ	0xFEE
  1013                           wreg	equ	0xFE8
  1014                           
  1015                           	psect	cstackCOMRAM
  1016  000001                     __pcstackCOMRAM:
  1017                           	opt stack 0
  1018  000001                     _CANisRxReady$3007:
  1019                           	opt stack 0
  1020  000001                     CANreceiveMessage@msg:
  1021                           	opt stack 0
  1022                           
  1023                           ; 2 bytes @ 0x0
  1024  000001                     	ds	2
  1025  000003                     ??_CANreceiveMessage:
  1026                           
  1027                           ; 0 bytes @ 0x2
  1028  000003                     	ds	8
  1029  00000B                     CANreceiveMessage@error:
  1030                           	opt stack 0
  1031                           
  1032                           ; 1 bytes @ 0xA
  1033  00000B                     	ds	1
  1034  00000C                     CANreceiveMessage@tamp:
  1035                           	opt stack 0
  1036                           
  1037                           ; 1 bytes @ 0xB
  1038  00000C                     	ds	1
  1039  00000D                     ??_ISR_bassa:
  1040                           
  1041                           ; 0 bytes @ 0xC
  1042  00000D                     	ds	21
  1043  000022                     ISR_bassa@i:
  1044                           	opt stack 0
  1045                           
  1046                           ; 1 bytes @ 0x21
  1047  000022                     	ds	1
  1048                           tblptru	equ	0xFF8
  1049                           tblptrh	equ	0xFF7
  1050                           tblptrl	equ	0xFF6
  1051                           tablat	equ	0xFF5
  1052                           postinc0	equ	0xFEE
  1053                           wreg	equ	0xFE8
  1054                           
  1055 ;;
  1056 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1057 ;;
  1058 ;; *************** function _main *****************
  1059 ;; Defined at:
  1060 ;;		line 124 in file "motore.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;  period          1  122[BANK0 ] unsigned char 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  2  667[None  ] int 
  1067 ;; Registers used:
  1068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1075 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1076 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1077 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1078 ;;Total ram usage:        9 bytes
  1079 ;; Hardware stack levels required when called:    7
  1080 ;; This function calls:
  1081 ;;		_CANisTxReady
  1082 ;;		_CANsendMessage
  1083 ;;		_OpenEPWM1
  1084 ;;		_OpenTimer2
  1085 ;;		_SetDCEPWM1
  1086 ;;		_SetOutputEPWM1
  1087 ;;		_battery_measure
  1088 ;;		_can_interpreter
  1089 ;;		_configurazione_iniziale
  1090 ;;		_delay_ms
  1091 ;;		_rampe
  1092 ;;		_send_data
  1093 ;; This function is called by:
  1094 ;;		Startup code after reset
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           	psect	text0
  1099  003A54                     __ptext0:
  1100                           	opt stack 0
  1101  003A54                     _main:
  1102                           	opt stack 24
  1103                           
  1104                           ;motore.c: 125: unsigned char period;
  1105                           ;motore.c: 126: configurazione_iniziale();
  1106                           
  1107                           ;incstack = 0
  1108  003A54  EC19  F027         	call	_configurazione_iniziale	;wreg free
  1109                           
  1110                           ;motore.c: 127: PORTAbits.RA1 = 1;
  1111  003A58  8280               	bsf	3968,1,c	;volatile
  1112                           
  1113                           ;motore.c: 128: PORTCbits.RC1 = 1;
  1114  003A5A  8282               	bsf	3970,1,c	;volatile
  1115                           
  1116                           ;motore.c: 129: delay_ms(500);
  1117  003A5C  0E01               	movlw	1
  1118  003A5E  0100               	movlb	0	; () banked
  1119  003A60  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1120  003A62  0EF4               	movlw	244
  1121  003A64  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1122  003A66  EC36  F029         	call	_delay_ms	;wreg free
  1123                           
  1124                           ;motore.c: 130: PORTAbits.RA1 = 0;
  1125  003A6A  9280               	bcf	3968,1,c	;volatile
  1126                           
  1127                           ;motore.c: 131: PORTCbits.RC1 = 0;
  1128  003A6C  9282               	bcf	3970,1,c	;volatile
  1129                           
  1130                           ;motore.c: 132: OpenTimer2(0b01111111 & 0b11111110 & 0b11111111);
  1131  003A6E  0E7E               	movlw	126
  1132  003A70  EC78  F029         	call	_OpenTimer2
  1133                           
  1134                           ;motore.c: 133: period = 0xFA;
  1135  003A74  0EFA               	movlw	250
  1136  003A76  0100               	movlb	0	; () banked
  1137  003A78  6FDA               	movwf	main@period& (0+255),b
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;motore.c: 134: OpenEPWM1(period);
  1141  003A7A  0100               	movlb	0	; () banked
  1142  003A7C  51DA               	movf	main@period& (0+255),w,b
  1143  003A7E  EC9F  F029         	call	_OpenEPWM1
  1144                           
  1145                           ;motore.c: 135: speed_fetched = 1;
  1146  003A82  8240               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1147                           
  1148                           ;motore.c: 136: SetOutputEPWM1(0b01111111, 0b11111100);
  1149  003A84  0EFC               	movlw	252
  1150  003A86  0100               	movlb	0	; () banked
  1151  003A88  6F60               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  1152  003A8A  0E7F               	movlw	127
  1153  003A8C  EC69  F028         	call	_SetOutputEPWM1
  1154  003A90                     l7641:
  1155                           
  1156                           ;motore.c: 138: can_interpreter();
  1157  003A90  EC71  F027         	call	_can_interpreter	;wreg free
  1158                           
  1159                           ;motore.c: 139: if (PORTAbits.RA1 == 0) {
  1160  003A94  B280               	btfsc	3968,1,c	;volatile
  1161  003A96  D039               	goto	l7649
  1162                           
  1163                           ;motore.c: 141: if ((timeCounter - previousTimeCounter1 >= 20)) {
  1164  003A98  C0EB  F137         	movff	_previousTimeCounter1,??_main
  1165  003A9C  C0EC  F138         	movff	_previousTimeCounter1+1,??_main+1
  1166  003AA0  C0ED  F139         	movff	_previousTimeCounter1+2,??_main+2
  1167  003AA4  C0EE  F13A         	movff	_previousTimeCounter1+3,??_main+3
  1168  003AA8  0101               	movlb	1	; () banked
  1169  003AAA  1F37               	comf	??_main& (0+255),f,b
  1170  003AAC  1F38               	comf	(??_main+1)& (0+255),f,b
  1171  003AAE  1F39               	comf	(??_main+2)& (0+255),f,b
  1172  003AB0  1F3A               	comf	(??_main+3)& (0+255),f,b
  1173  003AB2  2B37               	incf	??_main& (0+255),f,b
  1174  003AB4  0E00               	movlw	0
  1175  003AB6  2338               	addwfc	(??_main+1)& (0+255),f,b
  1176  003AB8  2339               	addwfc	(??_main+2)& (0+255),f,b
  1177  003ABA  233A               	addwfc	(??_main+3)& (0+255),f,b
  1178  003ABC  0100               	movlb	0	; () banked
  1179  003ABE  51EF               	movf	_timeCounter& (0+255),w,b	;volatile
  1180  003AC0  0101               	movlb	1	; () banked
  1181  003AC2  2537               	addwf	??_main& (0+255),w,b
  1182  003AC4  0101               	movlb	1	; () banked
  1183  003AC6  6F3B               	movwf	(??_main+4)& (0+255),b
  1184  003AC8  0100               	movlb	0	; () banked
  1185  003ACA  51F0               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
  1186  003ACC  0101               	movlb	1	; () banked
  1187  003ACE  2138               	addwfc	(??_main+1)& (0+255),w,b
  1188  003AD0  0101               	movlb	1	; () banked
  1189  003AD2  6F3C               	movwf	(??_main+5)& (0+255),b
  1190  003AD4  0100               	movlb	0	; () banked
  1191  003AD6  51F1               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
  1192  003AD8  0101               	movlb	1	; () banked
  1193  003ADA  2139               	addwfc	(??_main+2)& (0+255),w,b
  1194  003ADC  0101               	movlb	1	; () banked
  1195  003ADE  6F3D               	movwf	(??_main+6)& (0+255),b
  1196  003AE0  0100               	movlb	0	; () banked
  1197  003AE2  51F2               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
  1198  003AE4  0101               	movlb	1	; () banked
  1199  003AE6  213A               	addwfc	(??_main+3)& (0+255),w,b
  1200  003AE8  0101               	movlb	1	; () banked
  1201  003AEA  6F3E               	movwf	(??_main+7)& (0+255),b
  1202  003AEC  0101               	movlb	1	; () banked
  1203  003AEE  513E               	movf	(??_main+7)& (0+255),w,b
  1204  003AF0  0101               	movlb	1	; () banked
  1205  003AF2  113D               	iorwf	(??_main+6)& (0+255),w,b
  1206  003AF4  0101               	movlb	1	; () banked
  1207  003AF6  113C               	iorwf	(??_main+5)& (0+255),w,b
  1208  003AF8  E105               	bnz	u10540
  1209  003AFA  0E14               	movlw	20
  1210  003AFC  0101               	movlb	1	; () banked
  1211  003AFE  5D3B               	subwf	(??_main+4)& (0+255),w,b
  1212  003B00  A0D8               	btfss	status,0,c
  1213  003B02  D00A               	goto	l7651
  1214  003B04                     u10540:
  1215                           
  1216                           ; BSR set to: 1
  1217                           ;motore.c: 142: rampe();
  1218  003B04  EC76  F012         	call	_rampe	;wreg free
  1219                           
  1220                           ;motore.c: 143: }
  1221                           ;motore.c: 144: } else {
  1222  003B08  D007               	goto	l7651
  1223  003B0A                     l7649:
  1224                           
  1225                           ;motore.c: 145: SetDCEPWM1(0);
  1226  003B0A  0E00               	movlw	0
  1227  003B0C  0100               	movlb	0	; () banked
  1228  003B0E  6F61               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1229  003B10  0E00               	movlw	0
  1230  003B12  6F60               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  1231  003B14  ECDD  F028         	call	_SetDCEPWM1	;wreg free
  1232  003B18                     l7651:
  1233                           
  1234                           ;motore.c: 146: }
  1235                           ;motore.c: 147: if ((can_retry == 1)&&(remote_frame)) {
  1236  003B18  B03F               	btfsc	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
  1237  003B1A  AC3F               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1238  003B1C  D002               	goto	l7657
  1239                           
  1240                           ;motore.c: 148: send_data();
  1241  003B1E  EC92  F028         	call	_send_data	;wreg free
  1242  003B22                     l7657:
  1243                           
  1244                           ;motore.c: 149: }
  1245                           ;motore.c: 151: if (((timeCounter - previousTimeCounter) > 500) || (PORTAbits.RA1 == 1)&
      +                          &((timeCounter - previousTimeCounter) > 5)) {
  1246  003B22  C0E7  F137         	movff	_previousTimeCounter,??_main
  1247  003B26  C0E8  F138         	movff	_previousTimeCounter+1,??_main+1
  1248  003B2A  C0E9  F139         	movff	_previousTimeCounter+2,??_main+2
  1249  003B2E  C0EA  F13A         	movff	_previousTimeCounter+3,??_main+3
  1250  003B32  0101               	movlb	1	; () banked
  1251  003B34  1F37               	comf	??_main& (0+255),f,b
  1252  003B36  1F38               	comf	(??_main+1)& (0+255),f,b
  1253  003B38  1F39               	comf	(??_main+2)& (0+255),f,b
  1254  003B3A  1F3A               	comf	(??_main+3)& (0+255),f,b
  1255  003B3C  2B37               	incf	??_main& (0+255),f,b
  1256  003B3E  0E00               	movlw	0
  1257  003B40  2338               	addwfc	(??_main+1)& (0+255),f,b
  1258  003B42  2339               	addwfc	(??_main+2)& (0+255),f,b
  1259  003B44  233A               	addwfc	(??_main+3)& (0+255),f,b
  1260  003B46  0100               	movlb	0	; () banked
  1261  003B48  51EF               	movf	_timeCounter& (0+255),w,b	;volatile
  1262  003B4A  0101               	movlb	1	; () banked
  1263  003B4C  2537               	addwf	??_main& (0+255),w,b
  1264  003B4E  0101               	movlb	1	; () banked
  1265  003B50  6F3B               	movwf	(??_main+4)& (0+255),b
  1266  003B52  0100               	movlb	0	; () banked
  1267  003B54  51F0               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
  1268  003B56  0101               	movlb	1	; () banked
  1269  003B58  2138               	addwfc	(??_main+1)& (0+255),w,b
  1270  003B5A  0101               	movlb	1	; () banked
  1271  003B5C  6F3C               	movwf	(??_main+5)& (0+255),b
  1272  003B5E  0100               	movlb	0	; () banked
  1273  003B60  51F1               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
  1274  003B62  0101               	movlb	1	; () banked
  1275  003B64  2139               	addwfc	(??_main+2)& (0+255),w,b
  1276  003B66  0101               	movlb	1	; () banked
  1277  003B68  6F3D               	movwf	(??_main+6)& (0+255),b
  1278  003B6A  0100               	movlb	0	; () banked
  1279  003B6C  51F2               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
  1280  003B6E  0101               	movlb	1	; () banked
  1281  003B70  213A               	addwfc	(??_main+3)& (0+255),w,b
  1282  003B72  0101               	movlb	1	; () banked
  1283  003B74  6F3E               	movwf	(??_main+7)& (0+255),b
  1284  003B76  0101               	movlb	1	; () banked
  1285  003B78  513E               	movf	(??_main+7)& (0+255),w,b
  1286  003B7A  0101               	movlb	1	; () banked
  1287  003B7C  113D               	iorwf	(??_main+6)& (0+255),w,b
  1288  003B7E  E140               	bnz	l675
  1289  003B80  0EF5               	movlw	245
  1290  003B82  0101               	movlb	1	; () banked
  1291  003B84  5D3B               	subwf	(??_main+4)& (0+255),w,b
  1292  003B86  0E01               	movlw	1
  1293  003B88  0101               	movlb	1	; () banked
  1294  003B8A  593C               	subwfb	(??_main+5)& (0+255),w,b
  1295  003B8C  B0D8               	btfsc	status,0,c
  1296  003B8E  D038               	goto	l675
  1297                           
  1298                           ; BSR set to: 1
  1299  003B90  A280               	btfss	3968,1,c	;volatile
  1300  003B92  D07A               	goto	l7687
  1301                           
  1302                           ; BSR set to: 1
  1303  003B94  C0E7  F137         	movff	_previousTimeCounter,??_main
  1304  003B98  C0E8  F138         	movff	_previousTimeCounter+1,??_main+1
  1305  003B9C  C0E9  F139         	movff	_previousTimeCounter+2,??_main+2
  1306  003BA0  C0EA  F13A         	movff	_previousTimeCounter+3,??_main+3
  1307  003BA4  0101               	movlb	1	; () banked
  1308  003BA6  1F37               	comf	??_main& (0+255),f,b
  1309  003BA8  1F38               	comf	(??_main+1)& (0+255),f,b
  1310  003BAA  1F39               	comf	(??_main+2)& (0+255),f,b
  1311  003BAC  1F3A               	comf	(??_main+3)& (0+255),f,b
  1312  003BAE  2B37               	incf	??_main& (0+255),f,b
  1313  003BB0  0E00               	movlw	0
  1314  003BB2  2338               	addwfc	(??_main+1)& (0+255),f,b
  1315  003BB4  2339               	addwfc	(??_main+2)& (0+255),f,b
  1316  003BB6  233A               	addwfc	(??_main+3)& (0+255),f,b
  1317  003BB8  0100               	movlb	0	; () banked
  1318  003BBA  51EF               	movf	_timeCounter& (0+255),w,b	;volatile
  1319  003BBC  0101               	movlb	1	; () banked
  1320  003BBE  2537               	addwf	??_main& (0+255),w,b
  1321  003BC0  0101               	movlb	1	; () banked
  1322  003BC2  6F3B               	movwf	(??_main+4)& (0+255),b
  1323  003BC4  0100               	movlb	0	; () banked
  1324  003BC6  51F0               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
  1325  003BC8  0101               	movlb	1	; () banked
  1326  003BCA  2138               	addwfc	(??_main+1)& (0+255),w,b
  1327  003BCC  0101               	movlb	1	; () banked
  1328  003BCE  6F3C               	movwf	(??_main+5)& (0+255),b
  1329  003BD0  0100               	movlb	0	; () banked
  1330  003BD2  51F1               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
  1331  003BD4  0101               	movlb	1	; () banked
  1332  003BD6  2139               	addwfc	(??_main+2)& (0+255),w,b
  1333  003BD8  0101               	movlb	1	; () banked
  1334  003BDA  6F3D               	movwf	(??_main+6)& (0+255),b
  1335  003BDC  0100               	movlb	0	; () banked
  1336  003BDE  51F2               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
  1337  003BE0  0101               	movlb	1	; () banked
  1338  003BE2  213A               	addwfc	(??_main+3)& (0+255),w,b
  1339  003BE4  0101               	movlb	1	; () banked
  1340  003BE6  6F3E               	movwf	(??_main+7)& (0+255),b
  1341  003BE8  0101               	movlb	1	; () banked
  1342  003BEA  513E               	movf	(??_main+7)& (0+255),w,b
  1343  003BEC  0101               	movlb	1	; () banked
  1344  003BEE  113D               	iorwf	(??_main+6)& (0+255),w,b
  1345  003BF0  0101               	movlb	1	; () banked
  1346  003BF2  113C               	iorwf	(??_main+5)& (0+255),w,b
  1347  003BF4  E105               	bnz	u10590
  1348  003BF6  0E06               	movlw	6
  1349  003BF8  0101               	movlb	1	; () banked
  1350  003BFA  5D3B               	subwf	(??_main+4)& (0+255),w,b
  1351  003BFC  A0D8               	btfss	status,0,c
  1352  003BFE  D044               	goto	l7687
  1353  003C00                     u10590:
  1354  003C00                     l675:
  1355                           
  1356                           ; BSR set to: 1
  1357                           ;motore.c: 152: if (request_sent == 0) {
  1358  003C00  B040               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1359  003C02  D01E               	goto	l676
  1360  003C04                     l7665:
  1361  003C04  EC66  F029         	call	_CANisTxReady	;wreg free
  1362  003C08  06E8               	decf	wreg,f,c
  1363  003C0A  A4D8               	btfss	status,2,c
  1364  003C0C  D7FB               	goto	l7665
  1365                           
  1366                           ;motore.c: 154: }
  1367                           ;motore.c: 155: CANsendMessage(0b00000000010, data_array, 8, CAN_CONFIG_STD_MSG & CAN_RE
      +                          MOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1368  003C0E  0E02               	movlw	2
  1369  003C10  0100               	movlb	0	; () banked
  1370  003C12  6F60               	movwf	CANsendMessage@identifier& (0+255),b
  1371  003C14  0E00               	movlw	0
  1372  003C16  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1373  003C18  0E00               	movlw	0
  1374  003C1A  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1375  003C1C  0E00               	movlw	0
  1376  003C1E  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1377  003C20  0E37               	movlw	low _data_array
  1378  003C22  0100               	movlb	0	; () banked
  1379  003C24  6F64               	movwf	CANsendMessage@data& (0+255),b
  1380  003C26  0E00               	movlw	high _data_array
  1381  003C28  0100               	movlb	0	; () banked
  1382  003C2A  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1383  003C2C  0E08               	movlw	8
  1384  003C2E  0100               	movlb	0	; () banked
  1385  003C30  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1386  003C32  0EFC               	movlw	252
  1387  003C34  0100               	movlb	0	; () banked
  1388  003C36  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1389  003C38  EC2A  F00C         	call	_CANsendMessage	;wreg free
  1390                           
  1391                           ;motore.c: 156: request_sent = 1;
  1392  003C3C  8040               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1393                           
  1394                           ;motore.c: 157: } else {
  1395  003C3E  D01C               	goto	l7685
  1396  003C40                     l676:
  1397                           
  1398                           ; BSR set to: 1
  1399                           ;motore.c: 158: if ((centralina_abs == 1)&&(centralina_sterzo == 1)&&(centralina_comando
      +                           == 1)) {
  1400  003C40  B23F               	btfsc	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
  1401                           
  1402                           ; BSR set to: 1
  1403  003C42  A63F               	btfss	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
  1404  003C44  D007               	goto	l681
  1405                           
  1406                           ; BSR set to: 1
  1407  003C46  A43F               	btfss	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  1408  003C48  D005               	goto	l681
  1409                           
  1410                           ; BSR set to: 1
  1411                           ;motore.c: 159: centralina_abs = 0;
  1412  003C4A  923F               	bcf	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
  1413                           
  1414                           ;motore.c: 160: centralina_sterzo = 0;
  1415  003C4C  963F               	bcf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
  1416                           
  1417                           ;motore.c: 161: centralina_comando = 0;
  1418  003C4E  943F               	bcf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  1419                           
  1420                           ;motore.c: 162: PORTAbits.RA1 = 0;
  1421  003C50  9280               	bcf	3968,1,c	;volatile
  1422  003C52  D011               	goto	l7683
  1423  003C54                     l681:
  1424                           
  1425                           ; BSR set to: 1
  1426                           ;motore.c: 166: PORTAbits.RA1 = 1;
  1427  003C54  8280               	bsf	3968,1,c	;volatile
  1428                           
  1429                           ; BSR set to: 1
  1430                           ;motore.c: 167: delay_ms(200);
  1431  003C56  0E00               	movlw	0
  1432  003C58  0100               	movlb	0	; () banked
  1433  003C5A  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1434  003C5C  0EC8               	movlw	200
  1435  003C5E  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1436  003C60  EC36  F029         	call	_delay_ms	;wreg free
  1437                           
  1438                           ;motore.c: 168: PORTAbits.RA1 = 0;
  1439  003C64  9280               	bcf	3968,1,c	;volatile
  1440                           
  1441                           ;motore.c: 169: delay_ms(200);
  1442  003C66  0E00               	movlw	0
  1443  003C68  0100               	movlb	0	; () banked
  1444  003C6A  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1445  003C6C  0EC8               	movlw	200
  1446  003C6E  6F66               	movwf	delay_ms@value_ms& (0+255),b
  1447  003C70  EC36  F029         	call	_delay_ms	;wreg free
  1448                           
  1449                           ;motore.c: 170: PORTAbits.RA1 = 1;
  1450  003C74  8280               	bsf	3968,1,c	;volatile
  1451  003C76                     l7683:
  1452                           
  1453                           ;motore.c: 171: request_sent = 0;
  1454  003C76  9040               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1455  003C78                     l7685:
  1456                           
  1457                           ;motore.c: 172: }
  1458                           ;motore.c: 173: }
  1459                           ;motore.c: 174: previousTimeCounter = timeCounter;
  1460  003C78  C0EF  F0E7         	movff	_timeCounter,_previousTimeCounter	;volatile
  1461  003C7C  C0F0  F0E8         	movff	_timeCounter+1,_previousTimeCounter+1	;volatile
  1462  003C80  C0F1  F0E9         	movff	_timeCounter+2,_previousTimeCounter+2	;volatile
  1463  003C84  C0F2  F0EA         	movff	_timeCounter+3,_previousTimeCounter+3	;volatile
  1464  003C88                     l7687:
  1465                           
  1466                           ;motore.c: 175: }
  1467                           ;motore.c: 176: if ((timeCounter - previousTimeCounter2 > 100)) {
  1468  003C88  C027  F137         	movff	_previousTimeCounter2,??_main
  1469  003C8C  C028  F138         	movff	_previousTimeCounter2+1,??_main+1
  1470  003C90  C029  F139         	movff	_previousTimeCounter2+2,??_main+2
  1471  003C94  C02A  F13A         	movff	_previousTimeCounter2+3,??_main+3
  1472  003C98  0101               	movlb	1	; () banked
  1473  003C9A  1F37               	comf	??_main& (0+255),f,b
  1474  003C9C  1F38               	comf	(??_main+1)& (0+255),f,b
  1475  003C9E  1F39               	comf	(??_main+2)& (0+255),f,b
  1476  003CA0  1F3A               	comf	(??_main+3)& (0+255),f,b
  1477  003CA2  2B37               	incf	??_main& (0+255),f,b
  1478  003CA4  0E00               	movlw	0
  1479  003CA6  2338               	addwfc	(??_main+1)& (0+255),f,b
  1480  003CA8  2339               	addwfc	(??_main+2)& (0+255),f,b
  1481  003CAA  233A               	addwfc	(??_main+3)& (0+255),f,b
  1482  003CAC  0100               	movlb	0	; () banked
  1483  003CAE  51EF               	movf	_timeCounter& (0+255),w,b	;volatile
  1484  003CB0  0101               	movlb	1	; () banked
  1485  003CB2  2537               	addwf	??_main& (0+255),w,b
  1486  003CB4  0101               	movlb	1	; () banked
  1487  003CB6  6F3B               	movwf	(??_main+4)& (0+255),b
  1488  003CB8  0100               	movlb	0	; () banked
  1489  003CBA  51F0               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
  1490  003CBC  0101               	movlb	1	; () banked
  1491  003CBE  2138               	addwfc	(??_main+1)& (0+255),w,b
  1492  003CC0  0101               	movlb	1	; () banked
  1493  003CC2  6F3C               	movwf	(??_main+5)& (0+255),b
  1494  003CC4  0100               	movlb	0	; () banked
  1495  003CC6  51F1               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
  1496  003CC8  0101               	movlb	1	; () banked
  1497  003CCA  2139               	addwfc	(??_main+2)& (0+255),w,b
  1498  003CCC  0101               	movlb	1	; () banked
  1499  003CCE  6F3D               	movwf	(??_main+6)& (0+255),b
  1500  003CD0  0100               	movlb	0	; () banked
  1501  003CD2  51F2               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
  1502  003CD4  0101               	movlb	1	; () banked
  1503  003CD6  213A               	addwfc	(??_main+3)& (0+255),w,b
  1504  003CD8  0101               	movlb	1	; () banked
  1505  003CDA  6F3E               	movwf	(??_main+7)& (0+255),b
  1506  003CDC  0101               	movlb	1	; () banked
  1507  003CDE  513E               	movf	(??_main+7)& (0+255),w,b
  1508  003CE0  0101               	movlb	1	; () banked
  1509  003CE2  113D               	iorwf	(??_main+6)& (0+255),w,b
  1510  003CE4  0101               	movlb	1	; () banked
  1511  003CE6  113C               	iorwf	(??_main+5)& (0+255),w,b
  1512  003CE8  E105               	bnz	u10650
  1513  003CEA  0E65               	movlw	101
  1514  003CEC  0101               	movlb	1	; () banked
  1515  003CEE  5D3B               	subwf	(??_main+4)& (0+255),w,b
  1516  003CF0  A0D8               	btfss	status,0,c
  1517  003CF2  D6CE               	goto	l7641
  1518  003CF4                     u10650:
  1519                           
  1520                           ; BSR set to: 1
  1521                           ;motore.c: 177: battery_measure();
  1522  003CF4  ECB8  F027         	call	_battery_measure	;wreg free
  1523                           
  1524                           ;motore.c: 178: previousTimeCounter2 = timeCounter;
  1525  003CF8  C0EF  F027         	movff	_timeCounter,_previousTimeCounter2	;volatile
  1526  003CFC  C0F0  F028         	movff	_timeCounter+1,_previousTimeCounter2+1	;volatile
  1527  003D00  C0F1  F029         	movff	_timeCounter+2,_previousTimeCounter2+2	;volatile
  1528  003D04  C0F2  F02A         	movff	_timeCounter+3,_previousTimeCounter2+3	;volatile
  1529  003D08  D6C3               	goto	l7641
  1530  003D0A                     __end_of_main:
  1531                           	opt stack 0
  1532                           tblptru	equ	0xFF8
  1533                           tblptrh	equ	0xFF7
  1534                           tblptrl	equ	0xFF6
  1535                           tablat	equ	0xFF5
  1536                           postinc0	equ	0xFEE
  1537                           wreg	equ	0xFE8
  1538                           status	equ	0xFD8
  1539                           
  1540 ;; *************** function _send_data *****************
  1541 ;; Defined at:
  1542 ;;		line 232 in file "motore.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;		None
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;		None               void
  1549 ;; Registers used:
  1550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1560 ;;Total ram usage:        0 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    3
  1563 ;; This function calls:
  1564 ;;		_CANisTxReady
  1565 ;;		_CANsendMessage
  1566 ;; This function is called by:
  1567 ;;		_main
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text1
  1572  005124                     __ptext1:
  1573                           	opt stack 0
  1574  005124                     _send_data:
  1575                           	opt stack 27
  1576                           
  1577                           ;motore.c: 233: if (CANisTxReady()) {
  1578                           
  1579                           ;incstack = 0
  1580  005124  EC66  F029         	call	_CANisTxReady	;wreg free
  1581  005128  0900               	iorlw	0
  1582  00512A  A4D8               	btfss	status,2,c
  1583                           
  1584                           ;motore.c: 234: if (remote_frame == 1) {
  1585  00512C  AC3F               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1586  00512E  D017               	goto	l7595
  1587                           
  1588                           ;motore.c: 235: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1589  005130  C023  F060         	movff	_id,CANsendMessage@identifier	;volatile
  1590  005134  C024  F061         	movff	_id+1,CANsendMessage@identifier+1	;volatile
  1591  005138  C025  F062         	movff	_id+2,CANsendMessage@identifier+2	;volatile
  1592  00513C  C026  F063         	movff	_id+3,CANsendMessage@identifier+3	;volatile
  1593  005140  0E37               	movlw	low _data_array
  1594  005142  0100               	movlb	0	; () banked
  1595  005144  6F64               	movwf	CANsendMessage@data& (0+255),b
  1596  005146  0E00               	movlw	high _data_array
  1597  005148  0100               	movlb	0	; () banked
  1598  00514A  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1599  00514C  0E08               	movlw	8
  1600  00514E  0100               	movlb	0	; () banked
  1601  005150  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1602  005152  0EBC               	movlw	188
  1603  005154  0100               	movlb	0	; () banked
  1604  005156  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1605  005158  EC2A  F00C         	call	_CANsendMessage	;wreg free
  1606                           
  1607                           ;motore.c: 236: remote_frame = 0;
  1608  00515C  9C3F               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1609  00515E                     l7595:
  1610                           
  1611                           ;motore.c: 237: }
  1612                           ;motore.c: 238: }
  1613                           ;motore.c: 239: if ((TXB0CONbits.TXABT) || (TXB1CONbits.TXABT)) {
  1614  00515E  010F               	movlb	15	; () banked
  1615  005160  BD40               	btfsc	64,6,b	;volatile
  1616  005162  D003               	goto	l713
  1617                           
  1618                           ; BSR set to: 15
  1619  005164  010F               	movlb	15	; () banked
  1620  005166  AD30               	btfss	48,6,b	;volatile
  1621  005168  D002               	goto	l711
  1622  00516A                     l713:
  1623                           
  1624                           ; BSR set to: 15
  1625                           ;motore.c: 240: can_retry = 1;
  1626  00516A  803F               	bsf	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
  1627                           
  1628                           ;motore.c: 241: } else {
  1629  00516C  0012               	return	
  1630  00516E                     l711:
  1631                           
  1632                           ; BSR set to: 15
  1633                           ;motore.c: 242: can_retry = 0;
  1634  00516E  903F               	bcf	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
  1635  005170  0012               	return	
  1636  005172                     __end_of_send_data:
  1637                           	opt stack 0
  1638                           tblptru	equ	0xFF8
  1639                           tblptrh	equ	0xFF7
  1640                           tblptrl	equ	0xFF6
  1641                           tablat	equ	0xFF5
  1642                           postinc0	equ	0xFEE
  1643                           wreg	equ	0xFE8
  1644                           status	equ	0xFD8
  1645                           
  1646 ;; *************** function _rampe *****************
  1647 ;; Defined at:
  1648 ;;		line 183 in file "motore.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;		None               void
  1655 ;; Registers used:
  1656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1663 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1664 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1665 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1666 ;;Total ram usage:       16 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; Hardware stack levels required when called:    6
  1669 ;; This function calls:
  1670 ;;		_CANisTxReady
  1671 ;;		_CANsendMessage
  1672 ;;		_SetDCEPWM1
  1673 ;;		_SetOutputEPWM1
  1674 ;;		___fladd
  1675 ;;		___fltol
  1676 ;;		___lwdiv
  1677 ;;		___xxtofl
  1678 ;;		_abs
  1679 ;;		_pow
  1680 ;; This function is called by:
  1681 ;;		_main
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text2
  1686  0024EC                     __ptext2:
  1687                           	opt stack 0
  1688  0024EC                     _rampe:
  1689                           	opt stack 24
  1690                           
  1691                           ;motore.c: 184: if (requestSpeed > 1) {
  1692                           
  1693                           ; BSR set to: 15
  1694                           ;incstack = 0
  1695  0024EC  BE2E               	btfsc	_requestSpeed+3,7,c	;volatile
  1696  0024EE  D254               	goto	l7585
  1697  0024F0  502E               	movf	_requestSpeed+3,w,c	;volatile
  1698  0024F2  102D               	iorwf	_requestSpeed+2,w,c	;volatile
  1699  0024F4  102C               	iorwf	_requestSpeed+1,w,c	;volatile
  1700  0024F6  E104               	bnz	l7521
  1701  0024F8  0E02               	movlw	2
  1702  0024FA  5C2B               	subwf	_requestSpeed,w,c	;volatile
  1703  0024FC  A0D8               	btfss	status,0,c
  1704  0024FE  D24C               	goto	l7585
  1705  002500                     l7521:
  1706  002500  EC66  F029         	call	_CANisTxReady	;wreg free
  1707  002504  06E8               	decf	wreg,f,c
  1708  002506  A4D8               	btfss	status,2,c
  1709  002508  D7FB               	goto	l7521
  1710                           
  1711                           ;motore.c: 186: CANsendMessage(0b00000000110, data_array_debug, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1712  00250A  0E06               	movlw	6
  1713  00250C  0100               	movlb	0	; () banked
  1714  00250E  6F60               	movwf	CANsendMessage@identifier& (0+255),b
  1715  002510  0E00               	movlw	0
  1716  002512  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1717  002514  0E00               	movlw	0
  1718  002516  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1719  002518  0E00               	movlw	0
  1720  00251A  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1721  00251C  0E1F               	movlw	low _data_array_debug
  1722  00251E  0100               	movlb	0	; () banked
  1723  002520  6F64               	movwf	CANsendMessage@data& (0+255),b
  1724  002522  0E01               	movlw	high _data_array_debug
  1725  002524  0100               	movlb	0	; () banked
  1726  002526  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
  1727  002528  0E08               	movlw	8
  1728  00252A  0100               	movlb	0	; () banked
  1729  00252C  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
  1730  00252E  0EFC               	movlw	252
  1731  002530  0100               	movlb	0	; () banked
  1732  002532  6F67               	movwf	CANsendMessage@flags& (0+255),b
  1733  002534  EC2A  F00C         	call	_CANsendMessage	;wreg free
  1734                           
  1735                           ;motore.c: 187: if (speed_fetched == 1) {
  1736  002538  A240               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1737  00253A  D21B               	goto	l7579
  1738                           
  1739                           ;motore.c: 188: if (dir == 1) {
  1740  00253C  0100               	movlb	0	; () banked
  1741  00253E  05FD               	decf	_dir& (0+255),w,b	;volatile
  1742  002540  0100               	movlb	0	; () banked
  1743  002542  11FE               	iorwf	(_dir+1)& (0+255),w,b	;volatile
  1744  002544  A4D8               	btfss	status,2,c
  1745  002546  D006               	goto	l7531
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;motore.c: 189: SetOutputEPWM1(0b01111111, 0b11111100);
  1749  002548  0EFC               	movlw	252
  1750  00254A  0100               	movlb	0	; () banked
  1751  00254C  6F60               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  1752  00254E  0E7F               	movlw	127
  1753  002550  EC69  F028         	call	_SetOutputEPWM1
  1754  002554                     l7531:
  1755                           
  1756                           ;motore.c: 190: }
  1757                           ;motore.c: 191: if (dir == 0) {
  1758  002554  0100               	movlb	0	; () banked
  1759  002556  51FD               	movf	_dir& (0+255),w,b	;volatile
  1760  002558  0100               	movlb	0	; () banked
  1761  00255A  11FE               	iorwf	(_dir+1)& (0+255),w,b	;volatile
  1762  00255C  A4D8               	btfss	status,2,c
  1763  00255E  D006               	goto	l7535
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;motore.c: 192: SetOutputEPWM1(0b11111111, 0b11111100);
  1767  002560  0EFC               	movlw	252
  1768  002562  0100               	movlb	0	; () banked
  1769  002564  6F60               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  1770  002566  0EFF               	movlw	255
  1771  002568  EC69  F028         	call	_SetOutputEPWM1
  1772  00256C                     l7535:
  1773                           
  1774                           ;motore.c: 193: }
  1775                           ;motore.c: 194: speed_fetched = 0;
  1776  00256C  9240               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1777                           
  1778                           ;motore.c: 195: currentSpeed = ((left_speed + right_speed) / 2);
  1779  00256E  0100               	movlb	0	; () banked
  1780  002570  51FB               	movf	_right_speed& (0+255),w,b	;volatile
  1781  002572  0100               	movlb	0	; () banked
  1782  002574  25F7               	addwf	_left_speed& (0+255),w,b	;volatile
  1783  002576  0101               	movlb	1	; () banked
  1784  002578  6F27               	movwf	??_rampe& (0+255),b
  1785  00257A  0100               	movlb	0	; () banked
  1786  00257C  51FC               	movf	(_right_speed+1)& (0+255),w,b	;volatile
  1787  00257E  0100               	movlb	0	; () banked
  1788  002580  21F8               	addwfc	(_left_speed+1)& (0+255),w,b	;volatile
  1789  002582  0101               	movlb	1	; () banked
  1790  002584  6F28               	movwf	(??_rampe+1)& (0+255),b
  1791  002586  90D8               	bcf	status,0,c
  1792  002588  0101               	movlb	1	; () banked
  1793  00258A  3128               	rrcf	(??_rampe+1)& (0+255),w,b
  1794  00258C  0101               	movlb	1	; () banked
  1795  00258E  6F2A               	movwf	(??_rampe+3)& (0+255),b
  1796  002590  0101               	movlb	1	; () banked
  1797  002592  3127               	rrcf	??_rampe& (0+255),w,b
  1798  002594  0101               	movlb	1	; () banked
  1799  002596  6F29               	movwf	(??_rampe+2)& (0+255),b
  1800  002598  C129  F0DF         	movff	??_rampe+2,_currentSpeed	;volatile
  1801  00259C  C12A  F0E0         	movff	??_rampe+3,_currentSpeed+1	;volatile
  1802  0025A0  0100               	movlb	0	; () banked
  1803  0025A2  6BE1               	clrf	(_currentSpeed+2)& (0+255),b	;volatile
  1804  0025A4  6BE2               	clrf	(_currentSpeed+3)& (0+255),b	;volatile
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;motore.c: 196: if (currentSpeed == 0) {
  1808  0025A6  0100               	movlb	0	; () banked
  1809  0025A8  51DF               	movf	_currentSpeed& (0+255),w,b	;volatile
  1810  0025AA  0100               	movlb	0	; () banked
  1811  0025AC  11E0               	iorwf	(_currentSpeed+1)& (0+255),w,b	;volatile
  1812  0025AE  0100               	movlb	0	; () banked
  1813  0025B0  11E1               	iorwf	(_currentSpeed+2)& (0+255),w,b	;volatile
  1814  0025B2  0100               	movlb	0	; () banked
  1815  0025B4  11E2               	iorwf	(_currentSpeed+3)& (0+255),w,b	;volatile
  1816  0025B6  A4D8               	btfss	status,2,c
  1817  0025B8  D00C               	goto	l7545
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;motore.c: 197: SetDCEPWM1(1000);
  1821  0025BA  0E03               	movlw	3
  1822  0025BC  0100               	movlb	0	; () banked
  1823  0025BE  6F61               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1824  0025C0  0EE8               	movlw	232
  1825  0025C2  6F60               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  1826  0025C4  ECDD  F028         	call	_SetDCEPWM1	;wreg free
  1827                           
  1828                           ;motore.c: 198: previousPwm = 1000;
  1829  0025C8  0E03               	movlw	3
  1830  0025CA  0100               	movlb	0	; () banked
  1831  0025CC  6FFA               	movwf	(_previousPwm+1)& (0+255),b
  1832  0025CE  0EE8               	movlw	232
  1833  0025D0  6FF9               	movwf	_previousPwm& (0+255),b
  1834  0025D2                     l7545:
  1835                           
  1836                           ; BSR set to: 0
  1837                           ;motore.c: 199: }
  1838                           ;motore.c: 200: errore = abs((currentSpeed - requestSpeed));
  1839  0025D2  C02B  F127         	movff	_requestSpeed,??_rampe	;volatile
  1840  0025D6  C02C  F128         	movff	_requestSpeed+1,??_rampe+1	;volatile
  1841  0025DA  0101               	movlb	1	; () banked
  1842  0025DC  1F27               	comf	??_rampe& (0+255),f,b
  1843  0025DE  1F28               	comf	(??_rampe+1)& (0+255),f,b
  1844  0025E0  4B27               	infsnz	??_rampe& (0+255),f,b
  1845  0025E2  2B28               	incf	(??_rampe+1)& (0+255),f,b
  1846  0025E4  0100               	movlb	0	; () banked
  1847  0025E6  51DF               	movf	_currentSpeed& (0+255),w,b	;volatile
  1848  0025E8  0101               	movlb	1	; () banked
  1849  0025EA  2527               	addwf	??_rampe& (0+255),w,b
  1850  0025EC  0100               	movlb	0	; () banked
  1851  0025EE  6F60               	movwf	abs@a& (0+255),b
  1852  0025F0  0100               	movlb	0	; () banked
  1853  0025F2  51E0               	movf	(_currentSpeed+1)& (0+255),w,b	;volatile
  1854  0025F4  0101               	movlb	1	; () banked
  1855  0025F6  2128               	addwfc	(??_rampe+1)& (0+255),w,b
  1856  0025F8  0100               	movlb	0	; () banked
  1857  0025FA  6F61               	movwf	(abs@a+1)& (0+255),b
  1858  0025FC  EC50  F029         	call	_abs	;wreg free
  1859  002600  C060  F0F5         	movff	?_abs,_errore
  1860  002604  C061  F0F6         	movff	?_abs+1,_errore+1
  1861                           
  1862                           ;motore.c: 202: if (errore > 3000) {
  1863  002608  0EB9               	movlw	185
  1864  00260A  0100               	movlb	0	; () banked
  1865  00260C  5DF5               	subwf	_errore& (0+255),w,b
  1866  00260E  0E0B               	movlw	11
  1867  002610  0100               	movlb	0	; () banked
  1868  002612  59F6               	subwfb	(_errore+1)& (0+255),w,b
  1869  002614  A0D8               	btfss	status,0,c
  1870  002616  D058               	goto	l7555
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;motore.c: 203: correzione = pow(2, (errore / 200)) - 1;
  1874  002618  0E00               	movlw	0
  1875  00261A  0100               	movlb	0	; () banked
  1876  00261C  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1877  00261E  0EC8               	movlw	200
  1878  002620  6F62               	movwf	___lwdiv@divisor& (0+255),b
  1879  002622  C0F5  F060         	movff	_errore,___lwdiv@dividend
  1880  002626  C0F6  F061         	movff	_errore+1,___lwdiv@dividend+1
  1881  00262A  ECFF  F027         	call	___lwdiv	;wreg free
  1882  00262E  0100               	movlb	0	; () banked
  1883  002630  C060  F067         	movff	?___lwdiv,___xxtofl@val
  1884  002634  0100               	movlb	0	; () banked
  1885  002636  C061  F068         	movff	?___lwdiv+1,___xxtofl@val+1
  1886  00263A  0100               	movlb	0	; () banked
  1887  00263C  6B69               	clrf	(___xxtofl@val+2)& (0+255),b
  1888  00263E  6B6A               	clrf	(___xxtofl@val+3)& (0+255),b
  1889  002640  0E00               	movlw	0
  1890  002642  ECD2  F020         	call	___xxtofl
  1891  002646  C067  F12F         	movff	?___xxtofl,_rampe$4053
  1892  00264A  C068  F130         	movff	?___xxtofl+1,_rampe$4053+1
  1893  00264E  C069  F131         	movff	?___xxtofl+2,_rampe$4053+2
  1894  002652  C06A  F132         	movff	?___xxtofl+3,_rampe$4053+3
  1895                           
  1896                           ;motore.c: 203: correzione = pow(2, (errore / 200)) - 1;
  1897  002656  C12F  F0C9         	movff	_rampe$4053,pow@y
  1898  00265A  C130  F0CA         	movff	_rampe$4053+1,pow@y+1
  1899  00265E  C131  F0CB         	movff	_rampe$4053+2,pow@y+2
  1900  002662  C132  F0CC         	movff	_rampe$4053+3,pow@y+3
  1901  002666  0E00               	movlw	0
  1902  002668  0100               	movlb	0	; () banked
  1903  00266A  6FC5               	movwf	pow@x& (0+255),b
  1904  00266C  0E00               	movlw	0
  1905  00266E  6FC6               	movwf	(pow@x+1)& (0+255),b
  1906  002670  0E00               	movlw	0
  1907  002672  6FC7               	movwf	(pow@x+2)& (0+255),b
  1908  002674  0E40               	movlw	64
  1909  002676  6FC8               	movwf	(pow@x+3)& (0+255),b
  1910  002678  ECD2  F01F         	call	_pow	;wreg free
  1911  00267C  C0C5  F133         	movff	?_pow,_rampe$4054
  1912  002680  C0C6  F134         	movff	?_pow+1,_rampe$4054+1
  1913  002684  C0C7  F135         	movff	?_pow+2,_rampe$4054+2
  1914  002688  C0C8  F136         	movff	?_pow+3,_rampe$4054+3
  1915                           
  1916                           ;motore.c: 203: correzione = pow(2, (errore / 200)) - 1;
  1917  00268C  0E00               	movlw	0
  1918  00268E  0100               	movlb	0	; () banked
  1919  002690  6F92               	movwf	___fladd@a& (0+255),b
  1920  002692  0E00               	movlw	0
  1921  002694  6F93               	movwf	(___fladd@a+1)& (0+255),b
  1922  002696  0E80               	movlw	128
  1923  002698  6F94               	movwf	(___fladd@a+2)& (0+255),b
  1924  00269A  0EBF               	movlw	191
  1925  00269C  6F95               	movwf	(___fladd@a+3)& (0+255),b
  1926  00269E  C133  F08E         	movff	_rampe$4054,___fladd@b
  1927  0026A2  C134  F08F         	movff	_rampe$4054+1,___fladd@b+1
  1928  0026A6  C135  F090         	movff	_rampe$4054+2,___fladd@b+2
  1929  0026AA  C136  F091         	movff	_rampe$4054+3,___fladd@b+3
  1930  0026AE  ECD4  F014         	call	___fladd	;wreg free
  1931  0026B2  C08E  F0A2         	movff	?___fladd,___fltol@f1
  1932  0026B6  C08F  F0A3         	movff	?___fladd+1,___fltol@f1+1
  1933  0026BA  C090  F0A4         	movff	?___fladd+2,___fltol@f1+2
  1934  0026BE  C091  F0A5         	movff	?___fladd+3,___fltol@f1+3
  1935  0026C2  ECD9  F025         	call	___fltol	;wreg free
  1936  0026C6  D0B7               	goto	L2
  1937  0026C8                     l7555:
  1938  0026C8  0ED1               	movlw	209
  1939  0026CA  0100               	movlb	0	; () banked
  1940  0026CC  5DF5               	subwf	_errore& (0+255),w,b
  1941  0026CE  0E07               	movlw	7
  1942  0026D0  0100               	movlb	0	; () banked
  1943  0026D2  59F6               	subwfb	(_errore+1)& (0+255),w,b
  1944  0026D4  A0D8               	btfss	status,0,c
  1945  0026D6  D058               	goto	l7563
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;motore.c: 205: correzione = pow(2, (errore / 150)) - 1;
  1949  0026D8  0E00               	movlw	0
  1950  0026DA  0100               	movlb	0	; () banked
  1951  0026DC  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1952  0026DE  0E96               	movlw	150
  1953  0026E0  6F62               	movwf	___lwdiv@divisor& (0+255),b
  1954  0026E2  C0F5  F060         	movff	_errore,___lwdiv@dividend
  1955  0026E6  C0F6  F061         	movff	_errore+1,___lwdiv@dividend+1
  1956  0026EA  ECFF  F027         	call	___lwdiv	;wreg free
  1957  0026EE  0100               	movlb	0	; () banked
  1958  0026F0  C060  F067         	movff	?___lwdiv,___xxtofl@val
  1959  0026F4  0100               	movlb	0	; () banked
  1960  0026F6  C061  F068         	movff	?___lwdiv+1,___xxtofl@val+1
  1961  0026FA  0100               	movlb	0	; () banked
  1962  0026FC  6B69               	clrf	(___xxtofl@val+2)& (0+255),b
  1963  0026FE  6B6A               	clrf	(___xxtofl@val+3)& (0+255),b
  1964  002700  0E00               	movlw	0
  1965  002702  ECD2  F020         	call	___xxtofl
  1966  002706  C067  F12F         	movff	?___xxtofl,_rampe$4053
  1967  00270A  C068  F130         	movff	?___xxtofl+1,_rampe$4053+1
  1968  00270E  C069  F131         	movff	?___xxtofl+2,_rampe$4053+2
  1969  002712  C06A  F132         	movff	?___xxtofl+3,_rampe$4053+3
  1970                           
  1971                           ;motore.c: 205: correzione = pow(2, (errore / 150)) - 1;
  1972  002716  C12F  F0C9         	movff	_rampe$4053,pow@y
  1973  00271A  C130  F0CA         	movff	_rampe$4053+1,pow@y+1
  1974  00271E  C131  F0CB         	movff	_rampe$4053+2,pow@y+2
  1975  002722  C132  F0CC         	movff	_rampe$4053+3,pow@y+3
  1976  002726  0E00               	movlw	0
  1977  002728  0100               	movlb	0	; () banked
  1978  00272A  6FC5               	movwf	pow@x& (0+255),b
  1979  00272C  0E00               	movlw	0
  1980  00272E  6FC6               	movwf	(pow@x+1)& (0+255),b
  1981  002730  0E00               	movlw	0
  1982  002732  6FC7               	movwf	(pow@x+2)& (0+255),b
  1983  002734  0E40               	movlw	64
  1984  002736  6FC8               	movwf	(pow@x+3)& (0+255),b
  1985  002738  ECD2  F01F         	call	_pow	;wreg free
  1986  00273C  C0C5  F133         	movff	?_pow,_rampe$4054
  1987  002740  C0C6  F134         	movff	?_pow+1,_rampe$4054+1
  1988  002744  C0C7  F135         	movff	?_pow+2,_rampe$4054+2
  1989  002748  C0C8  F136         	movff	?_pow+3,_rampe$4054+3
  1990                           
  1991                           ;motore.c: 205: correzione = pow(2, (errore / 150)) - 1;
  1992  00274C  0E00               	movlw	0
  1993  00274E  0100               	movlb	0	; () banked
  1994  002750  6F92               	movwf	___fladd@a& (0+255),b
  1995  002752  0E00               	movlw	0
  1996  002754  6F93               	movwf	(___fladd@a+1)& (0+255),b
  1997  002756  0E80               	movlw	128
  1998  002758  6F94               	movwf	(___fladd@a+2)& (0+255),b
  1999  00275A  0EBF               	movlw	191
  2000  00275C  6F95               	movwf	(___fladd@a+3)& (0+255),b
  2001  00275E  C133  F08E         	movff	_rampe$4054,___fladd@b
  2002  002762  C134  F08F         	movff	_rampe$4054+1,___fladd@b+1
  2003  002766  C135  F090         	movff	_rampe$4054+2,___fladd@b+2
  2004  00276A  C136  F091         	movff	_rampe$4054+3,___fladd@b+3
  2005  00276E  ECD4  F014         	call	___fladd	;wreg free
  2006  002772  C08E  F0A2         	movff	?___fladd,___fltol@f1
  2007  002776  C08F  F0A3         	movff	?___fladd+1,___fltol@f1+1
  2008  00277A  C090  F0A4         	movff	?___fladd+2,___fltol@f1+2
  2009  00277E  C091  F0A5         	movff	?___fladd+3,___fltol@f1+3
  2010  002782  ECD9  F025         	call	___fltol	;wreg free
  2011  002786  D057               	goto	L2
  2012  002788                     l7563:
  2013                           
  2014                           ;motore.c: 207: correzione = pow(2, (errore / 100)) - 1;
  2015  002788  0E00               	movlw	0
  2016  00278A  0100               	movlb	0	; () banked
  2017  00278C  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2018  00278E  0E64               	movlw	100
  2019  002790  6F62               	movwf	___lwdiv@divisor& (0+255),b
  2020  002792  C0F5  F060         	movff	_errore,___lwdiv@dividend
  2021  002796  C0F6  F061         	movff	_errore+1,___lwdiv@dividend+1
  2022  00279A  ECFF  F027         	call	___lwdiv	;wreg free
  2023  00279E  0100               	movlb	0	; () banked
  2024  0027A0  C060  F067         	movff	?___lwdiv,___xxtofl@val
  2025  0027A4  0100               	movlb	0	; () banked
  2026  0027A6  C061  F068         	movff	?___lwdiv+1,___xxtofl@val+1
  2027  0027AA  0100               	movlb	0	; () banked
  2028  0027AC  6B69               	clrf	(___xxtofl@val+2)& (0+255),b
  2029  0027AE  6B6A               	clrf	(___xxtofl@val+3)& (0+255),b
  2030  0027B0  0E00               	movlw	0
  2031  0027B2  ECD2  F020         	call	___xxtofl
  2032  0027B6  C067  F12F         	movff	?___xxtofl,_rampe$4053
  2033  0027BA  C068  F130         	movff	?___xxtofl+1,_rampe$4053+1
  2034  0027BE  C069  F131         	movff	?___xxtofl+2,_rampe$4053+2
  2035  0027C2  C06A  F132         	movff	?___xxtofl+3,_rampe$4053+3
  2036                           
  2037                           ;motore.c: 207: correzione = pow(2, (errore / 100)) - 1;
  2038  0027C6  C12F  F0C9         	movff	_rampe$4053,pow@y
  2039  0027CA  C130  F0CA         	movff	_rampe$4053+1,pow@y+1
  2040  0027CE  C131  F0CB         	movff	_rampe$4053+2,pow@y+2
  2041  0027D2  C132  F0CC         	movff	_rampe$4053+3,pow@y+3
  2042  0027D6  0E00               	movlw	0
  2043  0027D8  0100               	movlb	0	; () banked
  2044  0027DA  6FC5               	movwf	pow@x& (0+255),b
  2045  0027DC  0E00               	movlw	0
  2046  0027DE  6FC6               	movwf	(pow@x+1)& (0+255),b
  2047  0027E0  0E00               	movlw	0
  2048  0027E2  6FC7               	movwf	(pow@x+2)& (0+255),b
  2049  0027E4  0E40               	movlw	64
  2050  0027E6  6FC8               	movwf	(pow@x+3)& (0+255),b
  2051  0027E8  ECD2  F01F         	call	_pow	;wreg free
  2052  0027EC  C0C5  F133         	movff	?_pow,_rampe$4054
  2053  0027F0  C0C6  F134         	movff	?_pow+1,_rampe$4054+1
  2054  0027F4  C0C7  F135         	movff	?_pow+2,_rampe$4054+2
  2055  0027F8  C0C8  F136         	movff	?_pow+3,_rampe$4054+3
  2056                           
  2057                           ;motore.c: 207: correzione = pow(2, (errore / 100)) - 1;
  2058  0027FC  0E00               	movlw	0
  2059  0027FE  0100               	movlb	0	; () banked
  2060  002800  6F92               	movwf	___fladd@a& (0+255),b
  2061  002802  0E00               	movlw	0
  2062  002804  6F93               	movwf	(___fladd@a+1)& (0+255),b
  2063  002806  0E80               	movlw	128
  2064  002808  6F94               	movwf	(___fladd@a+2)& (0+255),b
  2065  00280A  0EBF               	movlw	191
  2066  00280C  6F95               	movwf	(___fladd@a+3)& (0+255),b
  2067  00280E  C133  F08E         	movff	_rampe$4054,___fladd@b
  2068  002812  C134  F08F         	movff	_rampe$4054+1,___fladd@b+1
  2069  002816  C135  F090         	movff	_rampe$4054+2,___fladd@b+2
  2070  00281A  C136  F091         	movff	_rampe$4054+3,___fladd@b+3
  2071  00281E  ECD4  F014         	call	___fladd	;wreg free
  2072  002822  C08E  F0A2         	movff	?___fladd,___fltol@f1
  2073  002826  C08F  F0A3         	movff	?___fladd+1,___fltol@f1+1
  2074  00282A  C090  F0A4         	movff	?___fladd+2,___fltol@f1+2
  2075  00282E  C091  F0A5         	movff	?___fladd+3,___fltol@f1+3
  2076  002832  ECD9  F025         	call	___fltol	;wreg free
  2077  002836                     L2:
  2078  002836  C0A2  F0DB         	movff	?___fltol,_correzione
  2079  00283A  C0A3  F0DC         	movff	?___fltol+1,_correzione+1
  2080  00283E  C0A4  F0DD         	movff	?___fltol+2,_correzione+2
  2081  002842  C0A5  F0DE         	movff	?___fltol+3,_correzione+3
  2082                           
  2083                           ;motore.c: 210: }
  2084                           ;motore.c: 212: if (currentSpeed - requestSpeed > 0) {
  2085  002846  C02B  F127         	movff	_requestSpeed,??_rampe	;volatile
  2086  00284A  C02C  F128         	movff	_requestSpeed+1,??_rampe+1	;volatile
  2087  00284E  C02D  F129         	movff	_requestSpeed+2,??_rampe+2	;volatile
  2088  002852  C02E  F12A         	movff	_requestSpeed+3,??_rampe+3	;volatile
  2089  002856  0101               	movlb	1	; () banked
  2090  002858  1F27               	comf	??_rampe& (0+255),f,b
  2091  00285A  1F28               	comf	(??_rampe+1)& (0+255),f,b
  2092  00285C  1F29               	comf	(??_rampe+2)& (0+255),f,b
  2093  00285E  1F2A               	comf	(??_rampe+3)& (0+255),f,b
  2094  002860  2B27               	incf	??_rampe& (0+255),f,b
  2095  002862  0E00               	movlw	0
  2096  002864  2328               	addwfc	(??_rampe+1)& (0+255),f,b
  2097  002866  2329               	addwfc	(??_rampe+2)& (0+255),f,b
  2098  002868  232A               	addwfc	(??_rampe+3)& (0+255),f,b
  2099  00286A  0100               	movlb	0	; () banked
  2100  00286C  51DF               	movf	_currentSpeed& (0+255),w,b	;volatile
  2101  00286E  0101               	movlb	1	; () banked
  2102  002870  2527               	addwf	??_rampe& (0+255),w,b
  2103  002872  0101               	movlb	1	; () banked
  2104  002874  6F2B               	movwf	(??_rampe+4)& (0+255),b
  2105  002876  0100               	movlb	0	; () banked
  2106  002878  51E0               	movf	(_currentSpeed+1)& (0+255),w,b	;volatile
  2107  00287A  0101               	movlb	1	; () banked
  2108  00287C  2128               	addwfc	(??_rampe+1)& (0+255),w,b
  2109  00287E  0101               	movlb	1	; () banked
  2110  002880  6F2C               	movwf	(??_rampe+5)& (0+255),b
  2111  002882  0100               	movlb	0	; () banked
  2112  002884  51E1               	movf	(_currentSpeed+2)& (0+255),w,b	;volatile
  2113  002886  0101               	movlb	1	; () banked
  2114  002888  2129               	addwfc	(??_rampe+2)& (0+255),w,b
  2115  00288A  0101               	movlb	1	; () banked
  2116  00288C  6F2D               	movwf	(??_rampe+6)& (0+255),b
  2117  00288E  0100               	movlb	0	; () banked
  2118  002890  51E2               	movf	(_currentSpeed+3)& (0+255),w,b	;volatile
  2119  002892  0101               	movlb	1	; () banked
  2120  002894  212A               	addwfc	(??_rampe+3)& (0+255),w,b
  2121  002896  0101               	movlb	1	; () banked
  2122  002898  6F2E               	movwf	(??_rampe+7)& (0+255),b
  2123  00289A  0101               	movlb	1	; () banked
  2124  00289C  BF2E               	btfsc	(??_rampe+7)& (0+255),7,b
  2125  00289E  D03B               	goto	l7575
  2126  0028A0  0101               	movlb	1	; () banked
  2127  0028A2  512E               	movf	(??_rampe+7)& (0+255),w,b
  2128  0028A4  0101               	movlb	1	; () banked
  2129  0028A6  112D               	iorwf	(??_rampe+6)& (0+255),w,b
  2130  0028A8  0101               	movlb	1	; () banked
  2131  0028AA  112C               	iorwf	(??_rampe+5)& (0+255),w,b
  2132  0028AC  E104               	bnz	u10420
  2133  0028AE  0101               	movlb	1	; () banked
  2134  0028B0  052B               	decf	(??_rampe+4)& (0+255),w,b
  2135  0028B2  A0D8               	btfss	status,0,c
  2136  0028B4  D030               	goto	l7575
  2137  0028B6                     u10420:
  2138                           
  2139                           ; BSR set to: 1
  2140                           ;motore.c: 213: duty_set = previousPwm - correzione;
  2141  0028B6  C0DB  F127         	movff	_correzione,??_rampe
  2142  0028BA  C0DC  F128         	movff	_correzione+1,??_rampe+1
  2143  0028BE  C0DD  F129         	movff	_correzione+2,??_rampe+2
  2144  0028C2  C0DE  F12A         	movff	_correzione+3,??_rampe+3
  2145  0028C6  0101               	movlb	1	; () banked
  2146  0028C8  1F27               	comf	??_rampe& (0+255),f,b
  2147  0028CA  1F28               	comf	(??_rampe+1)& (0+255),f,b
  2148  0028CC  1F29               	comf	(??_rampe+2)& (0+255),f,b
  2149  0028CE  1F2A               	comf	(??_rampe+3)& (0+255),f,b
  2150  0028D0  2B27               	incf	??_rampe& (0+255),f,b
  2151  0028D2  0E00               	movlw	0
  2152  0028D4  2328               	addwfc	(??_rampe+1)& (0+255),f,b
  2153  0028D6  2329               	addwfc	(??_rampe+2)& (0+255),f,b
  2154  0028D8  232A               	addwfc	(??_rampe+3)& (0+255),f,b
  2155  0028DA  0100               	movlb	0	; () banked
  2156  0028DC  51F9               	movf	_previousPwm& (0+255),w,b
  2157  0028DE  0101               	movlb	1	; () banked
  2158  0028E0  2527               	addwf	??_rampe& (0+255),w,b
  2159  0028E2  0100               	movlb	0	; () banked
  2160  0028E4  6FE3               	movwf	_duty_set& (0+255),b
  2161  0028E6  0100               	movlb	0	; () banked
  2162  0028E8  51FA               	movf	(_previousPwm+1)& (0+255),w,b
  2163  0028EA  0101               	movlb	1	; () banked
  2164  0028EC  2128               	addwfc	(??_rampe+1)& (0+255),w,b
  2165  0028EE  0100               	movlb	0	; () banked
  2166  0028F0  6FE4               	movwf	(_duty_set+1)& (0+255),b
  2167  0028F2  0E00               	movlw	0
  2168  0028F4  0101               	movlb	1	; () banked
  2169  0028F6  2129               	addwfc	(??_rampe+2)& (0+255),w,b
  2170  0028F8  0100               	movlb	0	; () banked
  2171  0028FA  6FE5               	movwf	(_duty_set+2)& (0+255),b
  2172  0028FC  0E00               	movlw	0
  2173  0028FE  0101               	movlb	1	; () banked
  2174  002900  212A               	addwfc	(??_rampe+3)& (0+255),w,b
  2175  002902  0100               	movlb	0	; () banked
  2176  002904  6FE6               	movwf	(_duty_set+3)& (0+255),b
  2177                           
  2178                           ;motore.c: 214: if (duty_set < 0) {
  2179  002906  0100               	movlb	0	; () banked
  2180  002908  AFE6               	btfss	(_duty_set+3)& (0+255),7,b
  2181  00290A  D033               	goto	l7579
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;motore.c: 215: duty_set = 0;
  2185  00290C  0E00               	movlw	0
  2186  00290E  0100               	movlb	0	; () banked
  2187  002910  6FE3               	movwf	_duty_set& (0+255),b
  2188  002912  0E00               	movlw	0
  2189  002914  D029               	goto	L3
  2190  002916                     l7575:
  2191                           
  2192                           ;motore.c: 218: duty_set = previousPwm + correzione;
  2193  002916  0100               	movlb	0	; () banked
  2194  002918  51F9               	movf	_previousPwm& (0+255),w,b
  2195  00291A  0100               	movlb	0	; () banked
  2196  00291C  25DB               	addwf	_correzione& (0+255),w,b
  2197  00291E  0100               	movlb	0	; () banked
  2198  002920  6FE3               	movwf	_duty_set& (0+255),b
  2199  002922  0100               	movlb	0	; () banked
  2200  002924  51FA               	movf	(_previousPwm+1)& (0+255),w,b
  2201  002926  0100               	movlb	0	; () banked
  2202  002928  21DC               	addwfc	(_correzione+1)& (0+255),w,b
  2203  00292A  0100               	movlb	0	; () banked
  2204  00292C  6FE4               	movwf	(_duty_set+1)& (0+255),b
  2205  00292E  0E00               	movlw	0
  2206  002930  0100               	movlb	0	; () banked
  2207  002932  21DD               	addwfc	(_correzione+2)& (0+255),w,b
  2208  002934  0100               	movlb	0	; () banked
  2209  002936  6FE5               	movwf	(_duty_set+2)& (0+255),b
  2210  002938  0E00               	movlw	0
  2211  00293A  0100               	movlb	0	; () banked
  2212  00293C  21DE               	addwfc	(_correzione+3)& (0+255),w,b
  2213  00293E  0100               	movlb	0	; () banked
  2214  002940  6FE6               	movwf	(_duty_set+3)& (0+255),b
  2215                           
  2216                           ;motore.c: 219: if (duty_set > 1022) {
  2217  002942  0100               	movlb	0	; () banked
  2218  002944  BFE6               	btfsc	(_duty_set+3)& (0+255),7,b
  2219  002946  D015               	goto	l7579
  2220  002948  0100               	movlb	0	; () banked
  2221  00294A  51E6               	movf	(_duty_set+3)& (0+255),w,b
  2222  00294C  0100               	movlb	0	; () banked
  2223  00294E  11E5               	iorwf	(_duty_set+2)& (0+255),w,b
  2224  002950  E107               	bnz	u10440
  2225  002952  0100               	movlb	0	; () banked
  2226  002954  29E3               	incf	_duty_set& (0+255),w,b
  2227  002956  0E03               	movlw	3
  2228  002958  0100               	movlb	0	; () banked
  2229  00295A  59E4               	subwfb	(_duty_set+1)& (0+255),w,b
  2230  00295C  A0D8               	btfss	status,0,c
  2231  00295E  D009               	goto	l7579
  2232  002960                     u10440:
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;motore.c: 220: duty_set = 1023;
  2236  002960  0EFF               	movlw	255
  2237  002962  0100               	movlb	0	; () banked
  2238  002964  6FE3               	movwf	_duty_set& (0+255),b
  2239  002966  0E03               	movlw	3
  2240  002968                     L3:
  2241  002968  6FE4               	movwf	(_duty_set+1)& (0+255),b
  2242  00296A  0E00               	movlw	0
  2243  00296C  6FE5               	movwf	(_duty_set+2)& (0+255),b
  2244  00296E  0E00               	movlw	0
  2245  002970  6FE6               	movwf	(_duty_set+3)& (0+255),b
  2246  002972                     l7579:
  2247                           
  2248                           ;motore.c: 221: }
  2249                           ;motore.c: 222: }
  2250                           ;motore.c: 223: }
  2251                           ;motore.c: 224: previousPwm = duty_set;
  2252  002972  C0E3  F0F9         	movff	_duty_set,_previousPwm
  2253  002976  C0E4  F0FA         	movff	_duty_set+1,_previousPwm+1
  2254                           
  2255                           ;motore.c: 225: previousTimeCounter1 = timeCounter;
  2256  00297A  C0EF  F0EB         	movff	_timeCounter,_previousTimeCounter1	;volatile
  2257  00297E  C0F0  F0EC         	movff	_timeCounter+1,_previousTimeCounter1+1	;volatile
  2258  002982  C0F1  F0ED         	movff	_timeCounter+2,_previousTimeCounter1+2	;volatile
  2259  002986  C0F2  F0EE         	movff	_timeCounter+3,_previousTimeCounter1+3	;volatile
  2260                           
  2261                           ;motore.c: 226: SetDCEPWM1(duty_set);
  2262  00298A  C0E3  F060         	movff	_duty_set,SetDCEPWM1@dutycycle
  2263  00298E  C0E4  F061         	movff	_duty_set+1,SetDCEPWM1@dutycycle+1
  2264  002992  ECDD  F028         	call	_SetDCEPWM1	;wreg free
  2265                           
  2266                           ;motore.c: 227: } else {
  2267  002996  0012               	return	
  2268  002998                     l7585:
  2269                           
  2270                           ;motore.c: 228: SetDCEPWM1(0);
  2271  002998  0E00               	movlw	0
  2272  00299A  0100               	movlb	0	; () banked
  2273  00299C  6F61               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  2274  00299E  0E00               	movlw	0
  2275  0029A0  6F60               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  2276  0029A2  ECDD  F028         	call	_SetDCEPWM1	;wreg free
  2277  0029A6  0012               	return	
  2278  0029A8                     __end_of_rampe:
  2279                           	opt stack 0
  2280                           tblptru	equ	0xFF8
  2281                           tblptrh	equ	0xFF7
  2282                           tblptrl	equ	0xFF6
  2283                           tablat	equ	0xFF5
  2284                           postinc0	equ	0xFEE
  2285                           wreg	equ	0xFE8
  2286                           status	equ	0xFD8
  2287                           
  2288 ;; *************** function _pow *****************
  2289 ;; Defined at:
  2290 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\pow.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  x               4  101[BANK0 ] int 
  2293 ;;  y               4  105[BANK0 ] int 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  yi              4  118[BANK0 ] unsigned long 
  2296 ;;  sign            1  117[BANK0 ] unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  4  101[BANK0 ] unsigned char 
  2299 ;; Registers used:
  2300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2306 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2307 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2309 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2310 ;;Total ram usage:       21 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    5
  2313 ;; This function calls:
  2314 ;;		___flge
  2315 ;;		___flmul
  2316 ;;		___flneg
  2317 ;;		___fltol
  2318 ;;		___xxtofl
  2319 ;;		_exp
  2320 ;;		_log
  2321 ;; This function is called by:
  2322 ;;		_rampe
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text3
  2327  003FA4                     __ptext3:
  2328                           	opt stack 0
  2329  003FA4                     _pow:
  2330                           	opt stack 24
  2331                           
  2332                           ;incstack = 0
  2333  003FA4  0E00               	movlw	0
  2334  003FA6  0100               	movlb	0	; () banked
  2335  003FA8  6FD5               	movwf	pow@sign& (0+255),b
  2336                           
  2337                           ; BSR set to: 0
  2338  003FAA  0100               	movlb	0	; () banked
  2339  003FAC  51C5               	movf	pow@x& (0+255),w,b
  2340  003FAE  0100               	movlb	0	; () banked
  2341  003FB0  11C6               	iorwf	(pow@x+1)& (0+255),w,b
  2342  003FB2  0100               	movlb	0	; () banked
  2343  003FB4  11C7               	iorwf	(pow@x+2)& (0+255),w,b
  2344  003FB6  0100               	movlb	0	; () banked
  2345  003FB8  11C8               	iorwf	(pow@x+3)& (0+255),w,b
  2346  003FBA  A4D8               	btfss	status,2,c
  2347  003FBC  D025               	goto	l7277
  2348                           
  2349                           ; BSR set to: 0
  2350  003FBE  0E00               	movlw	0
  2351  003FC0  0100               	movlb	0	; () banked
  2352  003FC2  6F60               	movwf	___flge@ff1& (0+255),b
  2353  003FC4  0E00               	movlw	0
  2354  003FC6  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  2355  003FC8  0E00               	movlw	0
  2356  003FCA  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  2357  003FCC  0E00               	movlw	0
  2358  003FCE  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  2359  003FD0  C0C9  F064         	movff	pow@y,___flge@ff2
  2360  003FD4  C0CA  F065         	movff	pow@y+1,___flge@ff2+1
  2361  003FD8  C0CB  F066         	movff	pow@y+2,___flge@ff2+2
  2362  003FDC  C0CC  F067         	movff	pow@y+3,___flge@ff2+3
  2363  003FE0  EC9C  F022         	call	___flge	;wreg free
  2364  003FE4  0100               	movlb	0	; () banked
  2365  003FE6  A0D8               	btfss	status,0,c
  2366  003FE8  D005               	goto	l1223
  2367                           
  2368                           ; BSR set to: 0
  2369  003FEA  0E00               	movlw	0
  2370  003FEC  0100               	movlb	0	; () banked
  2371  003FEE  6FF4               	movwf	(_errno+1)& (0+255),b
  2372  003FF0  0E21               	movlw	33
  2373  003FF2  6FF3               	movwf	_errno& (0+255),b
  2374  003FF4                     l1223:
  2375                           
  2376                           ; BSR set to: 0
  2377  003FF4  0E00               	movlw	0
  2378  003FF6  0100               	movlb	0	; () banked
  2379  003FF8  6FC5               	movwf	?_pow& (0+255),b
  2380  003FFA  0E00               	movlw	0
  2381  003FFC  6FC6               	movwf	(?_pow+1)& (0+255),b
  2382  003FFE  0E00               	movlw	0
  2383  004000  6FC7               	movwf	(?_pow+2)& (0+255),b
  2384  004002  0E00               	movlw	0
  2385  004004  6FC8               	movwf	(?_pow+3)& (0+255),b
  2386                           
  2387                           ; BSR set to: 0
  2388  004006  0012               	return	
  2389  004008                     l7277:
  2390                           
  2391                           ; BSR set to: 0
  2392  004008  0100               	movlb	0	; () banked
  2393  00400A  51C9               	movf	pow@y& (0+255),w,b
  2394  00400C  0100               	movlb	0	; () banked
  2395  00400E  11CA               	iorwf	(pow@y+1)& (0+255),w,b
  2396  004010  0100               	movlb	0	; () banked
  2397  004012  11CB               	iorwf	(pow@y+2)& (0+255),w,b
  2398  004014  0100               	movlb	0	; () banked
  2399  004016  11CC               	iorwf	(pow@y+3)& (0+255),w,b
  2400  004018  A4D8               	btfss	status,2,c
  2401  00401A  D00A               	goto	l7283
  2402                           
  2403                           ; BSR set to: 0
  2404  00401C  0E00               	movlw	0
  2405  00401E  0100               	movlb	0	; () banked
  2406  004020  6FC5               	movwf	?_pow& (0+255),b
  2407  004022  0E00               	movlw	0
  2408  004024  6FC6               	movwf	(?_pow+1)& (0+255),b
  2409  004026  0E80               	movlw	128
  2410  004028  6FC7               	movwf	(?_pow+2)& (0+255),b
  2411  00402A  0E3F               	movlw	63
  2412  00402C  6FC8               	movwf	(?_pow+3)& (0+255),b
  2413                           
  2414                           ; BSR set to: 0
  2415  00402E  0012               	return	
  2416  004030                     l7283:
  2417                           
  2418                           ; BSR set to: 0
  2419  004030  0100               	movlb	0	; () banked
  2420  004032  AFC8               	btfss	(pow@x+3)& (0+255),7,b
  2421  004034  D058               	goto	l7295
  2422                           
  2423                           ; BSR set to: 0
  2424  004036  C0C9  F0A2         	movff	pow@y,___fltol@f1
  2425  00403A  C0CA  F0A3         	movff	pow@y+1,___fltol@f1+1
  2426  00403E  C0CB  F0A4         	movff	pow@y+2,___fltol@f1+2
  2427  004042  C0CC  F0A5         	movff	pow@y+3,___fltol@f1+3
  2428  004046  ECD9  F025         	call	___fltol	;wreg free
  2429  00404A  C0A2  F0D6         	movff	?___fltol,pow@yi
  2430  00404E  C0A3  F0D7         	movff	?___fltol+1,pow@yi+1
  2431  004052  C0A4  F0D8         	movff	?___fltol+2,pow@yi+2
  2432  004056  C0A5  F0D9         	movff	?___fltol+3,pow@yi+3
  2433  00405A  C0D6  F067         	movff	pow@yi,___xxtofl@val
  2434  00405E  C0D7  F068         	movff	pow@yi+1,___xxtofl@val+1
  2435  004062  C0D8  F069         	movff	pow@yi+2,___xxtofl@val+2
  2436  004066  C0D9  F06A         	movff	pow@yi+3,___xxtofl@val+3
  2437  00406A  0E00               	movlw	0
  2438  00406C  ECD2  F020         	call	___xxtofl
  2439  004070  0100               	movlb	0	; () banked
  2440  004072  51C9               	movf	pow@y& (0+255),w,b
  2441  004074  0100               	movlb	0	; () banked
  2442  004076  1967               	xorwf	?___xxtofl& (0+255),w,b
  2443  004078  E110               	bnz	u10150
  2444  00407A  0100               	movlb	0	; () banked
  2445  00407C  51CA               	movf	(pow@y+1)& (0+255),w,b
  2446  00407E  0100               	movlb	0	; () banked
  2447  004080  1968               	xorwf	(?___xxtofl+1)& (0+255),w,b
  2448  004082  E10B               	bnz	u10150
  2449  004084  0100               	movlb	0	; () banked
  2450  004086  51CB               	movf	(pow@y+2)& (0+255),w,b
  2451  004088  0100               	movlb	0	; () banked
  2452  00408A  1969               	xorwf	(?___xxtofl+2)& (0+255),w,b
  2453  00408C  E106               	bnz	u10150
  2454  00408E  0100               	movlb	0	; () banked
  2455  004090  51CC               	movf	(pow@y+3)& (0+255),w,b
  2456  004092  0100               	movlb	0	; () banked
  2457  004094  196A               	xorwf	(?___xxtofl+3)& (0+255),w,b
  2458  004096  B4D8               	btfsc	status,2,c
  2459  004098  D00F               	goto	l7291
  2460  00409A                     u10150:
  2461                           
  2462                           ; BSR set to: 0
  2463  00409A  0E00               	movlw	0
  2464  00409C  0100               	movlb	0	; () banked
  2465  00409E  6FF4               	movwf	(_errno+1)& (0+255),b
  2466  0040A0  0E21               	movlw	33
  2467  0040A2  6FF3               	movwf	_errno& (0+255),b
  2468  0040A4  0E00               	movlw	0
  2469  0040A6  0100               	movlb	0	; () banked
  2470  0040A8  6FC5               	movwf	?_pow& (0+255),b
  2471  0040AA  0E00               	movlw	0
  2472  0040AC  6FC6               	movwf	(?_pow+1)& (0+255),b
  2473  0040AE  0E00               	movlw	0
  2474  0040B0  6FC7               	movwf	(?_pow+2)& (0+255),b
  2475  0040B2  0E00               	movlw	0
  2476  0040B4  6FC8               	movwf	(?_pow+3)& (0+255),b
  2477                           
  2478                           ; BSR set to: 0
  2479  0040B6  0012               	return	
  2480  0040B8                     l7291:
  2481                           
  2482                           ; BSR set to: 0
  2483  0040B8  0100               	movlb	0	; () banked
  2484  0040BA  51D6               	movf	pow@yi& (0+255),w,b
  2485  0040BC  0B01               	andlw	1
  2486  0040BE  0100               	movlb	0	; () banked
  2487  0040C0  6FD5               	movwf	pow@sign& (0+255),b
  2488                           
  2489                           ; BSR set to: 0
  2490  0040C2  C0C5  F060         	movff	pow@x,___flneg@f1
  2491  0040C6  C0C6  F061         	movff	pow@x+1,___flneg@f1+1
  2492  0040CA  C0C7  F062         	movff	pow@x+2,___flneg@f1+2
  2493  0040CE  C0C8  F063         	movff	pow@x+3,___flneg@f1+3
  2494  0040D2  ECFF  F028         	call	___flneg	;wreg free
  2495  0040D6  C060  F0C5         	movff	?___flneg,pow@x
  2496  0040DA  C061  F0C6         	movff	?___flneg+1,pow@x+1
  2497  0040DE  C062  F0C7         	movff	?___flneg+2,pow@x+2
  2498  0040E2  C063  F0C8         	movff	?___flneg+3,pow@x+3
  2499  0040E6                     l7295:
  2500  0040E6  C0C5  F0B2         	movff	pow@x,log@x
  2501  0040EA  C0C6  F0B3         	movff	pow@x+1,log@x+1
  2502  0040EE  C0C7  F0B4         	movff	pow@x+2,log@x+2
  2503  0040F2  C0C8  F0B5         	movff	pow@x+3,log@x+3
  2504  0040F6  EC64  F023         	call	_log	;wreg free
  2505  0040FA  C0B2  F0CD         	movff	?_log,_pow$4055
  2506  0040FE  C0B3  F0CE         	movff	?_log+1,_pow$4055+1
  2507  004102  C0B4  F0CF         	movff	?_log+2,_pow$4055+2
  2508  004106  C0B5  F0D0         	movff	?_log+3,_pow$4055+3
  2509  00410A  C0CD  F075         	movff	_pow$4055,___flmul@b
  2510  00410E  C0CE  F076         	movff	_pow$4055+1,___flmul@b+1
  2511  004112  C0CF  F077         	movff	_pow$4055+2,___flmul@b+2
  2512  004116  C0D0  F078         	movff	_pow$4055+3,___flmul@b+3
  2513  00411A  C0C9  F079         	movff	pow@y,___flmul@a
  2514  00411E  C0CA  F07A         	movff	pow@y+1,___flmul@a+1
  2515  004122  C0CB  F07B         	movff	pow@y+2,___flmul@a+2
  2516  004126  C0CC  F07C         	movff	pow@y+3,___flmul@a+3
  2517  00412A  EC28  F017         	call	___flmul	;wreg free
  2518  00412E  C075  F0D1         	movff	?___flmul,_pow$4056
  2519  004132  C076  F0D2         	movff	?___flmul+1,_pow$4056+1
  2520  004136  C077  F0D3         	movff	?___flmul+2,_pow$4056+2
  2521  00413A  C078  F0D4         	movff	?___flmul+3,_pow$4056+3
  2522  00413E  C0D1  F0BA         	movff	_pow$4056,exp@x
  2523  004142  C0D2  F0BB         	movff	_pow$4056+1,exp@x+1
  2524  004146  C0D3  F0BC         	movff	_pow$4056+2,exp@x+2
  2525  00414A  C0D4  F0BD         	movff	_pow$4056+3,exp@x+3
  2526  00414E  EC85  F01E         	call	_exp	;wreg free
  2527  004152  C0BA  F0C5         	movff	?_exp,pow@x
  2528  004156  C0BB  F0C6         	movff	?_exp+1,pow@x+1
  2529  00415A  C0BC  F0C7         	movff	?_exp+2,pow@x+2
  2530  00415E  C0BD  F0C8         	movff	?_exp+3,pow@x+3
  2531  004162  0100               	movlb	0	; () banked
  2532  004164  51D5               	movf	pow@sign& (0+255),w,b
  2533  004166  0100               	movlb	0	; () banked
  2534  004168  B4D8               	btfsc	status,2,c
  2535  00416A  D013               	goto	l1228
  2536                           
  2537                           ; BSR set to: 0
  2538  00416C  C0C5  F060         	movff	pow@x,___flneg@f1
  2539  004170  C0C6  F061         	movff	pow@x+1,___flneg@f1+1
  2540  004174  C0C7  F062         	movff	pow@x+2,___flneg@f1+2
  2541  004178  C0C8  F063         	movff	pow@x+3,___flneg@f1+3
  2542  00417C  ECFF  F028         	call	___flneg	;wreg free
  2543  004180  C060  F0C5         	movff	?___flneg,?_pow
  2544  004184  C061  F0C6         	movff	?___flneg+1,?_pow+1
  2545  004188  C062  F0C7         	movff	?___flneg+2,?_pow+2
  2546  00418C  C063  F0C8         	movff	?___flneg+3,?_pow+3
  2547  004190  0012               	return	
  2548  004192                     l1228:
  2549                           
  2550                           ; BSR set to: 0
  2551  004192  C0C5  F0C5         	movff	pow@x,?_pow
  2552  004196  C0C6  F0C6         	movff	pow@x+1,?_pow+1
  2553  00419A  C0C7  F0C7         	movff	pow@x+2,?_pow+2
  2554  00419E  C0C8  F0C8         	movff	pow@x+3,?_pow+3
  2555  0041A2  0012               	return		;funcret
  2556  0041A4                     __end_of_pow:
  2557                           	opt stack 0
  2558                           tblptru	equ	0xFF8
  2559                           tblptrh	equ	0xFF7
  2560                           tblptrl	equ	0xFF6
  2561                           tablat	equ	0xFF5
  2562                           postinc0	equ	0xFEE
  2563                           wreg	equ	0xFE8
  2564                           status	equ	0xFD8
  2565                           
  2566 ;; *************** function _log *****************
  2567 ;; Defined at:
  2568 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\log.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  x               4   82[BANK0 ] unsigned char 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  exponent        2   86[BANK0 ] int 
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  4   82[BANK0 ] int 
  2575 ;; Registers used:
  2576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2582 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2583 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2585 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2586 ;;Total ram usage:        6 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:    4
  2589 ;; This function calls:
  2590 ;;		___fladd
  2591 ;;		___flmul
  2592 ;;		___xxtofl
  2593 ;;		_eval_poly
  2594 ;;		_frexp
  2595 ;; This function is called by:
  2596 ;;		_pow
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	text4
  2601  0046C8                     __ptext4:
  2602                           	opt stack 0
  2603  0046C8                     _log:
  2604                           	opt stack 24
  2605                           
  2606                           ;incstack = 0
  2607  0046C8  0100               	movlb	0	; () banked
  2608  0046CA  AFB5               	btfss	(log@x+3)& (0+255),7,b
  2609  0046CC  D00F               	goto	l6885
  2610                           
  2611                           ; BSR set to: 0
  2612  0046CE  0E00               	movlw	0
  2613  0046D0  0100               	movlb	0	; () banked
  2614  0046D2  6FF4               	movwf	(_errno+1)& (0+255),b
  2615  0046D4  0E21               	movlw	33
  2616  0046D6  6FF3               	movwf	_errno& (0+255),b
  2617  0046D8  0E00               	movlw	0
  2618  0046DA  0100               	movlb	0	; () banked
  2619  0046DC  6FB2               	movwf	?_log& (0+255),b
  2620  0046DE  0E00               	movlw	0
  2621  0046E0  6FB3               	movwf	(?_log+1)& (0+255),b
  2622  0046E2  0E00               	movlw	0
  2623  0046E4  6FB4               	movwf	(?_log+2)& (0+255),b
  2624  0046E6  0E00               	movlw	0
  2625  0046E8  6FB5               	movwf	(?_log+3)& (0+255),b
  2626                           
  2627                           ; BSR set to: 0
  2628  0046EA  0012               	return	
  2629  0046EC                     l6885:
  2630                           
  2631                           ; BSR set to: 0
  2632  0046EC  0100               	movlb	0	; () banked
  2633  0046EE  51B2               	movf	log@x& (0+255),w,b
  2634  0046F0  0100               	movlb	0	; () banked
  2635  0046F2  11B3               	iorwf	(log@x+1)& (0+255),w,b
  2636  0046F4  0100               	movlb	0	; () banked
  2637  0046F6  11B4               	iorwf	(log@x+2)& (0+255),w,b
  2638  0046F8  0100               	movlb	0	; () banked
  2639  0046FA  11B5               	iorwf	(log@x+3)& (0+255),w,b
  2640  0046FC  A4D8               	btfss	status,2,c
  2641  0046FE  D00F               	goto	l6891
  2642                           
  2643                           ; BSR set to: 0
  2644  004700  0E00               	movlw	0
  2645  004702  0100               	movlb	0	; () banked
  2646  004704  6FF4               	movwf	(_errno+1)& (0+255),b
  2647  004706  0E22               	movlw	34
  2648  004708  6FF3               	movwf	_errno& (0+255),b
  2649  00470A  0E00               	movlw	0
  2650  00470C  0100               	movlb	0	; () banked
  2651  00470E  6FB2               	movwf	?_log& (0+255),b
  2652  004710  0E00               	movlw	0
  2653  004712  6FB3               	movwf	(?_log+1)& (0+255),b
  2654  004714  0E00               	movlw	0
  2655  004716  6FB4               	movwf	(?_log+2)& (0+255),b
  2656  004718  0E00               	movlw	0
  2657  00471A  6FB5               	movwf	(?_log+3)& (0+255),b
  2658                           
  2659                           ; BSR set to: 0
  2660  00471C  0012               	return	
  2661  00471E                     l6891:
  2662                           
  2663                           ; BSR set to: 0
  2664  00471E  0E00               	movlw	0
  2665  004720  0100               	movlb	0	; () banked
  2666  004722  6F79               	movwf	___flmul@a& (0+255),b
  2667  004724  0E00               	movlw	0
  2668  004726  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  2669  004728  0E00               	movlw	0
  2670  00472A  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  2671  00472C  0E40               	movlw	64
  2672  00472E  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  2673  004730  0EB6               	movlw	low log@exponent
  2674  004732  0100               	movlb	0	; () banked
  2675  004734  6F64               	movwf	frexp@eptr& (0+255),b
  2676  004736  0E00               	movlw	high log@exponent
  2677  004738  0100               	movlb	0	; () banked
  2678  00473A  6F65               	movwf	(frexp@eptr+1)& (0+255),b
  2679  00473C  C0B2  F060         	movff	log@x,frexp@value
  2680  004740  C0B3  F061         	movff	log@x+1,frexp@value+1
  2681  004744  C0B4  F062         	movff	log@x+2,frexp@value+2
  2682  004748  C0B5  F063         	movff	log@x+3,frexp@value+3
  2683  00474C  ECBE  F026         	call	_frexp	;wreg free
  2684  004750  C060  F075         	movff	?_frexp,___flmul@b
  2685  004754  C061  F076         	movff	?_frexp+1,___flmul@b+1
  2686  004758  C062  F077         	movff	?_frexp+2,___flmul@b+2
  2687  00475C  C063  F078         	movff	?_frexp+3,___flmul@b+3
  2688  004760  EC28  F017         	call	___flmul	;wreg free
  2689  004764  C075  F08E         	movff	?___flmul,___fladd@b
  2690  004768  C076  F08F         	movff	?___flmul+1,___fladd@b+1
  2691  00476C  C077  F090         	movff	?___flmul+2,___fladd@b+2
  2692  004770  C078  F091         	movff	?___flmul+3,___fladd@b+3
  2693  004774  0E00               	movlw	0
  2694  004776  0100               	movlb	0	; () banked
  2695  004778  6F92               	movwf	___fladd@a& (0+255),b
  2696  00477A  0E00               	movlw	0
  2697  00477C  6F93               	movwf	(___fladd@a+1)& (0+255),b
  2698  00477E  0E80               	movlw	128
  2699  004780  6F94               	movwf	(___fladd@a+2)& (0+255),b
  2700  004782  0EBF               	movlw	191
  2701  004784  6F95               	movwf	(___fladd@a+3)& (0+255),b
  2702  004786  ECD4  F014         	call	___fladd	;wreg free
  2703  00478A  C08E  F0B2         	movff	?___fladd,log@x
  2704  00478E  C08F  F0B3         	movff	?___fladd+1,log@x+1
  2705  004792  C090  F0B4         	movff	?___fladd+2,log@x+2
  2706  004796  C091  F0B5         	movff	?___fladd+3,log@x+3
  2707  00479A  0100               	movlb	0	; () banked
  2708  00479C  07B6               	decf	log@exponent& (0+255),f,b
  2709  00479E  A0D8               	btfss	status,0,c
  2710  0047A0  07B7               	decf	(log@exponent+1)& (0+255),f,b
  2711                           
  2712                           ; BSR set to: 0
  2713  0047A2  C0B2  F0A2         	movff	log@x,eval_poly@x
  2714  0047A6  C0B3  F0A3         	movff	log@x+1,eval_poly@x+1
  2715  0047AA  C0B4  F0A4         	movff	log@x+2,eval_poly@x+2
  2716  0047AE  C0B5  F0A5         	movff	log@x+3,eval_poly@x+3
  2717  0047B2  0E29               	movlw	low log@coeff
  2718  0047B4  0100               	movlb	0	; () banked
  2719  0047B6  6FA6               	movwf	eval_poly@d& (0+255),b
  2720  0047B8  0E0D               	movlw	high log@coeff
  2721  0047BA  0100               	movlb	0	; () banked
  2722  0047BC  6FA7               	movwf	(eval_poly@d+1)& (0+255),b
  2723  0047BE  0E00               	movlw	0
  2724  0047C0  0100               	movlb	0	; () banked
  2725  0047C2  6FA9               	movwf	(eval_poly@n+1)& (0+255),b
  2726  0047C4  0E08               	movlw	8
  2727  0047C6  6FA8               	movwf	eval_poly@n& (0+255),b
  2728  0047C8  EC4D  F025         	call	_eval_poly	;wreg free
  2729  0047CC  C0A2  F0B2         	movff	?_eval_poly,log@x
  2730  0047D0  C0A3  F0B3         	movff	?_eval_poly+1,log@x+1
  2731  0047D4  C0A4  F0B4         	movff	?_eval_poly+2,log@x+2
  2732  0047D8  C0A5  F0B5         	movff	?_eval_poly+3,log@x+3
  2733  0047DC  0E18               	movlw	24
  2734  0047DE  0100               	movlb	0	; () banked
  2735  0047E0  6F79               	movwf	___flmul@a& (0+255),b
  2736  0047E2  0E72               	movlw	114
  2737  0047E4  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  2738  0047E6  0E31               	movlw	49
  2739  0047E8  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  2740  0047EA  0E3F               	movlw	63
  2741  0047EC  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  2742  0047EE  C0B6  F067         	movff	log@exponent,___xxtofl@val
  2743  0047F2  C0B7  F068         	movff	log@exponent+1,___xxtofl@val+1
  2744  0047F6  0100               	movlb	0	; () banked
  2745  0047F8  0E00               	movlw	0
  2746  0047FA  BF68               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2747  0047FC  0EFF               	movlw	-1
  2748  0047FE  6F69               	movwf	(___xxtofl@val+2)& (0+255),b
  2749  004800  6F6A               	movwf	(___xxtofl@val+3)& (0+255),b
  2750  004802  0E01               	movlw	1
  2751  004804  ECD2  F020         	call	___xxtofl
  2752  004808  C067  F075         	movff	?___xxtofl,___flmul@b
  2753  00480C  C068  F076         	movff	?___xxtofl+1,___flmul@b+1
  2754  004810  C069  F077         	movff	?___xxtofl+2,___flmul@b+2
  2755  004814  C06A  F078         	movff	?___xxtofl+3,___flmul@b+3
  2756  004818  EC28  F017         	call	___flmul	;wreg free
  2757  00481C  C075  F08E         	movff	?___flmul,___fladd@b
  2758  004820  C076  F08F         	movff	?___flmul+1,___fladd@b+1
  2759  004824  C077  F090         	movff	?___flmul+2,___fladd@b+2
  2760  004828  C078  F091         	movff	?___flmul+3,___fladd@b+3
  2761  00482C  C0B2  F092         	movff	log@x,___fladd@a
  2762  004830  C0B3  F093         	movff	log@x+1,___fladd@a+1
  2763  004834  C0B4  F094         	movff	log@x+2,___fladd@a+2
  2764  004838  C0B5  F095         	movff	log@x+3,___fladd@a+3
  2765  00483C  ECD4  F014         	call	___fladd	;wreg free
  2766  004840  C08E  F0B2         	movff	?___fladd,?_log
  2767  004844  C08F  F0B3         	movff	?___fladd+1,?_log+1
  2768  004848  C090  F0B4         	movff	?___fladd+2,?_log+2
  2769  00484C  C091  F0B5         	movff	?___fladd+3,?_log+3
  2770  004850  0012               	return	
  2771  004852                     __end_of_log:
  2772                           	opt stack 0
  2773                           tblptru	equ	0xFF8
  2774                           tblptrh	equ	0xFF7
  2775                           tblptrl	equ	0xFF6
  2776                           tablat	equ	0xFF5
  2777                           postinc0	equ	0xFEE
  2778                           wreg	equ	0xFE8
  2779                           status	equ	0xFD8
  2780                           
  2781 ;; *************** function _exp *****************
  2782 ;; Defined at:
  2783 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\exp.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  x               4   90[BANK0 ] int 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  exponent        2   98[BANK0 ] int 
  2788 ;;  sign            1  100[BANK0 ] unsigned char 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  4   90[BANK0 ] unsigned char 
  2791 ;; Registers used:
  2792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2798 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2799 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2801 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2802 ;;Total ram usage:       11 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    4
  2805 ;; This function calls:
  2806 ;;		___fldiv
  2807 ;;		___flge
  2808 ;;		___flmul
  2809 ;;		___flneg
  2810 ;;		___flsub
  2811 ;;		___fltol
  2812 ;;		___xxtofl
  2813 ;;		_eval_poly
  2814 ;;		_floor
  2815 ;;		_ldexp
  2816 ;; This function is called by:
  2817 ;;		_pow
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text5
  2822  003D0A                     __ptext5:
  2823                           	opt stack 0
  2824  003D0A                     _exp:
  2825                           	opt stack 24
  2826                           
  2827                           ;incstack = 0
  2828  003D0A  0100               	movlb	0	; () banked
  2829  003D0C  51BA               	movf	exp@x& (0+255),w,b
  2830  003D0E  0100               	movlb	0	; () banked
  2831  003D10  11BB               	iorwf	(exp@x+1)& (0+255),w,b
  2832  003D12  0100               	movlb	0	; () banked
  2833  003D14  11BC               	iorwf	(exp@x+2)& (0+255),w,b
  2834  003D16  0100               	movlb	0	; () banked
  2835  003D18  11BD               	iorwf	(exp@x+3)& (0+255),w,b
  2836  003D1A  A4D8               	btfss	status,2,c
  2837  003D1C  D00A               	goto	l6907
  2838                           
  2839                           ; BSR set to: 0
  2840  003D1E  0E00               	movlw	0
  2841  003D20  0100               	movlb	0	; () banked
  2842  003D22  6FBA               	movwf	?_exp& (0+255),b
  2843  003D24  0E00               	movlw	0
  2844  003D26  6FBB               	movwf	(?_exp+1)& (0+255),b
  2845  003D28  0E80               	movlw	128
  2846  003D2A  6FBC               	movwf	(?_exp+2)& (0+255),b
  2847  003D2C  0E3F               	movlw	63
  2848  003D2E  6FBD               	movwf	(?_exp+3)& (0+255),b
  2849                           
  2850                           ; BSR set to: 0
  2851  003D30  0012               	return	
  2852  003D32                     l6907:
  2853                           
  2854                           ; BSR set to: 0
  2855  003D32  0E18               	movlw	24
  2856  003D34  0100               	movlb	0	; () banked
  2857  003D36  6F60               	movwf	___flge@ff1& (0+255),b
  2858  003D38  0E72               	movlw	114
  2859  003D3A  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  2860  003D3C  0E31               	movlw	49
  2861  003D3E  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  2862  003D40  0E44               	movlw	68
  2863  003D42  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  2864  003D44  C0BA  F064         	movff	exp@x,___flge@ff2
  2865  003D48  C0BB  F065         	movff	exp@x+1,___flge@ff2+1
  2866  003D4C  C0BC  F066         	movff	exp@x+2,___flge@ff2+2
  2867  003D50  C0BD  F067         	movff	exp@x+3,___flge@ff2+3
  2868  003D54  EC9C  F022         	call	___flge	;wreg free
  2869  003D58  0100               	movlb	0	; () banked
  2870  003D5A  B0D8               	btfsc	status,0,c
  2871  003D5C  D00F               	goto	l6913
  2872                           
  2873                           ; BSR set to: 0
  2874  003D5E  0E00               	movlw	0
  2875  003D60  0100               	movlb	0	; () banked
  2876  003D62  6FF4               	movwf	(_errno+1)& (0+255),b
  2877  003D64  0E22               	movlw	34
  2878  003D66  6FF3               	movwf	_errno& (0+255),b
  2879  003D68  0EFF               	movlw	255
  2880  003D6A  0100               	movlb	0	; () banked
  2881  003D6C  6FBA               	movwf	?_exp& (0+255),b
  2882  003D6E  0EFF               	movlw	255
  2883  003D70  6FBB               	movwf	(?_exp+1)& (0+255),b
  2884  003D72  0E7F               	movlw	127
  2885  003D74  6FBC               	movwf	(?_exp+2)& (0+255),b
  2886  003D76  0E7F               	movlw	127
  2887  003D78  6FBD               	movwf	(?_exp+3)& (0+255),b
  2888                           
  2889                           ; BSR set to: 0
  2890  003D7A  0012               	return	
  2891  003D7C                     l6913:
  2892                           
  2893                           ; BSR set to: 0
  2894  003D7C  C0BA  F060         	movff	exp@x,___flge@ff1
  2895  003D80  C0BB  F061         	movff	exp@x+1,___flge@ff1+1
  2896  003D84  C0BC  F062         	movff	exp@x+2,___flge@ff1+2
  2897  003D88  C0BD  F063         	movff	exp@x+3,___flge@ff1+3
  2898  003D8C  0E87               	movlw	135
  2899  003D8E  0100               	movlb	0	; () banked
  2900  003D90  6F64               	movwf	___flge@ff2& (0+255),b
  2901  003D92  0E48               	movlw	72
  2902  003D94  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  2903  003D96  0E3A               	movlw	58
  2904  003D98  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  2905  003D9A  0EC4               	movlw	196
  2906  003D9C  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  2907  003D9E  EC9C  F022         	call	___flge	;wreg free
  2908  003DA2  0100               	movlb	0	; () banked
  2909  003DA4  B0D8               	btfsc	status,0,c
  2910  003DA6  D00F               	goto	l6919
  2911                           
  2912                           ; BSR set to: 0
  2913  003DA8  0E00               	movlw	0
  2914  003DAA  0100               	movlb	0	; () banked
  2915  003DAC  6FF4               	movwf	(_errno+1)& (0+255),b
  2916  003DAE  0E22               	movlw	34
  2917  003DB0  6FF3               	movwf	_errno& (0+255),b
  2918  003DB2  0E00               	movlw	0
  2919  003DB4  0100               	movlb	0	; () banked
  2920  003DB6  6FBA               	movwf	?_exp& (0+255),b
  2921  003DB8  0E00               	movlw	0
  2922  003DBA  6FBB               	movwf	(?_exp+1)& (0+255),b
  2923  003DBC  0E00               	movlw	0
  2924  003DBE  6FBC               	movwf	(?_exp+2)& (0+255),b
  2925  003DC0  0E00               	movlw	0
  2926  003DC2  6FBD               	movwf	(?_exp+3)& (0+255),b
  2927                           
  2928                           ; BSR set to: 0
  2929  003DC4  0012               	return	
  2930  003DC6                     l6919:
  2931                           
  2932                           ; BSR set to: 0
  2933  003DC6  0100               	movlb	0	; () banked
  2934  003DC8  AFBD               	btfss	(exp@x+3)& (0+255),7,b
  2935  003DCA  D002               	goto	u9530
  2936  003DCC  0E01               	movlw	1
  2937  003DCE  D001               	goto	u9540
  2938  003DD0                     u9530:
  2939  003DD0  0E00               	movlw	0
  2940  003DD2                     u9540:
  2941  003DD2  0100               	movlb	0	; () banked
  2942  003DD4  6FC4               	movwf	exp@sign& (0+255),b
  2943                           
  2944                           ; BSR set to: 0
  2945  003DD6  0100               	movlb	0	; () banked
  2946  003DD8  51C4               	movf	exp@sign& (0+255),w,b
  2947  003DDA  0100               	movlb	0	; () banked
  2948  003DDC  B4D8               	btfsc	status,2,c
  2949  003DDE  D012               	goto	l6925
  2950                           
  2951                           ; BSR set to: 0
  2952  003DE0  C0BA  F060         	movff	exp@x,___flneg@f1
  2953  003DE4  C0BB  F061         	movff	exp@x+1,___flneg@f1+1
  2954  003DE8  C0BC  F062         	movff	exp@x+2,___flneg@f1+2
  2955  003DEC  C0BD  F063         	movff	exp@x+3,___flneg@f1+3
  2956  003DF0  ECFF  F028         	call	___flneg	;wreg free
  2957  003DF4  C060  F0BA         	movff	?___flneg,exp@x
  2958  003DF8  C061  F0BB         	movff	?___flneg+1,exp@x+1
  2959  003DFC  C062  F0BC         	movff	?___flneg+2,exp@x+2
  2960  003E00  C063  F0BD         	movff	?___flneg+3,exp@x+3
  2961  003E04                     l6925:
  2962  003E04  C0BA  F075         	movff	exp@x,___flmul@b
  2963  003E08  C0BB  F076         	movff	exp@x+1,___flmul@b+1
  2964  003E0C  C0BC  F077         	movff	exp@x+2,___flmul@b+2
  2965  003E10  C0BD  F078         	movff	exp@x+3,___flmul@b+3
  2966  003E14  0E3B               	movlw	59
  2967  003E16  0100               	movlb	0	; () banked
  2968  003E18  6F79               	movwf	___flmul@a& (0+255),b
  2969  003E1A  0EAA               	movlw	170
  2970  003E1C  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  2971  003E1E  0EB8               	movlw	184
  2972  003E20  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  2973  003E22  0E3F               	movlw	63
  2974  003E24  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  2975  003E26  EC28  F017         	call	___flmul	;wreg free
  2976  003E2A  C075  F0BA         	movff	?___flmul,exp@x
  2977  003E2E  C076  F0BB         	movff	?___flmul+1,exp@x+1
  2978  003E32  C077  F0BC         	movff	?___flmul+2,exp@x+2
  2979  003E36  C078  F0BD         	movff	?___flmul+3,exp@x+3
  2980  003E3A  C0BA  F0AC         	movff	exp@x,floor@x
  2981  003E3E  C0BB  F0AD         	movff	exp@x+1,floor@x+1
  2982  003E42  C0BC  F0AE         	movff	exp@x+2,floor@x+2
  2983  003E46  C0BD  F0AF         	movff	exp@x+3,floor@x+3
  2984  003E4A  ECBB  F024         	call	_floor	;wreg free
  2985  003E4E  C0AC  F0BE         	movff	?_floor,_exp$4057
  2986  003E52  C0AD  F0BF         	movff	?_floor+1,_exp$4057+1
  2987  003E56  C0AE  F0C0         	movff	?_floor+2,_exp$4057+2
  2988  003E5A  C0AF  F0C1         	movff	?_floor+3,_exp$4057+3
  2989  003E5E  C0BE  F0A2         	movff	_exp$4057,___fltol@f1
  2990  003E62  C0BF  F0A3         	movff	_exp$4057+1,___fltol@f1+1
  2991  003E66  C0C0  F0A4         	movff	_exp$4057+2,___fltol@f1+2
  2992  003E6A  C0C1  F0A5         	movff	_exp$4057+3,___fltol@f1+3
  2993  003E6E  ECD9  F025         	call	___fltol	;wreg free
  2994  003E72  C0A2  F0C2         	movff	?___fltol,exp@exponent
  2995  003E76  C0A3  F0C3         	movff	?___fltol+1,exp@exponent+1
  2996  003E7A  C0BA  F0A2         	movff	exp@x,___flsub@b
  2997  003E7E  C0BB  F0A3         	movff	exp@x+1,___flsub@b+1
  2998  003E82  C0BC  F0A4         	movff	exp@x+2,___flsub@b+2
  2999  003E86  C0BD  F0A5         	movff	exp@x+3,___flsub@b+3
  3000  003E8A  C0C2  F067         	movff	exp@exponent,___xxtofl@val
  3001  003E8E  C0C3  F068         	movff	exp@exponent+1,___xxtofl@val+1
  3002  003E92  0100               	movlb	0	; () banked
  3003  003E94  0E00               	movlw	0
  3004  003E96  BF68               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  3005  003E98  0EFF               	movlw	-1
  3006  003E9A  6F69               	movwf	(___xxtofl@val+2)& (0+255),b
  3007  003E9C  6F6A               	movwf	(___xxtofl@val+3)& (0+255),b
  3008  003E9E  0E01               	movlw	1
  3009  003EA0  ECD2  F020         	call	___xxtofl
  3010  003EA4  C067  F0A6         	movff	?___xxtofl,___flsub@a
  3011  003EA8  C068  F0A7         	movff	?___xxtofl+1,___flsub@a+1
  3012  003EAC  C069  F0A8         	movff	?___xxtofl+2,___flsub@a+2
  3013  003EB0  C06A  F0A9         	movff	?___xxtofl+3,___flsub@a+3
  3014  003EB4  ECB9  F028         	call	___flsub	;wreg free
  3015  003EB8  C0A2  F0BA         	movff	?___flsub,exp@x
  3016  003EBC  C0A3  F0BB         	movff	?___flsub+1,exp@x+1
  3017  003EC0  C0A4  F0BC         	movff	?___flsub+2,exp@x+2
  3018  003EC4  C0A5  F0BD         	movff	?___flsub+3,exp@x+3
  3019  003EC8  C0BA  F0A2         	movff	exp@x,eval_poly@x
  3020  003ECC  C0BB  F0A3         	movff	exp@x+1,eval_poly@x+1
  3021  003ED0  C0BC  F0A4         	movff	exp@x+2,eval_poly@x+2
  3022  003ED4  C0BD  F0A5         	movff	exp@x+3,eval_poly@x+3
  3023  003ED8  0E01               	movlw	low exp@coeff
  3024  003EDA  0100               	movlb	0	; () banked
  3025  003EDC  6FA6               	movwf	eval_poly@d& (0+255),b
  3026  003EDE  0E0D               	movlw	high exp@coeff
  3027  003EE0  0100               	movlb	0	; () banked
  3028  003EE2  6FA7               	movwf	(eval_poly@d+1)& (0+255),b
  3029  003EE4  0E00               	movlw	0
  3030  003EE6  0100               	movlb	0	; () banked
  3031  003EE8  6FA9               	movwf	(eval_poly@n+1)& (0+255),b
  3032  003EEA  0E09               	movlw	9
  3033  003EEC  6FA8               	movwf	eval_poly@n& (0+255),b
  3034  003EEE  EC4D  F025         	call	_eval_poly	;wreg free
  3035  003EF2  C0A2  F0B2         	movff	?_eval_poly,ldexp@value
  3036  003EF6  C0A3  F0B3         	movff	?_eval_poly+1,ldexp@value+1
  3037  003EFA  C0A4  F0B4         	movff	?_eval_poly+2,ldexp@value+2
  3038  003EFE  C0A5  F0B5         	movff	?_eval_poly+3,ldexp@value+3
  3039  003F02  C0C2  F0B6         	movff	exp@exponent,ldexp@newexp
  3040  003F06  C0C3  F0B7         	movff	exp@exponent+1,ldexp@newexp+1
  3041  003F0A  EC29  F024         	call	_ldexp	;wreg free
  3042  003F0E  C0B2  F0BA         	movff	?_ldexp,exp@x
  3043  003F12  C0B3  F0BB         	movff	?_ldexp+1,exp@x+1
  3044  003F16  C0B4  F0BC         	movff	?_ldexp+2,exp@x+2
  3045  003F1A  C0B5  F0BD         	movff	?_ldexp+3,exp@x+3
  3046  003F1E  0100               	movlb	0	; () banked
  3047  003F20  51C4               	movf	exp@sign& (0+255),w,b
  3048  003F22  0100               	movlb	0	; () banked
  3049  003F24  B4D8               	btfsc	status,2,c
  3050  003F26  D035               	goto	l1387
  3051                           
  3052                           ; BSR set to: 0
  3053  003F28  0100               	movlb	0	; () banked
  3054  003F2A  29BA               	incf	exp@x& (0+255),w,b
  3055  003F2C  E116               	bnz	l6943
  3056  003F2E  0100               	movlb	0	; () banked
  3057  003F30  29BB               	incf	(exp@x+1)& (0+255),w,b
  3058  003F32  E113               	bnz	l6943
  3059  003F34  0E7F               	movlw	127
  3060  003F36  0100               	movlb	0	; () banked
  3061  003F38  19BC               	xorwf	(exp@x+2)& (0+255),w,b
  3062  003F3A  E10F               	bnz	l6943
  3063  003F3C  0E7F               	movlw	127
  3064  003F3E  0100               	movlb	0	; () banked
  3065  003F40  19BD               	xorwf	(exp@x+3)& (0+255),w,b
  3066  003F42  A4D8               	btfss	status,2,c
  3067  003F44  D00A               	goto	l6943
  3068                           
  3069                           ; BSR set to: 0
  3070  003F46  0E00               	movlw	0
  3071  003F48  0100               	movlb	0	; () banked
  3072  003F4A  6FBA               	movwf	?_exp& (0+255),b
  3073  003F4C  0E00               	movlw	0
  3074  003F4E  6FBB               	movwf	(?_exp+1)& (0+255),b
  3075  003F50  0E00               	movlw	0
  3076  003F52  6FBC               	movwf	(?_exp+2)& (0+255),b
  3077  003F54  0E00               	movlw	0
  3078  003F56  6FBD               	movwf	(?_exp+3)& (0+255),b
  3079                           
  3080                           ; BSR set to: 0
  3081  003F58  0012               	return	
  3082  003F5A                     l6943:
  3083                           
  3084                           ; BSR set to: 0
  3085  003F5A  0E00               	movlw	0
  3086  003F5C  0100               	movlb	0	; () banked
  3087  003F5E  6F60               	movwf	___fldiv@b& (0+255),b
  3088  003F60  0E00               	movlw	0
  3089  003F62  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  3090  003F64  0E80               	movlw	128
  3091  003F66  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  3092  003F68  0E3F               	movlw	63
  3093  003F6A  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  3094  003F6C  C0BA  F064         	movff	exp@x,___fldiv@a
  3095  003F70  C0BB  F065         	movff	exp@x+1,___fldiv@a+1
  3096  003F74  C0BC  F066         	movff	exp@x+2,___fldiv@a+2
  3097  003F78  C0BD  F067         	movff	exp@x+3,___fldiv@a+3
  3098  003F7C  EC7B  F019         	call	___fldiv	;wreg free
  3099  003F80  C060  F0BA         	movff	?___fldiv,?_exp
  3100  003F84  C061  F0BB         	movff	?___fldiv+1,?_exp+1
  3101  003F88  C062  F0BC         	movff	?___fldiv+2,?_exp+2
  3102  003F8C  C063  F0BD         	movff	?___fldiv+3,?_exp+3
  3103  003F90  0012               	return	
  3104  003F92                     l1387:
  3105                           
  3106                           ; BSR set to: 0
  3107  003F92  C0BA  F0BA         	movff	exp@x,?_exp
  3108  003F96  C0BB  F0BB         	movff	exp@x+1,?_exp+1
  3109  003F9A  C0BC  F0BC         	movff	exp@x+2,?_exp+2
  3110  003F9E  C0BD  F0BD         	movff	exp@x+3,?_exp+3
  3111  003FA2  0012               	return		;funcret
  3112  003FA4                     __end_of_exp:
  3113                           	opt stack 0
  3114                           tblptru	equ	0xFF8
  3115                           tblptrh	equ	0xFF7
  3116                           tblptrl	equ	0xFF6
  3117                           tablat	equ	0xFF5
  3118                           postinc0	equ	0xFEE
  3119                           wreg	equ	0xFE8
  3120                           status	equ	0xFD8
  3121                           
  3122 ;; *************** function _ldexp *****************
  3123 ;; Defined at:
  3124 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;  value           4   82[BANK0 ] unsigned char 
  3127 ;;  newexp          2   86[BANK0 ] int 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  4   82[BANK0 ] int 
  3132 ;; Registers used:
  3133 ;;		wreg, status,2, status,0
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3139 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3141 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3142 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3143 ;;Total ram usage:        8 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    2
  3146 ;; This function calls:
  3147 ;;		Nothing
  3148 ;; This function is called by:
  3149 ;;		_exp
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text6
  3154  004852                     __ptext6:
  3155                           	opt stack 0
  3156  004852                     _ldexp:
  3157                           	opt stack 25
  3158                           
  3159                           ;incstack = 0
  3160  004852  0100               	movlb	0	; () banked
  3161  004854  51B2               	movf	ldexp@value& (0+255),w,b
  3162  004856  0100               	movlb	0	; () banked
  3163  004858  11B3               	iorwf	(ldexp@value+1)& (0+255),w,b
  3164  00485A  0100               	movlb	0	; () banked
  3165  00485C  11B4               	iorwf	(ldexp@value+2)& (0+255),w,b
  3166  00485E  0100               	movlb	0	; () banked
  3167  004860  11B5               	iorwf	(ldexp@value+3)& (0+255),w,b
  3168  004862  A4D8               	btfss	status,2,c
  3169  004864  D00A               	goto	l6431
  3170                           
  3171                           ; BSR set to: 0
  3172  004866  0E00               	movlw	0
  3173  004868  0100               	movlb	0	; () banked
  3174  00486A  6FB2               	movwf	?_ldexp& (0+255),b
  3175  00486C  0E00               	movlw	0
  3176  00486E  6FB3               	movwf	(?_ldexp+1)& (0+255),b
  3177  004870  0E00               	movlw	0
  3178  004872  6FB4               	movwf	(?_ldexp+2)& (0+255),b
  3179  004874  0E00               	movlw	0
  3180  004876  6FB5               	movwf	(?_ldexp+3)& (0+255),b
  3181                           
  3182                           ; BSR set to: 0
  3183  004878  0012               	return	
  3184  00487A                     l6431:
  3185                           
  3186                           ; BSR set to: 0
  3187  00487A  0100               	movlb	0	; () banked
  3188  00487C  51B5               	movf	(ldexp@value+3)& (0+255),w,b
  3189  00487E  0B7F               	andlw	127
  3190  004880  0100               	movlb	0	; () banked
  3191  004882  6FB8               	movwf	??_ldexp& (0+255),b
  3192  004884  6BB9               	clrf	(??_ldexp+1)& (0+255),b
  3193  004886  90D8               	bcf	status,0,c
  3194  004888  0100               	movlb	0	; () banked
  3195  00488A  37B8               	rlcf	??_ldexp& (0+255),f,b
  3196  00488C  37B9               	rlcf	(??_ldexp+1)& (0+255),f,b
  3197  00488E  0100               	movlb	0	; () banked
  3198  004890  51B8               	movf	??_ldexp& (0+255),w,b
  3199  004892  0100               	movlb	0	; () banked
  3200  004894  27B6               	addwf	ldexp@newexp& (0+255),f,b
  3201  004896  0100               	movlb	0	; () banked
  3202  004898  51B9               	movf	(??_ldexp+1)& (0+255),w,b
  3203  00489A  0100               	movlb	0	; () banked
  3204  00489C  23B7               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  3205  00489E  0100               	movlb	0	; () banked
  3206  0048A0  AFB4               	btfss	(ldexp@value+2)& (0+255),7,b
  3207  0048A2  D004               	goto	u8470
  3208  0048A4  0100               	movlb	0	; () banked
  3209  0048A6  6BB8               	clrf	??_ldexp& (0+255),b
  3210  0048A8  2BB8               	incf	??_ldexp& (0+255),f,b
  3211  0048AA  D002               	goto	u8478
  3212  0048AC                     u8470:
  3213  0048AC  0100               	movlb	0	; () banked
  3214  0048AE  6BB8               	clrf	??_ldexp& (0+255),b
  3215  0048B0                     u8478:
  3216  0048B0  0100               	movlb	0	; () banked
  3217  0048B2  51B8               	movf	??_ldexp& (0+255),w,b
  3218  0048B4  0100               	movlb	0	; () banked
  3219  0048B6  27B6               	addwf	ldexp@newexp& (0+255),f,b
  3220  0048B8  0E00               	movlw	0
  3221  0048BA  23B7               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  3222  0048BC  0100               	movlb	0	; () banked
  3223  0048BE  AFB7               	btfss	(ldexp@newexp+1)& (0+255),7,b
  3224  0048C0  D00F               	goto	l6439
  3225                           
  3226                           ; BSR set to: 0
  3227  0048C2  0E00               	movlw	0
  3228  0048C4  0100               	movlb	0	; () banked
  3229  0048C6  6FF4               	movwf	(_errno+1)& (0+255),b
  3230  0048C8  0E22               	movlw	34
  3231  0048CA  6FF3               	movwf	_errno& (0+255),b
  3232  0048CC  0E00               	movlw	0
  3233  0048CE  0100               	movlb	0	; () banked
  3234  0048D0  6FB2               	movwf	?_ldexp& (0+255),b
  3235  0048D2  0E00               	movlw	0
  3236  0048D4  6FB3               	movwf	(?_ldexp+1)& (0+255),b
  3237  0048D6  0E00               	movlw	0
  3238  0048D8  6FB4               	movwf	(?_ldexp+2)& (0+255),b
  3239  0048DA  0E00               	movlw	0
  3240  0048DC                     L4:
  3241  0048DC  6FB5               	movwf	(?_ldexp+3)& (0+255),b
  3242                           
  3243                           ; BSR set to: 0
  3244  0048DE  0012               	return	
  3245  0048E0                     l6439:
  3246                           
  3247                           ; BSR set to: 0
  3248  0048E0  0100               	movlb	0	; () banked
  3249  0048E2  BFB7               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  3250  0048E4  D01E               	goto	l6455
  3251  0048E6  0100               	movlb	0	; () banked
  3252  0048E8  05B7               	decf	(ldexp@newexp+1)& (0+255),w,b
  3253  0048EA  A0D8               	btfss	status,0,c
  3254  0048EC  D01A               	goto	l6455
  3255                           
  3256                           ; BSR set to: 0
  3257  0048EE  0E00               	movlw	0
  3258  0048F0  0100               	movlb	0	; () banked
  3259  0048F2  6FF4               	movwf	(_errno+1)& (0+255),b
  3260  0048F4  0E22               	movlw	34
  3261  0048F6  6FF3               	movwf	_errno& (0+255),b
  3262                           
  3263                           ; BSR set to: 0
  3264  0048F8  0100               	movlb	0	; () banked
  3265  0048FA  AFB5               	btfss	(ldexp@value+3)& (0+255),7,b
  3266  0048FC  D009               	goto	l6451
  3267                           
  3268                           ; BSR set to: 0
  3269  0048FE  0EFF               	movlw	255
  3270  004900  0100               	movlb	0	; () banked
  3271  004902  6FB2               	movwf	?_ldexp& (0+255),b
  3272  004904  0EFF               	movlw	255
  3273  004906  6FB3               	movwf	(?_ldexp+1)& (0+255),b
  3274  004908  0E7F               	movlw	127
  3275  00490A  6FB4               	movwf	(?_ldexp+2)& (0+255),b
  3276  00490C  0EFF               	movlw	255
  3277  00490E  D7E6               	goto	L4
  3278  004910                     l6451:
  3279                           
  3280                           ; BSR set to: 0
  3281  004910  0EFF               	movlw	255
  3282  004912  0100               	movlb	0	; () banked
  3283  004914  6FB2               	movwf	?_ldexp& (0+255),b
  3284  004916  0EFF               	movlw	255
  3285  004918  6FB3               	movwf	(?_ldexp+1)& (0+255),b
  3286  00491A  0E7F               	movlw	127
  3287  00491C  6FB4               	movwf	(?_ldexp+2)& (0+255),b
  3288  00491E  0E7F               	movlw	127
  3289  004920  D7DD               	goto	L4
  3290  004922                     l6455:
  3291                           
  3292                           ; BSR set to: 0
  3293  004922  0100               	movlb	0	; () banked
  3294  004924  35B7               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  3295  004926  31B7               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  3296  004928  0100               	movlb	0	; () banked
  3297  00492A  6FB9               	movwf	(??_ldexp+1)& (0+255),b
  3298  00492C  0100               	movlb	0	; () banked
  3299  00492E  31B6               	rrcf	ldexp@newexp& (0+255),w,b
  3300  004930  0100               	movlb	0	; () banked
  3301  004932  6FB8               	movwf	??_ldexp& (0+255),b
  3302  004934  0100               	movlb	0	; () banked
  3303  004936  51B5               	movf	(ldexp@value+3)& (0+255),w,b
  3304  004938  0100               	movlb	0	; () banked
  3305  00493A  19B8               	xorwf	??_ldexp& (0+255),w,b
  3306  00493C  0B80               	andlw	-128
  3307  00493E  19B8               	xorwf	??_ldexp& (0+255),w,b
  3308  004940  0100               	movlb	0	; () banked
  3309  004942  6FB5               	movwf	(ldexp@value+3)& (0+255),b
  3310  004944  C0B6  F0B8         	movff	ldexp@newexp,??_ldexp
  3311  004948  0E01               	movlw	1
  3312  00494A  0100               	movlb	0	; () banked
  3313  00494C  17B8               	andwf	??_ldexp& (0+255),f,b
  3314  00494E  0100               	movlb	0	; () banked
  3315  004950  33B8               	rrcf	??_ldexp& (0+255),f,b
  3316  004952  33B8               	rrcf	??_ldexp& (0+255),f,b
  3317  004954  0100               	movlb	0	; () banked
  3318  004956  51B4               	movf	(ldexp@value+2)& (0+255),w,b
  3319  004958  0100               	movlb	0	; () banked
  3320  00495A  19B8               	xorwf	??_ldexp& (0+255),w,b
  3321  00495C  0B7F               	andlw	-129
  3322  00495E  19B8               	xorwf	??_ldexp& (0+255),w,b
  3323  004960  0100               	movlb	0	; () banked
  3324  004962  6FB4               	movwf	(ldexp@value+2)& (0+255),b
  3325                           
  3326                           ; BSR set to: 0
  3327                           
  3328                           ; BSR set to: 0
  3329                           
  3330                           ; BSR set to: 0
  3331  004964  C0B2  F0B2         	movff	ldexp@value,?_ldexp
  3332  004968  C0B3  F0B3         	movff	ldexp@value+1,?_ldexp+1
  3333  00496C  C0B4  F0B4         	movff	ldexp@value+2,?_ldexp+2
  3334  004970  C0B5  F0B5         	movff	ldexp@value+3,?_ldexp+3
  3335  004974  0012               	return	
  3336  004976                     __end_of_ldexp:
  3337                           	opt stack 0
  3338                           tblptru	equ	0xFF8
  3339                           tblptrh	equ	0xFF7
  3340                           tblptrl	equ	0xFF6
  3341                           tablat	equ	0xFF5
  3342                           postinc0	equ	0xFEE
  3343                           wreg	equ	0xFE8
  3344                           status	equ	0xFD8
  3345                           
  3346 ;; *************** function _floor *****************
  3347 ;; Defined at:
  3348 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  x               4   76[BANK0 ] int 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  i               4   80[BANK0 ] int 
  3353 ;;  expon           2   84[BANK0 ] int 
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  4   76[BANK0 ] int 
  3356 ;; Registers used:
  3357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3363 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3364 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3366 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3367 ;;Total ram usage:       10 bytes
  3368 ;; Hardware stack levels used:    1
  3369 ;; Hardware stack levels required when called:    3
  3370 ;; This function calls:
  3371 ;;		___fladd
  3372 ;;		___flge
  3373 ;;		___fltol
  3374 ;;		___xxtofl
  3375 ;;		_frexp
  3376 ;; This function is called by:
  3377 ;;		_exp
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text7
  3382  004976                     __ptext7:
  3383                           	opt stack 0
  3384  004976                     _floor:
  3385                           	opt stack 24
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;incstack = 0
  3389  004976  C0AC  F060         	movff	floor@x,frexp@value
  3390  00497A  C0AD  F061         	movff	floor@x+1,frexp@value+1
  3391  00497E  C0AE  F062         	movff	floor@x+2,frexp@value+2
  3392  004982  C0AF  F063         	movff	floor@x+3,frexp@value+3
  3393  004986  0EB4               	movlw	low floor@expon
  3394  004988  0100               	movlb	0	; () banked
  3395  00498A  6F64               	movwf	frexp@eptr& (0+255),b
  3396  00498C  0E00               	movlw	high floor@expon
  3397  00498E  0100               	movlb	0	; () banked
  3398  004990  6F65               	movwf	(frexp@eptr+1)& (0+255),b
  3399  004992  ECBE  F026         	call	_frexp	;wreg free
  3400  004996  0100               	movlb	0	; () banked
  3401  004998  AFB5               	btfss	(floor@expon+1)& (0+255),7,b
  3402  00499A  D017               	goto	l6409
  3403                           
  3404                           ; BSR set to: 0
  3405  00499C  0100               	movlb	0	; () banked
  3406  00499E  AFAF               	btfss	(floor@x+3)& (0+255),7,b
  3407  0049A0  D00A               	goto	l6405
  3408                           
  3409                           ; BSR set to: 0
  3410  0049A2  0E00               	movlw	0
  3411  0049A4  0100               	movlb	0	; () banked
  3412  0049A6  6FAC               	movwf	?_floor& (0+255),b
  3413  0049A8  0E00               	movlw	0
  3414  0049AA  6FAD               	movwf	(?_floor+1)& (0+255),b
  3415  0049AC  0E80               	movlw	128
  3416  0049AE  6FAE               	movwf	(?_floor+2)& (0+255),b
  3417  0049B0  0EBF               	movlw	191
  3418  0049B2  6FAF               	movwf	(?_floor+3)& (0+255),b
  3419                           
  3420                           ; BSR set to: 0
  3421  0049B4  0012               	return	
  3422  0049B6                     l6405:
  3423                           
  3424                           ; BSR set to: 0
  3425  0049B6  0E00               	movlw	0
  3426  0049B8  0100               	movlb	0	; () banked
  3427  0049BA  6FAC               	movwf	?_floor& (0+255),b
  3428  0049BC  0E00               	movlw	0
  3429  0049BE  6FAD               	movwf	(?_floor+1)& (0+255),b
  3430  0049C0  0E00               	movlw	0
  3431  0049C2  6FAE               	movwf	(?_floor+2)& (0+255),b
  3432  0049C4  0E00               	movlw	0
  3433  0049C6  6FAF               	movwf	(?_floor+3)& (0+255),b
  3434                           
  3435                           ; BSR set to: 0
  3436  0049C8  0012               	return	
  3437  0049CA                     l6409:
  3438                           
  3439                           ; BSR set to: 0
  3440  0049CA  0100               	movlb	0	; () banked
  3441  0049CC  51B5               	movf	(floor@expon+1)& (0+255),w,b
  3442  0049CE  E105               	bnz	u8430
  3443  0049D0  0E1D               	movlw	29
  3444  0049D2  0100               	movlb	0	; () banked
  3445  0049D4  5DB4               	subwf	floor@expon& (0+255),w,b
  3446  0049D6  A0D8               	btfss	status,0,c
  3447  0049D8  D009               	goto	l6413
  3448  0049DA                     u8430:
  3449                           
  3450                           ; BSR set to: 0
  3451  0049DA  C0AC  F0AC         	movff	floor@x,?_floor
  3452  0049DE  C0AD  F0AD         	movff	floor@x+1,?_floor+1
  3453  0049E2  C0AE  F0AE         	movff	floor@x+2,?_floor+2
  3454  0049E6  C0AF  F0AF         	movff	floor@x+3,?_floor+3
  3455  0049EA  0012               	return	
  3456  0049EC                     l6413:
  3457                           
  3458                           ; BSR set to: 0
  3459  0049EC  C0AC  F0A2         	movff	floor@x,___fltol@f1
  3460  0049F0  C0AD  F0A3         	movff	floor@x+1,___fltol@f1+1
  3461  0049F4  C0AE  F0A4         	movff	floor@x+2,___fltol@f1+2
  3462  0049F8  C0AF  F0A5         	movff	floor@x+3,___fltol@f1+3
  3463  0049FC  ECD9  F025         	call	___fltol	;wreg free
  3464  004A00  C0A2  F067         	movff	?___fltol,___xxtofl@val
  3465  004A04  C0A3  F068         	movff	?___fltol+1,___xxtofl@val+1
  3466  004A08  C0A4  F069         	movff	?___fltol+2,___xxtofl@val+2
  3467  004A0C  C0A5  F06A         	movff	?___fltol+3,___xxtofl@val+3
  3468  004A10  0E01               	movlw	1
  3469  004A12  ECD2  F020         	call	___xxtofl
  3470  004A16  C067  F0B0         	movff	?___xxtofl,floor@i
  3471  004A1A  C068  F0B1         	movff	?___xxtofl+1,floor@i+1
  3472  004A1E  C069  F0B2         	movff	?___xxtofl+2,floor@i+2
  3473  004A22  C06A  F0B3         	movff	?___xxtofl+3,floor@i+3
  3474  004A26  C0AC  F060         	movff	floor@x,___flge@ff1
  3475  004A2A  C0AD  F061         	movff	floor@x+1,___flge@ff1+1
  3476  004A2E  C0AE  F062         	movff	floor@x+2,___flge@ff1+2
  3477  004A32  C0AF  F063         	movff	floor@x+3,___flge@ff1+3
  3478  004A36  C0B0  F064         	movff	floor@i,___flge@ff2
  3479  004A3A  C0B1  F065         	movff	floor@i+1,___flge@ff2+1
  3480  004A3E  C0B2  F066         	movff	floor@i+2,___flge@ff2+2
  3481  004A42  C0B3  F067         	movff	floor@i+3,___flge@ff2+3
  3482  004A46  EC9C  F022         	call	___flge	;wreg free
  3483  004A4A  0100               	movlb	0	; () banked
  3484  004A4C  B0D8               	btfsc	status,0,c
  3485  004A4E  D01C               	goto	l1397
  3486                           
  3487                           ; BSR set to: 0
  3488  004A50  C0B0  F08E         	movff	floor@i,___fladd@b
  3489  004A54  C0B1  F08F         	movff	floor@i+1,___fladd@b+1
  3490  004A58  C0B2  F090         	movff	floor@i+2,___fladd@b+2
  3491  004A5C  C0B3  F091         	movff	floor@i+3,___fladd@b+3
  3492  004A60  0E00               	movlw	0
  3493  004A62  0100               	movlb	0	; () banked
  3494  004A64  6F92               	movwf	___fladd@a& (0+255),b
  3495  004A66  0E00               	movlw	0
  3496  004A68  6F93               	movwf	(___fladd@a+1)& (0+255),b
  3497  004A6A  0E80               	movlw	128
  3498  004A6C  6F94               	movwf	(___fladd@a+2)& (0+255),b
  3499  004A6E  0EBF               	movlw	191
  3500  004A70  6F95               	movwf	(___fladd@a+3)& (0+255),b
  3501  004A72  ECD4  F014         	call	___fladd	;wreg free
  3502  004A76  C08E  F0AC         	movff	?___fladd,?_floor
  3503  004A7A  C08F  F0AD         	movff	?___fladd+1,?_floor+1
  3504  004A7E  C090  F0AE         	movff	?___fladd+2,?_floor+2
  3505  004A82  C091  F0AF         	movff	?___fladd+3,?_floor+3
  3506  004A86  0012               	return	
  3507  004A88                     l1397:
  3508                           
  3509                           ; BSR set to: 0
  3510  004A88  C0B0  F0AC         	movff	floor@i,?_floor
  3511  004A8C  C0B1  F0AD         	movff	floor@i+1,?_floor+1
  3512  004A90  C0B2  F0AE         	movff	floor@i+2,?_floor+2
  3513  004A94  C0B3  F0AF         	movff	floor@i+3,?_floor+3
  3514  004A98  0012               	return		;funcret
  3515  004A9A                     __end_of_floor:
  3516                           	opt stack 0
  3517                           tblptru	equ	0xFF8
  3518                           tblptrh	equ	0xFF7
  3519                           tblptrl	equ	0xFF6
  3520                           tablat	equ	0xFF5
  3521                           postinc0	equ	0xFEE
  3522                           wreg	equ	0xFE8
  3523                           status	equ	0xFD8
  3524                           
  3525 ;; *************** function _frexp *****************
  3526 ;; Defined at:
  3527 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;  value           4    0[BANK0 ] int 
  3530 ;;  eptr            2    4[BANK0 ] PTR int 
  3531 ;;		 -> log@exponent(2), floor@expon(2), 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  4    0[BANK0 ] PTR int 
  3536 ;; Registers used:
  3537 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3543 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3545 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3546 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;Total ram usage:        8 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:    2
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_floor
  3554 ;;		_log
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text8
  3559  004D7C                     __ptext8:
  3560                           	opt stack 0
  3561  004D7C                     _frexp:
  3562                           	opt stack 25
  3563                           
  3564                           ;incstack = 0
  3565  004D7C  0100               	movlb	0	; () banked
  3566  004D7E  5160               	movf	frexp@value& (0+255),w,b
  3567  004D80  0100               	movlb	0	; () banked
  3568  004D82  1161               	iorwf	(frexp@value+1)& (0+255),w,b
  3569  004D84  0100               	movlb	0	; () banked
  3570  004D86  1162               	iorwf	(frexp@value+2)& (0+255),w,b
  3571  004D88  0100               	movlb	0	; () banked
  3572  004D8A  1163               	iorwf	(frexp@value+3)& (0+255),w,b
  3573  004D8C  A4D8               	btfss	status,2,c
  3574  004D8E  D012               	goto	l6233
  3575                           
  3576                           ; BSR set to: 0
  3577  004D90  C064  FFD9         	movff	frexp@eptr,fsr2l
  3578  004D94  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  3579  004D98  0E00               	movlw	0
  3580  004D9A  6EDE               	movwf	postinc2,c
  3581  004D9C  0E00               	movlw	0
  3582  004D9E  6EDD               	movwf	postdec2,c
  3583                           
  3584                           ; BSR set to: 0
  3585  004DA0  0E00               	movlw	0
  3586  004DA2  0100               	movlb	0	; () banked
  3587  004DA4  6F60               	movwf	?_frexp& (0+255),b
  3588  004DA6  0E00               	movlw	0
  3589  004DA8  6F61               	movwf	(?_frexp+1)& (0+255),b
  3590  004DAA  0E00               	movlw	0
  3591  004DAC  6F62               	movwf	(?_frexp+2)& (0+255),b
  3592  004DAE  0E00               	movlw	0
  3593  004DB0  6F63               	movwf	(?_frexp+3)& (0+255),b
  3594                           
  3595                           ; BSR set to: 0
  3596  004DB2  0012               	return	
  3597  004DB4                     l6233:
  3598                           
  3599                           ; BSR set to: 0
  3600  004DB4  0100               	movlb	0	; () banked
  3601  004DB6  5163               	movf	(frexp@value+3)& (0+255),w,b
  3602  004DB8  0B7F               	andlw	127
  3603  004DBA  0100               	movlb	0	; () banked
  3604  004DBC  6F66               	movwf	??_frexp& (0+255),b
  3605  004DBE  6B67               	clrf	(??_frexp+1)& (0+255),b
  3606  004DC0  90D8               	bcf	status,0,c
  3607  004DC2  0100               	movlb	0	; () banked
  3608  004DC4  3766               	rlcf	??_frexp& (0+255),f,b
  3609  004DC6  3767               	rlcf	(??_frexp+1)& (0+255),f,b
  3610  004DC8  C064  FFD9         	movff	frexp@eptr,fsr2l
  3611  004DCC  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  3612  004DD0  C066  FFDE         	movff	??_frexp,postinc2
  3613  004DD4  C067  FFDD         	movff	??_frexp+1,postdec2
  3614  004DD8  0100               	movlb	0	; () banked
  3615  004DDA  AF62               	btfss	(frexp@value+2)& (0+255),7,b
  3616  004DDC  D004               	goto	u8160
  3617  004DDE  0100               	movlb	0	; () banked
  3618  004DE0  6B66               	clrf	??_frexp& (0+255),b
  3619  004DE2  2B66               	incf	??_frexp& (0+255),f,b
  3620  004DE4  D002               	goto	u8168
  3621  004DE6                     u8160:
  3622  004DE6  0100               	movlb	0	; () banked
  3623  004DE8  6B66               	clrf	??_frexp& (0+255),b
  3624  004DEA                     u8168:
  3625  004DEA  0100               	movlb	0	; () banked
  3626  004DEC  5166               	movf	??_frexp& (0+255),w,b
  3627  004DEE  C064  FFD9         	movff	frexp@eptr,fsr2l
  3628  004DF2  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  3629  004DF6  12DE               	iorwf	postinc2,f,c
  3630  004DF8  0E00               	movlw	0
  3631  004DFA  12DD               	iorwf	postdec2,f,c
  3632                           
  3633                           ; BSR set to: 0
  3634  004DFC  C064  FFD9         	movff	frexp@eptr,fsr2l
  3635  004E00  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  3636  004E04  0E82               	movlw	130
  3637  004E06  26DE               	addwf	postinc2,f,c
  3638  004E08  0EFF               	movlw	255
  3639  004E0A  22DD               	addwfc	postdec2,f,c
  3640                           
  3641                           ; BSR set to: 0
  3642  004E0C  0100               	movlb	0	; () banked
  3643  004E0E  8163               	bsf	(frexp@value+3)& (0+255),0,b
  3644  004E10  8363               	bsf	(frexp@value+3)& (0+255),1,b
  3645  004E12  8563               	bsf	(frexp@value+3)& (0+255),2,b
  3646  004E14  8763               	bsf	(frexp@value+3)& (0+255),3,b
  3647  004E16  8963               	bsf	(frexp@value+3)& (0+255),4,b
  3648  004E18  8B63               	bsf	(frexp@value+3)& (0+255),5,b
  3649  004E1A  9D63               	bcf	(frexp@value+3)& (0+255),6,b
  3650                           
  3651                           ; BSR set to: 0
  3652  004E1C  0100               	movlb	0	; () banked
  3653  004E1E  9F62               	bcf	(frexp@value+2)& (0+255),7,b
  3654                           
  3655                           ; BSR set to: 0
  3656  004E20  C060  F060         	movff	frexp@value,?_frexp
  3657  004E24  C061  F061         	movff	frexp@value+1,?_frexp+1
  3658  004E28  C062  F062         	movff	frexp@value+2,?_frexp+2
  3659  004E2C  C063  F063         	movff	frexp@value+3,?_frexp+3
  3660  004E30  0012               	return	
  3661  004E32                     __end_of_frexp:
  3662                           	opt stack 0
  3663                           tblptru	equ	0xFF8
  3664                           tblptrh	equ	0xFF7
  3665                           tblptrl	equ	0xFF6
  3666                           tablat	equ	0xFF5
  3667                           postinc0	equ	0xFEE
  3668                           wreg	equ	0xFE8
  3669                           postinc2	equ	0xFDE
  3670                           postdec2	equ	0xFDD
  3671                           fsr2h	equ	0xFDA
  3672                           fsr2l	equ	0xFD9
  3673                           status	equ	0xFD8
  3674                           
  3675 ;; *************** function ___xxtofl *****************
  3676 ;; Defined at:
  3677 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  sign            1    wreg     unsigned char 
  3680 ;;  val             4    7[BANK0 ] long 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  sign            1   15[BANK0 ] unsigned char 
  3683 ;;  arg             4   17[BANK0 ] unsigned long 
  3684 ;;  exp             1   16[BANK0 ] unsigned char 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  4    7[BANK0 ] unsigned char 
  3687 ;; Registers used:
  3688 ;;		wreg, status,2, status,0
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3694 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3695 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3696 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3697 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3698 ;;Total ram usage:       14 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    2
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_rampe
  3705 ;;		_pow
  3706 ;;		_exp
  3707 ;;		_floor
  3708 ;;		_log
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           	psect	text9
  3713  0041A4                     __ptext9:
  3714                           	opt stack 0
  3715  0041A4                     ___xxtofl:
  3716                           	opt stack 25
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;incstack = 0
  3720                           ;___xxtofl@sign stored from wreg
  3721  0041A4  0100               	movlb	0	; () banked
  3722  0041A6  6F6F               	movwf	___xxtofl@sign& (0+255),b
  3723  0041A8  0100               	movlb	0	; () banked
  3724  0041AA  516F               	movf	___xxtofl@sign& (0+255),w,b
  3725  0041AC  0100               	movlb	0	; () banked
  3726  0041AE  B4D8               	btfsc	status,2,c
  3727  0041B0  D01E               	goto	l1351
  3728                           
  3729                           ; BSR set to: 0
  3730  0041B2  0100               	movlb	0	; () banked
  3731  0041B4  AF6A               	btfss	(___xxtofl@val+3)& (0+255),7,b
  3732  0041B6  D01B               	goto	l1351
  3733                           
  3734                           ; BSR set to: 0
  3735  0041B8  C067  F06B         	movff	___xxtofl@val,??___xxtofl
  3736  0041BC  C068  F06C         	movff	___xxtofl@val+1,??___xxtofl+1
  3737  0041C0  C069  F06D         	movff	___xxtofl@val+2,??___xxtofl+2
  3738  0041C4  C06A  F06E         	movff	___xxtofl@val+3,??___xxtofl+3
  3739  0041C8  0100               	movlb	0	; () banked
  3740  0041CA  1F6B               	comf	??___xxtofl& (0+255),f,b
  3741  0041CC  1F6C               	comf	(??___xxtofl+1)& (0+255),f,b
  3742  0041CE  1F6D               	comf	(??___xxtofl+2)& (0+255),f,b
  3743  0041D0  1F6E               	comf	(??___xxtofl+3)& (0+255),f,b
  3744  0041D2  2B6B               	incf	??___xxtofl& (0+255),f,b
  3745  0041D4  0E00               	movlw	0
  3746  0041D6  236C               	addwfc	(??___xxtofl+1)& (0+255),f,b
  3747  0041D8  236D               	addwfc	(??___xxtofl+2)& (0+255),f,b
  3748  0041DA  236E               	addwfc	(??___xxtofl+3)& (0+255),f,b
  3749  0041DC  C06B  F071         	movff	??___xxtofl,___xxtofl@arg
  3750  0041E0  C06C  F072         	movff	??___xxtofl+1,___xxtofl@arg+1
  3751  0041E4  C06D  F073         	movff	??___xxtofl+2,___xxtofl@arg+2
  3752  0041E8  C06E  F074         	movff	??___xxtofl+3,___xxtofl@arg+3
  3753  0041EC  D008               	goto	l6189
  3754  0041EE                     l1351:
  3755                           
  3756                           ; BSR set to: 0
  3757  0041EE  C067  F071         	movff	___xxtofl@val,___xxtofl@arg
  3758  0041F2  C068  F072         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3759  0041F6  C069  F073         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3760  0041FA  C06A  F074         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3761  0041FE                     l6189:
  3762                           
  3763                           ; BSR set to: 0
  3764  0041FE  0100               	movlb	0	; () banked
  3765  004200  5167               	movf	___xxtofl@val& (0+255),w,b
  3766  004202  0100               	movlb	0	; () banked
  3767  004204  1168               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  3768  004206  0100               	movlb	0	; () banked
  3769  004208  1169               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  3770  00420A  0100               	movlb	0	; () banked
  3771  00420C  116A               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  3772  00420E  A4D8               	btfss	status,2,c
  3773  004210  D00A               	goto	l6195
  3774                           
  3775                           ; BSR set to: 0
  3776  004212  0E00               	movlw	0
  3777  004214  0100               	movlb	0	; () banked
  3778  004216  6F67               	movwf	?___xxtofl& (0+255),b
  3779  004218  0E00               	movlw	0
  3780  00421A  6F68               	movwf	(?___xxtofl+1)& (0+255),b
  3781  00421C  0E00               	movlw	0
  3782  00421E  6F69               	movwf	(?___xxtofl+2)& (0+255),b
  3783  004220  0E00               	movlw	0
  3784  004222  6F6A               	movwf	(?___xxtofl+3)& (0+255),b
  3785                           
  3786                           ; BSR set to: 0
  3787  004224  0012               	return	
  3788  004226                     l6195:
  3789                           
  3790                           ; BSR set to: 0
  3791  004226  0E96               	movlw	150
  3792  004228  0100               	movlb	0	; () banked
  3793  00422A  6F70               	movwf	___xxtofl@exp& (0+255),b
  3794  00422C  D008               	goto	l6199
  3795  00422E                     l6197:
  3796                           
  3797                           ; BSR set to: 0
  3798  00422E  0100               	movlb	0	; () banked
  3799  004230  2B70               	incf	___xxtofl@exp& (0+255),f,b
  3800  004232  0100               	movlb	0	; () banked
  3801  004234  90D8               	bcf	status,0,c
  3802  004236  3374               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3803  004238  3373               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3804  00423A  3372               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3805  00423C  3371               	rrcf	___xxtofl@arg& (0+255),f,b
  3806  00423E                     l6199:
  3807                           
  3808                           ; BSR set to: 0
  3809  00423E  0E00               	movlw	0
  3810  004240  0100               	movlb	0	; () banked
  3811  004242  1571               	andwf	___xxtofl@arg& (0+255),w,b
  3812  004244  0100               	movlb	0	; () banked
  3813  004246  6F6B               	movwf	??___xxtofl& (0+255),b
  3814  004248  0E00               	movlw	0
  3815  00424A  0100               	movlb	0	; () banked
  3816  00424C  1572               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3817  00424E  0100               	movlb	0	; () banked
  3818  004250  6F6C               	movwf	(??___xxtofl+1)& (0+255),b
  3819  004252  0E00               	movlw	0
  3820  004254  0100               	movlb	0	; () banked
  3821  004256  1573               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3822  004258  0100               	movlb	0	; () banked
  3823  00425A  6F6D               	movwf	(??___xxtofl+2)& (0+255),b
  3824  00425C  0EFE               	movlw	254
  3825  00425E  0100               	movlb	0	; () banked
  3826  004260  1574               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3827  004262  0100               	movlb	0	; () banked
  3828  004264  6F6E               	movwf	(??___xxtofl+3)& (0+255),b
  3829  004266  0100               	movlb	0	; () banked
  3830  004268  516B               	movf	??___xxtofl& (0+255),w,b
  3831  00426A  0100               	movlb	0	; () banked
  3832  00426C  116C               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3833  00426E  0100               	movlb	0	; () banked
  3834  004270  116D               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3835  004272  0100               	movlb	0	; () banked
  3836  004274  116E               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3837  004276  B4D8               	btfsc	status,2,c
  3838  004278  D010               	goto	l1358
  3839  00427A  D7D9               	goto	l6197
  3840  00427C                     l6201:
  3841                           
  3842                           ; BSR set to: 0
  3843  00427C  0100               	movlb	0	; () banked
  3844  00427E  2B70               	incf	___xxtofl@exp& (0+255),f,b
  3845                           
  3846                           ; BSR set to: 0
  3847  004280  0E01               	movlw	1
  3848  004282  0100               	movlb	0	; () banked
  3849  004284  2771               	addwf	___xxtofl@arg& (0+255),f,b
  3850  004286  0E00               	movlw	0
  3851  004288  2372               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  3852  00428A  2373               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  3853  00428C  2374               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  3854                           
  3855                           ; BSR set to: 0
  3856  00428E  0100               	movlb	0	; () banked
  3857  004290  90D8               	bcf	status,0,c
  3858  004292  3374               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3859  004294  3373               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3860  004296  3372               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3861  004298  3371               	rrcf	___xxtofl@arg& (0+255),f,b
  3862  00429A                     l1358:
  3863                           
  3864                           ; BSR set to: 0
  3865  00429A  0E00               	movlw	0
  3866  00429C  0100               	movlb	0	; () banked
  3867  00429E  1571               	andwf	___xxtofl@arg& (0+255),w,b
  3868  0042A0  0100               	movlb	0	; () banked
  3869  0042A2  6F6B               	movwf	??___xxtofl& (0+255),b
  3870  0042A4  0E00               	movlw	0
  3871  0042A6  0100               	movlb	0	; () banked
  3872  0042A8  1572               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3873  0042AA  0100               	movlb	0	; () banked
  3874  0042AC  6F6C               	movwf	(??___xxtofl+1)& (0+255),b
  3875  0042AE  0E00               	movlw	0
  3876  0042B0  0100               	movlb	0	; () banked
  3877  0042B2  1573               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3878  0042B4  0100               	movlb	0	; () banked
  3879  0042B6  6F6D               	movwf	(??___xxtofl+2)& (0+255),b
  3880  0042B8  0EFF               	movlw	255
  3881  0042BA  0100               	movlb	0	; () banked
  3882  0042BC  1574               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3883  0042BE  0100               	movlb	0	; () banked
  3884  0042C0  6F6E               	movwf	(??___xxtofl+3)& (0+255),b
  3885  0042C2  0100               	movlb	0	; () banked
  3886  0042C4  516B               	movf	??___xxtofl& (0+255),w,b
  3887  0042C6  0100               	movlb	0	; () banked
  3888  0042C8  116C               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3889  0042CA  0100               	movlb	0	; () banked
  3890  0042CC  116D               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3891  0042CE  0100               	movlb	0	; () banked
  3892  0042D0  116E               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3893  0042D2  B4D8               	btfsc	status,2,c
  3894  0042D4  D009               	goto	l6209
  3895  0042D6  D7D2               	goto	l6201
  3896  0042D8                     l6207:
  3897                           
  3898                           ; BSR set to: 0
  3899  0042D8  0100               	movlb	0	; () banked
  3900  0042DA  0770               	decf	___xxtofl@exp& (0+255),f,b
  3901  0042DC  0100               	movlb	0	; () banked
  3902  0042DE  90D8               	bcf	status,0,c
  3903  0042E0  3771               	rlcf	___xxtofl@arg& (0+255),f,b
  3904  0042E2  3772               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  3905  0042E4  3773               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  3906  0042E6  3774               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  3907  0042E8                     l6209:
  3908                           
  3909                           ; BSR set to: 0
  3910  0042E8  0100               	movlb	0	; () banked
  3911  0042EA  BF73               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  3912  0042EC  D004               	goto	l1365
  3913                           
  3914                           ; BSR set to: 0
  3915  0042EE  0E02               	movlw	2
  3916  0042F0  0100               	movlb	0	; () banked
  3917  0042F2  6170               	cpfslt	___xxtofl@exp& (0+255),b
  3918  0042F4  D7F1               	goto	l6207
  3919  0042F6                     l1365:
  3920                           
  3921                           ; BSR set to: 0
  3922  0042F6  0100               	movlb	0	; () banked
  3923  0042F8  B170               	btfsc	___xxtofl@exp& (0+255),0,b
  3924  0042FA  D009               	goto	l1366
  3925                           
  3926                           ; BSR set to: 0
  3927  0042FC  0EFF               	movlw	255
  3928  0042FE  0100               	movlb	0	; () banked
  3929  004300  1771               	andwf	___xxtofl@arg& (0+255),f,b
  3930  004302  0EFF               	movlw	255
  3931  004304  1772               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  3932  004306  0E7F               	movlw	127
  3933  004308  1773               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  3934  00430A  0EFF               	movlw	255
  3935  00430C  1774               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  3936  00430E                     l1366:
  3937                           
  3938                           ; BSR set to: 0
  3939  00430E  0100               	movlb	0	; () banked
  3940  004310  90D8               	bcf	status,0,c
  3941  004312  3370               	rrcf	___xxtofl@exp& (0+255),f,b
  3942  004314  C070  F06B         	movff	___xxtofl@exp,??___xxtofl
  3943  004318  0100               	movlb	0	; () banked
  3944  00431A  6B6C               	clrf	(??___xxtofl+1)& (0+255),b
  3945  00431C  6B6D               	clrf	(??___xxtofl+2)& (0+255),b
  3946  00431E  6B6E               	clrf	(??___xxtofl+3)& (0+255),b
  3947  004320  C06B  F06E         	movff	??___xxtofl,??___xxtofl+3
  3948  004324  0100               	movlb	0	; () banked
  3949  004326  6B6D               	clrf	(??___xxtofl+2)& (0+255),b
  3950  004328  6B6C               	clrf	(??___xxtofl+1)& (0+255),b
  3951  00432A  6B6B               	clrf	??___xxtofl& (0+255),b
  3952  00432C  0100               	movlb	0	; () banked
  3953  00432E  516B               	movf	??___xxtofl& (0+255),w,b
  3954  004330  0100               	movlb	0	; () banked
  3955  004332  1371               	iorwf	___xxtofl@arg& (0+255),f,b
  3956  004334  0100               	movlb	0	; () banked
  3957  004336  516C               	movf	(??___xxtofl+1)& (0+255),w,b
  3958  004338  0100               	movlb	0	; () banked
  3959  00433A  1372               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  3960  00433C  0100               	movlb	0	; () banked
  3961  00433E  516D               	movf	(??___xxtofl+2)& (0+255),w,b
  3962  004340  0100               	movlb	0	; () banked
  3963  004342  1373               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  3964  004344  0100               	movlb	0	; () banked
  3965  004346  516E               	movf	(??___xxtofl+3)& (0+255),w,b
  3966  004348  0100               	movlb	0	; () banked
  3967  00434A  1374               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  3968                           
  3969                           ; BSR set to: 0
  3970  00434C  0100               	movlb	0	; () banked
  3971  00434E  516F               	movf	___xxtofl@sign& (0+255),w,b
  3972  004350  0100               	movlb	0	; () banked
  3973  004352  B4D8               	btfsc	status,2,c
  3974  004354  D005               	goto	l6221
  3975                           
  3976                           ; BSR set to: 0
  3977  004356  0100               	movlb	0	; () banked
  3978  004358  AF6A               	btfss	(___xxtofl@val+3)& (0+255),7,b
  3979  00435A  D002               	goto	l6221
  3980                           
  3981                           ; BSR set to: 0
  3982  00435C  0100               	movlb	0	; () banked
  3983  00435E  8F74               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  3984  004360                     l6221:
  3985                           
  3986                           ; BSR set to: 0
  3987  004360  C071  F067         	movff	___xxtofl@arg,?___xxtofl
  3988  004364  C072  F068         	movff	___xxtofl@arg+1,?___xxtofl+1
  3989  004368  C073  F069         	movff	___xxtofl@arg+2,?___xxtofl+2
  3990  00436C  C074  F06A         	movff	___xxtofl@arg+3,?___xxtofl+3
  3991  004370  0012               	return	
  3992  004372                     __end_of___xxtofl:
  3993                           	opt stack 0
  3994                           tblptru	equ	0xFF8
  3995                           tblptrh	equ	0xFF7
  3996                           tblptrl	equ	0xFF6
  3997                           tablat	equ	0xFF5
  3998                           postinc0	equ	0xFEE
  3999                           wreg	equ	0xFE8
  4000                           postinc2	equ	0xFDE
  4001                           postdec2	equ	0xFDD
  4002                           fsr2h	equ	0xFDA
  4003                           fsr2l	equ	0xFD9
  4004                           status	equ	0xFD8
  4005                           
  4006 ;; *************** function ___fltol *****************
  4007 ;; Defined at:
  4008 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  f1              4   66[BANK0 ] unsigned char 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  exp1            1   75[BANK0 ] unsigned char 
  4013 ;;  sign1           1   74[BANK0 ] unsigned char 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  4   66[BANK0 ] long 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4023 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4024 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4025 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4026 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;Total ram usage:       10 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    2
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_rampe
  4034 ;;		_pow
  4035 ;;		_exp
  4036 ;;		_floor
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text10
  4041  004BB2                     __ptext10:
  4042                           	opt stack 0
  4043  004BB2                     ___fltol:
  4044                           	opt stack 24
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;incstack = 0
  4048  004BB2  0100               	movlb	0	; () banked
  4049  004BB4  35A4               	rlcf	(___fltol@f1+2)& (0+255),w,b
  4050  004BB6  35A5               	rlcf	(___fltol@f1+3)& (0+255),w,b
  4051  004BB8  0100               	movlb	0	; () banked
  4052  004BBA  6FAB               	movwf	___fltol@exp1& (0+255),b
  4053  004BBC  0100               	movlb	0	; () banked
  4054  004BBE  51AB               	movf	___fltol@exp1& (0+255),w,b
  4055  004BC0  A4D8               	btfss	status,2,c
  4056  004BC2  D00A               	goto	l6145
  4057                           
  4058                           ; BSR set to: 0
  4059  004BC4  0E00               	movlw	0
  4060  004BC6  0100               	movlb	0	; () banked
  4061  004BC8  6FA2               	movwf	?___fltol& (0+255),b
  4062  004BCA  0E00               	movlw	0
  4063  004BCC  6FA3               	movwf	(?___fltol+1)& (0+255),b
  4064  004BCE  0E00               	movlw	0
  4065  004BD0  6FA4               	movwf	(?___fltol+2)& (0+255),b
  4066  004BD2  0E00               	movlw	0
  4067  004BD4  6FA5               	movwf	(?___fltol+3)& (0+255),b
  4068                           
  4069                           ; BSR set to: 0
  4070  004BD6  0012               	return	
  4071  004BD8                     l6145:
  4072                           
  4073                           ; BSR set to: 0
  4074  004BD8  C0A2  F0A6         	movff	___fltol@f1,??___fltol
  4075  004BDC  C0A3  F0A7         	movff	___fltol@f1+1,??___fltol+1
  4076  004BE0  C0A4  F0A8         	movff	___fltol@f1+2,??___fltol+2
  4077  004BE4  C0A5  F0A9         	movff	___fltol@f1+3,??___fltol+3
  4078  004BE8  0E20               	movlw	32
  4079  004BEA  D006               	goto	u7990
  4080  004BEC                     u7995:
  4081  004BEC  0100               	movlb	0	; () banked
  4082  004BEE  90D8               	bcf	status,0,c
  4083  004BF0  33A9               	rrcf	(??___fltol+3)& (0+255),f,b
  4084  004BF2  33A8               	rrcf	(??___fltol+2)& (0+255),f,b
  4085  004BF4  33A7               	rrcf	(??___fltol+1)& (0+255),f,b
  4086  004BF6  33A6               	rrcf	??___fltol& (0+255),f,b
  4087  004BF8                     u7990:
  4088  004BF8  2EE8               	decfsz	wreg,f,c
  4089  004BFA  D7F8               	goto	u7995
  4090  004BFC  0100               	movlb	0	; () banked
  4091  004BFE  51A6               	movf	??___fltol& (0+255),w,b
  4092  004C00  0100               	movlb	0	; () banked
  4093  004C02  6FAA               	movwf	___fltol@sign1& (0+255),b
  4094                           
  4095                           ; BSR set to: 0
  4096  004C04  0100               	movlb	0	; () banked
  4097  004C06  8FA4               	bsf	(___fltol@f1+2)& (0+255),7,b
  4098                           
  4099                           ; BSR set to: 0
  4100  004C08  0EFF               	movlw	255
  4101  004C0A  0100               	movlb	0	; () banked
  4102  004C0C  17A2               	andwf	___fltol@f1& (0+255),f,b
  4103  004C0E  0EFF               	movlw	255
  4104  004C10  17A3               	andwf	(___fltol@f1+1)& (0+255),f,b
  4105  004C12  0EFF               	movlw	255
  4106  004C14  17A4               	andwf	(___fltol@f1+2)& (0+255),f,b
  4107  004C16  0E00               	movlw	0
  4108  004C18  17A5               	andwf	(___fltol@f1+3)& (0+255),f,b
  4109                           
  4110                           ; BSR set to: 0
  4111  004C1A  0E96               	movlw	150
  4112  004C1C  0100               	movlb	0	; () banked
  4113  004C1E  5FAB               	subwf	___fltol@exp1& (0+255),f,b
  4114                           
  4115                           ; BSR set to: 0
  4116  004C20  0100               	movlb	0	; () banked
  4117  004C22  AFAB               	btfss	___fltol@exp1& (0+255),7,b
  4118  004C24  D01A               	goto	l6165
  4119                           
  4120                           ; BSR set to: 0
  4121  004C26  0100               	movlb	0	; () banked
  4122  004C28  51AB               	movf	___fltol@exp1& (0+255),w,b
  4123  004C2A  0A80               	xorlw	128
  4124  004C2C  0F97               	addlw	151
  4125  004C2E  B0D8               	btfsc	status,0,c
  4126  004C30  D00A               	goto	l6161
  4127                           
  4128                           ; BSR set to: 0
  4129  004C32  0E00               	movlw	0
  4130  004C34  0100               	movlb	0	; () banked
  4131  004C36  6FA2               	movwf	?___fltol& (0+255),b
  4132  004C38  0E00               	movlw	0
  4133  004C3A  6FA3               	movwf	(?___fltol+1)& (0+255),b
  4134  004C3C  0E00               	movlw	0
  4135  004C3E  6FA4               	movwf	(?___fltol+2)& (0+255),b
  4136  004C40  0E00               	movlw	0
  4137  004C42  6FA5               	movwf	(?___fltol+3)& (0+255),b
  4138                           
  4139                           ; BSR set to: 0
  4140  004C44  0012               	return	
  4141  004C46                     l6161:
  4142                           
  4143                           ; BSR set to: 0
  4144  004C46  0100               	movlb	0	; () banked
  4145  004C48  90D8               	bcf	status,0,c
  4146  004C4A  33A5               	rrcf	(___fltol@f1+3)& (0+255),f,b
  4147  004C4C  33A4               	rrcf	(___fltol@f1+2)& (0+255),f,b
  4148  004C4E  33A3               	rrcf	(___fltol@f1+1)& (0+255),f,b
  4149  004C50  33A2               	rrcf	___fltol@f1& (0+255),f,b
  4150                           
  4151                           ; BSR set to: 0
  4152  004C52  0100               	movlb	0	; () banked
  4153  004C54  3FAB               	incfsz	___fltol@exp1& (0+255),f,b
  4154  004C56  D7F7               	goto	l6161
  4155                           
  4156                           ; BSR set to: 0
  4157  004C58  D01B               	goto	l6175
  4158  004C5A                     l6165:
  4159                           
  4160                           ; BSR set to: 0
  4161  004C5A  0E1F               	movlw	31
  4162  004C5C  0100               	movlb	0	; () banked
  4163  004C5E  65AB               	cpfsgt	___fltol@exp1& (0+255),b
  4164  004C60  D012               	goto	l6173
  4165                           
  4166                           ; BSR set to: 0
  4167  004C62  0E00               	movlw	0
  4168  004C64  0100               	movlb	0	; () banked
  4169  004C66  6FA2               	movwf	?___fltol& (0+255),b
  4170  004C68  0E00               	movlw	0
  4171  004C6A  6FA3               	movwf	(?___fltol+1)& (0+255),b
  4172  004C6C  0E00               	movlw	0
  4173  004C6E  6FA4               	movwf	(?___fltol+2)& (0+255),b
  4174  004C70  0E00               	movlw	0
  4175  004C72  6FA5               	movwf	(?___fltol+3)& (0+255),b
  4176                           
  4177                           ; BSR set to: 0
  4178  004C74  0012               	return	
  4179  004C76                     l6171:
  4180                           
  4181                           ; BSR set to: 0
  4182  004C76  0100               	movlb	0	; () banked
  4183  004C78  90D8               	bcf	status,0,c
  4184  004C7A  37A2               	rlcf	___fltol@f1& (0+255),f,b
  4185  004C7C  37A3               	rlcf	(___fltol@f1+1)& (0+255),f,b
  4186  004C7E  37A4               	rlcf	(___fltol@f1+2)& (0+255),f,b
  4187  004C80  37A5               	rlcf	(___fltol@f1+3)& (0+255),f,b
  4188  004C82  0100               	movlb	0	; () banked
  4189  004C84  07AB               	decf	___fltol@exp1& (0+255),f,b
  4190  004C86                     l6173:
  4191                           
  4192                           ; BSR set to: 0
  4193  004C86  0100               	movlb	0	; () banked
  4194  004C88  51AB               	movf	___fltol@exp1& (0+255),w,b
  4195  004C8A  0100               	movlb	0	; () banked
  4196  004C8C  A4D8               	btfss	status,2,c
  4197  004C8E  D7F3               	goto	l6171
  4198  004C90                     l6175:
  4199                           
  4200                           ; BSR set to: 0
  4201  004C90  0100               	movlb	0	; () banked
  4202  004C92  51AA               	movf	___fltol@sign1& (0+255),w,b
  4203  004C94  0100               	movlb	0	; () banked
  4204  004C96  B4D8               	btfsc	status,2,c
  4205  004C98  D009               	goto	l6179
  4206                           
  4207                           ; BSR set to: 0
  4208  004C9A  0100               	movlb	0	; () banked
  4209  004C9C  1FA5               	comf	(___fltol@f1+3)& (0+255),f,b
  4210  004C9E  1FA4               	comf	(___fltol@f1+2)& (0+255),f,b
  4211  004CA0  1FA3               	comf	(___fltol@f1+1)& (0+255),f,b
  4212  004CA2  6DA2               	negf	___fltol@f1& (0+255),b
  4213  004CA4  0E00               	movlw	0
  4214  004CA6  23A3               	addwfc	(___fltol@f1+1)& (0+255),f,b
  4215  004CA8  23A4               	addwfc	(___fltol@f1+2)& (0+255),f,b
  4216  004CAA  23A5               	addwfc	(___fltol@f1+3)& (0+255),f,b
  4217  004CAC                     l6179:
  4218                           
  4219                           ; BSR set to: 0
  4220  004CAC  C0A2  F0A2         	movff	___fltol@f1,?___fltol
  4221  004CB0  C0A3  F0A3         	movff	___fltol@f1+1,?___fltol+1
  4222  004CB4  C0A4  F0A4         	movff	___fltol@f1+2,?___fltol+2
  4223  004CB8  C0A5  F0A5         	movff	___fltol@f1+3,?___fltol+3
  4224  004CBC  0012               	return	
  4225  004CBE                     __end_of___fltol:
  4226                           	opt stack 0
  4227                           tblptru	equ	0xFF8
  4228                           tblptrh	equ	0xFF7
  4229                           tblptrl	equ	0xFF6
  4230                           tablat	equ	0xFF5
  4231                           postinc0	equ	0xFEE
  4232                           wreg	equ	0xFE8
  4233                           postinc2	equ	0xFDE
  4234                           postdec2	equ	0xFDD
  4235                           fsr2h	equ	0xFDA
  4236                           fsr2l	equ	0xFD9
  4237                           status	equ	0xFD8
  4238                           
  4239 ;; *************** function ___flge *****************
  4240 ;; Defined at:
  4241 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;  ff1             4    0[BANK0 ] long 
  4244 ;;  ff2             4    4[BANK0 ] long 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;		None               void
  4249 ;; Registers used:
  4250 ;;		wreg, status,2, status,0
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4256 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4258 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4259 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4260 ;;Total ram usage:       12 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    2
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_pow
  4267 ;;		_exp
  4268 ;;		_floor
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text11
  4273  004538                     __ptext11:
  4274                           	opt stack 0
  4275  004538                     ___flge:
  4276                           	opt stack 24
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;incstack = 0
  4280  004538  0E00               	movlw	0
  4281  00453A  0100               	movlb	0	; () banked
  4282  00453C  1560               	andwf	___flge@ff1& (0+255),w,b
  4283  00453E  0100               	movlb	0	; () banked
  4284  004540  6F68               	movwf	??___flge& (0+255),b
  4285  004542  0E00               	movlw	0
  4286  004544  0100               	movlb	0	; () banked
  4287  004546  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
  4288  004548  0100               	movlb	0	; () banked
  4289  00454A  6F69               	movwf	(??___flge+1)& (0+255),b
  4290  00454C  0E80               	movlw	128
  4291  00454E  0100               	movlb	0	; () banked
  4292  004550  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
  4293  004552  0100               	movlb	0	; () banked
  4294  004554  6F6A               	movwf	(??___flge+2)& (0+255),b
  4295  004556  0E7F               	movlw	127
  4296  004558  0100               	movlb	0	; () banked
  4297  00455A  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
  4298  00455C  0100               	movlb	0	; () banked
  4299  00455E  6F6B               	movwf	(??___flge+3)& (0+255),b
  4300  004560  0100               	movlb	0	; () banked
  4301  004562  5168               	movf	??___flge& (0+255),w,b
  4302  004564  0100               	movlb	0	; () banked
  4303  004566  1169               	iorwf	(??___flge+1)& (0+255),w,b
  4304  004568  0100               	movlb	0	; () banked
  4305  00456A  116A               	iorwf	(??___flge+2)& (0+255),w,b
  4306  00456C  0100               	movlb	0	; () banked
  4307  00456E  116B               	iorwf	(??___flge+3)& (0+255),w,b
  4308  004570  A4D8               	btfss	status,2,c
  4309  004572  D009               	goto	l6121
  4310                           
  4311                           ; BSR set to: 0
  4312  004574  0E00               	movlw	0
  4313  004576  0100               	movlb	0	; () banked
  4314  004578  6F60               	movwf	___flge@ff1& (0+255),b
  4315  00457A  0E00               	movlw	0
  4316  00457C  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  4317  00457E  0E00               	movlw	0
  4318  004580  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  4319  004582  0E00               	movlw	0
  4320  004584  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  4321  004586                     l6121:
  4322                           
  4323                           ; BSR set to: 0
  4324  004586  0E00               	movlw	0
  4325  004588  0100               	movlb	0	; () banked
  4326  00458A  1564               	andwf	___flge@ff2& (0+255),w,b
  4327  00458C  0100               	movlb	0	; () banked
  4328  00458E  6F68               	movwf	??___flge& (0+255),b
  4329  004590  0E00               	movlw	0
  4330  004592  0100               	movlb	0	; () banked
  4331  004594  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
  4332  004596  0100               	movlb	0	; () banked
  4333  004598  6F69               	movwf	(??___flge+1)& (0+255),b
  4334  00459A  0E80               	movlw	128
  4335  00459C  0100               	movlb	0	; () banked
  4336  00459E  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
  4337  0045A0  0100               	movlb	0	; () banked
  4338  0045A2  6F6A               	movwf	(??___flge+2)& (0+255),b
  4339  0045A4  0E7F               	movlw	127
  4340  0045A6  0100               	movlb	0	; () banked
  4341  0045A8  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
  4342  0045AA  0100               	movlb	0	; () banked
  4343  0045AC  6F6B               	movwf	(??___flge+3)& (0+255),b
  4344  0045AE  0100               	movlb	0	; () banked
  4345  0045B0  5168               	movf	??___flge& (0+255),w,b
  4346  0045B2  0100               	movlb	0	; () banked
  4347  0045B4  1169               	iorwf	(??___flge+1)& (0+255),w,b
  4348  0045B6  0100               	movlb	0	; () banked
  4349  0045B8  116A               	iorwf	(??___flge+2)& (0+255),w,b
  4350  0045BA  0100               	movlb	0	; () banked
  4351  0045BC  116B               	iorwf	(??___flge+3)& (0+255),w,b
  4352  0045BE  A4D8               	btfss	status,2,c
  4353  0045C0  D009               	goto	l6125
  4354                           
  4355                           ; BSR set to: 0
  4356  0045C2  0E00               	movlw	0
  4357  0045C4  0100               	movlb	0	; () banked
  4358  0045C6  6F64               	movwf	___flge@ff2& (0+255),b
  4359  0045C8  0E00               	movlw	0
  4360  0045CA  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  4361  0045CC  0E00               	movlw	0
  4362  0045CE  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  4363  0045D0  0E00               	movlw	0
  4364  0045D2  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  4365  0045D4                     l6125:
  4366                           
  4367                           ; BSR set to: 0
  4368  0045D4  0100               	movlb	0	; () banked
  4369  0045D6  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
  4370  0045D8  D026               	goto	l6129
  4371                           
  4372                           ; BSR set to: 0
  4373  0045DA  C060  F068         	movff	___flge@ff1,??___flge
  4374  0045DE  C061  F069         	movff	___flge@ff1+1,??___flge+1
  4375  0045E2  C062  F06A         	movff	___flge@ff1+2,??___flge+2
  4376  0045E6  C063  F06B         	movff	___flge@ff1+3,??___flge+3
  4377  0045EA  0100               	movlb	0	; () banked
  4378  0045EC  1F68               	comf	??___flge& (0+255),f,b
  4379  0045EE  1F69               	comf	(??___flge+1)& (0+255),f,b
  4380  0045F0  1F6A               	comf	(??___flge+2)& (0+255),f,b
  4381  0045F2  1F6B               	comf	(??___flge+3)& (0+255),f,b
  4382  0045F4  2B68               	incf	??___flge& (0+255),f,b
  4383  0045F6  0E00               	movlw	0
  4384  0045F8  2369               	addwfc	(??___flge+1)& (0+255),f,b
  4385  0045FA  236A               	addwfc	(??___flge+2)& (0+255),f,b
  4386  0045FC  236B               	addwfc	(??___flge+3)& (0+255),f,b
  4387  0045FE  0E00               	movlw	0
  4388  004600  0100               	movlb	0	; () banked
  4389  004602  2568               	addwf	??___flge& (0+255),w,b
  4390  004604  0100               	movlb	0	; () banked
  4391  004606  6F60               	movwf	___flge@ff1& (0+255),b
  4392  004608  0E00               	movlw	0
  4393  00460A  0100               	movlb	0	; () banked
  4394  00460C  2169               	addwfc	(??___flge+1)& (0+255),w,b
  4395  00460E  0100               	movlb	0	; () banked
  4396  004610  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  4397  004612  0E00               	movlw	0
  4398  004614  0100               	movlb	0	; () banked
  4399  004616  216A               	addwfc	(??___flge+2)& (0+255),w,b
  4400  004618  0100               	movlb	0	; () banked
  4401  00461A  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  4402  00461C  0E80               	movlw	128
  4403  00461E  0100               	movlb	0	; () banked
  4404  004620  216B               	addwfc	(??___flge+3)& (0+255),w,b
  4405  004622  0100               	movlb	0	; () banked
  4406  004624  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  4407  004626                     l6129:
  4408                           
  4409                           ; BSR set to: 0
  4410  004626  0100               	movlb	0	; () banked
  4411  004628  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
  4412  00462A  D026               	goto	l991
  4413                           
  4414                           ; BSR set to: 0
  4415  00462C  C064  F068         	movff	___flge@ff2,??___flge
  4416  004630  C065  F069         	movff	___flge@ff2+1,??___flge+1
  4417  004634  C066  F06A         	movff	___flge@ff2+2,??___flge+2
  4418  004638  C067  F06B         	movff	___flge@ff2+3,??___flge+3
  4419  00463C  0100               	movlb	0	; () banked
  4420  00463E  1F68               	comf	??___flge& (0+255),f,b
  4421  004640  1F69               	comf	(??___flge+1)& (0+255),f,b
  4422  004642  1F6A               	comf	(??___flge+2)& (0+255),f,b
  4423  004644  1F6B               	comf	(??___flge+3)& (0+255),f,b
  4424  004646  2B68               	incf	??___flge& (0+255),f,b
  4425  004648  0E00               	movlw	0
  4426  00464A  2369               	addwfc	(??___flge+1)& (0+255),f,b
  4427  00464C  236A               	addwfc	(??___flge+2)& (0+255),f,b
  4428  00464E  236B               	addwfc	(??___flge+3)& (0+255),f,b
  4429  004650  0E00               	movlw	0
  4430  004652  0100               	movlb	0	; () banked
  4431  004654  2568               	addwf	??___flge& (0+255),w,b
  4432  004656  0100               	movlb	0	; () banked
  4433  004658  6F64               	movwf	___flge@ff2& (0+255),b
  4434  00465A  0E00               	movlw	0
  4435  00465C  0100               	movlb	0	; () banked
  4436  00465E  2169               	addwfc	(??___flge+1)& (0+255),w,b
  4437  004660  0100               	movlb	0	; () banked
  4438  004662  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  4439  004664  0E00               	movlw	0
  4440  004666  0100               	movlb	0	; () banked
  4441  004668  216A               	addwfc	(??___flge+2)& (0+255),w,b
  4442  00466A  0100               	movlb	0	; () banked
  4443  00466C  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  4444  00466E  0E80               	movlw	128
  4445  004670  0100               	movlb	0	; () banked
  4446  004672  216B               	addwfc	(??___flge+3)& (0+255),w,b
  4447  004674  0100               	movlb	0	; () banked
  4448  004676  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  4449  004678                     l991:
  4450                           
  4451                           ; BSR set to: 0
  4452  004678  0E00               	movlw	0
  4453  00467A  0100               	movlb	0	; () banked
  4454  00467C  1B60               	xorwf	___flge@ff1& (0+255),f,b
  4455  00467E  0E00               	movlw	0
  4456  004680  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
  4457  004682  0E00               	movlw	0
  4458  004684  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
  4459  004686  0E80               	movlw	128
  4460  004688  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
  4461  00468A  0E00               	movlw	0
  4462  00468C  0100               	movlb	0	; () banked
  4463  00468E  1B64               	xorwf	___flge@ff2& (0+255),f,b
  4464  004690  0E00               	movlw	0
  4465  004692  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
  4466  004694  0E00               	movlw	0
  4467  004696  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
  4468  004698  0E80               	movlw	128
  4469  00469A  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
  4470  00469C  0100               	movlb	0	; () banked
  4471  00469E  5164               	movf	___flge@ff2& (0+255),w,b
  4472  0046A0  0100               	movlb	0	; () banked
  4473  0046A2  5D60               	subwf	___flge@ff1& (0+255),w,b
  4474  0046A4  0100               	movlb	0	; () banked
  4475  0046A6  5165               	movf	(___flge@ff2+1)& (0+255),w,b
  4476  0046A8  0100               	movlb	0	; () banked
  4477  0046AA  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
  4478  0046AC  0100               	movlb	0	; () banked
  4479  0046AE  5166               	movf	(___flge@ff2+2)& (0+255),w,b
  4480  0046B0  0100               	movlb	0	; () banked
  4481  0046B2  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
  4482  0046B4  0100               	movlb	0	; () banked
  4483  0046B6  5167               	movf	(___flge@ff2+3)& (0+255),w,b
  4484  0046B8  0100               	movlb	0	; () banked
  4485  0046BA  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
  4486  0046BC  B0D8               	btfsc	status,0,c
  4487  0046BE  D002               	goto	l6135
  4488                           
  4489                           ; BSR set to: 0
  4490  0046C0  90D8               	bcf	status,0,c
  4491  0046C2  0012               	return	
  4492  0046C4                     l6135:
  4493                           
  4494                           ; BSR set to: 0
  4495  0046C4  80D8               	bsf	status,0,c
  4496                           
  4497                           ; BSR set to: 0
  4498  0046C6  0012               	return	
  4499  0046C8                     __end_of___flge:
  4500                           	opt stack 0
  4501                           tblptru	equ	0xFF8
  4502                           tblptrh	equ	0xFF7
  4503                           tblptrl	equ	0xFF6
  4504                           tablat	equ	0xFF5
  4505                           postinc0	equ	0xFEE
  4506                           wreg	equ	0xFE8
  4507                           postinc2	equ	0xFDE
  4508                           postdec2	equ	0xFDD
  4509                           fsr2h	equ	0xFDA
  4510                           fsr2l	equ	0xFD9
  4511                           status	equ	0xFD8
  4512                           
  4513 ;; *************** function _eval_poly *****************
  4514 ;; Defined at:
  4515 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  x               4   66[BANK0 ] long 
  4518 ;;  d               2   70[BANK0 ] PTR const 
  4519 ;;		 -> log@coeff(36), exp@coeff(40), 
  4520 ;;  n               2   72[BANK0 ] int 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  res             4   78[BANK0 ] int 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  4   66[BANK0 ] int 
  4525 ;; Registers used:
  4526 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4532 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4533 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4534 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4535 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4536 ;;Total ram usage:       16 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:    3
  4539 ;; This function calls:
  4540 ;;		___fladd
  4541 ;;		___flmul
  4542 ;; This function is called by:
  4543 ;;		_exp
  4544 ;;		_log
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text12
  4549  004A9A                     __ptext12:
  4550                           	opt stack 0
  4551  004A9A                     _eval_poly:
  4552                           	opt stack 24
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;incstack = 0
  4556  004A9A  C0A8  F0AA         	movff	eval_poly@n,??_eval_poly
  4557  004A9E  C0A9  F0AB         	movff	eval_poly@n+1,??_eval_poly+1
  4558  004AA2  0100               	movlb	0	; () banked
  4559  004AA4  90D8               	bcf	status,0,c
  4560  004AA6  37AA               	rlcf	??_eval_poly& (0+255),f,b
  4561  004AA8  37AB               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4562  004AAA  0100               	movlb	0	; () banked
  4563  004AAC  90D8               	bcf	status,0,c
  4564  004AAE  37AA               	rlcf	??_eval_poly& (0+255),f,b
  4565  004AB0  37AB               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4566  004AB2  C0A6  F0AC         	movff	eval_poly@d,??_eval_poly+2
  4567  004AB6  C0A7  F0AD         	movff	eval_poly@d+1,??_eval_poly+3
  4568  004ABA  0100               	movlb	0	; () banked
  4569  004ABC  51AA               	movf	??_eval_poly& (0+255),w,b
  4570  004ABE  0100               	movlb	0	; () banked
  4571  004AC0  27AC               	addwf	(??_eval_poly+2)& (0+255),f,b
  4572  004AC2  0100               	movlb	0	; () banked
  4573  004AC4  51AB               	movf	(??_eval_poly+1)& (0+255),w,b
  4574  004AC6  0100               	movlb	0	; () banked
  4575  004AC8  23AD               	addwfc	(??_eval_poly+3)& (0+255),f,b
  4576  004ACA  C0AC  FFF6         	movff	??_eval_poly+2,tblptrl
  4577  004ACE  C0AD  FFF7         	movff	??_eval_poly+3,tblptrh
  4578  004AD2                     	if	0	;tblptru may be non-zero
  4579  004AD2                     	endif
  4580  004AD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4581  004AD2  0E00               	movlw	low (__mediumconst shr (0+16))
  4582  004AD4  6EF8               	movwf	tblptru,c
  4583  004AD6                     	endif
  4584  004AD6  0009               	tblrd		*+
  4585  004AD8  CFF5 F0AE          	movff	tablat,eval_poly@res
  4586  004ADC  0009               	tblrd		*+
  4587  004ADE  CFF5 F0AF          	movff	tablat,eval_poly@res+1
  4588  004AE2  0009               	tblrd		*+
  4589  004AE4  CFF5 F0B0          	movff	tablat,eval_poly@res+2
  4590  004AE8  000A               	tblrd		*-
  4591  004AEA  CFF5 F0B1          	movff	tablat,eval_poly@res+3
  4592  004AEE  D052               	goto	l6423
  4593  004AF0                     l6421:
  4594                           
  4595                           ; BSR set to: 0
  4596  004AF0  C0AE  F079         	movff	eval_poly@res,___flmul@a
  4597  004AF4  C0AF  F07A         	movff	eval_poly@res+1,___flmul@a+1
  4598  004AF8  C0B0  F07B         	movff	eval_poly@res+2,___flmul@a+2
  4599  004AFC  C0B1  F07C         	movff	eval_poly@res+3,___flmul@a+3
  4600  004B00  C0A2  F075         	movff	eval_poly@x,___flmul@b
  4601  004B04  C0A3  F076         	movff	eval_poly@x+1,___flmul@b+1
  4602  004B08  C0A4  F077         	movff	eval_poly@x+2,___flmul@b+2
  4603  004B0C  C0A5  F078         	movff	eval_poly@x+3,___flmul@b+3
  4604  004B10  EC28  F017         	call	___flmul	;wreg free
  4605  004B14  C075  F08E         	movff	?___flmul,___fladd@b
  4606  004B18  C076  F08F         	movff	?___flmul+1,___fladd@b+1
  4607  004B1C  C077  F090         	movff	?___flmul+2,___fladd@b+2
  4608  004B20  C078  F091         	movff	?___flmul+3,___fladd@b+3
  4609  004B24  0100               	movlb	0	; () banked
  4610  004B26  07A8               	decf	eval_poly@n& (0+255),f,b
  4611  004B28  A0D8               	btfss	status,0,c
  4612  004B2A  07A9               	decf	(eval_poly@n+1)& (0+255),f,b
  4613  004B2C  C0A8  F0AA         	movff	eval_poly@n,??_eval_poly
  4614  004B30  C0A9  F0AB         	movff	eval_poly@n+1,??_eval_poly+1
  4615  004B34  0100               	movlb	0	; () banked
  4616  004B36  90D8               	bcf	status,0,c
  4617  004B38  37AA               	rlcf	??_eval_poly& (0+255),f,b
  4618  004B3A  37AB               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4619  004B3C  0100               	movlb	0	; () banked
  4620  004B3E  90D8               	bcf	status,0,c
  4621  004B40  37AA               	rlcf	??_eval_poly& (0+255),f,b
  4622  004B42  37AB               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4623  004B44  C0A6  F0AC         	movff	eval_poly@d,??_eval_poly+2
  4624  004B48  C0A7  F0AD         	movff	eval_poly@d+1,??_eval_poly+3
  4625  004B4C  0100               	movlb	0	; () banked
  4626  004B4E  51AA               	movf	??_eval_poly& (0+255),w,b
  4627  004B50  0100               	movlb	0	; () banked
  4628  004B52  27AC               	addwf	(??_eval_poly+2)& (0+255),f,b
  4629  004B54  0100               	movlb	0	; () banked
  4630  004B56  51AB               	movf	(??_eval_poly+1)& (0+255),w,b
  4631  004B58  0100               	movlb	0	; () banked
  4632  004B5A  23AD               	addwfc	(??_eval_poly+3)& (0+255),f,b
  4633  004B5C  C0AC  FFF6         	movff	??_eval_poly+2,tblptrl
  4634  004B60  C0AD  FFF7         	movff	??_eval_poly+3,tblptrh
  4635  004B64                     	if	0	;tblptru may be non-zero
  4636  004B64                     	endif
  4637  004B64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4638  004B64  0E00               	movlw	low (__mediumconst shr (0+16))
  4639  004B66  6EF8               	movwf	tblptru,c
  4640  004B68                     	endif
  4641  004B68  0009               	tblrd		*+
  4642  004B6A  CFF5 F092          	movff	tablat,___fladd@a
  4643  004B6E  0009               	tblrd		*+
  4644  004B70  CFF5 F093          	movff	tablat,___fladd@a+1
  4645  004B74  0009               	tblrd		*+
  4646  004B76  CFF5 F094          	movff	tablat,___fladd@a+2
  4647  004B7A  000A               	tblrd		*-
  4648  004B7C  CFF5 F095          	movff	tablat,___fladd@a+3
  4649  004B80  ECD4  F014         	call	___fladd	;wreg free
  4650  004B84  C08E  F0AE         	movff	?___fladd,eval_poly@res
  4651  004B88  C08F  F0AF         	movff	?___fladd+1,eval_poly@res+1
  4652  004B8C  C090  F0B0         	movff	?___fladd+2,eval_poly@res+2
  4653  004B90  C091  F0B1         	movff	?___fladd+3,eval_poly@res+3
  4654  004B94                     l6423:
  4655  004B94  0100               	movlb	0	; () banked
  4656  004B96  51A8               	movf	eval_poly@n& (0+255),w,b
  4657  004B98  0100               	movlb	0	; () banked
  4658  004B9A  11A9               	iorwf	(eval_poly@n+1)& (0+255),w,b
  4659  004B9C  A4D8               	btfss	status,2,c
  4660  004B9E  D7A8               	goto	l6421
  4661                           
  4662                           ; BSR set to: 0
  4663  004BA0  C0AE  F0A2         	movff	eval_poly@res,?_eval_poly
  4664  004BA4  C0AF  F0A3         	movff	eval_poly@res+1,?_eval_poly+1
  4665  004BA8  C0B0  F0A4         	movff	eval_poly@res+2,?_eval_poly+2
  4666  004BAC  C0B1  F0A5         	movff	eval_poly@res+3,?_eval_poly+3
  4667                           
  4668                           ; BSR set to: 0
  4669  004BB0  0012               	return		;funcret
  4670  004BB2                     __end_of_eval_poly:
  4671                           	opt stack 0
  4672                           tblptru	equ	0xFF8
  4673                           tblptrh	equ	0xFF7
  4674                           tblptrl	equ	0xFF6
  4675                           tablat	equ	0xFF5
  4676                           postinc0	equ	0xFEE
  4677                           wreg	equ	0xFE8
  4678                           postinc2	equ	0xFDE
  4679                           postdec2	equ	0xFDD
  4680                           fsr2h	equ	0xFDA
  4681                           fsr2l	equ	0xFD9
  4682                           status	equ	0xFD8
  4683                           
  4684 ;; *************** function ___flmul *****************
  4685 ;; Defined at:
  4686 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;  b               4   21[BANK0 ] int 
  4689 ;;  a               4   25[BANK0 ] int 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  prod            4   40[BANK0 ] struct .
  4692 ;;  grs             4   35[BANK0 ] unsigned long 
  4693 ;;  temp            2   44[BANK0 ] struct .
  4694 ;;  bexp            1   39[BANK0 ] unsigned char 
  4695 ;;  aexp            1   34[BANK0 ] unsigned char 
  4696 ;;  sign            1   33[BANK0 ] unsigned char 
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  4   21[BANK0 ] unsigned char 
  4699 ;; Registers used:
  4700 ;;		wreg, status,2, status,0, prodl, prodh
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4706 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;Total ram usage:       25 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    2
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		_pow
  4717 ;;		_exp
  4718 ;;		_log
  4719 ;;		_eval_poly
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           	psect	text13
  4724  002E50                     __ptext13:
  4725                           	opt stack 0
  4726  002E50                     ___flmul:
  4727                           	opt stack 24
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;incstack = 0
  4731  002E50  0100               	movlb	0	; () banked
  4732  002E52  5178               	movf	(___flmul@b+3)& (0+255),w,b
  4733  002E54  0B80               	andlw	128
  4734  002E56  0100               	movlb	0	; () banked
  4735  002E58  6F81               	movwf	___flmul@sign& (0+255),b
  4736  002E5A  0100               	movlb	0	; () banked
  4737  002E5C  5178               	movf	(___flmul@b+3)& (0+255),w,b
  4738  002E5E  2578               	addwf	(___flmul@b+3)& (0+255),w,b
  4739  002E60  0100               	movlb	0	; () banked
  4740  002E62  6F87               	movwf	___flmul@bexp& (0+255),b
  4741                           
  4742                           ; BSR set to: 0
  4743  002E64  0100               	movlb	0	; () banked
  4744  002E66  AF77               	btfss	(___flmul@b+2)& (0+255),7,b
  4745  002E68  D002               	goto	l5993
  4746                           
  4747                           ; BSR set to: 0
  4748  002E6A  0100               	movlb	0	; () banked
  4749  002E6C  8187               	bsf	___flmul@bexp& (0+255),0,b
  4750  002E6E                     l5993:
  4751                           
  4752                           ; BSR set to: 0
  4753  002E6E  0100               	movlb	0	; () banked
  4754  002E70  5187               	movf	___flmul@bexp& (0+255),w,b
  4755  002E72  0100               	movlb	0	; () banked
  4756  002E74  B4D8               	btfsc	status,2,c
  4757  002E76  D010               	goto	l6001
  4758                           
  4759                           ; BSR set to: 0
  4760  002E78  0100               	movlb	0	; () banked
  4761  002E7A  2987               	incf	___flmul@bexp& (0+255),w,b
  4762  002E7C  A4D8               	btfss	status,2,c
  4763  002E7E  D009               	goto	l5999
  4764                           
  4765                           ; BSR set to: 0
  4766  002E80  0E00               	movlw	0
  4767  002E82  0100               	movlb	0	; () banked
  4768  002E84  6F75               	movwf	___flmul@b& (0+255),b
  4769  002E86  0E00               	movlw	0
  4770  002E88  6F76               	movwf	(___flmul@b+1)& (0+255),b
  4771  002E8A  0E00               	movlw	0
  4772  002E8C  6F77               	movwf	(___flmul@b+2)& (0+255),b
  4773  002E8E  0E00               	movlw	0
  4774  002E90  6F78               	movwf	(___flmul@b+3)& (0+255),b
  4775  002E92                     l5999:
  4776                           
  4777                           ; BSR set to: 0
  4778  002E92  0100               	movlb	0	; () banked
  4779  002E94  8F77               	bsf	(___flmul@b+2)& (0+255),7,b
  4780  002E96  D009               	goto	l6003
  4781  002E98                     l6001:
  4782                           
  4783                           ; BSR set to: 0
  4784  002E98  0E00               	movlw	0
  4785  002E9A  0100               	movlb	0	; () banked
  4786  002E9C  6F75               	movwf	___flmul@b& (0+255),b
  4787  002E9E  0E00               	movlw	0
  4788  002EA0  6F76               	movwf	(___flmul@b+1)& (0+255),b
  4789  002EA2  0E00               	movlw	0
  4790  002EA4  6F77               	movwf	(___flmul@b+2)& (0+255),b
  4791  002EA6  0E00               	movlw	0
  4792  002EA8  6F78               	movwf	(___flmul@b+3)& (0+255),b
  4793  002EAA                     l6003:
  4794                           
  4795                           ; BSR set to: 0
  4796  002EAA  0100               	movlb	0	; () banked
  4797  002EAC  517C               	movf	(___flmul@a+3)& (0+255),w,b
  4798  002EAE  0B80               	andlw	128
  4799  002EB0  0100               	movlb	0	; () banked
  4800  002EB2  1B81               	xorwf	___flmul@sign& (0+255),f,b
  4801                           
  4802                           ; BSR set to: 0
  4803  002EB4  0100               	movlb	0	; () banked
  4804  002EB6  517C               	movf	(___flmul@a+3)& (0+255),w,b
  4805  002EB8  257C               	addwf	(___flmul@a+3)& (0+255),w,b
  4806  002EBA  0100               	movlb	0	; () banked
  4807  002EBC  6F82               	movwf	___flmul@aexp& (0+255),b
  4808                           
  4809                           ; BSR set to: 0
  4810  002EBE  0100               	movlb	0	; () banked
  4811  002EC0  AF7B               	btfss	(___flmul@a+2)& (0+255),7,b
  4812  002EC2  D002               	goto	l6011
  4813                           
  4814                           ; BSR set to: 0
  4815  002EC4  0100               	movlb	0	; () banked
  4816  002EC6  8182               	bsf	___flmul@aexp& (0+255),0,b
  4817  002EC8                     l6011:
  4818                           
  4819                           ; BSR set to: 0
  4820  002EC8  0100               	movlb	0	; () banked
  4821  002ECA  5182               	movf	___flmul@aexp& (0+255),w,b
  4822  002ECC  0100               	movlb	0	; () banked
  4823  002ECE  B4D8               	btfsc	status,2,c
  4824  002ED0  D010               	goto	l6019
  4825                           
  4826                           ; BSR set to: 0
  4827  002ED2  0100               	movlb	0	; () banked
  4828  002ED4  2982               	incf	___flmul@aexp& (0+255),w,b
  4829  002ED6  A4D8               	btfss	status,2,c
  4830  002ED8  D009               	goto	l6017
  4831                           
  4832                           ; BSR set to: 0
  4833  002EDA  0E00               	movlw	0
  4834  002EDC  0100               	movlb	0	; () banked
  4835  002EDE  6F79               	movwf	___flmul@a& (0+255),b
  4836  002EE0  0E00               	movlw	0
  4837  002EE2  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  4838  002EE4  0E00               	movlw	0
  4839  002EE6  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  4840  002EE8  0E00               	movlw	0
  4841  002EEA  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  4842  002EEC                     l6017:
  4843                           
  4844                           ; BSR set to: 0
  4845  002EEC  0100               	movlb	0	; () banked
  4846  002EEE  8F7B               	bsf	(___flmul@a+2)& (0+255),7,b
  4847  002EF0  D009               	goto	l1329
  4848  002EF2                     l6019:
  4849                           
  4850                           ; BSR set to: 0
  4851  002EF2  0E00               	movlw	0
  4852  002EF4  0100               	movlb	0	; () banked
  4853  002EF6  6F79               	movwf	___flmul@a& (0+255),b
  4854  002EF8  0E00               	movlw	0
  4855  002EFA  6F7A               	movwf	(___flmul@a+1)& (0+255),b
  4856  002EFC  0E00               	movlw	0
  4857  002EFE  6F7B               	movwf	(___flmul@a+2)& (0+255),b
  4858  002F00  0E00               	movlw	0
  4859  002F02  6F7C               	movwf	(___flmul@a+3)& (0+255),b
  4860  002F04                     l1329:
  4861                           
  4862                           ; BSR set to: 0
  4863  002F04  0100               	movlb	0	; () banked
  4864  002F06  5182               	movf	___flmul@aexp& (0+255),w,b
  4865  002F08  0100               	movlb	0	; () banked
  4866  002F0A  B4D8               	btfsc	status,2,c
  4867  002F0C  D005               	goto	l6023
  4868                           
  4869                           ; BSR set to: 0
  4870  002F0E  0100               	movlb	0	; () banked
  4871  002F10  5187               	movf	___flmul@bexp& (0+255),w,b
  4872  002F12  0100               	movlb	0	; () banked
  4873  002F14  A4D8               	btfss	status,2,c
  4874  002F16  D00A               	goto	l6027
  4875  002F18                     l6023:
  4876                           
  4877                           ; BSR set to: 0
  4878  002F18  0E00               	movlw	0
  4879  002F1A  0100               	movlb	0	; () banked
  4880  002F1C  6F75               	movwf	?___flmul& (0+255),b
  4881  002F1E  0E00               	movlw	0
  4882  002F20  6F76               	movwf	(?___flmul+1)& (0+255),b
  4883  002F22  0E00               	movlw	0
  4884  002F24  6F77               	movwf	(?___flmul+2)& (0+255),b
  4885  002F26  0E00               	movlw	0
  4886  002F28  6F78               	movwf	(?___flmul+3)& (0+255),b
  4887                           
  4888                           ; BSR set to: 0
  4889  002F2A  0012               	return	
  4890  002F2C                     l6027:
  4891                           
  4892                           ; BSR set to: 0
  4893  002F2C  0100               	movlb	0	; () banked
  4894  002F2E  517B               	movf	(___flmul@a+2)& (0+255),w,b
  4895  002F30  0100               	movlb	0	; () banked
  4896  002F32  0375               	mulwf	___flmul@b& (0+255),b
  4897  002F34  CFF3 F08C          	movff	prodl,___flmul@temp
  4898  002F38  CFF4 F08D          	movff	prodh,___flmul@temp+1
  4899                           
  4900                           ; BSR set to: 0
  4901  002F3C  0100               	movlb	0	; () banked
  4902  002F3E  518C               	movf	___flmul@temp& (0+255),w,b
  4903  002F40  0100               	movlb	0	; () banked
  4904  002F42  6F83               	movwf	___flmul@grs& (0+255),b
  4905  002F44  6B84               	clrf	(___flmul@grs+1)& (0+255),b
  4906  002F46  6B85               	clrf	(___flmul@grs+2)& (0+255),b
  4907  002F48  6B86               	clrf	(___flmul@grs+3)& (0+255),b
  4908                           
  4909                           ; BSR set to: 0
  4910  002F4A  0100               	movlb	0	; () banked
  4911  002F4C  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  4912  002F4E  0100               	movlb	0	; () banked
  4913  002F50  6F88               	movwf	___flmul@prod& (0+255),b
  4914  002F52  6B89               	clrf	(___flmul@prod+1)& (0+255),b
  4915  002F54  6B8A               	clrf	(___flmul@prod+2)& (0+255),b
  4916  002F56  6B8B               	clrf	(___flmul@prod+3)& (0+255),b
  4917  002F58  0100               	movlb	0	; () banked
  4918  002F5A  517A               	movf	(___flmul@a+1)& (0+255),w,b
  4919  002F5C  0100               	movlb	0	; () banked
  4920  002F5E  0376               	mulwf	(___flmul@b+1)& (0+255),b
  4921  002F60  CFF3 F08C          	movff	prodl,___flmul@temp
  4922  002F64  CFF4 F08D          	movff	prodh,___flmul@temp+1
  4923                           
  4924                           ; BSR set to: 0
  4925  002F68  0100               	movlb	0	; () banked
  4926  002F6A  518C               	movf	___flmul@temp& (0+255),w,b
  4927  002F6C  0100               	movlb	0	; () banked
  4928  002F6E  2783               	addwf	___flmul@grs& (0+255),f,b
  4929  002F70  0E00               	movlw	0
  4930  002F72  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4931  002F74  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4932  002F76  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4933                           
  4934                           ; BSR set to: 0
  4935  002F78  0100               	movlb	0	; () banked
  4936  002F7A  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  4937  002F7C  0100               	movlb	0	; () banked
  4938  002F7E  2788               	addwf	___flmul@prod& (0+255),f,b
  4939  002F80  0E00               	movlw	0
  4940  002F82  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4941  002F84  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4942  002F86  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4943  002F88  0100               	movlb	0	; () banked
  4944  002F8A  5179               	movf	___flmul@a& (0+255),w,b
  4945  002F8C  0100               	movlb	0	; () banked
  4946  002F8E  0377               	mulwf	(___flmul@b+2)& (0+255),b
  4947  002F90  CFF3 F08C          	movff	prodl,___flmul@temp
  4948  002F94  CFF4 F08D          	movff	prodh,___flmul@temp+1
  4949                           
  4950                           ; BSR set to: 0
  4951  002F98  0100               	movlb	0	; () banked
  4952  002F9A  518C               	movf	___flmul@temp& (0+255),w,b
  4953  002F9C  0100               	movlb	0	; () banked
  4954  002F9E  2783               	addwf	___flmul@grs& (0+255),f,b
  4955  002FA0  0E00               	movlw	0
  4956  002FA2  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4957  002FA4  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4958  002FA6  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4959                           
  4960                           ; BSR set to: 0
  4961  002FA8  0100               	movlb	0	; () banked
  4962  002FAA  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  4963  002FAC  0100               	movlb	0	; () banked
  4964  002FAE  2788               	addwf	___flmul@prod& (0+255),f,b
  4965  002FB0  0E00               	movlw	0
  4966  002FB2  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4967  002FB4  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4968  002FB6  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4969                           
  4970                           ; BSR set to: 0
  4971  002FB8  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  4972  002FBC  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  4973  002FC0  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  4974  002FC4  0100               	movlb	0	; () banked
  4975  002FC6  6B83               	clrf	___flmul@grs& (0+255),b
  4976                           
  4977                           ; BSR set to: 0
  4978  002FC8  0100               	movlb	0	; () banked
  4979  002FCA  5179               	movf	___flmul@a& (0+255),w,b
  4980  002FCC  0100               	movlb	0	; () banked
  4981  002FCE  0376               	mulwf	(___flmul@b+1)& (0+255),b
  4982  002FD0  CFF3 F08C          	movff	prodl,___flmul@temp
  4983  002FD4  CFF4 F08D          	movff	prodh,___flmul@temp+1
  4984                           
  4985                           ; BSR set to: 0
  4986  002FD8  0100               	movlb	0	; () banked
  4987  002FDA  518C               	movf	___flmul@temp& (0+255),w,b
  4988  002FDC  0100               	movlb	0	; () banked
  4989  002FDE  2783               	addwf	___flmul@grs& (0+255),f,b
  4990  002FE0  0100               	movlb	0	; () banked
  4991  002FE2  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  4992  002FE4  0100               	movlb	0	; () banked
  4993  002FE6  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4994  002FE8  0E00               	movlw	0
  4995  002FEA  0100               	movlb	0	; () banked
  4996  002FEC  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4997  002FEE  0E00               	movlw	0
  4998  002FF0  0100               	movlb	0	; () banked
  4999  002FF2  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5000                           
  5001                           ; BSR set to: 0
  5002  002FF4  0100               	movlb	0	; () banked
  5003  002FF6  517A               	movf	(___flmul@a+1)& (0+255),w,b
  5004  002FF8  0100               	movlb	0	; () banked
  5005  002FFA  0375               	mulwf	___flmul@b& (0+255),b
  5006  002FFC  CFF3 F08C          	movff	prodl,___flmul@temp
  5007  003000  CFF4 F08D          	movff	prodh,___flmul@temp+1
  5008                           
  5009                           ; BSR set to: 0
  5010  003004  0100               	movlb	0	; () banked
  5011  003006  518C               	movf	___flmul@temp& (0+255),w,b
  5012  003008  0100               	movlb	0	; () banked
  5013  00300A  2783               	addwf	___flmul@grs& (0+255),f,b
  5014  00300C  0100               	movlb	0	; () banked
  5015  00300E  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  5016  003010  0100               	movlb	0	; () banked
  5017  003012  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5018  003014  0E00               	movlw	0
  5019  003016  0100               	movlb	0	; () banked
  5020  003018  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5021  00301A  0E00               	movlw	0
  5022  00301C  0100               	movlb	0	; () banked
  5023  00301E  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5024                           
  5025                           ; BSR set to: 0
  5026  003020  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  5027  003024  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  5028  003028  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  5029  00302C  0100               	movlb	0	; () banked
  5030  00302E  6B83               	clrf	___flmul@grs& (0+255),b
  5031  003030  0100               	movlb	0	; () banked
  5032  003032  5179               	movf	___flmul@a& (0+255),w,b
  5033  003034  0100               	movlb	0	; () banked
  5034  003036  0375               	mulwf	___flmul@b& (0+255),b
  5035  003038  CFF3 F08C          	movff	prodl,___flmul@temp
  5036  00303C  CFF4 F08D          	movff	prodh,___flmul@temp+1
  5037                           
  5038                           ; BSR set to: 0
  5039  003040  0100               	movlb	0	; () banked
  5040  003042  518C               	movf	___flmul@temp& (0+255),w,b
  5041  003044  0100               	movlb	0	; () banked
  5042  003046  2783               	addwf	___flmul@grs& (0+255),f,b
  5043  003048  0100               	movlb	0	; () banked
  5044  00304A  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  5045  00304C  0100               	movlb	0	; () banked
  5046  00304E  2384               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5047  003050  0E00               	movlw	0
  5048  003052  0100               	movlb	0	; () banked
  5049  003054  2385               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5050  003056  0E00               	movlw	0
  5051  003058  0100               	movlb	0	; () banked
  5052  00305A  2386               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5053                           
  5054                           ; BSR set to: 0
  5055  00305C  0100               	movlb	0	; () banked
  5056  00305E  517B               	movf	(___flmul@a+2)& (0+255),w,b
  5057  003060  0100               	movlb	0	; () banked
  5058  003062  0376               	mulwf	(___flmul@b+1)& (0+255),b
  5059  003064  CFF3 F08C          	movff	prodl,___flmul@temp
  5060  003068  CFF4 F08D          	movff	prodh,___flmul@temp+1
  5061  00306C  0100               	movlb	0	; () banked
  5062  00306E  518C               	movf	___flmul@temp& (0+255),w,b
  5063  003070  0100               	movlb	0	; () banked
  5064  003072  2788               	addwf	___flmul@prod& (0+255),f,b
  5065  003074  0100               	movlb	0	; () banked
  5066  003076  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  5067  003078  0100               	movlb	0	; () banked
  5068  00307A  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5069  00307C  0E00               	movlw	0
  5070  00307E  0100               	movlb	0	; () banked
  5071  003080  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5072  003082  0E00               	movlw	0
  5073  003084  0100               	movlb	0	; () banked
  5074  003086  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5075                           
  5076                           ; BSR set to: 0
  5077  003088  0100               	movlb	0	; () banked
  5078  00308A  517A               	movf	(___flmul@a+1)& (0+255),w,b
  5079  00308C  0100               	movlb	0	; () banked
  5080  00308E  0377               	mulwf	(___flmul@b+2)& (0+255),b
  5081  003090  CFF3 F08C          	movff	prodl,___flmul@temp
  5082  003094  CFF4 F08D          	movff	prodh,___flmul@temp+1
  5083                           
  5084                           ; BSR set to: 0
  5085  003098  0100               	movlb	0	; () banked
  5086  00309A  518C               	movf	___flmul@temp& (0+255),w,b
  5087  00309C  0100               	movlb	0	; () banked
  5088  00309E  2788               	addwf	___flmul@prod& (0+255),f,b
  5089  0030A0  0100               	movlb	0	; () banked
  5090  0030A2  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  5091  0030A4  0100               	movlb	0	; () banked
  5092  0030A6  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5093  0030A8  0E00               	movlw	0
  5094  0030AA  0100               	movlb	0	; () banked
  5095  0030AC  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5096  0030AE  0E00               	movlw	0
  5097  0030B0  0100               	movlb	0	; () banked
  5098  0030B2  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5099  0030B4  0100               	movlb	0	; () banked
  5100  0030B6  517B               	movf	(___flmul@a+2)& (0+255),w,b
  5101  0030B8  0100               	movlb	0	; () banked
  5102  0030BA  0377               	mulwf	(___flmul@b+2)& (0+255),b
  5103  0030BC  CFF3 F08C          	movff	prodl,___flmul@temp
  5104  0030C0  CFF4 F08D          	movff	prodh,___flmul@temp+1
  5105                           
  5106                           ; BSR set to: 0
  5107  0030C4  0100               	movlb	0	; () banked
  5108  0030C6  518C               	movf	___flmul@temp& (0+255),w,b
  5109  0030C8  0100               	movlb	0	; () banked
  5110  0030CA  6F7D               	movwf	??___flmul& (0+255),b
  5111  0030CC  0100               	movlb	0	; () banked
  5112  0030CE  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  5113  0030D0  0100               	movlb	0	; () banked
  5114  0030D2  6F7E               	movwf	(??___flmul+1)& (0+255),b
  5115  0030D4  0100               	movlb	0	; () banked
  5116  0030D6  6B7F               	clrf	(??___flmul+2)& (0+255),b
  5117  0030D8  0100               	movlb	0	; () banked
  5118  0030DA  6B80               	clrf	(??___flmul+3)& (0+255),b
  5119  0030DC  C07F  F080         	movff	??___flmul+2,??___flmul+3
  5120  0030E0  C07E  F07F         	movff	??___flmul+1,??___flmul+2
  5121  0030E4  C07D  F07E         	movff	??___flmul,??___flmul+1
  5122  0030E8  0100               	movlb	0	; () banked
  5123  0030EA  6B7D               	clrf	??___flmul& (0+255),b
  5124  0030EC  0100               	movlb	0	; () banked
  5125  0030EE  517D               	movf	??___flmul& (0+255),w,b
  5126  0030F0  0100               	movlb	0	; () banked
  5127  0030F2  2788               	addwf	___flmul@prod& (0+255),f,b
  5128  0030F4  0100               	movlb	0	; () banked
  5129  0030F6  517E               	movf	(??___flmul+1)& (0+255),w,b
  5130  0030F8  0100               	movlb	0	; () banked
  5131  0030FA  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5132  0030FC  0100               	movlb	0	; () banked
  5133  0030FE  517F               	movf	(??___flmul+2)& (0+255),w,b
  5134  003100  0100               	movlb	0	; () banked
  5135  003102  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5136  003104  0100               	movlb	0	; () banked
  5137  003106  5180               	movf	(??___flmul+3)& (0+255),w,b
  5138  003108  0100               	movlb	0	; () banked
  5139  00310A  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5140                           
  5141                           ; BSR set to: 0
  5142  00310C  C083  F07D         	movff	___flmul@grs,??___flmul
  5143  003110  C084  F07E         	movff	___flmul@grs+1,??___flmul+1
  5144  003114  C085  F07F         	movff	___flmul@grs+2,??___flmul+2
  5145  003118  C086  F080         	movff	___flmul@grs+3,??___flmul+3
  5146  00311C  0E19               	movlw	25
  5147  00311E  D006               	goto	u7820
  5148  003120                     u7825:
  5149  003120  0100               	movlb	0	; () banked
  5150  003122  90D8               	bcf	status,0,c
  5151  003124  3380               	rrcf	(??___flmul+3)& (0+255),f,b
  5152  003126  337F               	rrcf	(??___flmul+2)& (0+255),f,b
  5153  003128  337E               	rrcf	(??___flmul+1)& (0+255),f,b
  5154  00312A  337D               	rrcf	??___flmul& (0+255),f,b
  5155  00312C                     u7820:
  5156  00312C  2EE8               	decfsz	wreg,f,c
  5157  00312E  D7F8               	goto	u7825
  5158  003130  0100               	movlb	0	; () banked
  5159  003132  517D               	movf	??___flmul& (0+255),w,b
  5160  003134  0100               	movlb	0	; () banked
  5161  003136  2788               	addwf	___flmul@prod& (0+255),f,b
  5162  003138  0100               	movlb	0	; () banked
  5163  00313A  517E               	movf	(??___flmul+1)& (0+255),w,b
  5164  00313C  0100               	movlb	0	; () banked
  5165  00313E  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5166  003140  0100               	movlb	0	; () banked
  5167  003142  517F               	movf	(??___flmul+2)& (0+255),w,b
  5168  003144  0100               	movlb	0	; () banked
  5169  003146  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5170  003148  0100               	movlb	0	; () banked
  5171  00314A  5180               	movf	(??___flmul+3)& (0+255),w,b
  5172  00314C  0100               	movlb	0	; () banked
  5173  00314E  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5174                           
  5175                           ; BSR set to: 0
  5176  003150  C085  F086         	movff	___flmul@grs+2,___flmul@grs+3
  5177  003154  C084  F085         	movff	___flmul@grs+1,___flmul@grs+2
  5178  003158  C083  F084         	movff	___flmul@grs,___flmul@grs+1
  5179  00315C  0100               	movlb	0	; () banked
  5180  00315E  6B83               	clrf	___flmul@grs& (0+255),b
  5181                           
  5182                           ; BSR set to: 0
  5183  003160  0100               	movlb	0	; () banked
  5184  003162  5182               	movf	___flmul@aexp& (0+255),w,b
  5185  003164  C087  F07D         	movff	___flmul@bexp,??___flmul
  5186  003168  0100               	movlb	0	; () banked
  5187  00316A  6B7E               	clrf	(??___flmul+1)& (0+255),b
  5188  00316C  0100               	movlb	0	; () banked
  5189  00316E  277D               	addwf	??___flmul& (0+255),f,b
  5190  003170  0E00               	movlw	0
  5191  003172  237E               	addwfc	(??___flmul+1)& (0+255),f,b
  5192  003174  0E82               	movlw	130
  5193  003176  0100               	movlb	0	; () banked
  5194  003178  257D               	addwf	??___flmul& (0+255),w,b
  5195  00317A  0100               	movlb	0	; () banked
  5196  00317C  6F8C               	movwf	___flmul@temp& (0+255),b
  5197  00317E  0EFF               	movlw	255
  5198  003180  0100               	movlb	0	; () banked
  5199  003182  217E               	addwfc	(??___flmul+1)& (0+255),w,b
  5200  003184  0100               	movlb	0	; () banked
  5201  003186  6F8D               	movwf	(___flmul@temp+1)& (0+255),b
  5202  003188  D015               	goto	l6075
  5203  00318A                     l6069:
  5204                           
  5205                           ; BSR set to: 0
  5206  00318A  0100               	movlb	0	; () banked
  5207  00318C  90D8               	bcf	status,0,c
  5208  00318E  3788               	rlcf	___flmul@prod& (0+255),f,b
  5209  003190  3789               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5210  003192  378A               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5211  003194  378B               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5212                           
  5213                           ; BSR set to: 0
  5214  003196  0100               	movlb	0	; () banked
  5215  003198  AF86               	btfss	(___flmul@grs+3)& (0+255),7,b
  5216  00319A  D002               	goto	l1336
  5217                           
  5218                           ; BSR set to: 0
  5219  00319C  0100               	movlb	0	; () banked
  5220  00319E  8188               	bsf	___flmul@prod& (0+255),0,b
  5221  0031A0                     l1336:
  5222                           
  5223                           ; BSR set to: 0
  5224  0031A0  0100               	movlb	0	; () banked
  5225  0031A2  90D8               	bcf	status,0,c
  5226  0031A4  3783               	rlcf	___flmul@grs& (0+255),f,b
  5227  0031A6  3784               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5228  0031A8  3785               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5229  0031AA  3786               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5230  0031AC  0100               	movlb	0	; () banked
  5231  0031AE  078C               	decf	___flmul@temp& (0+255),f,b
  5232  0031B0  A0D8               	btfss	status,0,c
  5233  0031B2  078D               	decf	(___flmul@temp+1)& (0+255),f,b
  5234  0031B4                     l6075:
  5235                           
  5236                           ; BSR set to: 0
  5237  0031B4  0100               	movlb	0	; () banked
  5238  0031B6  AF8A               	btfss	(___flmul@prod+2)& (0+255),7,b
  5239  0031B8  D7E8               	goto	l6069
  5240                           
  5241                           ; BSR set to: 0
  5242                           
  5243                           ; BSR set to: 0
  5244  0031BA  0E00               	movlw	0
  5245  0031BC  0100               	movlb	0	; () banked
  5246  0031BE  6F82               	movwf	___flmul@aexp& (0+255),b
  5247                           
  5248                           ; BSR set to: 0
  5249  0031C0  0100               	movlb	0	; () banked
  5250  0031C2  AF86               	btfss	(___flmul@grs+3)& (0+255),7,b
  5251  0031C4  D024               	goto	l1338
  5252                           
  5253                           ; BSR set to: 0
  5254  0031C6  0EFF               	movlw	255
  5255  0031C8  0100               	movlb	0	; () banked
  5256  0031CA  1583               	andwf	___flmul@grs& (0+255),w,b
  5257  0031CC  0100               	movlb	0	; () banked
  5258  0031CE  6F7D               	movwf	??___flmul& (0+255),b
  5259  0031D0  0EFF               	movlw	255
  5260  0031D2  0100               	movlb	0	; () banked
  5261  0031D4  1584               	andwf	(___flmul@grs+1)& (0+255),w,b
  5262  0031D6  0100               	movlb	0	; () banked
  5263  0031D8  6F7E               	movwf	(??___flmul+1)& (0+255),b
  5264  0031DA  0EFF               	movlw	255
  5265  0031DC  0100               	movlb	0	; () banked
  5266  0031DE  1585               	andwf	(___flmul@grs+2)& (0+255),w,b
  5267  0031E0  0100               	movlb	0	; () banked
  5268  0031E2  6F7F               	movwf	(??___flmul+2)& (0+255),b
  5269  0031E4  0E7F               	movlw	127
  5270  0031E6  0100               	movlb	0	; () banked
  5271  0031E8  1586               	andwf	(___flmul@grs+3)& (0+255),w,b
  5272  0031EA  0100               	movlb	0	; () banked
  5273  0031EC  6F80               	movwf	(??___flmul+3)& (0+255),b
  5274  0031EE  0100               	movlb	0	; () banked
  5275  0031F0  517D               	movf	??___flmul& (0+255),w,b
  5276  0031F2  0100               	movlb	0	; () banked
  5277  0031F4  117E               	iorwf	(??___flmul+1)& (0+255),w,b
  5278  0031F6  0100               	movlb	0	; () banked
  5279  0031F8  117F               	iorwf	(??___flmul+2)& (0+255),w,b
  5280  0031FA  0100               	movlb	0	; () banked
  5281  0031FC  1180               	iorwf	(??___flmul+3)& (0+255),w,b
  5282  0031FE  A4D8               	btfss	status,2,c
  5283  003200  D003               	goto	l6085
  5284                           
  5285                           ; BSR set to: 0
  5286                           
  5287                           ; BSR set to: 0
  5288  003202  0100               	movlb	0	; () banked
  5289  003204  A188               	btfss	___flmul@prod& (0+255),0,b
  5290  003206  D003               	goto	l1338
  5291  003208                     l6085:
  5292                           
  5293                           ; BSR set to: 0
  5294  003208  0E01               	movlw	1
  5295  00320A  0100               	movlb	0	; () banked
  5296  00320C  6F82               	movwf	___flmul@aexp& (0+255),b
  5297  00320E                     l1338:
  5298                           
  5299                           ; BSR set to: 0
  5300  00320E  0100               	movlb	0	; () banked
  5301  003210  5182               	movf	___flmul@aexp& (0+255),w,b
  5302  003212  0100               	movlb	0	; () banked
  5303  003214  B4D8               	btfsc	status,2,c
  5304  003216  D023               	goto	l6095
  5305                           
  5306                           ; BSR set to: 0
  5307  003218  0E01               	movlw	1
  5308  00321A  0100               	movlb	0	; () banked
  5309  00321C  2788               	addwf	___flmul@prod& (0+255),f,b
  5310  00321E  0E00               	movlw	0
  5311  003220  2389               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5312  003222  238A               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5313  003224  238B               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5314                           
  5315                           ; BSR set to: 0
  5316  003226  0100               	movlb	0	; () banked
  5317  003228  A18B               	btfss	(___flmul@prod+3)& (0+255),0,b
  5318  00322A  D019               	goto	l6095
  5319                           
  5320                           ; BSR set to: 0
  5321  00322C  C088  F07D         	movff	___flmul@prod,??___flmul
  5322  003230  C089  F07E         	movff	___flmul@prod+1,??___flmul+1
  5323  003234  C08A  F07F         	movff	___flmul@prod+2,??___flmul+2
  5324  003238  C08B  F080         	movff	___flmul@prod+3,??___flmul+3
  5325  00323C  0100               	movlb	0	; () banked
  5326  00323E  3580               	rlcf	(??___flmul+3)& (0+255),w,b
  5327  003240  3380               	rrcf	(??___flmul+3)& (0+255),f,b
  5328  003242  337F               	rrcf	(??___flmul+2)& (0+255),f,b
  5329  003244  337E               	rrcf	(??___flmul+1)& (0+255),f,b
  5330  003246  337D               	rrcf	??___flmul& (0+255),f,b
  5331  003248  C07D  F088         	movff	??___flmul,___flmul@prod
  5332  00324C  C07E  F089         	movff	??___flmul+1,___flmul@prod+1
  5333  003250  C07F  F08A         	movff	??___flmul+2,___flmul@prod+2
  5334  003254  C080  F08B         	movff	??___flmul+3,___flmul@prod+3
  5335                           
  5336                           ; BSR set to: 0
  5337  003258  0100               	movlb	0	; () banked
  5338  00325A  4B8C               	infsnz	___flmul@temp& (0+255),f,b
  5339  00325C  2B8D               	incf	(___flmul@temp+1)& (0+255),f,b
  5340  00325E                     l6095:
  5341                           
  5342                           ; BSR set to: 0
  5343  00325E  0100               	movlb	0	; () banked
  5344  003260  BF8D               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5345  003262  D010               	goto	l6099
  5346  003264  0100               	movlb	0	; () banked
  5347  003266  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  5348  003268  E104               	bnz	u7900
  5349  00326A  0100               	movlb	0	; () banked
  5350  00326C  298C               	incf	___flmul@temp& (0+255),w,b
  5351  00326E  A0D8               	btfss	status,0,c
  5352  003270  D009               	goto	l6099
  5353  003272                     u7900:
  5354                           
  5355                           ; BSR set to: 0
  5356  003272  0E00               	movlw	0
  5357  003274  0100               	movlb	0	; () banked
  5358  003276  6F88               	movwf	___flmul@prod& (0+255),b
  5359  003278  0E00               	movlw	0
  5360  00327A  6F89               	movwf	(___flmul@prod+1)& (0+255),b
  5361  00327C  0E80               	movlw	128
  5362  00327E  6F8A               	movwf	(___flmul@prod+2)& (0+255),b
  5363  003280  0E7F               	movlw	127
  5364  003282  D02B               	goto	L5
  5365  003284                     l6099:
  5366                           
  5367                           ; BSR set to: 0
  5368  003284  0100               	movlb	0	; () banked
  5369  003286  BF8D               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5370  003288  D007               	goto	l6101
  5371  00328A  0100               	movlb	0	; () banked
  5372  00328C  518D               	movf	(___flmul@temp+1)& (0+255),w,b
  5373  00328E  E111               	bnz	l1346
  5374  003290  0100               	movlb	0	; () banked
  5375  003292  058C               	decf	___flmul@temp& (0+255),w,b
  5376  003294  B0D8               	btfsc	status,0,c
  5377  003296  D00D               	goto	l1346
  5378  003298                     l6101:
  5379                           
  5380                           ; BSR set to: 0
  5381  003298  0E00               	movlw	0
  5382  00329A  0100               	movlb	0	; () banked
  5383  00329C  6F88               	movwf	___flmul@prod& (0+255),b
  5384  00329E  0E00               	movlw	0
  5385  0032A0  6F89               	movwf	(___flmul@prod+1)& (0+255),b
  5386  0032A2  0E00               	movlw	0
  5387  0032A4  6F8A               	movwf	(___flmul@prod+2)& (0+255),b
  5388  0032A6  0E00               	movlw	0
  5389  0032A8  6F8B               	movwf	(___flmul@prod+3)& (0+255),b
  5390  0032AA  0E00               	movlw	0
  5391  0032AC  0100               	movlb	0	; () banked
  5392  0032AE  6F81               	movwf	___flmul@sign& (0+255),b
  5393  0032B0  D015               	goto	l6111
  5394  0032B2                     l1346:
  5395                           
  5396                           ; BSR set to: 0
  5397  0032B2  C08C  F087         	movff	___flmul@temp,___flmul@bexp
  5398                           
  5399                           ; BSR set to: 0
  5400  0032B6  0EFF               	movlw	255
  5401  0032B8  0100               	movlb	0	; () banked
  5402  0032BA  1788               	andwf	___flmul@prod& (0+255),f,b
  5403  0032BC  0EFF               	movlw	255
  5404  0032BE  1789               	andwf	(___flmul@prod+1)& (0+255),f,b
  5405  0032C0  0E7F               	movlw	127
  5406  0032C2  178A               	andwf	(___flmul@prod+2)& (0+255),f,b
  5407  0032C4  0E00               	movlw	0
  5408  0032C6  178B               	andwf	(___flmul@prod+3)& (0+255),f,b
  5409                           
  5410                           ; BSR set to: 0
  5411  0032C8  0100               	movlb	0	; () banked
  5412  0032CA  A187               	btfss	___flmul@bexp& (0+255),0,b
  5413  0032CC  D002               	goto	l6109
  5414                           
  5415                           ; BSR set to: 0
  5416  0032CE  0100               	movlb	0	; () banked
  5417  0032D0  8F8A               	bsf	(___flmul@prod+2)& (0+255),7,b
  5418  0032D2                     l6109:
  5419                           
  5420                           ; BSR set to: 0
  5421  0032D2  0100               	movlb	0	; () banked
  5422  0032D4  90D8               	bcf	status,0,c
  5423  0032D6  3187               	rrcf	___flmul@bexp& (0+255),w,b
  5424  0032D8  0100               	movlb	0	; () banked
  5425  0032DA                     L5:
  5426  0032DA  6F8B               	movwf	(___flmul@prod+3)& (0+255),b
  5427  0032DC                     l6111:
  5428                           
  5429                           ; BSR set to: 0
  5430  0032DC  0100               	movlb	0	; () banked
  5431  0032DE  5181               	movf	___flmul@sign& (0+255),w,b
  5432  0032E0  0100               	movlb	0	; () banked
  5433  0032E2  138B               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5434                           
  5435                           ; BSR set to: 0
  5436  0032E4  C088  F075         	movff	___flmul@prod,?___flmul
  5437  0032E8  C089  F076         	movff	___flmul@prod+1,?___flmul+1
  5438  0032EC  C08A  F077         	movff	___flmul@prod+2,?___flmul+2
  5439  0032F0  C08B  F078         	movff	___flmul@prod+3,?___flmul+3
  5440  0032F4  0012               	return	
  5441  0032F6                     __end_of___flmul:
  5442                           	opt stack 0
  5443                           tblptru	equ	0xFF8
  5444                           tblptrh	equ	0xFF7
  5445                           tblptrl	equ	0xFF6
  5446                           tablat	equ	0xFF5
  5447                           prodh	equ	0xFF4
  5448                           prodl	equ	0xFF3
  5449                           postinc0	equ	0xFEE
  5450                           wreg	equ	0xFE8
  5451                           postinc2	equ	0xFDE
  5452                           postdec2	equ	0xFDD
  5453                           fsr2h	equ	0xFDA
  5454                           fsr2l	equ	0xFD9
  5455                           status	equ	0xFD8
  5456                           
  5457 ;; *************** function ___flsub *****************
  5458 ;; Defined at:
  5459 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  b               4   66[BANK0 ] unsigned char 
  5462 ;;  a               4   70[BANK0 ] unsigned char 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;		None
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  4   66[BANK0 ] unsigned char 
  5467 ;; Registers used:
  5468 ;;		wreg, status,2, status,0, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5474 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5477 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5478 ;;Total ram usage:        8 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    3
  5481 ;; This function calls:
  5482 ;;		___fladd
  5483 ;; This function is called by:
  5484 ;;		_exp
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           	psect	text14
  5489  005172                     __ptext14:
  5490                           	opt stack 0
  5491  005172                     ___flsub:
  5492                           	opt stack 24
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;incstack = 0
  5496  005172  0E00               	movlw	0
  5497  005174  0100               	movlb	0	; () banked
  5498  005176  1BA6               	xorwf	___flsub@a& (0+255),f,b
  5499  005178  0E00               	movlw	0
  5500  00517A  1BA7               	xorwf	(___flsub@a+1)& (0+255),f,b
  5501  00517C  0E00               	movlw	0
  5502  00517E  1BA8               	xorwf	(___flsub@a+2)& (0+255),f,b
  5503  005180  0E80               	movlw	128
  5504  005182  1BA9               	xorwf	(___flsub@a+3)& (0+255),f,b
  5505                           
  5506                           ; BSR set to: 0
  5507  005184  C0A2  F08E         	movff	___flsub@b,___fladd@b
  5508  005188  C0A3  F08F         	movff	___flsub@b+1,___fladd@b+1
  5509  00518C  C0A4  F090         	movff	___flsub@b+2,___fladd@b+2
  5510  005190  C0A5  F091         	movff	___flsub@b+3,___fladd@b+3
  5511  005194  C0A6  F092         	movff	___flsub@a,___fladd@a
  5512  005198  C0A7  F093         	movff	___flsub@a+1,___fladd@a+1
  5513  00519C  C0A8  F094         	movff	___flsub@a+2,___fladd@a+2
  5514  0051A0  C0A9  F095         	movff	___flsub@a+3,___fladd@a+3
  5515  0051A4  ECD4  F014         	call	___fladd	;wreg free
  5516  0051A8  C08E  F0A2         	movff	?___fladd,?___flsub
  5517  0051AC  C08F  F0A3         	movff	?___fladd+1,?___flsub+1
  5518  0051B0  C090  F0A4         	movff	?___fladd+2,?___flsub+2
  5519  0051B4  C091  F0A5         	movff	?___fladd+3,?___flsub+3
  5520  0051B8  0012               	return	
  5521  0051BA                     __end_of___flsub:
  5522                           	opt stack 0
  5523                           tblptru	equ	0xFF8
  5524                           tblptrh	equ	0xFF7
  5525                           tblptrl	equ	0xFF6
  5526                           tablat	equ	0xFF5
  5527                           prodh	equ	0xFF4
  5528                           prodl	equ	0xFF3
  5529                           postinc0	equ	0xFEE
  5530                           wreg	equ	0xFE8
  5531                           postinc2	equ	0xFDE
  5532                           postdec2	equ	0xFDD
  5533                           fsr2h	equ	0xFDA
  5534                           fsr2l	equ	0xFD9
  5535                           status	equ	0xFD8
  5536                           
  5537 ;; *************** function ___fladd *****************
  5538 ;; Defined at:
  5539 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;  b               4   46[BANK0 ] unsigned char 
  5542 ;;  a               4   50[BANK0 ] unsigned char 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  grs             1   65[BANK0 ] unsigned char 
  5545 ;;  bexp            1   64[BANK0 ] unsigned char 
  5546 ;;  aexp            1   63[BANK0 ] unsigned char 
  5547 ;;  signs           1   62[BANK0 ] unsigned char 
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  4   46[BANK0 ] unsigned char 
  5550 ;; Registers used:
  5551 ;;		wreg, status,2, status,0
  5552 ;; Tracked objects:
  5553 ;;		On entry : 0/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5557 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5558 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5559 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5560 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5561 ;;Total ram usage:       20 bytes
  5562 ;; Hardware stack levels used:    1
  5563 ;; Hardware stack levels required when called:    2
  5564 ;; This function calls:
  5565 ;;		Nothing
  5566 ;; This function is called by:
  5567 ;;		_rampe
  5568 ;;		___flsub
  5569 ;;		_floor
  5570 ;;		_log
  5571 ;;		_eval_poly
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           	psect	text15
  5576  0029A8                     __ptext15:
  5577                           	opt stack 0
  5578  0029A8                     ___fladd:
  5579                           	opt stack 24
  5580                           
  5581                           ;incstack = 0
  5582  0029A8  0100               	movlb	0	; () banked
  5583  0029AA  5191               	movf	(___fladd@b+3)& (0+255),w,b
  5584  0029AC  0B80               	andlw	128
  5585  0029AE  0100               	movlb	0	; () banked
  5586  0029B0  6F9E               	movwf	___fladd@signs& (0+255),b
  5587  0029B2  0100               	movlb	0	; () banked
  5588  0029B4  5191               	movf	(___fladd@b+3)& (0+255),w,b
  5589  0029B6  2591               	addwf	(___fladd@b+3)& (0+255),w,b
  5590  0029B8  0100               	movlb	0	; () banked
  5591  0029BA  6FA0               	movwf	___fladd@bexp& (0+255),b
  5592                           
  5593                           ; BSR set to: 0
  5594  0029BC  0100               	movlb	0	; () banked
  5595  0029BE  AF90               	btfss	(___fladd@b+2)& (0+255),7,b
  5596  0029C0  D002               	goto	l5791
  5597                           
  5598                           ; BSR set to: 0
  5599  0029C2  0100               	movlb	0	; () banked
  5600  0029C4  81A0               	bsf	___fladd@bexp& (0+255),0,b
  5601  0029C6                     l5791:
  5602                           
  5603                           ; BSR set to: 0
  5604  0029C6  0100               	movlb	0	; () banked
  5605  0029C8  51A0               	movf	___fladd@bexp& (0+255),w,b
  5606  0029CA  0100               	movlb	0	; () banked
  5607  0029CC  B4D8               	btfsc	status,2,c
  5608  0029CE  D012               	goto	l5801
  5609                           
  5610                           ; BSR set to: 0
  5611  0029D0  0100               	movlb	0	; () banked
  5612  0029D2  29A0               	incf	___fladd@bexp& (0+255),w,b
  5613  0029D4  A4D8               	btfss	status,2,c
  5614  0029D6  D009               	goto	l5797
  5615                           
  5616                           ; BSR set to: 0
  5617  0029D8  0E00               	movlw	0
  5618  0029DA  0100               	movlb	0	; () banked
  5619  0029DC  6F8E               	movwf	___fladd@b& (0+255),b
  5620  0029DE  0E00               	movlw	0
  5621  0029E0  6F8F               	movwf	(___fladd@b+1)& (0+255),b
  5622  0029E2  0E00               	movlw	0
  5623  0029E4  6F90               	movwf	(___fladd@b+2)& (0+255),b
  5624  0029E6  0E00               	movlw	0
  5625  0029E8  6F91               	movwf	(___fladd@b+3)& (0+255),b
  5626  0029EA                     l5797:
  5627                           
  5628                           ; BSR set to: 0
  5629  0029EA  0100               	movlb	0	; () banked
  5630  0029EC  8F90               	bsf	(___fladd@b+2)& (0+255),7,b
  5631                           
  5632                           ; BSR set to: 0
  5633  0029EE  0E00               	movlw	0
  5634  0029F0  0100               	movlb	0	; () banked
  5635  0029F2  D008               	goto	L6
  5636  0029F4                     l5801:
  5637                           
  5638                           ; BSR set to: 0
  5639  0029F4  0E00               	movlw	0
  5640  0029F6  0100               	movlb	0	; () banked
  5641  0029F8  6F8E               	movwf	___fladd@b& (0+255),b
  5642  0029FA  0E00               	movlw	0
  5643  0029FC  6F8F               	movwf	(___fladd@b+1)& (0+255),b
  5644  0029FE  0E00               	movlw	0
  5645  002A00  6F90               	movwf	(___fladd@b+2)& (0+255),b
  5646  002A02  0E00               	movlw	0
  5647  002A04                     L6:
  5648  002A04  6F91               	movwf	(___fladd@b+3)& (0+255),b
  5649                           
  5650                           ; BSR set to: 0
  5651                           
  5652                           ; BSR set to: 0
  5653  002A06  0100               	movlb	0	; () banked
  5654  002A08  5195               	movf	(___fladd@a+3)& (0+255),w,b
  5655  002A0A  0B80               	andlw	128
  5656  002A0C  0100               	movlb	0	; () banked
  5657  002A0E  6F9F               	movwf	___fladd@aexp& (0+255),b
  5658                           
  5659                           ; BSR set to: 0
  5660  002A10  0100               	movlb	0	; () banked
  5661  002A12  519E               	movf	___fladd@signs& (0+255),w,b
  5662  002A14  0100               	movlb	0	; () banked
  5663  002A16  199F               	xorwf	___fladd@aexp& (0+255),w,b
  5664  002A18  B4D8               	btfsc	status,2,c
  5665  002A1A  D002               	goto	l5809
  5666                           
  5667                           ; BSR set to: 0
  5668  002A1C  0100               	movlb	0	; () banked
  5669  002A1E  8D9E               	bsf	___fladd@signs& (0+255),6,b
  5670  002A20                     l5809:
  5671                           
  5672                           ; BSR set to: 0
  5673  002A20  0100               	movlb	0	; () banked
  5674  002A22  5195               	movf	(___fladd@a+3)& (0+255),w,b
  5675  002A24  2595               	addwf	(___fladd@a+3)& (0+255),w,b
  5676  002A26  0100               	movlb	0	; () banked
  5677  002A28  6F9F               	movwf	___fladd@aexp& (0+255),b
  5678                           
  5679                           ; BSR set to: 0
  5680  002A2A  0100               	movlb	0	; () banked
  5681  002A2C  AF94               	btfss	(___fladd@a+2)& (0+255),7,b
  5682  002A2E  D002               	goto	l5815
  5683                           
  5684                           ; BSR set to: 0
  5685  002A30  0100               	movlb	0	; () banked
  5686  002A32  819F               	bsf	___fladd@aexp& (0+255),0,b
  5687  002A34                     l5815:
  5688                           
  5689                           ; BSR set to: 0
  5690  002A34  0100               	movlb	0	; () banked
  5691  002A36  519F               	movf	___fladd@aexp& (0+255),w,b
  5692  002A38  0100               	movlb	0	; () banked
  5693  002A3A  B4D8               	btfsc	status,2,c
  5694  002A3C  D012               	goto	l5825
  5695                           
  5696                           ; BSR set to: 0
  5697  002A3E  0100               	movlb	0	; () banked
  5698  002A40  299F               	incf	___fladd@aexp& (0+255),w,b
  5699  002A42  A4D8               	btfss	status,2,c
  5700  002A44  D009               	goto	l5821
  5701                           
  5702                           ; BSR set to: 0
  5703  002A46  0E00               	movlw	0
  5704  002A48  0100               	movlb	0	; () banked
  5705  002A4A  6F92               	movwf	___fladd@a& (0+255),b
  5706  002A4C  0E00               	movlw	0
  5707  002A4E  6F93               	movwf	(___fladd@a+1)& (0+255),b
  5708  002A50  0E00               	movlw	0
  5709  002A52  6F94               	movwf	(___fladd@a+2)& (0+255),b
  5710  002A54  0E00               	movlw	0
  5711  002A56  6F95               	movwf	(___fladd@a+3)& (0+255),b
  5712  002A58                     l5821:
  5713                           
  5714                           ; BSR set to: 0
  5715  002A58  0100               	movlb	0	; () banked
  5716  002A5A  8F94               	bsf	(___fladd@a+2)& (0+255),7,b
  5717                           
  5718                           ; BSR set to: 0
  5719  002A5C  0E00               	movlw	0
  5720  002A5E  0100               	movlb	0	; () banked
  5721  002A60  D008               	goto	L7
  5722  002A62                     l5825:
  5723                           
  5724                           ; BSR set to: 0
  5725  002A62  0E00               	movlw	0
  5726  002A64  0100               	movlb	0	; () banked
  5727  002A66  6F92               	movwf	___fladd@a& (0+255),b
  5728  002A68  0E00               	movlw	0
  5729  002A6A  6F93               	movwf	(___fladd@a+1)& (0+255),b
  5730  002A6C  0E00               	movlw	0
  5731  002A6E  6F94               	movwf	(___fladd@a+2)& (0+255),b
  5732  002A70  0E00               	movlw	0
  5733  002A72                     L7:
  5734  002A72  6F95               	movwf	(___fladd@a+3)& (0+255),b
  5735                           
  5736                           ; BSR set to: 0
  5737                           
  5738                           ; BSR set to: 0
  5739  002A74  0100               	movlb	0	; () banked
  5740  002A76  51A0               	movf	___fladd@bexp& (0+255),w,b
  5741  002A78  0100               	movlb	0	; () banked
  5742  002A7A  5D9F               	subwf	___fladd@aexp& (0+255),w,b
  5743  002A7C  B0D8               	btfsc	status,0,c
  5744  002A7E  D024               	goto	l5863
  5745                           
  5746                           ; BSR set to: 0
  5747  002A80  0100               	movlb	0	; () banked
  5748  002A82  AD9E               	btfss	___fladd@signs& (0+255),6,b
  5749  002A84  D003               	goto	l5833
  5750                           
  5751                           ; BSR set to: 0
  5752  002A86  0E80               	movlw	128
  5753  002A88  0100               	movlb	0	; () banked
  5754  002A8A  1B9E               	xorwf	___fladd@signs& (0+255),f,b
  5755  002A8C                     l5833:
  5756                           
  5757                           ; BSR set to: 0
  5758  002A8C  C0A0  F0A1         	movff	___fladd@bexp,___fladd@grs
  5759                           
  5760                           ; BSR set to: 0
  5761  002A90  C09F  F0A0         	movff	___fladd@aexp,___fladd@bexp
  5762                           
  5763                           ; BSR set to: 0
  5764  002A94  C0A1  F09F         	movff	___fladd@grs,___fladd@aexp
  5765                           
  5766                           ; BSR set to: 0
  5767  002A98  C08E  F0A1         	movff	___fladd@b,___fladd@grs
  5768                           
  5769                           ; BSR set to: 0
  5770  002A9C  C092  F08E         	movff	___fladd@a,___fladd@b
  5771                           
  5772                           ; BSR set to: 0
  5773  002AA0  C0A1  F092         	movff	___fladd@grs,___fladd@a
  5774                           
  5775                           ; BSR set to: 0
  5776  002AA4  C08F  F0A1         	movff	___fladd@b+1,___fladd@grs
  5777                           
  5778                           ; BSR set to: 0
  5779  002AA8  C093  F08F         	movff	___fladd@a+1,___fladd@b+1
  5780                           
  5781                           ; BSR set to: 0
  5782  002AAC  C0A1  F093         	movff	___fladd@grs,___fladd@a+1
  5783                           
  5784                           ; BSR set to: 0
  5785  002AB0  C090  F0A1         	movff	___fladd@b+2,___fladd@grs
  5786                           
  5787                           ; BSR set to: 0
  5788  002AB4  C094  F090         	movff	___fladd@a+2,___fladd@b+2
  5789                           
  5790                           ; BSR set to: 0
  5791  002AB8  C0A1  F094         	movff	___fladd@grs,___fladd@a+2
  5792                           
  5793                           ; BSR set to: 0
  5794  002ABC  C091  F0A1         	movff	___fladd@b+3,___fladd@grs
  5795                           
  5796                           ; BSR set to: 0
  5797  002AC0  C095  F091         	movff	___fladd@a+3,___fladd@b+3
  5798                           
  5799                           ; BSR set to: 0
  5800  002AC4  C0A1  F095         	movff	___fladd@grs,___fladd@a+3
  5801  002AC8                     l5863:
  5802                           
  5803                           ; BSR set to: 0
  5804  002AC8  0E00               	movlw	0
  5805  002ACA  0100               	movlb	0	; () banked
  5806  002ACC  6FA1               	movwf	___fladd@grs& (0+255),b
  5807                           
  5808                           ; BSR set to: 0
  5809  002ACE  0100               	movlb	0	; () banked
  5810  002AD0  51A0               	movf	___fladd@bexp& (0+255),w,b
  5811  002AD2  0100               	movlb	0	; () banked
  5812  002AD4  6F96               	movwf	??___fladd& (0+255),b
  5813  002AD6  6B97               	clrf	(??___fladd+1)& (0+255),b
  5814  002AD8  0100               	movlb	0	; () banked
  5815  002ADA  1F96               	comf	??___fladd& (0+255),f,b
  5816  002ADC  1F97               	comf	(??___fladd+1)& (0+255),f,b
  5817  002ADE  4B96               	infsnz	??___fladd& (0+255),f,b
  5818  002AE0  2B97               	incf	(??___fladd+1)& (0+255),f,b
  5819  002AE2  0100               	movlb	0	; () banked
  5820  002AE4  519F               	movf	___fladd@aexp& (0+255),w,b
  5821  002AE6  0100               	movlb	0	; () banked
  5822  002AE8  6F98               	movwf	(??___fladd+2)& (0+255),b
  5823  002AEA  6B99               	clrf	(??___fladd+3)& (0+255),b
  5824  002AEC  0100               	movlb	0	; () banked
  5825  002AEE  5196               	movf	??___fladd& (0+255),w,b
  5826  002AF0  0100               	movlb	0	; () banked
  5827  002AF2  2798               	addwf	(??___fladd+2)& (0+255),f,b
  5828  002AF4  0100               	movlb	0	; () banked
  5829  002AF6  5197               	movf	(??___fladd+1)& (0+255),w,b
  5830  002AF8  0100               	movlb	0	; () banked
  5831  002AFA  2399               	addwfc	(??___fladd+3)& (0+255),f,b
  5832  002AFC  0100               	movlb	0	; () banked
  5833  002AFE  BF99               	btfsc	(??___fladd+3)& (0+255),7,b
  5834  002B00  D03D               	goto	l1244
  5835  002B02  0100               	movlb	0	; () banked
  5836  002B04  5199               	movf	(??___fladd+3)& (0+255),w,b
  5837  002B06  E105               	bnz	u7440
  5838  002B08  0E1A               	movlw	26
  5839  002B0A  0100               	movlb	0	; () banked
  5840  002B0C  5D98               	subwf	(??___fladd+2)& (0+255),w,b
  5841  002B0E  A0D8               	btfss	status,0,c
  5842  002B10  D035               	goto	l1244
  5843  002B12                     u7440:
  5844                           
  5845                           ; BSR set to: 0
  5846  002B12  0100               	movlb	0	; () banked
  5847  002B14  518E               	movf	___fladd@b& (0+255),w,b
  5848  002B16  0100               	movlb	0	; () banked
  5849  002B18  118F               	iorwf	(___fladd@b+1)& (0+255),w,b
  5850  002B1A  0100               	movlb	0	; () banked
  5851  002B1C  1190               	iorwf	(___fladd@b+2)& (0+255),w,b
  5852  002B1E  0100               	movlb	0	; () banked
  5853  002B20  1191               	iorwf	(___fladd@b+3)& (0+255),w,b
  5854  002B22  B4D8               	btfsc	status,2,c
  5855  002B24  D002               	goto	u7450
  5856  002B26  0E01               	movlw	1
  5857  002B28  D001               	goto	u7460
  5858  002B2A                     u7450:
  5859  002B2A  0E00               	movlw	0
  5860  002B2C                     u7460:
  5861  002B2C  0100               	movlb	0	; () banked
  5862  002B2E  6FA1               	movwf	___fladd@grs& (0+255),b
  5863                           
  5864                           ; BSR set to: 0
  5865  002B30  0E00               	movlw	0
  5866  002B32  0100               	movlb	0	; () banked
  5867  002B34  6F8E               	movwf	___fladd@b& (0+255),b
  5868  002B36  0E00               	movlw	0
  5869  002B38  6F8F               	movwf	(___fladd@b+1)& (0+255),b
  5870  002B3A  0E00               	movlw	0
  5871  002B3C  6F90               	movwf	(___fladd@b+2)& (0+255),b
  5872  002B3E  0E00               	movlw	0
  5873  002B40  6F91               	movwf	(___fladd@b+3)& (0+255),b
  5874                           
  5875                           ; BSR set to: 0
  5876  002B42  C09F  F0A0         	movff	___fladd@aexp,___fladd@bexp
  5877  002B46  D020               	goto	l1243
  5878  002B48                     l1245:
  5879                           
  5880                           ; BSR set to: 0
  5881  002B48  0100               	movlb	0	; () banked
  5882  002B4A  A1A1               	btfss	___fladd@grs& (0+255),0,b
  5883  002B4C  D007               	goto	l5875
  5884                           
  5885                           ; BSR set to: 0
  5886  002B4E  0100               	movlb	0	; () banked
  5887  002B50  90D8               	bcf	status,0,c
  5888  002B52  31A1               	rrcf	___fladd@grs& (0+255),w,b
  5889  002B54  0901               	iorlw	1
  5890  002B56  0100               	movlb	0	; () banked
  5891  002B58  6FA1               	movwf	___fladd@grs& (0+255),b
  5892  002B5A  D003               	goto	l5877
  5893  002B5C                     l5875:
  5894                           
  5895                           ; BSR set to: 0
  5896  002B5C  0100               	movlb	0	; () banked
  5897  002B5E  90D8               	bcf	status,0,c
  5898  002B60  33A1               	rrcf	___fladd@grs& (0+255),f,b
  5899  002B62                     l5877:
  5900                           
  5901                           ; BSR set to: 0
  5902  002B62  0100               	movlb	0	; () banked
  5903  002B64  A18E               	btfss	___fladd@b& (0+255),0,b
  5904  002B66  D002               	goto	l5881
  5905                           
  5906                           ; BSR set to: 0
  5907  002B68  0100               	movlb	0	; () banked
  5908  002B6A  8FA1               	bsf	___fladd@grs& (0+255),7,b
  5909  002B6C                     l5881:
  5910                           
  5911                           ; BSR set to: 0
  5912  002B6C  0100               	movlb	0	; () banked
  5913  002B6E  3591               	rlcf	(___fladd@b+3)& (0+255),w,b
  5914  002B70  3391               	rrcf	(___fladd@b+3)& (0+255),f,b
  5915  002B72  3390               	rrcf	(___fladd@b+2)& (0+255),f,b
  5916  002B74  338F               	rrcf	(___fladd@b+1)& (0+255),f,b
  5917  002B76  338E               	rrcf	___fladd@b& (0+255),f,b
  5918                           
  5919                           ; BSR set to: 0
  5920  002B78  0100               	movlb	0	; () banked
  5921  002B7A  2BA0               	incf	___fladd@bexp& (0+255),f,b
  5922  002B7C                     l1244:
  5923                           
  5924                           ; BSR set to: 0
  5925  002B7C  0100               	movlb	0	; () banked
  5926  002B7E  519F               	movf	___fladd@aexp& (0+255),w,b
  5927  002B80  0100               	movlb	0	; () banked
  5928  002B82  5DA0               	subwf	___fladd@bexp& (0+255),w,b
  5929  002B84  A0D8               	btfss	status,0,c
  5930  002B86  D7E0               	goto	l1245
  5931  002B88                     l1243:
  5932                           
  5933                           ; BSR set to: 0
  5934  002B88  0100               	movlb	0	; () banked
  5935  002B8A  BD9E               	btfsc	___fladd@signs& (0+255),6,b
  5936  002B8C  D03F               	goto	l5909
  5937                           
  5938                           ; BSR set to: 0
  5939  002B8E  0100               	movlb	0	; () banked
  5940  002B90  51A0               	movf	___fladd@bexp& (0+255),w,b
  5941  002B92  0100               	movlb	0	; () banked
  5942  002B94  A4D8               	btfss	status,2,c
  5943  002B96  D00A               	goto	l5891
  5944                           
  5945                           ; BSR set to: 0
  5946  002B98  0E00               	movlw	0
  5947  002B9A  0100               	movlb	0	; () banked
  5948  002B9C  6F8E               	movwf	?___fladd& (0+255),b
  5949  002B9E  0E00               	movlw	0
  5950  002BA0  6F8F               	movwf	(?___fladd+1)& (0+255),b
  5951  002BA2  0E00               	movlw	0
  5952  002BA4  6F90               	movwf	(?___fladd+2)& (0+255),b
  5953  002BA6  0E00               	movlw	0
  5954  002BA8  6F91               	movwf	(?___fladd+3)& (0+255),b
  5955                           
  5956                           ; BSR set to: 0
  5957  002BAA  0012               	return	
  5958  002BAC                     l5891:
  5959                           
  5960                           ; BSR set to: 0
  5961  002BAC  0100               	movlb	0	; () banked
  5962  002BAE  5192               	movf	___fladd@a& (0+255),w,b
  5963  002BB0  0100               	movlb	0	; () banked
  5964  002BB2  278E               	addwf	___fladd@b& (0+255),f,b
  5965  002BB4  0100               	movlb	0	; () banked
  5966  002BB6  5193               	movf	(___fladd@a+1)& (0+255),w,b
  5967  002BB8  0100               	movlb	0	; () banked
  5968  002BBA  238F               	addwfc	(___fladd@b+1)& (0+255),f,b
  5969  002BBC  0100               	movlb	0	; () banked
  5970  002BBE  5194               	movf	(___fladd@a+2)& (0+255),w,b
  5971  002BC0  0100               	movlb	0	; () banked
  5972  002BC2  2390               	addwfc	(___fladd@b+2)& (0+255),f,b
  5973  002BC4  0100               	movlb	0	; () banked
  5974  002BC6  5195               	movf	(___fladd@a+3)& (0+255),w,b
  5975  002BC8  0100               	movlb	0	; () banked
  5976  002BCA  2391               	addwfc	(___fladd@b+3)& (0+255),f,b
  5977                           
  5978                           ; BSR set to: 0
  5979  002BCC  0100               	movlb	0	; () banked
  5980  002BCE  A191               	btfss	(___fladd@b+3)& (0+255),0,b
  5981  002BD0  D0CC               	goto	l5945
  5982                           
  5983                           ; BSR set to: 0
  5984  002BD2  0100               	movlb	0	; () banked
  5985  002BD4  A1A1               	btfss	___fladd@grs& (0+255),0,b
  5986  002BD6  D009               	goto	l5899
  5987                           
  5988                           ; BSR set to: 0
  5989  002BD8  0100               	movlb	0	; () banked
  5990  002BDA  90D8               	bcf	status,0,c
  5991  002BDC  33A1               	rrcf	___fladd@grs& (0+255),f,b
  5992  002BDE  0100               	movlb	0	; () banked
  5993  002BE0  51A1               	movf	___fladd@grs& (0+255),w,b
  5994  002BE2  0901               	iorlw	1
  5995  002BE4  0100               	movlb	0	; () banked
  5996  002BE6  6FA1               	movwf	___fladd@grs& (0+255),b
  5997  002BE8  D003               	goto	l5901
  5998  002BEA                     l5899:
  5999                           
  6000                           ; BSR set to: 0
  6001  002BEA  0100               	movlb	0	; () banked
  6002  002BEC  90D8               	bcf	status,0,c
  6003  002BEE  33A1               	rrcf	___fladd@grs& (0+255),f,b
  6004  002BF0                     l5901:
  6005                           
  6006                           ; BSR set to: 0
  6007  002BF0  0100               	movlb	0	; () banked
  6008  002BF2  A18E               	btfss	___fladd@b& (0+255),0,b
  6009  002BF4  D002               	goto	l5905
  6010                           
  6011                           ; BSR set to: 0
  6012  002BF6  0100               	movlb	0	; () banked
  6013  002BF8  8FA1               	bsf	___fladd@grs& (0+255),7,b
  6014  002BFA                     l5905:
  6015                           
  6016                           ; BSR set to: 0
  6017  002BFA  0100               	movlb	0	; () banked
  6018  002BFC  3591               	rlcf	(___fladd@b+3)& (0+255),w,b
  6019  002BFE  3391               	rrcf	(___fladd@b+3)& (0+255),f,b
  6020  002C00  3390               	rrcf	(___fladd@b+2)& (0+255),f,b
  6021  002C02  338F               	rrcf	(___fladd@b+1)& (0+255),f,b
  6022  002C04  338E               	rrcf	___fladd@b& (0+255),f,b
  6023                           
  6024                           ; BSR set to: 0
  6025  002C06  0100               	movlb	0	; () banked
  6026  002C08  2BA0               	incf	___fladd@bexp& (0+255),f,b
  6027                           
  6028                           ; BSR set to: 0
  6029  002C0A  D0AF               	goto	l5945
  6030  002C0C                     l5909:
  6031                           
  6032                           ; BSR set to: 0
  6033  002C0C  0100               	movlb	0	; () banked
  6034  002C0E  5192               	movf	___fladd@a& (0+255),w,b
  6035  002C10  0100               	movlb	0	; () banked
  6036  002C12  5D8E               	subwf	___fladd@b& (0+255),w,b
  6037  002C14  0100               	movlb	0	; () banked
  6038  002C16  5193               	movf	(___fladd@a+1)& (0+255),w,b
  6039  002C18  0100               	movlb	0	; () banked
  6040  002C1A  598F               	subwfb	(___fladd@b+1)& (0+255),w,b
  6041  002C1C  0100               	movlb	0	; () banked
  6042  002C1E  5194               	movf	(___fladd@a+2)& (0+255),w,b
  6043  002C20  0100               	movlb	0	; () banked
  6044  002C22  5990               	subwfb	(___fladd@b+2)& (0+255),w,b
  6045  002C24  0100               	movlb	0	; () banked
  6046  002C26  5191               	movf	(___fladd@b+3)& (0+255),w,b
  6047  002C28  0A80               	xorlw	128
  6048  002C2A  0100               	movlb	0	; () banked
  6049  002C2C  6F96               	movwf	??___fladd& (0+255),b
  6050  002C2E  0100               	movlb	0	; () banked
  6051  002C30  5195               	movf	(___fladd@a+3)& (0+255),w,b
  6052  002C32  0A80               	xorlw	128
  6053  002C34  0100               	movlb	0	; () banked
  6054  002C36  5996               	subwfb	??___fladd& (0+255),w,b
  6055  002C38  B0D8               	btfsc	status,0,c
  6056  002C3A  D050               	goto	l5919
  6057                           
  6058                           ; BSR set to: 0
  6059  002C3C  C08E  F096         	movff	___fladd@b,??___fladd
  6060  002C40  C08F  F097         	movff	___fladd@b+1,??___fladd+1
  6061  002C44  C090  F098         	movff	___fladd@b+2,??___fladd+2
  6062  002C48  C091  F099         	movff	___fladd@b+3,??___fladd+3
  6063  002C4C  0100               	movlb	0	; () banked
  6064  002C4E  1F96               	comf	??___fladd& (0+255),f,b
  6065  002C50  1F97               	comf	(??___fladd+1)& (0+255),f,b
  6066  002C52  1F98               	comf	(??___fladd+2)& (0+255),f,b
  6067  002C54  1F99               	comf	(??___fladd+3)& (0+255),f,b
  6068  002C56  2B96               	incf	??___fladd& (0+255),f,b
  6069  002C58  0E00               	movlw	0
  6070  002C5A  2397               	addwfc	(??___fladd+1)& (0+255),f,b
  6071  002C5C  2398               	addwfc	(??___fladd+2)& (0+255),f,b
  6072  002C5E  2399               	addwfc	(??___fladd+3)& (0+255),f,b
  6073  002C60  0100               	movlb	0	; () banked
  6074  002C62  5192               	movf	___fladd@a& (0+255),w,b
  6075  002C64  0100               	movlb	0	; () banked
  6076  002C66  2596               	addwf	??___fladd& (0+255),w,b
  6077  002C68  0100               	movlb	0	; () banked
  6078  002C6A  6F9A               	movwf	(??___fladd+4)& (0+255),b
  6079  002C6C  0100               	movlb	0	; () banked
  6080  002C6E  5193               	movf	(___fladd@a+1)& (0+255),w,b
  6081  002C70  0100               	movlb	0	; () banked
  6082  002C72  2197               	addwfc	(??___fladd+1)& (0+255),w,b
  6083  002C74  0100               	movlb	0	; () banked
  6084  002C76  6F9B               	movwf	(??___fladd+5)& (0+255),b
  6085  002C78  0100               	movlb	0	; () banked
  6086  002C7A  5194               	movf	(___fladd@a+2)& (0+255),w,b
  6087  002C7C  0100               	movlb	0	; () banked
  6088  002C7E  2198               	addwfc	(??___fladd+2)& (0+255),w,b
  6089  002C80  0100               	movlb	0	; () banked
  6090  002C82  6F9C               	movwf	(??___fladd+6)& (0+255),b
  6091  002C84  0100               	movlb	0	; () banked
  6092  002C86  5195               	movf	(___fladd@a+3)& (0+255),w,b
  6093  002C88  0100               	movlb	0	; () banked
  6094  002C8A  2199               	addwfc	(??___fladd+3)& (0+255),w,b
  6095  002C8C  0100               	movlb	0	; () banked
  6096  002C8E  6F9D               	movwf	(??___fladd+7)& (0+255),b
  6097  002C90  0EFF               	movlw	255
  6098  002C92  0100               	movlb	0	; () banked
  6099  002C94  259A               	addwf	(??___fladd+4)& (0+255),w,b
  6100  002C96  0100               	movlb	0	; () banked
  6101  002C98  6F8E               	movwf	___fladd@b& (0+255),b
  6102  002C9A  0EFF               	movlw	255
  6103  002C9C  0100               	movlb	0	; () banked
  6104  002C9E  219B               	addwfc	(??___fladd+5)& (0+255),w,b
  6105  002CA0  0100               	movlb	0	; () banked
  6106  002CA2  6F8F               	movwf	(___fladd@b+1)& (0+255),b
  6107  002CA4  0EFF               	movlw	255
  6108  002CA6  0100               	movlb	0	; () banked
  6109  002CA8  219C               	addwfc	(??___fladd+6)& (0+255),w,b
  6110  002CAA  0100               	movlb	0	; () banked
  6111  002CAC  6F90               	movwf	(___fladd@b+2)& (0+255),b
  6112  002CAE  0EFF               	movlw	255
  6113  002CB0  0100               	movlb	0	; () banked
  6114  002CB2  219D               	addwfc	(??___fladd+7)& (0+255),w,b
  6115  002CB4  0100               	movlb	0	; () banked
  6116  002CB6  6F91               	movwf	(___fladd@b+3)& (0+255),b
  6117  002CB8  0E80               	movlw	128
  6118  002CBA  0100               	movlb	0	; () banked
  6119  002CBC  1B9E               	xorwf	___fladd@signs& (0+255),f,b
  6120                           
  6121                           ; BSR set to: 0
  6122  002CBE  0100               	movlb	0	; () banked
  6123  002CC0  6DA1               	negf	___fladd@grs& (0+255),b
  6124                           
  6125                           ; BSR set to: 0
  6126  002CC2  0100               	movlb	0	; () banked
  6127  002CC4  51A1               	movf	___fladd@grs& (0+255),w,b
  6128  002CC6  0100               	movlb	0	; () banked
  6129  002CC8  A4D8               	btfss	status,2,c
  6130  002CCA  D018               	goto	l1260
  6131                           
  6132                           ; BSR set to: 0
  6133  002CCC  0E01               	movlw	1
  6134  002CCE  0100               	movlb	0	; () banked
  6135  002CD0  278E               	addwf	___fladd@b& (0+255),f,b
  6136  002CD2  0E00               	movlw	0
  6137  002CD4  238F               	addwfc	(___fladd@b+1)& (0+255),f,b
  6138  002CD6  2390               	addwfc	(___fladd@b+2)& (0+255),f,b
  6139  002CD8  2391               	addwfc	(___fladd@b+3)& (0+255),f,b
  6140                           
  6141                           ; BSR set to: 0
  6142  002CDA  D010               	goto	l1260
  6143  002CDC                     l5919:
  6144                           
  6145                           ; BSR set to: 0
  6146  002CDC  0100               	movlb	0	; () banked
  6147  002CDE  5192               	movf	___fladd@a& (0+255),w,b
  6148  002CE0  0100               	movlb	0	; () banked
  6149  002CE2  5F8E               	subwf	___fladd@b& (0+255),f,b
  6150  002CE4  0100               	movlb	0	; () banked
  6151  002CE6  5193               	movf	(___fladd@a+1)& (0+255),w,b
  6152  002CE8  0100               	movlb	0	; () banked
  6153  002CEA  5B8F               	subwfb	(___fladd@b+1)& (0+255),f,b
  6154  002CEC  0100               	movlb	0	; () banked
  6155  002CEE  5194               	movf	(___fladd@a+2)& (0+255),w,b
  6156  002CF0  0100               	movlb	0	; () banked
  6157  002CF2  5B90               	subwfb	(___fladd@b+2)& (0+255),f,b
  6158  002CF4  0100               	movlb	0	; () banked
  6159  002CF6  5195               	movf	(___fladd@a+3)& (0+255),w,b
  6160  002CF8  0100               	movlb	0	; () banked
  6161  002CFA  5B91               	subwfb	(___fladd@b+3)& (0+255),f,b
  6162  002CFC                     l1260:
  6163                           
  6164                           ; BSR set to: 0
  6165  002CFC  0100               	movlb	0	; () banked
  6166  002CFE  518E               	movf	___fladd@b& (0+255),w,b
  6167  002D00  0100               	movlb	0	; () banked
  6168  002D02  118F               	iorwf	(___fladd@b+1)& (0+255),w,b
  6169  002D04  0100               	movlb	0	; () banked
  6170  002D06  1190               	iorwf	(___fladd@b+2)& (0+255),w,b
  6171  002D08  0100               	movlb	0	; () banked
  6172  002D0A  1191               	iorwf	(___fladd@b+3)& (0+255),w,b
  6173  002D0C  A4D8               	btfss	status,2,c
  6174  002D0E  D02A               	goto	l5943
  6175                           
  6176                           ; BSR set to: 0
  6177  002D10  0100               	movlb	0	; () banked
  6178  002D12  51A1               	movf	___fladd@grs& (0+255),w,b
  6179  002D14  0100               	movlb	0	; () banked
  6180  002D16  A4D8               	btfss	status,2,c
  6181  002D18  D025               	goto	l5943
  6182                           
  6183                           ; BSR set to: 0
  6184  002D1A  0E00               	movlw	0
  6185  002D1C  0100               	movlb	0	; () banked
  6186  002D1E  6F8E               	movwf	?___fladd& (0+255),b
  6187  002D20  0E00               	movlw	0
  6188  002D22  6F8F               	movwf	(?___fladd+1)& (0+255),b
  6189  002D24  0E00               	movlw	0
  6190  002D26  6F90               	movwf	(?___fladd+2)& (0+255),b
  6191  002D28  0E00               	movlw	0
  6192  002D2A  6F91               	movwf	(?___fladd+3)& (0+255),b
  6193                           
  6194                           ; BSR set to: 0
  6195  002D2C  0012               	return	
  6196  002D2E                     l5927:
  6197                           
  6198                           ; BSR set to: 0
  6199  002D2E  0100               	movlb	0	; () banked
  6200  002D30  90D8               	bcf	status,0,c
  6201  002D32  378E               	rlcf	___fladd@b& (0+255),f,b
  6202  002D34  378F               	rlcf	(___fladd@b+1)& (0+255),f,b
  6203  002D36  3790               	rlcf	(___fladd@b+2)& (0+255),f,b
  6204  002D38  3791               	rlcf	(___fladd@b+3)& (0+255),f,b
  6205                           
  6206                           ; BSR set to: 0
  6207  002D3A  0100               	movlb	0	; () banked
  6208  002D3C  AFA1               	btfss	___fladd@grs& (0+255),7,b
  6209  002D3E  D002               	goto	l5933
  6210                           
  6211                           ; BSR set to: 0
  6212  002D40  0100               	movlb	0	; () banked
  6213  002D42  818E               	bsf	___fladd@b& (0+255),0,b
  6214  002D44                     l5933:
  6215                           
  6216                           ; BSR set to: 0
  6217  002D44  0100               	movlb	0	; () banked
  6218  002D46  A1A1               	btfss	___fladd@grs& (0+255),0,b
  6219  002D48  D003               	goto	l5937
  6220                           
  6221                           ; BSR set to: 0
  6222  002D4A  80D8               	bsf	status,0,c
  6223  002D4C  0100               	movlb	0	; () banked
  6224  002D4E  D002               	goto	L8
  6225  002D50                     l5937:
  6226                           
  6227                           ; BSR set to: 0
  6228  002D50  0100               	movlb	0	; () banked
  6229  002D52  90D8               	bcf	status,0,c
  6230  002D54                     L8:
  6231  002D54  37A1               	rlcf	___fladd@grs& (0+255),f,b
  6232                           
  6233                           ; BSR set to: 0
  6234                           
  6235                           ; BSR set to: 0
  6236  002D56  0100               	movlb	0	; () banked
  6237  002D58  51A0               	movf	___fladd@bexp& (0+255),w,b
  6238  002D5A  0100               	movlb	0	; () banked
  6239  002D5C  B4D8               	btfsc	status,2,c
  6240  002D5E  D002               	goto	l5943
  6241                           
  6242                           ; BSR set to: 0
  6243  002D60  0100               	movlb	0	; () banked
  6244  002D62  07A0               	decf	___fladd@bexp& (0+255),f,b
  6245  002D64                     l5943:
  6246                           
  6247                           ; BSR set to: 0
  6248  002D64  0100               	movlb	0	; () banked
  6249  002D66  AF90               	btfss	(___fladd@b+2)& (0+255),7,b
  6250  002D68  D7E2               	goto	l5927
  6251  002D6A                     l5945:
  6252                           
  6253                           ; BSR set to: 0
  6254  002D6A  0E00               	movlw	0
  6255  002D6C  0100               	movlb	0	; () banked
  6256  002D6E  6F9F               	movwf	___fladd@aexp& (0+255),b
  6257                           
  6258                           ; BSR set to: 0
  6259  002D70  0100               	movlb	0	; () banked
  6260  002D72  AFA1               	btfss	___fladd@grs& (0+255),7,b
  6261  002D74  D00D               	goto	l1269
  6262                           
  6263                           ; BSR set to: 0
  6264  002D76  C0A1  F096         	movff	___fladd@grs,??___fladd
  6265  002D7A  0E7F               	movlw	127
  6266  002D7C  0100               	movlb	0	; () banked
  6267  002D7E  1796               	andwf	??___fladd& (0+255),f,b
  6268  002D80  A4D8               	btfss	status,2,c
  6269  002D82  D003               	goto	l5953
  6270                           
  6271                           ; BSR set to: 0
  6272                           
  6273                           ; BSR set to: 0
  6274  002D84  0100               	movlb	0	; () banked
  6275  002D86  A18E               	btfss	___fladd@b& (0+255),0,b
  6276  002D88  D003               	goto	l1269
  6277  002D8A                     l5953:
  6278                           
  6279                           ; BSR set to: 0
  6280  002D8A  0E01               	movlw	1
  6281  002D8C  0100               	movlb	0	; () banked
  6282  002D8E  6F9F               	movwf	___fladd@aexp& (0+255),b
  6283  002D90                     l1269:
  6284                           
  6285                           ; BSR set to: 0
  6286  002D90  0100               	movlb	0	; () banked
  6287  002D92  519F               	movf	___fladd@aexp& (0+255),w,b
  6288  002D94  0100               	movlb	0	; () banked
  6289  002D96  B4D8               	btfsc	status,2,c
  6290  002D98  D026               	goto	l5963
  6291                           
  6292                           ; BSR set to: 0
  6293  002D9A  0E01               	movlw	1
  6294  002D9C  0100               	movlb	0	; () banked
  6295  002D9E  278E               	addwf	___fladd@b& (0+255),f,b
  6296  002DA0  0E00               	movlw	0
  6297  002DA2  238F               	addwfc	(___fladd@b+1)& (0+255),f,b
  6298  002DA4  2390               	addwfc	(___fladd@b+2)& (0+255),f,b
  6299  002DA6  2391               	addwfc	(___fladd@b+3)& (0+255),f,b
  6300                           
  6301                           ; BSR set to: 0
  6302  002DA8  0100               	movlb	0	; () banked
  6303  002DAA  A191               	btfss	(___fladd@b+3)& (0+255),0,b
  6304  002DAC  D01C               	goto	l5963
  6305                           
  6306                           ; BSR set to: 0
  6307  002DAE  C08E  F096         	movff	___fladd@b,??___fladd
  6308  002DB2  C08F  F097         	movff	___fladd@b+1,??___fladd+1
  6309  002DB6  C090  F098         	movff	___fladd@b+2,??___fladd+2
  6310  002DBA  C091  F099         	movff	___fladd@b+3,??___fladd+3
  6311  002DBE  0100               	movlb	0	; () banked
  6312  002DC0  3599               	rlcf	(??___fladd+3)& (0+255),w,b
  6313  002DC2  3399               	rrcf	(??___fladd+3)& (0+255),f,b
  6314  002DC4  3398               	rrcf	(??___fladd+2)& (0+255),f,b
  6315  002DC6  3397               	rrcf	(??___fladd+1)& (0+255),f,b
  6316  002DC8  3396               	rrcf	??___fladd& (0+255),f,b
  6317  002DCA  C096  F08E         	movff	??___fladd,___fladd@b
  6318  002DCE  C097  F08F         	movff	??___fladd+1,___fladd@b+1
  6319  002DD2  C098  F090         	movff	??___fladd+2,___fladd@b+2
  6320  002DD6  C099  F091         	movff	??___fladd+3,___fladd@b+3
  6321  002DDA  0100               	movlb	0	; () banked
  6322  002DDC  29A0               	incf	___fladd@bexp& (0+255),w,b
  6323  002DDE  B4D8               	btfsc	status,2,c
  6324  002DE0  D002               	goto	l5963
  6325                           
  6326                           ; BSR set to: 0
  6327  002DE2  0100               	movlb	0	; () banked
  6328  002DE4  2BA0               	incf	___fladd@bexp& (0+255),f,b
  6329  002DE6                     l5963:
  6330                           
  6331                           ; BSR set to: 0
  6332  002DE6  0100               	movlb	0	; () banked
  6333  002DE8  29A0               	incf	___fladd@bexp& (0+255),w,b
  6334  002DEA  B4D8               	btfsc	status,2,c
  6335  002DEC  D005               	goto	l5967
  6336                           
  6337                           ; BSR set to: 0
  6338  002DEE  0100               	movlb	0	; () banked
  6339  002DF0  51A0               	movf	___fladd@bexp& (0+255),w,b
  6340  002DF2  0100               	movlb	0	; () banked
  6341  002DF4  A4D8               	btfss	status,2,c
  6342  002DF6  D011               	goto	l5971
  6343  002DF8                     l5967:
  6344                           
  6345                           ; BSR set to: 0
  6346  002DF8  0E00               	movlw	0
  6347  002DFA  0100               	movlb	0	; () banked
  6348  002DFC  6F8E               	movwf	___fladd@b& (0+255),b
  6349  002DFE  0E00               	movlw	0
  6350  002E00  6F8F               	movwf	(___fladd@b+1)& (0+255),b
  6351  002E02  0E00               	movlw	0
  6352  002E04  6F90               	movwf	(___fladd@b+2)& (0+255),b
  6353  002E06  0E00               	movlw	0
  6354  002E08  6F91               	movwf	(___fladd@b+3)& (0+255),b
  6355  002E0A  0100               	movlb	0	; () banked
  6356  002E0C  51A0               	movf	___fladd@bexp& (0+255),w,b
  6357  002E0E  0100               	movlb	0	; () banked
  6358  002E10  A4D8               	btfss	status,2,c
  6359  002E12  D003               	goto	l5971
  6360                           
  6361                           ; BSR set to: 0
  6362  002E14  0E00               	movlw	0
  6363  002E16  0100               	movlb	0	; () banked
  6364  002E18  6F9E               	movwf	___fladd@signs& (0+255),b
  6365  002E1A                     l5971:
  6366                           
  6367                           ; BSR set to: 0
  6368  002E1A  0100               	movlb	0	; () banked
  6369  002E1C  A1A0               	btfss	___fladd@bexp& (0+255),0,b
  6370  002E1E  D003               	goto	l5975
  6371                           
  6372                           ; BSR set to: 0
  6373  002E20  0100               	movlb	0	; () banked
  6374  002E22  8F90               	bsf	(___fladd@b+2)& (0+255),7,b
  6375  002E24  D002               	goto	l5977
  6376  002E26                     l5975:
  6377                           
  6378                           ; BSR set to: 0
  6379  002E26  0100               	movlb	0	; () banked
  6380  002E28  9F90               	bcf	(___fladd@b+2)& (0+255),7,b
  6381  002E2A                     l5977:
  6382                           
  6383                           ; BSR set to: 0
  6384  002E2A  0100               	movlb	0	; () banked
  6385  002E2C  90D8               	bcf	status,0,c
  6386  002E2E  31A0               	rrcf	___fladd@bexp& (0+255),w,b
  6387  002E30  0100               	movlb	0	; () banked
  6388  002E32  6F91               	movwf	(___fladd@b+3)& (0+255),b
  6389                           
  6390                           ; BSR set to: 0
  6391  002E34  0100               	movlb	0	; () banked
  6392  002E36  AF9E               	btfss	___fladd@signs& (0+255),7,b
  6393  002E38  D002               	goto	l5983
  6394                           
  6395                           ; BSR set to: 0
  6396  002E3A  0100               	movlb	0	; () banked
  6397  002E3C  8F91               	bsf	(___fladd@b+3)& (0+255),7,b
  6398  002E3E                     l5983:
  6399                           
  6400                           ; BSR set to: 0
  6401  002E3E  C08E  F08E         	movff	___fladd@b,?___fladd
  6402  002E42  C08F  F08F         	movff	___fladd@b+1,?___fladd+1
  6403  002E46  C090  F090         	movff	___fladd@b+2,?___fladd+2
  6404  002E4A  C091  F091         	movff	___fladd@b+3,?___fladd+3
  6405  002E4E  0012               	return	
  6406  002E50                     __end_of___fladd:
  6407                           	opt stack 0
  6408                           tblptru	equ	0xFF8
  6409                           tblptrh	equ	0xFF7
  6410                           tblptrl	equ	0xFF6
  6411                           tablat	equ	0xFF5
  6412                           prodh	equ	0xFF4
  6413                           prodl	equ	0xFF3
  6414                           postinc0	equ	0xFEE
  6415                           wreg	equ	0xFE8
  6416                           postinc2	equ	0xFDE
  6417                           postdec2	equ	0xFDD
  6418                           fsr2h	equ	0xFDA
  6419                           fsr2l	equ	0xFD9
  6420                           status	equ	0xFD8
  6421                           
  6422 ;; *************** function ___flneg *****************
  6423 ;; Defined at:
  6424 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;  f1              4    0[BANK0 ] unsigned char 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;		None
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  4    0[BANK0 ] unsigned char 
  6431 ;; Registers used:
  6432 ;;		wreg, status,2, status,0
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6438 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6441 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6442 ;;Total ram usage:        4 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; Hardware stack levels required when called:    2
  6445 ;; This function calls:
  6446 ;;		Nothing
  6447 ;; This function is called by:
  6448 ;;		_pow
  6449 ;;		_exp
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text16
  6454  0051FE                     __ptext16:
  6455                           	opt stack 0
  6456  0051FE                     ___flneg:
  6457                           	opt stack 25
  6458                           
  6459                           ; BSR set to: 0
  6460                           ;incstack = 0
  6461  0051FE  0100               	movlb	0	; () banked
  6462  005200  5160               	movf	___flneg@f1& (0+255),w,b
  6463  005202  0100               	movlb	0	; () banked
  6464  005204  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  6465  005206  0100               	movlb	0	; () banked
  6466  005208  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  6467  00520A  0100               	movlb	0	; () banked
  6468  00520C  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  6469  00520E  B4D8               	btfsc	status,2,c
  6470  005210  D009               	goto	l6391
  6471                           
  6472                           ; BSR set to: 0
  6473  005212  0E00               	movlw	0
  6474  005214  0100               	movlb	0	; () banked
  6475  005216  1B60               	xorwf	___flneg@f1& (0+255),f,b
  6476  005218  0E00               	movlw	0
  6477  00521A  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  6478  00521C  0E00               	movlw	0
  6479  00521E  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  6480  005220  0E80               	movlw	128
  6481  005222  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  6482  005224                     l6391:
  6483                           
  6484                           ; BSR set to: 0
  6485  005224  C060  F060         	movff	___flneg@f1,?___flneg
  6486  005228  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  6487  00522C  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  6488  005230  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  6489  005234  0012               	return	
  6490  005236                     __end_of___flneg:
  6491                           	opt stack 0
  6492                           tblptru	equ	0xFF8
  6493                           tblptrh	equ	0xFF7
  6494                           tblptrl	equ	0xFF6
  6495                           tablat	equ	0xFF5
  6496                           prodh	equ	0xFF4
  6497                           prodl	equ	0xFF3
  6498                           postinc0	equ	0xFEE
  6499                           wreg	equ	0xFE8
  6500                           postinc2	equ	0xFDE
  6501                           postdec2	equ	0xFDD
  6502                           fsr2h	equ	0xFDA
  6503                           fsr2l	equ	0xFD9
  6504                           status	equ	0xFD8
  6505                           
  6506 ;; *************** function ___fldiv *****************
  6507 ;; Defined at:
  6508 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  b               4    0[BANK0 ] unsigned char 
  6511 ;;  a               4    4[BANK0 ] unsigned char 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;  grs             4   19[BANK0 ] unsigned long 
  6514 ;;  rem             4   13[BANK0 ] unsigned long 
  6515 ;;  new_exp         2   17[BANK0 ] int 
  6516 ;;  aexp            1   24[BANK0 ] unsigned char 
  6517 ;;  bexp            1   23[BANK0 ] unsigned char 
  6518 ;;  sign            1   12[BANK0 ] unsigned char 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  4    0[BANK0 ] unsigned char 
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, status,0
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6528 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6529 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6530 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6531 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6532 ;;Total ram usage:       25 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    2
  6535 ;; This function calls:
  6536 ;;		Nothing
  6537 ;; This function is called by:
  6538 ;;		_exp
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	text17
  6543  0032F6                     __ptext17:
  6544                           	opt stack 0
  6545  0032F6                     ___fldiv:
  6546                           	opt stack 25
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;incstack = 0
  6550  0032F6  0100               	movlb	0	; () banked
  6551  0032F8  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6552  0032FA  0B80               	andlw	128
  6553  0032FC  0100               	movlb	0	; () banked
  6554  0032FE  6F6C               	movwf	___fldiv@sign& (0+255),b
  6555  003300  0100               	movlb	0	; () banked
  6556  003302  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  6557  003304  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  6558  003306  0100               	movlb	0	; () banked
  6559  003308  6F77               	movwf	___fldiv@bexp& (0+255),b
  6560                           
  6561                           ; BSR set to: 0
  6562  00330A  0100               	movlb	0	; () banked
  6563  00330C  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  6564  00330E  D002               	goto	l6251
  6565                           
  6566                           ; BSR set to: 0
  6567  003310  0100               	movlb	0	; () banked
  6568  003312  8177               	bsf	___fldiv@bexp& (0+255),0,b
  6569  003314                     l6251:
  6570                           
  6571                           ; BSR set to: 0
  6572  003314  0100               	movlb	0	; () banked
  6573  003316  5177               	movf	___fldiv@bexp& (0+255),w,b
  6574  003318  0100               	movlb	0	; () banked
  6575  00331A  B4D8               	btfsc	status,2,c
  6576  00331C  D012               	goto	l6261
  6577                           
  6578                           ; BSR set to: 0
  6579  00331E  0100               	movlb	0	; () banked
  6580  003320  2977               	incf	___fldiv@bexp& (0+255),w,b
  6581  003322  A4D8               	btfss	status,2,c
  6582  003324  D009               	goto	l6257
  6583                           
  6584                           ; BSR set to: 0
  6585  003326  0E00               	movlw	0
  6586  003328  0100               	movlb	0	; () banked
  6587  00332A  6F60               	movwf	___fldiv@b& (0+255),b
  6588  00332C  0E00               	movlw	0
  6589  00332E  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6590  003330  0E00               	movlw	0
  6591  003332  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6592  003334  0E00               	movlw	0
  6593  003336  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6594  003338                     l6257:
  6595                           
  6596                           ; BSR set to: 0
  6597  003338  0100               	movlb	0	; () banked
  6598  00333A  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  6599                           
  6600                           ; BSR set to: 0
  6601  00333C  0E00               	movlw	0
  6602  00333E  0100               	movlb	0	; () banked
  6603  003340  D008               	goto	L9
  6604  003342                     l6261:
  6605                           
  6606                           ; BSR set to: 0
  6607  003342  0E00               	movlw	0
  6608  003344  0100               	movlb	0	; () banked
  6609  003346  6F60               	movwf	___fldiv@b& (0+255),b
  6610  003348  0E00               	movlw	0
  6611  00334A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6612  00334C  0E00               	movlw	0
  6613  00334E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6614  003350  0E00               	movlw	0
  6615  003352                     L9:
  6616  003352  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6617                           
  6618                           ; BSR set to: 0
  6619                           
  6620                           ; BSR set to: 0
  6621  003354  0100               	movlb	0	; () banked
  6622  003356  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6623  003358  0B80               	andlw	128
  6624  00335A  0100               	movlb	0	; () banked
  6625  00335C  1B6C               	xorwf	___fldiv@sign& (0+255),f,b
  6626                           
  6627                           ; BSR set to: 0
  6628  00335E  0100               	movlb	0	; () banked
  6629  003360  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6630  003362  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  6631  003364  0100               	movlb	0	; () banked
  6632  003366  6F78               	movwf	___fldiv@aexp& (0+255),b
  6633                           
  6634                           ; BSR set to: 0
  6635  003368  0100               	movlb	0	; () banked
  6636  00336A  AF66               	btfss	(___fldiv@a+2)& (0+255),7,b
  6637  00336C  D002               	goto	l6271
  6638                           
  6639                           ; BSR set to: 0
  6640  00336E  0100               	movlb	0	; () banked
  6641  003370  8178               	bsf	___fldiv@aexp& (0+255),0,b
  6642  003372                     l6271:
  6643                           
  6644                           ; BSR set to: 0
  6645  003372  0100               	movlb	0	; () banked
  6646  003374  5178               	movf	___fldiv@aexp& (0+255),w,b
  6647  003376  0100               	movlb	0	; () banked
  6648  003378  B4D8               	btfsc	status,2,c
  6649  00337A  D012               	goto	l6281
  6650                           
  6651                           ; BSR set to: 0
  6652  00337C  0100               	movlb	0	; () banked
  6653  00337E  2978               	incf	___fldiv@aexp& (0+255),w,b
  6654  003380  A4D8               	btfss	status,2,c
  6655  003382  D009               	goto	l6277
  6656                           
  6657                           ; BSR set to: 0
  6658  003384  0E00               	movlw	0
  6659  003386  0100               	movlb	0	; () banked
  6660  003388  6F64               	movwf	___fldiv@a& (0+255),b
  6661  00338A  0E00               	movlw	0
  6662  00338C  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6663  00338E  0E00               	movlw	0
  6664  003390  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6665  003392  0E00               	movlw	0
  6666  003394  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6667  003396                     l6277:
  6668                           
  6669                           ; BSR set to: 0
  6670  003396  0100               	movlb	0	; () banked
  6671  003398  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  6672                           
  6673                           ; BSR set to: 0
  6674  00339A  0E00               	movlw	0
  6675  00339C  0100               	movlb	0	; () banked
  6676  00339E  D008               	goto	L10
  6677  0033A0                     l6281:
  6678                           
  6679                           ; BSR set to: 0
  6680  0033A0  0E00               	movlw	0
  6681  0033A2  0100               	movlb	0	; () banked
  6682  0033A4  6F64               	movwf	___fldiv@a& (0+255),b
  6683  0033A6  0E00               	movlw	0
  6684  0033A8  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  6685  0033AA  0E00               	movlw	0
  6686  0033AC  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  6687  0033AE  0E00               	movlw	0
  6688  0033B0                     L10:
  6689  0033B0  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  6690                           
  6691                           ; BSR set to: 0
  6692                           
  6693                           ; BSR set to: 0
  6694  0033B2  0100               	movlb	0	; () banked
  6695  0033B4  5164               	movf	___fldiv@a& (0+255),w,b
  6696  0033B6  0100               	movlb	0	; () banked
  6697  0033B8  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  6698  0033BA  0100               	movlb	0	; () banked
  6699  0033BC  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  6700  0033BE  0100               	movlb	0	; () banked
  6701  0033C0  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  6702  0033C2  A4D8               	btfss	status,2,c
  6703  0033C4  D017               	goto	l6293
  6704                           
  6705                           ; BSR set to: 0
  6706  0033C6  0E00               	movlw	0
  6707  0033C8  0100               	movlb	0	; () banked
  6708  0033CA  6F60               	movwf	___fldiv@b& (0+255),b
  6709  0033CC  0E00               	movlw	0
  6710  0033CE  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6711  0033D0  0E00               	movlw	0
  6712  0033D2  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6713  0033D4  0E00               	movlw	0
  6714  0033D6  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6715                           
  6716                           ; BSR set to: 0
  6717  0033D8  0100               	movlb	0	; () banked
  6718  0033DA  0E80               	movlw	128
  6719  0033DC  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  6720  0033DE  0E7F               	movlw	127
  6721  0033E0  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6722                           
  6723                           ; BSR set to: 0
  6724  0033E2  C060  F060         	movff	___fldiv@b,?___fldiv
  6725  0033E6  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  6726  0033EA  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  6727  0033EE  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  6728                           
  6729                           ; BSR set to: 0
  6730  0033F2  0012               	return	
  6731  0033F4                     l6293:
  6732                           
  6733                           ; BSR set to: 0
  6734  0033F4  0100               	movlb	0	; () banked
  6735  0033F6  5177               	movf	___fldiv@bexp& (0+255),w,b
  6736  0033F8  0100               	movlb	0	; () banked
  6737  0033FA  A4D8               	btfss	status,2,c
  6738  0033FC  D012               	goto	l6301
  6739                           
  6740                           ; BSR set to: 0
  6741  0033FE  0E00               	movlw	0
  6742  003400  0100               	movlb	0	; () banked
  6743  003402  6F60               	movwf	___fldiv@b& (0+255),b
  6744  003404  0E00               	movlw	0
  6745  003406  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6746  003408  0E00               	movlw	0
  6747  00340A  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6748  00340C  0E00               	movlw	0
  6749  00340E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6750                           
  6751                           ; BSR set to: 0
  6752  003410  C060  F060         	movff	___fldiv@b,?___fldiv
  6753  003414  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  6754  003418  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  6755  00341C  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  6756                           
  6757                           ; BSR set to: 0
  6758  003420  0012               	return	
  6759  003422                     l6301:
  6760                           
  6761                           ; BSR set to: 0
  6762  003422  0100               	movlb	0	; () banked
  6763  003424  5178               	movf	___fldiv@aexp& (0+255),w,b
  6764  003426  0100               	movlb	0	; () banked
  6765  003428  6F68               	movwf	??___fldiv& (0+255),b
  6766  00342A  6B69               	clrf	(??___fldiv+1)& (0+255),b
  6767  00342C  0100               	movlb	0	; () banked
  6768  00342E  1F68               	comf	??___fldiv& (0+255),f,b
  6769  003430  1F69               	comf	(??___fldiv+1)& (0+255),f,b
  6770  003432  4B68               	infsnz	??___fldiv& (0+255),f,b
  6771  003434  2B69               	incf	(??___fldiv+1)& (0+255),f,b
  6772  003436  0100               	movlb	0	; () banked
  6773  003438  5177               	movf	___fldiv@bexp& (0+255),w,b
  6774  00343A  0100               	movlb	0	; () banked
  6775  00343C  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  6776  00343E  6B6B               	clrf	(??___fldiv+3)& (0+255),b
  6777  003440  0100               	movlb	0	; () banked
  6778  003442  5168               	movf	??___fldiv& (0+255),w,b
  6779  003444  0100               	movlb	0	; () banked
  6780  003446  276A               	addwf	(??___fldiv+2)& (0+255),f,b
  6781  003448  0100               	movlb	0	; () banked
  6782  00344A  5169               	movf	(??___fldiv+1)& (0+255),w,b
  6783  00344C  0100               	movlb	0	; () banked
  6784  00344E  236B               	addwfc	(??___fldiv+3)& (0+255),f,b
  6785  003450  0E7F               	movlw	127
  6786  003452  0100               	movlb	0	; () banked
  6787  003454  256A               	addwf	(??___fldiv+2)& (0+255),w,b
  6788  003456  0100               	movlb	0	; () banked
  6789  003458  6F71               	movwf	___fldiv@new_exp& (0+255),b
  6790  00345A  0E00               	movlw	0
  6791  00345C  0100               	movlb	0	; () banked
  6792  00345E  216B               	addwfc	(??___fldiv+3)& (0+255),w,b
  6793  003460  0100               	movlb	0	; () banked
  6794  003462  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6795                           
  6796                           ; BSR set to: 0
  6797  003464  C060  F06D         	movff	___fldiv@b,___fldiv@rem
  6798  003468  C061  F06E         	movff	___fldiv@b+1,___fldiv@rem+1
  6799  00346C  C062  F06F         	movff	___fldiv@b+2,___fldiv@rem+2
  6800  003470  C063  F070         	movff	___fldiv@b+3,___fldiv@rem+3
  6801                           
  6802                           ; BSR set to: 0
  6803  003474  0E00               	movlw	0
  6804  003476  0100               	movlb	0	; () banked
  6805  003478  6F60               	movwf	___fldiv@b& (0+255),b
  6806  00347A  0E00               	movlw	0
  6807  00347C  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  6808  00347E  0E00               	movlw	0
  6809  003480  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  6810  003482  0E00               	movlw	0
  6811  003484  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  6812                           
  6813                           ; BSR set to: 0
  6814  003486  0E00               	movlw	0
  6815  003488  0100               	movlb	0	; () banked
  6816  00348A  6F73               	movwf	___fldiv@grs& (0+255),b
  6817  00348C  0E00               	movlw	0
  6818  00348E  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  6819  003490  0E00               	movlw	0
  6820  003492  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  6821  003494  0E00               	movlw	0
  6822  003496  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  6823                           
  6824                           ; BSR set to: 0
  6825  003498  0E00               	movlw	0
  6826  00349A  0100               	movlb	0	; () banked
  6827  00349C  6F78               	movwf	___fldiv@aexp& (0+255),b
  6828  00349E  D042               	goto	l1299
  6829  0034A0                     l6311:
  6830                           
  6831                           ; BSR set to: 0
  6832  0034A0  0100               	movlb	0	; () banked
  6833  0034A2  5178               	movf	___fldiv@aexp& (0+255),w,b
  6834  0034A4  0100               	movlb	0	; () banked
  6835  0034A6  B4D8               	btfsc	status,2,c
  6836  0034A8  D017               	goto	l6319
  6837                           
  6838                           ; BSR set to: 0
  6839  0034AA  0100               	movlb	0	; () banked
  6840  0034AC  90D8               	bcf	status,0,c
  6841  0034AE  376D               	rlcf	___fldiv@rem& (0+255),f,b
  6842  0034B0  376E               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  6843  0034B2  376F               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  6844  0034B4  3770               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  6845  0034B6  0100               	movlb	0	; () banked
  6846  0034B8  90D8               	bcf	status,0,c
  6847  0034BA  3760               	rlcf	___fldiv@b& (0+255),f,b
  6848  0034BC  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6849  0034BE  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6850  0034C0  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6851                           
  6852                           ; BSR set to: 0
  6853  0034C2  0100               	movlb	0	; () banked
  6854  0034C4  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6855  0034C6  D002               	goto	l1302
  6856                           
  6857                           ; BSR set to: 0
  6858  0034C8  0100               	movlb	0	; () banked
  6859  0034CA  8160               	bsf	___fldiv@b& (0+255),0,b
  6860  0034CC                     l1302:
  6861                           
  6862                           ; BSR set to: 0
  6863  0034CC  0100               	movlb	0	; () banked
  6864  0034CE  90D8               	bcf	status,0,c
  6865  0034D0  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6866  0034D2  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6867  0034D4  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6868  0034D6  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6869  0034D8                     l6319:
  6870                           
  6871                           ; BSR set to: 0
  6872  0034D8  0100               	movlb	0	; () banked
  6873  0034DA  5164               	movf	___fldiv@a& (0+255),w,b
  6874  0034DC  0100               	movlb	0	; () banked
  6875  0034DE  5D6D               	subwf	___fldiv@rem& (0+255),w,b
  6876  0034E0  0100               	movlb	0	; () banked
  6877  0034E2  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6878  0034E4  0100               	movlb	0	; () banked
  6879  0034E6  596E               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  6880  0034E8  0100               	movlb	0	; () banked
  6881  0034EA  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6882  0034EC  0100               	movlb	0	; () banked
  6883  0034EE  596F               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  6884  0034F0  0100               	movlb	0	; () banked
  6885  0034F2  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6886  0034F4  0100               	movlb	0	; () banked
  6887  0034F6  5970               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  6888  0034F8  A0D8               	btfss	status,0,c
  6889  0034FA  D012               	goto	l6325
  6890                           
  6891                           ; BSR set to: 0
  6892  0034FC  0100               	movlb	0	; () banked
  6893  0034FE  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  6894                           
  6895                           ; BSR set to: 0
  6896  003500  0100               	movlb	0	; () banked
  6897  003502  5164               	movf	___fldiv@a& (0+255),w,b
  6898  003504  0100               	movlb	0	; () banked
  6899  003506  5F6D               	subwf	___fldiv@rem& (0+255),f,b
  6900  003508  0100               	movlb	0	; () banked
  6901  00350A  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  6902  00350C  0100               	movlb	0	; () banked
  6903  00350E  5B6E               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  6904  003510  0100               	movlb	0	; () banked
  6905  003512  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  6906  003514  0100               	movlb	0	; () banked
  6907  003516  5B6F               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  6908  003518  0100               	movlb	0	; () banked
  6909  00351A  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  6910  00351C  0100               	movlb	0	; () banked
  6911  00351E  5B70               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  6912  003520                     l6325:
  6913                           
  6914                           ; BSR set to: 0
  6915  003520  0100               	movlb	0	; () banked
  6916  003522  2B78               	incf	___fldiv@aexp& (0+255),f,b
  6917  003524                     l1299:
  6918                           
  6919                           ; BSR set to: 0
  6920  003524  0E19               	movlw	25
  6921  003526  0100               	movlb	0	; () banked
  6922  003528  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  6923  00352A  D7BA               	goto	l6311
  6924                           
  6925                           ; BSR set to: 0
  6926                           
  6927                           ; BSR set to: 0
  6928  00352C  0100               	movlb	0	; () banked
  6929  00352E  516D               	movf	___fldiv@rem& (0+255),w,b
  6930  003530  0100               	movlb	0	; () banked
  6931  003532  116E               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  6932  003534  0100               	movlb	0	; () banked
  6933  003536  116F               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  6934  003538  0100               	movlb	0	; () banked
  6935  00353A  1170               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  6936  00353C  B4D8               	btfsc	status,2,c
  6937  00353E  D018               	goto	l6337
  6938                           
  6939                           ; BSR set to: 0
  6940  003540  0100               	movlb	0	; () banked
  6941  003542  8173               	bsf	___fldiv@grs& (0+255),0,b
  6942                           
  6943                           ; BSR set to: 0
  6944  003544  D015               	goto	l6337
  6945  003546                     l6331:
  6946                           
  6947                           ; BSR set to: 0
  6948  003546  0100               	movlb	0	; () banked
  6949  003548  90D8               	bcf	status,0,c
  6950  00354A  3760               	rlcf	___fldiv@b& (0+255),f,b
  6951  00354C  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  6952  00354E  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  6953  003550  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  6954                           
  6955                           ; BSR set to: 0
  6956  003552  0100               	movlb	0	; () banked
  6957  003554  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6958  003556  D002               	goto	l1308
  6959                           
  6960                           ; BSR set to: 0
  6961  003558  0100               	movlb	0	; () banked
  6962  00355A  8160               	bsf	___fldiv@b& (0+255),0,b
  6963  00355C                     l1308:
  6964                           
  6965                           ; BSR set to: 0
  6966  00355C  0100               	movlb	0	; () banked
  6967  00355E  90D8               	bcf	status,0,c
  6968  003560  3773               	rlcf	___fldiv@grs& (0+255),f,b
  6969  003562  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  6970  003564  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  6971  003566  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  6972  003568  0100               	movlb	0	; () banked
  6973  00356A  0771               	decf	___fldiv@new_exp& (0+255),f,b
  6974  00356C  A0D8               	btfss	status,0,c
  6975  00356E  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  6976  003570                     l6337:
  6977                           
  6978                           ; BSR set to: 0
  6979  003570  0100               	movlb	0	; () banked
  6980  003572  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  6981  003574  D7E8               	goto	l6331
  6982                           
  6983                           ; BSR set to: 0
  6984                           
  6985                           ; BSR set to: 0
  6986  003576  0E00               	movlw	0
  6987  003578  0100               	movlb	0	; () banked
  6988  00357A  6F78               	movwf	___fldiv@aexp& (0+255),b
  6989                           
  6990                           ; BSR set to: 0
  6991  00357C  0100               	movlb	0	; () banked
  6992  00357E  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  6993  003580  D024               	goto	l1310
  6994                           
  6995                           ; BSR set to: 0
  6996  003582  0EFF               	movlw	255
  6997  003584  0100               	movlb	0	; () banked
  6998  003586  1573               	andwf	___fldiv@grs& (0+255),w,b
  6999  003588  0100               	movlb	0	; () banked
  7000  00358A  6F68               	movwf	??___fldiv& (0+255),b
  7001  00358C  0EFF               	movlw	255
  7002  00358E  0100               	movlb	0	; () banked
  7003  003590  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7004  003592  0100               	movlb	0	; () banked
  7005  003594  6F69               	movwf	(??___fldiv+1)& (0+255),b
  7006  003596  0EFF               	movlw	255
  7007  003598  0100               	movlb	0	; () banked
  7008  00359A  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7009  00359C  0100               	movlb	0	; () banked
  7010  00359E  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  7011  0035A0  0E7F               	movlw	127
  7012  0035A2  0100               	movlb	0	; () banked
  7013  0035A4  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7014  0035A6  0100               	movlb	0	; () banked
  7015  0035A8  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  7016  0035AA  0100               	movlb	0	; () banked
  7017  0035AC  5168               	movf	??___fldiv& (0+255),w,b
  7018  0035AE  0100               	movlb	0	; () banked
  7019  0035B0  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  7020  0035B2  0100               	movlb	0	; () banked
  7021  0035B4  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  7022  0035B6  0100               	movlb	0	; () banked
  7023  0035B8  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  7024  0035BA  A4D8               	btfss	status,2,c
  7025  0035BC  D003               	goto	l6347
  7026                           
  7027                           ; BSR set to: 0
  7028                           
  7029                           ; BSR set to: 0
  7030  0035BE  0100               	movlb	0	; () banked
  7031  0035C0  A160               	btfss	___fldiv@b& (0+255),0,b
  7032  0035C2  D003               	goto	l1310
  7033  0035C4                     l6347:
  7034                           
  7035                           ; BSR set to: 0
  7036  0035C4  0E01               	movlw	1
  7037  0035C6  0100               	movlb	0	; () banked
  7038  0035C8  6F78               	movwf	___fldiv@aexp& (0+255),b
  7039  0035CA                     l1310:
  7040                           
  7041                           ; BSR set to: 0
  7042  0035CA  0100               	movlb	0	; () banked
  7043  0035CC  5178               	movf	___fldiv@aexp& (0+255),w,b
  7044  0035CE  0100               	movlb	0	; () banked
  7045  0035D0  B4D8               	btfsc	status,2,c
  7046  0035D2  D023               	goto	l6357
  7047                           
  7048                           ; BSR set to: 0
  7049  0035D4  0E01               	movlw	1
  7050  0035D6  0100               	movlb	0	; () banked
  7051  0035D8  2760               	addwf	___fldiv@b& (0+255),f,b
  7052  0035DA  0E00               	movlw	0
  7053  0035DC  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  7054  0035DE  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  7055  0035E0  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  7056                           
  7057                           ; BSR set to: 0
  7058  0035E2  0100               	movlb	0	; () banked
  7059  0035E4  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  7060  0035E6  D019               	goto	l6357
  7061                           
  7062                           ; BSR set to: 0
  7063  0035E8  C060  F068         	movff	___fldiv@b,??___fldiv
  7064  0035EC  C061  F069         	movff	___fldiv@b+1,??___fldiv+1
  7065  0035F0  C062  F06A         	movff	___fldiv@b+2,??___fldiv+2
  7066  0035F4  C063  F06B         	movff	___fldiv@b+3,??___fldiv+3
  7067  0035F8  0100               	movlb	0	; () banked
  7068  0035FA  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  7069  0035FC  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  7070  0035FE  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  7071  003600  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  7072  003602  3368               	rrcf	??___fldiv& (0+255),f,b
  7073  003604  C068  F060         	movff	??___fldiv,___fldiv@b
  7074  003608  C069  F061         	movff	??___fldiv+1,___fldiv@b+1
  7075  00360C  C06A  F062         	movff	??___fldiv+2,___fldiv@b+2
  7076  003610  C06B  F063         	movff	??___fldiv+3,___fldiv@b+3
  7077                           
  7078                           ; BSR set to: 0
  7079  003614  0100               	movlb	0	; () banked
  7080  003616  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  7081  003618  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7082  00361A                     l6357:
  7083                           
  7084                           ; BSR set to: 0
  7085  00361A  0100               	movlb	0	; () banked
  7086  00361C  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7087  00361E  D014               	goto	l6361
  7088  003620  0100               	movlb	0	; () banked
  7089  003622  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7090  003624  E104               	bnz	u8370
  7091  003626  0100               	movlb	0	; () banked
  7092  003628  2971               	incf	___fldiv@new_exp& (0+255),w,b
  7093  00362A  A0D8               	btfss	status,0,c
  7094  00362C  D00D               	goto	l6361
  7095  00362E                     u8370:
  7096                           
  7097                           ; BSR set to: 0
  7098  00362E  0E00               	movlw	0
  7099  003630  0100               	movlb	0	; () banked
  7100  003632  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7101  003634  6971               	setf	___fldiv@new_exp& (0+255),b
  7102  003636  0E00               	movlw	0
  7103  003638  0100               	movlb	0	; () banked
  7104  00363A  6F60               	movwf	___fldiv@b& (0+255),b
  7105  00363C  0E00               	movlw	0
  7106  00363E  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7107  003640  0E00               	movlw	0
  7108  003642  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7109  003644  0E00               	movlw	0
  7110  003646  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7111  003648                     l6361:
  7112                           
  7113                           ; BSR set to: 0
  7114  003648  0100               	movlb	0	; () banked
  7115  00364A  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7116  00364C  D007               	goto	l6363
  7117  00364E  0100               	movlb	0	; () banked
  7118  003650  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7119  003652  E115               	bnz	l6365
  7120  003654  0100               	movlb	0	; () banked
  7121  003656  0571               	decf	___fldiv@new_exp& (0+255),w,b
  7122  003658  B0D8               	btfsc	status,0,c
  7123  00365A  D011               	goto	l6365
  7124  00365C                     l6363:
  7125                           
  7126                           ; BSR set to: 0
  7127  00365C  0E00               	movlw	0
  7128  00365E  0100               	movlb	0	; () banked
  7129  003660  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7130  003662  0E00               	movlw	0
  7131  003664  6F71               	movwf	___fldiv@new_exp& (0+255),b
  7132  003666  0E00               	movlw	0
  7133  003668  0100               	movlb	0	; () banked
  7134  00366A  6F60               	movwf	___fldiv@b& (0+255),b
  7135  00366C  0E00               	movlw	0
  7136  00366E  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7137  003670  0E00               	movlw	0
  7138  003672  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7139  003674  0E00               	movlw	0
  7140  003676  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7141  003678  0E00               	movlw	0
  7142  00367A  0100               	movlb	0	; () banked
  7143  00367C  6F6C               	movwf	___fldiv@sign& (0+255),b
  7144  00367E                     l6365:
  7145                           
  7146                           ; BSR set to: 0
  7147  00367E  C071  F077         	movff	___fldiv@new_exp,___fldiv@bexp
  7148                           
  7149                           ; BSR set to: 0
  7150  003682  0100               	movlb	0	; () banked
  7151  003684  A177               	btfss	___fldiv@bexp& (0+255),0,b
  7152  003686  D003               	goto	l6371
  7153                           
  7154                           ; BSR set to: 0
  7155  003688  0100               	movlb	0	; () banked
  7156  00368A  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  7157  00368C  D002               	goto	l6373
  7158  00368E                     l6371:
  7159                           
  7160                           ; BSR set to: 0
  7161  00368E  0100               	movlb	0	; () banked
  7162  003690  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  7163  003692                     l6373:
  7164                           
  7165                           ; BSR set to: 0
  7166  003692  0100               	movlb	0	; () banked
  7167  003694  90D8               	bcf	status,0,c
  7168  003696  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  7169  003698  0100               	movlb	0	; () banked
  7170  00369A  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7171                           
  7172                           ; BSR set to: 0
  7173  00369C  0100               	movlb	0	; () banked
  7174  00369E  516C               	movf	___fldiv@sign& (0+255),w,b
  7175  0036A0  0100               	movlb	0	; () banked
  7176  0036A2  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7177                           
  7178                           ; BSR set to: 0
  7179  0036A4  C060  F060         	movff	___fldiv@b,?___fldiv
  7180  0036A8  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  7181  0036AC  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  7182  0036B0  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  7183  0036B4  0012               	return	
  7184  0036B6                     __end_of___fldiv:
  7185                           	opt stack 0
  7186                           tblptru	equ	0xFF8
  7187                           tblptrh	equ	0xFF7
  7188                           tblptrl	equ	0xFF6
  7189                           tablat	equ	0xFF5
  7190                           prodh	equ	0xFF4
  7191                           prodl	equ	0xFF3
  7192                           postinc0	equ	0xFEE
  7193                           wreg	equ	0xFE8
  7194                           postinc2	equ	0xFDE
  7195                           postdec2	equ	0xFDD
  7196                           fsr2h	equ	0xFDA
  7197                           fsr2l	equ	0xFD9
  7198                           status	equ	0xFD8
  7199                           
  7200 ;; *************** function _abs *****************
  7201 ;; Defined at:
  7202 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;  a               2    0[BANK0 ] int 
  7205 ;; Auto vars:     Size  Location     Type
  7206 ;;		None
  7207 ;; Return value:  Size  Location     Type
  7208 ;;                  2    0[BANK0 ] int 
  7209 ;; Registers used:
  7210 ;;		wreg, status,2, status,0
  7211 ;; Tracked objects:
  7212 ;;		On entry : 0/0
  7213 ;;		On exit  : 0/0
  7214 ;;		Unchanged: 0/0
  7215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7216 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7218 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7219 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7220 ;;Total ram usage:        4 bytes
  7221 ;; Hardware stack levels used:    1
  7222 ;; Hardware stack levels required when called:    2
  7223 ;; This function calls:
  7224 ;;		Nothing
  7225 ;; This function is called by:
  7226 ;;		_rampe
  7227 ;; This function uses a non-reentrant model
  7228 ;;
  7229                           
  7230                           	psect	text18
  7231  0052A0                     __ptext18:
  7232                           	opt stack 0
  7233  0052A0                     _abs:
  7234                           	opt stack 27
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;incstack = 0
  7238  0052A0  0100               	movlb	0	; () banked
  7239  0052A2  AF61               	btfss	(abs@a+1)& (0+255),7,b
  7240  0052A4  D00E               	goto	l834
  7241                           
  7242                           ; BSR set to: 0
  7243  0052A6  C060  F062         	movff	abs@a,??_abs
  7244  0052AA  C061  F063         	movff	abs@a+1,??_abs+1
  7245  0052AE  0100               	movlb	0	; () banked
  7246  0052B0  1F62               	comf	??_abs& (0+255),f,b
  7247  0052B2  1F63               	comf	(??_abs+1)& (0+255),f,b
  7248  0052B4  4B62               	infsnz	??_abs& (0+255),f,b
  7249  0052B6  2B63               	incf	(??_abs+1)& (0+255),f,b
  7250  0052B8  C062  F060         	movff	??_abs,?_abs
  7251  0052BC  C063  F061         	movff	??_abs+1,?_abs+1
  7252  0052C0  0012               	return	
  7253  0052C2                     l834:
  7254                           
  7255                           ; BSR set to: 0
  7256  0052C2  C060  F060         	movff	abs@a,?_abs
  7257  0052C6  C061  F061         	movff	abs@a+1,?_abs+1
  7258                           
  7259                           ; BSR set to: 0
  7260  0052CA  0012               	return		;funcret
  7261  0052CC                     __end_of_abs:
  7262                           	opt stack 0
  7263                           tblptru	equ	0xFF8
  7264                           tblptrh	equ	0xFF7
  7265                           tblptrl	equ	0xFF6
  7266                           tablat	equ	0xFF5
  7267                           prodh	equ	0xFF4
  7268                           prodl	equ	0xFF3
  7269                           postinc0	equ	0xFEE
  7270                           wreg	equ	0xFE8
  7271                           postinc2	equ	0xFDE
  7272                           postdec2	equ	0xFDD
  7273                           fsr2h	equ	0xFDA
  7274                           fsr2l	equ	0xFD9
  7275                           status	equ	0xFD8
  7276                           
  7277 ;; *************** function ___lwdiv *****************
  7278 ;; Defined at:
  7279 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;  dividend        2    0[BANK0 ] unsigned int 
  7282 ;;  divisor         2    2[BANK0 ] unsigned int 
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;  quotient        2    5[BANK0 ] unsigned int 
  7285 ;;  counter         1    4[BANK0 ] unsigned char 
  7286 ;; Return value:  Size  Location     Type
  7287 ;;                  2    0[BANK0 ] unsigned int 
  7288 ;; Registers used:
  7289 ;;		wreg, status,2, status,0
  7290 ;; Tracked objects:
  7291 ;;		On entry : 0/0
  7292 ;;		On exit  : 0/0
  7293 ;;		Unchanged: 0/0
  7294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7295 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7296 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7298 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7299 ;;Total ram usage:        7 bytes
  7300 ;; Hardware stack levels used:    1
  7301 ;; Hardware stack levels required when called:    2
  7302 ;; This function calls:
  7303 ;;		Nothing
  7304 ;; This function is called by:
  7305 ;;		_rampe
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           	psect	text19
  7310  004FFE                     __ptext19:
  7311                           	opt stack 0
  7312  004FFE                     ___lwdiv:
  7313                           	opt stack 27
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;incstack = 0
  7317  004FFE  0E00               	movlw	0
  7318  005000  0100               	movlb	0	; () banked
  7319  005002  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  7320  005004  0E00               	movlw	0
  7321  005006  6F65               	movwf	___lwdiv@quotient& (0+255),b
  7322                           
  7323                           ; BSR set to: 0
  7324  005008  0100               	movlb	0	; () banked
  7325  00500A  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7326  00500C  0100               	movlb	0	; () banked
  7327  00500E  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  7328  005010  B4D8               	btfsc	status,2,c
  7329  005012  D02C               	goto	l1191
  7330                           
  7331                           ; BSR set to: 0
  7332  005014  0E01               	movlw	1
  7333  005016  0100               	movlb	0	; () banked
  7334  005018  6F64               	movwf	___lwdiv@counter& (0+255),b
  7335  00501A  D006               	goto	l7359
  7336  00501C                     l7357:
  7337                           
  7338                           ; BSR set to: 0
  7339  00501C  0100               	movlb	0	; () banked
  7340  00501E  90D8               	bcf	status,0,c
  7341  005020  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  7342  005022  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  7343  005024  0100               	movlb	0	; () banked
  7344  005026  2B64               	incf	___lwdiv@counter& (0+255),f,b
  7345  005028                     l7359:
  7346                           
  7347                           ; BSR set to: 0
  7348  005028  0100               	movlb	0	; () banked
  7349  00502A  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  7350  00502C  D7F7               	goto	l7357
  7351  00502E                     l7361:
  7352                           
  7353                           ; BSR set to: 0
  7354  00502E  0100               	movlb	0	; () banked
  7355  005030  90D8               	bcf	status,0,c
  7356  005032  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  7357  005034  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  7358                           
  7359                           ; BSR set to: 0
  7360  005036  0100               	movlb	0	; () banked
  7361  005038  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7362  00503A  0100               	movlb	0	; () banked
  7363  00503C  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  7364  00503E  0100               	movlb	0	; () banked
  7365  005040  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7366  005042  0100               	movlb	0	; () banked
  7367  005044  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  7368  005046  A0D8               	btfss	status,0,c
  7369  005048  D00A               	goto	l7369
  7370                           
  7371                           ; BSR set to: 0
  7372  00504A  0100               	movlb	0	; () banked
  7373  00504C  5162               	movf	___lwdiv@divisor& (0+255),w,b
  7374  00504E  0100               	movlb	0	; () banked
  7375  005050  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  7376  005052  0100               	movlb	0	; () banked
  7377  005054  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7378  005056  0100               	movlb	0	; () banked
  7379  005058  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7380                           
  7381                           ; BSR set to: 0
  7382  00505A  0100               	movlb	0	; () banked
  7383  00505C  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  7384  00505E                     l7369:
  7385                           
  7386                           ; BSR set to: 0
  7387  00505E  0100               	movlb	0	; () banked
  7388  005060  90D8               	bcf	status,0,c
  7389  005062  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7390  005064  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  7391                           
  7392                           ; BSR set to: 0
  7393  005066  0100               	movlb	0	; () banked
  7394  005068  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  7395  00506A  D7E1               	goto	l7361
  7396  00506C                     l1191:
  7397                           
  7398                           ; BSR set to: 0
  7399  00506C  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  7400  005070  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7401                           
  7402                           ; BSR set to: 0
  7403  005074  0012               	return		;funcret
  7404  005076                     __end_of___lwdiv:
  7405                           	opt stack 0
  7406                           tblptru	equ	0xFF8
  7407                           tblptrh	equ	0xFF7
  7408                           tblptrl	equ	0xFF6
  7409                           tablat	equ	0xFF5
  7410                           prodh	equ	0xFF4
  7411                           prodl	equ	0xFF3
  7412                           postinc0	equ	0xFEE
  7413                           wreg	equ	0xFE8
  7414                           postinc2	equ	0xFDE
  7415                           postdec2	equ	0xFDD
  7416                           fsr2h	equ	0xFDA
  7417                           fsr2l	equ	0xFD9
  7418                           status	equ	0xFD8
  7419                           
  7420 ;; *************** function _SetDCEPWM1 *****************
  7421 ;; Defined at:
  7422 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  7423 ;; Parameters:    Size  Location     Type
  7424 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  7427 ;; Return value:  Size  Location     Type
  7428 ;;		None               void
  7429 ;; Registers used:
  7430 ;;		wreg, status,2, status,0
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7436 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7437 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7438 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7439 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7440 ;;Total ram usage:        6 bytes
  7441 ;; Hardware stack levels used:    1
  7442 ;; Hardware stack levels required when called:    2
  7443 ;; This function calls:
  7444 ;;		Nothing
  7445 ;; This function is called by:
  7446 ;;		_main
  7447 ;;		_rampe
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           	psect	text20
  7452  0051BA                     __ptext20:
  7453                           	opt stack 0
  7454  0051BA                     _SetDCEPWM1:
  7455                           	opt stack 27
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;incstack = 0
  7459  0051BA  C060  F062         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  7460  0051BE  C061  F063         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  7461  0051C2  0E06               	movlw	6
  7462  0051C4                     u10095:
  7463  0051C4  90D8               	bcf	status,0,c
  7464  0051C6  0100               	movlb	0	; () banked
  7465  0051C8  3762               	rlcf	??_SetDCEPWM1& (0+255),f,b
  7466  0051CA  3763               	rlcf	(??_SetDCEPWM1+1)& (0+255),f,b
  7467  0051CC  2EE8               	decfsz	wreg,f,c
  7468  0051CE  D7FA               	goto	u10095
  7469  0051D0  C062  F064         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  7470  0051D4  C063  F065         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  7471                           
  7472                           ; BSR set to: 0
  7473  0051D8  C065  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  7474  0051DC  C064  F062         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  7475  0051E0  0100               	movlb	0	; () banked
  7476  0051E2  90D8               	bcf	status,0,c
  7477  0051E4  3362               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7478  0051E6  0100               	movlb	0	; () banked
  7479  0051E8  90D8               	bcf	status,0,c
  7480  0051EA  3362               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7481  0051EC  0E30               	movlw	48
  7482  0051EE  0100               	movlb	0	; () banked
  7483  0051F0  1762               	andwf	??_SetDCEPWM1& (0+255),f,b
  7484  0051F2  50BA               	movf	4026,w,c	;volatile
  7485  0051F4  0BCF               	andlw	207
  7486  0051F6  0100               	movlb	0	; () banked
  7487  0051F8  1162               	iorwf	??_SetDCEPWM1& (0+255),w,b
  7488  0051FA  6EBA               	movwf	4026,c	;volatile
  7489                           
  7490                           ; BSR set to: 0
  7491  0051FC  0012               	return		;funcret
  7492  0051FE                     __end_of_SetDCEPWM1:
  7493                           	opt stack 0
  7494                           tblptru	equ	0xFF8
  7495                           tblptrh	equ	0xFF7
  7496                           tblptrl	equ	0xFF6
  7497                           tablat	equ	0xFF5
  7498                           prodh	equ	0xFF4
  7499                           prodl	equ	0xFF3
  7500                           postinc0	equ	0xFEE
  7501                           wreg	equ	0xFE8
  7502                           postinc2	equ	0xFDE
  7503                           postdec2	equ	0xFDD
  7504                           fsr2h	equ	0xFDA
  7505                           fsr2l	equ	0xFD9
  7506                           status	equ	0xFD8
  7507                           
  7508 ;; *************** function _configurazione_iniziale *****************
  7509 ;; Defined at:
  7510 ;;		line 301 in file "motore.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;		None
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;		None
  7515 ;; Return value:  Size  Location     Type
  7516 ;;		None               void
  7517 ;; Registers used:
  7518 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7528 ;;Total ram usage:        0 bytes
  7529 ;; Hardware stack levels used:    1
  7530 ;; Hardware stack levels required when called:    4
  7531 ;; This function calls:
  7532 ;;		_CANInitialize
  7533 ;;		_SetOutputEPWM1
  7534 ;;		_delay_ms
  7535 ;; This function is called by:
  7536 ;;		_main
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           	psect	text21
  7541  004E32                     __ptext21:
  7542                           	opt stack 0
  7543  004E32                     _configurazione_iniziale:
  7544                           	opt stack 26
  7545                           
  7546                           ;motore.c: 304: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;incstack = 0
  7550  004E32  0E06               	movlw	6
  7551  004E34  0100               	movlb	0	; () banked
  7552  004E36  6F6E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  7553  004E38  0E05               	movlw	5
  7554  004E3A  0100               	movlb	0	; () banked
  7555  004E3C  6F6F               	movwf	CANInitialize@phaseSeg2& (0+255),b
  7556  004E3E  0E01               	movlw	1
  7557  004E40  0100               	movlb	0	; () banked
  7558  004E42  6F70               	movwf	CANInitialize@SJW& (0+255),b
  7559  004E44  0E03               	movlw	3
  7560  004E46  0100               	movlb	0	; () banked
  7561  004E48  6F71               	movwf	CANInitialize@BRP& (0+255),b
  7562  004E4A  0E9D               	movlw	157
  7563  004E4C  0100               	movlb	0	; () banked
  7564  004E4E  6F72               	movwf	CANInitialize@flags& (0+255),b
  7565  004E50  0E04               	movlw	4
  7566  004E52  ECB9  F021         	call	_CANInitialize
  7567                           
  7568                           ;motore.c: 305: RCONbits.IPEN = 1;
  7569  004E56  8ED0               	bsf	4048,7,c	;volatile
  7570                           
  7571                           ;motore.c: 306: INTCONbits.INT0IF = 0;
  7572  004E58  92F2               	bcf	intcon,1,c	;volatile
  7573                           
  7574                           ;motore.c: 307: PIR3bits.RXB1IF = 0;
  7575  004E5A  92A4               	bcf	4004,1,c	;volatile
  7576                           
  7577                           ;motore.c: 308: PIR3bits.RXB0IF = 0;
  7578  004E5C  90A4               	bcf	4004,0,c	;volatile
  7579                           
  7580                           ;motore.c: 310: IPR3bits.RXB1IP = 0;
  7581  004E5E  92A5               	bcf	4005,1,c	;volatile
  7582                           
  7583                           ;motore.c: 311: IPR3bits.RXB0IP = 0;
  7584  004E60  90A5               	bcf	4005,0,c	;volatile
  7585                           
  7586                           ;motore.c: 312: INTCONbits.GIEH = 1;
  7587  004E62  8EF2               	bsf	intcon,7,c	;volatile
  7588                           
  7589                           ;motore.c: 313: INTCONbits.GIEL = 1;
  7590  004E64  8CF2               	bsf	intcon,6,c	;volatile
  7591                           
  7592                           ;motore.c: 316: T3CON = 0x01;
  7593  004E66  0E01               	movlw	1
  7594  004E68  6EB1               	movwf	4017,c	;volatile
  7595                           
  7596                           ;motore.c: 317: PIR2bits.TMR3IF = 0;
  7597  004E6A  92A1               	bcf	4001,1,c	;volatile
  7598                           
  7599                           ;motore.c: 318: IPR2bits.TMR3IP = 0;
  7600  004E6C  92A2               	bcf	4002,1,c	;volatile
  7601                           
  7602                           ;motore.c: 319: TMR3H = 0x63;
  7603  004E6E  0E63               	movlw	99
  7604  004E70  6EB3               	movwf	4019,c	;volatile
  7605                           
  7606                           ;motore.c: 320: TMR3L = 0xC0;
  7607  004E72  0EC0               	movlw	192
  7608  004E74  6EB2               	movwf	4018,c	;volatile
  7609                           
  7610                           ;motore.c: 325: ADCON0bits.ADON = 1;
  7611  004E76  80C2               	bsf	4034,0,c	;volatile
  7612                           
  7613                           ;motore.c: 326: ADCON0bits.CHS0 = 0;
  7614  004E78  94C2               	bcf	4034,2,c	;volatile
  7615                           
  7616                           ;motore.c: 327: ADCON0bits.CHS1 = 0;
  7617  004E7A  96C2               	bcf	4034,3,c	;volatile
  7618                           
  7619                           ;motore.c: 328: ADCON0bits.CHS2 = 0;
  7620  004E7C  98C2               	bcf	4034,4,c	;volatile
  7621                           
  7622                           ;motore.c: 329: ADCON0bits.CHS3 = 0;
  7623  004E7E  9AC2               	bcf	4034,5,c	;volatile
  7624                           
  7625                           ;motore.c: 330: ADCON1bits.PCFG0 = 0;
  7626  004E80  90C1               	bcf	4033,0,c	;volatile
  7627                           
  7628                           ;motore.c: 331: ADCON1bits.PCFG1 = 1;
  7629  004E82  82C1               	bsf	4033,1,c	;volatile
  7630                           
  7631                           ;motore.c: 332: ADCON1bits.PCFG2 = 1;
  7632  004E84  84C1               	bsf	4033,2,c	;volatile
  7633                           
  7634                           ;motore.c: 333: ADCON1bits.PCFG3 = 1;
  7635  004E86  86C1               	bsf	4033,3,c	;volatile
  7636                           
  7637                           ;motore.c: 334: ADCON1bits.VCFG0 = 0;
  7638  004E88  98C1               	bcf	4033,4,c	;volatile
  7639                           
  7640                           ;motore.c: 335: ADCON1bits.VCFG1 = 0;
  7641  004E8A  9AC1               	bcf	4033,5,c	;volatile
  7642                           
  7643                           ;motore.c: 336: ADCON2bits.ADCS0 = 1;
  7644  004E8C  80C0               	bsf	4032,0,c	;volatile
  7645                           
  7646                           ;motore.c: 337: ADCON2bits.ADCS1 = 0;
  7647  004E8E  92C0               	bcf	4032,1,c	;volatile
  7648                           
  7649                           ;motore.c: 338: ADCON2bits.ADCS2 = 1;
  7650  004E90  84C0               	bsf	4032,2,c	;volatile
  7651                           
  7652                           ;motore.c: 339: ADCON2bits.ACQT0 = 0;
  7653  004E92  96C0               	bcf	4032,3,c	;volatile
  7654                           
  7655                           ;motore.c: 340: ADCON2bits.ACQT1 = 1;
  7656  004E94  88C0               	bsf	4032,4,c	;volatile
  7657                           
  7658                           ;motore.c: 341: ADCON2bits.ACQT2 = 1;
  7659  004E96  8AC0               	bsf	4032,5,c	;volatile
  7660                           
  7661                           ;motore.c: 342: ADCON2bits.ADFM = 0;
  7662  004E98  9EC0               	bcf	4032,7,c	;volatile
  7663                           
  7664                           ;motore.c: 345: PIE3bits.RXB1IE = 1;
  7665  004E9A  82A3               	bsf	4003,1,c	;volatile
  7666                           
  7667                           ;motore.c: 346: PIE3bits.RXB0IE = 1;
  7668  004E9C  80A3               	bsf	4003,0,c	;volatile
  7669                           
  7670                           ;motore.c: 347: PIE2bits.TMR3IE = 1;
  7671  004E9E  82A0               	bsf	4000,1,c	;volatile
  7672                           
  7673                           ;motore.c: 349: LATA = 0x00;
  7674  004EA0  0E00               	movlw	0
  7675  004EA2  6E89               	movwf	3977,c	;volatile
  7676                           
  7677                           ;motore.c: 350: TRISA = 0b01111101;
  7678  004EA4  0E7D               	movlw	125
  7679  004EA6  6E92               	movwf	3986,c	;volatile
  7680                           
  7681                           ;motore.c: 352: LATB = 0x00;
  7682  004EA8  0E00               	movlw	0
  7683  004EAA  6E8A               	movwf	3978,c	;volatile
  7684                           
  7685                           ;motore.c: 353: TRISB = 0b11111011;
  7686  004EAC  0EFB               	movlw	251
  7687  004EAE  6E93               	movwf	3987,c	;volatile
  7688                           
  7689                           ;motore.c: 355: LATC = 0x00;
  7690  004EB0  0E00               	movlw	0
  7691  004EB2  6E8B               	movwf	3979,c	;volatile
  7692                           
  7693                           ;motore.c: 356: TRISC = 0x00;
  7694  004EB4  0E00               	movlw	0
  7695  004EB6  6E94               	movwf	3988,c	;volatile
  7696                           
  7697                           ;motore.c: 358: LATD = 0x00;
  7698  004EB8  0E00               	movlw	0
  7699  004EBA  6E8C               	movwf	3980,c	;volatile
  7700                           
  7701                           ;motore.c: 359: TRISD = 0x00;
  7702  004EBC  0E00               	movlw	0
  7703  004EBE  6E95               	movwf	3989,c	;volatile
  7704                           
  7705                           ;motore.c: 361: LATE = 0x00;
  7706  004EC0  0E00               	movlw	0
  7707  004EC2  6E8D               	movwf	3981,c	;volatile
  7708                           
  7709                           ;motore.c: 362: TRISE = 0xFF;
  7710  004EC4  6896               	setf	3990,c	;volatile
  7711                           
  7712                           ;motore.c: 363: delay_ms(2);
  7713  004EC6  0E00               	movlw	0
  7714  004EC8  0100               	movlb	0	; () banked
  7715  004ECA  6F67               	movwf	(delay_ms@value_ms+1)& (0+255),b
  7716  004ECC  0E02               	movlw	2
  7717  004ECE  6F66               	movwf	delay_ms@value_ms& (0+255),b
  7718  004ED0  EC36  F029         	call	_delay_ms	;wreg free
  7719                           
  7720                           ;motore.c: 364: SetOutputEPWM1(0b01111111, 0b11111100);
  7721  004ED4  0EFC               	movlw	252
  7722  004ED6  0100               	movlb	0	; () banked
  7723  004ED8  6F60               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  7724  004EDA  0E7F               	movlw	127
  7725  004EDC  EC69  F028         	call	_SetOutputEPWM1
  7726  004EE0  0012               	return		;funcret
  7727  004EE2                     __end_of_configurazione_iniziale:
  7728                           	opt stack 0
  7729                           tblptru	equ	0xFF8
  7730                           tblptrh	equ	0xFF7
  7731                           tblptrl	equ	0xFF6
  7732                           tablat	equ	0xFF5
  7733                           prodh	equ	0xFF4
  7734                           prodl	equ	0xFF3
  7735                           intcon	equ	0xFF2
  7736                           postinc0	equ	0xFEE
  7737                           wreg	equ	0xFE8
  7738                           postinc2	equ	0xFDE
  7739                           postdec2	equ	0xFDD
  7740                           fsr2h	equ	0xFDA
  7741                           fsr2l	equ	0xFD9
  7742                           status	equ	0xFD8
  7743                           
  7744 ;; *************** function _delay_ms *****************
  7745 ;; Defined at:
  7746 ;;		line 61 in file "delay.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  value_ms        2    6[BANK0 ] unsigned int 
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;		None
  7751 ;; Return value:  Size  Location     Type
  7752 ;;		None               void
  7753 ;; Registers used:
  7754 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7755 ;; Tracked objects:
  7756 ;;		On entry : 0/0
  7757 ;;		On exit  : 0/0
  7758 ;;		Unchanged: 0/0
  7759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7760 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7763 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7764 ;;Total ram usage:        2 bytes
  7765 ;; Hardware stack levels used:    1
  7766 ;; Hardware stack levels required when called:    3
  7767 ;; This function calls:
  7768 ;;		___wmul
  7769 ;; This function is called by:
  7770 ;;		_main
  7771 ;;		_configurazione_iniziale
  7772 ;;		_delay_s
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           	psect	text22
  7777  00526C                     __ptext22:
  7778                           	opt stack 0
  7779  00526C                     _delay_ms:
  7780                           	opt stack 27
  7781                           
  7782                           ;delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  7783                           
  7784                           ;incstack = 0
  7785  00526C  C041  F060         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  7786  005270  0100               	movlb	0	; () banked
  7787  005272  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
  7788  005274  C066  F062         	movff	delay_ms@value_ms,___wmul@multiplicand
  7789  005278  C067  F063         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  7790  00527C  EC1B  F029         	call	___wmul	;wreg free
  7791  005280  C060  F02F         	movff	?___wmul,_clock_counter_reference	;volatile
  7792  005284  C061  F030         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  7793                           
  7794                           ;delay.c: 75: while (clock_counter_reference) {
  7795  005288  D006               	goto	l575
  7796  00528A                     l7243:
  7797                           
  7798                           ;delay.c: 85: _delay(240);
  7799  00528A  0E50               	movlw	80
  7800  00528C                     u10667:
  7801  00528C  2EE8               	decfsz	wreg,f,c
  7802  00528E  D7FE               	goto	u10667
  7803                           
  7804                           ;delay.c: 88: clock_counter_reference--;
  7805  005290  062F               	decf	_clock_counter_reference,f,c	;volatile
  7806  005292  A0D8               	btfss	status,0,c
  7807  005294  0630               	decf	_clock_counter_reference+1,f,c	;volatile
  7808  005296                     l575:
  7809  005296  502F               	movf	_clock_counter_reference,w,c	;volatile
  7810  005298  1030               	iorwf	_clock_counter_reference+1,w,c	;volatile
  7811  00529A  B4D8               	btfsc	status,2,c
  7812  00529C  0012               	return	
  7813  00529E  D7F5               	goto	l7243
  7814  0052A0                     __end_of_delay_ms:
  7815                           	opt stack 0
  7816                           tblptru	equ	0xFF8
  7817                           tblptrh	equ	0xFF7
  7818                           tblptrl	equ	0xFF6
  7819                           tablat	equ	0xFF5
  7820                           prodh	equ	0xFF4
  7821                           prodl	equ	0xFF3
  7822                           intcon	equ	0xFF2
  7823                           postinc0	equ	0xFEE
  7824                           wreg	equ	0xFE8
  7825                           postinc2	equ	0xFDE
  7826                           postdec2	equ	0xFDD
  7827                           fsr2h	equ	0xFDA
  7828                           fsr2l	equ	0xFD9
  7829                           status	equ	0xFD8
  7830                           
  7831 ;; *************** function _SetOutputEPWM1 *****************
  7832 ;; Defined at:
  7833 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;  outputconfig    1    wreg     unsigned char 
  7836 ;;  outputmode      1    0[BANK0 ] unsigned char 
  7837 ;; Auto vars:     Size  Location     Type
  7838 ;;  outputconfig    1    1[BANK0 ] unsigned char 
  7839 ;; Return value:  Size  Location     Type
  7840 ;;		None               void
  7841 ;; Registers used:
  7842 ;;		wreg, status,2, status,0
  7843 ;; Tracked objects:
  7844 ;;		On entry : 0/0
  7845 ;;		On exit  : 0/0
  7846 ;;		Unchanged: 0/0
  7847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7848 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7849 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7851 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7852 ;;Total ram usage:        2 bytes
  7853 ;; Hardware stack levels used:    1
  7854 ;; Hardware stack levels required when called:    2
  7855 ;; This function calls:
  7856 ;;		Nothing
  7857 ;; This function is called by:
  7858 ;;		_main
  7859 ;;		_rampe
  7860 ;;		_configurazione_iniziale
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           	psect	text23
  7865  0050D2                     __ptext23:
  7866                           	opt stack 0
  7867  0050D2                     _SetOutputEPWM1:
  7868                           	opt stack 27
  7869                           
  7870                           ;incstack = 0
  7871                           ;SetOutputEPWM1@outputconfig stored from wreg
  7872  0050D2  0100               	movlb	0	; () banked
  7873  0050D4  6F61               	movwf	SetOutputEPWM1@outputconfig& (0+255),b
  7874  0050D6  50BA               	movf	4026,w,c	;volatile
  7875  0050D8  09C0               	iorlw	192
  7876  0050DA  0100               	movlb	0	; () banked
  7877  0050DC  1561               	andwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7878  0050DE  6EBA               	movwf	4026,c	;volatile
  7879  0050E0  50BA               	movf	4026,w,c	;volatile
  7880  0050E2  090F               	iorlw	15
  7881  0050E4  0100               	movlb	0	; () banked
  7882  0050E6  1560               	andwf	SetOutputEPWM1@outputmode& (0+255),w,b
  7883  0050E8  6EBA               	movwf	4026,c	;volatile
  7884  0050EA  0E3F               	movlw	63
  7885  0050EC  0100               	movlb	0	; () banked
  7886  0050EE  1961               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7887  0050F0  A4D8               	btfss	status,2,c
  7888  0050F2  D002               	goto	l7251
  7889                           
  7890                           ; BSR set to: 0
  7891  0050F4  9895               	bcf	3989,4,c	;volatile
  7892  0050F6  0012               	return	
  7893  0050F8                     l7251:
  7894                           
  7895                           ; BSR set to: 0
  7896  0050F8  0EBF               	movlw	191
  7897  0050FA  0100               	movlb	0	; () banked
  7898  0050FC  1961               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7899  0050FE  A4D8               	btfss	status,2,c
  7900  005100  D003               	goto	l7255
  7901                           
  7902                           ; BSR set to: 0
  7903  005102  9895               	bcf	3989,4,c	;volatile
  7904  005104  9A95               	bcf	3989,5,c	;volatile
  7905  005106  0012               	return	
  7906  005108                     l7255:
  7907                           
  7908                           ; BSR set to: 0
  7909  005108  0E7F               	movlw	127
  7910  00510A  0100               	movlb	0	; () banked
  7911  00510C  1961               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7912  00510E  B4D8               	btfsc	status,2,c
  7913  005110  D004               	goto	l768
  7914                           
  7915                           ; BSR set to: 0
  7916  005112  0100               	movlb	0	; () banked
  7917  005114  2961               	incf	SetOutputEPWM1@outputconfig& (0+255),w,b
  7918  005116  A4D8               	btfss	status,2,c
  7919  005118  0012               	return	
  7920  00511A                     l768:
  7921                           
  7922                           ; BSR set to: 0
  7923  00511A  9895               	bcf	3989,4,c	;volatile
  7924  00511C  9A95               	bcf	3989,5,c	;volatile
  7925  00511E  9C95               	bcf	3989,6,c	;volatile
  7926  005120  9E95               	bcf	3989,7,c	;volatile
  7927                           
  7928                           ; BSR set to: 0
  7929                           
  7930                           ; BSR set to: 0
  7931  005122  0012               	return	
  7932  005124                     __end_of_SetOutputEPWM1:
  7933                           	opt stack 0
  7934                           tblptru	equ	0xFF8
  7935                           tblptrh	equ	0xFF7
  7936                           tblptrl	equ	0xFF6
  7937                           tablat	equ	0xFF5
  7938                           prodh	equ	0xFF4
  7939                           prodl	equ	0xFF3
  7940                           intcon	equ	0xFF2
  7941                           postinc0	equ	0xFEE
  7942                           wreg	equ	0xFE8
  7943                           postinc2	equ	0xFDE
  7944                           postdec2	equ	0xFDD
  7945                           fsr2h	equ	0xFDA
  7946                           fsr2l	equ	0xFD9
  7947                           status	equ	0xFD8
  7948                           
  7949 ;; *************** function _CANInitialize *****************
  7950 ;; Defined at:
  7951 ;;		line 218 in file "CANlib.h"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;  propSeg         1    wreg     unsigned char 
  7954 ;;  phaseSeg1       1   14[BANK0 ] unsigned char 
  7955 ;;  phaseSeg2       1   15[BANK0 ] unsigned char 
  7956 ;;  SJW             1   16[BANK0 ] unsigned char 
  7957 ;;  BRP             1   17[BANK0 ] unsigned char 
  7958 ;;  flags           1   18[BANK0 ] enum E16887
  7959 ;; Auto vars:     Size  Location     Type
  7960 ;;  propSeg         1   23[BANK0 ] unsigned char 
  7961 ;;  FilterConfig    1   25[BANK0 ] unsigned char 
  7962 ;;  FilterConfig    1   24[BANK0 ] unsigned char 
  7963 ;; Return value:  Size  Location     Type
  7964 ;;		None               void
  7965 ;; Registers used:
  7966 ;;		wreg, status,2, status,0, cstack
  7967 ;; Tracked objects:
  7968 ;;		On entry : 0/0
  7969 ;;		On exit  : 0/0
  7970 ;;		Unchanged: 0/0
  7971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7972 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7973 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7974 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7975 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;Total ram usage:       12 bytes
  7977 ;; Hardware stack levels used:    1
  7978 ;; Hardware stack levels required when called:    3
  7979 ;; This function calls:
  7980 ;;		_CANOperationMode
  7981 ;;		_CANSetFilter
  7982 ;;		_CANSetMask
  7983 ;; This function is called by:
  7984 ;;		_configurazione_iniziale
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988                           	psect	text24
  7989  004372                     __ptext24:
  7990                           	opt stack 0
  7991  004372                     _CANInitialize:
  7992                           	opt stack 26
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;incstack = 0
  7996                           ;CANInitialize@propSeg stored from wreg
  7997  004372  0100               	movlb	0	; () banked
  7998  004374  6F77               	movwf	CANInitialize@propSeg& (0+255),b
  7999                           
  8000                           ;CANlib.h: 220: BYTE FilterConfig1;
  8001                           ;CANlib.h: 221: BYTE FilterConfig2;
  8002                           ;CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  8003  004376  0E80               	movlw	128
  8004  004378  EC89  F029         	call	_CANOperationMode
  8005                           
  8006                           ;CANlib.h: 225: BRGCON1 = 0x00;
  8007  00437C  0E00               	movlw	0
  8008  00437E  6E70               	movwf	3952,c	;volatile
  8009                           
  8010                           ;CANlib.h: 226: BRGCON2 = 0x00;
  8011  004380  0E00               	movlw	0
  8012  004382  6E71               	movwf	3953,c	;volatile
  8013                           
  8014                           ;CANlib.h: 227: BRGCON3 = 0x00;
  8015  004384  0E00               	movlw	0
  8016  004386  6E72               	movwf	3954,c	;volatile
  8017                           
  8018                           ;CANlib.h: 229: SJW= SJW << 6;
  8019  004388  0100               	movlb	0	; () banked
  8020  00438A  4170               	rrncf	CANInitialize@SJW& (0+255),w,b
  8021  00438C  42E8               	rrncf	wreg,f,c
  8022  00438E  0BC0               	andlw	192
  8023  004390  0100               	movlb	0	; () banked
  8024  004392  6F70               	movwf	CANInitialize@SJW& (0+255),b
  8025                           
  8026                           ; BSR set to: 0
  8027                           ;CANlib.h: 230: BRGCON1 |= SJW;
  8028  004394  0100               	movlb	0	; () banked
  8029  004396  5170               	movf	CANInitialize@SJW& (0+255),w,b
  8030  004398  1270               	iorwf	3952,f,c	;volatile
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;CANlib.h: 231: BRGCON1 |= BRP;
  8034  00439A  0100               	movlb	0	; () banked
  8035  00439C  5171               	movf	CANInitialize@BRP& (0+255),w,b
  8036  00439E  1270               	iorwf	3952,f,c	;volatile
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;CANlib.h: 233: BRGCON2 |= propSeg;
  8040  0043A0  0100               	movlb	0	; () banked
  8041  0043A2  5177               	movf	CANInitialize@propSeg& (0+255),w,b
  8042  0043A4  1271               	iorwf	3953,f,c	;volatile
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  8046  0043A6  0100               	movlb	0	; () banked
  8047  0043A8  396E               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  8048  0043AA  42E8               	rrncf	wreg,f,c
  8049  0043AC  0BF8               	andlw	248
  8050  0043AE  0100               	movlb	0	; () banked
  8051  0043B0  6F6E               	movwf	CANInitialize@phaseSeg1& (0+255),b
  8052                           
  8053                           ; BSR set to: 0
  8054                           ;CANlib.h: 235: BRGCON2 |= phaseSeg1;
  8055  0043B2  0100               	movlb	0	; () banked
  8056  0043B4  516E               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  8057  0043B6  1271               	iorwf	3953,f,c	;volatile
  8058                           
  8059                           ; BSR set to: 0
  8060                           ;CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  8061  0043B8  0100               	movlb	0	; () banked
  8062  0043BA  A572               	btfss	CANInitialize@flags& (0+255),2,b
  8063                           
  8064                           ; BSR set to: 0
  8065                           ;CANlib.h: 238: BRGCON2bits.SAM= 1;
  8066  0043BC  8C71               	bsf	3953,6,c	;volatile
  8067                           
  8068                           ; BSR set to: 0
  8069                           ;CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  8070  0043BE  0100               	movlb	0	; () banked
  8071  0043C0  B172               	btfsc	CANInitialize@flags& (0+255),0,b
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  8075  0043C2  8E71               	bsf	3953,7,c	;volatile
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;CANlib.h: 243: BRGCON3 |= phaseSeg2;
  8079                           
  8080                           ; BSR set to: 0
  8081  0043C4  0100               	movlb	0	; () banked
  8082  0043C6  516F               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  8083  0043C8  1272               	iorwf	3954,f,c	;volatile
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  8087  0043CA  0100               	movlb	0	; () banked
  8088  0043CC  B372               	btfsc	CANInitialize@flags& (0+255),1,b
  8089                           
  8090                           ; BSR set to: 0
  8091                           ;CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  8092  0043CE  8C72               	bsf	3954,6,c	;volatile
  8093                           
  8094                           ; BSR set to: 0
  8095                           ;CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  8096                           
  8097                           ; BSR set to: 0
  8098  0043D0  0100               	movlb	0	; () banked
  8099  0043D2  5172               	movf	CANInitialize@flags& (0+255),w,b
  8100  0043D4  0B60               	andlw	96
  8101  0043D6  6E60               	movwf	3936,c	;volatile
  8102                           
  8103                           ;CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON )
  8104  0043D8  0100               	movlb	0	; () banked
  8105  0043DA  5172               	movf	CANInitialize@flags& (0+255),w,b
  8106  0043DC  0B10               	andlw	16
  8107  0043DE  0AFF               	xorlw	255
  8108  0043E0  B4D8               	btfsc	status,2,c
  8109                           
  8110                           ; BSR set to: 0
  8111                           ;CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  8112  0043E2  8460               	bsf	3936,2,c	;volatile
  8113                           
  8114                           ; BSR set to: 0
  8115                           ;CANlib.h: 255: RXB1CON = RXB0CON;
  8116  0043E4  CF60 FF50          	movff	3936,3920	;volatile
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  8120  0043E8  0E00               	movlw	0
  8121  0043EA  0100               	movlb	0	; () banked
  8122  0043EC  6F60               	movwf	CANSetMask@mask& (0+255),b
  8123  0043EE  0E00               	movlw	0
  8124  0043F0  6F61               	movwf	(CANSetMask@mask+1)& (0+255),b
  8125  0043F2  0E00               	movlw	0
  8126  0043F4  6F62               	movwf	(CANSetMask@mask+2)& (0+255),b
  8127  0043F6  0E00               	movlw	0
  8128  0043F8  6F63               	movwf	(CANSetMask@mask+3)& (0+255),b
  8129  0043FA  0EF7               	movlw	247
  8130  0043FC  0100               	movlb	0	; () banked
  8131  0043FE  6F64               	movwf	CANSetMask@type& (0+255),b
  8132  004400  0E01               	movlw	1
  8133  004402  EC5B  F01B         	call	_CANSetMask
  8134                           
  8135                           ;CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  8136  004406  0E00               	movlw	0
  8137  004408  0100               	movlb	0	; () banked
  8138  00440A  6F60               	movwf	CANSetMask@mask& (0+255),b
  8139  00440C  0E00               	movlw	0
  8140  00440E  6F61               	movwf	(CANSetMask@mask+1)& (0+255),b
  8141  004410  0E00               	movlw	0
  8142  004412  6F62               	movwf	(CANSetMask@mask+2)& (0+255),b
  8143  004414  0E00               	movlw	0
  8144  004416  6F63               	movwf	(CANSetMask@mask+3)& (0+255),b
  8145  004418  0EF7               	movlw	247
  8146  00441A  0100               	movlb	0	; () banked
  8147  00441C  6F64               	movwf	CANSetMask@type& (0+255),b
  8148  00441E  0E02               	movlw	2
  8149  004420  EC5B  F01B         	call	_CANSetMask
  8150                           
  8151                           ;CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  8152  004424  D00F               	goto	l6991
  8153  004426                     l6985:
  8154                           
  8155                           ;CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  8156  004426  0EF7               	movlw	247
  8157  004428  0100               	movlb	0	; () banked
  8158  00442A  6F78               	movwf	CANInitialize@FilterConfig1& (0+255),b
  8159  00442C  D007               	goto	l6987
  8160  00442E                     l364:
  8161                           
  8162                           ; BSR set to: 0
  8163                           ;CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  8164  00442E  0100               	movlb	0	; () banked
  8165  004430  6978               	setf	CANInitialize@FilterConfig1& (0+255),b
  8166                           
  8167                           ;CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  8168  004432  0100               	movlb	0	; () banked
  8169  004434  6979               	setf	CANInitialize@FilterConfig2& (0+255),b
  8170                           
  8171                           ;CANlib.h: 273: break;
  8172  004436  D028               	goto	l6993
  8173  004438                     l365:
  8174                           
  8175                           ; BSR set to: 0
  8176                           ;CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  8177  004438  0100               	movlb	0	; () banked
  8178  00443A  6978               	setf	CANInitialize@FilterConfig1& (0+255),b
  8179  00443C                     l6987:
  8180                           
  8181                           ; BSR set to: 0
  8182                           ;CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  8183  00443C  0EF7               	movlw	247
  8184  00443E  0100               	movlb	0	; () banked
  8185  004440  6F79               	movwf	CANInitialize@FilterConfig2& (0+255),b
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;CANlib.h: 278: }
  8189                           
  8190                           ;CANlib.h: 277: break;
  8191  004442  D022               	goto	l6993
  8192  004444                     l6991:
  8193  004444  0E9F               	movlw	159
  8194  004446  0100               	movlb	0	; () banked
  8195  004448  6F73               	movwf	??_CANInitialize& (0+255),b
  8196  00444A  0EFF               	movlw	255
  8197  00444C  0100               	movlb	0	; () banked
  8198  00444E  6F74               	movwf	(??_CANInitialize+1)& (0+255),b
  8199  004450  0100               	movlb	0	; () banked
  8200  004452  5172               	movf	CANInitialize@flags& (0+255),w,b
  8201  004454  0B60               	andlw	96
  8202  004456  0100               	movlb	0	; () banked
  8203  004458  6F75               	movwf	(??_CANInitialize+2)& (0+255),b
  8204  00445A  6B76               	clrf	(??_CANInitialize+3)& (0+255),b
  8205  00445C  0100               	movlb	0	; () banked
  8206  00445E  5173               	movf	??_CANInitialize& (0+255),w,b
  8207  004460  0100               	movlb	0	; () banked
  8208  004462  1375               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  8209  004464  0100               	movlb	0	; () banked
  8210  004466  5174               	movf	(??_CANInitialize+1)& (0+255),w,b
  8211  004468  0100               	movlb	0	; () banked
  8212  00446A  1376               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  8213                           
  8214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8215                           ; Switch size 1, requested type "space"
  8216                           ; Number of cases is 1, Range of values is 0 to 0
  8217                           ; switch strategies available:
  8218                           ; Name         Instructions Cycles
  8219                           ; simple_byte            4     3 (average)
  8220                           ;	Chosen strategy is simple_byte
  8221  00446C  0100               	movlb	0	; () banked
  8222  00446E  5176               	movf	(??_CANInitialize+3)& (0+255),w,b
  8223  004470  0A00               	xorlw	0	; case 0
  8224  004472  A4D8               	btfss	status,2,c
  8225  004474  D7E1               	goto	l365
  8226                           
  8227                           ; BSR set to: 0
  8228                           ; Switch size 1, requested type "space"
  8229                           ; Number of cases is 2, Range of values is 191 to 223
  8230                           ; switch strategies available:
  8231                           ; Name         Instructions Cycles
  8232                           ; simple_byte            7     4 (average)
  8233                           ;	Chosen strategy is simple_byte
  8234  004476  0100               	movlb	0	; () banked
  8235  004478  5175               	movf	(??_CANInitialize+2)& (0+255),w,b
  8236  00447A  0ABF               	xorlw	191	; case 191
  8237  00447C  B4D8               	btfsc	status,2,c
  8238  00447E  D7D7               	goto	l364
  8239  004480  0A60               	xorlw	96	; case 223
  8240  004482  B4D8               	btfsc	status,2,c
  8241  004484  D7D0               	goto	l6985
  8242  004486  D7D8               	goto	l365
  8243  004488                     l6993:
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  8247  004488  0E00               	movlw	0
  8248  00448A  0100               	movlb	0	; () banked
  8249  00448C  6F60               	movwf	CANSetFilter@filter& (0+255),b
  8250  00448E  0E00               	movlw	0
  8251  004490  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8252  004492  0E00               	movlw	0
  8253  004494  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8254  004496  0E00               	movlw	0
  8255  004498  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8256  00449A  C078  F064         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  8257  00449E  0E00               	movlw	0
  8258  0044A0  ECA7  F006         	call	_CANSetFilter
  8259                           
  8260                           ;CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  8261  0044A4  0E00               	movlw	0
  8262  0044A6  0100               	movlb	0	; () banked
  8263  0044A8  6F60               	movwf	CANSetFilter@filter& (0+255),b
  8264  0044AA  0E00               	movlw	0
  8265  0044AC  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8266  0044AE  0E00               	movlw	0
  8267  0044B0  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8268  0044B2  0E00               	movlw	0
  8269  0044B4  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8270  0044B6  C078  F064         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  8271  0044BA  0E01               	movlw	1
  8272  0044BC  ECA7  F006         	call	_CANSetFilter
  8273                           
  8274                           ;CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  8275  0044C0  0E00               	movlw	0
  8276  0044C2  0100               	movlb	0	; () banked
  8277  0044C4  6F60               	movwf	CANSetFilter@filter& (0+255),b
  8278  0044C6  0E00               	movlw	0
  8279  0044C8  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8280  0044CA  0E00               	movlw	0
  8281  0044CC  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8282  0044CE  0E00               	movlw	0
  8283  0044D0  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8284  0044D2  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8285  0044D6  0E02               	movlw	2
  8286  0044D8  ECA7  F006         	call	_CANSetFilter
  8287                           
  8288                           ;CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  8289  0044DC  0E00               	movlw	0
  8290  0044DE  0100               	movlb	0	; () banked
  8291  0044E0  6F60               	movwf	CANSetFilter@filter& (0+255),b
  8292  0044E2  0E00               	movlw	0
  8293  0044E4  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8294  0044E6  0E00               	movlw	0
  8295  0044E8  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8296  0044EA  0E00               	movlw	0
  8297  0044EC  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8298  0044EE  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8299  0044F2  0E03               	movlw	3
  8300  0044F4  ECA7  F006         	call	_CANSetFilter
  8301                           
  8302                           ;CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  8303  0044F8  0E00               	movlw	0
  8304  0044FA  0100               	movlb	0	; () banked
  8305  0044FC  6F60               	movwf	CANSetFilter@filter& (0+255),b
  8306  0044FE  0E00               	movlw	0
  8307  004500  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8308  004502  0E00               	movlw	0
  8309  004504  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8310  004506  0E00               	movlw	0
  8311  004508  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8312  00450A  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8313  00450E  0E04               	movlw	4
  8314  004510  ECA7  F006         	call	_CANSetFilter
  8315                           
  8316                           ;CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  8317  004514  0E00               	movlw	0
  8318  004516  0100               	movlb	0	; () banked
  8319  004518  6F60               	movwf	CANSetFilter@filter& (0+255),b
  8320  00451A  0E00               	movlw	0
  8321  00451C  6F61               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8322  00451E  0E00               	movlw	0
  8323  004520  6F62               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8324  004522  0E00               	movlw	0
  8325  004524  6F63               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8326  004526  C079  F064         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8327  00452A  0E05               	movlw	5
  8328  00452C  ECA7  F006         	call	_CANSetFilter
  8329                           
  8330                           ;CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  8331  004530  0E00               	movlw	0
  8332  004532  EC89  F029         	call	_CANOperationMode
  8333  004536  0012               	return		;funcret
  8334  004538                     __end_of_CANInitialize:
  8335                           	opt stack 0
  8336                           tblptru	equ	0xFF8
  8337                           tblptrh	equ	0xFF7
  8338                           tblptrl	equ	0xFF6
  8339                           tablat	equ	0xFF5
  8340                           prodh	equ	0xFF4
  8341                           prodl	equ	0xFF3
  8342                           intcon	equ	0xFF2
  8343                           postinc0	equ	0xFEE
  8344                           wreg	equ	0xFE8
  8345                           postinc2	equ	0xFDE
  8346                           postdec2	equ	0xFDD
  8347                           fsr2h	equ	0xFDA
  8348                           fsr2l	equ	0xFD9
  8349                           status	equ	0xFD8
  8350                           
  8351 ;; *************** function _CANSetMask *****************
  8352 ;; Defined at:
  8353 ;;		line 640 in file "CANlib.h"
  8354 ;; Parameters:    Size  Location     Type
  8355 ;;  numBuffer       1    wreg     enum E16921
  8356 ;;  mask            4    0[BANK0 ] unsigned long 
  8357 ;;  type            1    4[BANK0 ] enum E16887
  8358 ;; Auto vars:     Size  Location     Type
  8359 ;;  numBuffer       1    9[BANK0 ] enum E16921
  8360 ;;  tamp            4   10[BANK0 ] unsigned long 
  8361 ;; Return value:  Size  Location     Type
  8362 ;;		None               void
  8363 ;; Registers used:
  8364 ;;		wreg, status,2, status,0
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 0/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8370 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8371 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8372 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8373 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8374 ;;Total ram usage:       14 bytes
  8375 ;; Hardware stack levels used:    1
  8376 ;; Hardware stack levels required when called:    2
  8377 ;; This function calls:
  8378 ;;		Nothing
  8379 ;; This function is called by:
  8380 ;;		_CANInitialize
  8381 ;; This function uses a non-reentrant model
  8382 ;;
  8383                           
  8384                           	psect	text25
  8385  0036B6                     __ptext25:
  8386                           	opt stack 0
  8387  0036B6                     _CANSetMask:
  8388                           	opt stack 26
  8389                           
  8390                           ;incstack = 0
  8391                           ;CANSetMask@numBuffer stored from wreg
  8392  0036B6  0100               	movlb	0	; () banked
  8393  0036B8  6F69               	movwf	CANSetMask@numBuffer& (0+255),b
  8394                           
  8395                           ;CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  8396  0036BA  0100               	movlb	0	; () banked
  8397  0036BC  0569               	decf	CANSetMask@numBuffer& (0+255),w,b
  8398  0036BE  A4D8               	btfss	status,2,c
  8399  0036C0  D056               	goto	l6481
  8400                           
  8401                           ; BSR set to: 0
  8402  0036C2  0100               	movlb	0	; () banked
  8403  0036C4  2964               	incf	CANSetMask@type& (0+255),w,b
  8404  0036C6  A4D8               	btfss	status,2,c
  8405  0036C8  D052               	goto	l6481
  8406                           
  8407                           ; BSR set to: 0
  8408                           ;CANlib.h: 644: {
  8409                           ;CANlib.h: 645: tamp = (mask >> 3);
  8410  0036CA  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  8411  0036CE  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8412  0036D2  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8413  0036D6  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8414  0036DA  0E04               	movlw	4
  8415  0036DC  D006               	goto	u8540
  8416  0036DE                     u8545:
  8417  0036DE  0100               	movlb	0	; () banked
  8418  0036E0  90D8               	bcf	status,0,c
  8419  0036E2  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8420  0036E4  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8421  0036E6  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8422  0036E8  3365               	rrcf	??_CANSetMask& (0+255),f,b
  8423  0036EA                     u8540:
  8424  0036EA  2EE8               	decfsz	wreg,f,c
  8425  0036EC  D7F8               	goto	u8545
  8426  0036EE  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  8427  0036F2  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8428  0036F6  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8429  0036FA  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8430                           
  8431                           ; BSR set to: 0
  8432                           ;CANlib.h: 646: tamp = tamp & 0x000000FF;
  8433  0036FE  0100               	movlb	0	; () banked
  8434  003700  516A               	movf	CANSetMask@tamp& (0+255),w,b
  8435  003702  0100               	movlb	0	; () banked
  8436  003704  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8437  003706  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8438  003708  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8439  00370A  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8440                           
  8441                           ; BSR set to: 0
  8442                           ;CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  8443  00370C  C06A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  8444                           
  8445                           ; BSR set to: 0
  8446                           ;CANlib.h: 649: tamp = mask & 0x00000007;
  8447  003710  0E07               	movlw	7
  8448  003712  0100               	movlb	0	; () banked
  8449  003714  1560               	andwf	CANSetMask@mask& (0+255),w,b
  8450  003716  0100               	movlb	0	; () banked
  8451  003718  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8452  00371A  0E00               	movlw	0
  8453  00371C  0100               	movlb	0	; () banked
  8454  00371E  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  8455  003720  0100               	movlb	0	; () banked
  8456  003722  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  8457  003724  0E00               	movlw	0
  8458  003726  0100               	movlb	0	; () banked
  8459  003728  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  8460  00372A  0100               	movlb	0	; () banked
  8461  00372C  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  8462  00372E  0E00               	movlw	0
  8463  003730  0100               	movlb	0	; () banked
  8464  003732  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  8465  003734  0100               	movlb	0	; () banked
  8466  003736  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;CANlib.h: 650: tamp = tamp << 5;
  8470  003738  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  8471  00373C  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  8472  003740  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  8473  003744  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  8474  003748  0E05               	movlw	5
  8475  00374A                     u8555:
  8476  00374A  90D8               	bcf	status,0,c
  8477  00374C  0100               	movlb	0	; () banked
  8478  00374E  3765               	rlcf	??_CANSetMask& (0+255),f,b
  8479  003750  3766               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  8480  003752  3767               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  8481  003754  3768               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  8482  003756  2EE8               	decfsz	wreg,f,c
  8483  003758  D7F8               	goto	u8555
  8484  00375A  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  8485  00375E  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8486  003762  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8487  003766  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8488                           
  8489                           ; BSR set to: 0
  8490                           ;CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  8491  00376A  C06A  FF19         	movff	CANSetMask@tamp,3865	;volatile
  8492  00376E                     l6481:
  8493                           
  8494                           ; BSR set to: 0
  8495                           ;CANlib.h: 652: }
  8496                           ;CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  8497  00376E  0E02               	movlw	2
  8498  003770  0100               	movlb	0	; () banked
  8499  003772  1969               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  8500  003774  A4D8               	btfss	status,2,c
  8501  003776  D056               	goto	l6497
  8502                           
  8503                           ; BSR set to: 0
  8504  003778  0100               	movlb	0	; () banked
  8505  00377A  2964               	incf	CANSetMask@type& (0+255),w,b
  8506  00377C  A4D8               	btfss	status,2,c
  8507  00377E  D052               	goto	l6497
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;CANlib.h: 655: {
  8511                           ;CANlib.h: 656: tamp = (mask >> 3);
  8512  003780  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  8513  003784  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8514  003788  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8515  00378C  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8516  003790  0E04               	movlw	4
  8517  003792  D006               	goto	u8580
  8518  003794                     u8585:
  8519  003794  0100               	movlb	0	; () banked
  8520  003796  90D8               	bcf	status,0,c
  8521  003798  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8522  00379A  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8523  00379C  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8524  00379E  3365               	rrcf	??_CANSetMask& (0+255),f,b
  8525  0037A0                     u8580:
  8526  0037A0  2EE8               	decfsz	wreg,f,c
  8527  0037A2  D7F8               	goto	u8585
  8528  0037A4  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  8529  0037A8  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8530  0037AC  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8531  0037B0  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8532                           
  8533                           ; BSR set to: 0
  8534                           ;CANlib.h: 657: tamp = tamp & 0x000000FF;
  8535  0037B4  0100               	movlb	0	; () banked
  8536  0037B6  516A               	movf	CANSetMask@tamp& (0+255),w,b
  8537  0037B8  0100               	movlb	0	; () banked
  8538  0037BA  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8539  0037BC  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8540  0037BE  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8541  0037C0  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  8545  0037C2  C06A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;CANlib.h: 660: tamp = mask & 0x00000007;
  8549  0037C6  0E07               	movlw	7
  8550  0037C8  0100               	movlb	0	; () banked
  8551  0037CA  1560               	andwf	CANSetMask@mask& (0+255),w,b
  8552  0037CC  0100               	movlb	0	; () banked
  8553  0037CE  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8554  0037D0  0E00               	movlw	0
  8555  0037D2  0100               	movlb	0	; () banked
  8556  0037D4  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  8557  0037D6  0100               	movlb	0	; () banked
  8558  0037D8  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  8559  0037DA  0E00               	movlw	0
  8560  0037DC  0100               	movlb	0	; () banked
  8561  0037DE  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  8562  0037E0  0100               	movlb	0	; () banked
  8563  0037E2  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  8564  0037E4  0E00               	movlw	0
  8565  0037E6  0100               	movlb	0	; () banked
  8566  0037E8  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  8567  0037EA  0100               	movlb	0	; () banked
  8568  0037EC  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  8569                           
  8570                           ; BSR set to: 0
  8571                           ;CANlib.h: 661: tamp = tamp << 5;
  8572  0037EE  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  8573  0037F2  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  8574  0037F6  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  8575  0037FA  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  8576  0037FE  0E05               	movlw	5
  8577  003800                     u8595:
  8578  003800  90D8               	bcf	status,0,c
  8579  003802  0100               	movlb	0	; () banked
  8580  003804  3765               	rlcf	??_CANSetMask& (0+255),f,b
  8581  003806  3766               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  8582  003808  3767               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  8583  00380A  3768               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  8584  00380C  2EE8               	decfsz	wreg,f,c
  8585  00380E  D7F8               	goto	u8595
  8586  003810  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  8587  003814  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8588  003818  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8589  00381C  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8590                           
  8591                           ; BSR set to: 0
  8592                           ;CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  8593  003820  C06A  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  8594  003824                     l6497:
  8595                           
  8596                           ; BSR set to: 0
  8597                           ;CANlib.h: 663: }
  8598                           ;CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  8599  003824  0100               	movlb	0	; () banked
  8600  003826  0569               	decf	CANSetMask@numBuffer& (0+255),w,b
  8601  003828  A4D8               	btfss	status,2,c
  8602  00382A  D087               	goto	l6529
  8603                           
  8604                           ; BSR set to: 0
  8605  00382C  0EF7               	movlw	247
  8606  00382E  0100               	movlb	0	; () banked
  8607  003830  1964               	xorwf	CANSetMask@type& (0+255),w,b
  8608  003832  A4D8               	btfss	status,2,c
  8609  003834  D082               	goto	l6529
  8610                           
  8611                           ; BSR set to: 0
  8612                           ;CANlib.h: 666: {
  8613                           ;CANlib.h: 667: tamp = mask & 0x000000FF;
  8614  003836  0100               	movlb	0	; () banked
  8615  003838  5160               	movf	CANSetMask@mask& (0+255),w,b
  8616  00383A  0100               	movlb	0	; () banked
  8617  00383C  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8618  00383E  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8619  003840  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8620  003842  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8621                           
  8622                           ; BSR set to: 0
  8623                           ;CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  8624  003844  C06A  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  8625                           
  8626                           ; BSR set to: 0
  8627                           ;CANlib.h: 670: tamp = mask & 0x0000FF00;
  8628  003848  0E00               	movlw	0
  8629  00384A  0100               	movlb	0	; () banked
  8630  00384C  1560               	andwf	CANSetMask@mask& (0+255),w,b
  8631  00384E  0100               	movlb	0	; () banked
  8632  003850  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8633  003852  0EFF               	movlw	255
  8634  003854  0100               	movlb	0	; () banked
  8635  003856  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  8636  003858  0100               	movlb	0	; () banked
  8637  00385A  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  8638  00385C  0E00               	movlw	0
  8639  00385E  0100               	movlb	0	; () banked
  8640  003860  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  8641  003862  0100               	movlb	0	; () banked
  8642  003864  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  8643  003866  0E00               	movlw	0
  8644  003868  0100               	movlb	0	; () banked
  8645  00386A  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  8646  00386C  0100               	movlb	0	; () banked
  8647  00386E  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;CANlib.h: 671: tamp = tamp >> 8;
  8651  003870  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  8652  003874  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  8653  003878  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  8654  00387C  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  8655  003880  C066  F065         	movff	??_CANSetMask+1,??_CANSetMask
  8656  003884  C067  F066         	movff	??_CANSetMask+2,??_CANSetMask+1
  8657  003888  C068  F067         	movff	??_CANSetMask+3,??_CANSetMask+2
  8658  00388C  0100               	movlb	0	; () banked
  8659  00388E  6B68               	clrf	(??_CANSetMask+3)& (0+255),b
  8660  003890  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  8661  003894  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8662  003898  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8663  00389C  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  8667  0038A0  C06A  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;CANlib.h: 674: if (mask & 0x00010000)
  8671  0038A4  0100               	movlb	0	; () banked
  8672  0038A6  A162               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  8673  0038A8  D003               	goto	l438
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  8677  0038AA  010F               	movlb	15	; () banked
  8678  0038AC  8119               	bsf	25,0,b	;volatile
  8679  0038AE  D002               	goto	l439
  8680  0038B0                     l438:
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;CANlib.h: 676: else
  8684                           ;CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  8685  0038B0  010F               	movlb	15	; () banked
  8686  0038B2  9119               	bcf	25,0,b	;volatile
  8687  0038B4                     l439:
  8688                           
  8689                           ; BSR set to: 15
  8690                           ;CANlib.h: 679: if (mask & 0x00020000)
  8691  0038B4  0100               	movlb	0	; () banked
  8692  0038B6  A362               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  8693  0038B8  D003               	goto	l440
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  8697  0038BA  010F               	movlb	15	; () banked
  8698  0038BC  8319               	bsf	25,1,b	;volatile
  8699  0038BE  D002               	goto	l441
  8700  0038C0                     l440:
  8701                           
  8702                           ; BSR set to: 0
  8703                           ;CANlib.h: 681: else
  8704                           ;CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  8705  0038C0  010F               	movlb	15	; () banked
  8706  0038C2  9319               	bcf	25,1,b	;volatile
  8707  0038C4                     l441:
  8708                           
  8709                           ; BSR set to: 15
  8710                           ;CANlib.h: 684: if (mask & 0x00040000)
  8711  0038C4  0100               	movlb	0	; () banked
  8712  0038C6  A562               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  8713  0038C8  D003               	goto	l442
  8714                           
  8715                           ; BSR set to: 0
  8716                           ;CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  8717  0038CA  010F               	movlb	15	; () banked
  8718  0038CC  8B19               	bsf	25,5,b	;volatile
  8719  0038CE  D002               	goto	l443
  8720  0038D0                     l442:
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;CANlib.h: 686: else
  8724                           ;CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  8725  0038D0  010F               	movlb	15	; () banked
  8726  0038D2  9B19               	bcf	25,5,b	;volatile
  8727  0038D4                     l443:
  8728                           
  8729                           ; BSR set to: 15
  8730                           ;CANlib.h: 689: if (mask & 0x00080000)
  8731  0038D4  0100               	movlb	0	; () banked
  8732  0038D6  A762               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  8733  0038D8  D003               	goto	l444
  8734                           
  8735                           ; BSR set to: 0
  8736                           ;CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  8737  0038DA  010F               	movlb	15	; () banked
  8738  0038DC  8D19               	bsf	25,6,b	;volatile
  8739  0038DE  D002               	goto	l445
  8740  0038E0                     l444:
  8741                           
  8742                           ; BSR set to: 0
  8743                           ;CANlib.h: 691: else
  8744                           ;CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  8745  0038E0  010F               	movlb	15	; () banked
  8746  0038E2  9D19               	bcf	25,6,b	;volatile
  8747  0038E4                     l445:
  8748                           
  8749                           ; BSR set to: 15
  8750                           ;CANlib.h: 694: if (mask & 0x00100000)
  8751  0038E4  0100               	movlb	0	; () banked
  8752  0038E6  A962               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  8753  0038E8  D003               	goto	l446
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  8757  0038EA  010F               	movlb	15	; () banked
  8758  0038EC  8F19               	bsf	25,7,b	;volatile
  8759  0038EE  D002               	goto	l6523
  8760  0038F0                     l446:
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;CANlib.h: 696: else
  8764                           ;CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  8765  0038F0  010F               	movlb	15	; () banked
  8766  0038F2  9F19               	bcf	25,7,b	;volatile
  8767  0038F4                     l6523:
  8768                           
  8769                           ; BSR set to: 15
  8770                           ;CANlib.h: 699: tamp = (mask >> 21);
  8771  0038F4  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  8772  0038F8  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8773  0038FC  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8774  003900  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8775  003904  0E16               	movlw	22
  8776  003906  D006               	goto	u8670
  8777  003908                     u8675:
  8778  003908  0100               	movlb	0	; () banked
  8779  00390A  90D8               	bcf	status,0,c
  8780  00390C  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8781  00390E  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8782  003910  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8783  003912  3365               	rrcf	??_CANSetMask& (0+255),f,b
  8784  003914                     u8670:
  8785  003914  2EE8               	decfsz	wreg,f,c
  8786  003916  D7F8               	goto	u8675
  8787  003918  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  8788  00391C  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8789  003920  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8790  003924  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;CANlib.h: 700: tamp = tamp & 0x000000FF;
  8794  003928  0100               	movlb	0	; () banked
  8795  00392A  516A               	movf	CANSetMask@tamp& (0+255),w,b
  8796  00392C  0100               	movlb	0	; () banked
  8797  00392E  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8798  003930  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8799  003932  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8800  003934  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8801                           
  8802                           ; BSR set to: 0
  8803                           ;CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  8804  003936  C06A  FF18         	movff	CANSetMask@tamp,3864	;volatile
  8805  00393A                     l6529:
  8806                           
  8807                           ; BSR set to: 0
  8808                           ;CANlib.h: 702: }
  8809                           ;CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  8810  00393A  0E02               	movlw	2
  8811  00393C  0100               	movlb	0	; () banked
  8812  00393E  1969               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  8813  003940  A4D8               	btfss	status,2,c
  8814  003942  0012               	return	
  8815                           
  8816                           ; BSR set to: 0
  8817  003944  0EF7               	movlw	247
  8818  003946  0100               	movlb	0	; () banked
  8819  003948  1964               	xorwf	CANSetMask@type& (0+255),w,b
  8820  00394A  A4D8               	btfss	status,2,c
  8821  00394C  0012               	return	
  8822                           
  8823                           ; BSR set to: 0
  8824                           ;CANlib.h: 705: {
  8825                           ;CANlib.h: 706: tamp = mask & 0x000000FF;
  8826  00394E  0100               	movlb	0	; () banked
  8827  003950  5160               	movf	CANSetMask@mask& (0+255),w,b
  8828  003952  0100               	movlb	0	; () banked
  8829  003954  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8830  003956  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8831  003958  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8832  00395A  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  8836  00395C  C06A  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;CANlib.h: 709: tamp = mask & 0x0000FF00;
  8840  003960  0E00               	movlw	0
  8841  003962  0100               	movlb	0	; () banked
  8842  003964  1560               	andwf	CANSetMask@mask& (0+255),w,b
  8843  003966  0100               	movlb	0	; () banked
  8844  003968  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  8845  00396A  0EFF               	movlw	255
  8846  00396C  0100               	movlb	0	; () banked
  8847  00396E  1561               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  8848  003970  0100               	movlb	0	; () banked
  8849  003972  6F6B               	movwf	(CANSetMask@tamp+1)& (0+255),b
  8850  003974  0E00               	movlw	0
  8851  003976  0100               	movlb	0	; () banked
  8852  003978  1562               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  8853  00397A  0100               	movlb	0	; () banked
  8854  00397C  6F6C               	movwf	(CANSetMask@tamp+2)& (0+255),b
  8855  00397E  0E00               	movlw	0
  8856  003980  0100               	movlb	0	; () banked
  8857  003982  1563               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  8858  003984  0100               	movlb	0	; () banked
  8859  003986  6F6D               	movwf	(CANSetMask@tamp+3)& (0+255),b
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;CANlib.h: 710: tamp = tamp >> 8;
  8863  003988  C06A  F065         	movff	CANSetMask@tamp,??_CANSetMask
  8864  00398C  C06B  F066         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  8865  003990  C06C  F067         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  8866  003994  C06D  F068         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  8867  003998  C066  F065         	movff	??_CANSetMask+1,??_CANSetMask
  8868  00399C  C067  F066         	movff	??_CANSetMask+2,??_CANSetMask+1
  8869  0039A0  C068  F067         	movff	??_CANSetMask+3,??_CANSetMask+2
  8870  0039A4  0100               	movlb	0	; () banked
  8871  0039A6  6B68               	clrf	(??_CANSetMask+3)& (0+255),b
  8872  0039A8  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  8873  0039AC  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8874  0039B0  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8875  0039B4  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8876                           
  8877                           ; BSR set to: 0
  8878                           ;CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  8879  0039B8  C06A  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;CANlib.h: 713: if (mask & 0x00010000)
  8883  0039BC  0100               	movlb	0	; () banked
  8884  0039BE  A162               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  8885  0039C0  D003               	goto	l449
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  8889  0039C2  010F               	movlb	15	; () banked
  8890  0039C4  811D               	bsf	29,0,b	;volatile
  8891  0039C6  D002               	goto	l450
  8892  0039C8                     l449:
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;CANlib.h: 715: else
  8896                           ;CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  8897  0039C8  010F               	movlb	15	; () banked
  8898  0039CA  911D               	bcf	29,0,b	;volatile
  8899  0039CC                     l450:
  8900                           
  8901                           ; BSR set to: 15
  8902                           ;CANlib.h: 718: if (mask & 0x00020000)
  8903  0039CC  0100               	movlb	0	; () banked
  8904  0039CE  A362               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  8905  0039D0  D003               	goto	l451
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  8909  0039D2  010F               	movlb	15	; () banked
  8910  0039D4  831D               	bsf	29,1,b	;volatile
  8911  0039D6  D002               	goto	l452
  8912  0039D8                     l451:
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;CANlib.h: 720: else
  8916                           ;CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  8917  0039D8  010F               	movlb	15	; () banked
  8918  0039DA  931D               	bcf	29,1,b	;volatile
  8919  0039DC                     l452:
  8920                           
  8921                           ; BSR set to: 15
  8922                           ;CANlib.h: 723: if (mask & 0x00040000)
  8923  0039DC  0100               	movlb	0	; () banked
  8924  0039DE  A562               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  8925  0039E0  D003               	goto	l453
  8926                           
  8927                           ; BSR set to: 0
  8928                           ;CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  8929  0039E2  010F               	movlb	15	; () banked
  8930  0039E4  8B1D               	bsf	29,5,b	;volatile
  8931  0039E6  D002               	goto	l454
  8932  0039E8                     l453:
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;CANlib.h: 725: else
  8936                           ;CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  8937  0039E8  010F               	movlb	15	; () banked
  8938  0039EA  9B1D               	bcf	29,5,b	;volatile
  8939  0039EC                     l454:
  8940                           
  8941                           ; BSR set to: 15
  8942                           ;CANlib.h: 728: if (mask & 0x00080000)
  8943  0039EC  0100               	movlb	0	; () banked
  8944  0039EE  A762               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  8945  0039F0  D003               	goto	l455
  8946                           
  8947                           ; BSR set to: 0
  8948                           ;CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  8949  0039F2  010F               	movlb	15	; () banked
  8950  0039F4  8D1D               	bsf	29,6,b	;volatile
  8951  0039F6  D002               	goto	l456
  8952  0039F8                     l455:
  8953                           
  8954                           ; BSR set to: 0
  8955                           ;CANlib.h: 730: else
  8956                           ;CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  8957  0039F8  010F               	movlb	15	; () banked
  8958  0039FA  9D1D               	bcf	29,6,b	;volatile
  8959  0039FC                     l456:
  8960                           
  8961                           ; BSR set to: 15
  8962                           ;CANlib.h: 733: if (mask & 0x00100000)
  8963  0039FC  0100               	movlb	0	; () banked
  8964  0039FE  A962               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  8965  003A00  D003               	goto	l457
  8966                           
  8967                           ; BSR set to: 0
  8968                           ;CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  8969  003A02  010F               	movlb	15	; () banked
  8970  003A04  8F1D               	bsf	29,7,b	;volatile
  8971  003A06  D002               	goto	l6555
  8972  003A08                     l457:
  8973                           
  8974                           ; BSR set to: 0
  8975                           ;CANlib.h: 735: else
  8976                           ;CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  8977  003A08  010F               	movlb	15	; () banked
  8978  003A0A  9F1D               	bcf	29,7,b	;volatile
  8979  003A0C                     l6555:
  8980                           
  8981                           ; BSR set to: 15
  8982                           ;CANlib.h: 738: tamp = (mask >> 21);
  8983  003A0C  C060  F065         	movff	CANSetMask@mask,??_CANSetMask
  8984  003A10  C061  F066         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8985  003A14  C062  F067         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8986  003A18  C063  F068         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8987  003A1C  0E16               	movlw	22
  8988  003A1E  D006               	goto	u8750
  8989  003A20                     u8755:
  8990  003A20  0100               	movlb	0	; () banked
  8991  003A22  90D8               	bcf	status,0,c
  8992  003A24  3368               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8993  003A26  3367               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8994  003A28  3366               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8995  003A2A  3365               	rrcf	??_CANSetMask& (0+255),f,b
  8996  003A2C                     u8750:
  8997  003A2C  2EE8               	decfsz	wreg,f,c
  8998  003A2E  D7F8               	goto	u8755
  8999  003A30  C065  F06A         	movff	??_CANSetMask,CANSetMask@tamp
  9000  003A34  C066  F06B         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9001  003A38  C067  F06C         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9002  003A3C  C068  F06D         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;CANlib.h: 739: tamp = tamp & 0x000000FF;
  9006  003A40  0100               	movlb	0	; () banked
  9007  003A42  516A               	movf	CANSetMask@tamp& (0+255),w,b
  9008  003A44  0100               	movlb	0	; () banked
  9009  003A46  6F6A               	movwf	CANSetMask@tamp& (0+255),b
  9010  003A48  6B6B               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9011  003A4A  6B6C               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9012  003A4C  6B6D               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9013                           
  9014                           ; BSR set to: 0
  9015                           ;CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  9016  003A4E  C06A  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  9017  003A52  0012               	return	
  9018  003A54                     __end_of_CANSetMask:
  9019                           	opt stack 0
  9020                           tblptru	equ	0xFF8
  9021                           tblptrh	equ	0xFF7
  9022                           tblptrl	equ	0xFF6
  9023                           tablat	equ	0xFF5
  9024                           prodh	equ	0xFF4
  9025                           prodl	equ	0xFF3
  9026                           intcon	equ	0xFF2
  9027                           postinc0	equ	0xFEE
  9028                           wreg	equ	0xFE8
  9029                           postinc2	equ	0xFDE
  9030                           postdec2	equ	0xFDD
  9031                           fsr2h	equ	0xFDA
  9032                           fsr2l	equ	0xFD9
  9033                           status	equ	0xFD8
  9034                           
  9035 ;; *************** function _CANSetFilter *****************
  9036 ;; Defined at:
  9037 ;;		line 748 in file "CANlib.h"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;  numBuffer       1    wreg     enum E16924
  9040 ;;  filter          4    0[BANK0 ] unsigned long 
  9041 ;;  type            1    4[BANK0 ] enum E16887
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;  numBuffer       1    9[BANK0 ] enum E16924
  9044 ;;  tamp            4   10[BANK0 ] unsigned long 
  9045 ;; Return value:  Size  Location     Type
  9046 ;;		None               void
  9047 ;; Registers used:
  9048 ;;		wreg, status,2, status,0
  9049 ;; Tracked objects:
  9050 ;;		On entry : 0/0
  9051 ;;		On exit  : 0/0
  9052 ;;		Unchanged: 0/0
  9053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9054 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9055 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9056 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9057 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9058 ;;Total ram usage:       14 bytes
  9059 ;; Hardware stack levels used:    1
  9060 ;; Hardware stack levels required when called:    2
  9061 ;; This function calls:
  9062 ;;		Nothing
  9063 ;; This function is called by:
  9064 ;;		_CANInitialize
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067                           
  9068                           	psect	text26
  9069  000D4E                     __ptext26:
  9070                           	opt stack 0
  9071  000D4E                     _CANSetFilter:
  9072                           	opt stack 26
  9073                           
  9074                           ; BSR set to: 0
  9075                           ;incstack = 0
  9076                           ;CANSetFilter@numBuffer stored from wreg
  9077  000D4E  0100               	movlb	0	; () banked
  9078  000D50  6F69               	movwf	CANSetFilter@numBuffer& (0+255),b
  9079                           
  9080                           ;CANlib.h: 750: unsigned long tamp;
  9081                           ;CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  9082  000D52  0100               	movlb	0	; () banked
  9083  000D54  5169               	movf	CANSetFilter@numBuffer& (0+255),w,b
  9084  000D56  0100               	movlb	0	; () banked
  9085  000D58  A4D8               	btfss	status,2,c
  9086  000D5A  D058               	goto	l6579
  9087                           
  9088                           ; BSR set to: 0
  9089  000D5C  0100               	movlb	0	; () banked
  9090  000D5E  2964               	incf	CANSetFilter@type& (0+255),w,b
  9091  000D60  A4D8               	btfss	status,2,c
  9092  000D62  D054               	goto	l6579
  9093                           
  9094                           ; BSR set to: 0
  9095                           ;CANlib.h: 753: {
  9096                           ;CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  9097  000D64  010F               	movlb	15	; () banked
  9098  000D66  9701               	bcf	1,3,b	;volatile
  9099                           
  9100                           ; BSR set to: 15
  9101                           ;CANlib.h: 756: tamp = (filter >> 3);
  9102  000D68  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  9103  000D6C  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9104  000D70  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9105  000D74  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9106  000D78  0E04               	movlw	4
  9107  000D7A  D006               	goto	u8780
  9108  000D7C                     u8785:
  9109  000D7C  0100               	movlb	0	; () banked
  9110  000D7E  90D8               	bcf	status,0,c
  9111  000D80  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9112  000D82  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9113  000D84  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9114  000D86  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  9115  000D88                     u8780:
  9116  000D88  2EE8               	decfsz	wreg,f,c
  9117  000D8A  D7F8               	goto	u8785
  9118  000D8C  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9119  000D90  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9120  000D94  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9121  000D98  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;CANlib.h: 757: tamp = tamp & 0x000000FF;
  9125  000D9C  0100               	movlb	0	; () banked
  9126  000D9E  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  9127  000DA0  0100               	movlb	0	; () banked
  9128  000DA2  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9129  000DA4  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9130  000DA6  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9131  000DA8  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9132                           
  9133                           ; BSR set to: 0
  9134                           ;CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  9135  000DAA  C06A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  9136                           
  9137                           ; BSR set to: 0
  9138                           ;CANlib.h: 760: tamp = filter & 0x00000007;
  9139  000DAE  0E07               	movlw	7
  9140  000DB0  0100               	movlb	0	; () banked
  9141  000DB2  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9142  000DB4  0100               	movlb	0	; () banked
  9143  000DB6  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9144  000DB8  0E00               	movlw	0
  9145  000DBA  0100               	movlb	0	; () banked
  9146  000DBC  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9147  000DBE  0100               	movlb	0	; () banked
  9148  000DC0  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9149  000DC2  0E00               	movlw	0
  9150  000DC4  0100               	movlb	0	; () banked
  9151  000DC6  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9152  000DC8  0100               	movlb	0	; () banked
  9153  000DCA  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9154  000DCC  0E00               	movlw	0
  9155  000DCE  0100               	movlb	0	; () banked
  9156  000DD0  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9157  000DD2  0100               	movlb	0	; () banked
  9158  000DD4  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;CANlib.h: 761: tamp = tamp << 5;
  9162  000DD6  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9163  000DDA  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9164  000DDE  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9165  000DE2  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9166  000DE6  0E05               	movlw	5
  9167  000DE8                     u8795:
  9168  000DE8  90D8               	bcf	status,0,c
  9169  000DEA  0100               	movlb	0	; () banked
  9170  000DEC  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  9171  000DEE  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9172  000DF0  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9173  000DF2  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9174  000DF4  2EE8               	decfsz	wreg,f,c
  9175  000DF6  D7F8               	goto	u8795
  9176  000DF8  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9177  000DFC  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9178  000E00  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9179  000E04  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  9183  000E08  C06A  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  9184  000E0C                     l6579:
  9185                           
  9186                           ; BSR set to: 0
  9187                           ;CANlib.h: 763: }
  9188                           ;CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  9189  000E0C  0100               	movlb	0	; () banked
  9190  000E0E  0569               	decf	CANSetFilter@numBuffer& (0+255),w,b
  9191  000E10  A4D8               	btfss	status,2,c
  9192  000E12  D058               	goto	l6597
  9193                           
  9194                           ; BSR set to: 0
  9195  000E14  0100               	movlb	0	; () banked
  9196  000E16  2964               	incf	CANSetFilter@type& (0+255),w,b
  9197  000E18  A4D8               	btfss	status,2,c
  9198  000E1A  D054               	goto	l6597
  9199                           
  9200                           ; BSR set to: 0
  9201                           ;CANlib.h: 766: {
  9202                           ;CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  9203  000E1C  010F               	movlb	15	; () banked
  9204  000E1E  9705               	bcf	5,3,b	;volatile
  9205                           
  9206                           ; BSR set to: 15
  9207                           ;CANlib.h: 769: tamp = (filter >> 3);
  9208  000E20  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  9209  000E24  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9210  000E28  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9211  000E2C  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9212  000E30  0E04               	movlw	4
  9213  000E32  D006               	goto	u8820
  9214  000E34                     u8825:
  9215  000E34  0100               	movlb	0	; () banked
  9216  000E36  90D8               	bcf	status,0,c
  9217  000E38  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9218  000E3A  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9219  000E3C  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9220  000E3E  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  9221  000E40                     u8820:
  9222  000E40  2EE8               	decfsz	wreg,f,c
  9223  000E42  D7F8               	goto	u8825
  9224  000E44  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9225  000E48  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9226  000E4C  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9227  000E50  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9228                           
  9229                           ; BSR set to: 0
  9230                           ;CANlib.h: 770: tamp = tamp & 0x000000FF;
  9231  000E54  0100               	movlb	0	; () banked
  9232  000E56  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  9233  000E58  0100               	movlb	0	; () banked
  9234  000E5A  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9235  000E5C  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9236  000E5E  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9237  000E60  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9238                           
  9239                           ; BSR set to: 0
  9240                           ;CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  9241  000E62  C06A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;CANlib.h: 773: tamp = filter & 0x00000007;
  9245  000E66  0E07               	movlw	7
  9246  000E68  0100               	movlb	0	; () banked
  9247  000E6A  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9248  000E6C  0100               	movlb	0	; () banked
  9249  000E6E  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9250  000E70  0E00               	movlw	0
  9251  000E72  0100               	movlb	0	; () banked
  9252  000E74  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9253  000E76  0100               	movlb	0	; () banked
  9254  000E78  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9255  000E7A  0E00               	movlw	0
  9256  000E7C  0100               	movlb	0	; () banked
  9257  000E7E  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9258  000E80  0100               	movlb	0	; () banked
  9259  000E82  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9260  000E84  0E00               	movlw	0
  9261  000E86  0100               	movlb	0	; () banked
  9262  000E88  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9263  000E8A  0100               	movlb	0	; () banked
  9264  000E8C  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9265                           
  9266                           ; BSR set to: 0
  9267                           ;CANlib.h: 774: tamp = tamp << 5;
  9268  000E8E  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9269  000E92  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9270  000E96  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9271  000E9A  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9272  000E9E  0E05               	movlw	5
  9273  000EA0                     u8835:
  9274  000EA0  90D8               	bcf	status,0,c
  9275  000EA2  0100               	movlb	0	; () banked
  9276  000EA4  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  9277  000EA6  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9278  000EA8  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9279  000EAA  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9280  000EAC  2EE8               	decfsz	wreg,f,c
  9281  000EAE  D7F8               	goto	u8835
  9282  000EB0  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9283  000EB4  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9284  000EB8  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9285  000EBC  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  9289  000EC0  C06A  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  9290  000EC4                     l6597:
  9291                           
  9292                           ; BSR set to: 0
  9293                           ;CANlib.h: 776: }
  9294                           ;CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  9295  000EC4  0E02               	movlw	2
  9296  000EC6  0100               	movlb	0	; () banked
  9297  000EC8  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9298  000ECA  A4D8               	btfss	status,2,c
  9299  000ECC  D058               	goto	l6615
  9300                           
  9301                           ; BSR set to: 0
  9302  000ECE  0100               	movlb	0	; () banked
  9303  000ED0  2964               	incf	CANSetFilter@type& (0+255),w,b
  9304  000ED2  A4D8               	btfss	status,2,c
  9305  000ED4  D054               	goto	l6615
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;CANlib.h: 779: {
  9309                           ;CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  9310  000ED6  010F               	movlb	15	; () banked
  9311  000ED8  9709               	bcf	9,3,b	;volatile
  9312                           
  9313                           ; BSR set to: 15
  9314                           ;CANlib.h: 782: tamp = (filter >> 3);
  9315  000EDA  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  9316  000EDE  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9317  000EE2  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9318  000EE6  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9319  000EEA  0E04               	movlw	4
  9320  000EEC  D006               	goto	u8860
  9321  000EEE                     u8865:
  9322  000EEE  0100               	movlb	0	; () banked
  9323  000EF0  90D8               	bcf	status,0,c
  9324  000EF2  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9325  000EF4  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9326  000EF6  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9327  000EF8  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  9328  000EFA                     u8860:
  9329  000EFA  2EE8               	decfsz	wreg,f,c
  9330  000EFC  D7F8               	goto	u8865
  9331  000EFE  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9332  000F02  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9333  000F06  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9334  000F0A  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;CANlib.h: 783: tamp = tamp & 0x000000FF;
  9338  000F0E  0100               	movlb	0	; () banked
  9339  000F10  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  9340  000F12  0100               	movlb	0	; () banked
  9341  000F14  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9342  000F16  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9343  000F18  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9344  000F1A  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9345                           
  9346                           ; BSR set to: 0
  9347                           ;CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  9348  000F1C  C06A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;CANlib.h: 786: tamp = filter & 0x00000007;
  9352  000F20  0E07               	movlw	7
  9353  000F22  0100               	movlb	0	; () banked
  9354  000F24  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9355  000F26  0100               	movlb	0	; () banked
  9356  000F28  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9357  000F2A  0E00               	movlw	0
  9358  000F2C  0100               	movlb	0	; () banked
  9359  000F2E  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9360  000F30  0100               	movlb	0	; () banked
  9361  000F32  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9362  000F34  0E00               	movlw	0
  9363  000F36  0100               	movlb	0	; () banked
  9364  000F38  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9365  000F3A  0100               	movlb	0	; () banked
  9366  000F3C  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9367  000F3E  0E00               	movlw	0
  9368  000F40  0100               	movlb	0	; () banked
  9369  000F42  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9370  000F44  0100               	movlb	0	; () banked
  9371  000F46  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9372                           
  9373                           ; BSR set to: 0
  9374                           ;CANlib.h: 787: tamp = tamp << 5;
  9375  000F48  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9376  000F4C  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9377  000F50  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9378  000F54  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9379  000F58  0E05               	movlw	5
  9380  000F5A                     u8875:
  9381  000F5A  90D8               	bcf	status,0,c
  9382  000F5C  0100               	movlb	0	; () banked
  9383  000F5E  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  9384  000F60  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9385  000F62  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9386  000F64  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9387  000F66  2EE8               	decfsz	wreg,f,c
  9388  000F68  D7F8               	goto	u8875
  9389  000F6A  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9390  000F6E  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9391  000F72  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9392  000F76  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  9396  000F7A  C06A  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  9397  000F7E                     l6615:
  9398                           
  9399                           ; BSR set to: 0
  9400                           ;CANlib.h: 789: }
  9401                           ;CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  9402  000F7E  0E03               	movlw	3
  9403  000F80  0100               	movlb	0	; () banked
  9404  000F82  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9405  000F84  A4D8               	btfss	status,2,c
  9406  000F86  D058               	goto	l6633
  9407                           
  9408                           ; BSR set to: 0
  9409  000F88  0100               	movlb	0	; () banked
  9410  000F8A  2964               	incf	CANSetFilter@type& (0+255),w,b
  9411  000F8C  A4D8               	btfss	status,2,c
  9412  000F8E  D054               	goto	l6633
  9413                           
  9414                           ; BSR set to: 0
  9415                           ;CANlib.h: 792: {
  9416                           ;CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  9417  000F90  010F               	movlb	15	; () banked
  9418  000F92  970D               	bcf	13,3,b	;volatile
  9419                           
  9420                           ; BSR set to: 15
  9421                           ;CANlib.h: 795: tamp = (filter >> 3);
  9422  000F94  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  9423  000F98  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9424  000F9C  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9425  000FA0  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9426  000FA4  0E04               	movlw	4
  9427  000FA6  D006               	goto	u8900
  9428  000FA8                     u8905:
  9429  000FA8  0100               	movlb	0	; () banked
  9430  000FAA  90D8               	bcf	status,0,c
  9431  000FAC  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9432  000FAE  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9433  000FB0  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9434  000FB2  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  9435  000FB4                     u8900:
  9436  000FB4  2EE8               	decfsz	wreg,f,c
  9437  000FB6  D7F8               	goto	u8905
  9438  000FB8  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9439  000FBC  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9440  000FC0  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9441  000FC4  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9442                           
  9443                           ; BSR set to: 0
  9444                           ;CANlib.h: 796: tamp = tamp & 0x000000FF;
  9445  000FC8  0100               	movlb	0	; () banked
  9446  000FCA  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  9447  000FCC  0100               	movlb	0	; () banked
  9448  000FCE  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9449  000FD0  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9450  000FD2  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9451  000FD4  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9452                           
  9453                           ; BSR set to: 0
  9454                           ;CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  9455  000FD6  C06A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  9456                           
  9457                           ; BSR set to: 0
  9458                           ;CANlib.h: 799: tamp = filter & 0x00000007;
  9459  000FDA  0E07               	movlw	7
  9460  000FDC  0100               	movlb	0	; () banked
  9461  000FDE  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9462  000FE0  0100               	movlb	0	; () banked
  9463  000FE2  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9464  000FE4  0E00               	movlw	0
  9465  000FE6  0100               	movlb	0	; () banked
  9466  000FE8  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9467  000FEA  0100               	movlb	0	; () banked
  9468  000FEC  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9469  000FEE  0E00               	movlw	0
  9470  000FF0  0100               	movlb	0	; () banked
  9471  000FF2  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9472  000FF4  0100               	movlb	0	; () banked
  9473  000FF6  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9474  000FF8  0E00               	movlw	0
  9475  000FFA  0100               	movlb	0	; () banked
  9476  000FFC  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9477  000FFE  0100               	movlb	0	; () banked
  9478  001000  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9479                           
  9480                           ; BSR set to: 0
  9481                           ;CANlib.h: 800: tamp = tamp << 5;
  9482  001002  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9483  001006  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9484  00100A  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9485  00100E  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9486  001012  0E05               	movlw	5
  9487  001014                     u8915:
  9488  001014  90D8               	bcf	status,0,c
  9489  001016  0100               	movlb	0	; () banked
  9490  001018  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  9491  00101A  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9492  00101C  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9493  00101E  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9494  001020  2EE8               	decfsz	wreg,f,c
  9495  001022  D7F8               	goto	u8915
  9496  001024  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9497  001028  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9498  00102C  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9499  001030  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9500                           
  9501                           ; BSR set to: 0
  9502                           ;CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  9503  001034  C06A  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  9504  001038                     l6633:
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;CANlib.h: 802: }
  9508                           ;CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  9509  001038  0E04               	movlw	4
  9510  00103A  0100               	movlb	0	; () banked
  9511  00103C  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9512  00103E  A4D8               	btfss	status,2,c
  9513  001040  D058               	goto	l6651
  9514                           
  9515                           ; BSR set to: 0
  9516  001042  0100               	movlb	0	; () banked
  9517  001044  2964               	incf	CANSetFilter@type& (0+255),w,b
  9518  001046  A4D8               	btfss	status,2,c
  9519  001048  D054               	goto	l6651
  9520                           
  9521                           ; BSR set to: 0
  9522                           ;CANlib.h: 805: {
  9523                           ;CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  9524  00104A  010F               	movlb	15	; () banked
  9525  00104C  9711               	bcf	17,3,b	;volatile
  9526                           
  9527                           ; BSR set to: 15
  9528                           ;CANlib.h: 808: tamp = (filter >> 3);
  9529  00104E  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  9530  001052  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9531  001056  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9532  00105A  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9533  00105E  0E04               	movlw	4
  9534  001060  D006               	goto	u8940
  9535  001062                     u8945:
  9536  001062  0100               	movlb	0	; () banked
  9537  001064  90D8               	bcf	status,0,c
  9538  001066  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9539  001068  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9540  00106A  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9541  00106C  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  9542  00106E                     u8940:
  9543  00106E  2EE8               	decfsz	wreg,f,c
  9544  001070  D7F8               	goto	u8945
  9545  001072  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9546  001076  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9547  00107A  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9548  00107E  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9549                           
  9550                           ; BSR set to: 0
  9551                           ;CANlib.h: 809: tamp = tamp & 0x000000FF;
  9552  001082  0100               	movlb	0	; () banked
  9553  001084  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  9554  001086  0100               	movlb	0	; () banked
  9555  001088  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9556  00108A  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9557  00108C  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9558  00108E  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9559                           
  9560                           ; BSR set to: 0
  9561                           ;CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  9562  001090  C06A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  9563                           
  9564                           ; BSR set to: 0
  9565                           ;CANlib.h: 812: tamp = filter & 0x00000007;
  9566  001094  0E07               	movlw	7
  9567  001096  0100               	movlb	0	; () banked
  9568  001098  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9569  00109A  0100               	movlb	0	; () banked
  9570  00109C  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9571  00109E  0E00               	movlw	0
  9572  0010A0  0100               	movlb	0	; () banked
  9573  0010A2  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9574  0010A4  0100               	movlb	0	; () banked
  9575  0010A6  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9576  0010A8  0E00               	movlw	0
  9577  0010AA  0100               	movlb	0	; () banked
  9578  0010AC  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9579  0010AE  0100               	movlb	0	; () banked
  9580  0010B0  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9581  0010B2  0E00               	movlw	0
  9582  0010B4  0100               	movlb	0	; () banked
  9583  0010B6  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9584  0010B8  0100               	movlb	0	; () banked
  9585  0010BA  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;CANlib.h: 813: tamp = tamp << 5;
  9589  0010BC  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9590  0010C0  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9591  0010C4  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9592  0010C8  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9593  0010CC  0E05               	movlw	5
  9594  0010CE                     u8955:
  9595  0010CE  90D8               	bcf	status,0,c
  9596  0010D0  0100               	movlb	0	; () banked
  9597  0010D2  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  9598  0010D4  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9599  0010D6  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9600  0010D8  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9601  0010DA  2EE8               	decfsz	wreg,f,c
  9602  0010DC  D7F8               	goto	u8955
  9603  0010DE  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9604  0010E2  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9605  0010E6  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9606  0010EA  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9607                           
  9608                           ; BSR set to: 0
  9609                           ;CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  9610  0010EE  C06A  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  9611  0010F2                     l6651:
  9612                           
  9613                           ; BSR set to: 0
  9614                           ;CANlib.h: 815: }
  9615                           ;CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  9616  0010F2  0E05               	movlw	5
  9617  0010F4  0100               	movlb	0	; () banked
  9618  0010F6  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9619  0010F8  A4D8               	btfss	status,2,c
  9620  0010FA  D058               	goto	l6669
  9621                           
  9622                           ; BSR set to: 0
  9623  0010FC  0100               	movlb	0	; () banked
  9624  0010FE  2964               	incf	CANSetFilter@type& (0+255),w,b
  9625  001100  A4D8               	btfss	status,2,c
  9626  001102  D054               	goto	l6669
  9627                           
  9628                           ; BSR set to: 0
  9629                           ;CANlib.h: 818: {
  9630                           ;CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  9631  001104  010F               	movlb	15	; () banked
  9632  001106  9715               	bcf	21,3,b	;volatile
  9633                           
  9634                           ; BSR set to: 15
  9635                           ;CANlib.h: 821: tamp = (filter >> 3);
  9636  001108  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  9637  00110C  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9638  001110  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9639  001114  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9640  001118  0E04               	movlw	4
  9641  00111A  D006               	goto	u8980
  9642  00111C                     u8985:
  9643  00111C  0100               	movlb	0	; () banked
  9644  00111E  90D8               	bcf	status,0,c
  9645  001120  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9646  001122  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9647  001124  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9648  001126  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  9649  001128                     u8980:
  9650  001128  2EE8               	decfsz	wreg,f,c
  9651  00112A  D7F8               	goto	u8985
  9652  00112C  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9653  001130  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9654  001134  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9655  001138  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;CANlib.h: 822: tamp = tamp & 0x000000FF;
  9659  00113C  0100               	movlb	0	; () banked
  9660  00113E  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  9661  001140  0100               	movlb	0	; () banked
  9662  001142  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9663  001144  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9664  001146  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9665  001148  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  9669  00114A  C06A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  9670                           
  9671                           ; BSR set to: 0
  9672                           ;CANlib.h: 825: tamp = filter & 0x00000007;
  9673  00114E  0E07               	movlw	7
  9674  001150  0100               	movlb	0	; () banked
  9675  001152  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9676  001154  0100               	movlb	0	; () banked
  9677  001156  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9678  001158  0E00               	movlw	0
  9679  00115A  0100               	movlb	0	; () banked
  9680  00115C  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9681  00115E  0100               	movlb	0	; () banked
  9682  001160  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9683  001162  0E00               	movlw	0
  9684  001164  0100               	movlb	0	; () banked
  9685  001166  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9686  001168  0100               	movlb	0	; () banked
  9687  00116A  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9688  00116C  0E00               	movlw	0
  9689  00116E  0100               	movlb	0	; () banked
  9690  001170  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9691  001172  0100               	movlb	0	; () banked
  9692  001174  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9693                           
  9694                           ; BSR set to: 0
  9695                           ;CANlib.h: 826: tamp = tamp << 5;
  9696  001176  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9697  00117A  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9698  00117E  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9699  001182  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9700  001186  0E05               	movlw	5
  9701  001188                     u8995:
  9702  001188  90D8               	bcf	status,0,c
  9703  00118A  0100               	movlb	0	; () banked
  9704  00118C  3765               	rlcf	??_CANSetFilter& (0+255),f,b
  9705  00118E  3766               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9706  001190  3767               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9707  001192  3768               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9708  001194  2EE8               	decfsz	wreg,f,c
  9709  001196  D7F8               	goto	u8995
  9710  001198  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9711  00119C  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9712  0011A0  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9713  0011A4  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9714                           
  9715                           ; BSR set to: 0
  9716                           ;CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  9717  0011A8  C06A  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  9718  0011AC                     l6669:
  9719                           
  9720                           ; BSR set to: 0
  9721                           ;CANlib.h: 828: }
  9722                           ;CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  9723  0011AC  0100               	movlb	0	; () banked
  9724  0011AE  5169               	movf	CANSetFilter@numBuffer& (0+255),w,b
  9725  0011B0  0100               	movlb	0	; () banked
  9726  0011B2  A4D8               	btfss	status,2,c
  9727  0011B4  D089               	goto	l6703
  9728                           
  9729                           ; BSR set to: 0
  9730  0011B6  0EF7               	movlw	247
  9731  0011B8  0100               	movlb	0	; () banked
  9732  0011BA  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  9733  0011BC  A4D8               	btfss	status,2,c
  9734  0011BE  D084               	goto	l6703
  9735                           
  9736                           ; BSR set to: 0
  9737                           ;CANlib.h: 832: {
  9738                           ;CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  9739  0011C0  010F               	movlb	15	; () banked
  9740  0011C2  8701               	bsf	1,3,b	;volatile
  9741                           
  9742                           ; BSR set to: 15
  9743                           ;CANlib.h: 835: tamp = filter & 0x000000FF;
  9744  0011C4  0100               	movlb	0	; () banked
  9745  0011C6  5160               	movf	CANSetFilter@filter& (0+255),w,b
  9746  0011C8  0100               	movlb	0	; () banked
  9747  0011CA  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9748  0011CC  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9749  0011CE  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9750  0011D0  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9751                           
  9752                           ; BSR set to: 0
  9753                           ;CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  9754  0011D2  C06A  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;CANlib.h: 838: tamp = filter & 0x0000FF00;
  9758  0011D6  0E00               	movlw	0
  9759  0011D8  0100               	movlb	0	; () banked
  9760  0011DA  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9761  0011DC  0100               	movlb	0	; () banked
  9762  0011DE  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9763  0011E0  0EFF               	movlw	255
  9764  0011E2  0100               	movlb	0	; () banked
  9765  0011E4  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9766  0011E6  0100               	movlb	0	; () banked
  9767  0011E8  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9768  0011EA  0E00               	movlw	0
  9769  0011EC  0100               	movlb	0	; () banked
  9770  0011EE  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9771  0011F0  0100               	movlb	0	; () banked
  9772  0011F2  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9773  0011F4  0E00               	movlw	0
  9774  0011F6  0100               	movlb	0	; () banked
  9775  0011F8  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9776  0011FA  0100               	movlb	0	; () banked
  9777  0011FC  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9778                           
  9779                           ; BSR set to: 0
  9780                           ;CANlib.h: 839: tamp = tamp >> 8;
  9781  0011FE  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9782  001202  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9783  001206  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9784  00120A  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9785  00120E  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
  9786  001212  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  9787  001216  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  9788  00121A  0100               	movlb	0	; () banked
  9789  00121C  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
  9790  00121E  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9791  001222  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9792  001226  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9793  00122A  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  9797  00122E  C06A  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;CANlib.h: 842: if (filter & 0x00010000)
  9801  001232  0100               	movlb	0	; () banked
  9802  001234  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  9803  001236  D003               	goto	l469
  9804                           
  9805                           ; BSR set to: 0
  9806                           ;CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  9807  001238  010F               	movlb	15	; () banked
  9808  00123A  8101               	bsf	1,0,b	;volatile
  9809  00123C  D002               	goto	l470
  9810  00123E                     l469:
  9811                           
  9812                           ; BSR set to: 0
  9813                           ;CANlib.h: 844: else
  9814                           ;CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  9815  00123E  010F               	movlb	15	; () banked
  9816  001240  9101               	bcf	1,0,b	;volatile
  9817  001242                     l470:
  9818                           
  9819                           ; BSR set to: 15
  9820                           ;CANlib.h: 847: if (filter & 0x00020000)
  9821  001242  0100               	movlb	0	; () banked
  9822  001244  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  9823  001246  D003               	goto	l471
  9824                           
  9825                           ; BSR set to: 0
  9826                           ;CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  9827  001248  010F               	movlb	15	; () banked
  9828  00124A  8301               	bsf	1,1,b	;volatile
  9829  00124C  D002               	goto	l472
  9830  00124E                     l471:
  9831                           
  9832                           ; BSR set to: 0
  9833                           ;CANlib.h: 849: else
  9834                           ;CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  9835  00124E  010F               	movlb	15	; () banked
  9836  001250  9301               	bcf	1,1,b	;volatile
  9837  001252                     l472:
  9838                           
  9839                           ; BSR set to: 15
  9840                           ;CANlib.h: 852: if (filter & 0x00040000)
  9841  001252  0100               	movlb	0	; () banked
  9842  001254  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  9843  001256  D003               	goto	l473
  9844                           
  9845                           ; BSR set to: 0
  9846                           ;CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  9847  001258  010F               	movlb	15	; () banked
  9848  00125A  8B01               	bsf	1,5,b	;volatile
  9849  00125C  D002               	goto	l474
  9850  00125E                     l473:
  9851                           
  9852                           ; BSR set to: 0
  9853                           ;CANlib.h: 854: else
  9854                           ;CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  9855  00125E  010F               	movlb	15	; () banked
  9856  001260  9B01               	bcf	1,5,b	;volatile
  9857  001262                     l474:
  9858                           
  9859                           ; BSR set to: 15
  9860                           ;CANlib.h: 857: if (filter & 0x00080000)
  9861  001262  0100               	movlb	0	; () banked
  9862  001264  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  9863  001266  D003               	goto	l475
  9864                           
  9865                           ; BSR set to: 0
  9866                           ;CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  9867  001268  010F               	movlb	15	; () banked
  9868  00126A  8D01               	bsf	1,6,b	;volatile
  9869  00126C  D002               	goto	l476
  9870  00126E                     l475:
  9871                           
  9872                           ; BSR set to: 0
  9873                           ;CANlib.h: 859: else
  9874                           ;CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  9875  00126E  010F               	movlb	15	; () banked
  9876  001270  9D01               	bcf	1,6,b	;volatile
  9877  001272                     l476:
  9878                           
  9879                           ; BSR set to: 15
  9880                           ;CANlib.h: 862: if (filter & 0x00100000)
  9881  001272  0100               	movlb	0	; () banked
  9882  001274  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  9883  001276  D003               	goto	l477
  9884                           
  9885                           ; BSR set to: 0
  9886                           ;CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  9887  001278  010F               	movlb	15	; () banked
  9888  00127A  8F01               	bsf	1,7,b	;volatile
  9889  00127C  D002               	goto	l6697
  9890  00127E                     l477:
  9891                           
  9892                           ; BSR set to: 0
  9893                           ;CANlib.h: 864: else
  9894                           ;CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  9895  00127E  010F               	movlb	15	; () banked
  9896  001280  9F01               	bcf	1,7,b	;volatile
  9897  001282                     l6697:
  9898                           
  9899                           ; BSR set to: 15
  9900                           ;CANlib.h: 867: tamp = (filter >> 21);
  9901  001282  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
  9902  001286  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9903  00128A  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9904  00128E  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9905  001292  0E16               	movlw	22
  9906  001294  D006               	goto	u9070
  9907  001296                     u9075:
  9908  001296  0100               	movlb	0	; () banked
  9909  001298  90D8               	bcf	status,0,c
  9910  00129A  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9911  00129C  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9912  00129E  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9913  0012A0  3365               	rrcf	??_CANSetFilter& (0+255),f,b
  9914  0012A2                     u9070:
  9915  0012A2  2EE8               	decfsz	wreg,f,c
  9916  0012A4  D7F8               	goto	u9075
  9917  0012A6  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
  9918  0012AA  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9919  0012AE  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9920  0012B2  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9921                           
  9922                           ; BSR set to: 0
  9923                           ;CANlib.h: 868: tamp = tamp & 0x000000FF;
  9924  0012B6  0100               	movlb	0	; () banked
  9925  0012B8  516A               	movf	CANSetFilter@tamp& (0+255),w,b
  9926  0012BA  0100               	movlb	0	; () banked
  9927  0012BC  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9928  0012BE  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9929  0012C0  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9930  0012C2  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9931                           
  9932                           ; BSR set to: 0
  9933                           ;CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  9934  0012C4  C06A  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  9935  0012C8                     l6703:
  9936                           
  9937                           ; BSR set to: 0
  9938                           ;CANlib.h: 870: }
  9939                           ;CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  9940  0012C8  0100               	movlb	0	; () banked
  9941  0012CA  0569               	decf	CANSetFilter@numBuffer& (0+255),w,b
  9942  0012CC  A4D8               	btfss	status,2,c
  9943  0012CE  D089               	goto	l6737
  9944                           
  9945                           ; BSR set to: 0
  9946  0012D0  0EF7               	movlw	247
  9947  0012D2  0100               	movlb	0	; () banked
  9948  0012D4  1964               	xorwf	CANSetFilter@type& (0+255),w,b
  9949  0012D6  A4D8               	btfss	status,2,c
  9950  0012D8  D084               	goto	l6737
  9951                           
  9952                           ; BSR set to: 0
  9953                           ;CANlib.h: 873: {
  9954                           ;CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  9955  0012DA  010F               	movlb	15	; () banked
  9956  0012DC  8705               	bsf	5,3,b	;volatile
  9957                           
  9958                           ; BSR set to: 15
  9959                           ;CANlib.h: 876: tamp = filter & 0x000000FF;
  9960  0012DE  0100               	movlb	0	; () banked
  9961  0012E0  5160               	movf	CANSetFilter@filter& (0+255),w,b
  9962  0012E2  0100               	movlb	0	; () banked
  9963  0012E4  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9964  0012E6  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9965  0012E8  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9966  0012EA  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9967                           
  9968                           ; BSR set to: 0
  9969                           ;CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  9970  0012EC  C06A  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  9971                           
  9972                           ; BSR set to: 0
  9973                           ;CANlib.h: 879: tamp = filter & 0x0000FF00;
  9974  0012F0  0E00               	movlw	0
  9975  0012F2  0100               	movlb	0	; () banked
  9976  0012F4  1560               	andwf	CANSetFilter@filter& (0+255),w,b
  9977  0012F6  0100               	movlb	0	; () banked
  9978  0012F8  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
  9979  0012FA  0EFF               	movlw	255
  9980  0012FC  0100               	movlb	0	; () banked
  9981  0012FE  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9982  001300  0100               	movlb	0	; () banked
  9983  001302  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9984  001304  0E00               	movlw	0
  9985  001306  0100               	movlb	0	; () banked
  9986  001308  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9987  00130A  0100               	movlb	0	; () banked
  9988  00130C  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9989  00130E  0E00               	movlw	0
  9990  001310  0100               	movlb	0	; () banked
  9991  001312  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9992  001314  0100               	movlb	0	; () banked
  9993  001316  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9994                           
  9995                           ; BSR set to: 0
  9996                           ;CANlib.h: 880: tamp = tamp >> 8;
  9997  001318  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
  9998  00131C  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9999  001320  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10000  001324  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10001  001328  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
 10002  00132C  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10003  001330  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10004  001334  0100               	movlb	0	; () banked
 10005  001336  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
 10006  001338  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 10007  00133C  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10008  001340  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10009  001344  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10010                           
 10011                           ; BSR set to: 0
 10012                           ;CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
 10013  001348  C06A  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 10014                           
 10015                           ; BSR set to: 0
 10016                           ;CANlib.h: 883: if (filter & 0x00010000)
 10017  00134C  0100               	movlb	0	; () banked
 10018  00134E  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10019  001350  D003               	goto	l480
 10020                           
 10021                           ; BSR set to: 0
 10022                           ;CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
 10023  001352  010F               	movlb	15	; () banked
 10024  001354  8105               	bsf	5,0,b	;volatile
 10025  001356  D002               	goto	l481
 10026  001358                     l480:
 10027                           
 10028                           ; BSR set to: 0
 10029                           ;CANlib.h: 885: else
 10030                           ;CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
 10031  001358  010F               	movlb	15	; () banked
 10032  00135A  9105               	bcf	5,0,b	;volatile
 10033  00135C                     l481:
 10034                           
 10035                           ; BSR set to: 15
 10036                           ;CANlib.h: 888: if (filter & 0x00020000)
 10037  00135C  0100               	movlb	0	; () banked
 10038  00135E  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10039  001360  D003               	goto	l482
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
 10043  001362  010F               	movlb	15	; () banked
 10044  001364  8305               	bsf	5,1,b	;volatile
 10045  001366  D002               	goto	l483
 10046  001368                     l482:
 10047                           
 10048                           ; BSR set to: 0
 10049                           ;CANlib.h: 890: else
 10050                           ;CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
 10051  001368  010F               	movlb	15	; () banked
 10052  00136A  9305               	bcf	5,1,b	;volatile
 10053  00136C                     l483:
 10054                           
 10055                           ; BSR set to: 15
 10056                           ;CANlib.h: 893: if (filter & 0x00040000)
 10057  00136C  0100               	movlb	0	; () banked
 10058  00136E  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10059  001370  D003               	goto	l484
 10060                           
 10061                           ; BSR set to: 0
 10062                           ;CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
 10063  001372  010F               	movlb	15	; () banked
 10064  001374  8B05               	bsf	5,5,b	;volatile
 10065  001376  D002               	goto	l485
 10066  001378                     l484:
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;CANlib.h: 895: else
 10070                           ;CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
 10071  001378  010F               	movlb	15	; () banked
 10072  00137A  9B05               	bcf	5,5,b	;volatile
 10073  00137C                     l485:
 10074                           
 10075                           ; BSR set to: 15
 10076                           ;CANlib.h: 898: if (filter & 0x00080000)
 10077  00137C  0100               	movlb	0	; () banked
 10078  00137E  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10079  001380  D003               	goto	l486
 10080                           
 10081                           ; BSR set to: 0
 10082                           ;CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
 10083  001382  010F               	movlb	15	; () banked
 10084  001384  8D05               	bsf	5,6,b	;volatile
 10085  001386  D002               	goto	l487
 10086  001388                     l486:
 10087                           
 10088                           ; BSR set to: 0
 10089                           ;CANlib.h: 900: else
 10090                           ;CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
 10091  001388  010F               	movlb	15	; () banked
 10092  00138A  9D05               	bcf	5,6,b	;volatile
 10093  00138C                     l487:
 10094                           
 10095                           ; BSR set to: 15
 10096                           ;CANlib.h: 903: if (filter & 0x00100000)
 10097  00138C  0100               	movlb	0	; () banked
 10098  00138E  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10099  001390  D003               	goto	l488
 10100                           
 10101                           ; BSR set to: 0
 10102                           ;CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
 10103  001392  010F               	movlb	15	; () banked
 10104  001394  8F05               	bsf	5,7,b	;volatile
 10105  001396  D002               	goto	l6731
 10106  001398                     l488:
 10107                           
 10108                           ; BSR set to: 0
 10109                           ;CANlib.h: 905: else
 10110                           ;CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
 10111  001398  010F               	movlb	15	; () banked
 10112  00139A  9F05               	bcf	5,7,b	;volatile
 10113  00139C                     l6731:
 10114                           
 10115                           ; BSR set to: 15
 10116                           ;CANlib.h: 908: tamp = (filter >> 21);
 10117  00139C  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
 10118  0013A0  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10119  0013A4  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10120  0013A8  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10121  0013AC  0E16               	movlw	22
 10122  0013AE  D006               	goto	u9150
 10123  0013B0                     u9155:
 10124  0013B0  0100               	movlb	0	; () banked
 10125  0013B2  90D8               	bcf	status,0,c
 10126  0013B4  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10127  0013B6  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10128  0013B8  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10129  0013BA  3365               	rrcf	??_CANSetFilter& (0+255),f,b
 10130  0013BC                     u9150:
 10131  0013BC  2EE8               	decfsz	wreg,f,c
 10132  0013BE  D7F8               	goto	u9155
 10133  0013C0  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 10134  0013C4  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10135  0013C8  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10136  0013CC  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10137                           
 10138                           ; BSR set to: 0
 10139                           ;CANlib.h: 909: tamp = tamp & 0x000000FF;
 10140  0013D0  0100               	movlb	0	; () banked
 10141  0013D2  516A               	movf	CANSetFilter@tamp& (0+255),w,b
 10142  0013D4  0100               	movlb	0	; () banked
 10143  0013D6  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10144  0013D8  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10145  0013DA  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10146  0013DC  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
 10150  0013DE  C06A  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 10151  0013E2                     l6737:
 10152                           
 10153                           ; BSR set to: 0
 10154                           ;CANlib.h: 911: }
 10155                           ;CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 10156  0013E2  0E02               	movlw	2
 10157  0013E4  0100               	movlb	0	; () banked
 10158  0013E6  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10159  0013E8  A4D8               	btfss	status,2,c
 10160  0013EA  D089               	goto	l6771
 10161                           
 10162                           ; BSR set to: 0
 10163  0013EC  0EF7               	movlw	247
 10164  0013EE  0100               	movlb	0	; () banked
 10165  0013F0  1964               	xorwf	CANSetFilter@type& (0+255),w,b
 10166  0013F2  A4D8               	btfss	status,2,c
 10167  0013F4  D084               	goto	l6771
 10168                           
 10169                           ; BSR set to: 0
 10170                           ;CANlib.h: 915: {
 10171                           ;CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
 10172  0013F6  010F               	movlb	15	; () banked
 10173  0013F8  8709               	bsf	9,3,b	;volatile
 10174                           
 10175                           ; BSR set to: 15
 10176                           ;CANlib.h: 918: tamp = filter & 0x000000FF;
 10177  0013FA  0100               	movlb	0	; () banked
 10178  0013FC  5160               	movf	CANSetFilter@filter& (0+255),w,b
 10179  0013FE  0100               	movlb	0	; () banked
 10180  001400  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10181  001402  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10182  001404  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10183  001406  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10184                           
 10185                           ; BSR set to: 0
 10186                           ;CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
 10187  001408  C06A  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 10188                           
 10189                           ; BSR set to: 0
 10190                           ;CANlib.h: 921: tamp = filter & 0x0000FF00;
 10191  00140C  0E00               	movlw	0
 10192  00140E  0100               	movlb	0	; () banked
 10193  001410  1560               	andwf	CANSetFilter@filter& (0+255),w,b
 10194  001412  0100               	movlb	0	; () banked
 10195  001414  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10196  001416  0EFF               	movlw	255
 10197  001418  0100               	movlb	0	; () banked
 10198  00141A  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10199  00141C  0100               	movlb	0	; () banked
 10200  00141E  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10201  001420  0E00               	movlw	0
 10202  001422  0100               	movlb	0	; () banked
 10203  001424  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10204  001426  0100               	movlb	0	; () banked
 10205  001428  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10206  00142A  0E00               	movlw	0
 10207  00142C  0100               	movlb	0	; () banked
 10208  00142E  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10209  001430  0100               	movlb	0	; () banked
 10210  001432  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10211                           
 10212                           ; BSR set to: 0
 10213                           ;CANlib.h: 922: tamp = tamp >> 8;
 10214  001434  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
 10215  001438  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10216  00143C  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10217  001440  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10218  001444  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
 10219  001448  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10220  00144C  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10221  001450  0100               	movlb	0	; () banked
 10222  001452  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
 10223  001454  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 10224  001458  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10225  00145C  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10226  001460  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10227                           
 10228                           ; BSR set to: 0
 10229                           ;CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
 10230  001464  C06A  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 10231                           
 10232                           ; BSR set to: 0
 10233                           ;CANlib.h: 925: if (filter & 0x00010000)
 10234  001468  0100               	movlb	0	; () banked
 10235  00146A  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10236  00146C  D003               	goto	l491
 10237                           
 10238                           ; BSR set to: 0
 10239                           ;CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
 10240  00146E  010F               	movlb	15	; () banked
 10241  001470  8109               	bsf	9,0,b	;volatile
 10242  001472  D002               	goto	l492
 10243  001474                     l491:
 10244                           
 10245                           ; BSR set to: 0
 10246                           ;CANlib.h: 927: else
 10247                           ;CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
 10248  001474  010F               	movlb	15	; () banked
 10249  001476  9109               	bcf	9,0,b	;volatile
 10250  001478                     l492:
 10251                           
 10252                           ; BSR set to: 15
 10253                           ;CANlib.h: 930: if (filter & 0x00020000)
 10254  001478  0100               	movlb	0	; () banked
 10255  00147A  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10256  00147C  D003               	goto	l493
 10257                           
 10258                           ; BSR set to: 0
 10259                           ;CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
 10260  00147E  010F               	movlb	15	; () banked
 10261  001480  8309               	bsf	9,1,b	;volatile
 10262  001482  D002               	goto	l494
 10263  001484                     l493:
 10264                           
 10265                           ; BSR set to: 0
 10266                           ;CANlib.h: 932: else
 10267                           ;CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
 10268  001484  010F               	movlb	15	; () banked
 10269  001486  9309               	bcf	9,1,b	;volatile
 10270  001488                     l494:
 10271                           
 10272                           ; BSR set to: 15
 10273                           ;CANlib.h: 935: if (filter & 0x00040000)
 10274  001488  0100               	movlb	0	; () banked
 10275  00148A  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10276  00148C  D003               	goto	l495
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
 10280  00148E  010F               	movlb	15	; () banked
 10281  001490  8B09               	bsf	9,5,b	;volatile
 10282  001492  D002               	goto	l496
 10283  001494                     l495:
 10284                           
 10285                           ; BSR set to: 0
 10286                           ;CANlib.h: 937: else
 10287                           ;CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
 10288  001494  010F               	movlb	15	; () banked
 10289  001496  9B09               	bcf	9,5,b	;volatile
 10290  001498                     l496:
 10291                           
 10292                           ; BSR set to: 15
 10293                           ;CANlib.h: 940: if (filter & 0x00080000)
 10294  001498  0100               	movlb	0	; () banked
 10295  00149A  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10296  00149C  D003               	goto	l497
 10297                           
 10298                           ; BSR set to: 0
 10299                           ;CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
 10300  00149E  010F               	movlb	15	; () banked
 10301  0014A0  8D09               	bsf	9,6,b	;volatile
 10302  0014A2  D002               	goto	l498
 10303  0014A4                     l497:
 10304                           
 10305                           ; BSR set to: 0
 10306                           ;CANlib.h: 942: else
 10307                           ;CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
 10308  0014A4  010F               	movlb	15	; () banked
 10309  0014A6  9D09               	bcf	9,6,b	;volatile
 10310  0014A8                     l498:
 10311                           
 10312                           ; BSR set to: 15
 10313                           ;CANlib.h: 945: if (filter & 0x00100000)
 10314  0014A8  0100               	movlb	0	; () banked
 10315  0014AA  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10316  0014AC  D003               	goto	l499
 10317                           
 10318                           ; BSR set to: 0
 10319                           ;CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
 10320  0014AE  010F               	movlb	15	; () banked
 10321  0014B0  8F09               	bsf	9,7,b	;volatile
 10322  0014B2  D002               	goto	l6765
 10323  0014B4                     l499:
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;CANlib.h: 947: else
 10327                           ;CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
 10328  0014B4  010F               	movlb	15	; () banked
 10329  0014B6  9F09               	bcf	9,7,b	;volatile
 10330  0014B8                     l6765:
 10331                           
 10332                           ; BSR set to: 15
 10333                           ;CANlib.h: 950: tamp = (filter >> 21);
 10334  0014B8  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
 10335  0014BC  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10336  0014C0  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10337  0014C4  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10338  0014C8  0E16               	movlw	22
 10339  0014CA  D006               	goto	u9230
 10340  0014CC                     u9235:
 10341  0014CC  0100               	movlb	0	; () banked
 10342  0014CE  90D8               	bcf	status,0,c
 10343  0014D0  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10344  0014D2  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10345  0014D4  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10346  0014D6  3365               	rrcf	??_CANSetFilter& (0+255),f,b
 10347  0014D8                     u9230:
 10348  0014D8  2EE8               	decfsz	wreg,f,c
 10349  0014DA  D7F8               	goto	u9235
 10350  0014DC  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 10351  0014E0  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10352  0014E4  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10353  0014E8  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10354                           
 10355                           ; BSR set to: 0
 10356                           ;CANlib.h: 951: tamp = tamp & 0x000000FF;
 10357  0014EC  0100               	movlb	0	; () banked
 10358  0014EE  516A               	movf	CANSetFilter@tamp& (0+255),w,b
 10359  0014F0  0100               	movlb	0	; () banked
 10360  0014F2  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10361  0014F4  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10362  0014F6  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10363  0014F8  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10364                           
 10365                           ; BSR set to: 0
 10366                           ;CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
 10367  0014FA  C06A  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 10368  0014FE                     l6771:
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;CANlib.h: 953: }
 10372                           ;CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 10373  0014FE  0E03               	movlw	3
 10374  001500  0100               	movlb	0	; () banked
 10375  001502  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10376  001504  A4D8               	btfss	status,2,c
 10377  001506  D089               	goto	l6805
 10378                           
 10379                           ; BSR set to: 0
 10380  001508  0EF7               	movlw	247
 10381  00150A  0100               	movlb	0	; () banked
 10382  00150C  1964               	xorwf	CANSetFilter@type& (0+255),w,b
 10383  00150E  A4D8               	btfss	status,2,c
 10384  001510  D084               	goto	l6805
 10385                           
 10386                           ; BSR set to: 0
 10387                           ;CANlib.h: 956: {
 10388                           ;CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
 10389  001512  010F               	movlb	15	; () banked
 10390  001514  870D               	bsf	13,3,b	;volatile
 10391                           
 10392                           ; BSR set to: 15
 10393                           ;CANlib.h: 959: tamp = filter & 0x000000FF;
 10394  001516  0100               	movlb	0	; () banked
 10395  001518  5160               	movf	CANSetFilter@filter& (0+255),w,b
 10396  00151A  0100               	movlb	0	; () banked
 10397  00151C  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10398  00151E  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10399  001520  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10400  001522  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10401                           
 10402                           ; BSR set to: 0
 10403                           ;CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
 10404  001524  C06A  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 10405                           
 10406                           ; BSR set to: 0
 10407                           ;CANlib.h: 962: tamp = filter & 0x0000FF00;
 10408  001528  0E00               	movlw	0
 10409  00152A  0100               	movlb	0	; () banked
 10410  00152C  1560               	andwf	CANSetFilter@filter& (0+255),w,b
 10411  00152E  0100               	movlb	0	; () banked
 10412  001530  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10413  001532  0EFF               	movlw	255
 10414  001534  0100               	movlb	0	; () banked
 10415  001536  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10416  001538  0100               	movlb	0	; () banked
 10417  00153A  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10418  00153C  0E00               	movlw	0
 10419  00153E  0100               	movlb	0	; () banked
 10420  001540  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10421  001542  0100               	movlb	0	; () banked
 10422  001544  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10423  001546  0E00               	movlw	0
 10424  001548  0100               	movlb	0	; () banked
 10425  00154A  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10426  00154C  0100               	movlb	0	; () banked
 10427  00154E  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10428                           
 10429                           ; BSR set to: 0
 10430                           ;CANlib.h: 963: tamp = tamp >> 8;
 10431  001550  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
 10432  001554  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10433  001558  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10434  00155C  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10435  001560  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
 10436  001564  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10437  001568  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10438  00156C  0100               	movlb	0	; () banked
 10439  00156E  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
 10440  001570  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 10441  001574  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10442  001578  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10443  00157C  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10444                           
 10445                           ; BSR set to: 0
 10446                           ;CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
 10447  001580  C06A  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 10448                           
 10449                           ; BSR set to: 0
 10450                           ;CANlib.h: 966: if (filter & 0x00010000)
 10451  001584  0100               	movlb	0	; () banked
 10452  001586  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10453  001588  D003               	goto	l502
 10454                           
 10455                           ; BSR set to: 0
 10456                           ;CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
 10457  00158A  010F               	movlb	15	; () banked
 10458  00158C  810D               	bsf	13,0,b	;volatile
 10459  00158E  D002               	goto	l503
 10460  001590                     l502:
 10461                           
 10462                           ; BSR set to: 0
 10463                           ;CANlib.h: 968: else
 10464                           ;CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
 10465  001590  010F               	movlb	15	; () banked
 10466  001592  910D               	bcf	13,0,b	;volatile
 10467  001594                     l503:
 10468                           
 10469                           ; BSR set to: 15
 10470                           ;CANlib.h: 971: if (filter & 0x00020000)
 10471  001594  0100               	movlb	0	; () banked
 10472  001596  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10473  001598  D003               	goto	l504
 10474                           
 10475                           ; BSR set to: 0
 10476                           ;CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
 10477  00159A  010F               	movlb	15	; () banked
 10478  00159C  830D               	bsf	13,1,b	;volatile
 10479  00159E  D002               	goto	l505
 10480  0015A0                     l504:
 10481                           
 10482                           ; BSR set to: 0
 10483                           ;CANlib.h: 973: else
 10484                           ;CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
 10485  0015A0  010F               	movlb	15	; () banked
 10486  0015A2  930D               	bcf	13,1,b	;volatile
 10487  0015A4                     l505:
 10488                           
 10489                           ; BSR set to: 15
 10490                           ;CANlib.h: 976: if (filter & 0x00040000)
 10491  0015A4  0100               	movlb	0	; () banked
 10492  0015A6  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10493  0015A8  D003               	goto	l506
 10494                           
 10495                           ; BSR set to: 0
 10496                           ;CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
 10497  0015AA  010F               	movlb	15	; () banked
 10498  0015AC  8B0D               	bsf	13,5,b	;volatile
 10499  0015AE  D002               	goto	l507
 10500  0015B0                     l506:
 10501                           
 10502                           ; BSR set to: 0
 10503                           ;CANlib.h: 978: else
 10504                           ;CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
 10505  0015B0  010F               	movlb	15	; () banked
 10506  0015B2  9B0D               	bcf	13,5,b	;volatile
 10507  0015B4                     l507:
 10508                           
 10509                           ; BSR set to: 15
 10510                           ;CANlib.h: 981: if (filter & 0x00080000)
 10511  0015B4  0100               	movlb	0	; () banked
 10512  0015B6  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10513  0015B8  D003               	goto	l508
 10514                           
 10515                           ; BSR set to: 0
 10516                           ;CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
 10517  0015BA  010F               	movlb	15	; () banked
 10518  0015BC  8D0D               	bsf	13,6,b	;volatile
 10519  0015BE  D002               	goto	l509
 10520  0015C0                     l508:
 10521                           
 10522                           ; BSR set to: 0
 10523                           ;CANlib.h: 983: else
 10524                           ;CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
 10525  0015C0  010F               	movlb	15	; () banked
 10526  0015C2  9D0D               	bcf	13,6,b	;volatile
 10527  0015C4                     l509:
 10528                           
 10529                           ; BSR set to: 15
 10530                           ;CANlib.h: 986: if (filter & 0x00100000)
 10531  0015C4  0100               	movlb	0	; () banked
 10532  0015C6  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10533  0015C8  D003               	goto	l510
 10534                           
 10535                           ; BSR set to: 0
 10536                           ;CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
 10537  0015CA  010F               	movlb	15	; () banked
 10538  0015CC  8F0D               	bsf	13,7,b	;volatile
 10539  0015CE  D002               	goto	l6799
 10540  0015D0                     l510:
 10541                           
 10542                           ; BSR set to: 0
 10543                           ;CANlib.h: 988: else
 10544                           ;CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
 10545  0015D0  010F               	movlb	15	; () banked
 10546  0015D2  9F0D               	bcf	13,7,b	;volatile
 10547  0015D4                     l6799:
 10548                           
 10549                           ; BSR set to: 15
 10550                           ;CANlib.h: 991: tamp = (filter >> 21);
 10551  0015D4  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
 10552  0015D8  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10553  0015DC  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10554  0015E0  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10555  0015E4  0E16               	movlw	22
 10556  0015E6  D006               	goto	u9310
 10557  0015E8                     u9315:
 10558  0015E8  0100               	movlb	0	; () banked
 10559  0015EA  90D8               	bcf	status,0,c
 10560  0015EC  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10561  0015EE  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10562  0015F0  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10563  0015F2  3365               	rrcf	??_CANSetFilter& (0+255),f,b
 10564  0015F4                     u9310:
 10565  0015F4  2EE8               	decfsz	wreg,f,c
 10566  0015F6  D7F8               	goto	u9315
 10567  0015F8  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 10568  0015FC  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10569  001600  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10570  001604  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10571                           
 10572                           ; BSR set to: 0
 10573                           ;CANlib.h: 992: tamp = tamp & 0x000000FF;
 10574  001608  0100               	movlb	0	; () banked
 10575  00160A  516A               	movf	CANSetFilter@tamp& (0+255),w,b
 10576  00160C  0100               	movlb	0	; () banked
 10577  00160E  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10578  001610  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10579  001612  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10580  001614  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10581                           
 10582                           ; BSR set to: 0
 10583                           ;CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
 10584  001616  C06A  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 10585  00161A                     l6805:
 10586                           
 10587                           ; BSR set to: 0
 10588                           ;CANlib.h: 994: }
 10589                           ;CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 10590  00161A  0E04               	movlw	4
 10591  00161C  0100               	movlb	0	; () banked
 10592  00161E  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10593  001620  A4D8               	btfss	status,2,c
 10594  001622  D089               	goto	l6839
 10595                           
 10596                           ; BSR set to: 0
 10597  001624  0EF7               	movlw	247
 10598  001626  0100               	movlb	0	; () banked
 10599  001628  1964               	xorwf	CANSetFilter@type& (0+255),w,b
 10600  00162A  A4D8               	btfss	status,2,c
 10601  00162C  D084               	goto	l6839
 10602                           
 10603                           ; BSR set to: 0
 10604                           ;CANlib.h: 997: {
 10605                           ;CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
 10606  00162E  010F               	movlb	15	; () banked
 10607  001630  8711               	bsf	17,3,b	;volatile
 10608                           
 10609                           ; BSR set to: 15
 10610                           ;CANlib.h: 1000: tamp = filter & 0x000000FF;
 10611  001632  0100               	movlb	0	; () banked
 10612  001634  5160               	movf	CANSetFilter@filter& (0+255),w,b
 10613  001636  0100               	movlb	0	; () banked
 10614  001638  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10615  00163A  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10616  00163C  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10617  00163E  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10618                           
 10619                           ; BSR set to: 0
 10620                           ;CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
 10621  001640  C06A  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 10622                           
 10623                           ; BSR set to: 0
 10624                           ;CANlib.h: 1003: tamp = filter & 0x0000FF00;
 10625  001644  0E00               	movlw	0
 10626  001646  0100               	movlb	0	; () banked
 10627  001648  1560               	andwf	CANSetFilter@filter& (0+255),w,b
 10628  00164A  0100               	movlb	0	; () banked
 10629  00164C  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10630  00164E  0EFF               	movlw	255
 10631  001650  0100               	movlb	0	; () banked
 10632  001652  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10633  001654  0100               	movlb	0	; () banked
 10634  001656  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10635  001658  0E00               	movlw	0
 10636  00165A  0100               	movlb	0	; () banked
 10637  00165C  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10638  00165E  0100               	movlb	0	; () banked
 10639  001660  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10640  001662  0E00               	movlw	0
 10641  001664  0100               	movlb	0	; () banked
 10642  001666  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10643  001668  0100               	movlb	0	; () banked
 10644  00166A  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10645                           
 10646                           ; BSR set to: 0
 10647                           ;CANlib.h: 1004: tamp = tamp >> 8;
 10648  00166C  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
 10649  001670  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10650  001674  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10651  001678  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10652  00167C  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
 10653  001680  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10654  001684  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10655  001688  0100               	movlb	0	; () banked
 10656  00168A  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
 10657  00168C  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 10658  001690  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10659  001694  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10660  001698  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10661                           
 10662                           ; BSR set to: 0
 10663                           ;CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
 10664  00169C  C06A  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 10665                           
 10666                           ; BSR set to: 0
 10667                           ;CANlib.h: 1007: if (filter & 0x00010000)
 10668  0016A0  0100               	movlb	0	; () banked
 10669  0016A2  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10670  0016A4  D003               	goto	l513
 10671                           
 10672                           ; BSR set to: 0
 10673                           ;CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 10674  0016A6  010F               	movlb	15	; () banked
 10675  0016A8  8111               	bsf	17,0,b	;volatile
 10676  0016AA  D002               	goto	l514
 10677  0016AC                     l513:
 10678                           
 10679                           ; BSR set to: 0
 10680                           ;CANlib.h: 1009: else
 10681                           ;CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 10682  0016AC  010F               	movlb	15	; () banked
 10683  0016AE  9111               	bcf	17,0,b	;volatile
 10684  0016B0                     l514:
 10685                           
 10686                           ; BSR set to: 15
 10687                           ;CANlib.h: 1012: if (filter & 0x00020000)
 10688  0016B0  0100               	movlb	0	; () banked
 10689  0016B2  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10690  0016B4  D003               	goto	l515
 10691                           
 10692                           ; BSR set to: 0
 10693                           ;CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 10694  0016B6  010F               	movlb	15	; () banked
 10695  0016B8  8311               	bsf	17,1,b	;volatile
 10696  0016BA  D002               	goto	l516
 10697  0016BC                     l515:
 10698                           
 10699                           ; BSR set to: 0
 10700                           ;CANlib.h: 1014: else
 10701                           ;CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 10702  0016BC  010F               	movlb	15	; () banked
 10703  0016BE  9311               	bcf	17,1,b	;volatile
 10704  0016C0                     l516:
 10705                           
 10706                           ; BSR set to: 15
 10707                           ;CANlib.h: 1017: if (filter & 0x00040000)
 10708  0016C0  0100               	movlb	0	; () banked
 10709  0016C2  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10710  0016C4  D003               	goto	l517
 10711                           
 10712                           ; BSR set to: 0
 10713                           ;CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 10714  0016C6  010F               	movlb	15	; () banked
 10715  0016C8  8B11               	bsf	17,5,b	;volatile
 10716  0016CA  D002               	goto	l518
 10717  0016CC                     l517:
 10718                           
 10719                           ; BSR set to: 0
 10720                           ;CANlib.h: 1019: else
 10721                           ;CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 10722  0016CC  010F               	movlb	15	; () banked
 10723  0016CE  9B11               	bcf	17,5,b	;volatile
 10724  0016D0                     l518:
 10725                           
 10726                           ; BSR set to: 15
 10727                           ;CANlib.h: 1022: if (filter & 0x00080000)
 10728  0016D0  0100               	movlb	0	; () banked
 10729  0016D2  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10730  0016D4  D003               	goto	l519
 10731                           
 10732                           ; BSR set to: 0
 10733                           ;CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 10734  0016D6  010F               	movlb	15	; () banked
 10735  0016D8  8D11               	bsf	17,6,b	;volatile
 10736  0016DA  D002               	goto	l520
 10737  0016DC                     l519:
 10738                           
 10739                           ; BSR set to: 0
 10740                           ;CANlib.h: 1024: else
 10741                           ;CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 10742  0016DC  010F               	movlb	15	; () banked
 10743  0016DE  9D11               	bcf	17,6,b	;volatile
 10744  0016E0                     l520:
 10745                           
 10746                           ; BSR set to: 15
 10747                           ;CANlib.h: 1027: if (filter & 0x00100000)
 10748  0016E0  0100               	movlb	0	; () banked
 10749  0016E2  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10750  0016E4  D003               	goto	l521
 10751                           
 10752                           ; BSR set to: 0
 10753                           ;CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 10754  0016E6  010F               	movlb	15	; () banked
 10755  0016E8  8F11               	bsf	17,7,b	;volatile
 10756  0016EA  D002               	goto	l6833
 10757  0016EC                     l521:
 10758                           
 10759                           ; BSR set to: 0
 10760                           ;CANlib.h: 1029: else
 10761                           ;CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 10762  0016EC  010F               	movlb	15	; () banked
 10763  0016EE  9F11               	bcf	17,7,b	;volatile
 10764  0016F0                     l6833:
 10765                           
 10766                           ; BSR set to: 15
 10767                           ;CANlib.h: 1032: tamp = (filter >> 21);
 10768  0016F0  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
 10769  0016F4  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10770  0016F8  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10771  0016FC  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10772  001700  0E16               	movlw	22
 10773  001702  D006               	goto	u9390
 10774  001704                     u9395:
 10775  001704  0100               	movlb	0	; () banked
 10776  001706  90D8               	bcf	status,0,c
 10777  001708  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10778  00170A  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10779  00170C  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10780  00170E  3365               	rrcf	??_CANSetFilter& (0+255),f,b
 10781  001710                     u9390:
 10782  001710  2EE8               	decfsz	wreg,f,c
 10783  001712  D7F8               	goto	u9395
 10784  001714  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 10785  001718  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10786  00171C  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10787  001720  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10788                           
 10789                           ; BSR set to: 0
 10790                           ;CANlib.h: 1033: tamp = tamp & 0x000000FF;
 10791  001724  0100               	movlb	0	; () banked
 10792  001726  516A               	movf	CANSetFilter@tamp& (0+255),w,b
 10793  001728  0100               	movlb	0	; () banked
 10794  00172A  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10795  00172C  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10796  00172E  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10797  001730  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10798                           
 10799                           ; BSR set to: 0
 10800                           ;CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 10801  001732  C06A  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 10802  001736                     l6839:
 10803                           
 10804                           ; BSR set to: 0
 10805                           ;CANlib.h: 1035: }
 10806                           ;CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 10807  001736  0E05               	movlw	5
 10808  001738  0100               	movlb	0	; () banked
 10809  00173A  1969               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10810  00173C  A4D8               	btfss	status,2,c
 10811  00173E  0012               	return	
 10812                           
 10813                           ; BSR set to: 0
 10814  001740  0EF7               	movlw	247
 10815  001742  0100               	movlb	0	; () banked
 10816  001744  1964               	xorwf	CANSetFilter@type& (0+255),w,b
 10817  001746  A4D8               	btfss	status,2,c
 10818  001748  0012               	return	
 10819                           
 10820                           ; BSR set to: 0
 10821                           ;CANlib.h: 1038: {
 10822                           ;CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 10823  00174A  010F               	movlb	15	; () banked
 10824  00174C  8715               	bsf	21,3,b	;volatile
 10825                           
 10826                           ; BSR set to: 15
 10827                           ;CANlib.h: 1041: tamp = filter & 0x000000FF;
 10828  00174E  0100               	movlb	0	; () banked
 10829  001750  5160               	movf	CANSetFilter@filter& (0+255),w,b
 10830  001752  0100               	movlb	0	; () banked
 10831  001754  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10832  001756  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10833  001758  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10834  00175A  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10835                           
 10836                           ; BSR set to: 0
 10837                           ;CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 10838  00175C  C06A  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 10839                           
 10840                           ; BSR set to: 0
 10841                           ;CANlib.h: 1044: tamp = filter & 0x0000FF00;
 10842  001760  0E00               	movlw	0
 10843  001762  0100               	movlb	0	; () banked
 10844  001764  1560               	andwf	CANSetFilter@filter& (0+255),w,b
 10845  001766  0100               	movlb	0	; () banked
 10846  001768  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 10847  00176A  0EFF               	movlw	255
 10848  00176C  0100               	movlb	0	; () banked
 10849  00176E  1561               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10850  001770  0100               	movlb	0	; () banked
 10851  001772  6F6B               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10852  001774  0E00               	movlw	0
 10853  001776  0100               	movlb	0	; () banked
 10854  001778  1562               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10855  00177A  0100               	movlb	0	; () banked
 10856  00177C  6F6C               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10857  00177E  0E00               	movlw	0
 10858  001780  0100               	movlb	0	; () banked
 10859  001782  1563               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10860  001784  0100               	movlb	0	; () banked
 10861  001786  6F6D               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10862                           
 10863                           ; BSR set to: 0
 10864                           ;CANlib.h: 1045: tamp = tamp >> 8;
 10865  001788  C06A  F065         	movff	CANSetFilter@tamp,??_CANSetFilter
 10866  00178C  C06B  F066         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10867  001790  C06C  F067         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10868  001794  C06D  F068         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10869  001798  C066  F065         	movff	??_CANSetFilter+1,??_CANSetFilter
 10870  00179C  C067  F066         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10871  0017A0  C068  F067         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10872  0017A4  0100               	movlb	0	; () banked
 10873  0017A6  6B68               	clrf	(??_CANSetFilter+3)& (0+255),b
 10874  0017A8  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 10875  0017AC  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10876  0017B0  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10877  0017B4  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10878                           
 10879                           ; BSR set to: 0
 10880                           ;CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 10881  0017B8  C06A  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 10882                           
 10883                           ; BSR set to: 0
 10884                           ;CANlib.h: 1048: if (filter & 0x00010000)
 10885  0017BC  0100               	movlb	0	; () banked
 10886  0017BE  A162               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10887  0017C0  D003               	goto	l524
 10888                           
 10889                           ; BSR set to: 0
 10890                           ;CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 10891  0017C2  010F               	movlb	15	; () banked
 10892  0017C4  8115               	bsf	21,0,b	;volatile
 10893  0017C6  D002               	goto	l525
 10894  0017C8                     l524:
 10895                           
 10896                           ; BSR set to: 0
 10897                           ;CANlib.h: 1050: else
 10898                           ;CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 10899  0017C8  010F               	movlb	15	; () banked
 10900  0017CA  9115               	bcf	21,0,b	;volatile
 10901  0017CC                     l525:
 10902                           
 10903                           ; BSR set to: 15
 10904                           ;CANlib.h: 1053: if (filter & 0x00020000)
 10905  0017CC  0100               	movlb	0	; () banked
 10906  0017CE  A362               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10907  0017D0  D003               	goto	l526
 10908                           
 10909                           ; BSR set to: 0
 10910                           ;CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 10911  0017D2  010F               	movlb	15	; () banked
 10912  0017D4  8315               	bsf	21,1,b	;volatile
 10913  0017D6  D002               	goto	l527
 10914  0017D8                     l526:
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;CANlib.h: 1055: else
 10918                           ;CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 10919  0017D8  010F               	movlb	15	; () banked
 10920  0017DA  9315               	bcf	21,1,b	;volatile
 10921  0017DC                     l527:
 10922                           
 10923                           ; BSR set to: 15
 10924                           ;CANlib.h: 1058: if (filter & 0x00040000)
 10925  0017DC  0100               	movlb	0	; () banked
 10926  0017DE  A562               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10927  0017E0  D003               	goto	l528
 10928                           
 10929                           ; BSR set to: 0
 10930                           ;CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 10931  0017E2  010F               	movlb	15	; () banked
 10932  0017E4  8B15               	bsf	21,5,b	;volatile
 10933  0017E6  D002               	goto	l529
 10934  0017E8                     l528:
 10935                           
 10936                           ; BSR set to: 0
 10937                           ;CANlib.h: 1060: else
 10938                           ;CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 10939  0017E8  010F               	movlb	15	; () banked
 10940  0017EA  9B15               	bcf	21,5,b	;volatile
 10941  0017EC                     l529:
 10942                           
 10943                           ; BSR set to: 15
 10944                           ;CANlib.h: 1063: if (filter & 0x00080000)
 10945  0017EC  0100               	movlb	0	; () banked
 10946  0017EE  A762               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10947  0017F0  D003               	goto	l530
 10948                           
 10949                           ; BSR set to: 0
 10950                           ;CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 10951  0017F2  010F               	movlb	15	; () banked
 10952  0017F4  8D15               	bsf	21,6,b	;volatile
 10953  0017F6  D002               	goto	l531
 10954  0017F8                     l530:
 10955                           
 10956                           ; BSR set to: 0
 10957                           ;CANlib.h: 1065: else
 10958                           ;CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 10959  0017F8  010F               	movlb	15	; () banked
 10960  0017FA  9D15               	bcf	21,6,b	;volatile
 10961  0017FC                     l531:
 10962                           
 10963                           ; BSR set to: 15
 10964                           ;CANlib.h: 1068: if (filter & 0x00100000)
 10965  0017FC  0100               	movlb	0	; () banked
 10966  0017FE  A962               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10967  001800  D003               	goto	l532
 10968                           
 10969                           ; BSR set to: 0
 10970                           ;CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 10971  001802  010F               	movlb	15	; () banked
 10972  001804  8F15               	bsf	21,7,b	;volatile
 10973  001806  D002               	goto	l6867
 10974  001808                     l532:
 10975                           
 10976                           ; BSR set to: 0
 10977                           ;CANlib.h: 1070: else
 10978                           ;CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 10979  001808  010F               	movlb	15	; () banked
 10980  00180A  9F15               	bcf	21,7,b	;volatile
 10981  00180C                     l6867:
 10982                           
 10983                           ; BSR set to: 15
 10984                           ;CANlib.h: 1073: tamp = (filter >> 21);
 10985  00180C  C060  F065         	movff	CANSetFilter@filter,??_CANSetFilter
 10986  001810  C061  F066         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10987  001814  C062  F067         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10988  001818  C063  F068         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10989  00181C  0E16               	movlw	22
 10990  00181E  D006               	goto	u9470
 10991  001820                     u9475:
 10992  001820  0100               	movlb	0	; () banked
 10993  001822  90D8               	bcf	status,0,c
 10994  001824  3368               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10995  001826  3367               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10996  001828  3366               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10997  00182A  3365               	rrcf	??_CANSetFilter& (0+255),f,b
 10998  00182C                     u9470:
 10999  00182C  2EE8               	decfsz	wreg,f,c
 11000  00182E  D7F8               	goto	u9475
 11001  001830  C065  F06A         	movff	??_CANSetFilter,CANSetFilter@tamp
 11002  001834  C066  F06B         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11003  001838  C067  F06C         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11004  00183C  C068  F06D         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11005                           
 11006                           ; BSR set to: 0
 11007                           ;CANlib.h: 1074: tamp = tamp & 0x000000FF;
 11008  001840  0100               	movlb	0	; () banked
 11009  001842  516A               	movf	CANSetFilter@tamp& (0+255),w,b
 11010  001844  0100               	movlb	0	; () banked
 11011  001846  6F6A               	movwf	CANSetFilter@tamp& (0+255),b
 11012  001848  6B6B               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11013  00184A  6B6C               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11014  00184C  6B6D               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11015                           
 11016                           ; BSR set to: 0
 11017                           ;CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 11018  00184E  C06A  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 11019  001852  0012               	return	
 11020  001854                     __end_of_CANSetFilter:
 11021                           	opt stack 0
 11022                           tblptru	equ	0xFF8
 11023                           tblptrh	equ	0xFF7
 11024                           tblptrl	equ	0xFF6
 11025                           tablat	equ	0xFF5
 11026                           prodh	equ	0xFF4
 11027                           prodl	equ	0xFF3
 11028                           intcon	equ	0xFF2
 11029                           postinc0	equ	0xFEE
 11030                           wreg	equ	0xFE8
 11031                           postinc2	equ	0xFDE
 11032                           postdec2	equ	0xFDD
 11033                           fsr2h	equ	0xFDA
 11034                           fsr2l	equ	0xFD9
 11035                           status	equ	0xFD8
 11036                           
 11037 ;; *************** function _CANOperationMode *****************
 11038 ;; Defined at:
 11039 ;;		line 206 in file "CANlib.h"
 11040 ;; Parameters:    Size  Location     Type
 11041 ;;  mode            1    wreg     enum E16881
 11042 ;; Auto vars:     Size  Location     Type
 11043 ;;  mode            1    0[BANK0 ] enum E16881
 11044 ;; Return value:  Size  Location     Type
 11045 ;;		None               void
 11046 ;; Registers used:
 11047 ;;		wreg, status,2, status,0
 11048 ;; Tracked objects:
 11049 ;;		On entry : 0/0
 11050 ;;		On exit  : 0/0
 11051 ;;		Unchanged: 0/0
 11052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11054 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11056 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11057 ;;Total ram usage:        1 bytes
 11058 ;; Hardware stack levels used:    1
 11059 ;; Hardware stack levels required when called:    2
 11060 ;; This function calls:
 11061 ;;		Nothing
 11062 ;; This function is called by:
 11063 ;;		_CANInitialize
 11064 ;; This function uses a non-reentrant model
 11065 ;;
 11066                           
 11067                           	psect	text27
 11068  005312                     __ptext27:
 11069                           	opt stack 0
 11070  005312                     _CANOperationMode:
 11071                           	opt stack 26
 11072                           
 11073                           ; BSR set to: 0
 11074                           ;incstack = 0
 11075                           ;CANOperationMode@mode stored from wreg
 11076  005312  0100               	movlb	0	; () banked
 11077  005314  6F60               	movwf	CANOperationMode@mode& (0+255),b
 11078                           
 11079                           ;CANlib.h: 208: CANCON = mode;
 11080  005316  C060  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 11081  00531A                     l6463:
 11082  00531A  506E               	movf	3950,w,c	;volatile
 11083  00531C  0BE0               	andlw	224
 11084  00531E  0100               	movlb	0	; () banked
 11085  005320  1960               	xorwf	CANOperationMode@mode& (0+255),w,b
 11086  005322  B4D8               	btfsc	status,2,c
 11087  005324  0012               	return	
 11088  005326  D7F9               	goto	l6463
 11089  005328                     __end_of_CANOperationMode:
 11090                           	opt stack 0
 11091                           tblptru	equ	0xFF8
 11092                           tblptrh	equ	0xFF7
 11093                           tblptrl	equ	0xFF6
 11094                           tablat	equ	0xFF5
 11095                           prodh	equ	0xFF4
 11096                           prodl	equ	0xFF3
 11097                           intcon	equ	0xFF2
 11098                           postinc0	equ	0xFEE
 11099                           wreg	equ	0xFE8
 11100                           postinc2	equ	0xFDE
 11101                           postdec2	equ	0xFDD
 11102                           fsr2h	equ	0xFDA
 11103                           fsr2l	equ	0xFD9
 11104                           status	equ	0xFD8
 11105                           
 11106 ;; *************** function _can_interpreter *****************
 11107 ;; Defined at:
 11108 ;;		line 260 in file "motore.c"
 11109 ;; Parameters:    Size  Location     Type
 11110 ;;		None
 11111 ;; Auto vars:     Size  Location     Type
 11112 ;;		None
 11113 ;; Return value:  Size  Location     Type
 11114 ;;		None               void
 11115 ;; Registers used:
 11116 ;;		wreg, status,2, status,0
 11117 ;; Tracked objects:
 11118 ;;		On entry : 0/0
 11119 ;;		On exit  : 0/0
 11120 ;;		Unchanged: 0/0
 11121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11124 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11125 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11126 ;;Total ram usage:        2 bytes
 11127 ;; Hardware stack levels used:    1
 11128 ;; Hardware stack levels required when called:    2
 11129 ;; This function calls:
 11130 ;;		Nothing
 11131 ;; This function is called by:
 11132 ;;		_main
 11133 ;; This function uses a non-reentrant model
 11134 ;;
 11135                           
 11136                           	psect	text28
 11137  004EE2                     __ptext28:
 11138                           	opt stack 0
 11139  004EE2                     _can_interpreter:
 11140                           	opt stack 28
 11141                           
 11142                           ;motore.c: 261: if (new_message == 1) {
 11143                           
 11144                           ; BSR set to: 0
 11145                           ;incstack = 0
 11146  004EE2  AA3F               	btfss	_new_message/(0+8),_new_message& (0+7),c	;volatile
 11147  004EE4  D043               	goto	l729
 11148                           
 11149                           ;motore.c: 264: if (id == 0b00000000001) {
 11150  004EE6  0423               	decf	_id,w,c	;volatile
 11151  004EE8  1024               	iorwf	_id+1,w,c	;volatile
 11152  004EEA  1025               	iorwf	_id+2,w,c	;volatile
 11153  004EEC  1026               	iorwf	_id+3,w,c	;volatile
 11154  004EEE  A4D8               	btfss	status,2,c
 11155  004EF0  D009               	goto	l7493
 11156                           
 11157                           ;motore.c: 265: requestSpeed = 0;
 11158  004EF2  0E00               	movlw	0
 11159  004EF4  6E2B               	movwf	_requestSpeed,c	;volatile
 11160  004EF6  0E00               	movlw	0
 11161  004EF8  6E2C               	movwf	_requestSpeed+1,c	;volatile
 11162  004EFA  0E00               	movlw	0
 11163  004EFC  6E2D               	movwf	_requestSpeed+2,c	;volatile
 11164  004EFE  0E00               	movlw	0
 11165  004F00  6E2E               	movwf	_requestSpeed+3,c	;volatile
 11166                           
 11167                           ;motore.c: 266: PORTAbits.RA1 = 1;
 11168  004F02  8280               	bsf	3968,1,c	;volatile
 11169  004F04                     l7493:
 11170                           
 11171                           ;motore.c: 267: }
 11172                           ;motore.c: 269: if (id == 0b00000000110) {
 11173  004F04  0E06               	movlw	6
 11174  004F06  1823               	xorwf	_id,w,c	;volatile
 11175  004F08  1024               	iorwf	_id+1,w,c	;volatile
 11176  004F0A  1025               	iorwf	_id+2,w,c	;volatile
 11177  004F0C  1026               	iorwf	_id+3,w,c	;volatile
 11178  004F0E  A4D8               	btfss	status,2,c
 11179  004F10  D01B               	goto	l7503
 11180                           
 11181                           ;motore.c: 275: left_speed = data_array[1];
 11182  004F12  C038  F0F7         	movff	_data_array+1,_left_speed	;volatile
 11183  004F16  0100               	movlb	0	; () banked
 11184  004F18  6BF8               	clrf	(_left_speed+1)& (0+255),b	;volatile
 11185                           
 11186                           ; BSR set to: 0
 11187                           ;motore.c: 276: left_speed = ((left_speed << 8) | (data_array[0]));
 11188  004F1A  0100               	movlb	0	; () banked
 11189  004F1C  51F7               	movf	_left_speed& (0+255),w,b	;volatile
 11190  004F1E  0100               	movlb	0	; () banked
 11191  004F20  6F60               	movwf	??_can_interpreter& (0+255),b
 11192  004F22  5037               	movf	_data_array,w,c
 11193  004F24  0100               	movlb	0	; () banked
 11194  004F26  6FF7               	movwf	_left_speed& (0+255),b	;volatile
 11195  004F28  C060  F0F8         	movff	??_can_interpreter,_left_speed+1	;volatile
 11196                           
 11197                           ; BSR set to: 0
 11198                           ;motore.c: 277: right_speed = data_array[3];
 11199  004F2C  C03A  F0FB         	movff	_data_array+3,_right_speed	;volatile
 11200  004F30  0100               	movlb	0	; () banked
 11201  004F32  6BFC               	clrf	(_right_speed+1)& (0+255),b	;volatile
 11202                           
 11203                           ;motore.c: 278: right_speed = ((right_speed << 8) | (data_array[2]));
 11204  004F34  0100               	movlb	0	; () banked
 11205  004F36  51FB               	movf	_right_speed& (0+255),w,b	;volatile
 11206  004F38  0100               	movlb	0	; () banked
 11207  004F3A  6F60               	movwf	??_can_interpreter& (0+255),b
 11208  004F3C  5039               	movf	_data_array+2,w,c
 11209  004F3E  0100               	movlb	0	; () banked
 11210  004F40  6FFB               	movwf	_right_speed& (0+255),b	;volatile
 11211  004F42  C060  F0FC         	movff	??_can_interpreter,_right_speed+1	;volatile
 11212                           
 11213                           ; BSR set to: 0
 11214                           ;motore.c: 279: speed_fetched = 1;
 11215  004F46  8240               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
 11216  004F48                     l7503:
 11217                           
 11218                           ;motore.c: 280: }
 11219                           ;motore.c: 282: if (id == 0b00000000010) {
 11220  004F48  0E02               	movlw	2
 11221  004F4A  1823               	xorwf	_id,w,c	;volatile
 11222  004F4C  1024               	iorwf	_id+1,w,c	;volatile
 11223  004F4E  1025               	iorwf	_id+2,w,c	;volatile
 11224  004F50  1026               	iorwf	_id+3,w,c	;volatile
 11225  004F52  A4D8               	btfss	status,2,c
 11226  004F54  D00B               	goto	l729
 11227                           
 11228                           ;motore.c: 283: if (data_array[0] == 0x01) {
 11229  004F56  0437               	decf	_data_array,w,c
 11230  004F58  B4D8               	btfsc	status,2,c
 11231                           
 11232                           ;motore.c: 284: centralina_abs = 1;
 11233  004F5A  823F               	bsf	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
 11234                           
 11235                           ;motore.c: 286: }
 11236                           ;motore.c: 287: if (data_array[0] == 0x02) {
 11237  004F5C  0E02               	movlw	2
 11238  004F5E  1837               	xorwf	_data_array,w,c
 11239  004F60  B4D8               	btfsc	status,2,c
 11240                           
 11241                           ;motore.c: 288: centralina_sterzo = 1;
 11242  004F62  863F               	bsf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
 11243                           
 11244                           ;motore.c: 292: }
 11245                           ;motore.c: 293: if (data_array[0] == 0x03) {
 11246  004F64  0E03               	movlw	3
 11247  004F66  1837               	xorwf	_data_array,w,c
 11248  004F68  B4D8               	btfsc	status,2,c
 11249                           
 11250                           ;motore.c: 294: centralina_comando = 1;
 11251  004F6A  843F               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
 11252  004F6C                     l729:
 11253                           
 11254                           ;motore.c: 295: }
 11255                           ;motore.c: 296: }
 11256                           ;motore.c: 297: }
 11257                           ;motore.c: 298: new_message = 0;
 11258  004F6C  9A3F               	bcf	_new_message/(0+8),_new_message& (0+7),c	;volatile
 11259  004F6E  0012               	return		;funcret
 11260  004F70                     __end_of_can_interpreter:
 11261                           	opt stack 0
 11262                           tblptru	equ	0xFF8
 11263                           tblptrh	equ	0xFF7
 11264                           tblptrl	equ	0xFF6
 11265                           tablat	equ	0xFF5
 11266                           prodh	equ	0xFF4
 11267                           prodl	equ	0xFF3
 11268                           intcon	equ	0xFF2
 11269                           postinc0	equ	0xFEE
 11270                           wreg	equ	0xFE8
 11271                           postinc2	equ	0xFDE
 11272                           postdec2	equ	0xFDD
 11273                           fsr2h	equ	0xFDA
 11274                           fsr2l	equ	0xFD9
 11275                           status	equ	0xFD8
 11276                           
 11277 ;; *************** function _battery_measure *****************
 11278 ;; Defined at:
 11279 ;;		line 246 in file "motore.c"
 11280 ;; Parameters:    Size  Location     Type
 11281 ;;		None
 11282 ;; Auto vars:     Size  Location     Type
 11283 ;;		None
 11284 ;; Return value:  Size  Location     Type
 11285 ;;		None               void
 11286 ;; Registers used:
 11287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11288 ;; Tracked objects:
 11289 ;;		On entry : 0/0
 11290 ;;		On exit  : 0/0
 11291 ;;		Unchanged: 0/0
 11292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11297 ;;Total ram usage:        0 bytes
 11298 ;; Hardware stack levels used:    1
 11299 ;; Hardware stack levels required when called:    3
 11300 ;; This function calls:
 11301 ;;		_CANisTxReady
 11302 ;;		_CANsendMessage
 11303 ;;		___awdiv
 11304 ;;		___wmul
 11305 ;; This function is called by:
 11306 ;;		_main
 11307 ;; This function uses a non-reentrant model
 11308 ;;
 11309                           
 11310                           	psect	text29
 11311  004F70                     __ptext29:
 11312                           	opt stack 0
 11313  004F70                     _battery_measure:
 11314                           	opt stack 27
 11315                           
 11316                           ;motore.c: 247: ADCON0bits.GO = 1;
 11317                           
 11318                           ;incstack = 0
 11319  004F70  82C2               	bsf	4034,1,c	;volatile
 11320  004F72                     l718:
 11321  004F72  B2C2               	btfsc	4034,1,c	;volatile
 11322  004F74  D7FE               	goto	l718
 11323                           
 11324                           ;motore.c: 249: vBatt = ADRESH;
 11325  004F76  CFC4 F033          	movff	4036,_vBatt	;volatile
 11326  004F7A  6A34               	clrf	_vBatt+1,c
 11327                           
 11328                           ;motore.c: 250: vBatt = (vBatt * 14) / 255;
 11329  004F7C  C033  F060         	movff	_vBatt,___wmul@multiplier
 11330  004F80  C034  F061         	movff	_vBatt+1,___wmul@multiplier+1
 11331  004F84  0E00               	movlw	0
 11332  004F86  0100               	movlb	0	; () banked
 11333  004F88  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11334  004F8A  0E0E               	movlw	14
 11335  004F8C  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11336  004F8E  EC1B  F029         	call	___wmul	;wreg free
 11337  004F92  C060  F066         	movff	?___wmul,___awdiv@dividend
 11338  004F96  C061  F067         	movff	?___wmul+1,___awdiv@dividend+1
 11339  004F9A  0E00               	movlw	0
 11340  004F9C  0100               	movlb	0	; () banked
 11341  004F9E  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 11342  004FA0  6968               	setf	___awdiv@divisor& (0+255),b
 11343  004FA2  EC5F  F026         	call	___awdiv	;wreg free
 11344  004FA6  C066  F033         	movff	?___awdiv,_vBatt
 11345  004FAA  C067  F034         	movff	?___awdiv+1,_vBatt+1
 11346                           
 11347                           ;motore.c: 251: if (vBatt < 8) {
 11348  004FAE  BE34               	btfsc	_vBatt+1,7,c
 11349  004FB0  D006               	goto	l7607
 11350  004FB2  5034               	movf	_vBatt+1,w,c
 11351  004FB4  E122               	bnz	l721
 11352  004FB6  0E08               	movlw	8
 11353  004FB8  5C33               	subwf	_vBatt,w,c
 11354  004FBA  B0D8               	btfsc	status,0,c
 11355  004FBC  D01E               	goto	l721
 11356  004FBE                     l7607:
 11357  004FBE  EC66  F029         	call	_CANisTxReady	;wreg free
 11358  004FC2  06E8               	decf	wreg,f,c
 11359  004FC4  A4D8               	btfss	status,2,c
 11360  004FC6  D7FB               	goto	l7607
 11361                           
 11362                           ;motore.c: 253: CANsendMessage(0b00000001001, data_array, 8, CAN_CONFIG_STD_MSG & CAN_RE
      +                          MOTE_TX_FRAME & CAN_TX_PRIORITY_0);
 11363  004FC8  0E09               	movlw	9
 11364  004FCA  0100               	movlb	0	; () banked
 11365  004FCC  6F60               	movwf	CANsendMessage@identifier& (0+255),b
 11366  004FCE  0E00               	movlw	0
 11367  004FD0  6F61               	movwf	(CANsendMessage@identifier+1)& (0+255),b
 11368  004FD2  0E00               	movlw	0
 11369  004FD4  6F62               	movwf	(CANsendMessage@identifier+2)& (0+255),b
 11370  004FD6  0E00               	movlw	0
 11371  004FD8  6F63               	movwf	(CANsendMessage@identifier+3)& (0+255),b
 11372  004FDA  0E37               	movlw	low _data_array
 11373  004FDC  0100               	movlb	0	; () banked
 11374  004FDE  6F64               	movwf	CANsendMessage@data& (0+255),b
 11375  004FE0  0E00               	movlw	high _data_array
 11376  004FE2  0100               	movlb	0	; () banked
 11377  004FE4  6F65               	movwf	(CANsendMessage@data+1)& (0+255),b
 11378  004FE6  0E08               	movlw	8
 11379  004FE8  0100               	movlb	0	; () banked
 11380  004FEA  6F66               	movwf	CANsendMessage@dataLength& (0+255),b
 11381  004FEC  0EFC               	movlw	252
 11382  004FEE  0100               	movlb	0	; () banked
 11383  004FF0  6F67               	movwf	CANsendMessage@flags& (0+255),b
 11384  004FF2  EC2A  F00C         	call	_CANsendMessage	;wreg free
 11385                           
 11386                           ;motore.c: 254: PORTCbits.RC1 = 1;
 11387  004FF6  8282               	bsf	3970,1,c	;volatile
 11388                           
 11389                           ;motore.c: 255: } else {
 11390  004FF8  0012               	return	
 11391  004FFA                     l721:
 11392                           
 11393                           ;motore.c: 256: PORTCbits.RC1 = 0;
 11394  004FFA  9282               	bcf	3970,1,c	;volatile
 11395  004FFC  0012               	return	
 11396  004FFE                     __end_of_battery_measure:
 11397                           	opt stack 0
 11398                           tblptru	equ	0xFF8
 11399                           tblptrh	equ	0xFF7
 11400                           tblptrl	equ	0xFF6
 11401                           tablat	equ	0xFF5
 11402                           prodh	equ	0xFF4
 11403                           prodl	equ	0xFF3
 11404                           intcon	equ	0xFF2
 11405                           postinc0	equ	0xFEE
 11406                           wreg	equ	0xFE8
 11407                           postinc2	equ	0xFDE
 11408                           postdec2	equ	0xFDD
 11409                           fsr2h	equ	0xFDA
 11410                           fsr2l	equ	0xFD9
 11411                           status	equ	0xFD8
 11412                           
 11413 ;; *************** function ___wmul *****************
 11414 ;; Defined at:
 11415 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 11416 ;; Parameters:    Size  Location     Type
 11417 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11418 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11419 ;; Auto vars:     Size  Location     Type
 11420 ;;  product         2    4[BANK0 ] unsigned int 
 11421 ;; Return value:  Size  Location     Type
 11422 ;;                  2    0[BANK0 ] unsigned int 
 11423 ;; Registers used:
 11424 ;;		wreg, status,2, status,0, prodl, prodh
 11425 ;; Tracked objects:
 11426 ;;		On entry : 0/0
 11427 ;;		On exit  : 0/0
 11428 ;;		Unchanged: 0/0
 11429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11430 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11431 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11433 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11434 ;;Total ram usage:        6 bytes
 11435 ;; Hardware stack levels used:    1
 11436 ;; Hardware stack levels required when called:    2
 11437 ;; This function calls:
 11438 ;;		Nothing
 11439 ;; This function is called by:
 11440 ;;		_delay_ms
 11441 ;;		_battery_measure
 11442 ;; This function uses a non-reentrant model
 11443 ;;
 11444                           
 11445                           	psect	text30
 11446  005236                     __ptext30:
 11447                           	opt stack 0
 11448  005236                     ___wmul:
 11449                           	opt stack 27
 11450                           
 11451                           ;incstack = 0
 11452  005236  0100               	movlb	0	; () banked
 11453  005238  5160               	movf	___wmul@multiplier& (0+255),w,b
 11454  00523A  0100               	movlb	0	; () banked
 11455  00523C  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11456  00523E  CFF3 F064          	movff	prodl,___wmul@product
 11457  005242  CFF4 F065          	movff	prodh,___wmul@product+1
 11458  005246  0100               	movlb	0	; () banked
 11459  005248  5160               	movf	___wmul@multiplier& (0+255),w,b
 11460  00524A  0100               	movlb	0	; () banked
 11461  00524C  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11462  00524E  50F3               	movf	prodl,w,c
 11463  005250  0100               	movlb	0	; () banked
 11464  005252  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11465  005254  0100               	movlb	0	; () banked
 11466  005256  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11467  005258  0100               	movlb	0	; () banked
 11468  00525A  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11469  00525C  50F3               	movf	prodl,w,c
 11470  00525E  0100               	movlb	0	; () banked
 11471  005260  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11472                           
 11473                           ; BSR set to: 0
 11474  005262  C064  F060         	movff	___wmul@product,?___wmul
 11475  005266  C065  F061         	movff	___wmul@product+1,?___wmul+1
 11476  00526A  0012               	return	
 11477  00526C                     __end_of___wmul:
 11478                           	opt stack 0
 11479                           tblptru	equ	0xFF8
 11480                           tblptrh	equ	0xFF7
 11481                           tblptrl	equ	0xFF6
 11482                           tablat	equ	0xFF5
 11483                           prodh	equ	0xFF4
 11484                           prodl	equ	0xFF3
 11485                           intcon	equ	0xFF2
 11486                           postinc0	equ	0xFEE
 11487                           wreg	equ	0xFE8
 11488                           postinc2	equ	0xFDE
 11489                           postdec2	equ	0xFDD
 11490                           fsr2h	equ	0xFDA
 11491                           fsr2l	equ	0xFD9
 11492                           status	equ	0xFD8
 11493                           
 11494 ;; *************** function ___awdiv *****************
 11495 ;; Defined at:
 11496 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 11497 ;; Parameters:    Size  Location     Type
 11498 ;;  dividend        2    6[BANK0 ] int 
 11499 ;;  divisor         2    8[BANK0 ] int 
 11500 ;; Auto vars:     Size  Location     Type
 11501 ;;  quotient        2   12[BANK0 ] int 
 11502 ;;  sign            1   11[BANK0 ] unsigned char 
 11503 ;;  counter         1   10[BANK0 ] unsigned char 
 11504 ;; Return value:  Size  Location     Type
 11505 ;;                  2    6[BANK0 ] int 
 11506 ;; Registers used:
 11507 ;;		wreg, status,2, status,0
 11508 ;; Tracked objects:
 11509 ;;		On entry : 0/0
 11510 ;;		On exit  : 0/0
 11511 ;;		Unchanged: 0/0
 11512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11513 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11514 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11516 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11517 ;;Total ram usage:        8 bytes
 11518 ;; Hardware stack levels used:    1
 11519 ;; Hardware stack levels required when called:    2
 11520 ;; This function calls:
 11521 ;;		Nothing
 11522 ;; This function is called by:
 11523 ;;		_battery_measure
 11524 ;; This function uses a non-reentrant model
 11525 ;;
 11526                           
 11527                           	psect	text31
 11528  004CBE                     __ptext31:
 11529                           	opt stack 0
 11530  004CBE                     ___awdiv:
 11531                           	opt stack 27
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;incstack = 0
 11535  004CBE  0E00               	movlw	0
 11536  004CC0  0100               	movlb	0	; () banked
 11537  004CC2  6F6B               	movwf	___awdiv@sign& (0+255),b
 11538                           
 11539                           ; BSR set to: 0
 11540  004CC4  0100               	movlb	0	; () banked
 11541  004CC6  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11542  004CC8  D008               	goto	l7315
 11543                           
 11544                           ; BSR set to: 0
 11545  004CCA  0100               	movlb	0	; () banked
 11546  004CCC  6D68               	negf	___awdiv@divisor& (0+255),b
 11547  004CCE  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11548  004CD0  B0D8               	btfsc	status,0,c
 11549  004CD2  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11550                           
 11551                           ; BSR set to: 0
 11552  004CD4  0E01               	movlw	1
 11553  004CD6  0100               	movlb	0	; () banked
 11554  004CD8  6F6B               	movwf	___awdiv@sign& (0+255),b
 11555  004CDA                     l7315:
 11556                           
 11557                           ; BSR set to: 0
 11558  004CDA  0100               	movlb	0	; () banked
 11559  004CDC  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11560  004CDE  D008               	goto	l7321
 11561                           
 11562                           ; BSR set to: 0
 11563  004CE0  0100               	movlb	0	; () banked
 11564  004CE2  6D66               	negf	___awdiv@dividend& (0+255),b
 11565  004CE4  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11566  004CE6  B0D8               	btfsc	status,0,c
 11567  004CE8  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11568                           
 11569                           ; BSR set to: 0
 11570  004CEA  0E01               	movlw	1
 11571  004CEC  0100               	movlb	0	; () banked
 11572  004CEE  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 11573  004CF0                     l7321:
 11574                           
 11575                           ; BSR set to: 0
 11576  004CF0  0E00               	movlw	0
 11577  004CF2  0100               	movlb	0	; () banked
 11578  004CF4  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 11579  004CF6  0E00               	movlw	0
 11580  004CF8  6F6C               	movwf	___awdiv@quotient& (0+255),b
 11581                           
 11582                           ; BSR set to: 0
 11583  004CFA  0100               	movlb	0	; () banked
 11584  004CFC  5168               	movf	___awdiv@divisor& (0+255),w,b
 11585  004CFE  0100               	movlb	0	; () banked
 11586  004D00  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11587  004D02  B4D8               	btfsc	status,2,c
 11588  004D04  D02C               	goto	l7343
 11589                           
 11590                           ; BSR set to: 0
 11591  004D06  0E01               	movlw	1
 11592  004D08  0100               	movlb	0	; () banked
 11593  004D0A  6F6A               	movwf	___awdiv@counter& (0+255),b
 11594  004D0C  D006               	goto	l7329
 11595  004D0E                     l7327:
 11596                           
 11597                           ; BSR set to: 0
 11598  004D0E  0100               	movlb	0	; () banked
 11599  004D10  90D8               	bcf	status,0,c
 11600  004D12  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 11601  004D14  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11602  004D16  0100               	movlb	0	; () banked
 11603  004D18  2B6A               	incf	___awdiv@counter& (0+255),f,b
 11604  004D1A                     l7329:
 11605                           
 11606                           ; BSR set to: 0
 11607  004D1A  0100               	movlb	0	; () banked
 11608  004D1C  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11609  004D1E  D7F7               	goto	l7327
 11610  004D20                     l7331:
 11611                           
 11612                           ; BSR set to: 0
 11613  004D20  0100               	movlb	0	; () banked
 11614  004D22  90D8               	bcf	status,0,c
 11615  004D24  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 11616  004D26  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 11617                           
 11618                           ; BSR set to: 0
 11619  004D28  0100               	movlb	0	; () banked
 11620  004D2A  5168               	movf	___awdiv@divisor& (0+255),w,b
 11621  004D2C  0100               	movlb	0	; () banked
 11622  004D2E  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 11623  004D30  0100               	movlb	0	; () banked
 11624  004D32  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11625  004D34  0100               	movlb	0	; () banked
 11626  004D36  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11627  004D38  A0D8               	btfss	status,0,c
 11628  004D3A  D00A               	goto	l7339
 11629                           
 11630                           ; BSR set to: 0
 11631  004D3C  0100               	movlb	0	; () banked
 11632  004D3E  5168               	movf	___awdiv@divisor& (0+255),w,b
 11633  004D40  0100               	movlb	0	; () banked
 11634  004D42  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 11635  004D44  0100               	movlb	0	; () banked
 11636  004D46  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11637  004D48  0100               	movlb	0	; () banked
 11638  004D4A  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11639                           
 11640                           ; BSR set to: 0
 11641  004D4C  0100               	movlb	0	; () banked
 11642  004D4E  816C               	bsf	___awdiv@quotient& (0+255),0,b
 11643  004D50                     l7339:
 11644                           
 11645                           ; BSR set to: 0
 11646  004D50  0100               	movlb	0	; () banked
 11647  004D52  90D8               	bcf	status,0,c
 11648  004D54  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11649  004D56  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 11650                           
 11651                           ; BSR set to: 0
 11652  004D58  0100               	movlb	0	; () banked
 11653  004D5A  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 11654  004D5C  D7E1               	goto	l7331
 11655  004D5E                     l7343:
 11656                           
 11657                           ; BSR set to: 0
 11658  004D5E  0100               	movlb	0	; () banked
 11659  004D60  516B               	movf	___awdiv@sign& (0+255),w,b
 11660  004D62  0100               	movlb	0	; () banked
 11661  004D64  B4D8               	btfsc	status,2,c
 11662  004D66  D005               	goto	l7347
 11663                           
 11664                           ; BSR set to: 0
 11665  004D68  0100               	movlb	0	; () banked
 11666  004D6A  6D6C               	negf	___awdiv@quotient& (0+255),b
 11667  004D6C  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11668  004D6E  B0D8               	btfsc	status,0,c
 11669  004D70  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11670  004D72                     l7347:
 11671                           
 11672                           ; BSR set to: 0
 11673  004D72  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 11674  004D76  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 11675  004D7A  0012               	return	
 11676  004D7C                     __end_of___awdiv:
 11677                           	opt stack 0
 11678                           tblptru	equ	0xFF8
 11679                           tblptrh	equ	0xFF7
 11680                           tblptrl	equ	0xFF6
 11681                           tablat	equ	0xFF5
 11682                           prodh	equ	0xFF4
 11683                           prodl	equ	0xFF3
 11684                           intcon	equ	0xFF2
 11685                           postinc0	equ	0xFEE
 11686                           wreg	equ	0xFE8
 11687                           postinc2	equ	0xFDE
 11688                           postdec2	equ	0xFDD
 11689                           fsr2h	equ	0xFDA
 11690                           fsr2l	equ	0xFD9
 11691                           status	equ	0xFD8
 11692                           
 11693 ;; *************** function _CANsendMessage *****************
 11694 ;; Defined at:
 11695 ;;		line 294 in file "CANlib.h"
 11696 ;; Parameters:    Size  Location     Type
 11697 ;;  identifier      4    0[BANK0 ] unsigned long 
 11698 ;;  data            2    4[BANK0 ] PTR unsigned char 
 11699 ;;		 -> data_array_debug(8), data_array(8), 
 11700 ;;  dataLength      1    6[BANK0 ] unsigned char 
 11701 ;;  flags           1    7[BANK0 ] enum E16909
 11702 ;; Auto vars:     Size  Location     Type
 11703 ;;  tamp            4   12[BANK0 ] unsigned long 
 11704 ;; Return value:  Size  Location     Type
 11705 ;;		None               void
 11706 ;; Registers used:
 11707 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11708 ;; Tracked objects:
 11709 ;;		On entry : 0/0
 11710 ;;		On exit  : 0/0
 11711 ;;		Unchanged: 0/0
 11712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11713 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11714 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11715 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11716 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11717 ;;Total ram usage:       16 bytes
 11718 ;; Hardware stack levels used:    1
 11719 ;; Hardware stack levels required when called:    2
 11720 ;; This function calls:
 11721 ;;		Nothing
 11722 ;; This function is called by:
 11723 ;;		_main
 11724 ;;		_rampe
 11725 ;;		_send_data
 11726 ;;		_battery_measure
 11727 ;; This function uses a non-reentrant model
 11728 ;;
 11729                           
 11730                           	psect	text32
 11731  001854                     __ptext32:
 11732                           	opt stack 0
 11733  001854                     _CANsendMessage:
 11734                           	opt stack 27
 11735                           
 11736                           ;CANlib.h: 296: unsigned long tamp;
 11737                           ;CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 11738                           
 11739                           ; BSR set to: 0
 11740                           ;incstack = 0
 11741  001854  010F               	movlb	15	; () banked
 11742  001856  B740               	btfsc	64,3,b	;volatile
 11743  001858  D13F               	goto	l369
 11744                           
 11745                           ; BSR set to: 15
 11746                           ;CANlib.h: 299: { TXB0DLC = dataLength;
 11747  00185A  C066  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
 11748                           
 11749                           ;CANlib.h: 300: if (0b01000000 & flags)
 11750  00185E  0100               	movlb	0	; () banked
 11751  001860  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
 11752  001862  D003               	goto	l370
 11753                           
 11754                           ; BSR set to: 0
 11755                           ;CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 11756  001864  010F               	movlb	15	; () banked
 11757  001866  8D45               	bsf	69,6,b	;volatile
 11758  001868  D002               	goto	l371
 11759  00186A                     l370:
 11760                           
 11761                           ; BSR set to: 0
 11762                           ;CANlib.h: 302: else
 11763                           ;CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 11764  00186A  010F               	movlb	15	; () banked
 11765  00186C  9D45               	bcf	69,6,b	;volatile
 11766  00186E                     l371:
 11767                           
 11768                           ; BSR set to: 15
 11769                           ;CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 11770  00186E  0100               	movlb	0	; () banked
 11771  001870  A767               	btfss	CANsendMessage@flags& (0+255),3,b
 11772  001872  D079               	goto	l372
 11773                           
 11774                           ; BSR set to: 0
 11775                           ;CANlib.h: 306: {
 11776                           ;CANlib.h: 308: tamp = identifier & 0x000000FF;
 11777  001874  0100               	movlb	0	; () banked
 11778  001876  5160               	movf	CANsendMessage@identifier& (0+255),w,b
 11779  001878  0100               	movlb	0	; () banked
 11780  00187A  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11781  00187C  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11782  00187E  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11783  001880  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11784                           
 11785                           ; BSR set to: 0
 11786                           ;CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 11787  001882  C06C  FF44         	movff	CANsendMessage@tamp,3908	;volatile
 11788                           
 11789                           ; BSR set to: 0
 11790                           ;CANlib.h: 311: tamp = identifier & 0x0000FF00;
 11791  001886  0E00               	movlw	0
 11792  001888  0100               	movlb	0	; () banked
 11793  00188A  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 11794  00188C  0100               	movlb	0	; () banked
 11795  00188E  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11796  001890  0EFF               	movlw	255
 11797  001892  0100               	movlb	0	; () banked
 11798  001894  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 11799  001896  0100               	movlb	0	; () banked
 11800  001898  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 11801  00189A  0E00               	movlw	0
 11802  00189C  0100               	movlb	0	; () banked
 11803  00189E  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 11804  0018A0  0100               	movlb	0	; () banked
 11805  0018A2  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 11806  0018A4  0E00               	movlw	0
 11807  0018A6  0100               	movlb	0	; () banked
 11808  0018A8  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 11809  0018AA  0100               	movlb	0	; () banked
 11810  0018AC  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 11811                           
 11812                           ; BSR set to: 0
 11813                           ;CANlib.h: 312: tamp = tamp >> 8;
 11814  0018AE  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 11815  0018B2  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 11816  0018B6  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 11817  0018BA  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 11818  0018BE  C069  F068         	movff	??_CANsendMessage+1,??_CANsendMessage
 11819  0018C2  C06A  F069         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 11820  0018C6  C06B  F06A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 11821  0018CA  0100               	movlb	0	; () banked
 11822  0018CC  6B6B               	clrf	(??_CANsendMessage+3)& (0+255),b
 11823  0018CE  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11824  0018D2  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11825  0018D6  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11826  0018DA  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 11830  0018DE  C06C  FF43         	movff	CANsendMessage@tamp,3907	;volatile
 11831                           
 11832                           ; BSR set to: 0
 11833                           ;CANlib.h: 315: TXB0SIDL = 0x00;
 11834  0018E2  0E00               	movlw	0
 11835  0018E4  010F               	movlb	15	; () banked
 11836  0018E6  6F42               	movwf	66,b	;volatile
 11837                           
 11838                           ; BSR set to: 15
 11839                           ;CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 11840  0018E8  010F               	movlb	15	; () banked
 11841  0018EA  8742               	bsf	66,3,b	;volatile
 11842                           
 11843                           ; BSR set to: 15
 11844                           ;CANlib.h: 318: if (identifier & 0x00010000)
 11845  0018EC  0100               	movlb	0	; () banked
 11846  0018EE  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 11847  0018F0  D002               	goto	l373
 11848                           
 11849                           ; BSR set to: 0
 11850                           ;CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 11851  0018F2  010F               	movlb	15	; () banked
 11852  0018F4  8142               	bsf	66,0,b	;volatile
 11853  0018F6                     l373:
 11854                           
 11855                           ;CANlib.h: 320: if (identifier & 0x00020000)
 11856  0018F6  0100               	movlb	0	; () banked
 11857  0018F8  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 11858  0018FA  D002               	goto	l374
 11859                           
 11860                           ; BSR set to: 0
 11861                           ;CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 11862  0018FC  010F               	movlb	15	; () banked
 11863  0018FE  8342               	bsf	66,1,b	;volatile
 11864  001900                     l374:
 11865                           
 11866                           ;CANlib.h: 322: if (identifier & 0x00040000)
 11867  001900  0100               	movlb	0	; () banked
 11868  001902  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 11869  001904  D002               	goto	l375
 11870                           
 11871                           ; BSR set to: 0
 11872                           ;CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 11873  001906  010F               	movlb	15	; () banked
 11874  001908  8B42               	bsf	66,5,b	;volatile
 11875  00190A                     l375:
 11876                           
 11877                           ;CANlib.h: 324: if (identifier & 0x00080000)
 11878  00190A  0100               	movlb	0	; () banked
 11879  00190C  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 11880  00190E  D002               	goto	l376
 11881                           
 11882                           ; BSR set to: 0
 11883                           ;CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 11884  001910  010F               	movlb	15	; () banked
 11885  001912  8D42               	bsf	66,6,b	;volatile
 11886  001914                     l376:
 11887                           
 11888                           ;CANlib.h: 326: if (identifier & 0x00100000)
 11889  001914  0100               	movlb	0	; () banked
 11890  001916  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 11891  001918  D002               	goto	l7031
 11892                           
 11893                           ; BSR set to: 0
 11894                           ;CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 11895  00191A  010F               	movlb	15	; () banked
 11896  00191C  8F42               	bsf	66,7,b	;volatile
 11897  00191E                     l7031:
 11898                           
 11899                           ;CANlib.h: 329: tamp = (identifier >> 21);
 11900  00191E  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 11901  001922  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 11902  001926  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 11903  00192A  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 11904  00192E  0E16               	movlw	22
 11905  001930  D006               	goto	u9700
 11906  001932                     u9705:
 11907  001932  0100               	movlb	0	; () banked
 11908  001934  90D8               	bcf	status,0,c
 11909  001936  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 11910  001938  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 11911  00193A  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 11912  00193C  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 11913  00193E                     u9700:
 11914  00193E  2EE8               	decfsz	wreg,f,c
 11915  001940  D7F8               	goto	u9705
 11916  001942  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11917  001946  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11918  00194A  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11919  00194E  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11920                           
 11921                           ; BSR set to: 0
 11922                           ;CANlib.h: 330: tamp = tamp & 0x000000FF;
 11923  001952  0100               	movlb	0	; () banked
 11924  001954  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 11925  001956  0100               	movlb	0	; () banked
 11926  001958  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11927  00195A  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11928  00195C  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11929  00195E  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11930                           
 11931                           ; BSR set to: 0
 11932                           ;CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 11933  001960  C06C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 11934                           
 11935                           ;CANlib.h: 332: }
 11936  001964  D059               	goto	l7051
 11937  001966                     l372:
 11938                           
 11939                           ; BSR set to: 0
 11940                           ;CANlib.h: 334: else
 11941                           ;CANlib.h: 336: {
 11942                           ;CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 11943  001966  010F               	movlb	15	; () banked
 11944  001968  9742               	bcf	66,3,b	;volatile
 11945                           
 11946                           ; BSR set to: 15
 11947                           ;CANlib.h: 339: tamp = (identifier >> 3);
 11948  00196A  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 11949  00196E  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 11950  001972  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 11951  001976  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 11952  00197A  0E04               	movlw	4
 11953  00197C  D006               	goto	u9710
 11954  00197E                     u9715:
 11955  00197E  0100               	movlb	0	; () banked
 11956  001980  90D8               	bcf	status,0,c
 11957  001982  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 11958  001984  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 11959  001986  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 11960  001988  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 11961  00198A                     u9710:
 11962  00198A  2EE8               	decfsz	wreg,f,c
 11963  00198C  D7F8               	goto	u9715
 11964  00198E  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 11965  001992  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 11966  001996  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 11967  00199A  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 11968                           
 11969                           ; BSR set to: 0
 11970                           ;CANlib.h: 340: tamp = tamp & 0x000000FF;
 11971  00199E  0100               	movlb	0	; () banked
 11972  0019A0  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 11973  0019A2  0100               	movlb	0	; () banked
 11974  0019A4  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11975  0019A6  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 11976  0019A8  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 11977  0019AA  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 11978                           
 11979                           ; BSR set to: 0
 11980                           ;CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 11981  0019AC  C06C  FF41         	movff	CANsendMessage@tamp,3905	;volatile
 11982                           
 11983                           ; BSR set to: 0
 11984                           ;CANlib.h: 343: tamp = identifier & 0x00000007;
 11985  0019B0  0E07               	movlw	7
 11986  0019B2  0100               	movlb	0	; () banked
 11987  0019B4  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 11988  0019B6  0100               	movlb	0	; () banked
 11989  0019B8  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 11990  0019BA  0E00               	movlw	0
 11991  0019BC  0100               	movlb	0	; () banked
 11992  0019BE  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 11993  0019C0  0100               	movlb	0	; () banked
 11994  0019C2  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 11995  0019C4  0E00               	movlw	0
 11996  0019C6  0100               	movlb	0	; () banked
 11997  0019C8  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 11998  0019CA  0100               	movlb	0	; () banked
 11999  0019CC  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 12000  0019CE  0E00               	movlw	0
 12001  0019D0  0100               	movlb	0	; () banked
 12002  0019D2  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 12003  0019D4  0100               	movlb	0	; () banked
 12004  0019D6  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 12005                           
 12006                           ; BSR set to: 0
 12007                           ;CANlib.h: 344: tamp = tamp << 5;
 12008  0019D8  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 12009  0019DC  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 12010  0019E0  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 12011  0019E4  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 12012  0019E8  0E05               	movlw	5
 12013  0019EA                     u9725:
 12014  0019EA  90D8               	bcf	status,0,c
 12015  0019EC  0100               	movlb	0	; () banked
 12016  0019EE  3768               	rlcf	??_CANsendMessage& (0+255),f,b
 12017  0019F0  3769               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 12018  0019F2  376A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 12019  0019F4  376B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 12020  0019F6  2EE8               	decfsz	wreg,f,c
 12021  0019F8  D7F8               	goto	u9725
 12022  0019FA  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12023  0019FE  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12024  001A02  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12025  001A06  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12026                           
 12027                           ; BSR set to: 0
 12028                           ;CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 12029  001A0A  010F               	movlb	15	; () banked
 12030  001A0C  5142               	movf	66,w,b	;volatile
 12031  001A0E  0B1F               	andlw	31
 12032  001A10  010F               	movlb	15	; () banked
 12033  001A12  6F42               	movwf	66,b	;volatile
 12034                           
 12035                           ; BSR set to: 15
 12036                           ;CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 12037  001A14  C06C  FF42         	movff	CANsendMessage@tamp,3906	;volatile
 12038  001A18                     l7051:
 12039                           
 12040                           ;CANlib.h: 347: }
 12041                           ;CANlib.h: 349: if (0b00000001 & flags)
 12042  001A18  0100               	movlb	0	; () banked
 12043  001A1A  A167               	btfss	CANsendMessage@flags& (0+255),0,b
 12044  001A1C  D003               	goto	l379
 12045                           
 12046                           ; BSR set to: 0
 12047                           ;CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 12048  001A1E  010F               	movlb	15	; () banked
 12049  001A20  8140               	bsf	64,0,b	;volatile
 12050  001A22  D002               	goto	l380
 12051  001A24                     l379:
 12052                           
 12053                           ; BSR set to: 0
 12054                           ;CANlib.h: 351: else
 12055                           ;CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 12056  001A24  010F               	movlb	15	; () banked
 12057  001A26  9140               	bcf	64,0,b	;volatile
 12058  001A28                     l380:
 12059                           
 12060                           ; BSR set to: 15
 12061                           ;CANlib.h: 353: if (0b00000010 & flags)
 12062  001A28  0100               	movlb	0	; () banked
 12063  001A2A  A367               	btfss	CANsendMessage@flags& (0+255),1,b
 12064  001A2C  D003               	goto	l381
 12065                           
 12066                           ; BSR set to: 0
 12067                           ;CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 12068  001A2E  010F               	movlb	15	; () banked
 12069  001A30  8340               	bsf	64,1,b	;volatile
 12070  001A32  D002               	goto	l7057
 12071  001A34                     l381:
 12072                           
 12073                           ; BSR set to: 0
 12074                           ;CANlib.h: 355: else
 12075                           ;CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 12076  001A34  010F               	movlb	15	; () banked
 12077  001A36  9340               	bcf	64,1,b	;volatile
 12078  001A38                     l7057:
 12079                           
 12080                           ; BSR set to: 15
 12081                           ;CANlib.h: 358: TXB0D0 = data[0];
 12082  001A38  C064  FFD9         	movff	CANsendMessage@data,fsr2l
 12083  001A3C  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
 12084  001A40  50DF               	movf	indf2,w,c
 12085  001A42  010F               	movlb	15	; () banked
 12086  001A44  6F46               	movwf	70,b	;volatile
 12087                           
 12088                           ; BSR set to: 15
 12089                           ;CANlib.h: 359: TXB0D1 = data[1];
 12090  001A46  0100               	movlb	0	; () banked
 12091  001A48  EE20 F001          	lfsr	2,1
 12092  001A4C  5164               	movf	CANsendMessage@data& (0+255),w,b
 12093  001A4E  26D9               	addwf	fsr2l,f,c
 12094  001A50  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12095  001A52  22DA               	addwfc	fsr2h,f,c
 12096  001A54  50DF               	movf	indf2,w,c
 12097  001A56  010F               	movlb	15	; () banked
 12098  001A58  6F47               	movwf	71,b	;volatile
 12099                           
 12100                           ; BSR set to: 15
 12101                           ;CANlib.h: 360: TXB0D2 = data[2];
 12102  001A5A  0100               	movlb	0	; () banked
 12103  001A5C  EE20 F002          	lfsr	2,2
 12104  001A60  5164               	movf	CANsendMessage@data& (0+255),w,b
 12105  001A62  26D9               	addwf	fsr2l,f,c
 12106  001A64  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12107  001A66  22DA               	addwfc	fsr2h,f,c
 12108  001A68  50DF               	movf	indf2,w,c
 12109  001A6A  010F               	movlb	15	; () banked
 12110  001A6C  6F48               	movwf	72,b	;volatile
 12111                           
 12112                           ; BSR set to: 15
 12113                           ;CANlib.h: 361: TXB0D3 = data[3];
 12114  001A6E  0100               	movlb	0	; () banked
 12115  001A70  EE20 F003          	lfsr	2,3
 12116  001A74  5164               	movf	CANsendMessage@data& (0+255),w,b
 12117  001A76  26D9               	addwf	fsr2l,f,c
 12118  001A78  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12119  001A7A  22DA               	addwfc	fsr2h,f,c
 12120  001A7C  50DF               	movf	indf2,w,c
 12121  001A7E  010F               	movlb	15	; () banked
 12122  001A80  6F49               	movwf	73,b	;volatile
 12123                           
 12124                           ; BSR set to: 15
 12125                           ;CANlib.h: 362: TXB0D4 = data[4];
 12126  001A82  0100               	movlb	0	; () banked
 12127  001A84  EE20 F004          	lfsr	2,4
 12128  001A88  5164               	movf	CANsendMessage@data& (0+255),w,b
 12129  001A8A  26D9               	addwf	fsr2l,f,c
 12130  001A8C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12131  001A8E  22DA               	addwfc	fsr2h,f,c
 12132  001A90  50DF               	movf	indf2,w,c
 12133  001A92  010F               	movlb	15	; () banked
 12134  001A94  6F4A               	movwf	74,b	;volatile
 12135                           
 12136                           ; BSR set to: 15
 12137                           ;CANlib.h: 363: TXB0D5 = data[5];
 12138  001A96  0100               	movlb	0	; () banked
 12139  001A98  EE20 F005          	lfsr	2,5
 12140  001A9C  5164               	movf	CANsendMessage@data& (0+255),w,b
 12141  001A9E  26D9               	addwf	fsr2l,f,c
 12142  001AA0  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12143  001AA2  22DA               	addwfc	fsr2h,f,c
 12144  001AA4  50DF               	movf	indf2,w,c
 12145  001AA6  010F               	movlb	15	; () banked
 12146  001AA8  6F4B               	movwf	75,b	;volatile
 12147                           
 12148                           ; BSR set to: 15
 12149                           ;CANlib.h: 364: TXB0D6 = data[6];
 12150  001AAA  0100               	movlb	0	; () banked
 12151  001AAC  EE20 F006          	lfsr	2,6
 12152  001AB0  5164               	movf	CANsendMessage@data& (0+255),w,b
 12153  001AB2  26D9               	addwf	fsr2l,f,c
 12154  001AB4  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12155  001AB6  22DA               	addwfc	fsr2h,f,c
 12156  001AB8  50DF               	movf	indf2,w,c
 12157  001ABA  010F               	movlb	15	; () banked
 12158  001ABC  6F4C               	movwf	76,b	;volatile
 12159                           
 12160                           ; BSR set to: 15
 12161                           ;CANlib.h: 365: TXB0D7 = data[7];
 12162  001ABE  0100               	movlb	0	; () banked
 12163  001AC0  EE20 F007          	lfsr	2,7
 12164  001AC4  5164               	movf	CANsendMessage@data& (0+255),w,b
 12165  001AC6  26D9               	addwf	fsr2l,f,c
 12166  001AC8  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12167  001ACA  22DA               	addwfc	fsr2h,f,c
 12168  001ACC  50DF               	movf	indf2,w,c
 12169  001ACE  010F               	movlb	15	; () banked
 12170  001AD0  6F4D               	movwf	77,b	;volatile
 12171                           
 12172                           ; BSR set to: 15
 12173                           ;CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 12174  001AD2  010F               	movlb	15	; () banked
 12175  001AD4  8740               	bsf	64,3,b	;volatile
 12176                           
 12177                           ; BSR set to: 15
 12178                           ;CANlib.h: 368: return;
 12179  001AD6  0012               	return	
 12180  001AD8                     l369:
 12181                           
 12182                           ; BSR set to: 15
 12183                           ;CANlib.h: 369: }
 12184                           ;CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 12185  001AD8  010F               	movlb	15	; () banked
 12186  001ADA  B730               	btfsc	48,3,b	;volatile
 12187  001ADC  D13F               	goto	l384
 12188                           
 12189                           ; BSR set to: 15
 12190                           ;CANlib.h: 374: { TXB1DLC = dataLength;
 12191  001ADE  C066  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
 12192                           
 12193                           ;CANlib.h: 376: if (0b01000000 & flags)
 12194  001AE2  0100               	movlb	0	; () banked
 12195  001AE4  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
 12196  001AE6  D003               	goto	l385
 12197                           
 12198                           ; BSR set to: 0
 12199                           ;CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 12200  001AE8  010F               	movlb	15	; () banked
 12201  001AEA  8D35               	bsf	53,6,b	;volatile
 12202  001AEC  D002               	goto	l386
 12203  001AEE                     l385:
 12204                           
 12205                           ; BSR set to: 0
 12206                           ;CANlib.h: 378: else
 12207                           ;CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 12208  001AEE  010F               	movlb	15	; () banked
 12209  001AF0  9D35               	bcf	53,6,b	;volatile
 12210  001AF2                     l386:
 12211                           
 12212                           ; BSR set to: 15
 12213                           ;CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 12214  001AF2  0100               	movlb	0	; () banked
 12215  001AF4  A767               	btfss	CANsendMessage@flags& (0+255),3,b
 12216  001AF6  D079               	goto	l387
 12217                           
 12218                           ; BSR set to: 0
 12219                           ;CANlib.h: 382: {
 12220                           ;CANlib.h: 383: tamp = identifier & 0x000000FF;
 12221  001AF8  0100               	movlb	0	; () banked
 12222  001AFA  5160               	movf	CANsendMessage@identifier& (0+255),w,b
 12223  001AFC  0100               	movlb	0	; () banked
 12224  001AFE  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12225  001B00  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 12226  001B02  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 12227  001B04  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 12228                           
 12229                           ; BSR set to: 0
 12230                           ;CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 12231  001B06  C06C  FF34         	movff	CANsendMessage@tamp,3892	;volatile
 12232                           
 12233                           ; BSR set to: 0
 12234                           ;CANlib.h: 386: tamp = identifier & 0x0000FF00;
 12235  001B0A  0E00               	movlw	0
 12236  001B0C  0100               	movlb	0	; () banked
 12237  001B0E  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 12238  001B10  0100               	movlb	0	; () banked
 12239  001B12  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12240  001B14  0EFF               	movlw	255
 12241  001B16  0100               	movlb	0	; () banked
 12242  001B18  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 12243  001B1A  0100               	movlb	0	; () banked
 12244  001B1C  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 12245  001B1E  0E00               	movlw	0
 12246  001B20  0100               	movlb	0	; () banked
 12247  001B22  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 12248  001B24  0100               	movlb	0	; () banked
 12249  001B26  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 12250  001B28  0E00               	movlw	0
 12251  001B2A  0100               	movlb	0	; () banked
 12252  001B2C  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 12253  001B2E  0100               	movlb	0	; () banked
 12254  001B30  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 12255                           
 12256                           ; BSR set to: 0
 12257                           ;CANlib.h: 387: tamp = tamp >> 8;
 12258  001B32  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 12259  001B36  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 12260  001B3A  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 12261  001B3E  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 12262  001B42  C069  F068         	movff	??_CANsendMessage+1,??_CANsendMessage
 12263  001B46  C06A  F069         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 12264  001B4A  C06B  F06A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 12265  001B4E  0100               	movlb	0	; () banked
 12266  001B50  6B6B               	clrf	(??_CANsendMessage+3)& (0+255),b
 12267  001B52  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12268  001B56  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12269  001B5A  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12270  001B5E  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12271                           
 12272                           ; BSR set to: 0
 12273                           ;CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 12274  001B62  C06C  FF33         	movff	CANsendMessage@tamp,3891	;volatile
 12275                           
 12276                           ; BSR set to: 0
 12277                           ;CANlib.h: 390: TXB1SIDL = 0x00;
 12278  001B66  0E00               	movlw	0
 12279  001B68  010F               	movlb	15	; () banked
 12280  001B6A  6F32               	movwf	50,b	;volatile
 12281                           
 12282                           ; BSR set to: 15
 12283                           ;CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 12284  001B6C  010F               	movlb	15	; () banked
 12285  001B6E  8732               	bsf	50,3,b	;volatile
 12286                           
 12287                           ; BSR set to: 15
 12288                           ;CANlib.h: 393: if (identifier & 0x00010000)
 12289  001B70  0100               	movlb	0	; () banked
 12290  001B72  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 12291  001B74  D002               	goto	l388
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 12295  001B76  010F               	movlb	15	; () banked
 12296  001B78  8132               	bsf	50,0,b	;volatile
 12297  001B7A                     l388:
 12298                           
 12299                           ;CANlib.h: 395: if (identifier & 0x00020000)
 12300  001B7A  0100               	movlb	0	; () banked
 12301  001B7C  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 12302  001B7E  D002               	goto	l389
 12303                           
 12304                           ; BSR set to: 0
 12305                           ;CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 12306  001B80  010F               	movlb	15	; () banked
 12307  001B82  8332               	bsf	50,1,b	;volatile
 12308  001B84                     l389:
 12309                           
 12310                           ;CANlib.h: 397: if (identifier & 0x00040000)
 12311  001B84  0100               	movlb	0	; () banked
 12312  001B86  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 12313  001B88  D002               	goto	l390
 12314                           
 12315                           ; BSR set to: 0
 12316                           ;CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 12317  001B8A  010F               	movlb	15	; () banked
 12318  001B8C  8B32               	bsf	50,5,b	;volatile
 12319  001B8E                     l390:
 12320                           
 12321                           ;CANlib.h: 399: if (identifier & 0x00080000)
 12322  001B8E  0100               	movlb	0	; () banked
 12323  001B90  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 12324  001B92  D002               	goto	l391
 12325                           
 12326                           ; BSR set to: 0
 12327                           ;CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 12328  001B94  010F               	movlb	15	; () banked
 12329  001B96  8D32               	bsf	50,6,b	;volatile
 12330  001B98                     l391:
 12331                           
 12332                           ;CANlib.h: 401: if (identifier & 0x00100000)
 12333  001B98  0100               	movlb	0	; () banked
 12334  001B9A  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 12335  001B9C  D002               	goto	l7107
 12336                           
 12337                           ; BSR set to: 0
 12338                           ;CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 12339  001B9E  010F               	movlb	15	; () banked
 12340  001BA0  8F32               	bsf	50,7,b	;volatile
 12341  001BA2                     l7107:
 12342                           
 12343                           ;CANlib.h: 404: tamp = (identifier >> 21);
 12344  001BA2  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 12345  001BA6  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 12346  001BAA  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 12347  001BAE  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 12348  001BB2  0E16               	movlw	22
 12349  001BB4  D006               	goto	u9830
 12350  001BB6                     u9835:
 12351  001BB6  0100               	movlb	0	; () banked
 12352  001BB8  90D8               	bcf	status,0,c
 12353  001BBA  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 12354  001BBC  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 12355  001BBE  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 12356  001BC0  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 12357  001BC2                     u9830:
 12358  001BC2  2EE8               	decfsz	wreg,f,c
 12359  001BC4  D7F8               	goto	u9835
 12360  001BC6  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12361  001BCA  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12362  001BCE  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12363  001BD2  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12364                           
 12365                           ; BSR set to: 0
 12366                           ;CANlib.h: 405: tamp = tamp & 0x000000FF;
 12367  001BD6  0100               	movlb	0	; () banked
 12368  001BD8  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 12369  001BDA  0100               	movlb	0	; () banked
 12370  001BDC  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12371  001BDE  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 12372  001BE0  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 12373  001BE2  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 12374                           
 12375                           ; BSR set to: 0
 12376                           ;CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 12377  001BE4  C06C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 12378                           
 12379                           ;CANlib.h: 407: }
 12380  001BE8  D059               	goto	l7127
 12381  001BEA                     l387:
 12382                           
 12383                           ; BSR set to: 0
 12384                           ;CANlib.h: 409: else
 12385                           ;CANlib.h: 411: {
 12386                           ;CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 12387  001BEA  010F               	movlb	15	; () banked
 12388  001BEC  9732               	bcf	50,3,b	;volatile
 12389                           
 12390                           ; BSR set to: 15
 12391                           ;CANlib.h: 414: tamp = (identifier >> 3);
 12392  001BEE  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 12393  001BF2  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 12394  001BF6  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 12395  001BFA  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 12396  001BFE  0E04               	movlw	4
 12397  001C00  D006               	goto	u9840
 12398  001C02                     u9845:
 12399  001C02  0100               	movlb	0	; () banked
 12400  001C04  90D8               	bcf	status,0,c
 12401  001C06  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 12402  001C08  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 12403  001C0A  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 12404  001C0C  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 12405  001C0E                     u9840:
 12406  001C0E  2EE8               	decfsz	wreg,f,c
 12407  001C10  D7F8               	goto	u9845
 12408  001C12  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12409  001C16  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12410  001C1A  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12411  001C1E  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12412                           
 12413                           ; BSR set to: 0
 12414                           ;CANlib.h: 415: tamp = tamp & 0x000000FF;
 12415  001C22  0100               	movlb	0	; () banked
 12416  001C24  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 12417  001C26  0100               	movlb	0	; () banked
 12418  001C28  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12419  001C2A  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 12420  001C2C  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 12421  001C2E  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 12422                           
 12423                           ; BSR set to: 0
 12424                           ;CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 12425  001C30  C06C  FF31         	movff	CANsendMessage@tamp,3889	;volatile
 12426                           
 12427                           ; BSR set to: 0
 12428                           ;CANlib.h: 418: tamp = identifier & 0x00000007;
 12429  001C34  0E07               	movlw	7
 12430  001C36  0100               	movlb	0	; () banked
 12431  001C38  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 12432  001C3A  0100               	movlb	0	; () banked
 12433  001C3C  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12434  001C3E  0E00               	movlw	0
 12435  001C40  0100               	movlb	0	; () banked
 12436  001C42  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 12437  001C44  0100               	movlb	0	; () banked
 12438  001C46  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 12439  001C48  0E00               	movlw	0
 12440  001C4A  0100               	movlb	0	; () banked
 12441  001C4C  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 12442  001C4E  0100               	movlb	0	; () banked
 12443  001C50  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 12444  001C52  0E00               	movlw	0
 12445  001C54  0100               	movlb	0	; () banked
 12446  001C56  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 12447  001C58  0100               	movlb	0	; () banked
 12448  001C5A  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 12449                           
 12450                           ; BSR set to: 0
 12451                           ;CANlib.h: 419: tamp = tamp << 5;
 12452  001C5C  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 12453  001C60  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 12454  001C64  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 12455  001C68  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 12456  001C6C  0E05               	movlw	5
 12457  001C6E                     u9855:
 12458  001C6E  90D8               	bcf	status,0,c
 12459  001C70  0100               	movlb	0	; () banked
 12460  001C72  3768               	rlcf	??_CANsendMessage& (0+255),f,b
 12461  001C74  3769               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 12462  001C76  376A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 12463  001C78  376B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 12464  001C7A  2EE8               	decfsz	wreg,f,c
 12465  001C7C  D7F8               	goto	u9855
 12466  001C7E  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12467  001C82  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12468  001C86  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12469  001C8A  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12470                           
 12471                           ; BSR set to: 0
 12472                           ;CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 12473  001C8E  010F               	movlb	15	; () banked
 12474  001C90  5132               	movf	50,w,b	;volatile
 12475  001C92  0B1F               	andlw	31
 12476  001C94  010F               	movlb	15	; () banked
 12477  001C96  6F32               	movwf	50,b	;volatile
 12478                           
 12479                           ; BSR set to: 15
 12480                           ;CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 12481  001C98  C06C  FF32         	movff	CANsendMessage@tamp,3890	;volatile
 12482  001C9C                     l7127:
 12483                           
 12484                           ;CANlib.h: 422: }
 12485                           ;CANlib.h: 424: if (0b00000001 & flags)
 12486  001C9C  0100               	movlb	0	; () banked
 12487  001C9E  A167               	btfss	CANsendMessage@flags& (0+255),0,b
 12488  001CA0  D003               	goto	l394
 12489                           
 12490                           ; BSR set to: 0
 12491                           ;CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 12492  001CA2  010F               	movlb	15	; () banked
 12493  001CA4  8130               	bsf	48,0,b	;volatile
 12494  001CA6  D002               	goto	l395
 12495  001CA8                     l394:
 12496                           
 12497                           ; BSR set to: 0
 12498                           ;CANlib.h: 426: else
 12499                           ;CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 12500  001CA8  010F               	movlb	15	; () banked
 12501  001CAA  9130               	bcf	48,0,b	;volatile
 12502  001CAC                     l395:
 12503                           
 12504                           ; BSR set to: 15
 12505                           ;CANlib.h: 428: if (0b00000010 & flags)
 12506  001CAC  0100               	movlb	0	; () banked
 12507  001CAE  A367               	btfss	CANsendMessage@flags& (0+255),1,b
 12508  001CB0  D003               	goto	l396
 12509                           
 12510                           ; BSR set to: 0
 12511                           ;CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 12512  001CB2  010F               	movlb	15	; () banked
 12513  001CB4  8330               	bsf	48,1,b	;volatile
 12514  001CB6  D002               	goto	l7133
 12515  001CB8                     l396:
 12516                           
 12517                           ; BSR set to: 0
 12518                           ;CANlib.h: 430: else
 12519                           ;CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 12520  001CB8  010F               	movlb	15	; () banked
 12521  001CBA  9330               	bcf	48,1,b	;volatile
 12522  001CBC                     l7133:
 12523                           
 12524                           ; BSR set to: 15
 12525                           ;CANlib.h: 433: TXB1D0 = data[0];
 12526  001CBC  C064  FFD9         	movff	CANsendMessage@data,fsr2l
 12527  001CC0  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
 12528  001CC4  50DF               	movf	indf2,w,c
 12529  001CC6  010F               	movlb	15	; () banked
 12530  001CC8  6F36               	movwf	54,b	;volatile
 12531                           
 12532                           ; BSR set to: 15
 12533                           ;CANlib.h: 434: TXB1D1 = data[1];
 12534  001CCA  0100               	movlb	0	; () banked
 12535  001CCC  EE20 F001          	lfsr	2,1
 12536  001CD0  5164               	movf	CANsendMessage@data& (0+255),w,b
 12537  001CD2  26D9               	addwf	fsr2l,f,c
 12538  001CD4  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12539  001CD6  22DA               	addwfc	fsr2h,f,c
 12540  001CD8  50DF               	movf	indf2,w,c
 12541  001CDA  010F               	movlb	15	; () banked
 12542  001CDC  6F37               	movwf	55,b	;volatile
 12543                           
 12544                           ; BSR set to: 15
 12545                           ;CANlib.h: 435: TXB1D2 = data[2];
 12546  001CDE  0100               	movlb	0	; () banked
 12547  001CE0  EE20 F002          	lfsr	2,2
 12548  001CE4  5164               	movf	CANsendMessage@data& (0+255),w,b
 12549  001CE6  26D9               	addwf	fsr2l,f,c
 12550  001CE8  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12551  001CEA  22DA               	addwfc	fsr2h,f,c
 12552  001CEC  50DF               	movf	indf2,w,c
 12553  001CEE  010F               	movlb	15	; () banked
 12554  001CF0  6F38               	movwf	56,b	;volatile
 12555                           
 12556                           ; BSR set to: 15
 12557                           ;CANlib.h: 436: TXB1D3 = data[3];
 12558  001CF2  0100               	movlb	0	; () banked
 12559  001CF4  EE20 F003          	lfsr	2,3
 12560  001CF8  5164               	movf	CANsendMessage@data& (0+255),w,b
 12561  001CFA  26D9               	addwf	fsr2l,f,c
 12562  001CFC  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12563  001CFE  22DA               	addwfc	fsr2h,f,c
 12564  001D00  50DF               	movf	indf2,w,c
 12565  001D02  010F               	movlb	15	; () banked
 12566  001D04  6F39               	movwf	57,b	;volatile
 12567                           
 12568                           ; BSR set to: 15
 12569                           ;CANlib.h: 437: TXB1D4 = data[4];
 12570  001D06  0100               	movlb	0	; () banked
 12571  001D08  EE20 F004          	lfsr	2,4
 12572  001D0C  5164               	movf	CANsendMessage@data& (0+255),w,b
 12573  001D0E  26D9               	addwf	fsr2l,f,c
 12574  001D10  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12575  001D12  22DA               	addwfc	fsr2h,f,c
 12576  001D14  50DF               	movf	indf2,w,c
 12577  001D16  010F               	movlb	15	; () banked
 12578  001D18  6F3A               	movwf	58,b	;volatile
 12579                           
 12580                           ; BSR set to: 15
 12581                           ;CANlib.h: 438: TXB1D5 = data[5];
 12582  001D1A  0100               	movlb	0	; () banked
 12583  001D1C  EE20 F005          	lfsr	2,5
 12584  001D20  5164               	movf	CANsendMessage@data& (0+255),w,b
 12585  001D22  26D9               	addwf	fsr2l,f,c
 12586  001D24  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12587  001D26  22DA               	addwfc	fsr2h,f,c
 12588  001D28  50DF               	movf	indf2,w,c
 12589  001D2A  010F               	movlb	15	; () banked
 12590  001D2C  6F3B               	movwf	59,b	;volatile
 12591                           
 12592                           ; BSR set to: 15
 12593                           ;CANlib.h: 439: TXB1D6 = data[6];
 12594  001D2E  0100               	movlb	0	; () banked
 12595  001D30  EE20 F006          	lfsr	2,6
 12596  001D34  5164               	movf	CANsendMessage@data& (0+255),w,b
 12597  001D36  26D9               	addwf	fsr2l,f,c
 12598  001D38  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12599  001D3A  22DA               	addwfc	fsr2h,f,c
 12600  001D3C  50DF               	movf	indf2,w,c
 12601  001D3E  010F               	movlb	15	; () banked
 12602  001D40  6F3C               	movwf	60,b	;volatile
 12603                           
 12604                           ; BSR set to: 15
 12605                           ;CANlib.h: 440: TXB1D7 = data[7];
 12606  001D42  0100               	movlb	0	; () banked
 12607  001D44  EE20 F007          	lfsr	2,7
 12608  001D48  5164               	movf	CANsendMessage@data& (0+255),w,b
 12609  001D4A  26D9               	addwf	fsr2l,f,c
 12610  001D4C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12611  001D4E  22DA               	addwfc	fsr2h,f,c
 12612  001D50  50DF               	movf	indf2,w,c
 12613  001D52  010F               	movlb	15	; () banked
 12614  001D54  6F3D               	movwf	61,b	;volatile
 12615                           
 12616                           ; BSR set to: 15
 12617                           ;CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 12618  001D56  010F               	movlb	15	; () banked
 12619  001D58  8730               	bsf	48,3,b	;volatile
 12620                           
 12621                           ; BSR set to: 15
 12622                           ;CANlib.h: 444: return;
 12623  001D5A  0012               	return	
 12624  001D5C                     l384:
 12625                           
 12626                           ; BSR set to: 15
 12627                           ;CANlib.h: 445: }
 12628                           ;CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 12629  001D5C  010F               	movlb	15	; () banked
 12630  001D5E  B720               	btfsc	32,3,b	;volatile
 12631  001D60  0012               	return	
 12632                           
 12633                           ; BSR set to: 15
 12634                           ;CANlib.h: 450: { TXB2DLC = dataLength;
 12635  001D62  C066  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 12636                           
 12637                           ;CANlib.h: 452: if (0b01000000 & flags)
 12638  001D66  0100               	movlb	0	; () banked
 12639  001D68  AD67               	btfss	CANsendMessage@flags& (0+255),6,b
 12640  001D6A  D003               	goto	l399
 12641                           
 12642                           ; BSR set to: 0
 12643                           ;CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 12644  001D6C  010F               	movlb	15	; () banked
 12645  001D6E  8D25               	bsf	37,6,b	;volatile
 12646  001D70  D002               	goto	l400
 12647  001D72                     l399:
 12648                           
 12649                           ; BSR set to: 0
 12650                           ;CANlib.h: 454: else
 12651                           ;CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 12652  001D72  010F               	movlb	15	; () banked
 12653  001D74  9D25               	bcf	37,6,b	;volatile
 12654  001D76                     l400:
 12655                           
 12656                           ; BSR set to: 15
 12657                           ;CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 12658  001D76  0100               	movlb	0	; () banked
 12659  001D78  A767               	btfss	CANsendMessage@flags& (0+255),3,b
 12660  001D7A  D079               	goto	l401
 12661                           
 12662                           ; BSR set to: 0
 12663                           ;CANlib.h: 458: {
 12664                           ;CANlib.h: 459: tamp = identifier & 0x000000FF;
 12665  001D7C  0100               	movlb	0	; () banked
 12666  001D7E  5160               	movf	CANsendMessage@identifier& (0+255),w,b
 12667  001D80  0100               	movlb	0	; () banked
 12668  001D82  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12669  001D84  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 12670  001D86  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 12671  001D88  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 12672                           
 12673                           ; BSR set to: 0
 12674                           ;CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 12675  001D8A  C06C  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 12676                           
 12677                           ; BSR set to: 0
 12678                           ;CANlib.h: 462: tamp = identifier & 0x0000FF00;
 12679  001D8E  0E00               	movlw	0
 12680  001D90  0100               	movlb	0	; () banked
 12681  001D92  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 12682  001D94  0100               	movlb	0	; () banked
 12683  001D96  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12684  001D98  0EFF               	movlw	255
 12685  001D9A  0100               	movlb	0	; () banked
 12686  001D9C  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 12687  001D9E  0100               	movlb	0	; () banked
 12688  001DA0  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 12689  001DA2  0E00               	movlw	0
 12690  001DA4  0100               	movlb	0	; () banked
 12691  001DA6  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 12692  001DA8  0100               	movlb	0	; () banked
 12693  001DAA  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 12694  001DAC  0E00               	movlw	0
 12695  001DAE  0100               	movlb	0	; () banked
 12696  001DB0  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 12697  001DB2  0100               	movlb	0	; () banked
 12698  001DB4  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 12699                           
 12700                           ; BSR set to: 0
 12701                           ;CANlib.h: 463: tamp = tamp >> 8;
 12702  001DB6  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 12703  001DBA  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 12704  001DBE  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 12705  001DC2  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 12706  001DC6  C069  F068         	movff	??_CANsendMessage+1,??_CANsendMessage
 12707  001DCA  C06A  F069         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 12708  001DCE  C06B  F06A         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 12709  001DD2  0100               	movlb	0	; () banked
 12710  001DD4  6B6B               	clrf	(??_CANsendMessage+3)& (0+255),b
 12711  001DD6  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12712  001DDA  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12713  001DDE  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12714  001DE2  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12715                           
 12716                           ; BSR set to: 0
 12717                           ;CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 12718  001DE6  C06C  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 12719                           
 12720                           ; BSR set to: 0
 12721                           ;CANlib.h: 466: TXB2SIDL = 0x00;
 12722  001DEA  0E00               	movlw	0
 12723  001DEC  010F               	movlb	15	; () banked
 12724  001DEE  6F22               	movwf	34,b	;volatile
 12725                           
 12726                           ; BSR set to: 15
 12727                           ;CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 12728  001DF0  010F               	movlb	15	; () banked
 12729  001DF2  8722               	bsf	34,3,b	;volatile
 12730                           
 12731                           ; BSR set to: 15
 12732                           ;CANlib.h: 469: if (identifier & 0x00010000)
 12733  001DF4  0100               	movlb	0	; () banked
 12734  001DF6  A162               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 12735  001DF8  D002               	goto	l402
 12736                           
 12737                           ; BSR set to: 0
 12738                           ;CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 12739  001DFA  010F               	movlb	15	; () banked
 12740  001DFC  8122               	bsf	34,0,b	;volatile
 12741  001DFE                     l402:
 12742                           
 12743                           ;CANlib.h: 471: if (identifier & 0x00020000)
 12744  001DFE  0100               	movlb	0	; () banked
 12745  001E00  A362               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 12746  001E02  D002               	goto	l403
 12747                           
 12748                           ; BSR set to: 0
 12749                           ;CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 12750  001E04  010F               	movlb	15	; () banked
 12751  001E06  8322               	bsf	34,1,b	;volatile
 12752  001E08                     l403:
 12753                           
 12754                           ;CANlib.h: 473: if (identifier & 0x00040000)
 12755  001E08  0100               	movlb	0	; () banked
 12756  001E0A  A562               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 12757  001E0C  D002               	goto	l404
 12758                           
 12759                           ; BSR set to: 0
 12760                           ;CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 12761  001E0E  010F               	movlb	15	; () banked
 12762  001E10  8B22               	bsf	34,5,b	;volatile
 12763  001E12                     l404:
 12764                           
 12765                           ;CANlib.h: 475: if (identifier & 0x00080000)
 12766  001E12  0100               	movlb	0	; () banked
 12767  001E14  A762               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 12768  001E16  D002               	goto	l405
 12769                           
 12770                           ; BSR set to: 0
 12771                           ;CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 12772  001E18  010F               	movlb	15	; () banked
 12773  001E1A  8D22               	bsf	34,6,b	;volatile
 12774  001E1C                     l405:
 12775                           
 12776                           ;CANlib.h: 477: if (identifier & 0x00100000)
 12777  001E1C  0100               	movlb	0	; () banked
 12778  001E1E  A962               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 12779  001E20  D002               	goto	l7183
 12780                           
 12781                           ; BSR set to: 0
 12782                           ;CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 12783  001E22  010F               	movlb	15	; () banked
 12784  001E24  8F22               	bsf	34,7,b	;volatile
 12785  001E26                     l7183:
 12786                           
 12787                           ;CANlib.h: 480: tamp = (identifier >> 21);
 12788  001E26  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 12789  001E2A  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 12790  001E2E  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 12791  001E32  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 12792  001E36  0E16               	movlw	22
 12793  001E38  D006               	goto	u9960
 12794  001E3A                     u9965:
 12795  001E3A  0100               	movlb	0	; () banked
 12796  001E3C  90D8               	bcf	status,0,c
 12797  001E3E  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 12798  001E40  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 12799  001E42  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 12800  001E44  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 12801  001E46                     u9960:
 12802  001E46  2EE8               	decfsz	wreg,f,c
 12803  001E48  D7F8               	goto	u9965
 12804  001E4A  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12805  001E4E  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12806  001E52  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12807  001E56  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12808                           
 12809                           ; BSR set to: 0
 12810                           ;CANlib.h: 481: tamp = tamp & 0x000000FF;
 12811  001E5A  0100               	movlb	0	; () banked
 12812  001E5C  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 12813  001E5E  0100               	movlb	0	; () banked
 12814  001E60  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12815  001E62  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 12816  001E64  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 12817  001E66  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 12818                           
 12819                           ; BSR set to: 0
 12820                           ;CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 12821  001E68  C06C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 12822                           
 12823                           ;CANlib.h: 483: }
 12824  001E6C  D059               	goto	l7203
 12825  001E6E                     l401:
 12826                           
 12827                           ; BSR set to: 0
 12828                           ;CANlib.h: 485: else
 12829                           ;CANlib.h: 487: {
 12830                           ;CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 12831  001E6E  010F               	movlb	15	; () banked
 12832  001E70  9722               	bcf	34,3,b	;volatile
 12833                           
 12834                           ; BSR set to: 15
 12835                           ;CANlib.h: 490: tamp = (identifier >> 3);
 12836  001E72  C060  F068         	movff	CANsendMessage@identifier,??_CANsendMessage
 12837  001E76  C061  F069         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 12838  001E7A  C062  F06A         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 12839  001E7E  C063  F06B         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 12840  001E82  0E04               	movlw	4
 12841  001E84  D006               	goto	u9970
 12842  001E86                     u9975:
 12843  001E86  0100               	movlb	0	; () banked
 12844  001E88  90D8               	bcf	status,0,c
 12845  001E8A  336B               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 12846  001E8C  336A               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 12847  001E8E  3369               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 12848  001E90  3368               	rrcf	??_CANsendMessage& (0+255),f,b
 12849  001E92                     u9970:
 12850  001E92  2EE8               	decfsz	wreg,f,c
 12851  001E94  D7F8               	goto	u9975
 12852  001E96  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12853  001E9A  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12854  001E9E  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12855  001EA2  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12856                           
 12857                           ; BSR set to: 0
 12858                           ;CANlib.h: 491: tamp = tamp & 0x000000FF;
 12859  001EA6  0100               	movlb	0	; () banked
 12860  001EA8  516C               	movf	CANsendMessage@tamp& (0+255),w,b
 12861  001EAA  0100               	movlb	0	; () banked
 12862  001EAC  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12863  001EAE  6B6D               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 12864  001EB0  6B6E               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 12865  001EB2  6B6F               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 12866                           
 12867                           ; BSR set to: 0
 12868                           ;CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 12869  001EB4  C06C  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 12870                           
 12871                           ; BSR set to: 0
 12872                           ;CANlib.h: 494: tamp = identifier & 0x00000007;
 12873  001EB8  0E07               	movlw	7
 12874  001EBA  0100               	movlb	0	; () banked
 12875  001EBC  1560               	andwf	CANsendMessage@identifier& (0+255),w,b
 12876  001EBE  0100               	movlb	0	; () banked
 12877  001EC0  6F6C               	movwf	CANsendMessage@tamp& (0+255),b
 12878  001EC2  0E00               	movlw	0
 12879  001EC4  0100               	movlb	0	; () banked
 12880  001EC6  1561               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 12881  001EC8  0100               	movlb	0	; () banked
 12882  001ECA  6F6D               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 12883  001ECC  0E00               	movlw	0
 12884  001ECE  0100               	movlb	0	; () banked
 12885  001ED0  1562               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 12886  001ED2  0100               	movlb	0	; () banked
 12887  001ED4  6F6E               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 12888  001ED6  0E00               	movlw	0
 12889  001ED8  0100               	movlb	0	; () banked
 12890  001EDA  1563               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 12891  001EDC  0100               	movlb	0	; () banked
 12892  001EDE  6F6F               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 12893                           
 12894                           ; BSR set to: 0
 12895                           ;CANlib.h: 495: tamp = tamp << 5;
 12896  001EE0  C06C  F068         	movff	CANsendMessage@tamp,??_CANsendMessage
 12897  001EE4  C06D  F069         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 12898  001EE8  C06E  F06A         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 12899  001EEC  C06F  F06B         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 12900  001EF0  0E05               	movlw	5
 12901  001EF2                     u9985:
 12902  001EF2  90D8               	bcf	status,0,c
 12903  001EF4  0100               	movlb	0	; () banked
 12904  001EF6  3768               	rlcf	??_CANsendMessage& (0+255),f,b
 12905  001EF8  3769               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 12906  001EFA  376A               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 12907  001EFC  376B               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 12908  001EFE  2EE8               	decfsz	wreg,f,c
 12909  001F00  D7F8               	goto	u9985
 12910  001F02  C068  F06C         	movff	??_CANsendMessage,CANsendMessage@tamp
 12911  001F06  C069  F06D         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 12912  001F0A  C06A  F06E         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 12913  001F0E  C06B  F06F         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 12914                           
 12915                           ; BSR set to: 0
 12916                           ;CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 12917  001F12  010F               	movlb	15	; () banked
 12918  001F14  5122               	movf	34,w,b	;volatile
 12919  001F16  0B1F               	andlw	31
 12920  001F18  010F               	movlb	15	; () banked
 12921  001F1A  6F22               	movwf	34,b	;volatile
 12922                           
 12923                           ; BSR set to: 15
 12924                           ;CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 12925  001F1C  C06C  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 12926  001F20                     l7203:
 12927                           
 12928                           ;CANlib.h: 498: }
 12929                           ;CANlib.h: 500: if (0b00000001 & flags)
 12930  001F20  0100               	movlb	0	; () banked
 12931  001F22  A167               	btfss	CANsendMessage@flags& (0+255),0,b
 12932  001F24  D003               	goto	l408
 12933                           
 12934                           ; BSR set to: 0
 12935                           ;CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 12936  001F26  010F               	movlb	15	; () banked
 12937  001F28  8120               	bsf	32,0,b	;volatile
 12938  001F2A  D002               	goto	l409
 12939  001F2C                     l408:
 12940                           
 12941                           ; BSR set to: 0
 12942                           ;CANlib.h: 502: else
 12943                           ;CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 12944  001F2C  010F               	movlb	15	; () banked
 12945  001F2E  9120               	bcf	32,0,b	;volatile
 12946  001F30                     l409:
 12947                           
 12948                           ; BSR set to: 15
 12949                           ;CANlib.h: 504: if (0b00000010 & flags)
 12950  001F30  0100               	movlb	0	; () banked
 12951  001F32  A367               	btfss	CANsendMessage@flags& (0+255),1,b
 12952  001F34  D003               	goto	l410
 12953                           
 12954                           ; BSR set to: 0
 12955                           ;CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 12956  001F36  010F               	movlb	15	; () banked
 12957  001F38  8320               	bsf	32,1,b	;volatile
 12958  001F3A  D002               	goto	l7209
 12959  001F3C                     l410:
 12960                           
 12961                           ; BSR set to: 0
 12962                           ;CANlib.h: 506: else
 12963                           ;CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 12964  001F3C  010F               	movlb	15	; () banked
 12965  001F3E  9320               	bcf	32,1,b	;volatile
 12966  001F40                     l7209:
 12967                           
 12968                           ; BSR set to: 15
 12969                           ;CANlib.h: 509: TXB2D0 = data[0];
 12970  001F40  C064  FFD9         	movff	CANsendMessage@data,fsr2l
 12971  001F44  C065  FFDA         	movff	CANsendMessage@data+1,fsr2h
 12972  001F48  50DF               	movf	indf2,w,c
 12973  001F4A  010F               	movlb	15	; () banked
 12974  001F4C  6F26               	movwf	38,b	;volatile
 12975                           
 12976                           ; BSR set to: 15
 12977                           ;CANlib.h: 510: TXB2D1 = data[1];
 12978  001F4E  0100               	movlb	0	; () banked
 12979  001F50  EE20 F001          	lfsr	2,1
 12980  001F54  5164               	movf	CANsendMessage@data& (0+255),w,b
 12981  001F56  26D9               	addwf	fsr2l,f,c
 12982  001F58  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12983  001F5A  22DA               	addwfc	fsr2h,f,c
 12984  001F5C  50DF               	movf	indf2,w,c
 12985  001F5E  010F               	movlb	15	; () banked
 12986  001F60  6F27               	movwf	39,b	;volatile
 12987                           
 12988                           ; BSR set to: 15
 12989                           ;CANlib.h: 511: TXB2D2 = data[2];
 12990  001F62  0100               	movlb	0	; () banked
 12991  001F64  EE20 F002          	lfsr	2,2
 12992  001F68  5164               	movf	CANsendMessage@data& (0+255),w,b
 12993  001F6A  26D9               	addwf	fsr2l,f,c
 12994  001F6C  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 12995  001F6E  22DA               	addwfc	fsr2h,f,c
 12996  001F70  50DF               	movf	indf2,w,c
 12997  001F72  010F               	movlb	15	; () banked
 12998  001F74  6F28               	movwf	40,b	;volatile
 12999                           
 13000                           ; BSR set to: 15
 13001                           ;CANlib.h: 512: TXB2D3 = data[3];
 13002  001F76  0100               	movlb	0	; () banked
 13003  001F78  EE20 F003          	lfsr	2,3
 13004  001F7C  5164               	movf	CANsendMessage@data& (0+255),w,b
 13005  001F7E  26D9               	addwf	fsr2l,f,c
 13006  001F80  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 13007  001F82  22DA               	addwfc	fsr2h,f,c
 13008  001F84  50DF               	movf	indf2,w,c
 13009  001F86  010F               	movlb	15	; () banked
 13010  001F88  6F29               	movwf	41,b	;volatile
 13011                           
 13012                           ; BSR set to: 15
 13013                           ;CANlib.h: 513: TXB2D4 = data[4];
 13014  001F8A  0100               	movlb	0	; () banked
 13015  001F8C  EE20 F004          	lfsr	2,4
 13016  001F90  5164               	movf	CANsendMessage@data& (0+255),w,b
 13017  001F92  26D9               	addwf	fsr2l,f,c
 13018  001F94  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 13019  001F96  22DA               	addwfc	fsr2h,f,c
 13020  001F98  50DF               	movf	indf2,w,c
 13021  001F9A  010F               	movlb	15	; () banked
 13022  001F9C  6F2A               	movwf	42,b	;volatile
 13023                           
 13024                           ; BSR set to: 15
 13025                           ;CANlib.h: 514: TXB2D5 = data[5];
 13026  001F9E  0100               	movlb	0	; () banked
 13027  001FA0  EE20 F005          	lfsr	2,5
 13028  001FA4  5164               	movf	CANsendMessage@data& (0+255),w,b
 13029  001FA6  26D9               	addwf	fsr2l,f,c
 13030  001FA8  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 13031  001FAA  22DA               	addwfc	fsr2h,f,c
 13032  001FAC  50DF               	movf	indf2,w,c
 13033  001FAE  010F               	movlb	15	; () banked
 13034  001FB0  6F2B               	movwf	43,b	;volatile
 13035                           
 13036                           ; BSR set to: 15
 13037                           ;CANlib.h: 515: TXB2D6 = data[6];
 13038  001FB2  0100               	movlb	0	; () banked
 13039  001FB4  EE20 F006          	lfsr	2,6
 13040  001FB8  5164               	movf	CANsendMessage@data& (0+255),w,b
 13041  001FBA  26D9               	addwf	fsr2l,f,c
 13042  001FBC  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 13043  001FBE  22DA               	addwfc	fsr2h,f,c
 13044  001FC0  50DF               	movf	indf2,w,c
 13045  001FC2  010F               	movlb	15	; () banked
 13046  001FC4  6F2C               	movwf	44,b	;volatile
 13047                           
 13048                           ; BSR set to: 15
 13049                           ;CANlib.h: 516: TXB2D7 = data[7];
 13050  001FC6  0100               	movlb	0	; () banked
 13051  001FC8  EE20 F007          	lfsr	2,7
 13052  001FCC  5164               	movf	CANsendMessage@data& (0+255),w,b
 13053  001FCE  26D9               	addwf	fsr2l,f,c
 13054  001FD0  5165               	movf	(CANsendMessage@data+1)& (0+255),w,b
 13055  001FD2  22DA               	addwfc	fsr2h,f,c
 13056  001FD4  50DF               	movf	indf2,w,c
 13057  001FD6  010F               	movlb	15	; () banked
 13058  001FD8  6F2D               	movwf	45,b	;volatile
 13059                           
 13060                           ; BSR set to: 15
 13061                           ;CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 13062  001FDA  010F               	movlb	15	; () banked
 13063  001FDC  8720               	bsf	32,3,b	;volatile
 13064                           
 13065                           ; BSR set to: 15
 13066                           ;CANlib.h: 520: return;
 13067  001FDE  0012               	return	
 13068  001FE0                     __end_of_CANsendMessage:
 13069                           	opt stack 0
 13070                           tblptru	equ	0xFF8
 13071                           tblptrh	equ	0xFF7
 13072                           tblptrl	equ	0xFF6
 13073                           tablat	equ	0xFF5
 13074                           prodh	equ	0xFF4
 13075                           prodl	equ	0xFF3
 13076                           intcon	equ	0xFF2
 13077                           postinc0	equ	0xFEE
 13078                           wreg	equ	0xFE8
 13079                           indf2	equ	0xFDF
 13080                           postinc2	equ	0xFDE
 13081                           postdec2	equ	0xFDD
 13082                           fsr2h	equ	0xFDA
 13083                           fsr2l	equ	0xFD9
 13084                           status	equ	0xFD8
 13085                           
 13086 ;; *************** function _CANisTxReady *****************
 13087 ;; Defined at:
 13088 ;;		line 1154 in file "CANlib.h"
 13089 ;; Parameters:    Size  Location     Type
 13090 ;;		None
 13091 ;; Auto vars:     Size  Location     Type
 13092 ;;		None
 13093 ;; Return value:  Size  Location     Type
 13094 ;;                  1    wreg      unsigned char 
 13095 ;; Registers used:
 13096 ;;		wreg, status,2
 13097 ;; Tracked objects:
 13098 ;;		On entry : 0/0
 13099 ;;		On exit  : 0/0
 13100 ;;		Unchanged: 0/0
 13101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13103 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13105 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13106 ;;Total ram usage:        1 bytes
 13107 ;; Hardware stack levels used:    1
 13108 ;; Hardware stack levels required when called:    2
 13109 ;; This function calls:
 13110 ;;		Nothing
 13111 ;; This function is called by:
 13112 ;;		_main
 13113 ;;		_rampe
 13114 ;;		_send_data
 13115 ;;		_battery_measure
 13116 ;; This function uses a non-reentrant model
 13117 ;;
 13118                           
 13119                           	psect	text33
 13120  0052CC                     __ptext33:
 13121                           	opt stack 0
 13122  0052CC                     _CANisTxReady:
 13123                           	opt stack 27
 13124                           
 13125                           ;CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TXREQ)
      +                          ;
 13126                           
 13127                           ; BSR set to: 15
 13128                           ;incstack = 0
 13129  0052CC  0E01               	movlw	1
 13130  0052CE  0100               	movlb	0	; () banked
 13131  0052D0  6F60               	movwf	_CANisTxReady$3005& (0+255),b
 13132                           
 13133                           ; BSR set to: 0
 13134  0052D2  010F               	movlb	15	; () banked
 13135  0052D4  A740               	btfss	64,3,b	;volatile
 13136  0052D6  D009               	goto	l562
 13137                           
 13138                           ; BSR set to: 15
 13139  0052D8  010F               	movlb	15	; () banked
 13140  0052DA  A730               	btfss	48,3,b	;volatile
 13141  0052DC  D006               	goto	l562
 13142                           
 13143                           ; BSR set to: 15
 13144  0052DE  010F               	movlb	15	; () banked
 13145  0052E0  A720               	btfss	32,3,b	;volatile
 13146  0052E2  D003               	goto	l562
 13147                           
 13148                           ; BSR set to: 15
 13149  0052E4  0E00               	movlw	0
 13150  0052E6  0100               	movlb	0	; () banked
 13151  0052E8  6F60               	movwf	_CANisTxReady$3005& (0+255),b
 13152  0052EA                     l562:
 13153  0052EA  0100               	movlb	0	; () banked
 13154  0052EC  5160               	movf	_CANisTxReady$3005& (0+255),w,b
 13155  0052EE  0012               	return	
 13156  0052F0                     __end_of_CANisTxReady:
 13157                           	opt stack 0
 13158                           tblptru	equ	0xFF8
 13159                           tblptrh	equ	0xFF7
 13160                           tblptrl	equ	0xFF6
 13161                           tablat	equ	0xFF5
 13162                           prodh	equ	0xFF4
 13163                           prodl	equ	0xFF3
 13164                           intcon	equ	0xFF2
 13165                           postinc0	equ	0xFEE
 13166                           wreg	equ	0xFE8
 13167                           indf2	equ	0xFDF
 13168                           postinc2	equ	0xFDE
 13169                           postdec2	equ	0xFDD
 13170                           fsr2h	equ	0xFDA
 13171                           fsr2l	equ	0xFD9
 13172                           status	equ	0xFD8
 13173                           
 13174 ;; *************** function _OpenTimer2 *****************
 13175 ;; Defined at:
 13176 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
 13177 ;; Parameters:    Size  Location     Type
 13178 ;;  config          1    wreg     unsigned char 
 13179 ;; Auto vars:     Size  Location     Type
 13180 ;;  config          1    0[BANK0 ] unsigned char 
 13181 ;; Return value:  Size  Location     Type
 13182 ;;		None               void
 13183 ;; Registers used:
 13184 ;;		wreg, status,2, status,0
 13185 ;; Tracked objects:
 13186 ;;		On entry : 0/0
 13187 ;;		On exit  : 0/0
 13188 ;;		Unchanged: 0/0
 13189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13193 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13194 ;;Total ram usage:        1 bytes
 13195 ;; Hardware stack levels used:    1
 13196 ;; Hardware stack levels required when called:    2
 13197 ;; This function calls:
 13198 ;;		Nothing
 13199 ;; This function is called by:
 13200 ;;		_main
 13201 ;; This function uses a non-reentrant model
 13202 ;;
 13203                           
 13204                           	psect	text34
 13205  0052F0                     __ptext34:
 13206                           	opt stack 0
 13207  0052F0                     _OpenTimer2:
 13208                           	opt stack 28
 13209                           
 13210                           ; BSR set to: 0
 13211                           ;incstack = 0
 13212                           ;OpenTimer2@config stored from wreg
 13213  0052F0  0100               	movlb	0	; () banked
 13214  0052F2  6F60               	movwf	OpenTimer2@config& (0+255),b
 13215  0052F4  0100               	movlb	0	; () banked
 13216  0052F6  5160               	movf	OpenTimer2@config& (0+255),w,b
 13217  0052F8  0BFB               	andlw	251
 13218  0052FA  6ECA               	movwf	4042,c	;volatile
 13219                           
 13220                           ; BSR set to: 0
 13221  0052FC  0E00               	movlw	0
 13222  0052FE  6ECC               	movwf	4044,c	;volatile
 13223                           
 13224                           ; BSR set to: 0
 13225  005300  929E               	bcf	3998,1,c	;volatile
 13226                           
 13227                           ; BSR set to: 0
 13228  005302  0100               	movlb	0	; () banked
 13229  005304  AF60               	btfss	OpenTimer2@config& (0+255),7,b
 13230  005306  D002               	goto	l782
 13231                           
 13232                           ; BSR set to: 0
 13233  005308  829D               	bsf	3997,1,c	;volatile
 13234  00530A  D001               	goto	l783
 13235  00530C                     l782:
 13236                           
 13237                           ; BSR set to: 0
 13238  00530C  929D               	bcf	3997,1,c	;volatile
 13239  00530E                     l783:
 13240                           
 13241                           ; BSR set to: 0
 13242  00530E  84CA               	bsf	4042,2,c	;volatile
 13243                           
 13244                           ; BSR set to: 0
 13245  005310  0012               	return		;funcret
 13246  005312                     __end_of_OpenTimer2:
 13247                           	opt stack 0
 13248                           tblptru	equ	0xFF8
 13249                           tblptrh	equ	0xFF7
 13250                           tblptrl	equ	0xFF6
 13251                           tablat	equ	0xFF5
 13252                           prodh	equ	0xFF4
 13253                           prodl	equ	0xFF3
 13254                           intcon	equ	0xFF2
 13255                           postinc0	equ	0xFEE
 13256                           wreg	equ	0xFE8
 13257                           indf2	equ	0xFDF
 13258                           postinc2	equ	0xFDE
 13259                           postdec2	equ	0xFDD
 13260                           fsr2h	equ	0xFDA
 13261                           fsr2l	equ	0xFD9
 13262                           status	equ	0xFD8
 13263                           
 13264 ;; *************** function _OpenEPWM1 *****************
 13265 ;; Defined at:
 13266 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
 13267 ;; Parameters:    Size  Location     Type
 13268 ;;  period          1    wreg     unsigned char 
 13269 ;; Auto vars:     Size  Location     Type
 13270 ;;  period          1    0[BANK0 ] unsigned char 
 13271 ;; Return value:  Size  Location     Type
 13272 ;;		None               void
 13273 ;; Registers used:
 13274 ;;		wreg, status,2
 13275 ;; Tracked objects:
 13276 ;;		On entry : 0/0
 13277 ;;		On exit  : 0/0
 13278 ;;		Unchanged: 0/0
 13279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13281 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13283 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13284 ;;Total ram usage:        1 bytes
 13285 ;; Hardware stack levels used:    1
 13286 ;; Hardware stack levels required when called:    2
 13287 ;; This function calls:
 13288 ;;		Nothing
 13289 ;; This function is called by:
 13290 ;;		_main
 13291 ;; This function uses a non-reentrant model
 13292 ;;
 13293                           
 13294                           	psect	text35
 13295  00533E                     __ptext35:
 13296                           	opt stack 0
 13297  00533E                     _OpenEPWM1:
 13298                           	opt stack 28
 13299                           
 13300                           ; BSR set to: 0
 13301                           ;incstack = 0
 13302                           ;OpenEPWM1@period stored from wreg
 13303  00533E  0100               	movlb	0	; () banked
 13304  005340  6F60               	movwf	OpenEPWM1@period& (0+255),b
 13305  005342  0E0C               	movlw	12
 13306  005344  6EBA               	movwf	4026,c	;volatile
 13307  005346  94CA               	bcf	4042,2,c	;volatile
 13308  005348  C060  FFCB         	movff	OpenEPWM1@period,4043	;volatile
 13309  00534C  84CA               	bsf	4042,2,c	;volatile
 13310  00534E  0012               	return		;funcret
 13311  005350                     __end_of_OpenEPWM1:
 13312                           	opt stack 0
 13313                           tblptru	equ	0xFF8
 13314                           tblptrh	equ	0xFF7
 13315                           tblptrl	equ	0xFF6
 13316                           tablat	equ	0xFF5
 13317                           prodh	equ	0xFF4
 13318                           prodl	equ	0xFF3
 13319                           intcon	equ	0xFF2
 13320                           postinc0	equ	0xFEE
 13321                           wreg	equ	0xFE8
 13322                           indf2	equ	0xFDF
 13323                           postinc2	equ	0xFDE
 13324                           postdec2	equ	0xFDD
 13325                           fsr2h	equ	0xFDA
 13326                           fsr2l	equ	0xFD9
 13327                           status	equ	0xFD8
 13328                           
 13329 ;; *************** function _ISR_bassa *****************
 13330 ;; Defined at:
 13331 ;;		line 93 in file "motore.c"
 13332 ;; Parameters:    Size  Location     Type
 13333 ;;		None
 13334 ;; Auto vars:     Size  Location     Type
 13335 ;;  i               1   33[COMRAM] unsigned char 
 13336 ;; Return value:  Size  Location     Type
 13337 ;;		None               void
 13338 ;; Registers used:
 13339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13340 ;; Tracked objects:
 13341 ;;		On entry : 0/0
 13342 ;;		On exit  : 0/0
 13343 ;;		Unchanged: 0/0
 13344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13347 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13348 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13349 ;;Total ram usage:       22 bytes
 13350 ;; Hardware stack levels used:    1
 13351 ;; Hardware stack levels required when called:    1
 13352 ;; This function calls:
 13353 ;;		_CANisRxReady
 13354 ;;		_CANreceiveMessage
 13355 ;; This function is called by:
 13356 ;;		Interrupt level 1
 13357 ;; This function uses a non-reentrant model
 13358 ;;
 13359                           
 13360                           	psect	intcodelo
 13361  000018                     __pintcodelo:
 13362                           	opt stack 0
 13363  000018                     _ISR_bassa:
 13364                           	opt stack 24
 13365                           
 13366                           ;incstack = 0
 13367  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13368  00001A  CFD8 F011          	movff	status,??_ISR_bassa+4
 13369  00001E  CFE8 F012          	movff	wreg,??_ISR_bassa+5
 13370  000022  CFE0 F013          	movff	bsr,??_ISR_bassa+6
 13371  000026  CFFA F014          	movff	pclath,??_ISR_bassa+7
 13372  00002A  CFFB F015          	movff	pclatu,??_ISR_bassa+8
 13373  00002E  CFE9 F016          	movff	fsr0l,??_ISR_bassa+9
 13374  000032  CFEA F017          	movff	fsr0h,??_ISR_bassa+10
 13375  000036  CFE1 F018          	movff	fsr1l,??_ISR_bassa+11
 13376  00003A  CFE2 F019          	movff	fsr1h,??_ISR_bassa+12
 13377  00003E  CFD9 F01A          	movff	fsr2l,??_ISR_bassa+13
 13378  000042  CFDA F01B          	movff	fsr2h,??_ISR_bassa+14
 13379  000046  CFF3 F01C          	movff	prodl,??_ISR_bassa+15
 13380  00004A  CFF4 F01D          	movff	prodh,??_ISR_bassa+16
 13381  00004E  CFF6 F01E          	movff	tblptrl,??_ISR_bassa+17
 13382  000052  CFF7 F01F          	movff	tblptrh,??_ISR_bassa+18
 13383  000056  CFF8 F020          	movff	tblptru,??_ISR_bassa+19
 13384  00005A  CFF5 F021          	movff	tablat,??_ISR_bassa+20
 13385                           
 13386                           ;motore.c: 94: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 13387  00005E  B0A4               	btfsc	4004,0,c	;volatile
 13388  000060  D002               	goto	i1l658
 13389  000062  A2A4               	btfss	4004,1,c	;volatile
 13390  000064  D058               	goto	i1l5679
 13391  000066                     i1l658:
 13392                           
 13393                           ;motore.c: 95: if (PIR3bits.RXB0IF == 1) {
 13394  000066  B0A4               	btfsc	4004,0,c	;volatile
 13395                           
 13396                           ;motore.c: 96: PORTCbits.RC1 = 1;
 13397  000068  8282               	bsf	3970,1,c	;volatile
 13398                           
 13399                           ;motore.c: 97: }
 13400                           ;motore.c: 98: if (CANisRxReady()) {
 13401  00006A  EC94  F029         	call	_CANisRxReady	;wreg free
 13402  00006E  0900               	iorlw	0
 13403  000070  B4D8               	btfsc	status,2,c
 13404  000072  D04F               	goto	i1l5675
 13405                           
 13406                           ;motore.c: 99: CANreceiveMessage(&msg);
 13407  000074  0E10               	movlw	low _msg
 13408  000076  6E01               	movwf	CANreceiveMessage@msg,c
 13409  000078  0E01               	movlw	high _msg
 13410  00007A  6E02               	movwf	CANreceiveMessage@msg+1,c
 13411  00007C  ECF0  F00F         	call	_CANreceiveMessage	;wreg free
 13412                           
 13413                           ;motore.c: 100: remote_frame = msg.RTR;
 13414  000080  0101               	movlb	1	; () banked
 13415  000082  A11E               	btfss	(_msg+14)& (0+255),0,b
 13416  000084  D002               	goto	i1u716_20
 13417  000086  8C3F               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
 13418  000088  D001               	goto	i1l5651
 13419  00008A                     i1u716_20:
 13420  00008A  9C3F               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
 13421  00008C                     i1l5651:
 13422                           
 13423                           ;motore.c: 101: id = msg.identifier;
 13424  00008C  C110  F023         	movff	_msg,_id	;volatile
 13425  000090  C111  F024         	movff	_msg+1,_id+1	;volatile
 13426  000094  C112  F025         	movff	_msg+2,_id+2	;volatile
 13427  000098  C113  F026         	movff	_msg+3,_id+3	;volatile
 13428                           
 13429                           ;motore.c: 102: for (char i = 0; i < 8; i++) {
 13430  00009C  0E00               	movlw	0
 13431  00009E  6E22               	movwf	ISR_bassa@i,c
 13432  0000A0                     i1l5655:
 13433  0000A0  0E07               	movlw	7
 13434  0000A2  6422               	cpfsgt	ISR_bassa@i,c
 13435  0000A4  D001               	goto	i1l5659
 13436  0000A6  D014               	goto	i1l5665
 13437  0000A8                     i1l5659:
 13438                           
 13439                           ;motore.c: 103: data_array[i] = msg.data[i];
 13440  0000A8  5022               	movf	ISR_bassa@i,w,c
 13441  0000AA  0D01               	mullw	1
 13442  0000AC  0E14               	movlw	low (_msg+4)
 13443  0000AE  24F3               	addwf	prodl,w,c
 13444  0000B0  6ED9               	movwf	fsr2l,c
 13445  0000B2  0E01               	movlw	high (_msg+4)
 13446  0000B4  20F4               	addwfc	prodh,w,c
 13447  0000B6  6EDA               	movwf	fsr2h,c
 13448  0000B8  5022               	movf	ISR_bassa@i,w,c
 13449  0000BA  0D01               	mullw	1
 13450  0000BC  0E37               	movlw	low _data_array
 13451  0000BE  24F3               	addwf	prodl,w,c
 13452  0000C0  6EE1               	movwf	fsr1l,c
 13453  0000C2  0E00               	movlw	high _data_array
 13454  0000C4  20F4               	addwfc	prodh,w,c
 13455  0000C6  6EE2               	movwf	fsr1h,c
 13456  0000C8  CFDF FFE7          	movff	indf2,indf1
 13457  0000CC  2A22               	incf	ISR_bassa@i,f,c
 13458  0000CE  D7E8               	goto	i1l5655
 13459  0000D0                     i1l5665:
 13460                           
 13461                           ;motore.c: 104: }
 13462                           ;motore.c: 105: if (id == 0b00000000011) {
 13463  0000D0  0E03               	movlw	3
 13464  0000D2  1823               	xorwf	_id,w,c	;volatile
 13465  0000D4  1024               	iorwf	_id+1,w,c	;volatile
 13466  0000D6  1025               	iorwf	_id+2,w,c	;volatile
 13467  0000D8  1026               	iorwf	_id+3,w,c	;volatile
 13468  0000DA  A4D8               	btfss	status,2,c
 13469  0000DC  D019               	goto	i1l5673
 13470                           
 13471                           ;motore.c: 106: requestSpeed = data_array[1];
 13472  0000DE  5038               	movf	_data_array+1,w,c
 13473  0000E0  6E2B               	movwf	_requestSpeed,c	;volatile
 13474  0000E2  6A2C               	clrf	_requestSpeed+1,c	;volatile
 13475  0000E4  6A2D               	clrf	_requestSpeed+2,c	;volatile
 13476  0000E6  6A2E               	clrf	_requestSpeed+3,c	;volatile
 13477                           
 13478                           ;motore.c: 107: requestSpeed = ((requestSpeed << 8) | data_array[0]);
 13479  0000E8  5037               	movf	_data_array,w,c
 13480  0000EA  C02B  F00E         	movff	_requestSpeed,??_ISR_bassa+1	;volatile
 13481  0000EE  C02C  F00F         	movff	_requestSpeed+1,??_ISR_bassa+2	;volatile
 13482  0000F2  C02D  F010         	movff	_requestSpeed+2,??_ISR_bassa+3	;volatile
 13483  0000F6  6A0D               	clrf	??_ISR_bassa& (0+255),c
 13484  0000F8  100D               	iorwf	??_ISR_bassa,w,c
 13485  0000FA  6E2B               	movwf	_requestSpeed,c	;volatile
 13486  0000FC  500E               	movf	??_ISR_bassa+1,w,c
 13487  0000FE  6E2C               	movwf	_requestSpeed+1,c	;volatile
 13488  000100  500F               	movf	??_ISR_bassa+2,w,c
 13489  000102  6E2D               	movwf	_requestSpeed+2,c	;volatile
 13490  000104  5010               	movf	??_ISR_bassa+3,w,c
 13491  000106  6E2E               	movwf	_requestSpeed+3,c	;volatile
 13492                           
 13493                           ;motore.c: 108: dir = data_array[2];
 13494  000108  C039  F0FD         	movff	_data_array+2,_dir	;volatile
 13495  00010C  0100               	movlb	0	; () banked
 13496  00010E  6BFE               	clrf	(_dir+1)& (0+255),b	;volatile
 13497  000110                     i1l5673:
 13498                           
 13499                           ;motore.c: 109: }
 13500                           ;motore.c: 110: new_message = 1;
 13501  000110  8A3F               	bsf	_new_message/(0+8),_new_message& (0+7),c	;volatile
 13502  000112                     i1l5675:
 13503                           
 13504                           ;motore.c: 111: }
 13505                           ;motore.c: 112: PIR3bits.RXB0IF = 0;
 13506  000112  90A4               	bcf	4004,0,c	;volatile
 13507                           
 13508                           ;motore.c: 113: PIR3bits.RXB1IF = 0;
 13509  000114  92A4               	bcf	4004,1,c	;volatile
 13510  000116                     i1l5679:
 13511                           
 13512                           ;motore.c: 114: }
 13513                           ;motore.c: 116: if (PIR2bits.TMR3IF) {
 13514  000116  A2A1               	btfss	4001,1,c	;volatile
 13515  000118  D00C               	goto	i1l665
 13516                           
 13517                           ;motore.c: 117: timeCounter++;
 13518  00011A  0E01               	movlw	1
 13519  00011C  0100               	movlb	0	; () banked
 13520  00011E  27EF               	addwf	_timeCounter& (0+255),f,b	;volatile
 13521  000120  0E00               	movlw	0
 13522  000122  23F0               	addwfc	(_timeCounter+1)& (0+255),f,b	;volatile
 13523  000124  23F1               	addwfc	(_timeCounter+2)& (0+255),f,b	;volatile
 13524  000126  23F2               	addwfc	(_timeCounter+3)& (0+255),f,b	;volatile
 13525                           
 13526                           ; BSR set to: 0
 13527                           ;motore.c: 118: TMR3H = 0x63;
 13528  000128  0E63               	movlw	99
 13529  00012A  6EB3               	movwf	4019,c	;volatile
 13530                           
 13531                           ; BSR set to: 0
 13532                           ;motore.c: 119: TMR3L = 0xC0;
 13533  00012C  0EC0               	movlw	192
 13534  00012E  6EB2               	movwf	4018,c	;volatile
 13535                           
 13536                           ; BSR set to: 0
 13537                           ;motore.c: 120: PIR2bits.TMR3IF = 0;
 13538  000130  92A1               	bcf	4001,1,c	;volatile
 13539  000132                     i1l665:
 13540  000132  C021  FFF5         	movff	??_ISR_bassa+20,tablat
 13541  000136  C020  FFF8         	movff	??_ISR_bassa+19,tblptru
 13542  00013A  C01F  FFF7         	movff	??_ISR_bassa+18,tblptrh
 13543  00013E  C01E  FFF6         	movff	??_ISR_bassa+17,tblptrl
 13544  000142  C01D  FFF4         	movff	??_ISR_bassa+16,prodh
 13545  000146  C01C  FFF3         	movff	??_ISR_bassa+15,prodl
 13546  00014A  C01B  FFDA         	movff	??_ISR_bassa+14,fsr2h
 13547  00014E  C01A  FFD9         	movff	??_ISR_bassa+13,fsr2l
 13548  000152  C019  FFE2         	movff	??_ISR_bassa+12,fsr1h
 13549  000156  C018  FFE1         	movff	??_ISR_bassa+11,fsr1l
 13550  00015A  C017  FFEA         	movff	??_ISR_bassa+10,fsr0h
 13551  00015E  C016  FFE9         	movff	??_ISR_bassa+9,fsr0l
 13552  000162  C015  FFFB         	movff	??_ISR_bassa+8,pclatu
 13553  000166  C014  FFFA         	movff	??_ISR_bassa+7,pclath
 13554  00016A  C013  FFE0         	movff	??_ISR_bassa+6,bsr
 13555  00016E  C012  FFE8         	movff	??_ISR_bassa+5,wreg
 13556  000172  C011  FFD8         	movff	??_ISR_bassa+4,status
 13557  000176  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13558  000178  0010               	retfie	
 13559  00017A                     __end_of_ISR_bassa:
 13560                           	opt stack 0
 13561                           pclatu	equ	0xFFB
 13562                           pclath	equ	0xFFA
 13563                           tblptru	equ	0xFF8
 13564                           tblptrh	equ	0xFF7
 13565                           tblptrl	equ	0xFF6
 13566                           tablat	equ	0xFF5
 13567                           prodh	equ	0xFF4
 13568                           prodl	equ	0xFF3
 13569                           intcon	equ	0xFF2
 13570                           postinc0	equ	0xFEE
 13571                           fsr0h	equ	0xFEA
 13572                           fsr0l	equ	0xFE9
 13573                           wreg	equ	0xFE8
 13574                           indf1	equ	0xFE7
 13575                           fsr1h	equ	0xFE2
 13576                           fsr1l	equ	0xFE1
 13577                           bsr	equ	0xFE0
 13578                           indf2	equ	0xFDF
 13579                           postinc2	equ	0xFDE
 13580                           postdec2	equ	0xFDD
 13581                           fsr2h	equ	0xFDA
 13582                           fsr2l	equ	0xFD9
 13583                           status	equ	0xFD8
 13584                           
 13585 ;; *************** function _CANreceiveMessage *****************
 13586 ;; Defined at:
 13587 ;;		line 528 in file "CANlib.h"
 13588 ;; Parameters:    Size  Location     Type
 13589 ;;  msg             2    0[COMRAM] PTR struct .
 13590 ;;		 -> msg(15), 
 13591 ;; Auto vars:     Size  Location     Type
 13592 ;;  tamp            1   11[COMRAM] unsigned char 
 13593 ;;  error           1   10[COMRAM] unsigned char 
 13594 ;; Return value:  Size  Location     Type
 13595 ;;                  1    wreg      unsigned char 
 13596 ;; Registers used:
 13597 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13598 ;; Tracked objects:
 13599 ;;		On entry : 0/0
 13600 ;;		On exit  : 0/0
 13601 ;;		Unchanged: 0/0
 13602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13603 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13604 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13605 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13606 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13607 ;;Total ram usage:       12 bytes
 13608 ;; Hardware stack levels used:    1
 13609 ;; This function calls:
 13610 ;;		Nothing
 13611 ;; This function is called by:
 13612 ;;		_ISR_bassa
 13613 ;; This function uses a non-reentrant model
 13614 ;;
 13615                           
 13616                           	psect	text37
 13617  001FE0                     __ptext37:
 13618                           	opt stack 0
 13619  001FE0                     _CANreceiveMessage:
 13620                           	opt stack 24
 13621                           
 13622                           ;CANlib.h: 530: BYTE tamp;
 13623                           ;CANlib.h: 531: BYTE error = 0;
 13624                           
 13625                           ;incstack = 0
 13626  001FE0  0E00               	movlw	0
 13627  001FE2  6E0B               	movwf	CANreceiveMessage@error,c
 13628                           
 13629                           ;CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 13630  001FE4  BE74               	btfsc	3956,7,c	;volatile
 13631                           
 13632                           ;CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 13633  001FE6  800B               	bsf	CANreceiveMessage@error,0,c
 13634                           
 13635                           ;CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 13636  001FE8  BC74               	btfsc	3956,6,c	;volatile
 13637                           
 13638                           ;CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 13639  001FEA  820B               	bsf	CANreceiveMessage@error,1,c
 13640                           
 13641                           ;CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 13642  001FEC  010F               	movlb	15	; () banked
 13643  001FEE  AF50               	btfss	80,7,b	;volatile
 13644  001FF0  D143               	goto	i1l416
 13645                           
 13646                           ; BSR set to: 15
 13647                           ;CANlib.h: 541: {
 13648                           ;CANlib.h: 542: msg->identifier = 0;
 13649  001FF2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13650  001FF6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13651  001FFA  6ADE               	clrf	postinc2,c
 13652  001FFC  6ADE               	clrf	postinc2,c
 13653  001FFE  6ADE               	clrf	postinc2,c
 13654  002000  6ADD               	clrf	postdec2,c
 13655                           
 13656                           ; BSR set to: 15
 13657                           ;CANlib.h: 543: msg->data[0] =RXB1D0;
 13658  002002  EE20 F004          	lfsr	2,4
 13659  002006  5001               	movf	CANreceiveMessage@msg,w,c
 13660  002008  26D9               	addwf	fsr2l,f,c
 13661  00200A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13662  00200C  22DA               	addwfc	fsr2h,f,c
 13663  00200E  CF56 FFDF          	movff	3926,indf2	;volatile
 13664                           
 13665                           ; BSR set to: 15
 13666                           ;CANlib.h: 544: msg->data[1] =RXB1D1;
 13667  002012  EE20 F005          	lfsr	2,5
 13668  002016  5001               	movf	CANreceiveMessage@msg,w,c
 13669  002018  26D9               	addwf	fsr2l,f,c
 13670  00201A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13671  00201C  22DA               	addwfc	fsr2h,f,c
 13672  00201E  CF57 FFDF          	movff	3927,indf2	;volatile
 13673                           
 13674                           ; BSR set to: 15
 13675                           ;CANlib.h: 545: msg->data[2] =RXB1D2;
 13676  002022  EE20 F006          	lfsr	2,6
 13677  002026  5001               	movf	CANreceiveMessage@msg,w,c
 13678  002028  26D9               	addwf	fsr2l,f,c
 13679  00202A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13680  00202C  22DA               	addwfc	fsr2h,f,c
 13681  00202E  CF58 FFDF          	movff	3928,indf2	;volatile
 13682                           
 13683                           ; BSR set to: 15
 13684                           ;CANlib.h: 546: msg->data[3] =RXB1D3;
 13685  002032  EE20 F007          	lfsr	2,7
 13686  002036  5001               	movf	CANreceiveMessage@msg,w,c
 13687  002038  26D9               	addwf	fsr2l,f,c
 13688  00203A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13689  00203C  22DA               	addwfc	fsr2h,f,c
 13690  00203E  CF59 FFDF          	movff	3929,indf2	;volatile
 13691                           
 13692                           ; BSR set to: 15
 13693                           ;CANlib.h: 547: msg->data[4] =RXB1D4;
 13694  002042  EE20 F008          	lfsr	2,8
 13695  002046  5001               	movf	CANreceiveMessage@msg,w,c
 13696  002048  26D9               	addwf	fsr2l,f,c
 13697  00204A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13698  00204C  22DA               	addwfc	fsr2h,f,c
 13699  00204E  CF5A FFDF          	movff	3930,indf2	;volatile
 13700                           
 13701                           ; BSR set to: 15
 13702                           ;CANlib.h: 548: msg->data[5] =RXB1D5;
 13703  002052  EE20 F009          	lfsr	2,9
 13704  002056  5001               	movf	CANreceiveMessage@msg,w,c
 13705  002058  26D9               	addwf	fsr2l,f,c
 13706  00205A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13707  00205C  22DA               	addwfc	fsr2h,f,c
 13708  00205E  CF5B FFDF          	movff	3931,indf2	;volatile
 13709                           
 13710                           ; BSR set to: 15
 13711                           ;CANlib.h: 549: msg->data[6] =RXB1D6;
 13712  002062  EE20 F00A          	lfsr	2,10
 13713  002066  5001               	movf	CANreceiveMessage@msg,w,c
 13714  002068  26D9               	addwf	fsr2l,f,c
 13715  00206A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13716  00206C  22DA               	addwfc	fsr2h,f,c
 13717  00206E  CF5C FFDF          	movff	3932,indf2	;volatile
 13718                           
 13719                           ; BSR set to: 15
 13720                           ;CANlib.h: 550: msg->data[7] =RXB1D7;
 13721  002072  EE20 F00B          	lfsr	2,11
 13722  002076  5001               	movf	CANreceiveMessage@msg,w,c
 13723  002078  26D9               	addwf	fsr2l,f,c
 13724  00207A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13725  00207C  22DA               	addwfc	fsr2h,f,c
 13726  00207E  CF5D FFDF          	movff	3933,indf2	;volatile
 13727                           
 13728                           ; BSR set to: 15
 13729                           ;CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 13730  002082  EE20 F00E          	lfsr	2,14
 13731  002086  5001               	movf	CANreceiveMessage@msg,w,c
 13732  002088  26D9               	addwf	fsr2l,f,c
 13733  00208A  5002               	movf	CANreceiveMessage@msg+1,w,c
 13734  00208C  22DA               	addwfc	fsr2h,f,c
 13735  00208E  010F               	movlb	15	; () banked
 13736  002090  AD55               	btfss	85,6,b	;volatile
 13737  002092  D002               	goto	i1u662_20
 13738  002094  0E01               	movlw	1
 13739  002096  D001               	goto	i1u662_26
 13740  002098                     i1u662_20:
 13741  002098  0E00               	movlw	0
 13742  00209A                     i1u662_26:
 13743  00209A  6EDF               	movwf	indf2,c
 13744                           
 13745                           ; BSR set to: 15
 13746                           ;CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 13747  00209C  EE20 F00D          	lfsr	2,13
 13748  0020A0  5001               	movf	CANreceiveMessage@msg,w,c
 13749  0020A2  26D9               	addwf	fsr2l,f,c
 13750  0020A4  5002               	movf	CANreceiveMessage@msg+1,w,c
 13751  0020A6  22DA               	addwfc	fsr2h,f,c
 13752  0020A8  010F               	movlb	15	; () banked
 13753  0020AA  5155               	movf	85,w,b	;volatile
 13754  0020AC  0B0F               	andlw	15
 13755  0020AE  6EDF               	movwf	indf2,c
 13756                           
 13757                           ; BSR set to: 15
 13758                           ;CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 13759  0020B0  EE20 F00C          	lfsr	2,12
 13760  0020B4  5001               	movf	CANreceiveMessage@msg,w,c
 13761  0020B6  26D9               	addwf	fsr2l,f,c
 13762  0020B8  5002               	movf	CANreceiveMessage@msg+1,w,c
 13763  0020BA  22DA               	addwfc	fsr2h,f,c
 13764  0020BC  010F               	movlb	15	; () banked
 13765  0020BE  A752               	btfss	82,3,b	;volatile
 13766  0020C0  D002               	goto	i1u663_20
 13767  0020C2  0E01               	movlw	1
 13768  0020C4  D001               	goto	i1u663_26
 13769  0020C6                     i1u663_20:
 13770  0020C6  0E00               	movlw	0
 13771  0020C8                     i1u663_26:
 13772  0020C8  6EDF               	movwf	indf2,c
 13773                           
 13774                           ; BSR set to: 15
 13775                           ;CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 13776  0020CA  010F               	movlb	15	; () banked
 13777  0020CC  B752               	btfsc	82,3,b	;volatile
 13778  0020CE  D044               	goto	i1l5289
 13779                           
 13780                           ; BSR set to: 15
 13781                           ;CANlib.h: 559: {
 13782                           ;CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 13783  0020D0  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 13784  0020D4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13785  0020D6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13786  0020D8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13787  0020DA  0E03               	movlw	3
 13788  0020DC                     i1u665_25:
 13789  0020DC  90D8               	bcf	status,0,c
 13790  0020DE  3603               	rlcf	??_CANreceiveMessage,f,c
 13791  0020E0  3604               	rlcf	??_CANreceiveMessage+1,f,c
 13792  0020E2  3605               	rlcf	??_CANreceiveMessage+2,f,c
 13793  0020E4  3606               	rlcf	??_CANreceiveMessage+3,f,c
 13794  0020E6  2EE8               	decfsz	wreg,f,c
 13795  0020E8  D7F9               	goto	i1u665_25
 13796  0020EA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13797  0020EE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13798  0020F2  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 13799  0020F6  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 13800  0020FA  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 13801  0020FE  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 13802                           
 13803                           ; BSR set to: 15
 13804                           ;CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 13805  002102  010F               	movlb	15	; () banked
 13806  002104  3952               	swapf	82,w,b	;volatile
 13807  002106  42E8               	rrncf	wreg,f,c
 13808  002108  0B07               	andlw	7
 13809  00210A  0B07               	andlw	7
 13810  00210C  6E0C               	movwf	CANreceiveMessage@tamp,c
 13811                           
 13812                           ; BSR set to: 15
 13813                           ;CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 13814  00210E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13815  002112  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13816  002116  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 13817  00211A  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 13818  00211E  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 13819  002122  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 13820  002126  500C               	movf	CANreceiveMessage@tamp,w,c
 13821  002128  2403               	addwf	??_CANreceiveMessage,w,c
 13822  00212A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 13823  00212C  0E00               	movlw	0
 13824  00212E  2004               	addwfc	??_CANreceiveMessage+1,w,c
 13825  002130  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 13826  002132  0E00               	movlw	0
 13827  002134  2005               	addwfc	??_CANreceiveMessage+2,w,c
 13828  002136  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 13829  002138  0E00               	movlw	0
 13830  00213A  2006               	addwfc	??_CANreceiveMessage+3,w,c
 13831  00213C  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 13832  00213E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13833  002142  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13834  002146  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 13835  00214A  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 13836  00214E  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 13837  002152  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 13838                           
 13839                           ;CANlib.h: 563: }
 13840  002156  D08D               	goto	i1l5315
 13841  002158                     i1l5289:
 13842                           
 13843                           ; BSR set to: 15
 13844                           ;CANlib.h: 564: else
 13845                           ;CANlib.h: 565: {
 13846                           ;CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 13847  002158  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 13848  00215C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13849  00215E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13850  002160  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13851  002162  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13852  002166  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13853  00216A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 13854  00216E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 13855  002172  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 13856  002176  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 13857                           
 13858                           ; BSR set to: 15
 13859                           ;CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 13860  00217A  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 13861  00217E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13862  002180  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13863  002182  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13864  002184  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 13865  002188  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 13866  00218C  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 13867  002190  6A03               	clrf	??_CANreceiveMessage,c
 13868  002192  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13869  002196  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13870  00219A  5003               	movf	??_CANreceiveMessage,w,c
 13871  00219C  26DE               	addwf	postinc2,f,c
 13872  00219E  5004               	movf	??_CANreceiveMessage+1,w,c
 13873  0021A0  22DE               	addwfc	postinc2,f,c
 13874  0021A2  5005               	movf	??_CANreceiveMessage+2,w,c
 13875  0021A4  22DE               	addwfc	postinc2,f,c
 13876  0021A6  5006               	movf	??_CANreceiveMessage+3,w,c
 13877  0021A8  22DE               	addwfc	postinc2,f,c
 13878                           
 13879                           ; BSR set to: 15
 13880                           ;CANlib.h: 569: if (RXB1SIDLbits.EID16)
 13881  0021AA  010F               	movlb	15	; () banked
 13882  0021AC  A152               	btfss	82,0,b	;volatile
 13883  0021AE  D00C               	goto	i1l5297
 13884                           
 13885                           ; BSR set to: 15
 13886                           ;CANlib.h: 570: msg->identifier |= 0x00010000;
 13887  0021B0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13888  0021B4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13889  0021B8  0E00               	movlw	0
 13890  0021BA  12DE               	iorwf	postinc2,f,c
 13891  0021BC  0E00               	movlw	0
 13892  0021BE  12DE               	iorwf	postinc2,f,c
 13893  0021C0  0E01               	movlw	1
 13894  0021C2  12DE               	iorwf	postinc2,f,c
 13895  0021C4  0E00               	movlw	0
 13896  0021C6  12DE               	iorwf	postinc2,f,c
 13897  0021C8                     i1l5297:
 13898                           
 13899                           ; BSR set to: 15
 13900                           ;CANlib.h: 571: if (RXB1SIDLbits.EID17)
 13901  0021C8  010F               	movlb	15	; () banked
 13902  0021CA  A352               	btfss	82,1,b	;volatile
 13903  0021CC  D00C               	goto	i1l5301
 13904                           
 13905                           ; BSR set to: 15
 13906                           ;CANlib.h: 572: msg->identifier |= 0x00020000;
 13907  0021CE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13908  0021D2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13909  0021D6  0E00               	movlw	0
 13910  0021D8  12DE               	iorwf	postinc2,f,c
 13911  0021DA  0E00               	movlw	0
 13912  0021DC  12DE               	iorwf	postinc2,f,c
 13913  0021DE  0E02               	movlw	2
 13914  0021E0  12DE               	iorwf	postinc2,f,c
 13915  0021E2  0E00               	movlw	0
 13916  0021E4  12DE               	iorwf	postinc2,f,c
 13917  0021E6                     i1l5301:
 13918                           
 13919                           ; BSR set to: 15
 13920                           ;CANlib.h: 573: if (RXB1SIDLbits.SID0)
 13921  0021E6  010F               	movlb	15	; () banked
 13922  0021E8  AB52               	btfss	82,5,b	;volatile
 13923  0021EA  D00C               	goto	i1l5305
 13924                           
 13925                           ; BSR set to: 15
 13926                           ;CANlib.h: 574: msg->identifier |= 0x00040000;
 13927  0021EC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13928  0021F0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13929  0021F4  0E00               	movlw	0
 13930  0021F6  12DE               	iorwf	postinc2,f,c
 13931  0021F8  0E00               	movlw	0
 13932  0021FA  12DE               	iorwf	postinc2,f,c
 13933  0021FC  0E04               	movlw	4
 13934  0021FE  12DE               	iorwf	postinc2,f,c
 13935  002200  0E00               	movlw	0
 13936  002202  12DE               	iorwf	postinc2,f,c
 13937  002204                     i1l5305:
 13938                           
 13939                           ; BSR set to: 15
 13940                           ;CANlib.h: 575: if (RXB1SIDLbits.SID1)
 13941  002204  010F               	movlb	15	; () banked
 13942  002206  AD52               	btfss	82,6,b	;volatile
 13943  002208  D00C               	goto	i1l5309
 13944                           
 13945                           ; BSR set to: 15
 13946                           ;CANlib.h: 576: msg->identifier |= 0x00080000;
 13947  00220A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13948  00220E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13949  002212  0E00               	movlw	0
 13950  002214  12DE               	iorwf	postinc2,f,c
 13951  002216  0E00               	movlw	0
 13952  002218  12DE               	iorwf	postinc2,f,c
 13953  00221A  0E08               	movlw	8
 13954  00221C  12DE               	iorwf	postinc2,f,c
 13955  00221E  0E00               	movlw	0
 13956  002220  12DE               	iorwf	postinc2,f,c
 13957  002222                     i1l5309:
 13958                           
 13959                           ; BSR set to: 15
 13960                           ;CANlib.h: 577: if (RXB1SIDLbits.SID2)
 13961  002222  010F               	movlb	15	; () banked
 13962  002224  AF52               	btfss	82,7,b	;volatile
 13963  002226  D00C               	goto	i1l5313
 13964                           
 13965                           ; BSR set to: 15
 13966                           ;CANlib.h: 578: msg->identifier |= 0x00100000;
 13967  002228  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13968  00222C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13969  002230  0E00               	movlw	0
 13970  002232  12DE               	iorwf	postinc2,f,c
 13971  002234  0E00               	movlw	0
 13972  002236  12DE               	iorwf	postinc2,f,c
 13973  002238  0E10               	movlw	16
 13974  00223A  12DE               	iorwf	postinc2,f,c
 13975  00223C  0E00               	movlw	0
 13976  00223E  12DE               	iorwf	postinc2,f,c
 13977  002240                     i1l5313:
 13978                           
 13979                           ; BSR set to: 15
 13980                           ;CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 13981  002240  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 13982  002244  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13983  002246  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13984  002248  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13985  00224A  0E15               	movlw	21
 13986  00224C                     i1u671_25:
 13987  00224C  90D8               	bcf	status,0,c
 13988  00224E  3603               	rlcf	??_CANreceiveMessage,f,c
 13989  002250  3604               	rlcf	??_CANreceiveMessage+1,f,c
 13990  002252  3605               	rlcf	??_CANreceiveMessage+2,f,c
 13991  002254  3606               	rlcf	??_CANreceiveMessage+3,f,c
 13992  002256  2EE8               	decfsz	wreg,f,c
 13993  002258  D7F9               	goto	i1u671_25
 13994  00225A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13995  00225E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13996  002262  5003               	movf	??_CANreceiveMessage,w,c
 13997  002264  12DE               	iorwf	postinc2,f,c
 13998  002266  5004               	movf	??_CANreceiveMessage+1,w,c
 13999  002268  12DE               	iorwf	postinc2,f,c
 14000  00226A  5005               	movf	??_CANreceiveMessage+2,w,c
 14001  00226C  12DE               	iorwf	postinc2,f,c
 14002  00226E  5006               	movf	??_CANreceiveMessage+3,w,c
 14003  002270  12DE               	iorwf	postinc2,f,c
 14004  002272                     i1l5315:
 14005                           
 14006                           ; BSR set to: 15
 14007                           ;CANlib.h: 581: }
 14008                           ;CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 14009  002272  010F               	movlb	15	; () banked
 14010  002274  9F50               	bcf	80,7,b	;volatile
 14011                           
 14012                           ; BSR set to: 15
 14013                           ;CANlib.h: 584: return (error);
 14014                           ;	Return value of _CANreceiveMessage is never used
 14015  002276  0012               	return	
 14016  002278                     i1l416:
 14017                           
 14018                           ; BSR set to: 15
 14019                           ;CANlib.h: 585: }
 14020                           ;CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 14021  002278  AE60               	btfss	3936,7,c	;volatile
 14022  00227A  0012               	return	
 14023                           
 14024                           ; BSR set to: 15
 14025                           ;CANlib.h: 588: {
 14026                           ;CANlib.h: 589: msg->identifier = 0;
 14027  00227C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14028  002280  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14029  002284  6ADE               	clrf	postinc2,c
 14030  002286  6ADE               	clrf	postinc2,c
 14031  002288  6ADE               	clrf	postinc2,c
 14032  00228A  6ADD               	clrf	postdec2,c
 14033                           
 14034                           ; BSR set to: 15
 14035                           ;CANlib.h: 590: msg->data[0] =RXB0D0;
 14036  00228C  EE20 F004          	lfsr	2,4
 14037  002290  5001               	movf	CANreceiveMessage@msg,w,c
 14038  002292  26D9               	addwf	fsr2l,f,c
 14039  002294  5002               	movf	CANreceiveMessage@msg+1,w,c
 14040  002296  22DA               	addwfc	fsr2h,f,c
 14041  002298  CF66 FFDF          	movff	3942,indf2	;volatile
 14042                           
 14043                           ; BSR set to: 15
 14044                           ;CANlib.h: 591: msg->data[1] =RXB0D1;
 14045  00229C  EE20 F005          	lfsr	2,5
 14046  0022A0  5001               	movf	CANreceiveMessage@msg,w,c
 14047  0022A2  26D9               	addwf	fsr2l,f,c
 14048  0022A4  5002               	movf	CANreceiveMessage@msg+1,w,c
 14049  0022A6  22DA               	addwfc	fsr2h,f,c
 14050  0022A8  CF67 FFDF          	movff	3943,indf2	;volatile
 14051                           
 14052                           ; BSR set to: 15
 14053                           ;CANlib.h: 592: msg->data[2] =RXB0D2;
 14054  0022AC  EE20 F006          	lfsr	2,6
 14055  0022B0  5001               	movf	CANreceiveMessage@msg,w,c
 14056  0022B2  26D9               	addwf	fsr2l,f,c
 14057  0022B4  5002               	movf	CANreceiveMessage@msg+1,w,c
 14058  0022B6  22DA               	addwfc	fsr2h,f,c
 14059  0022B8  CF68 FFDF          	movff	3944,indf2	;volatile
 14060                           
 14061                           ; BSR set to: 15
 14062                           ;CANlib.h: 593: msg->data[3] =RXB0D3;
 14063  0022BC  EE20 F007          	lfsr	2,7
 14064  0022C0  5001               	movf	CANreceiveMessage@msg,w,c
 14065  0022C2  26D9               	addwf	fsr2l,f,c
 14066  0022C4  5002               	movf	CANreceiveMessage@msg+1,w,c
 14067  0022C6  22DA               	addwfc	fsr2h,f,c
 14068  0022C8  CF69 FFDF          	movff	3945,indf2	;volatile
 14069                           
 14070                           ; BSR set to: 15
 14071                           ;CANlib.h: 594: msg->data[4] =RXB0D4;
 14072  0022CC  EE20 F008          	lfsr	2,8
 14073  0022D0  5001               	movf	CANreceiveMessage@msg,w,c
 14074  0022D2  26D9               	addwf	fsr2l,f,c
 14075  0022D4  5002               	movf	CANreceiveMessage@msg+1,w,c
 14076  0022D6  22DA               	addwfc	fsr2h,f,c
 14077  0022D8  CF6A FFDF          	movff	3946,indf2	;volatile
 14078                           
 14079                           ; BSR set to: 15
 14080                           ;CANlib.h: 595: msg->data[5] =RXB0D5;
 14081  0022DC  EE20 F009          	lfsr	2,9
 14082  0022E0  5001               	movf	CANreceiveMessage@msg,w,c
 14083  0022E2  26D9               	addwf	fsr2l,f,c
 14084  0022E4  5002               	movf	CANreceiveMessage@msg+1,w,c
 14085  0022E6  22DA               	addwfc	fsr2h,f,c
 14086  0022E8  CF6B FFDF          	movff	3947,indf2	;volatile
 14087                           
 14088                           ; BSR set to: 15
 14089                           ;CANlib.h: 596: msg->data[6] =RXB0D6;
 14090  0022EC  EE20 F00A          	lfsr	2,10
 14091  0022F0  5001               	movf	CANreceiveMessage@msg,w,c
 14092  0022F2  26D9               	addwf	fsr2l,f,c
 14093  0022F4  5002               	movf	CANreceiveMessage@msg+1,w,c
 14094  0022F6  22DA               	addwfc	fsr2h,f,c
 14095  0022F8  CF6C FFDF          	movff	3948,indf2	;volatile
 14096                           
 14097                           ; BSR set to: 15
 14098                           ;CANlib.h: 597: msg->data[7] =RXB0D7;
 14099  0022FC  EE20 F00B          	lfsr	2,11
 14100  002300  5001               	movf	CANreceiveMessage@msg,w,c
 14101  002302  26D9               	addwf	fsr2l,f,c
 14102  002304  5002               	movf	CANreceiveMessage@msg+1,w,c
 14103  002306  22DA               	addwfc	fsr2h,f,c
 14104  002308  CF6D FFDF          	movff	3949,indf2	;volatile
 14105                           
 14106                           ; BSR set to: 15
 14107                           ;CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 14108  00230C  EE20 F00E          	lfsr	2,14
 14109  002310  5001               	movf	CANreceiveMessage@msg,w,c
 14110  002312  26D9               	addwf	fsr2l,f,c
 14111  002314  5002               	movf	CANreceiveMessage@msg+1,w,c
 14112  002316  22DA               	addwfc	fsr2h,f,c
 14113  002318  AC65               	btfss	3941,6,c	;volatile
 14114  00231A  D002               	goto	i1u673_20
 14115  00231C  0E01               	movlw	1
 14116  00231E  D001               	goto	i1u673_26
 14117  002320                     i1u673_20:
 14118  002320  0E00               	movlw	0
 14119  002322                     i1u673_26:
 14120  002322  6EDF               	movwf	indf2,c
 14121                           
 14122                           ; BSR set to: 15
 14123                           ;CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 14124  002324  EE20 F00D          	lfsr	2,13
 14125  002328  5001               	movf	CANreceiveMessage@msg,w,c
 14126  00232A  26D9               	addwf	fsr2l,f,c
 14127  00232C  5002               	movf	CANreceiveMessage@msg+1,w,c
 14128  00232E  22DA               	addwfc	fsr2h,f,c
 14129  002330  5065               	movf	3941,w,c	;volatile
 14130  002332  0B0F               	andlw	15
 14131  002334  6EDF               	movwf	indf2,c
 14132                           
 14133                           ; BSR set to: 15
 14134                           ;CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 14135  002336  EE20 F00C          	lfsr	2,12
 14136  00233A  5001               	movf	CANreceiveMessage@msg,w,c
 14137  00233C  26D9               	addwf	fsr2l,f,c
 14138  00233E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14139  002340  22DA               	addwfc	fsr2h,f,c
 14140  002342  A662               	btfss	3938,3,c	;volatile
 14141  002344  D002               	goto	i1u674_20
 14142  002346  0E01               	movlw	1
 14143  002348  D001               	goto	i1u674_26
 14144  00234A                     i1u674_20:
 14145  00234A  0E00               	movlw	0
 14146  00234C                     i1u674_26:
 14147  00234C  6EDF               	movwf	indf2,c
 14148                           
 14149                           ; BSR set to: 15
 14150                           ;CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 14151  00234E  B662               	btfsc	3938,3,c	;volatile
 14152  002350  D043               	goto	i1l5351
 14153                           
 14154                           ; BSR set to: 15
 14155                           ;CANlib.h: 606: {
 14156                           ;CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 14157  002352  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 14158  002356  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14159  002358  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14160  00235A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14161  00235C  0E03               	movlw	3
 14162  00235E                     i1u676_25:
 14163  00235E  90D8               	bcf	status,0,c
 14164  002360  3603               	rlcf	??_CANreceiveMessage,f,c
 14165  002362  3604               	rlcf	??_CANreceiveMessage+1,f,c
 14166  002364  3605               	rlcf	??_CANreceiveMessage+2,f,c
 14167  002366  3606               	rlcf	??_CANreceiveMessage+3,f,c
 14168  002368  2EE8               	decfsz	wreg,f,c
 14169  00236A  D7F9               	goto	i1u676_25
 14170  00236C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14171  002370  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14172  002374  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 14173  002378  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 14174  00237C  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 14175  002380  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 14176                           
 14177                           ; BSR set to: 15
 14178                           ;CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 14179  002384  3862               	swapf	3938,w,c	;volatile
 14180  002386  42E8               	rrncf	wreg,f,c
 14181  002388  0B07               	andlw	7
 14182  00238A  0B07               	andlw	7
 14183  00238C  6E0C               	movwf	CANreceiveMessage@tamp,c
 14184                           
 14185                           ; BSR set to: 15
 14186                           ;CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 14187  00238E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14188  002392  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14189  002396  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 14190  00239A  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 14191  00239E  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 14192  0023A2  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 14193  0023A6  500C               	movf	CANreceiveMessage@tamp,w,c
 14194  0023A8  2403               	addwf	??_CANreceiveMessage,w,c
 14195  0023AA  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 14196  0023AC  0E00               	movlw	0
 14197  0023AE  2004               	addwfc	??_CANreceiveMessage+1,w,c
 14198  0023B0  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 14199  0023B2  0E00               	movlw	0
 14200  0023B4  2005               	addwfc	??_CANreceiveMessage+2,w,c
 14201  0023B6  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 14202  0023B8  0E00               	movlw	0
 14203  0023BA  2006               	addwfc	??_CANreceiveMessage+3,w,c
 14204  0023BC  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 14205  0023BE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14206  0023C2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14207  0023C6  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 14208  0023CA  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 14209  0023CE  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 14210  0023D2  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 14211                           
 14212                           ;CANlib.h: 610: }
 14213  0023D6  D088               	goto	i1l5377
 14214  0023D8                     i1l5351:
 14215                           
 14216                           ; BSR set to: 15
 14217                           ;CANlib.h: 611: else
 14218                           ;CANlib.h: 612: {
 14219                           ;CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 14220  0023D8  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 14221  0023DC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14222  0023DE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14223  0023E0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14224  0023E2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14225  0023E6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14226  0023EA  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 14227  0023EE  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 14228  0023F2  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 14229  0023F6  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 14230                           
 14231                           ; BSR set to: 15
 14232                           ;CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 14233  0023FA  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 14234  0023FE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14235  002400  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14236  002402  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14237  002404  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 14238  002408  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 14239  00240C  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 14240  002410  6A03               	clrf	??_CANreceiveMessage,c
 14241  002412  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14242  002416  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14243  00241A  5003               	movf	??_CANreceiveMessage,w,c
 14244  00241C  26DE               	addwf	postinc2,f,c
 14245  00241E  5004               	movf	??_CANreceiveMessage+1,w,c
 14246  002420  22DE               	addwfc	postinc2,f,c
 14247  002422  5005               	movf	??_CANreceiveMessage+2,w,c
 14248  002424  22DE               	addwfc	postinc2,f,c
 14249  002426  5006               	movf	??_CANreceiveMessage+3,w,c
 14250  002428  22DE               	addwfc	postinc2,f,c
 14251                           
 14252                           ; BSR set to: 15
 14253                           ;CANlib.h: 616: if (RXB0SIDLbits.EID16)
 14254  00242A  A062               	btfss	3938,0,c	;volatile
 14255  00242C  D00C               	goto	i1l5359
 14256                           
 14257                           ; BSR set to: 15
 14258                           ;CANlib.h: 617: msg->identifier |= 0x00010000;
 14259  00242E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14260  002432  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14261  002436  0E00               	movlw	0
 14262  002438  12DE               	iorwf	postinc2,f,c
 14263  00243A  0E00               	movlw	0
 14264  00243C  12DE               	iorwf	postinc2,f,c
 14265  00243E  0E01               	movlw	1
 14266  002440  12DE               	iorwf	postinc2,f,c
 14267  002442  0E00               	movlw	0
 14268  002444  12DE               	iorwf	postinc2,f,c
 14269  002446                     i1l5359:
 14270                           
 14271                           ; BSR set to: 15
 14272                           ;CANlib.h: 618: if (RXB0SIDLbits.EID17)
 14273  002446  A262               	btfss	3938,1,c	;volatile
 14274  002448  D00C               	goto	i1l5363
 14275                           
 14276                           ; BSR set to: 15
 14277                           ;CANlib.h: 619: msg->identifier |= 0x00020000;
 14278  00244A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14279  00244E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14280  002452  0E00               	movlw	0
 14281  002454  12DE               	iorwf	postinc2,f,c
 14282  002456  0E00               	movlw	0
 14283  002458  12DE               	iorwf	postinc2,f,c
 14284  00245A  0E02               	movlw	2
 14285  00245C  12DE               	iorwf	postinc2,f,c
 14286  00245E  0E00               	movlw	0
 14287  002460  12DE               	iorwf	postinc2,f,c
 14288  002462                     i1l5363:
 14289                           
 14290                           ; BSR set to: 15
 14291                           ;CANlib.h: 620: if (RXB0SIDLbits.SID0)
 14292  002462  AA62               	btfss	3938,5,c	;volatile
 14293  002464  D00C               	goto	i1l5367
 14294                           
 14295                           ; BSR set to: 15
 14296                           ;CANlib.h: 621: msg->identifier |= 0x00040000;
 14297  002466  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14298  00246A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14299  00246E  0E00               	movlw	0
 14300  002470  12DE               	iorwf	postinc2,f,c
 14301  002472  0E00               	movlw	0
 14302  002474  12DE               	iorwf	postinc2,f,c
 14303  002476  0E04               	movlw	4
 14304  002478  12DE               	iorwf	postinc2,f,c
 14305  00247A  0E00               	movlw	0
 14306  00247C  12DE               	iorwf	postinc2,f,c
 14307  00247E                     i1l5367:
 14308                           
 14309                           ; BSR set to: 15
 14310                           ;CANlib.h: 622: if (RXB0SIDLbits.SID1)
 14311  00247E  AC62               	btfss	3938,6,c	;volatile
 14312  002480  D00C               	goto	i1l5371
 14313                           
 14314                           ; BSR set to: 15
 14315                           ;CANlib.h: 623: msg->identifier |= 0x00080000;
 14316  002482  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14317  002486  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14318  00248A  0E00               	movlw	0
 14319  00248C  12DE               	iorwf	postinc2,f,c
 14320  00248E  0E00               	movlw	0
 14321  002490  12DE               	iorwf	postinc2,f,c
 14322  002492  0E08               	movlw	8
 14323  002494  12DE               	iorwf	postinc2,f,c
 14324  002496  0E00               	movlw	0
 14325  002498  12DE               	iorwf	postinc2,f,c
 14326  00249A                     i1l5371:
 14327                           
 14328                           ; BSR set to: 15
 14329                           ;CANlib.h: 624: if (RXB0SIDLbits.SID2)
 14330  00249A  AE62               	btfss	3938,7,c	;volatile
 14331  00249C  D00C               	goto	i1l5375
 14332                           
 14333                           ; BSR set to: 15
 14334                           ;CANlib.h: 625: msg->identifier |= 0x00100000;
 14335  00249E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14336  0024A2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14337  0024A6  0E00               	movlw	0
 14338  0024A8  12DE               	iorwf	postinc2,f,c
 14339  0024AA  0E00               	movlw	0
 14340  0024AC  12DE               	iorwf	postinc2,f,c
 14341  0024AE  0E10               	movlw	16
 14342  0024B0  12DE               	iorwf	postinc2,f,c
 14343  0024B2  0E00               	movlw	0
 14344  0024B4  12DE               	iorwf	postinc2,f,c
 14345  0024B6                     i1l5375:
 14346                           
 14347                           ; BSR set to: 15
 14348                           ;CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 14349  0024B6  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 14350  0024BA  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14351  0024BC  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14352  0024BE  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14353  0024C0  0E15               	movlw	21
 14354  0024C2                     i1u682_25:
 14355  0024C2  90D8               	bcf	status,0,c
 14356  0024C4  3603               	rlcf	??_CANreceiveMessage,f,c
 14357  0024C6  3604               	rlcf	??_CANreceiveMessage+1,f,c
 14358  0024C8  3605               	rlcf	??_CANreceiveMessage+2,f,c
 14359  0024CA  3606               	rlcf	??_CANreceiveMessage+3,f,c
 14360  0024CC  2EE8               	decfsz	wreg,f,c
 14361  0024CE  D7F9               	goto	i1u682_25
 14362  0024D0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14363  0024D4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14364  0024D8  5003               	movf	??_CANreceiveMessage,w,c
 14365  0024DA  12DE               	iorwf	postinc2,f,c
 14366  0024DC  5004               	movf	??_CANreceiveMessage+1,w,c
 14367  0024DE  12DE               	iorwf	postinc2,f,c
 14368  0024E0  5005               	movf	??_CANreceiveMessage+2,w,c
 14369  0024E2  12DE               	iorwf	postinc2,f,c
 14370  0024E4  5006               	movf	??_CANreceiveMessage+3,w,c
 14371  0024E6  12DE               	iorwf	postinc2,f,c
 14372  0024E8                     i1l5377:
 14373                           
 14374                           ; BSR set to: 15
 14375                           ;CANlib.h: 629: }
 14376                           ;CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 14377  0024E8  9E60               	bcf	3936,7,c	;volatile
 14378                           
 14379                           ; BSR set to: 15
 14380                           ;CANlib.h: 632: return (error);
 14381                           ;	Return value of _CANreceiveMessage is never used
 14382  0024EA  0012               	return	
 14383  0024EC                     __end_of_CANreceiveMessage:
 14384                           	opt stack 0
 14385                           pclatu	equ	0xFFB
 14386                           pclath	equ	0xFFA
 14387                           tblptru	equ	0xFF8
 14388                           tblptrh	equ	0xFF7
 14389                           tblptrl	equ	0xFF6
 14390                           tablat	equ	0xFF5
 14391                           prodh	equ	0xFF4
 14392                           prodl	equ	0xFF3
 14393                           intcon	equ	0xFF2
 14394                           postinc0	equ	0xFEE
 14395                           fsr0h	equ	0xFEA
 14396                           fsr0l	equ	0xFE9
 14397                           wreg	equ	0xFE8
 14398                           indf1	equ	0xFE7
 14399                           fsr1h	equ	0xFE2
 14400                           fsr1l	equ	0xFE1
 14401                           bsr	equ	0xFE0
 14402                           indf2	equ	0xFDF
 14403                           postinc2	equ	0xFDE
 14404                           postdec2	equ	0xFDD
 14405                           fsr2h	equ	0xFDA
 14406                           fsr2l	equ	0xFD9
 14407                           status	equ	0xFD8
 14408                           
 14409 ;; *************** function _CANisRxReady *****************
 14410 ;; Defined at:
 14411 ;;		line 1163 in file "CANlib.h"
 14412 ;; Parameters:    Size  Location     Type
 14413 ;;		None
 14414 ;; Auto vars:     Size  Location     Type
 14415 ;;		None
 14416 ;; Return value:  Size  Location     Type
 14417 ;;                  1    wreg      unsigned char 
 14418 ;; Registers used:
 14419 ;;		wreg, status,2
 14420 ;; Tracked objects:
 14421 ;;		On entry : 0/0
 14422 ;;		On exit  : 0/0
 14423 ;;		Unchanged: 0/0
 14424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14428 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14429 ;;Total ram usage:        1 bytes
 14430 ;; Hardware stack levels used:    1
 14431 ;; This function calls:
 14432 ;;		Nothing
 14433 ;; This function is called by:
 14434 ;;		_ISR_bassa
 14435 ;; This function uses a non-reentrant model
 14436 ;;
 14437                           
 14438                           	psect	text38
 14439  005328                     __ptext38:
 14440                           	opt stack 0
 14441  005328                     _CANisRxReady:
 14442                           	opt stack 24
 14443                           
 14444                           ;CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
 14445                           
 14446                           ; BSR set to: 15
 14447                           ;incstack = 0
 14448  005328  0E01               	movlw	1
 14449  00532A  6E01               	movwf	_CANisRxReady$3007,c
 14450  00532C  BE60               	btfsc	3936,7,c	;volatile
 14451  00532E  D005               	goto	i1l567
 14452  005330  010F               	movlb	15	; () banked
 14453  005332  BF50               	btfsc	80,7,b	;volatile
 14454  005334  D002               	goto	i1l567
 14455                           
 14456                           ; BSR set to: 15
 14457  005336  0E00               	movlw	0
 14458  005338  6E01               	movwf	_CANisRxReady$3007,c
 14459  00533A                     i1l567:
 14460  00533A  5001               	movf	_CANisRxReady$3007,w,c
 14461  00533C  0012               	return	
 14462  00533E                     __end_of_CANisRxReady:
 14463                           	opt stack 0
 14464                           pclatu	equ	0xFFB
 14465                           pclath	equ	0xFFA
 14466                           tblptru	equ	0xFF8
 14467                           tblptrh	equ	0xFF7
 14468                           tblptrl	equ	0xFF6
 14469                           tablat	equ	0xFF5
 14470                           prodh	equ	0xFF4
 14471                           prodl	equ	0xFF3
 14472                           intcon	equ	0xFF2
 14473                           postinc0	equ	0xFEE
 14474                           fsr0h	equ	0xFEA
 14475                           fsr0l	equ	0xFE9
 14476                           wreg	equ	0xFE8
 14477                           indf1	equ	0xFE7
 14478                           fsr1h	equ	0xFE2
 14479                           fsr1l	equ	0xFE1
 14480                           bsr	equ	0xFE0
 14481                           indf2	equ	0xFDF
 14482                           postinc2	equ	0xFDE
 14483                           postdec2	equ	0xFDD
 14484                           fsr2h	equ	0xFDA
 14485                           fsr2l	equ	0xFD9
 14486                           status	equ	0xFD8
 14487                           pclatu	equ	0xFFB
 14488                           pclath	equ	0xFFA
 14489                           tblptru	equ	0xFF8
 14490                           tblptrh	equ	0xFF7
 14491                           tblptrl	equ	0xFF6
 14492                           tablat	equ	0xFF5
 14493                           prodh	equ	0xFF4
 14494                           prodl	equ	0xFF3
 14495                           intcon	equ	0xFF2
 14496                           postinc0	equ	0xFEE
 14497                           fsr0h	equ	0xFEA
 14498                           fsr0l	equ	0xFE9
 14499                           wreg	equ	0xFE8
 14500                           indf1	equ	0xFE7
 14501                           fsr1h	equ	0xFE2
 14502                           fsr1l	equ	0xFE1
 14503                           bsr	equ	0xFE0
 14504                           indf2	equ	0xFDF
 14505                           postinc2	equ	0xFDE
 14506                           postdec2	equ	0xFDD
 14507                           fsr2h	equ	0xFDA
 14508                           fsr2l	equ	0xFD9
 14509                           status	equ	0xFD8
 14510                           
 14511                           	psect	rparam
 14512  0000                     pclatu	equ	0xFFB
 14513                           pclath	equ	0xFFA
 14514                           tblptru	equ	0xFF8
 14515                           tblptrh	equ	0xFF7
 14516                           tblptrl	equ	0xFF6
 14517                           tablat	equ	0xFF5
 14518                           prodh	equ	0xFF4
 14519                           prodl	equ	0xFF3
 14520                           intcon	equ	0xFF2
 14521                           postinc0	equ	0xFEE
 14522                           fsr0h	equ	0xFEA
 14523                           fsr0l	equ	0xFE9
 14524                           wreg	equ	0xFE8
 14525                           indf1	equ	0xFE7
 14526                           fsr1h	equ	0xFE2
 14527                           fsr1l	equ	0xFE1
 14528                           bsr	equ	0xFE0
 14529                           indf2	equ	0xFDF
 14530                           postinc2	equ	0xFDE
 14531                           postdec2	equ	0xFDD
 14532                           fsr2h	equ	0xFDA
 14533                           fsr2l	equ	0xFD9
 14534                           status	equ	0xFD8
 14535                           
 14536                           	psect	temp
 14537  000042                     btemp:
 14538                           	opt stack 0
 14539  000042                     	ds	1
 14540  0000                     int$flags	set	btemp
 14541                           pclatu	equ	0xFFB
 14542                           pclath	equ	0xFFA
 14543                           tblptru	equ	0xFF8
 14544                           tblptrh	equ	0xFF7
 14545                           tblptrl	equ	0xFF6
 14546                           tablat	equ	0xFF5
 14547                           prodh	equ	0xFF4
 14548                           prodl	equ	0xFF3
 14549                           intcon	equ	0xFF2
 14550                           postinc0	equ	0xFEE
 14551                           fsr0h	equ	0xFEA
 14552                           fsr0l	equ	0xFE9
 14553                           wreg	equ	0xFE8
 14554                           indf1	equ	0xFE7
 14555                           fsr1h	equ	0xFE2
 14556                           fsr1l	equ	0xFE1
 14557                           bsr	equ	0xFE0
 14558                           indf2	equ	0xFDF
 14559                           postinc2	equ	0xFDE
 14560                           postdec2	equ	0xFDD
 14561                           fsr2h	equ	0xFDA
 14562                           fsr2l	equ	0xFD9
 14563                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    76
    Data        3
    BSS         101
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160    123     159
    BANK1           256     24      63
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array_debug(BANK1[8]), data_array(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _rampe->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___fltol
    ___xxtofl->___lwdiv
    ___fltol->___fladd
    _eval_poly->___fladd
    ___flmul->___xxtofl
    ___flsub->___fladd
    ___fladd->___flmul
    _configurazione_iniziale->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->_CANsendMessage
    ___awdiv->___wmul

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_rampe

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   93521
                                            122 BANK0      1     1      0
                                             16 BANK1      8     8      0
                       _CANisTxReady
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                    _battery_measure
                    _can_interpreter
            _configurazione_iniziale
                           _delay_ms
                              _rampe
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    4326
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (1) _rampe                                               32    32      0   67758
                                              0 BANK1     16    16      0
                       _CANisTxReady
                     _CANsendMessage
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___fladd
                            ___fltol
                            ___lwdiv
                           ___xxtofl
                                _abs
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 21    13      8   54944
                                            101 BANK0     21    13      8
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                            ___lwdiv (ARG)
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   17703
                                             82 BANK0      6     2      4
                            ___fladd
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                 11     7      4   30079
                                             90 BANK0     11     7      4
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                8     2      6     513
                                             82 BANK0      8     2      6
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                               10     6      4    8059
                                             76 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                8     2      6     630
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1015
                                              7 BANK0     14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     799
                                             66 BANK0     10     6      4
                            ___fladd (ARG)
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     882
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     8      8    8195
                                             66 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3191
                                             21 BANK0     25    17      8
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4621
                                             66 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    4288
                                             46 BANK0     20    12      8
                            ___flmul (ARG)
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     296
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1883
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     170
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     703
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _SetDCEPWM1                                           6     4      2     407
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    9662
                      _CANInitialize
                     _SetOutputEPWM1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     956
                                              6 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _SetOutputEPWM1                                       2     1      1     494
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                             14 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0    5465
                       _CANisTxReady
                     _CANsendMessage
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     540
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     599
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4289
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_bassa                                           22    22      0    1251
                                             12 COMRAM    22    22      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (7) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (7) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   _battery_measure
     _CANisTxReady
     _CANsendMessage
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _can_interpreter
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _SetOutputEPWM1
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul
   _rampe
     _CANisTxReady
     _CANsendMessage
     _SetDCEPWM1
     _SetOutputEPWM1
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _frexp (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
       _frexp (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _frexp (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _frexp (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
     ___lwdiv
     ___xxtofl
       ___lwdiv (ARG)
     _abs
     _pow
       ___flge
       ___flmul
         ___xxtofl (ARG)
           ___lwdiv (ARG)
         _frexp (ARG)
       ___flneg
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _frexp (ARG)
         ___lwdiv (ARG)
         ___xxtofl (ARG)
           ___lwdiv (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
         ___lwdiv (ARG)
       _exp (ARG)
         ___fldiv
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _frexp (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _eval_poly
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
         _floor
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___flge
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _frexp (ARG)
               ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _frexp (ARG)
               ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
         _log (ARG)
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___xxtofl
             ___lwdiv (ARG)
           _eval_poly
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lwdiv (ARG)
                 _frexp (ARG)
               ___lwdiv (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
           _frexp
       _log (ARG)
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___lwdiv (ARG)
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _frexp (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___lwdiv (ARG)
           _frexp (ARG)
         ___xxtofl
           ___lwdiv (ARG)
         _eval_poly
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lwdiv (ARG)
               _frexp (ARG)
             ___lwdiv (ARG)
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lwdiv (ARG)
             _frexp (ARG)
         _frexp
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     18      3F       7       24.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7B      9F       5       99.4%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     22      41       1       69.1%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11F      20        0.0%
DATA                 0      0     11F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Mar 28 17:11:29 2016

                    ___fldiv@aexp 0078                      ___fldiv@bexp 0077  
            __end_of_CANSetFilter 1854                      ___fldiv@sign 006C  
                    ___awdiv@sign 006B                                _id 0023  
                              bsr 000FE0               ___wmul@multiplicand 0062  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 50D2  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                     __CFG_OSC$HS 000000                      __CFG_CP4$OFF 000000  
                    __CFG_CP5$OFF 000000              _previousTimeCounter1 00EB  
            _previousTimeCounter2 0027                               l400 1D76  
                             l401 1E6E                               l410 1F3C  
                             l402 1DFE                               l403 1E08  
                             l404 1E12                               l405 1E1C  
                             l510 15D0                               l502 1590  
                             l503 1594                               l408 1F2C  
                             l520 16E0                               l504 15A0  
                             l440 38C0                               l409 1F30  
                             l521 16EC                               l513 16AC  
                             l505 15A4                               l441 38C4  
                             l370 186A                               l530 17F8  
                             l514 16B0                               l506 15B0  
                             l450 39CC                               l442 38D0  
                             l371 186E                               l531 17FC  
                             l515 16BC                               l507 15B4  
                             l451 39D8                               l443 38D4  
                             l380 1A28                               l372 1966  
                             l532 1808                               l524 17C8  
                             l516 16C0                               l508 15C0  
                             l452 39DC                               l444 38E0  
                             l364 442E                               l381 1A34  
                             l373 18F6                               l525 17CC  
                             l517 16CC                               l509 15C4  
                             l453 39E8                               l445 38E4  
                             l365 4438                               l390 1B8E  
                             l374 1900                               l526 17D8  
                             l518 16D0                               l470 1242  
                             l454 39EC                               l446 38F0  
                             l438 38B0                               l391 1B98  
                             l375 190A                               l527 17DC  
                             l519 16DC                               l471 124E  
                             l455 39F8                               l439 38B4  
                             l711 516E                               l384 1D5C  
                             l376 1914                               l528 17E8  
                             l480 1358                               l472 1252  
                             l456 39FC                               l385 1AEE  
                             l369 1AD8                               l721 4FFA  
                             l529 17EC                               l481 135C  
                             l473 125E                               l457 3A08  
                             l449 39C8                               l713 516A  
                             l562 52EA                               l394 1CA8  
                             l386 1AF2                               l482 1368  
                             l474 1262                               l395 1CAC  
                             l387 1BEA                               l379 1A24  
                             l491 1474                               l483 136C  
                             l475 126E                               l396 1CB8  
                             l388 1B7A                               l492 1478  
                             l484 1378                               l476 1272  
                             l389 1B84                               l493 1484  
                             l485 137C                               l477 127E  
                             l469 123E                               l718 4F72  
                             l494 1488                               l486 1388  
                             l399 1D72                               l495 1494  
                             l487 138C                               l575 5296  
                             l496 1498                               l488 1398  
                             l729 4F6C                               l497 14A4  
                             l681 3C54                               l498 14A8  
                             l834 52C2                               l499 14B4  
                             l675 3C00                               l676 3C40  
                             l782 530C                               l783 530E  
                             l768 511A                               l991 4678  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                               _abs 52A0  
                             _dir 00FD                               _exp 3D0A  
                             _log 46C8                               _msg 0110  
                             _pow 3FA4                               prod 000FF3  
                             wreg 000FE8                      ___flmul@aexp 0082  
                    ___flmul@bexp 0087                      ___flmul@sign 0081  
                    ___flmul@temp 008C                      ___flmul@prod 0088  
                    __CFG_LVP$OFF 000000                      ___fltol@exp1 00AB  
                    __CFG_WDT$OFF 000000                              ?_abs 0060  
                            l1310 35CA                              l1302 34CC  
                            l1223 3FF4                              l1243 2B88  
                            l1308 355C                              l1260 2CFC  
                            l1244 2B7C                              l1228 4192  
                            l1245 2B48                              l1191 506C  
                            l1351 41EE                              l1336 31A0  
                            l1329 2F04                              l1346 32B2  
                            l1338 320E                              l1269 2D90  
                            l1365 42F6                              l1366 430E  
                            l1358 429A                              l1299 3524  
                            l1387 3F92                              l1397 4A88  
                            l6001 2E98                              l6011 2EC8  
                            l6003 2EAA                              l6101 3298  
                            l6111 32DC                              l6023 2F18  
                            l6017 2EEC                              l6121 4586  
                            l6201 427C                              l6027 2F2C  
                            l6019 2EF2                              l6301 3422  
                            l6109 32D2                              l6125 45D4  
                            l6221 4360                              l7031 191E  
                            l6311 34A0                              l6135 46C4  
                            l6207 42D8                              l6129 4626  
                            l6161 4C46                              l6145 4BD8  
                            l6209 42E8                              l6233 4DB4  
                            l7203 1F20                              l7107 1BA2  
                            l7051 1A18                              l6331 3546  
                            l6251 3314                              l6075 31B4  
                            l6171 4C76                              l7133 1CBC  
                            l6325 3520                              l6261 3342  
                            l6085 3208                              l6069 318A  
                            l6421 4AF0                              l6173 4C86  
                            l6165 4C5A                              l6413 49EC  
                            l6405 49B6                              l7127 1C9C  
                            l6319 34D8                              l6271 3372  
                            l6095 325E                              l6423 4B94  
                            l6175 4C90                              l6431 487A  
                            l7209 1F40                              l7057 1A38  
                            l7321 4CF0                              l6361 3648  
                            l6337 3570                              l6281 33A0  
                            l6257 3338                              l5801 29F4  
                            l6409 49CA                              l7331 4D20  
                            l7315 4CDA                              l6523 38F4  
                            l7251 50F8                              l7243 528A  
                            l6371 368E                              l6363 365C  
                            l6347 35C4                              l6099 3284  
                            l6179 4CAC                              l6195 4226  
                            l6451 4910                              ?_exp 00BA  
                            l6373 3692                              l6365 367E  
                            l6357 361A                              l6293 33F4  
                            l6277 3396                              l5901 2BF0  
                            l5821 2A58                              l6197 422E  
                            l6189 41FE                              ?_log 00B2  
                            l7183 1E26                              l7327 4D0E  
                            l7343 4D5E                              l7503 4F48  
                            l6463 531A                              l6703 12C8  
                            l6615 0F7E                              l7255 5108  
                            l6391 5224                              l5815 2A34  
                            l6199 423E                              l6455 4922  
                            l6439 48E0                              l7329 4D1A  
                            l6633 1038                              l6529 393A  
                            l6481 376E                              l7361 502E  
                            l5905 2BFA                              l5833 2A8C  
                            l5825 2A62                              l5809 2A20  
                            l7521 2500                              l7347 4D72  
                            l7339 4D50                              l6731 139C  
                            l6651 10F2                              l6555 3A0C  
                            l7291 40B8                              l7283 4030  
                            l7531 2554                              l6805 161A  
                            l7357 501C                              l5933 2D44  
                            l5909 2C0C                              l7277 4008  
                            l7607 4FBE                              l7359 5028  
                            l5927 2D2E                              l5943 2D64  
                            l5919 2CDC                              l5863 2AC8  
                            l5791 29C6                              l7295 40E6  
                            l7535 256C                              l6833 16F0  
                            l6737 13E2                              l6497 3824  
                            l7369 505E                              l5953 2D8A  
                            l5937 2D50                              l5945 2D6A  
                            l5881 2B6C                              l6913 3D7C  
                            l7545 25D2                              l7641 3A90  
                            l6771 14FE                              l6579 0E0C  
                            l5971 2E1A                              l5963 2DE6  
                            l5891 2BAC                              l5875 2B5C  
                            l6907 3D32                              l7563 2788  
                            l7555 26C8                              l7651 3B18  
                            l7493 4F04                              l6765 14B8  
                            l6669 11AC                              l6597 0EC4  
                            l5877 2B62                              l5797 29EA  
                            l6925 3E04                              l6839 1736  
                            l5983 2E3E                              l5975 2E26  
                            l5967 2DF8                              l6943 3F5A  
                            l6919 3DC6                              l7575 2916  
                            l6697 1282                              l5977 2E2A  
                            l5993 2E6E                              l7585 2998  
                            l7665 3C04                              l7657 3B22  
                            l7649 3B0A                              l6867 180C  
                            l5899 2BEA                              l6891 471E  
                            l7579 2972                              l7595 515E  
                            l7683 3C76                              l6885 46EC  
                            l7685 3C78                              l6799 15D4  
                            l6991 4444                              l5999 2E92  
                            l7687 3C88                              l6993 4488  
                            l6985 4426                              l6987 443C  
                            ?_pow 00C5                              _LATA 000F89  
                            _LATB 000F8A                              _LATC 000F8B  
                            _LATD 000F8C                              _LATE 000F8D  
                            u7440 2B12                              u8160 4DE6  
                            u7450 2B2A                              u7460 2B2C  
                            u9310 15F4                              u9230 14D8  
                            u9150 13BC                              u9070 12A2  
                            u8430 49DA                              u8168 4DEA  
                            u8370 362E                              u9315 15E8  
                            u9235 14CC                              u9155 13B0  
                            u9075 1296                              u8540 36EA  
                            u7900 3272                              u7820 312C  
                            u8470 48AC                              u8545 36DE  
                            u7825 3120                              u9530 3DD0  
                            u8555 374A                              u9700 193E  
                            u8900 0FB4                              u8820 0E40  
                            u8580 37A0                              u9540 3DD2  
                            u9710 198A                              u9470 182C  
                            u9390 1710                              u8750 3A2C  
                            u8670 3914                              u8478 48B0  
                            u9705 1932                              u8905 0FA8  
                            u8825 0E34                              u8585 3794  
                            u9715 197E                              u9475 1820  
                            u9395 1704                              u8915 1014  
                            u8835 0EA0                              u8755 3A20  
                            u8675 3908                              u8595 3800  
                            u8940 106E                              u8860 0EFA  
                            u8780 0D88                              u9725 19EA  
                            u9830 1BC2                              u7990 4BF8  
                            u9840 1C0E                              u8945 1062  
                            u8865 0EEE                              u8785 0D7C  
                            u9835 1BB6                              u8955 10CE  
                            u8875 0F5A                              u8795 0DE8  
                            u7995 4BEC                              u8980 1128  
                            u9845 1C02                              u9855 1C6E  
                            u9960 1E46                              u8985 111C  
                            u9970 1E92                              _TMR2 000FCC  
                            u8995 1188                              u9965 1E3A  
                            u9975 1E86                              u9985 1EF2  
             __size_of_CANSetMask 039E                              abs@a 0060  
                            _main 3A54                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 0042  
                            exp@x 00BA                              log@x 00B2  
                            pclat 000FFA                              pow@x 00C5  
                            pow@y 00C9                              prodh 000FF4  
                            prodl 000FF3                              start 017A  
                   __CFG_IESO$OFF 000000                   ___fldiv@new_exp 0071  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000010  
                _CANOperationMode 5312            __end_of_SetOutputEPWM1 5124  
                           ??_abs 0062                             ??_exp 00BE  
                           ??_log 00B6                             ??_pow 00CD  
      __size_of_CANreceiveMessage 050C                     ___fltol@sign1 00AA  
                 __end_of___fladd 2E50                             ?_main 0001  
                 __end_of___fldiv 36B6                   __end_of___awdiv 4D7C  
                 __end_of___flneg 5236                   __end_of___flmul 32F6  
                 __end_of___flsub 51BA                   __end_of___fltol 4CBE  
                           u10150 409A                             u10420 28B6  
                           u10095 51C4                             u10440 2960  
                           u10540 3B04                   ___awdiv@divisor 0068  
                           u10650 3CF4                             u10590 3C00  
                           _T2CON 000FCA                             u10667 528C  
                           _T3CON 000FB1                   __end_of___lwdiv 5076  
                           i1l416 2278                             i1l567 533A  
                           i1l665 0132                             i1l658 0066  
                 ___awdiv@counter 006A                             _TMR3H 000FB3  
                           _TMR3L 000FB2                 _CANisRxReady$3007 0001  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
                   __CFG_WRT2$OFF 000000                     __CFG_WRT3$OFF 000000  
                   __CFG_WRT4$OFF 000000                __size_of_ISR_bassa 0162  
                   __CFG_WRT5$OFF 000000                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 0072                    __CFG_EBTR2$OFF 000000  
                  __CFG_EBTR3$OFF 000000                    __CFG_EBTR4$OFF 000000  
                  __CFG_EBTR5$OFF 000000                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _vBatt 0033  
                           _floor 4976                             _ldexp 4852  
                           _frexp 4D7C                             _errno 00F3  
                           _rampe 24EC                    __pbitbssCOMRAM 01F8  
            __end_of_CANisRxReady 533E                             tablat 000FF5  
            __end_of_CANisTxReady 52F0                             pow@yi 00D6  
                           status 000FD8                       exp@exponent 00C2  
                      _SetDCEPWM1 51BA                       ldexp@newexp 00B6  
                 __initialization 5076                       log@exponent 00B6  
        __size_of_battery_measure 008E                      __end_of_main 3D0A  
                 ?_SetOutputEPWM1 0060                            ??_main 0137  
                   __activetblptr 000003                 _CANisTxReady$3005 0060  
                   _counter_array 0100                            ?_floor 00AC  
                          ?_ldexp 00B2                            ?_frexp 0060  
                          _CANCON 000F6F                            _ADRESH 000FC4  
                          ?_rampe 0001                  ___awdiv@dividend 0066  
                 __CFG_BBSIZ$1024 000000                            i1l5301 21E6  
                          i1l5313 2240                            i1l5305 2204  
                          i1l5315 2272                            i1l5309 2222  
                          i1l5351 23D8                            i1l5371 249A  
                          i1l5363 2462                            i1l5375 24B6  
                          i1l5367 247E                            i1l5359 2446  
                          i1l5377 24E8                            i1l5297 21C8  
                          i1l5289 2158                            i1l5651 008C  
                      _OpenTimer2 52F0                            i1l5655 00A0  
                          i1l5673 0110                            i1l5665 00D0  
                          i1l5659 00A8                            i1l5675 0112  
                          i1l5679 0116                            _RXB0D0 000F66  
                          _RXB0D1 000F67                            _RXB0D2 000F68  
                          _RXB0D3 000F69                            _RXB0D4 000F6A  
                          _RXB1D0 000F56                            _RXB0D5 000F6B  
                          _RXB1D1 000F57                            _RXB0D6 000F6C  
                          _RXB1D2 000F58                            _RXB0D7 000F6D  
                          _RXB1D3 000F59                            _RXB1D4 000F5A  
                          _RXB1D5 000F5B                            _RXB1D6 000F5C  
                          _RXB1D7 000F5D                            _TXB0D0 000F46  
                          _TXB0D1 000F47                            _TXB0D2 000F48  
                          _TXB0D3 000F49                            _TXB1D0 000F36  
                          _TXB0D4 000F4A                            _TXB1D1 000F37  
                          _TXB0D5 000F4B                            _TXB1D2 000F38  
                          _TXB0D6 000F4C                            _TXB1D3 000F39  
                          _TXB0D7 000F4D                            _TXB2D0 000F26  
                          _TXB1D4 000F3A                            _TXB2D1 000F27  
                          _TXB1D5 000F3B                            _TXB2D2 000F28  
                          _TXB1D6 000F3C                            _TXB2D3 000F29  
                          _TXB1D7 000F3D                            _TXB2D4 000F2A  
                          _TXB2D5 000F2B                            _TXB2D6 000F2C  
                          _TXB2D7 000F2D                CANsendMessage@data 0064  
              CANsendMessage@tamp 006C                  __end_of___xxtofl 4372  
                __end_of_delay_ms 52A0             __size_of_CANSetFilter 0B06  
                  __CFG_XINST$OFF 000000                __size_of_OpenEPWM1 0012  
               __end_of_ISR_bassa 017A                            ___flge 4538  
                       ??___fladd 0096                            ___wmul 5236  
                       ??___fldiv 0068                         ??___awdiv 006A  
                       ??___flneg 0064                    __CFG_STVREN$ON 000000  
                       ??___flmul 007D                         ??___flsub 00AA  
                       ??___fltol 00A6                         ??___lwdiv 0064  
                    ??_CANSetMask 0065                            _errore 00F5  
                OpenTimer2@config 0060                            clear_0 507C  
                          clear_1 5088                            clear_2 5098  
                ___awdiv@quotient 006C          ?_configurazione_iniziale 0001  
                          floor@i 00B0                            floor@x 00AC  
                 __CFG_BOREN$BOHW 000000                      __pdataCOMRAM 0041  
                    __mediumconst 0000                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                    _CANSetFilter 0D4E                        ___flge@ff1 0060  
                      ___flge@ff2 0064                      ___xxtofl@arg 0071  
                __end_ofexp@coeff 0D29                      ___xxtofl@exp 0070  
                    ___xxtofl@val 0067                  __end_oflog@coeff 0D4D  
                      __accesstop 0060           __end_of__initialization 50C8  
              __end_of_CANSetMask 3A54                   __CFG_PBADEN$OFF 000000  
                      ___flneg@f1 0060                      eval_poly@res 00AE  
                   ___rparam_used 000001                        ___fltol@f1 00A2  
                     ?_SetDCEPWM1 0060                    __pcstackCOMRAM 0001  
                    __pidataBANK0 5350                     __end_of_floor 4A9A  
                   __end_of_ldexp 4976                     __end_of_frexp 4E32  
                   __end_of_rampe 29A8                 ??_battery_measure 0070  
           CANSetFilter@numBuffer 0069                   OpenEPWM1@period 0060  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 0024  
               __end_of_OpenEPWM1 5350                           ??_floor 00B0  
                         ??_ldexp 00B8                           ??_frexp 0066  
                         ??_rampe 0127          __end_of_CANOperationMode 5328  
                      __pbssBANK0 00DB                        __pbssBANK1 0100  
                     ?_OpenTimer2 0001                __size_of_eval_poly 0118  
                      _data_array 0037           __size_of_CANsendMessage 078C  
        __size_of_can_interpreter 008E                           ?___flge 0060  
                         ?___wmul 0060                __size_of_send_data 004E  
                    _CANisRxReady 5328                           _ECCPR1L 000FBB  
                         _CANSTAT 000F6E                      _CANisTxReady 52CC  
                         _BRGCON1 000F70                           _BRGCON2 000F71  
                         _BRGCON3 000F72                         ?___xxtofl 0067  
          __size_of_CANInitialize 01C6                         ?_delay_ms 0066  
                         _RXB0DLC 000F65                           _RXB1DLC 000F55  
                         _RXB0CON 000F60               __size_of_SetDCEPWM1 0044  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 0067                  _data_array_debug 011F  
        SetOutputEPWM1@outputmode 0060                        _correzione 00DB  
                ??_SetOutputEPWM1 0061                           __Hparam 0000  
                      _left_speed 00F7                           __Lparam 0000  
                delay_ms@value_ms 0066                   __size_of___flge 0190  
                         ___fladd 29A8                           ___fldiv 32F6  
                         ___awdiv 4CBE                           ___flneg 51FE  
                         ___flmul 2E50                           ___flsub 5172  
                         ___fltol 4BB2                   __size_of___wmul 0036  
                         ___lwdiv 4FFE                        _rampe$4053 012F  
                      _rampe$4054 0133                      __psmallconst 0D00  
            CANInitialize@propSeg 0077                           __pcinit 5076  
               __end_of_eval_poly 4BB2                           __ramtop 0D00  
             __size_of_OpenTimer2 0022                           __ptext0 3A54  
                         __ptext1 5124                           __ptext2 24EC  
                         __ptext3 3FA4                           __ptext4 46C8  
                         __ptext5 3D0A                           __ptext6 4852  
                         __ptext7 4976                           __ptext8 4D7C  
                         __ptext9 41A4                         _T2CONbits 000FCA  
                    __size_of_abs 002C                           _current 0035  
                    __size_of_exp 029A                      __size_of_log 018A  
                    __size_of_pow 0200                        ??___xxtofl 006B  
                      _duty_cycle 0031                        ??_delay_ms 0068  
          CANreceiveMessage@error 000B              end_of_initialization 50C8  
                         exp@sign 00C4                 __end_of_send_data 5172  
                   _CANInitialize 4372                           pow@sign 00D5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                         _ISR_bassa 0018  
               ??_can_interpreter 0060                         _PORTAbits 000F80  
                  CANSetMask@mask 0060                         _PORTCbits 000F82  
                  CANSetMask@tamp 006A                    _centralina_abs 01F9  
                  CANSetMask@type 0064                       ___fladd@grs 00A1  
                   ___xxtofl@sign 006F                         _TRISDbits 000F95  
                     ___fldiv@grs 0073                       ___fldiv@rem 006D  
__size_of_configurazione_iniziale 00B0               _previousTimeCounter 00E7  
         _clock_counter_reference 002F                       ___flmul@grs 0083  
                  _CANsendMessage 1854                  CANInitialize@BRP 0071  
                CANInitialize@SJW 0070                    ?_CANInitialize 006E  
                      main@period 00DA                      ??_SetDCEPWM1 0062  
                 _battery_measure 4F70                    __end_of___flge 46C8  
                      ?_ISR_bassa 0001                    __end_of___wmul 526C  
                   __pidataCOMRAM 5352                        floor@expon 00B4  
             start_initialization 5076                        eval_poly@d 00A6  
                      eval_poly@n 00A8                        eval_poly@x 00A2  
                      ldexp@value 00B2                       __end_of_abs 52CC  
                     __end_of_exp 3FA4                       __end_of_log 4852  
                     __end_of_pow 41A4                __end_of_SetDCEPWM1 51FE  
             CANSetMask@numBuffer 0069            __end_of_CANsendMessage 1FE0  
               ?_CANOperationMode 0001                      ??_OpenTimer2 0060  
                       _OpenEPWM1 533E                        frexp@value 0060  
              ??_CANOperationMode 0060        CANInitialize@FilterConfig1 0078  
      CANInitialize@FilterConfig2 0079                          ??___flge 0068  
                        ??___wmul 0064                       __pdataBANK0 00FD  
                __CFG_LPT1OSC$OFF 000000                __end_of_OpenTimer2 5312  
                       ___fladd@a 0092                         ___fladd@b 008E  
          CANInitialize@phaseSeg1 006E            CANInitialize@phaseSeg2 006F  
                       ___fldiv@a 0064                         ___fldiv@b 0060  
                       ___flmul@a 0079                         ___flmul@b 0075  
                     __pbssCOMRAM 0023                         ___flsub@a 00A6  
                       ___flsub@b 00A2                     __pcstackBANK0 0060  
                   __pcstackBANK1 0127                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72                 __size_of___xxtofl 01CE  
             SetDCEPWM1@dutycycle 0060                 __size_of_delay_ms 0034  
                 ?_CANsendMessage 0060                        ?_OpenEPWM1 0001  
         __end_of_battery_measure 4FFE                   ??_CANInitialize 0073  
                       _can_retry 01F8                      _currentSpeed 00DF  
              CANSetFilter@filter 0060                  ___lwdiv@dividend 0060  
                        ?___fladd 008E                          ?___fldiv 0060  
                        ?___awdiv 0066                          ?___flneg 0060  
                        ?___flmul 0075                          ?___flsub 00A2  
                        ?___fltol 00A2                          ?___lwdiv 0060  
                     ??_ISR_bassa 000D                       __pintcodelo 0018  
                     __smallconst 0D00                          _ECCP1CON 000FBA  
                     _COMSTATbits 000F74        SetOutputEPWM1@outputconfig 0061  
                       _eval_poly 4A9A                        ISR_bassa@i 0022  
                   _remote_frame1 01FF                  ___lwdiv@quotient 0065  
         _configurazione_iniziale 4E32                    __size_of_floor 0124  
                  __size_of_ldexp 0124                    __size_of_frexp 00B6  
                  __size_of_rampe 04BC                      _message_sent 01FC  
           CANreceiveMessage@tamp 000C                    ___wmul@product 0064  
                 _can_interpreter 4EE2                          _IPR2bits 000FA2  
    _delay_quartz_frequency_value 0041                          _PIE1bits 000F9D  
                        _IPR3bits 000FA5                          _PIE2bits 000FA0  
                       _send_data 5124                          _PIE3bits 000FA3  
                        i1u716_20 008A                          i1u662_20 2098  
                        i1u662_26 209A                          i1u663_20 20C6  
                        i1u671_25 224C                          i1u663_26 20C8  
                        i1u673_20 2320                          i1u665_25 20DC  
                        i1u673_26 2322                          _PIR1bits 000F9E  
                        i1u674_20 234A                          i1u682_25 24C2  
                        i1u674_26 234C                          _PIR2bits 000FA1  
                        i1u676_25 235E                          _PIR3bits 000FA4  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                        _RXB0SIDH 000F61                         _scrittura 0036  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
                        _TXERRCNT 000F76                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                        _ADCON2bits 000FC0  
               ___wmul@multiplier 0060                        ?_eval_poly 00A2  
                   ?_CANSetFilter 0060                        _CANCONbits 000F6F  
                     ??_OpenEPWM1 0060                  ?_battery_measure 0001  
                       frexp@eptr 0064                        ?_send_data 0001  
                        __Hrparam 0000                      _RXB0SIDLbits 000F62  
                SetDCEPWM1@DCycle 0064                          __Lrparam 0000  
                    _RXB1SIDLbits 000F52                _centralina_comando 01FA  
                __size_of___fladd 04A8                        _CANSetMask 36B6  
                __size_of___fldiv 03C0                  __size_of___awdiv 00BE  
                __size_of___flneg 0038                  __size_of___flmul 04A6  
                __size_of___flsub 0048                  __size_of___fltol 010C  
                __size_of___lwdiv 0078           __size_of_SetOutputEPWM1 0052  
              _currentSpeed_array 0108                          _exp$4057 00BE  
                        ___xxtofl 41A4         ??_configurazione_iniziale 007A  
                    _RXF0SIDLbits 000F01                          _delay_ms 526C  
                 ___lwdiv@divisor 0062                      _RXF1SIDLbits 000F05  
                 ___lwdiv@counter 0064                    ??_CANSetFilter 0065  
                        __ptext10 4BB2                          __ptext11 4538  
                        __ptext20 51BA                          __ptext12 4A9A  
                        __ptext21 4E32                          __ptext13 2E50  
                        __ptext30 5236                          __ptext22 526C  
                        __ptext14 5172                          __ptext31 4CBE  
                        __ptext23 50D2                          __ptext15 29A8  
                        __ptext32 1854                          __ptext24 4372  
                        __ptext16 51FE                          __ptext33 52CC  
                        __ptext25 36B6                          __ptext17 32F6  
                        __ptext34 52F0                          __ptext26 0D4E  
                        __ptext18 52A0                          __ptext35 533E  
                        __ptext27 5312                          __ptext19 4FFE  
                        __ptext28 4EE2                          __ptext37 1FE0  
                        __ptext29 4F70                          __ptext38 5328  
                    _RXF2SIDLbits 000F09           __end_of_can_interpreter 4F70  
                    _RXF3SIDLbits 000F0D                          _pow$4055 00CD  
                        _pow$4056 00D1                      _RXF4SIDLbits 000F11  
                   _speed_fetched 0201                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 0066                      _remote_frame 01FE  
                   __size_of_main 02B6                          _duty_set 00E3  
            CANreceiveMessage@msg 0001                      _TXB0SIDLbits 000F42  
                     _new_message 01FD                      _TXB1SIDLbits 000F32  
                    _TXB2SIDLbits 000F22                          int$flags 0042  
       __size_of_CANOperationMode 0016                     ?_CANisRxReady 0001  
                   ?_CANisTxReady 0001                       _RXB0DLCbits 000F65  
                        exp@coeff 0D01                          log@coeff 0D29  
                     _RXB1DLCbits 000F55                      _RXM0SIDLbits 000F19  
                     _RXB0CONbits 000F60                       _RXB1CONbits 000F50  
               _CANreceiveMessage 1FE0                      _RXM1SIDLbits 000F1D  
                      _INTCONbits 000FF2                       ??_eval_poly 00AA  
                ??_CANsendMessage 0068                      _requestSpeed 002B  
              ?_CANreceiveMessage 0001                      _request_sent 0200  
        CANsendMessage@identifier 0060                          intlevel1 0000  
               _centralina_sterzo 01FB                  CANSetFilter@tamp 006A  
                CANSetFilter@type 0064               ??_CANreceiveMessage 0003  
                     _TXB0DLCbits 000F45                       _right_speed 00FB  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     ??_send_data 0070                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 4EE2                       _TXB1CONbits 000F30  
                     _TXB2CONbits 000F20                       _timeCounter 00EF  
            CANOperationMode@mode 0060                    ??_CANisRxReady 0001  
                     ?_CANSetMask 0060                    ??_CANisTxReady 0060  
       __end_of_CANreceiveMessage 24EC                     ___fladd@signs 009E  
                ?_can_interpreter 0001                       _previousPwm 00F9  
                    ___fladd@aexp 009F                      ___fladd@bexp 00A0  
           __end_of_CANInitialize 4538  
