

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Feb 06 15:58:03 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           	psect	idataCOMRAM
    47  002ACC                     __pidataCOMRAM:
    48                           	opt stack 0
    49                           
    50                           ;initializer for _dir
    51  002ACC  0001               	dw	1
    52                           
    53                           ;initializer for _delay_quartz_frequency_value
    54  002ACE  10                 	db	16
    55                           
    56                           	psect	idataBANK0
    57  002AC8                     __pidataBANK0:
    58                           	opt stack 0
    59                           
    60                           ;initializer for _currentSpeed
    61  002AC8  0001               	dw	1
    62  002ACA  0000               	dw	0
    63  0000                     _RXB1CON	set	3920
    64  0000                     _RXB1CONbits	set	3920
    65  0000                     _RXB1D0	set	3926
    66  0000                     _RXB1D1	set	3927
    67  0000                     _RXB1D2	set	3928
    68  0000                     _RXB1D3	set	3929
    69  0000                     _RXB1D4	set	3930
    70  0000                     _RXB1D5	set	3931
    71  0000                     _RXB1D6	set	3932
    72  0000                     _RXB1D7	set	3933
    73  0000                     _RXB1DLC	set	3925
    74  0000                     _RXB1DLCbits	set	3925
    75  0000                     _RXB1EIDH	set	3923
    76  0000                     _RXB1EIDL	set	3924
    77  0000                     _RXB1SIDH	set	3921
    78  0000                     _RXB1SIDL	set	3922
    79  0000                     _RXB1SIDLbits	set	3922
    80  0000                     _RXF0EIDH	set	3842
    81  0000                     _RXF0EIDL	set	3843
    82  0000                     _RXF0SIDH	set	3840
    83  0000                     _RXF0SIDL	set	3841
    84  0000                     _RXF0SIDLbits	set	3841
    85  0000                     _RXF1EIDH	set	3846
    86  0000                     _RXF1EIDL	set	3847
    87  0000                     _RXF1SIDH	set	3844
    88  0000                     _RXF1SIDL	set	3845
    89  0000                     _RXF1SIDLbits	set	3845
    90  0000                     _RXF2EIDH	set	3850
    91  0000                     _RXF2EIDL	set	3851
    92  0000                     _RXF2SIDH	set	3848
    93  0000                     _RXF2SIDL	set	3849
    94  0000                     _RXF2SIDLbits	set	3849
    95  0000                     _RXF3EIDH	set	3854
    96  0000                     _RXF3EIDL	set	3855
    97  0000                     _RXF3SIDH	set	3852
    98  0000                     _RXF3SIDL	set	3853
    99  0000                     _RXF3SIDLbits	set	3853
   100  0000                     _RXF4EIDH	set	3858
   101  0000                     _RXF4EIDL	set	3859
   102  0000                     _RXF4SIDH	set	3856
   103  0000                     _RXF4SIDL	set	3857
   104  0000                     _RXF4SIDLbits	set	3857
   105  0000                     _RXF5EIDH	set	3862
   106  0000                     _RXF5EIDL	set	3863
   107  0000                     _RXF5SIDH	set	3860
   108  0000                     _RXF5SIDL	set	3861
   109  0000                     _RXF5SIDLbits	set	3861
   110  0000                     _RXM0EIDH	set	3866
   111  0000                     _RXM0EIDL	set	3867
   112  0000                     _RXM0SIDH	set	3864
   113  0000                     _RXM0SIDL	set	3865
   114  0000                     _RXM0SIDLbits	set	3865
   115  0000                     _RXM1EIDH	set	3870
   116  0000                     _RXM1EIDL	set	3871
   117  0000                     _RXM1SIDH	set	3868
   118  0000                     _RXM1SIDL	set	3869
   119  0000                     _RXM1SIDLbits	set	3869
   120  0000                     _TXB0CONbits	set	3904
   121  0000                     _TXB0D0	set	3910
   122  0000                     _TXB0D1	set	3911
   123  0000                     _TXB0D2	set	3912
   124  0000                     _TXB0D3	set	3913
   125  0000                     _TXB0D4	set	3914
   126  0000                     _TXB0D5	set	3915
   127  0000                     _TXB0D6	set	3916
   128  0000                     _TXB0D7	set	3917
   129  0000                     _TXB0DLC	set	3909
   130  0000                     _TXB0DLCbits	set	3909
   131  0000                     _TXB0EIDH	set	3907
   132  0000                     _TXB0EIDL	set	3908
   133  0000                     _TXB0SIDH	set	3905
   134  0000                     _TXB0SIDL	set	3906
   135  0000                     _TXB0SIDLbits	set	3906
   136  0000                     _TXB1CONbits	set	3888
   137  0000                     _TXB1D0	set	3894
   138  0000                     _TXB1D1	set	3895
   139  0000                     _TXB1D2	set	3896
   140  0000                     _TXB1D3	set	3897
   141  0000                     _TXB1D4	set	3898
   142  0000                     _TXB1D5	set	3899
   143  0000                     _TXB1D6	set	3900
   144  0000                     _TXB1D7	set	3901
   145  0000                     _TXB1DLC	set	3893
   146  0000                     _TXB1DLCbits	set	3893
   147  0000                     _TXB1EIDH	set	3891
   148  0000                     _TXB1EIDL	set	3892
   149  0000                     _TXB1SIDH	set	3889
   150  0000                     _TXB1SIDL	set	3890
   151  0000                     _TXB1SIDLbits	set	3890
   152  0000                     _TXB2CONbits	set	3872
   153  0000                     _TXB2D0	set	3878
   154  0000                     _TXB2D1	set	3879
   155  0000                     _TXB2D2	set	3880
   156  0000                     _TXB2D3	set	3881
   157  0000                     _TXB2D4	set	3882
   158  0000                     _TXB2D5	set	3883
   159  0000                     _TXB2D6	set	3884
   160  0000                     _TXB2D7	set	3885
   161  0000                     _TXB2DLC	set	3877
   162  0000                     _TXB2DLCbits	set	3877
   163  0000                     _TXB2EIDH	set	3875
   164  0000                     _TXB2EIDL	set	3876
   165  0000                     _TXB2SIDH	set	3873
   166  0000                     _TXB2SIDL	set	3874
   167  0000                     _TXB2SIDLbits	set	3874
   168  0000                     _ADCON0bits	set	4034
   169  0000                     _ADCON1bits	set	4033
   170  0000                     _ADCON2bits	set	4032
   171  0000                     _ADRESH	set	4036
   172  0000                     _BRGCON1	set	3952
   173  0000                     _BRGCON2	set	3953
   174  0000                     _BRGCON2bits	set	3953
   175  0000                     _BRGCON3	set	3954
   176  0000                     _BRGCON3bits	set	3954
   177  0000                     _CANCON	set	3951
   178  0000                     _CANCONbits	set	3951
   179  0000                     _CANSTAT	set	3950
   180  0000                     _COMSTATbits	set	3956
   181  0000                     _ECCP1CON	set	4026
   182  0000                     _ECCPR1L	set	4027
   183  0000                     _INTCONbits	set	4082
   184  0000                     _IPR2bits	set	4002
   185  0000                     _IPR3bits	set	4005
   186  0000                     _LATA	set	3977
   187  0000                     _LATB	set	3978
   188  0000                     _LATC	set	3979
   189  0000                     _LATD	set	3980
   190  0000                     _LATE	set	3981
   191  0000                     _PIE1bits	set	3997
   192  0000                     _PIE2bits	set	4000
   193  0000                     _PIE3bits	set	4003
   194  0000                     _PIR1bits	set	3998
   195  0000                     _PIR2bits	set	4001
   196  0000                     _PIR3bits	set	4004
   197  0000                     _PORTAbits	set	3968
   198  0000                     _PORTCbits	set	3970
   199  0000                     _PR2	set	4043
   200  0000                     _RCONbits	set	4048
   201  0000                     _RCSTA	set	4011
   202  0000                     _RCSTAbits	set	4011
   203  0000                     _RXB0CON	set	3936
   204  0000                     _RXB0CONbits	set	3936
   205  0000                     _RXB0D0	set	3942
   206  0000                     _RXB0D1	set	3943
   207  0000                     _RXB0D2	set	3944
   208  0000                     _RXB0D3	set	3945
   209  0000                     _RXB0D4	set	3946
   210  0000                     _RXB0D5	set	3947
   211  0000                     _RXB0D6	set	3948
   212  0000                     _RXB0D7	set	3949
   213  0000                     _RXB0DLC	set	3941
   214  0000                     _RXB0DLCbits	set	3941
   215  0000                     _RXB0EIDH	set	3939
   216  0000                     _RXB0EIDL	set	3940
   217  0000                     _RXB0SIDH	set	3937
   218  0000                     _RXB0SIDL	set	3938
   219  0000                     _RXB0SIDLbits	set	3938
   220  0000                     _RXERRCNT	set	3957
   221  0000                     _SPBRG	set	4015
   222  0000                     _SPBRGH	set	4016
   223  0000                     _T2CON	set	4042
   224  0000                     _T2CONbits	set	4042
   225  0000                     _T3CON	set	4017
   226  0000                     _TMR2	set	4044
   227  0000                     _TMR3H	set	4019
   228  0000                     _TMR3L	set	4018
   229  0000                     _TRISA	set	3986
   230  0000                     _TRISB	set	3987
   231  0000                     _TRISC	set	3988
   232  0000                     _TRISCbits	set	3988
   233  0000                     _TRISD	set	3989
   234  0000                     _TRISDbits	set	3989
   235  0000                     _TRISE	set	3990
   236  0000                     _TXERRCNT	set	3958
   237  0000                     _TXREG	set	4013
   238  0000                     _TXSTA	set	4012
   239  0000                     _TXSTAbits	set	4012
   240                           
   241                           ; #config settings
   242  0000                     
   243                           	psect	cinit
   244  002840                     __pcinit:
   245                           	opt stack 0
   246  002840                     start_initialization:
   247                           	opt stack 0
   248  002840                     __initialization:
   249                           	opt stack 0
   250                           
   251                           ; Clear objects allocated to BANK0 (90 bytes)
   252  002840  EE00  F060         	lfsr	0,__pbssBANK0
   253  002844  0E5A               	movlw	90
   254  002846                     clear_0:
   255  002846  6AEE               	clrf	postinc0,c
   256  002848  06E8               	decf	wreg,f,c
   257  00284A  E1FD               	bnz	clear_0
   258                           
   259                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   260  00284C  6A3B               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   261  00284E  6A3A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   262                           
   263                           ; Clear objects allocated to COMRAM (24 bytes)
   264  002850  EE00  F022         	lfsr	0,__pbssCOMRAM
   265  002854  0E18               	movlw	24
   266  002856                     clear_1:
   267  002856  6AEE               	clrf	postinc0,c
   268  002858  06E8               	decf	wreg,f,c
   269  00285A  E1FD               	bnz	clear_1
   270                           
   271                           ; Initialize objects allocated to BANK0 (4 bytes)
   272                           ; load TBLPTR registers with __pidataBANK0
   273  00285C  0EC8               	movlw	low __pidataBANK0
   274  00285E  6EF6               	movwf	tblptrl,c
   275  002860  0E2A               	movlw	high __pidataBANK0
   276  002862  6EF7               	movwf	tblptrh,c
   277  002864  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   278  002866  6EF8               	movwf	tblptru,c
   279  002868  EE00  F0DF         	lfsr	0,__pdataBANK0
   280  00286C  EE10 F004          	lfsr	1,4
   281  002870                     copy_data0:
   282  002870  0009               	tblrd		*+
   283  002872  CFF5 FFEE          	movff	tablat,postinc0
   284  002876  50E5               	movf	postdec1,w,c
   285  002878  50E1               	movf	fsr1l,w,c
   286  00287A  E1FA               	bnz	copy_data0
   287                           
   288                           ; Initialize objects allocated to COMRAM (3 bytes)
   289                           ; load TBLPTR registers with __pidataCOMRAM
   290  00287C  0ECC               	movlw	low __pidataCOMRAM
   291  00287E  6EF6               	movwf	tblptrl,c
   292  002880  0E2A               	movlw	high __pidataCOMRAM
   293  002882  6EF7               	movwf	tblptrh,c
   294  002884  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   295  002886  6EF8               	movwf	tblptru,c
   296  002888  0009               	tblrd		*+	;fetch initializer
   297  00288A  CFF5 F03C          	movff	tablat,__pdataCOMRAM
   298  00288E  0009               	tblrd		*+	;fetch initializer
   299  002890  CFF5 F03D          	movff	tablat,__pdataCOMRAM+1
   300  002894  0009               	tblrd		*+	;fetch initializer
   301  002896  CFF5 F03E          	movff	tablat,__pdataCOMRAM+2
   302  00289A                     end_of_initialization:
   303                           	opt stack 0
   304  00289A                     __end_of__initialization:
   305                           	opt stack 0
   306  00289A  903F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   307  00289C  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   308  00289E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   309  0028A0  6EF8               	movwf	tblptru,c
   310  0028A2  0100               	movlb	0
   311  0028A4  EF55  F00A         	goto	_main	;jump to C main() function
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           postdec1	equ	0xFE5
   319                           fsr1l	equ	0xFE1
   320                           
   321                           	psect	bitbssCOMRAM
   322  0001D0                     __pbitbssCOMRAM:
   323                           	opt stack 0
   324  0001D0                     _can_retry:
   325                           	opt stack 0
   326  0001D0                     	ds	1
   327  0001D1                     _centralina_abs:
   328                           	opt stack 0
   329  0001D1                     	ds	1
   330  0001D2                     _centralina_comando:
   331                           	opt stack 0
   332  0001D2                     	ds	1
   333  0001D3                     _centralina_sterzo:
   334                           	opt stack 0
   335  0001D3                     	ds	1
   336  0001D4                     _message_sent:
   337                           	opt stack 0
   338  0001D4                     	ds	1
   339  0001D5                     _remote_frame:
   340                           	opt stack 0
   341  0001D5                     	ds	1
   342  0001D6                     _remote_frame1:
   343                           	opt stack 0
   344  0001D6                     	ds	1
   345  0001D7                     _request_sent:
   346                           	opt stack 0
   347  0001D7                     	ds	1
   348  0001D8                     _speed_fetched:
   349                           	opt stack 0
   350  0001D8                     	ds	1
   351                           tblptru	equ	0xFF8
   352                           tblptrh	equ	0xFF7
   353                           tblptrl	equ	0xFF6
   354                           tablat	equ	0xFF5
   355                           postinc0	equ	0xFEE
   356                           wreg	equ	0xFE8
   357                           postdec1	equ	0xFE5
   358                           fsr1l	equ	0xFE1
   359                           
   360                           	psect	bssCOMRAM
   361  000022                     __pbssCOMRAM:
   362                           	opt stack 0
   363  000022                     _counter:
   364                           	opt stack 0
   365  000022                     	ds	4
   366  000026                     _id:
   367                           	opt stack 0
   368  000026                     	ds	4
   369  00002A                     _id1:
   370                           	opt stack 0
   371  00002A                     	ds	4
   372  00002E                     _clock_counter_reference:
   373                           	opt stack 0
   374  00002E                     	ds	2
   375  000030                     _duty_cycle:
   376                           	opt stack 0
   377  000030                     	ds	2
   378  000032                     _left_speed:
   379                           	opt stack 0
   380  000032                     	ds	2
   381  000034                     _right_speed:
   382                           	opt stack 0
   383  000034                     	ds	2
   384  000036                     _vBatt:
   385                           	opt stack 0
   386  000036                     	ds	2
   387  000038                     _USART_Status:
   388                           	opt stack 0
   389  000038                     	ds	1
   390  000039                     _current:
   391                           	opt stack 0
   392  000039                     	ds	1
   393                           tblptru	equ	0xFF8
   394                           tblptrh	equ	0xFF7
   395                           tblptrl	equ	0xFF6
   396                           tablat	equ	0xFF5
   397                           postinc0	equ	0xFEE
   398                           wreg	equ	0xFE8
   399                           postdec1	equ	0xFE5
   400                           fsr1l	equ	0xFE1
   401                           
   402                           	psect	dataCOMRAM
   403  00003C                     __pdataCOMRAM:
   404                           	opt stack 0
   405  00003C                     _dir:
   406                           	opt stack 0
   407  00003C                     	ds	2
   408  00003E                     _delay_quartz_frequency_value:
   409                           	opt stack 0
   410  00003E                     	ds	1
   411                           tblptru	equ	0xFF8
   412                           tblptrh	equ	0xFF7
   413                           tblptrl	equ	0xFF6
   414                           tablat	equ	0xFF5
   415                           postinc0	equ	0xFEE
   416                           wreg	equ	0xFE8
   417                           postdec1	equ	0xFE5
   418                           fsr1l	equ	0xFE1
   419                           
   420                           	psect	bssBANK0
   421  000060                     __pbssBANK0:
   422                           	opt stack 0
   423  000060                     _counter_array:
   424                           	opt stack 0
   425  000060                     	ds	8
   426  000068                     _currentSpeed_array:
   427                           	opt stack 0
   428  000068                     	ds	8
   429  000070                     _correzione:
   430                           	opt stack 0
   431  000070                     	ds	4
   432  000074                     _duty_set:
   433                           	opt stack 0
   434  000074                     	ds	4
   435  000078                     _previousTimeCounter:
   436                           	opt stack 0
   437  000078                     	ds	4
   438  00007C                     _previousTimeCounter1:
   439                           	opt stack 0
   440  00007C                     	ds	4
   441  000080                     _previousTimeCounter2:
   442                           	opt stack 0
   443  000080                     	ds	4
   444  000084                     _requestSpeed:
   445                           	opt stack 0
   446  000084                     	ds	4
   447  000088                     _timeCounter:
   448                           	opt stack 0
   449  000088                     	ds	4
   450  00008C                     _errore:
   451                           	opt stack 0
   452  00008C                     	ds	2
   453  00008E                     _previousPwm:
   454                           	opt stack 0
   455  00008E                     	ds	2
   456  000090                     _UART1Config:
   457                           	opt stack 0
   458  000090                     	ds	1
   459  000091                     _baud:
   460                           	opt stack 0
   461  000091                     	ds	1
   462  000092                     _scrittura:
   463                           	opt stack 0
   464  000092                     	ds	1
   465  000093                     _msg:
   466                           	opt stack 0
   467  000093                     	ds	15
   468  0000A2                     _data_array:
   469                           	opt stack 0
   470  0000A2                     	ds	8
   471  0000AA                     _data_array1:
   472                           	opt stack 0
   473  0000AA                     	ds	8
   474  0000B2                     _data_array_debug:
   475                           	opt stack 0
   476  0000B2                     	ds	8
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           postdec1	equ	0xFE5
   484                           fsr1l	equ	0xFE1
   485                           
   486                           	psect	dataBANK0
   487  0000DF                     __pdataBANK0:
   488                           	opt stack 0
   489  0000DF                     _currentSpeed:
   490                           	opt stack 0
   491  0000DF                     	ds	4
   492                           tblptru	equ	0xFF8
   493                           tblptrh	equ	0xFF7
   494                           tblptrl	equ	0xFF6
   495                           tablat	equ	0xFF5
   496                           postinc0	equ	0xFEE
   497                           wreg	equ	0xFE8
   498                           postdec1	equ	0xFE5
   499                           fsr1l	equ	0xFE1
   500                           
   501                           	psect	cstackBANK0
   502  0000BA                     __pcstackBANK0:
   503                           	opt stack 0
   504  0000BA                     ?_abs:
   505                           	opt stack 0
   506  0000BA                     ?___lwdiv:
   507                           	opt stack 0
   508  0000BA                     CANOperationMode@mode:
   509                           	opt stack 0
   510  0000BA                     _CANisTxReady$3044:
   511                           	opt stack 0
   512  0000BA                     OpenEPWM1@period:
   513                           	opt stack 0
   514  0000BA                     SetOutputEPWM1@outputmode:
   515                           	opt stack 0
   516  0000BA                     OpenTimer2@config:
   517                           	opt stack 0
   518  0000BA                     WriteUSART@data:
   519                           	opt stack 0
   520  0000BA                     SetDCEPWM1@dutycycle:
   521                           	opt stack 0
   522  0000BA                     OpenUSART@spbrg:
   523                           	opt stack 0
   524  0000BA                     abs@a:
   525                           	opt stack 0
   526  0000BA                     ___lwdiv@dividend:
   527                           	opt stack 0
   528  0000BA                     CANsendMessage@identifier:
   529                           	opt stack 0
   530  0000BA                     CANSetMask@mask:
   531                           	opt stack 0
   532  0000BA                     CANSetFilter@filter:
   533                           	opt stack 0
   534                           
   535                           ; 4 bytes @ 0x0
   536  0000BA                     	ds	1
   537  0000BB                     SetOutputEPWM1@outputconfig:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x1
   541  0000BB                     	ds	1
   542  0000BC                     ??_abs:
   543  0000BC                     ??_SetDCEPWM1:
   544  0000BC                     OpenUSART@config:
   545                           	opt stack 0
   546  0000BC                     ___lwdiv@divisor:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x2
   550  0000BC                     	ds	2
   551  0000BE                     CANSetMask@type:
   552                           	opt stack 0
   553  0000BE                     CANSetFilter@type:
   554                           	opt stack 0
   555  0000BE                     ___lwdiv@counter:
   556                           	opt stack 0
   557  0000BE                     CANsendMessage@data:
   558                           	opt stack 0
   559  0000BE                     SetDCEPWM1@DCycle:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x4
   563  0000BE                     	ds	1
   564  0000BF                     ??_CANSetMask:
   565  0000BF                     ??_CANSetFilter:
   566  0000BF                     ___lwdiv@quotient:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x5
   570  0000BF                     	ds	1
   571  0000C0                     CANsendMessage@dataLength:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0x6
   575  0000C0                     	ds	1
   576  0000C1                     ?___wmul:
   577                           	opt stack 0
   578  0000C1                     CANsendMessage@flags:
   579                           	opt stack 0
   580  0000C1                     ___wmul@multiplier:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x7
   584  0000C1                     	ds	1
   585  0000C2                     ??_CANsendMessage:
   586                           
   587                           ; 0 bytes @ 0x8
   588  0000C2                     	ds	1
   589  0000C3                     CANSetMask@numBuffer:
   590                           	opt stack 0
   591  0000C3                     CANSetFilter@numBuffer:
   592                           	opt stack 0
   593  0000C3                     ___wmul@multiplicand:
   594                           	opt stack 0
   595                           
   596                           ; 2 bytes @ 0x9
   597  0000C3                     	ds	1
   598  0000C4                     CANSetMask@tamp:
   599                           	opt stack 0
   600  0000C4                     CANSetFilter@tamp:
   601                           	opt stack 0
   602                           
   603                           ; 4 bytes @ 0xA
   604  0000C4                     	ds	1
   605  0000C5                     ___wmul@product:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0xB
   609  0000C5                     	ds	1
   610  0000C6                     CANsendMessage@tamp:
   611                           	opt stack 0
   612                           
   613                           ; 4 bytes @ 0xC
   614  0000C6                     	ds	1
   615  0000C7                     ?___awdiv:
   616                           	opt stack 0
   617  0000C7                     delay_ms@value_ms:
   618                           	opt stack 0
   619  0000C7                     ___awdiv@dividend:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0xD
   623  0000C7                     	ds	1
   624  0000C8                     CANInitialize@phaseSeg1:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0xE
   628  0000C8                     	ds	1
   629  0000C9                     CANInitialize@phaseSeg2:
   630                           	opt stack 0
   631  0000C9                     ___awdiv@divisor:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0xF
   635  0000C9                     	ds	1
   636  0000CA                     CANInitialize@SJW:
   637                           	opt stack 0
   638  0000CA                     send_data@i:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x10
   642  0000CA                     	ds	1
   643  0000CB                     CANInitialize@BRP:
   644                           	opt stack 0
   645  0000CB                     ___awdiv@counter:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x11
   649  0000CB                     	ds	1
   650  0000CC                     CANInitialize@flags:
   651                           	opt stack 0
   652  0000CC                     ___awdiv@sign:
   653                           	opt stack 0
   654                           
   655                           ; 1 bytes @ 0x12
   656  0000CC                     	ds	1
   657  0000CD                     ??_CANInitialize:
   658  0000CD                     ___awdiv@quotient:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x13
   662  0000CD                     	ds	2
   663  0000CF                     
   664                           ; 0 bytes @ 0x15
   665  0000CF                     	ds	2
   666  0000D1                     CANInitialize@propSeg:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x17
   670  0000D1                     	ds	1
   671  0000D2                     CANInitialize@FilterConfig1:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x18
   675  0000D2                     	ds	1
   676  0000D3                     CANInitialize@FilterConfig2:
   677                           	opt stack 0
   678                           
   679                           ; 1 bytes @ 0x19
   680  0000D3                     	ds	1
   681  0000D4                     ??_main:
   682                           
   683                           ; 0 bytes @ 0x1A
   684  0000D4                     	ds	8
   685  0000DC                     main@period:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x22
   689  0000DC                     	ds	1
   690  0000DD                     main@i:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x23
   694  0000DD                     	ds	2
   695                           tblptru	equ	0xFF8
   696                           tblptrh	equ	0xFF7
   697                           tblptrl	equ	0xFF6
   698                           tablat	equ	0xFF5
   699                           postinc0	equ	0xFEE
   700                           wreg	equ	0xFE8
   701                           postdec1	equ	0xFE5
   702                           fsr1l	equ	0xFE1
   703                           
   704                           	psect	cstackCOMRAM
   705  000001                     __pcstackCOMRAM:
   706                           	opt stack 0
   707  000001                     _CANisRxReady$3046:
   708                           	opt stack 0
   709  000001                     i1SetOutputEPWM1@outputmode:
   710                           	opt stack 0
   711  000001                     CANreceiveMessage@msg:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x0
   715  000001                     	ds	1
   716  000002                     i1SetOutputEPWM1@outputconfig:
   717                           	opt stack 0
   718                           
   719                           ; 1 bytes @ 0x1
   720  000002                     	ds	1
   721  000003                     ??_CANreceiveMessage:
   722                           
   723                           ; 0 bytes @ 0x2
   724  000003                     	ds	8
   725  00000B                     CANreceiveMessage@error:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0xA
   729  00000B                     	ds	1
   730  00000C                     CANreceiveMessage@tamp:
   731                           	opt stack 0
   732                           
   733                           ; 1 bytes @ 0xB
   734  00000C                     	ds	1
   735  00000D                     ??_ISR_bassa:
   736                           
   737                           ; 0 bytes @ 0xC
   738  00000D                     	ds	19
   739  000020                     ISR_bassa@i:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x1F
   743  000020                     	ds	2
   744                           tblptru	equ	0xFF8
   745                           tblptrh	equ	0xFF7
   746                           tblptrl	equ	0xFF6
   747                           tablat	equ	0xFF5
   748                           postinc0	equ	0xFEE
   749                           wreg	equ	0xFE8
   750                           postdec1	equ	0xFE5
   751                           fsr1l	equ	0xFE1
   752                           
   753 ;;
   754 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   755 ;;
   756 ;; *************** function _main *****************
   757 ;; Defined at:
   758 ;;		line 158 in file "motore.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;  i               2   35[BANK0 ] int 
   763 ;;  period          1   34[BANK0 ] unsigned char 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  2  684[None  ] int 
   766 ;; Registers used:
   767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   773 ;;      Params:         0       0       0       0
   774 ;;      Locals:         0       3       0       0
   775 ;;      Temps:          0       8       0       0
   776 ;;      Totals:         0      11       0       0
   777 ;;Total ram usage:       11 bytes
   778 ;; Hardware stack levels required when called:    5
   779 ;; This function calls:
   780 ;;		_CANisRXwarningON
   781 ;;		_CANisTXwarningON
   782 ;;		_CANsendMessage
   783 ;;		_OpenEPWM1
   784 ;;		_OpenTimer2
   785 ;;		_OpenUSART
   786 ;;		_SetDCEPWM1
   787 ;;		_SetOutputEPWM1
   788 ;;		_WriteUSART
   789 ;;		___lwdiv
   790 ;;		___wmul
   791 ;;		_abs
   792 ;;		_battery_measure
   793 ;;		_configurazione_iniziale
   794 ;;		_delay_ms
   795 ;;		_send_data
   796 ;; This function is called by:
   797 ;;		Startup code after reset
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text0
   802  0014AA                     __ptext0:
   803                           	opt stack 0
   804  0014AA                     _main:
   805                           	opt stack 26
   806                           
   807                           ;motore.c: 159: unsigned char period;
   808                           ;motore.c: 160: configurazione_iniziale();
   809                           
   810                           ;incstack = 0
   811  0014AA  EC08  F013         	call	_configurazione_iniziale	;wreg free
   812                           
   813                           ;motore.c: 161: PORTAbits.RA1 = 1;
   814  0014AE  8280               	bsf	3968,1,c	;volatile
   815                           
   816                           ;motore.c: 162: PORTCbits.RC1 = 1;
   817  0014B0  8282               	bsf	3970,1,c	;volatile
   818                           
   819                           ;motore.c: 163: delay_ms(500);
   820  0014B2  0E01               	movlw	1
   821  0014B4  0100               	movlb	0	; () banked
   822  0014B6  6FC8               	movwf	(delay_ms@value_ms+1)& (0+255),b
   823  0014B8  0EF4               	movlw	244
   824  0014BA  6FC7               	movwf	delay_ms@value_ms& (0+255),b
   825  0014BC  ECDC  F014         	call	_delay_ms	;wreg free
   826                           
   827                           ;motore.c: 164: PORTAbits.RA1 = 0;
   828  0014C0  9280               	bcf	3968,1,c	;volatile
   829                           
   830                           ;motore.c: 165: PORTCbits.RC1 = 0;
   831  0014C2  9282               	bcf	3970,1,c	;volatile
   832                           
   833                           ;motore.c: 166: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
   834  0014C4  0E06               	movlw	6
   835  0014C6  EC1E  F015         	call	_OpenTimer2
   836                           
   837                           ;motore.c: 167: period = 0xFE;
   838  0014CA  0EFE               	movlw	254
   839  0014CC  0100               	movlb	0	; () banked
   840  0014CE  6FDC               	movwf	main@period& (0+255),b
   841                           
   842                           ; BSR set to: 0
   843                           ;motore.c: 168: OpenEPWM1(period);
   844  0014D0  0100               	movlb	0	; () banked
   845  0014D2  51DC               	movf	main@period& (0+255),w,b
   846  0014D4  EC4F  F015         	call	_OpenEPWM1
   847                           
   848                           ;motore.c: 169: speed_fetched = 1;
   849  0014D8  803B               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   850                           
   851                           ;motore.c: 170: SetOutputEPWM1(0b01111111, 0b11111100);
   852  0014DA  0EFC               	movlw	252
   853  0014DC  0100               	movlb	0	; () banked
   854  0014DE  6FBA               	movwf	SetOutputEPWM1@outputmode& (0+255),b
   855  0014E0  0E7F               	movlw	127
   856  0014E2  EC54  F014         	call	_SetOutputEPWM1
   857                           
   858                           ;motore.c: 171: TRISCbits.RC6 = 0;
   859  0014E6  9C94               	bcf	3988,6,c	;volatile
   860                           
   861                           ;motore.c: 172: TRISCbits.RC7 = 1;
   862  0014E8  8E94               	bsf	3988,7,c	;volatile
   863                           
   864                           ;motore.c: 173: UART1Config = 0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b1111
      +                          1111;
   865  0014EA  0E3C               	movlw	60
   866  0014EC  0100               	movlb	0	; () banked
   867  0014EE  6F90               	movwf	_UART1Config& (0+255),b
   868                           
   869                           ; BSR set to: 0
   870                           ;motore.c: 174: baud = 103;
   871  0014F0  0E67               	movlw	103
   872  0014F2  0100               	movlb	0	; () banked
   873  0014F4  6F91               	movwf	_baud& (0+255),b
   874                           
   875                           ; BSR set to: 0
   876                           ;motore.c: 175: OpenUSART(UART1Config, baud);
   877  0014F6  C091  F0BA         	movff	_baud,OpenUSART@spbrg
   878  0014FA  0100               	movlb	0	; () banked
   879  0014FC  6BBB               	clrf	(OpenUSART@spbrg+1)& (0+255),b
   880  0014FE  0100               	movlb	0	; () banked
   881  001500  5190               	movf	_UART1Config& (0+255),w,b
   882  001502  ECE6  F013         	call	_OpenUSART
   883                           
   884                           ;motore.c: 176: WriteUSART(1);
   885  001506  0E01               	movlw	1
   886  001508  EC45  F015         	call	_WriteUSART
   887  00150C                     l5372:
   888                           
   889                           ;motore.c: 179: if ((timeCounter - previousTimeCounter1 >= 10)) {
   890  00150C  C07C  F0D4         	movff	_previousTimeCounter1,??_main
   891  001510  C07D  F0D5         	movff	_previousTimeCounter1+1,??_main+1
   892  001514  C07E  F0D6         	movff	_previousTimeCounter1+2,??_main+2
   893  001518  C07F  F0D7         	movff	_previousTimeCounter1+3,??_main+3
   894  00151C  0100               	movlb	0	; () banked
   895  00151E  1FD4               	comf	??_main& (0+255),f,b
   896  001520  1FD5               	comf	(??_main+1)& (0+255),f,b
   897  001522  1FD6               	comf	(??_main+2)& (0+255),f,b
   898  001524  1FD7               	comf	(??_main+3)& (0+255),f,b
   899  001526  2BD4               	incf	??_main& (0+255),f,b
   900  001528  0E00               	movlw	0
   901  00152A  23D5               	addwfc	(??_main+1)& (0+255),f,b
   902  00152C  23D6               	addwfc	(??_main+2)& (0+255),f,b
   903  00152E  23D7               	addwfc	(??_main+3)& (0+255),f,b
   904  001530  0100               	movlb	0	; () banked
   905  001532  5188               	movf	_timeCounter& (0+255),w,b
   906  001534  0100               	movlb	0	; () banked
   907  001536  25D4               	addwf	??_main& (0+255),w,b
   908  001538  0100               	movlb	0	; () banked
   909  00153A  6FD8               	movwf	(??_main+4)& (0+255),b
   910  00153C  0100               	movlb	0	; () banked
   911  00153E  5189               	movf	(_timeCounter+1)& (0+255),w,b
   912  001540  0100               	movlb	0	; () banked
   913  001542  21D5               	addwfc	(??_main+1)& (0+255),w,b
   914  001544  0100               	movlb	0	; () banked
   915  001546  6FD9               	movwf	(??_main+5)& (0+255),b
   916  001548  0100               	movlb	0	; () banked
   917  00154A  518A               	movf	(_timeCounter+2)& (0+255),w,b
   918  00154C  0100               	movlb	0	; () banked
   919  00154E  21D6               	addwfc	(??_main+2)& (0+255),w,b
   920  001550  0100               	movlb	0	; () banked
   921  001552  6FDA               	movwf	(??_main+6)& (0+255),b
   922  001554  0100               	movlb	0	; () banked
   923  001556  518B               	movf	(_timeCounter+3)& (0+255),w,b
   924  001558  0100               	movlb	0	; () banked
   925  00155A  21D7               	addwfc	(??_main+3)& (0+255),w,b
   926  00155C  0100               	movlb	0	; () banked
   927  00155E  6FDB               	movwf	(??_main+7)& (0+255),b
   928  001560  0100               	movlb	0	; () banked
   929  001562  51DB               	movf	(??_main+7)& (0+255),w,b
   930  001564  0100               	movlb	0	; () banked
   931  001566  11DA               	iorwf	(??_main+6)& (0+255),w,b
   932  001568  0100               	movlb	0	; () banked
   933  00156A  11D9               	iorwf	(??_main+5)& (0+255),w,b
   934  00156C  E105               	bnz	u6950
   935  00156E  0E0A               	movlw	10
   936  001570  0100               	movlb	0	; () banked
   937  001572  5DD8               	subwf	(??_main+4)& (0+255),w,b
   938  001574  A0D8               	btfss	status,0,c
   939  001576  D14F               	goto	l5422
   940  001578                     u6950:
   941                           
   942                           ; BSR set to: 0
   943                           ;motore.c: 180: CANsendMessage(0b00000000000000000000000000110, data_array_debug, 8, CAN
      +                          _CONFIG_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   944  001578  0E06               	movlw	6
   945  00157A  0100               	movlb	0	; () banked
   946  00157C  6FBA               	movwf	CANsendMessage@identifier& (0+255),b
   947  00157E  0E00               	movlw	0
   948  001580  6FBB               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   949  001582  0E00               	movlw	0
   950  001584  6FBC               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   951  001586  0E00               	movlw	0
   952  001588  6FBD               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   953  00158A  0EB2               	movlw	low _data_array_debug
   954  00158C  0100               	movlb	0	; () banked
   955  00158E  6FBE               	movwf	CANsendMessage@data& (0+255),b
   956  001590  0E00               	movlw	high _data_array_debug
   957  001592  0100               	movlb	0	; () banked
   958  001594  6FBF               	movwf	(CANsendMessage@data+1)& (0+255),b
   959  001596  0E08               	movlw	8
   960  001598  0100               	movlb	0	; () banked
   961  00159A  6FC0               	movwf	CANsendMessage@dataLength& (0+255),b
   962  00159C  0EFC               	movlw	252
   963  00159E  0100               	movlb	0	; () banked
   964  0015A0  6FC1               	movwf	CANsendMessage@flags& (0+255),b
   965  0015A2  EC8F  F006         	call	_CANsendMessage	;wreg free
   966                           
   967                           ;motore.c: 181: if (speed_fetched == 1) {
   968  0015A6  A03B               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   969  0015A8  D128               	goto	l5418
   970                           
   971                           ;motore.c: 183: WriteUSART(0b11111111);
   972  0015AA  0EFF               	movlw	255
   973  0015AC  EC45  F015         	call	_WriteUSART
   974                           
   975                           ;motore.c: 184: for (int i = 0; i<8; i++){
   976  0015B0  0E00               	movlw	0
   977  0015B2  0100               	movlb	0	; () banked
   978  0015B4  6FDE               	movwf	(main@i+1)& (0+255),b
   979  0015B6  0E00               	movlw	0
   980  0015B8  6FDD               	movwf	main@i& (0+255),b
   981                           
   982                           ; BSR set to: 0
   983  0015BA  0100               	movlb	0	; () banked
   984  0015BC  BFDE               	btfsc	(main@i+1)& (0+255),7,b
   985  0015BE  D008               	goto	l5386
   986  0015C0  0100               	movlb	0	; () banked
   987  0015C2  51DE               	movf	(main@i+1)& (0+255),w,b
   988  0015C4  E11E               	bnz	l689
   989  0015C6  0E08               	movlw	8
   990  0015C8  0100               	movlb	0	; () banked
   991  0015CA  5DDD               	subwf	main@i& (0+255),w,b
   992  0015CC  B0D8               	btfsc	status,0,c
   993  0015CE  D019               	goto	l689
   994  0015D0                     l5386:
   995                           
   996                           ; BSR set to: 0
   997                           ;motore.c: 185: scrittura = current[i];
   998  0015D0  0E39               	movlw	low _current
   999  0015D2  0100               	movlb	0	; () banked
  1000  0015D4  25DD               	addwf	main@i& (0+255),w,b
  1001  0015D6  6ED9               	movwf	fsr2l,c
  1002  0015D8  0E00               	movlw	high _current
  1003  0015DA  0100               	movlb	0	; () banked
  1004  0015DC  21DE               	addwfc	(main@i+1)& (0+255),w,b
  1005  0015DE  6EDA               	movwf	fsr2h,c
  1006  0015E0  50DF               	movf	indf2,w,c
  1007  0015E2  0100               	movlb	0	; () banked
  1008  0015E4  6F92               	movwf	_scrittura& (0+255),b
  1009                           
  1010                           ; BSR set to: 0
  1011                           ;motore.c: 186: WriteUSART(scrittura);
  1012  0015E6  0100               	movlb	0	; () banked
  1013  0015E8  5192               	movf	_scrittura& (0+255),w,b
  1014  0015EA  EC45  F015         	call	_WriteUSART
  1015  0015EE  0100               	movlb	0	; () banked
  1016  0015F0  4BDD               	infsnz	main@i& (0+255),f,b
  1017  0015F2  2BDE               	incf	(main@i+1)& (0+255),f,b
  1018                           
  1019                           ; BSR set to: 0
  1020  0015F4  0100               	movlb	0	; () banked
  1021  0015F6  BFDE               	btfsc	(main@i+1)& (0+255),7,b
  1022  0015F8  D7EB               	goto	l5386
  1023  0015FA  0100               	movlb	0	; () banked
  1024  0015FC  51DE               	movf	(main@i+1)& (0+255),w,b
  1025  0015FE  E101               	bnz	u6980
  1026  001600  D7E2               	goto	L1
  1027  001602                     u6980:
  1028  001602                     l689:
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;motore.c: 187: }
  1032                           ;motore.c: 189: speed_fetched = 0;
  1033  001602  903B               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
  1034                           
  1035                           ; BSR set to: 0
  1036                           ;motore.c: 190: currentSpeed = ((left_speed + right_speed) / 2);
  1037  001604  5034               	movf	_right_speed,w,c
  1038  001606  2432               	addwf	_left_speed,w,c
  1039  001608  0100               	movlb	0	; () banked
  1040  00160A  6FD4               	movwf	??_main& (0+255),b
  1041  00160C  5035               	movf	_right_speed+1,w,c
  1042  00160E  2033               	addwfc	_left_speed+1,w,c
  1043  001610  0100               	movlb	0	; () banked
  1044  001612  6FD5               	movwf	(??_main+1)& (0+255),b
  1045  001614  90D8               	bcf	status,0,c
  1046  001616  0100               	movlb	0	; () banked
  1047  001618  31D5               	rrcf	(??_main+1)& (0+255),w,b
  1048  00161A  0100               	movlb	0	; () banked
  1049  00161C  6FD7               	movwf	(??_main+3)& (0+255),b
  1050  00161E  0100               	movlb	0	; () banked
  1051  001620  31D4               	rrcf	??_main& (0+255),w,b
  1052  001622  0100               	movlb	0	; () banked
  1053  001624  6FD6               	movwf	(??_main+2)& (0+255),b
  1054  001626  C0D6  F0DF         	movff	??_main+2,_currentSpeed	;volatile
  1055  00162A  C0D7  F0E0         	movff	??_main+3,_currentSpeed+1	;volatile
  1056  00162E  0100               	movlb	0	; () banked
  1057  001630  6BE1               	clrf	(_currentSpeed+2)& (0+255),b	;volatile
  1058  001632  6BE2               	clrf	(_currentSpeed+3)& (0+255),b	;volatile
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;motore.c: 192: requestSpeed = 1000;
  1062  001634  0EE8               	movlw	232
  1063  001636  0100               	movlb	0	; () banked
  1064  001638  6F84               	movwf	_requestSpeed& (0+255),b	;volatile
  1065  00163A  0E03               	movlw	3
  1066  00163C  6F85               	movwf	(_requestSpeed+1)& (0+255),b	;volatile
  1067  00163E  0E00               	movlw	0
  1068  001640  6F86               	movwf	(_requestSpeed+2)& (0+255),b	;volatile
  1069  001642  0E00               	movlw	0
  1070  001644  6F87               	movwf	(_requestSpeed+3)& (0+255),b	;volatile
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;motore.c: 193: errore = abs((currentSpeed - requestSpeed));
  1074  001646  C084  F0D4         	movff	_requestSpeed,??_main	;volatile
  1075  00164A  C085  F0D5         	movff	_requestSpeed+1,??_main+1	;volatile
  1076  00164E  0100               	movlb	0	; () banked
  1077  001650  1FD4               	comf	??_main& (0+255),f,b
  1078  001652  1FD5               	comf	(??_main+1)& (0+255),f,b
  1079  001654  4BD4               	infsnz	??_main& (0+255),f,b
  1080  001656  2BD5               	incf	(??_main+1)& (0+255),f,b
  1081  001658  0100               	movlb	0	; () banked
  1082  00165A  51DF               	movf	_currentSpeed& (0+255),w,b	;volatile
  1083  00165C  0100               	movlb	0	; () banked
  1084  00165E  25D4               	addwf	??_main& (0+255),w,b
  1085  001660  0100               	movlb	0	; () banked
  1086  001662  6FBA               	movwf	abs@a& (0+255),b
  1087  001664  0100               	movlb	0	; () banked
  1088  001666  51E0               	movf	(_currentSpeed+1)& (0+255),w,b	;volatile
  1089  001668  0100               	movlb	0	; () banked
  1090  00166A  21D5               	addwfc	(??_main+1)& (0+255),w,b
  1091  00166C  0100               	movlb	0	; () banked
  1092  00166E  6FBB               	movwf	(abs@a+1)& (0+255),b
  1093  001670  ECF6  F014         	call	_abs	;wreg free
  1094  001674  C0BA  F08C         	movff	?_abs,_errore
  1095  001678  C0BB  F08D         	movff	?_abs+1,_errore+1
  1096                           
  1097                           ;motore.c: 194: correzione = ((errore / 100)*(errore / 100))*2;
  1098  00167C  0E00               	movlw	0
  1099  00167E  0100               	movlb	0	; () banked
  1100  001680  6FBD               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1101  001682  0E64               	movlw	100
  1102  001684  6FBC               	movwf	___lwdiv@divisor& (0+255),b
  1103  001686  C08C  F0BA         	movff	_errore,___lwdiv@dividend
  1104  00168A  C08D  F0BB         	movff	_errore+1,___lwdiv@dividend+1
  1105  00168E  ECAA  F013         	call	___lwdiv	;wreg free
  1106  001692  C0BA  F0C1         	movff	?___lwdiv,___wmul@multiplier
  1107  001696  C0BB  F0C2         	movff	?___lwdiv+1,___wmul@multiplier+1
  1108  00169A  0E00               	movlw	0
  1109  00169C  0100               	movlb	0	; () banked
  1110  00169E  6FBD               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1111  0016A0  0E64               	movlw	100
  1112  0016A2  6FBC               	movwf	___lwdiv@divisor& (0+255),b
  1113  0016A4  C08C  F0BA         	movff	_errore,___lwdiv@dividend
  1114  0016A8  C08D  F0BB         	movff	_errore+1,___lwdiv@dividend+1
  1115  0016AC  ECAA  F013         	call	___lwdiv	;wreg free
  1116  0016B0  C0BA  F0C3         	movff	?___lwdiv,___wmul@multiplicand
  1117  0016B4  C0BB  F0C4         	movff	?___lwdiv+1,___wmul@multiplicand+1
  1118  0016B8  ECC1  F014         	call	___wmul	;wreg free
  1119  0016BC  90D8               	bcf	status,0,c
  1120  0016BE  0100               	movlb	0	; () banked
  1121  0016C0  37C1               	rlcf	?___wmul& (0+255),f,b
  1122  0016C2  0100               	movlb	0	; () banked
  1123  0016C4  37C2               	rlcf	(?___wmul+1)& (0+255),f,b
  1124  0016C6  0100               	movlb	0	; () banked
  1125  0016C8  C0C1  F070         	movff	?___wmul,_correzione
  1126  0016CC  0100               	movlb	0	; () banked
  1127  0016CE  C0C2  F071         	movff	?___wmul+1,_correzione+1
  1128  0016D2  0100               	movlb	0	; () banked
  1129  0016D4  6B72               	clrf	(_correzione+2)& (0+255),b
  1130  0016D6  6B73               	clrf	(_correzione+3)& (0+255),b
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;motore.c: 195: if (correzione > 1) {
  1134  0016D8  0100               	movlb	0	; () banked
  1135  0016DA  BF73               	btfsc	(_correzione+3)& (0+255),7,b
  1136  0016DC  D083               	goto	l5414
  1137  0016DE  0100               	movlb	0	; () banked
  1138  0016E0  5173               	movf	(_correzione+3)& (0+255),w,b
  1139  0016E2  0100               	movlb	0	; () banked
  1140  0016E4  1172               	iorwf	(_correzione+2)& (0+255),w,b
  1141  0016E6  0100               	movlb	0	; () banked
  1142  0016E8  1171               	iorwf	(_correzione+1)& (0+255),w,b
  1143  0016EA  E105               	bnz	u6990
  1144  0016EC  0E02               	movlw	2
  1145  0016EE  0100               	movlb	0	; () banked
  1146  0016F0  5D70               	subwf	_correzione& (0+255),w,b
  1147  0016F2  A0D8               	btfss	status,0,c
  1148  0016F4  D077               	goto	l5414
  1149  0016F6                     u6990:
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;motore.c: 196: if (currentSpeed > requestSpeed) {
  1153  0016F6  0100               	movlb	0	; () banked
  1154  0016F8  51DF               	movf	_currentSpeed& (0+255),w,b	;volatile
  1155  0016FA  0100               	movlb	0	; () banked
  1156  0016FC  5D84               	subwf	_requestSpeed& (0+255),w,b	;volatile
  1157  0016FE  0100               	movlb	0	; () banked
  1158  001700  51E0               	movf	(_currentSpeed+1)& (0+255),w,b	;volatile
  1159  001702  0100               	movlb	0	; () banked
  1160  001704  5985               	subwfb	(_requestSpeed+1)& (0+255),w,b	;volatile
  1161  001706  0100               	movlb	0	; () banked
  1162  001708  51E1               	movf	(_currentSpeed+2)& (0+255),w,b	;volatile
  1163  00170A  0100               	movlb	0	; () banked
  1164  00170C  5986               	subwfb	(_requestSpeed+2)& (0+255),w,b	;volatile
  1165  00170E  0100               	movlb	0	; () banked
  1166  001710  5187               	movf	(_requestSpeed+3)& (0+255),w,b	;volatile
  1167  001712  0A80               	xorlw	128
  1168  001714  0100               	movlb	0	; () banked
  1169  001716  6FD4               	movwf	??_main& (0+255),b
  1170  001718  0100               	movlb	0	; () banked
  1171  00171A  51E2               	movf	(_currentSpeed+3)& (0+255),w,b	;volatile
  1172  00171C  0A80               	xorlw	128
  1173  00171E  0100               	movlb	0	; () banked
  1174  001720  59D4               	subwfb	??_main& (0+255),w,b
  1175  001722  B0D8               	btfsc	status,0,c
  1176  001724  D030               	goto	l5410
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;motore.c: 198: duty_set = previousPwm - correzione;
  1180  001726  C070  F0D4         	movff	_correzione,??_main
  1181  00172A  C071  F0D5         	movff	_correzione+1,??_main+1
  1182  00172E  C072  F0D6         	movff	_correzione+2,??_main+2
  1183  001732  C073  F0D7         	movff	_correzione+3,??_main+3
  1184  001736  0100               	movlb	0	; () banked
  1185  001738  1FD4               	comf	??_main& (0+255),f,b
  1186  00173A  1FD5               	comf	(??_main+1)& (0+255),f,b
  1187  00173C  1FD6               	comf	(??_main+2)& (0+255),f,b
  1188  00173E  1FD7               	comf	(??_main+3)& (0+255),f,b
  1189  001740  2BD4               	incf	??_main& (0+255),f,b
  1190  001742  0E00               	movlw	0
  1191  001744  23D5               	addwfc	(??_main+1)& (0+255),f,b
  1192  001746  23D6               	addwfc	(??_main+2)& (0+255),f,b
  1193  001748  23D7               	addwfc	(??_main+3)& (0+255),f,b
  1194  00174A  0100               	movlb	0	; () banked
  1195  00174C  518E               	movf	_previousPwm& (0+255),w,b
  1196  00174E  0100               	movlb	0	; () banked
  1197  001750  25D4               	addwf	??_main& (0+255),w,b
  1198  001752  0100               	movlb	0	; () banked
  1199  001754  6F74               	movwf	_duty_set& (0+255),b
  1200  001756  0100               	movlb	0	; () banked
  1201  001758  518F               	movf	(_previousPwm+1)& (0+255),w,b
  1202  00175A  0100               	movlb	0	; () banked
  1203  00175C  21D5               	addwfc	(??_main+1)& (0+255),w,b
  1204  00175E  0100               	movlb	0	; () banked
  1205  001760  6F75               	movwf	(_duty_set+1)& (0+255),b
  1206  001762  0E00               	movlw	0
  1207  001764  0100               	movlb	0	; () banked
  1208  001766  21D6               	addwfc	(??_main+2)& (0+255),w,b
  1209  001768  0100               	movlb	0	; () banked
  1210  00176A  6F76               	movwf	(_duty_set+2)& (0+255),b
  1211  00176C  0E00               	movlw	0
  1212  00176E  0100               	movlb	0	; () banked
  1213  001770  21D7               	addwfc	(??_main+3)& (0+255),w,b
  1214  001772  0100               	movlb	0	; () banked
  1215  001774  6F77               	movwf	(_duty_set+3)& (0+255),b
  1216                           
  1217                           ;motore.c: 199: if (duty_set < 0) {
  1218  001776  0100               	movlb	0	; () banked
  1219  001778  AF77               	btfss	(_duty_set+3)& (0+255),7,b
  1220  00177A  D03B               	goto	l5416
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;motore.c: 200: duty_set = 0;
  1224  00177C  0E00               	movlw	0
  1225  00177E  0100               	movlb	0	; () banked
  1226  001780  6F74               	movwf	_duty_set& (0+255),b
  1227  001782  0E00               	movlw	0
  1228  001784  D029               	goto	L2
  1229  001786                     l5410:
  1230                           
  1231                           ; BSR set to: 0
  1232                           ;motore.c: 203: duty_set = previousPwm + correzione;
  1233  001786  0100               	movlb	0	; () banked
  1234  001788  518E               	movf	_previousPwm& (0+255),w,b
  1235  00178A  0100               	movlb	0	; () banked
  1236  00178C  2570               	addwf	_correzione& (0+255),w,b
  1237  00178E  0100               	movlb	0	; () banked
  1238  001790  6F74               	movwf	_duty_set& (0+255),b
  1239  001792  0100               	movlb	0	; () banked
  1240  001794  518F               	movf	(_previousPwm+1)& (0+255),w,b
  1241  001796  0100               	movlb	0	; () banked
  1242  001798  2171               	addwfc	(_correzione+1)& (0+255),w,b
  1243  00179A  0100               	movlb	0	; () banked
  1244  00179C  6F75               	movwf	(_duty_set+1)& (0+255),b
  1245  00179E  0E00               	movlw	0
  1246  0017A0  0100               	movlb	0	; () banked
  1247  0017A2  2172               	addwfc	(_correzione+2)& (0+255),w,b
  1248  0017A4  0100               	movlb	0	; () banked
  1249  0017A6  6F76               	movwf	(_duty_set+2)& (0+255),b
  1250  0017A8  0E00               	movlw	0
  1251  0017AA  0100               	movlb	0	; () banked
  1252  0017AC  2173               	addwfc	(_correzione+3)& (0+255),w,b
  1253  0017AE  0100               	movlb	0	; () banked
  1254  0017B0  6F77               	movwf	(_duty_set+3)& (0+255),b
  1255                           
  1256                           ;motore.c: 204: if (duty_set > 1024) {
  1257  0017B2  0100               	movlb	0	; () banked
  1258  0017B4  BF77               	btfsc	(_duty_set+3)& (0+255),7,b
  1259  0017B6  D01D               	goto	l5416
  1260  0017B8  0100               	movlb	0	; () banked
  1261  0017BA  5177               	movf	(_duty_set+3)& (0+255),w,b
  1262  0017BC  0100               	movlb	0	; () banked
  1263  0017BE  1176               	iorwf	(_duty_set+2)& (0+255),w,b
  1264  0017C0  E107               	bnz	u7020
  1265  0017C2  0100               	movlb	0	; () banked
  1266  0017C4  0574               	decf	_duty_set& (0+255),w,b
  1267  0017C6  0E04               	movlw	4
  1268  0017C8  0100               	movlb	0	; () banked
  1269  0017CA  5975               	subwfb	(_duty_set+1)& (0+255),w,b
  1270  0017CC  A0D8               	btfss	status,0,c
  1271  0017CE  D011               	goto	l5416
  1272  0017D0                     u7020:
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;motore.c: 205: duty_set = 1023;
  1276  0017D0  0EFF               	movlw	255
  1277  0017D2  0100               	movlb	0	; () banked
  1278  0017D4  6F74               	movwf	_duty_set& (0+255),b
  1279  0017D6  0E03               	movlw	3
  1280  0017D8                     L2:
  1281  0017D8  6F75               	movwf	(_duty_set+1)& (0+255),b
  1282  0017DA  0E00               	movlw	0
  1283  0017DC  6F76               	movwf	(_duty_set+2)& (0+255),b
  1284  0017DE  0E00               	movlw	0
  1285  0017E0  6F77               	movwf	(_duty_set+3)& (0+255),b
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;motore.c: 206: }
  1289                           ;motore.c: 207: }
  1290                           ;motore.c: 208: } else {
  1291                           
  1292                           ; BSR set to: 0
  1293  0017E2  D007               	goto	l5416
  1294  0017E4                     l5414:
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;motore.c: 209: duty_set = previousPwm;
  1298  0017E4  C08E  F074         	movff	_previousPwm,_duty_set
  1299  0017E8  C08F  F075         	movff	_previousPwm+1,_duty_set+1
  1300  0017EC  0100               	movlb	0	; () banked
  1301  0017EE  6B76               	clrf	(_duty_set+2)& (0+255),b
  1302  0017F0  6B77               	clrf	(_duty_set+3)& (0+255),b
  1303  0017F2                     l5416:
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;motore.c: 210: }
  1307                           ;motore.c: 211: previousPwm = duty_set;
  1308  0017F2  C074  F08E         	movff	_duty_set,_previousPwm
  1309  0017F6  C075  F08F         	movff	_duty_set+1,_previousPwm+1
  1310  0017FA                     l5418:
  1311                           
  1312                           ;motore.c: 212: }
  1313                           ;motore.c: 213: previousTimeCounter1 = timeCounter;
  1314  0017FA  C088  F07C         	movff	_timeCounter,_previousTimeCounter1
  1315  0017FE  C089  F07D         	movff	_timeCounter+1,_previousTimeCounter1+1
  1316  001802  C08A  F07E         	movff	_timeCounter+2,_previousTimeCounter1+2
  1317  001806  C08B  F07F         	movff	_timeCounter+3,_previousTimeCounter1+3
  1318                           
  1319                           ;motore.c: 214: SetDCEPWM1(duty_set);
  1320  00180A  C074  F0BA         	movff	_duty_set,SetDCEPWM1@dutycycle
  1321  00180E  C075  F0BB         	movff	_duty_set+1,SetDCEPWM1@dutycycle+1
  1322  001812  EC7D  F014         	call	_SetDCEPWM1	;wreg free
  1323  001816                     l5422:
  1324                           
  1325                           ;motore.c: 215: }
  1326                           ;motore.c: 217: if ((remote_frame == 1) || (can_retry == 1)) {
  1327  001816  AA3A               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1328  001818  B03A               	btfsc	_can_retry/(0+8),_can_retry& (0+7),c
  1329  00181A  D001               	goto	l5426
  1330  00181C  D002               	goto	l5428
  1331  00181E                     l5426:
  1332                           
  1333                           ;motore.c: 218: send_data();
  1334  00181E  EC26  F012         	call	_send_data	;wreg free
  1335  001822                     l5428:
  1336                           
  1337                           ;motore.c: 219: }
  1338                           ;motore.c: 220: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
  1339  001822  EC58  F015         	call	_CANisTXwarningON	;wreg free
  1340  001826  06E8               	decf	wreg,f,c
  1341  001828  B4D8               	btfsc	status,2,c
  1342  00182A  D005               	goto	l701
  1343  00182C  EC5E  F015         	call	_CANisRXwarningON	;wreg free
  1344  001830  06E8               	decf	wreg,f,c
  1345  001832  A4D8               	btfss	status,2,c
  1346  001834  D014               	goto	l699
  1347  001836                     l701:
  1348                           
  1349                           ;motore.c: 222: PORTAbits.RA1 = 1;
  1350  001836  8280               	bsf	3968,1,c	;volatile
  1351                           
  1352                           ;motore.c: 223: delay_ms(200);
  1353  001838  0E00               	movlw	0
  1354  00183A  0100               	movlb	0	; () banked
  1355  00183C  6FC8               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1356  00183E  0EC8               	movlw	200
  1357  001840  6FC7               	movwf	delay_ms@value_ms& (0+255),b
  1358  001842  ECDC  F014         	call	_delay_ms	;wreg free
  1359                           
  1360                           ;motore.c: 224: PORTAbits.RA1 = 0;
  1361  001846  9280               	bcf	3968,1,c	;volatile
  1362                           
  1363                           ;motore.c: 225: delay_ms(200);
  1364  001848  0E00               	movlw	0
  1365  00184A  0100               	movlb	0	; () banked
  1366  00184C  6FC8               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1367  00184E  0EC8               	movlw	200
  1368  001850  6FC7               	movwf	delay_ms@value_ms& (0+255),b
  1369  001852  ECDC  F014         	call	_delay_ms	;wreg free
  1370                           
  1371                           ;motore.c: 226: PORTAbits.RA1 = 1;
  1372  001856  8280               	bsf	3968,1,c	;volatile
  1373                           
  1374                           ;motore.c: 227: COMSTATbits.TXWARN = 0;
  1375  001858  9474               	bcf	3956,2,c	;volatile
  1376                           
  1377                           ;motore.c: 228: COMSTATbits.RXWARN = 0;
  1378  00185A  9274               	bcf	3956,1,c	;volatile
  1379                           
  1380                           ;motore.c: 229: } else {
  1381  00185C  D001               	goto	l5442
  1382  00185E                     l699:
  1383                           
  1384                           ;motore.c: 230: PORTAbits.RA1 = 0;
  1385  00185E  9280               	bcf	3968,1,c	;volatile
  1386  001860                     l5442:
  1387                           
  1388                           ;motore.c: 231: }
  1389                           ;motore.c: 234: if ((timeCounter - previousTimeCounter) > 500) {
  1390  001860  C078  F0D4         	movff	_previousTimeCounter,??_main
  1391  001864  C079  F0D5         	movff	_previousTimeCounter+1,??_main+1
  1392  001868  C07A  F0D6         	movff	_previousTimeCounter+2,??_main+2
  1393  00186C  C07B  F0D7         	movff	_previousTimeCounter+3,??_main+3
  1394  001870  0100               	movlb	0	; () banked
  1395  001872  1FD4               	comf	??_main& (0+255),f,b
  1396  001874  1FD5               	comf	(??_main+1)& (0+255),f,b
  1397  001876  1FD6               	comf	(??_main+2)& (0+255),f,b
  1398  001878  1FD7               	comf	(??_main+3)& (0+255),f,b
  1399  00187A  2BD4               	incf	??_main& (0+255),f,b
  1400  00187C  0E00               	movlw	0
  1401  00187E  23D5               	addwfc	(??_main+1)& (0+255),f,b
  1402  001880  23D6               	addwfc	(??_main+2)& (0+255),f,b
  1403  001882  23D7               	addwfc	(??_main+3)& (0+255),f,b
  1404  001884  0100               	movlb	0	; () banked
  1405  001886  5188               	movf	_timeCounter& (0+255),w,b
  1406  001888  0100               	movlb	0	; () banked
  1407  00188A  25D4               	addwf	??_main& (0+255),w,b
  1408  00188C  0100               	movlb	0	; () banked
  1409  00188E  6FD8               	movwf	(??_main+4)& (0+255),b
  1410  001890  0100               	movlb	0	; () banked
  1411  001892  5189               	movf	(_timeCounter+1)& (0+255),w,b
  1412  001894  0100               	movlb	0	; () banked
  1413  001896  21D5               	addwfc	(??_main+1)& (0+255),w,b
  1414  001898  0100               	movlb	0	; () banked
  1415  00189A  6FD9               	movwf	(??_main+5)& (0+255),b
  1416  00189C  0100               	movlb	0	; () banked
  1417  00189E  518A               	movf	(_timeCounter+2)& (0+255),w,b
  1418  0018A0  0100               	movlb	0	; () banked
  1419  0018A2  21D6               	addwfc	(??_main+2)& (0+255),w,b
  1420  0018A4  0100               	movlb	0	; () banked
  1421  0018A6  6FDA               	movwf	(??_main+6)& (0+255),b
  1422  0018A8  0100               	movlb	0	; () banked
  1423  0018AA  518B               	movf	(_timeCounter+3)& (0+255),w,b
  1424  0018AC  0100               	movlb	0	; () banked
  1425  0018AE  21D7               	addwfc	(??_main+3)& (0+255),w,b
  1426  0018B0  0100               	movlb	0	; () banked
  1427  0018B2  6FDB               	movwf	(??_main+7)& (0+255),b
  1428  0018B4  0100               	movlb	0	; () banked
  1429  0018B6  51DB               	movf	(??_main+7)& (0+255),w,b
  1430  0018B8  0100               	movlb	0	; () banked
  1431  0018BA  11DA               	iorwf	(??_main+6)& (0+255),w,b
  1432  0018BC  E108               	bnz	u7070
  1433  0018BE  0EF5               	movlw	245
  1434  0018C0  0100               	movlb	0	; () banked
  1435  0018C2  5DD8               	subwf	(??_main+4)& (0+255),w,b
  1436  0018C4  0E01               	movlw	1
  1437  0018C6  0100               	movlb	0	; () banked
  1438  0018C8  59D9               	subwfb	(??_main+5)& (0+255),w,b
  1439  0018CA  A0D8               	btfss	status,0,c
  1440  0018CC  D036               	goto	l5464
  1441  0018CE                     u7070:
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;motore.c: 235: if (request_sent == 0) {
  1445  0018CE  BE3A               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c
  1446  0018D0  D018               	goto	l5450
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;motore.c: 236: CANsendMessage(0b00000000000000000000000000010, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1450  0018D2  0E02               	movlw	2
  1451  0018D4  0100               	movlb	0	; () banked
  1452  0018D6  6FBA               	movwf	CANsendMessage@identifier& (0+255),b
  1453  0018D8  0E00               	movlw	0
  1454  0018DA  6FBB               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1455  0018DC  0E00               	movlw	0
  1456  0018DE  6FBC               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1457  0018E0  0E00               	movlw	0
  1458  0018E2  6FBD               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1459  0018E4  0EA2               	movlw	low _data_array
  1460  0018E6  0100               	movlb	0	; () banked
  1461  0018E8  6FBE               	movwf	CANsendMessage@data& (0+255),b
  1462  0018EA  0E00               	movlw	high _data_array
  1463  0018EC  0100               	movlb	0	; () banked
  1464  0018EE  6FBF               	movwf	(CANsendMessage@data+1)& (0+255),b
  1465  0018F0  0E08               	movlw	8
  1466  0018F2  0100               	movlb	0	; () banked
  1467  0018F4  6FC0               	movwf	CANsendMessage@dataLength& (0+255),b
  1468  0018F6  0EFC               	movlw	252
  1469  0018F8  0100               	movlb	0	; () banked
  1470  0018FA  6FC1               	movwf	CANsendMessage@flags& (0+255),b
  1471  0018FC  EC8F  F006         	call	_CANsendMessage	;wreg free
  1472                           
  1473                           ;motore.c: 237: request_sent = 1;
  1474  001900  8E3A               	bsf	_request_sent/(0+8),_request_sent& (0+7),c
  1475  001902                     l5450:
  1476                           
  1477                           ;motore.c: 238: }
  1478                           ;motore.c: 239: if (request_sent == 1) {
  1479  001902  AE3A               	btfss	_request_sent/(0+8),_request_sent& (0+7),c
  1480  001904  D012               	goto	l5462
  1481                           
  1482                           ;motore.c: 241: if ((centralina_abs == 1)&&(centralina_sterzo == 1)&&(centralina_comando
      +                           == 1)) {
  1483  001906  B23A               	btfsc	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1484  001908  A63A               	btfss	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1485  00190A  D007               	goto	l706
  1486  00190C  A43A               	btfss	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1487  00190E  D005               	goto	l706
  1488                           
  1489                           ;motore.c: 242: centralina_abs = 0;
  1490  001910  923A               	bcf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1491                           
  1492                           ;motore.c: 243: centralina_sterzo = 0;
  1493  001912  963A               	bcf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1494                           
  1495                           ;motore.c: 244: centralina_comando = 0;
  1496  001914  943A               	bcf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1497                           
  1498                           ;motore.c: 245: PORTAbits.RA1 = 0;
  1499  001916  9280               	bcf	3968,1,c	;volatile
  1500                           
  1501                           ;motore.c: 246: } else {
  1502  001918  D008               	goto	l5462
  1503  00191A                     l706:
  1504                           
  1505                           ;motore.c: 248: PORTAbits.RA1 = 1;
  1506  00191A  8280               	bsf	3968,1,c	;volatile
  1507                           
  1508                           ;motore.c: 249: delay_ms(200);
  1509  00191C  0E00               	movlw	0
  1510  00191E  0100               	movlb	0	; () banked
  1511  001920  6FC8               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1512  001922  0EC8               	movlw	200
  1513  001924  6FC7               	movwf	delay_ms@value_ms& (0+255),b
  1514  001926  ECDC  F014         	call	_delay_ms	;wreg free
  1515  00192A                     l5462:
  1516                           
  1517                           ;motore.c: 250: }
  1518                           ;motore.c: 251: }
  1519                           ;motore.c: 252: previousTimeCounter = timeCounter;
  1520  00192A  C088  F078         	movff	_timeCounter,_previousTimeCounter
  1521  00192E  C089  F079         	movff	_timeCounter+1,_previousTimeCounter+1
  1522  001932  C08A  F07A         	movff	_timeCounter+2,_previousTimeCounter+2
  1523  001936  C08B  F07B         	movff	_timeCounter+3,_previousTimeCounter+3
  1524  00193A                     l5464:
  1525                           
  1526                           ;motore.c: 253: }
  1527                           ;motore.c: 254: if ((timeCounter - previousTimeCounter2 > 100)) {
  1528  00193A  C080  F0D4         	movff	_previousTimeCounter2,??_main
  1529  00193E  C081  F0D5         	movff	_previousTimeCounter2+1,??_main+1
  1530  001942  C082  F0D6         	movff	_previousTimeCounter2+2,??_main+2
  1531  001946  C083  F0D7         	movff	_previousTimeCounter2+3,??_main+3
  1532  00194A  0100               	movlb	0	; () banked
  1533  00194C  1FD4               	comf	??_main& (0+255),f,b
  1534  00194E  1FD5               	comf	(??_main+1)& (0+255),f,b
  1535  001950  1FD6               	comf	(??_main+2)& (0+255),f,b
  1536  001952  1FD7               	comf	(??_main+3)& (0+255),f,b
  1537  001954  2BD4               	incf	??_main& (0+255),f,b
  1538  001956  0E00               	movlw	0
  1539  001958  23D5               	addwfc	(??_main+1)& (0+255),f,b
  1540  00195A  23D6               	addwfc	(??_main+2)& (0+255),f,b
  1541  00195C  23D7               	addwfc	(??_main+3)& (0+255),f,b
  1542  00195E  0100               	movlb	0	; () banked
  1543  001960  5188               	movf	_timeCounter& (0+255),w,b
  1544  001962  0100               	movlb	0	; () banked
  1545  001964  25D4               	addwf	??_main& (0+255),w,b
  1546  001966  0100               	movlb	0	; () banked
  1547  001968  6FD8               	movwf	(??_main+4)& (0+255),b
  1548  00196A  0100               	movlb	0	; () banked
  1549  00196C  5189               	movf	(_timeCounter+1)& (0+255),w,b
  1550  00196E  0100               	movlb	0	; () banked
  1551  001970  21D5               	addwfc	(??_main+1)& (0+255),w,b
  1552  001972  0100               	movlb	0	; () banked
  1553  001974  6FD9               	movwf	(??_main+5)& (0+255),b
  1554  001976  0100               	movlb	0	; () banked
  1555  001978  518A               	movf	(_timeCounter+2)& (0+255),w,b
  1556  00197A  0100               	movlb	0	; () banked
  1557  00197C  21D6               	addwfc	(??_main+2)& (0+255),w,b
  1558  00197E  0100               	movlb	0	; () banked
  1559  001980  6FDA               	movwf	(??_main+6)& (0+255),b
  1560  001982  0100               	movlb	0	; () banked
  1561  001984  518B               	movf	(_timeCounter+3)& (0+255),w,b
  1562  001986  0100               	movlb	0	; () banked
  1563  001988  21D7               	addwfc	(??_main+3)& (0+255),w,b
  1564  00198A  0100               	movlb	0	; () banked
  1565  00198C  6FDB               	movwf	(??_main+7)& (0+255),b
  1566  00198E  0100               	movlb	0	; () banked
  1567  001990  51DB               	movf	(??_main+7)& (0+255),w,b
  1568  001992  0100               	movlb	0	; () banked
  1569  001994  11DA               	iorwf	(??_main+6)& (0+255),w,b
  1570  001996  0100               	movlb	0	; () banked
  1571  001998  11D9               	iorwf	(??_main+5)& (0+255),w,b
  1572  00199A  E105               	bnz	u7130
  1573  00199C  0E65               	movlw	101
  1574  00199E  0100               	movlb	0	; () banked
  1575  0019A0  5DD8               	subwf	(??_main+4)& (0+255),w,b
  1576  0019A2  A0D8               	btfss	status,0,c
  1577  0019A4  D5B3               	goto	l5372
  1578  0019A6                     u7130:
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;motore.c: 255: PORTCbits.RC1 = ~PORTCbits.RC1;
  1582  0019A6  A282               	btfss	3970,1,c	;volatile
  1583  0019A8  D002               	goto	u7140
  1584  0019AA  0E01               	movlw	1
  1585  0019AC  D001               	goto	u7146
  1586  0019AE                     u7140:
  1587  0019AE  0E00               	movlw	0
  1588  0019B0                     u7146:
  1589  0019B0  0AFF               	xorlw	255
  1590  0019B2  0100               	movlb	0	; () banked
  1591  0019B4  6FD4               	movwf	??_main& (0+255),b
  1592  0019B6  0100               	movlb	0	; () banked
  1593  0019B8  47D4               	rlncf	??_main& (0+255),f,b
  1594  0019BA  5082               	movf	3970,w,c	;volatile
  1595  0019BC  0100               	movlb	0	; () banked
  1596  0019BE  19D4               	xorwf	??_main& (0+255),w,b
  1597  0019C0  0BFD               	andlw	-3
  1598  0019C2  19D4               	xorwf	??_main& (0+255),w,b
  1599  0019C4  6E82               	movwf	3970,c	;volatile
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;motore.c: 257: battery_measure();
  1603  0019C6  EC60  F013         	call	_battery_measure	;wreg free
  1604                           
  1605                           ;motore.c: 258: previousTimeCounter2 = timeCounter;
  1606  0019CA  C088  F080         	movff	_timeCounter,_previousTimeCounter2
  1607  0019CE  C089  F081         	movff	_timeCounter+1,_previousTimeCounter2+1
  1608  0019D2  C08A  F082         	movff	_timeCounter+2,_previousTimeCounter2+2
  1609  0019D6  C08B  F083         	movff	_timeCounter+3,_previousTimeCounter2+3
  1610  0019DA  D598               	goto	l5372
  1611  0019DC                     __end_of_main:
  1612                           	opt stack 0
  1613                           tblptru	equ	0xFF8
  1614                           tblptrh	equ	0xFF7
  1615                           tblptrl	equ	0xFF6
  1616                           tablat	equ	0xFF5
  1617                           postinc0	equ	0xFEE
  1618                           wreg	equ	0xFE8
  1619                           postdec1	equ	0xFE5
  1620                           fsr1l	equ	0xFE1
  1621                           indf2	equ	0xFDF
  1622                           fsr2h	equ	0xFDA
  1623                           fsr2l	equ	0xFD9
  1624                           status	equ	0xFD8
  1625                           
  1626 ;; *************** function _send_data *****************
  1627 ;; Defined at:
  1628 ;;		line 263 in file "motore.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;		None
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  i               1   16[BANK0 ] unsigned char 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;		None               void
  1635 ;; Registers used:
  1636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1642 ;;      Params:         0       0       0       0
  1643 ;;      Locals:         0       1       0       0
  1644 ;;      Temps:          0       0       0       0
  1645 ;;      Totals:         0       1       0       0
  1646 ;;Total ram usage:        1 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    3
  1649 ;; This function calls:
  1650 ;;		_CANisTxReady
  1651 ;;		_CANsendMessage
  1652 ;; This function is called by:
  1653 ;;		_main
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text1
  1658  00244C                     __ptext1:
  1659                           	opt stack 0
  1660  00244C                     _send_data:
  1661                           	opt stack 27
  1662                           
  1663                           ;motore.c: 264: if (CANisTxReady()) {
  1664                           
  1665                           ;incstack = 0
  1666  00244C  EC0C  F015         	call	_CANisTxReady	;wreg free
  1667  002450  0900               	iorlw	0
  1668  002452  B4D8               	btfsc	status,2,c
  1669  002454  D031               	goto	l5272
  1670                           
  1671                           ;motore.c: 265: if (remote_frame == 1) {
  1672  002456  AA3A               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1673  002458  D017               	goto	l5268
  1674                           
  1675                           ;motore.c: 266: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1676  00245A  C026  F0BA         	movff	_id,CANsendMessage@identifier
  1677  00245E  C027  F0BB         	movff	_id+1,CANsendMessage@identifier+1
  1678  002462  C028  F0BC         	movff	_id+2,CANsendMessage@identifier+2
  1679  002466  C029  F0BD         	movff	_id+3,CANsendMessage@identifier+3
  1680  00246A  0EA2               	movlw	low _data_array
  1681  00246C  0100               	movlb	0	; () banked
  1682  00246E  6FBE               	movwf	CANsendMessage@data& (0+255),b
  1683  002470  0E00               	movlw	high _data_array
  1684  002472  0100               	movlb	0	; () banked
  1685  002474  6FBF               	movwf	(CANsendMessage@data+1)& (0+255),b
  1686  002476  0E08               	movlw	8
  1687  002478  0100               	movlb	0	; () banked
  1688  00247A  6FC0               	movwf	CANsendMessage@dataLength& (0+255),b
  1689  00247C  0EBC               	movlw	188
  1690  00247E  0100               	movlb	0	; () banked
  1691  002480  6FC1               	movwf	CANsendMessage@flags& (0+255),b
  1692  002482  EC8F  F006         	call	_CANsendMessage	;wreg free
  1693                           
  1694                           ;motore.c: 267: remote_frame = 0;
  1695  002486  9A3A               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1696  002488                     l5268:
  1697                           
  1698                           ;motore.c: 268: }
  1699                           ;motore.c: 269: if (can_retry == 1) {
  1700  002488  A03A               	btfss	_can_retry/(0+8),_can_retry& (0+7),c
  1701  00248A  D016               	goto	l5272
  1702                           
  1703                           ;motore.c: 270: CANsendMessage(id1, data_array1, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_F
      +                          RAME & CAN_TX_PRIORITY_0);
  1704  00248C  C02A  F0BA         	movff	_id1,CANsendMessage@identifier
  1705  002490  C02B  F0BB         	movff	_id1+1,CANsendMessage@identifier+1
  1706  002494  C02C  F0BC         	movff	_id1+2,CANsendMessage@identifier+2
  1707  002498  C02D  F0BD         	movff	_id1+3,CANsendMessage@identifier+3
  1708  00249C  0EAA               	movlw	low _data_array1
  1709  00249E  0100               	movlb	0	; () banked
  1710  0024A0  6FBE               	movwf	CANsendMessage@data& (0+255),b
  1711  0024A2  0E00               	movlw	high _data_array1
  1712  0024A4  0100               	movlb	0	; () banked
  1713  0024A6  6FBF               	movwf	(CANsendMessage@data+1)& (0+255),b
  1714  0024A8  0E08               	movlw	8
  1715  0024AA  0100               	movlb	0	; () banked
  1716  0024AC  6FC0               	movwf	CANsendMessage@dataLength& (0+255),b
  1717  0024AE  0EBC               	movlw	188
  1718  0024B0  0100               	movlb	0	; () banked
  1719  0024B2  6FC1               	movwf	CANsendMessage@flags& (0+255),b
  1720  0024B4  EC8F  F006         	call	_CANsendMessage	;wreg free
  1721  0024B8                     l5272:
  1722                           
  1723                           ;motore.c: 271: }
  1724                           ;motore.c: 272: }
  1725                           ;motore.c: 273: if ((TXB0CONbits.TXABT) || (TXB1CONbits.TXABT)) {
  1726  0024B8  010F               	movlb	15	; () banked
  1727  0024BA  BD40               	btfsc	64,6,b	;volatile
  1728  0024BC  D003               	goto	l719
  1729                           
  1730                           ; BSR set to: 15
  1731  0024BE  010F               	movlb	15	; () banked
  1732  0024C0  AD30               	btfss	48,6,b	;volatile
  1733  0024C2  D031               	goto	l717
  1734  0024C4                     l719:
  1735                           
  1736                           ; BSR set to: 15
  1737                           ;motore.c: 274: can_retry = 1;
  1738  0024C4  803A               	bsf	_can_retry/(0+8),_can_retry& (0+7),c
  1739                           
  1740                           ;motore.c: 275: id1 = id;
  1741  0024C6  C026  F02A         	movff	_id,_id1
  1742  0024CA  C027  F02B         	movff	_id+1,_id1+1
  1743  0024CE  C028  F02C         	movff	_id+2,_id1+2
  1744  0024D2  C029  F02D         	movff	_id+3,_id1+3
  1745                           
  1746                           ;motore.c: 276: remote_frame1 = remote_frame;
  1747  0024D6  AA3A               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1748  0024D8  D002               	goto	u6810
  1749  0024DA  8C3A               	bsf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1750  0024DC  D001               	goto	l5276
  1751  0024DE                     u6810:
  1752  0024DE  9C3A               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1753  0024E0                     l5276:
  1754                           
  1755                           ;motore.c: 277: for (char i = 0; i < 8; i++) {
  1756  0024E0  0E00               	movlw	0
  1757  0024E2  0100               	movlb	0	; () banked
  1758  0024E4  6FCA               	movwf	send_data@i& (0+255),b
  1759  0024E6                     l5278:
  1760                           
  1761                           ; BSR set to: 0
  1762  0024E6  0E07               	movlw	7
  1763  0024E8  0100               	movlb	0	; () banked
  1764  0024EA  65CA               	cpfsgt	send_data@i& (0+255),b
  1765  0024EC  D001               	goto	l5282
  1766  0024EE  D02F               	goto	l722
  1767  0024F0                     l5282:
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;motore.c: 278: data_array1[i] = data_array[i];
  1771  0024F0  0100               	movlb	0	; () banked
  1772  0024F2  51CA               	movf	send_data@i& (0+255),w,b
  1773  0024F4  0D01               	mullw	1
  1774  0024F6  0EA2               	movlw	low _data_array
  1775  0024F8  24F3               	addwf	prodl,w,c
  1776  0024FA  6ED9               	movwf	fsr2l,c
  1777  0024FC  0E00               	movlw	high _data_array
  1778  0024FE  20F4               	addwfc	prodh,w,c
  1779  002500  6EDA               	movwf	fsr2h,c
  1780  002502  0100               	movlb	0	; () banked
  1781  002504  51CA               	movf	send_data@i& (0+255),w,b
  1782  002506  0D01               	mullw	1
  1783  002508  0EAA               	movlw	low _data_array1
  1784  00250A  24F3               	addwf	prodl,w,c
  1785  00250C  6EE1               	movwf	fsr1l,c
  1786  00250E  0E00               	movlw	high _data_array1
  1787  002510  20F4               	addwfc	prodh,w,c
  1788  002512  6EE2               	movwf	fsr1h,c
  1789  002514  CFDF FFE7          	movff	indf2,indf1
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;motore.c: 279: TXB0CONbits.TXABT = 0;
  1793  002518  010F               	movlb	15	; () banked
  1794  00251A  9D40               	bcf	64,6,b	;volatile
  1795                           
  1796                           ; BSR set to: 15
  1797                           ;motore.c: 280: TXB1CONbits.TXABT = 0;
  1798  00251C  010F               	movlb	15	; () banked
  1799  00251E  9D30               	bcf	48,6,b	;volatile
  1800                           
  1801                           ; BSR set to: 15
  1802  002520  0100               	movlb	0	; () banked
  1803  002522  2BCA               	incf	send_data@i& (0+255),f,b
  1804  002524  D7E0               	goto	l5278
  1805  002526                     l717:
  1806                           
  1807                           ; BSR set to: 15
  1808                           ;motore.c: 283: can_retry = 0;
  1809  002526  903A               	bcf	_can_retry/(0+8),_can_retry& (0+7),c
  1810                           
  1811                           ;motore.c: 284: if (remote_frame1 != 0) {
  1812  002528  AC3A               	btfss	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1813  00252A  D010               	goto	l723
  1814                           
  1815                           ; BSR set to: 15
  1816                           ;motore.c: 285: remote_frame = remote_frame1;
  1817  00252C  AC3A               	btfss	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1818  00252E  D002               	goto	u6860
  1819  002530  8A3A               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1820  002532  D001               	goto	u6875
  1821  002534                     u6860:
  1822  002534  9A3A               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1823  002536                     u6875:
  1824                           
  1825                           ;motore.c: 286: id = id1;
  1826  002536  C02A  F026         	movff	_id1,_id
  1827  00253A  C02B  F027         	movff	_id1+1,_id+1
  1828  00253E  C02C  F028         	movff	_id1+2,_id+2
  1829  002542  C02D  F029         	movff	_id1+3,_id+3
  1830                           
  1831                           ;motore.c: 287: message_sent = 1;
  1832  002546  883A               	bsf	_message_sent/(0+8),_message_sent& (0+7),c
  1833                           
  1834                           ;motore.c: 288: remote_frame1 = 0;
  1835  002548  9C3A               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1836                           
  1837                           ;motore.c: 289: } else {
  1838  00254A  D001               	goto	l722
  1839  00254C                     l723:
  1840                           
  1841                           ; BSR set to: 15
  1842                           ;motore.c: 291: message_sent = 0;
  1843  00254C  983A               	bcf	_message_sent/(0+8),_message_sent& (0+7),c
  1844  00254E                     l722:
  1845                           
  1846                           ;motore.c: 292: }
  1847                           ;motore.c: 293: }
  1848                           ;motore.c: 294: remote_frame = 0;
  1849  00254E  9A3A               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1850  002550  0012               	return		;funcret
  1851  002552                     __end_of_send_data:
  1852                           	opt stack 0
  1853                           tblptru	equ	0xFF8
  1854                           tblptrh	equ	0xFF7
  1855                           tblptrl	equ	0xFF6
  1856                           tablat	equ	0xFF5
  1857                           prodh	equ	0xFF4
  1858                           prodl	equ	0xFF3
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           indf1	equ	0xFE7
  1862                           postdec1	equ	0xFE5
  1863                           fsr1h	equ	0xFE2
  1864                           fsr1l	equ	0xFE1
  1865                           indf2	equ	0xFDF
  1866                           fsr2h	equ	0xFDA
  1867                           fsr2l	equ	0xFD9
  1868                           status	equ	0xFD8
  1869                           
  1870 ;; *************** function _configurazione_iniziale *****************
  1871 ;; Defined at:
  1872 ;;		line 313 in file "motore.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;		None               void
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1886 ;;      Params:         0       0       0       0
  1887 ;;      Locals:         0       0       0       0
  1888 ;;      Temps:          0       0       0       0
  1889 ;;      Totals:         0       0       0       0
  1890 ;;Total ram usage:        0 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    4
  1893 ;; This function calls:
  1894 ;;		_CANInitialize
  1895 ;;		_SetOutputEPWM1
  1896 ;;		_delay_ms
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text2
  1903  002610                     __ptext2:
  1904                           	opt stack 0
  1905  002610                     _configurazione_iniziale:
  1906                           	opt stack 26
  1907                           
  1908                           ;motore.c: 316: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1909                           
  1910                           ;incstack = 0
  1911  002610  0E06               	movlw	6
  1912  002612  0100               	movlb	0	; () banked
  1913  002614  6FC8               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1914  002616  0E05               	movlw	5
  1915  002618  0100               	movlb	0	; () banked
  1916  00261A  6FC9               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1917  00261C  0E01               	movlw	1
  1918  00261E  0100               	movlb	0	; () banked
  1919  002620  6FCA               	movwf	CANInitialize@SJW& (0+255),b
  1920  002622  0E03               	movlw	3
  1921  002624  0100               	movlb	0	; () banked
  1922  002626  6FCB               	movwf	CANInitialize@BRP& (0+255),b
  1923  002628  0E9D               	movlw	157
  1924  00262A  0100               	movlb	0	; () banked
  1925  00262C  6FCC               	movwf	CANInitialize@flags& (0+255),b
  1926  00262E  0E04               	movlw	4
  1927  002630  EC43  F011         	call	_CANInitialize
  1928                           
  1929                           ;motore.c: 317: RCONbits.IPEN = 1;
  1930  002634  8ED0               	bsf	4048,7,c	;volatile
  1931                           
  1932                           ;motore.c: 318: INTCONbits.INT0IF = 0;
  1933  002636  92F2               	bcf	intcon,1,c	;volatile
  1934                           
  1935                           ;motore.c: 319: PIR3bits.RXB1IF = 0;
  1936  002638  92A4               	bcf	4004,1,c	;volatile
  1937                           
  1938                           ;motore.c: 320: PIR3bits.RXB0IF = 0;
  1939  00263A  90A4               	bcf	4004,0,c	;volatile
  1940                           
  1941                           ;motore.c: 322: IPR3bits.RXB1IP = 0;
  1942  00263C  92A5               	bcf	4005,1,c	;volatile
  1943                           
  1944                           ;motore.c: 323: IPR3bits.RXB0IP = 0;
  1945  00263E  90A5               	bcf	4005,0,c	;volatile
  1946                           
  1947                           ;motore.c: 324: INTCONbits.GIEH = 1;
  1948  002640  8EF2               	bsf	intcon,7,c	;volatile
  1949                           
  1950                           ;motore.c: 325: INTCONbits.GIEL = 1;
  1951  002642  8CF2               	bsf	intcon,6,c	;volatile
  1952                           
  1953                           ;motore.c: 328: T3CON = 0x01;
  1954  002644  0E01               	movlw	1
  1955  002646  6EB1               	movwf	4017,c	;volatile
  1956                           
  1957                           ;motore.c: 329: PIR2bits.TMR3IF = 0;
  1958  002648  92A1               	bcf	4001,1,c	;volatile
  1959                           
  1960                           ;motore.c: 330: IPR2bits.TMR3IP = 0;
  1961  00264A  92A2               	bcf	4002,1,c	;volatile
  1962                           
  1963                           ;motore.c: 331: TMR3H = 0x63;
  1964  00264C  0E63               	movlw	99
  1965  00264E  6EB3               	movwf	4019,c	;volatile
  1966                           
  1967                           ;motore.c: 332: TMR3L = 0xC0;
  1968  002650  0EC0               	movlw	192
  1969  002652  6EB2               	movwf	4018,c	;volatile
  1970                           
  1971                           ;motore.c: 337: ADCON0bits.ADON = 1;
  1972  002654  80C2               	bsf	4034,0,c	;volatile
  1973                           
  1974                           ;motore.c: 338: ADCON0bits.CHS0 = 0;
  1975  002656  94C2               	bcf	4034,2,c	;volatile
  1976                           
  1977                           ;motore.c: 339: ADCON0bits.CHS1 = 0;
  1978  002658  96C2               	bcf	4034,3,c	;volatile
  1979                           
  1980                           ;motore.c: 340: ADCON0bits.CHS2 = 0;
  1981  00265A  98C2               	bcf	4034,4,c	;volatile
  1982                           
  1983                           ;motore.c: 341: ADCON0bits.CHS3 = 0;
  1984  00265C  9AC2               	bcf	4034,5,c	;volatile
  1985                           
  1986                           ;motore.c: 342: ADCON1bits.PCFG0 = 0;
  1987  00265E  90C1               	bcf	4033,0,c	;volatile
  1988                           
  1989                           ;motore.c: 343: ADCON1bits.PCFG1 = 1;
  1990  002660  82C1               	bsf	4033,1,c	;volatile
  1991                           
  1992                           ;motore.c: 344: ADCON1bits.PCFG2 = 1;
  1993  002662  84C1               	bsf	4033,2,c	;volatile
  1994                           
  1995                           ;motore.c: 345: ADCON1bits.PCFG3 = 1;
  1996  002664  86C1               	bsf	4033,3,c	;volatile
  1997                           
  1998                           ;motore.c: 346: ADCON1bits.VCFG0 = 0;
  1999  002666  98C1               	bcf	4033,4,c	;volatile
  2000                           
  2001                           ;motore.c: 347: ADCON1bits.VCFG1 = 0;
  2002  002668  9AC1               	bcf	4033,5,c	;volatile
  2003                           
  2004                           ;motore.c: 348: ADCON2bits.ADCS0 = 1;
  2005  00266A  80C0               	bsf	4032,0,c	;volatile
  2006                           
  2007                           ;motore.c: 349: ADCON2bits.ADCS1 = 0;
  2008  00266C  92C0               	bcf	4032,1,c	;volatile
  2009                           
  2010                           ;motore.c: 350: ADCON2bits.ADCS2 = 1;
  2011  00266E  84C0               	bsf	4032,2,c	;volatile
  2012                           
  2013                           ;motore.c: 351: ADCON2bits.ACQT0 = 0;
  2014  002670  96C0               	bcf	4032,3,c	;volatile
  2015                           
  2016                           ;motore.c: 352: ADCON2bits.ACQT1 = 1;
  2017  002672  88C0               	bsf	4032,4,c	;volatile
  2018                           
  2019                           ;motore.c: 353: ADCON2bits.ACQT2 = 1;
  2020  002674  8AC0               	bsf	4032,5,c	;volatile
  2021                           
  2022                           ;motore.c: 354: ADCON2bits.ADFM = 0;
  2023  002676  9EC0               	bcf	4032,7,c	;volatile
  2024                           
  2025                           ;motore.c: 357: PIE3bits.RXB1IE = 1;
  2026  002678  82A3               	bsf	4003,1,c	;volatile
  2027                           
  2028                           ;motore.c: 358: PIE3bits.RXB0IE = 1;
  2029  00267A  80A3               	bsf	4003,0,c	;volatile
  2030                           
  2031                           ;motore.c: 359: PIE2bits.TMR3IE = 1;
  2032  00267C  82A0               	bsf	4000,1,c	;volatile
  2033                           
  2034                           ;motore.c: 361: LATA = 0x00;
  2035  00267E  0E00               	movlw	0
  2036  002680  6E89               	movwf	3977,c	;volatile
  2037                           
  2038                           ;motore.c: 362: TRISA = 0b01111101;
  2039  002682  0E7D               	movlw	125
  2040  002684  6E92               	movwf	3986,c	;volatile
  2041                           
  2042                           ;motore.c: 364: LATB = 0x00;
  2043  002686  0E00               	movlw	0
  2044  002688  6E8A               	movwf	3978,c	;volatile
  2045                           
  2046                           ;motore.c: 365: TRISB = 0b11111011;
  2047  00268A  0EFB               	movlw	251
  2048  00268C  6E93               	movwf	3987,c	;volatile
  2049                           
  2050                           ;motore.c: 367: LATC = 0x00;
  2051  00268E  0E00               	movlw	0
  2052  002690  6E8B               	movwf	3979,c	;volatile
  2053                           
  2054                           ;motore.c: 368: TRISC = 0x00;
  2055  002692  0E00               	movlw	0
  2056  002694  6E94               	movwf	3988,c	;volatile
  2057                           
  2058                           ;motore.c: 370: LATD = 0x00;
  2059  002696  0E00               	movlw	0
  2060  002698  6E8C               	movwf	3980,c	;volatile
  2061                           
  2062                           ;motore.c: 371: TRISD = 0x00;
  2063  00269A  0E00               	movlw	0
  2064  00269C  6E95               	movwf	3989,c	;volatile
  2065                           
  2066                           ;motore.c: 373: LATE = 0x00;
  2067  00269E  0E00               	movlw	0
  2068  0026A0  6E8D               	movwf	3981,c	;volatile
  2069                           
  2070                           ;motore.c: 374: TRISE = 0xFF;
  2071  0026A2  6896               	setf	3990,c	;volatile
  2072                           
  2073                           ;motore.c: 375: delay_ms(2);
  2074  0026A4  0E00               	movlw	0
  2075  0026A6  0100               	movlb	0	; () banked
  2076  0026A8  6FC8               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2077  0026AA  0E02               	movlw	2
  2078  0026AC  6FC7               	movwf	delay_ms@value_ms& (0+255),b
  2079  0026AE  ECDC  F014         	call	_delay_ms	;wreg free
  2080                           
  2081                           ;motore.c: 376: SetOutputEPWM1(0b01111111, 0b11111100);
  2082  0026B2  0EFC               	movlw	252
  2083  0026B4  0100               	movlb	0	; () banked
  2084  0026B6  6FBA               	movwf	SetOutputEPWM1@outputmode& (0+255),b
  2085  0026B8  0E7F               	movlw	127
  2086  0026BA  EC54  F014         	call	_SetOutputEPWM1
  2087  0026BE  0012               	return		;funcret
  2088  0026C0                     __end_of_configurazione_iniziale:
  2089                           	opt stack 0
  2090                           tblptru	equ	0xFF8
  2091                           tblptrh	equ	0xFF7
  2092                           tblptrl	equ	0xFF6
  2093                           tablat	equ	0xFF5
  2094                           prodh	equ	0xFF4
  2095                           prodl	equ	0xFF3
  2096                           intcon	equ	0xFF2
  2097                           postinc0	equ	0xFEE
  2098                           wreg	equ	0xFE8
  2099                           indf1	equ	0xFE7
  2100                           postdec1	equ	0xFE5
  2101                           fsr1h	equ	0xFE2
  2102                           fsr1l	equ	0xFE1
  2103                           indf2	equ	0xFDF
  2104                           fsr2h	equ	0xFDA
  2105                           fsr2l	equ	0xFD9
  2106                           status	equ	0xFD8
  2107                           
  2108 ;; *************** function _delay_ms *****************
  2109 ;; Defined at:
  2110 ;;		line 61 in file "delay.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;  value_ms        2   13[BANK0 ] unsigned int 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;		None               void
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2124 ;;      Params:         0       2       0       0
  2125 ;;      Locals:         0       0       0       0
  2126 ;;      Temps:          0       0       0       0
  2127 ;;      Totals:         0       2       0       0
  2128 ;;Total ram usage:        2 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    3
  2131 ;; This function calls:
  2132 ;;		___wmul
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;;		_configurazione_iniziale
  2136 ;;		_delay_s
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text3
  2141  0029B8                     __ptext3:
  2142                           	opt stack 0
  2143  0029B8                     _delay_ms:
  2144                           	opt stack 27
  2145                           
  2146                           ;delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  2147                           
  2148                           ;incstack = 0
  2149  0029B8  C03E  F0C1         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  2150  0029BC  0100               	movlb	0	; () banked
  2151  0029BE  6BC2               	clrf	(___wmul@multiplier+1)& (0+255),b
  2152  0029C0  C0C7  F0C3         	movff	delay_ms@value_ms,___wmul@multiplicand
  2153  0029C4  C0C8  F0C4         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  2154  0029C8  ECC1  F014         	call	___wmul	;wreg free
  2155  0029CC  C0C1  F02E         	movff	?___wmul,_clock_counter_reference	;volatile
  2156  0029D0  C0C2  F02F         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  2157                           
  2158                           ;delay.c: 75: while (clock_counter_reference) {
  2159  0029D4  D006               	goto	l575
  2160  0029D6                     l5014:
  2161                           
  2162                           ;delay.c: 85: _delay(240);
  2163  0029D6  0E50               	movlw	80
  2164  0029D8                     u7157:
  2165  0029D8  2EE8               	decfsz	wreg,f,c
  2166  0029DA  D7FE               	goto	u7157
  2167                           
  2168                           ;delay.c: 88: clock_counter_reference--;
  2169  0029DC  062E               	decf	_clock_counter_reference,f,c	;volatile
  2170  0029DE  A0D8               	btfss	status,0,c
  2171  0029E0  062F               	decf	_clock_counter_reference+1,f,c	;volatile
  2172  0029E2                     l575:
  2173  0029E2  502E               	movf	_clock_counter_reference,w,c	;volatile
  2174  0029E4  102F               	iorwf	_clock_counter_reference+1,w,c	;volatile
  2175  0029E6  B4D8               	btfsc	status,2,c
  2176  0029E8  0012               	return	
  2177  0029EA  D7F5               	goto	l5014
  2178  0029EC                     __end_of_delay_ms:
  2179                           	opt stack 0
  2180                           tblptru	equ	0xFF8
  2181                           tblptrh	equ	0xFF7
  2182                           tblptrl	equ	0xFF6
  2183                           tablat	equ	0xFF5
  2184                           prodh	equ	0xFF4
  2185                           prodl	equ	0xFF3
  2186                           intcon	equ	0xFF2
  2187                           postinc0	equ	0xFEE
  2188                           wreg	equ	0xFE8
  2189                           indf1	equ	0xFE7
  2190                           postdec1	equ	0xFE5
  2191                           fsr1h	equ	0xFE2
  2192                           fsr1l	equ	0xFE1
  2193                           indf2	equ	0xFDF
  2194                           fsr2h	equ	0xFDA
  2195                           fsr2l	equ	0xFD9
  2196                           status	equ	0xFD8
  2197                           
  2198 ;; *************** function _SetOutputEPWM1 *****************
  2199 ;; Defined at:
  2200 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  outputconfig    1    wreg     unsigned char 
  2203 ;;  outputmode      1    0[BANK0 ] unsigned char 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  outputconfig    1    1[BANK0 ] unsigned char 
  2206 ;; Return value:  Size  Location     Type
  2207 ;;		None               void
  2208 ;; Registers used:
  2209 ;;		wreg, status,2, status,0
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2215 ;;      Params:         0       1       0       0
  2216 ;;      Locals:         0       1       0       0
  2217 ;;      Temps:          0       0       0       0
  2218 ;;      Totals:         0       2       0       0
  2219 ;;Total ram usage:        2 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:    2
  2222 ;; This function calls:
  2223 ;;		Nothing
  2224 ;; This function is called by:
  2225 ;;		_main
  2226 ;;		_configurazione_iniziale
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text4
  2231  0028A8                     __ptext4:
  2232                           	opt stack 0
  2233  0028A8                     _SetOutputEPWM1:
  2234                           	opt stack 27
  2235                           
  2236                           ;incstack = 0
  2237                           ;SetOutputEPWM1@outputconfig stored from wreg
  2238  0028A8  0100               	movlb	0	; () banked
  2239  0028AA  6FBB               	movwf	SetOutputEPWM1@outputconfig& (0+255),b
  2240  0028AC  50BA               	movf	4026,w,c	;volatile
  2241  0028AE  09C0               	iorlw	192
  2242  0028B0  0100               	movlb	0	; () banked
  2243  0028B2  15BB               	andwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  2244  0028B4  6EBA               	movwf	4026,c	;volatile
  2245  0028B6  50BA               	movf	4026,w,c	;volatile
  2246  0028B8  090F               	iorlw	15
  2247  0028BA  0100               	movlb	0	; () banked
  2248  0028BC  15BA               	andwf	SetOutputEPWM1@outputmode& (0+255),w,b
  2249  0028BE  6EBA               	movwf	4026,c	;volatile
  2250  0028C0  0E3F               	movlw	63
  2251  0028C2  0100               	movlb	0	; () banked
  2252  0028C4  19BB               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  2253  0028C6  A4D8               	btfss	status,2,c
  2254  0028C8  D002               	goto	l5022
  2255                           
  2256                           ; BSR set to: 0
  2257  0028CA  9895               	bcf	3989,4,c	;volatile
  2258  0028CC  0012               	return	
  2259  0028CE                     l5022:
  2260                           
  2261                           ; BSR set to: 0
  2262  0028CE  0EBF               	movlw	191
  2263  0028D0  0100               	movlb	0	; () banked
  2264  0028D2  19BB               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  2265  0028D4  A4D8               	btfss	status,2,c
  2266  0028D6  D003               	goto	l5026
  2267                           
  2268                           ; BSR set to: 0
  2269  0028D8  9895               	bcf	3989,4,c	;volatile
  2270  0028DA  9A95               	bcf	3989,5,c	;volatile
  2271  0028DC  0012               	return	
  2272  0028DE                     l5026:
  2273                           
  2274                           ; BSR set to: 0
  2275  0028DE  0E7F               	movlw	127
  2276  0028E0  0100               	movlb	0	; () banked
  2277  0028E2  19BB               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  2278  0028E4  B4D8               	btfsc	status,2,c
  2279  0028E6  D004               	goto	l768
  2280                           
  2281                           ; BSR set to: 0
  2282  0028E8  0100               	movlb	0	; () banked
  2283  0028EA  29BB               	incf	SetOutputEPWM1@outputconfig& (0+255),w,b
  2284  0028EC  A4D8               	btfss	status,2,c
  2285  0028EE  0012               	return	
  2286  0028F0                     l768:
  2287                           
  2288                           ; BSR set to: 0
  2289  0028F0  9895               	bcf	3989,4,c	;volatile
  2290  0028F2  9A95               	bcf	3989,5,c	;volatile
  2291  0028F4  9C95               	bcf	3989,6,c	;volatile
  2292  0028F6  9E95               	bcf	3989,7,c	;volatile
  2293                           
  2294                           ; BSR set to: 0
  2295                           
  2296                           ; BSR set to: 0
  2297  0028F8  0012               	return	
  2298  0028FA                     __end_of_SetOutputEPWM1:
  2299                           	opt stack 0
  2300                           tblptru	equ	0xFF8
  2301                           tblptrh	equ	0xFF7
  2302                           tblptrl	equ	0xFF6
  2303                           tablat	equ	0xFF5
  2304                           prodh	equ	0xFF4
  2305                           prodl	equ	0xFF3
  2306                           intcon	equ	0xFF2
  2307                           postinc0	equ	0xFEE
  2308                           wreg	equ	0xFE8
  2309                           indf1	equ	0xFE7
  2310                           postdec1	equ	0xFE5
  2311                           fsr1h	equ	0xFE2
  2312                           fsr1l	equ	0xFE1
  2313                           indf2	equ	0xFDF
  2314                           fsr2h	equ	0xFDA
  2315                           fsr2l	equ	0xFD9
  2316                           status	equ	0xFD8
  2317                           
  2318 ;; *************** function _CANInitialize *****************
  2319 ;; Defined at:
  2320 ;;		line 218 in file "CANlib.h"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  propSeg         1    wreg     unsigned char 
  2323 ;;  phaseSeg1       1   14[BANK0 ] unsigned char 
  2324 ;;  phaseSeg2       1   15[BANK0 ] unsigned char 
  2325 ;;  SJW             1   16[BANK0 ] unsigned char 
  2326 ;;  BRP             1   17[BANK0 ] unsigned char 
  2327 ;;  flags           1   18[BANK0 ] enum E16844
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  propSeg         1   23[BANK0 ] unsigned char 
  2330 ;;  FilterConfig    1   25[BANK0 ] unsigned char 
  2331 ;;  FilterConfig    1   24[BANK0 ] unsigned char 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;		None               void
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2341 ;;      Params:         0       5       0       0
  2342 ;;      Locals:         0       3       0       0
  2343 ;;      Temps:          0       4       0       0
  2344 ;;      Totals:         0      12       0       0
  2345 ;;Total ram usage:       12 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:    3
  2348 ;; This function calls:
  2349 ;;		_CANOperationMode
  2350 ;;		_CANSetFilter
  2351 ;;		_CANSetMask
  2352 ;; This function is called by:
  2353 ;;		_configurazione_iniziale
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text5
  2358  002286                     __ptext5:
  2359                           	opt stack 0
  2360  002286                     _CANInitialize:
  2361                           	opt stack 26
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;incstack = 0
  2365                           ;CANInitialize@propSeg stored from wreg
  2366  002286  0100               	movlb	0	; () banked
  2367  002288  6FD1               	movwf	CANInitialize@propSeg& (0+255),b
  2368                           
  2369                           ;CANlib.h: 220: BYTE FilterConfig1;
  2370                           ;CANlib.h: 221: BYTE FilterConfig2;
  2371                           ;CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2372  00228A  0E80               	movlw	128
  2373  00228C  EC2F  F015         	call	_CANOperationMode
  2374                           
  2375                           ;CANlib.h: 225: BRGCON1 = 0x00;
  2376  002290  0E00               	movlw	0
  2377  002292  6E70               	movwf	3952,c	;volatile
  2378                           
  2379                           ;CANlib.h: 226: BRGCON2 = 0x00;
  2380  002294  0E00               	movlw	0
  2381  002296  6E71               	movwf	3953,c	;volatile
  2382                           
  2383                           ;CANlib.h: 227: BRGCON3 = 0x00;
  2384  002298  0E00               	movlw	0
  2385  00229A  6E72               	movwf	3954,c	;volatile
  2386                           
  2387                           ;CANlib.h: 229: SJW= SJW << 6;
  2388  00229C  0100               	movlb	0	; () banked
  2389  00229E  41CA               	rrncf	CANInitialize@SJW& (0+255),w,b
  2390  0022A0  42E8               	rrncf	wreg,f,c
  2391  0022A2  0BC0               	andlw	192
  2392  0022A4  0100               	movlb	0	; () banked
  2393  0022A6  6FCA               	movwf	CANInitialize@SJW& (0+255),b
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;CANlib.h: 230: BRGCON1 |= SJW;
  2397  0022A8  0100               	movlb	0	; () banked
  2398  0022AA  51CA               	movf	CANInitialize@SJW& (0+255),w,b
  2399  0022AC  1270               	iorwf	3952,f,c	;volatile
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;CANlib.h: 231: BRGCON1 |= BRP;
  2403  0022AE  0100               	movlb	0	; () banked
  2404  0022B0  51CB               	movf	CANInitialize@BRP& (0+255),w,b
  2405  0022B2  1270               	iorwf	3952,f,c	;volatile
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;CANlib.h: 233: BRGCON2 |= propSeg;
  2409  0022B4  0100               	movlb	0	; () banked
  2410  0022B6  51D1               	movf	CANInitialize@propSeg& (0+255),w,b
  2411  0022B8  1271               	iorwf	3953,f,c	;volatile
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2415  0022BA  0100               	movlb	0	; () banked
  2416  0022BC  39C8               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2417  0022BE  42E8               	rrncf	wreg,f,c
  2418  0022C0  0BF8               	andlw	248
  2419  0022C2  0100               	movlb	0	; () banked
  2420  0022C4  6FC8               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2424  0022C6  0100               	movlb	0	; () banked
  2425  0022C8  51C8               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2426  0022CA  1271               	iorwf	3953,f,c	;volatile
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2430  0022CC  0100               	movlb	0	; () banked
  2431  0022CE  A5CC               	btfss	CANInitialize@flags& (0+255),2,b
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;CANlib.h: 238: BRGCON2bits.SAM= 1;
  2435  0022D0  8C71               	bsf	3953,6,c	;volatile
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2439  0022D2  0100               	movlb	0	; () banked
  2440  0022D4  B1CC               	btfsc	CANInitialize@flags& (0+255),0,b
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2444  0022D6  8E71               	bsf	3953,7,c	;volatile
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2448                           
  2449                           ; BSR set to: 0
  2450  0022D8  0100               	movlb	0	; () banked
  2451  0022DA  51C9               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2452  0022DC  1272               	iorwf	3954,f,c	;volatile
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2456  0022DE  0100               	movlb	0	; () banked
  2457  0022E0  B3CC               	btfsc	CANInitialize@flags& (0+255),1,b
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2461  0022E2  8C72               	bsf	3954,6,c	;volatile
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2465                           
  2466                           ; BSR set to: 0
  2467  0022E4  0100               	movlb	0	; () banked
  2468  0022E6  51CC               	movf	CANInitialize@flags& (0+255),w,b
  2469  0022E8  0B60               	andlw	96
  2470  0022EA  6E60               	movwf	3936,c	;volatile
  2471                           
  2472                           ;CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON )
  2473  0022EC  0100               	movlb	0	; () banked
  2474  0022EE  51CC               	movf	CANInitialize@flags& (0+255),w,b
  2475  0022F0  0B10               	andlw	16
  2476  0022F2  0AFF               	xorlw	255
  2477  0022F4  B4D8               	btfsc	status,2,c
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2481  0022F6  8460               	bsf	3936,2,c	;volatile
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;CANlib.h: 255: RXB1CON = RXB0CON;
  2485  0022F8  CF60 FF50          	movff	3936,3920	;volatile
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2489  0022FC  0E00               	movlw	0
  2490  0022FE  0100               	movlb	0	; () banked
  2491  002300  6FBA               	movwf	CANSetMask@mask& (0+255),b
  2492  002302  0E00               	movlw	0
  2493  002304  6FBB               	movwf	(CANSetMask@mask+1)& (0+255),b
  2494  002306  0E00               	movlw	0
  2495  002308  6FBC               	movwf	(CANSetMask@mask+2)& (0+255),b
  2496  00230A  0E00               	movlw	0
  2497  00230C  6FBD               	movwf	(CANSetMask@mask+3)& (0+255),b
  2498  00230E  0EF7               	movlw	247
  2499  002310  0100               	movlb	0	; () banked
  2500  002312  6FBE               	movwf	CANSetMask@type& (0+255),b
  2501  002314  0E01               	movlw	1
  2502  002316  EC74  F00F         	call	_CANSetMask
  2503                           
  2504                           ;CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2505  00231A  0E00               	movlw	0
  2506  00231C  0100               	movlb	0	; () banked
  2507  00231E  6FBA               	movwf	CANSetMask@mask& (0+255),b
  2508  002320  0E00               	movlw	0
  2509  002322  6FBB               	movwf	(CANSetMask@mask+1)& (0+255),b
  2510  002324  0E00               	movlw	0
  2511  002326  6FBC               	movwf	(CANSetMask@mask+2)& (0+255),b
  2512  002328  0E00               	movlw	0
  2513  00232A  6FBD               	movwf	(CANSetMask@mask+3)& (0+255),b
  2514  00232C  0EF7               	movlw	247
  2515  00232E  0100               	movlb	0	; () banked
  2516  002330  6FBE               	movwf	CANSetMask@type& (0+255),b
  2517  002332  0E02               	movlw	2
  2518  002334  EC74  F00F         	call	_CANSetMask
  2519                           
  2520                           ;CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2521  002338  D00F               	goto	l4762
  2522  00233A                     l4756:
  2523                           
  2524                           ;CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2525  00233A  0EF7               	movlw	247
  2526  00233C  0100               	movlb	0	; () banked
  2527  00233E  6FD2               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2528  002340  D007               	goto	l4758
  2529  002342                     l364:
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2533  002342  0100               	movlb	0	; () banked
  2534  002344  69D2               	setf	CANInitialize@FilterConfig1& (0+255),b
  2535                           
  2536                           ;CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2537  002346  0100               	movlb	0	; () banked
  2538  002348  69D3               	setf	CANInitialize@FilterConfig2& (0+255),b
  2539                           
  2540                           ;CANlib.h: 273: break;
  2541  00234A  D028               	goto	l4764
  2542  00234C                     l365:
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2546  00234C  0100               	movlb	0	; () banked
  2547  00234E  69D2               	setf	CANInitialize@FilterConfig1& (0+255),b
  2548  002350                     l4758:
  2549                           
  2550                           ; BSR set to: 0
  2551                           ;CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2552  002350  0EF7               	movlw	247
  2553  002352  0100               	movlb	0	; () banked
  2554  002354  6FD3               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;CANlib.h: 278: }
  2558                           
  2559                           ;CANlib.h: 277: break;
  2560  002356  D022               	goto	l4764
  2561  002358                     l4762:
  2562  002358  0E9F               	movlw	159
  2563  00235A  0100               	movlb	0	; () banked
  2564  00235C  6FCD               	movwf	??_CANInitialize& (0+255),b
  2565  00235E  0EFF               	movlw	255
  2566  002360  0100               	movlb	0	; () banked
  2567  002362  6FCE               	movwf	(??_CANInitialize+1)& (0+255),b
  2568  002364  0100               	movlb	0	; () banked
  2569  002366  51CC               	movf	CANInitialize@flags& (0+255),w,b
  2570  002368  0B60               	andlw	96
  2571  00236A  0100               	movlb	0	; () banked
  2572  00236C  6FCF               	movwf	(??_CANInitialize+2)& (0+255),b
  2573  00236E  6BD0               	clrf	(??_CANInitialize+3)& (0+255),b
  2574  002370  0100               	movlb	0	; () banked
  2575  002372  51CD               	movf	??_CANInitialize& (0+255),w,b
  2576  002374  0100               	movlb	0	; () banked
  2577  002376  13CF               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2578  002378  0100               	movlb	0	; () banked
  2579  00237A  51CE               	movf	(??_CANInitialize+1)& (0+255),w,b
  2580  00237C  0100               	movlb	0	; () banked
  2581  00237E  13D0               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2582                           
  2583                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2584                           ; Switch size 1, requested type "space"
  2585                           ; Number of cases is 1, Range of values is 0 to 0
  2586                           ; switch strategies available:
  2587                           ; Name         Instructions Cycles
  2588                           ; simple_byte            4     3 (average)
  2589                           ;	Chosen strategy is simple_byte
  2590  002380  0100               	movlb	0	; () banked
  2591  002382  51D0               	movf	(??_CANInitialize+3)& (0+255),w,b
  2592  002384  0A00               	xorlw	0	; case 0
  2593  002386  A4D8               	btfss	status,2,c
  2594  002388  D7E1               	goto	l365
  2595                           
  2596                           ; BSR set to: 0
  2597                           ; Switch size 1, requested type "space"
  2598                           ; Number of cases is 2, Range of values is 191 to 223
  2599                           ; switch strategies available:
  2600                           ; Name         Instructions Cycles
  2601                           ; simple_byte            7     4 (average)
  2602                           ;	Chosen strategy is simple_byte
  2603  00238A  0100               	movlb	0	; () banked
  2604  00238C  51CF               	movf	(??_CANInitialize+2)& (0+255),w,b
  2605  00238E  0ABF               	xorlw	191	; case 191
  2606  002390  B4D8               	btfsc	status,2,c
  2607  002392  D7D7               	goto	l364
  2608  002394  0A60               	xorlw	96	; case 223
  2609  002396  B4D8               	btfsc	status,2,c
  2610  002398  D7D0               	goto	l4756
  2611  00239A  D7D8               	goto	l365
  2612  00239C                     l4764:
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2616  00239C  0E00               	movlw	0
  2617  00239E  0100               	movlb	0	; () banked
  2618  0023A0  6FBA               	movwf	CANSetFilter@filter& (0+255),b
  2619  0023A2  0E00               	movlw	0
  2620  0023A4  6FBB               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2621  0023A6  0E00               	movlw	0
  2622  0023A8  6FBC               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2623  0023AA  0E00               	movlw	0
  2624  0023AC  6FBD               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2625  0023AE  C0D2  F0BE         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2626  0023B2  0E00               	movlw	0
  2627  0023B4  EC0C  F001         	call	_CANSetFilter
  2628                           
  2629                           ;CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2630  0023B8  0E00               	movlw	0
  2631  0023BA  0100               	movlb	0	; () banked
  2632  0023BC  6FBA               	movwf	CANSetFilter@filter& (0+255),b
  2633  0023BE  0E00               	movlw	0
  2634  0023C0  6FBB               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2635  0023C2  0E00               	movlw	0
  2636  0023C4  6FBC               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2637  0023C6  0E00               	movlw	0
  2638  0023C8  6FBD               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2639  0023CA  C0D2  F0BE         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2640  0023CE  0E01               	movlw	1
  2641  0023D0  EC0C  F001         	call	_CANSetFilter
  2642                           
  2643                           ;CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2644  0023D4  0E00               	movlw	0
  2645  0023D6  0100               	movlb	0	; () banked
  2646  0023D8  6FBA               	movwf	CANSetFilter@filter& (0+255),b
  2647  0023DA  0E00               	movlw	0
  2648  0023DC  6FBB               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2649  0023DE  0E00               	movlw	0
  2650  0023E0  6FBC               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2651  0023E2  0E00               	movlw	0
  2652  0023E4  6FBD               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2653  0023E6  C0D3  F0BE         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2654  0023EA  0E02               	movlw	2
  2655  0023EC  EC0C  F001         	call	_CANSetFilter
  2656                           
  2657                           ;CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2658  0023F0  0E00               	movlw	0
  2659  0023F2  0100               	movlb	0	; () banked
  2660  0023F4  6FBA               	movwf	CANSetFilter@filter& (0+255),b
  2661  0023F6  0E00               	movlw	0
  2662  0023F8  6FBB               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2663  0023FA  0E00               	movlw	0
  2664  0023FC  6FBC               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2665  0023FE  0E00               	movlw	0
  2666  002400  6FBD               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2667  002402  C0D3  F0BE         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2668  002406  0E03               	movlw	3
  2669  002408  EC0C  F001         	call	_CANSetFilter
  2670                           
  2671                           ;CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2672  00240C  0E00               	movlw	0
  2673  00240E  0100               	movlb	0	; () banked
  2674  002410  6FBA               	movwf	CANSetFilter@filter& (0+255),b
  2675  002412  0E00               	movlw	0
  2676  002414  6FBB               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2677  002416  0E00               	movlw	0
  2678  002418  6FBC               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2679  00241A  0E00               	movlw	0
  2680  00241C  6FBD               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2681  00241E  C0D3  F0BE         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2682  002422  0E04               	movlw	4
  2683  002424  EC0C  F001         	call	_CANSetFilter
  2684                           
  2685                           ;CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2686  002428  0E00               	movlw	0
  2687  00242A  0100               	movlb	0	; () banked
  2688  00242C  6FBA               	movwf	CANSetFilter@filter& (0+255),b
  2689  00242E  0E00               	movlw	0
  2690  002430  6FBB               	movwf	(CANSetFilter@filter+1)& (0+255),b
  2691  002432  0E00               	movlw	0
  2692  002434  6FBC               	movwf	(CANSetFilter@filter+2)& (0+255),b
  2693  002436  0E00               	movlw	0
  2694  002438  6FBD               	movwf	(CANSetFilter@filter+3)& (0+255),b
  2695  00243A  C0D3  F0BE         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2696  00243E  0E05               	movlw	5
  2697  002440  EC0C  F001         	call	_CANSetFilter
  2698                           
  2699                           ;CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2700  002444  0E00               	movlw	0
  2701  002446  EC2F  F015         	call	_CANOperationMode
  2702  00244A  0012               	return		;funcret
  2703  00244C                     __end_of_CANInitialize:
  2704                           	opt stack 0
  2705                           tblptru	equ	0xFF8
  2706                           tblptrh	equ	0xFF7
  2707                           tblptrl	equ	0xFF6
  2708                           tablat	equ	0xFF5
  2709                           prodh	equ	0xFF4
  2710                           prodl	equ	0xFF3
  2711                           intcon	equ	0xFF2
  2712                           postinc0	equ	0xFEE
  2713                           wreg	equ	0xFE8
  2714                           indf1	equ	0xFE7
  2715                           postdec1	equ	0xFE5
  2716                           fsr1h	equ	0xFE2
  2717                           fsr1l	equ	0xFE1
  2718                           indf2	equ	0xFDF
  2719                           fsr2h	equ	0xFDA
  2720                           fsr2l	equ	0xFD9
  2721                           status	equ	0xFD8
  2722                           
  2723 ;; *************** function _CANSetMask *****************
  2724 ;; Defined at:
  2725 ;;		line 640 in file "CANlib.h"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  numBuffer       1    wreg     enum E16878
  2728 ;;  mask            4    0[BANK0 ] unsigned long 
  2729 ;;  type            1    4[BANK0 ] enum E16844
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  numBuffer       1    9[BANK0 ] enum E16878
  2732 ;;  tamp            4   10[BANK0 ] unsigned long 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;		None               void
  2735 ;; Registers used:
  2736 ;;		wreg, status,2, status,0
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2742 ;;      Params:         0       5       0       0
  2743 ;;      Locals:         0       5       0       0
  2744 ;;      Temps:          0       4       0       0
  2745 ;;      Totals:         0      14       0       0
  2746 ;;Total ram usage:       14 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:    2
  2749 ;; This function calls:
  2750 ;;		Nothing
  2751 ;; This function is called by:
  2752 ;;		_CANInitialize
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text6
  2757  001EE8                     __ptext6:
  2758                           	opt stack 0
  2759  001EE8                     _CANSetMask:
  2760                           	opt stack 26
  2761                           
  2762                           ;incstack = 0
  2763                           ;CANSetMask@numBuffer stored from wreg
  2764  001EE8  0100               	movlb	0	; () banked
  2765  001EEA  6FC3               	movwf	CANSetMask@numBuffer& (0+255),b
  2766                           
  2767                           ;CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2768  001EEC  0100               	movlb	0	; () banked
  2769  001EEE  05C3               	decf	CANSetMask@numBuffer& (0+255),w,b
  2770  001EF0  A4D8               	btfss	status,2,c
  2771  001EF2  D056               	goto	l4320
  2772                           
  2773                           ; BSR set to: 0
  2774  001EF4  0100               	movlb	0	; () banked
  2775  001EF6  29BE               	incf	CANSetMask@type& (0+255),w,b
  2776  001EF8  A4D8               	btfss	status,2,c
  2777  001EFA  D052               	goto	l4320
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;CANlib.h: 644: {
  2781                           ;CANlib.h: 645: tamp = (mask >> 3);
  2782  001EFC  C0BA  F0BF         	movff	CANSetMask@mask,??_CANSetMask
  2783  001F00  C0BB  F0C0         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2784  001F04  C0BC  F0C1         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2785  001F08  C0BD  F0C2         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2786  001F0C  0E04               	movlw	4
  2787  001F0E  D006               	goto	u5080
  2788  001F10                     u5085:
  2789  001F10  0100               	movlb	0	; () banked
  2790  001F12  90D8               	bcf	status,0,c
  2791  001F14  33C2               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2792  001F16  33C1               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2793  001F18  33C0               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2794  001F1A  33BF               	rrcf	??_CANSetMask& (0+255),f,b
  2795  001F1C                     u5080:
  2796  001F1C  2EE8               	decfsz	wreg,f,c
  2797  001F1E  D7F8               	goto	u5085
  2798  001F20  C0BF  F0C4         	movff	??_CANSetMask,CANSetMask@tamp
  2799  001F24  C0C0  F0C5         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2800  001F28  C0C1  F0C6         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2801  001F2C  C0C2  F0C7         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;CANlib.h: 646: tamp = tamp & 0x000000FF;
  2805  001F30  0100               	movlb	0	; () banked
  2806  001F32  51C4               	movf	CANSetMask@tamp& (0+255),w,b
  2807  001F34  0100               	movlb	0	; () banked
  2808  001F36  6FC4               	movwf	CANSetMask@tamp& (0+255),b
  2809  001F38  6BC5               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2810  001F3A  6BC6               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2811  001F3C  6BC7               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  2815  001F3E  C0C4  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;CANlib.h: 649: tamp = mask & 0x00000007;
  2819  001F42  0E07               	movlw	7
  2820  001F44  0100               	movlb	0	; () banked
  2821  001F46  15BA               	andwf	CANSetMask@mask& (0+255),w,b
  2822  001F48  0100               	movlb	0	; () banked
  2823  001F4A  6FC4               	movwf	CANSetMask@tamp& (0+255),b
  2824  001F4C  0E00               	movlw	0
  2825  001F4E  0100               	movlb	0	; () banked
  2826  001F50  15BB               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2827  001F52  0100               	movlb	0	; () banked
  2828  001F54  6FC5               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2829  001F56  0E00               	movlw	0
  2830  001F58  0100               	movlb	0	; () banked
  2831  001F5A  15BC               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2832  001F5C  0100               	movlb	0	; () banked
  2833  001F5E  6FC6               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2834  001F60  0E00               	movlw	0
  2835  001F62  0100               	movlb	0	; () banked
  2836  001F64  15BD               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2837  001F66  0100               	movlb	0	; () banked
  2838  001F68  6FC7               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;CANlib.h: 650: tamp = tamp << 5;
  2842  001F6A  C0C4  F0BF         	movff	CANSetMask@tamp,??_CANSetMask
  2843  001F6E  C0C5  F0C0         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2844  001F72  C0C6  F0C1         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2845  001F76  C0C7  F0C2         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2846  001F7A  0E05               	movlw	5
  2847  001F7C                     u5095:
  2848  001F7C  90D8               	bcf	status,0,c
  2849  001F7E  0100               	movlb	0	; () banked
  2850  001F80  37BF               	rlcf	??_CANSetMask& (0+255),f,b
  2851  001F82  37C0               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2852  001F84  37C1               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2853  001F86  37C2               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2854  001F88  2EE8               	decfsz	wreg,f,c
  2855  001F8A  D7F8               	goto	u5095
  2856  001F8C  C0BF  F0C4         	movff	??_CANSetMask,CANSetMask@tamp
  2857  001F90  C0C0  F0C5         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2858  001F94  C0C1  F0C6         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2859  001F98  C0C2  F0C7         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  2863  001F9C  C0C4  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2864  001FA0                     l4320:
  2865                           
  2866                           ; BSR set to: 0
  2867                           ;CANlib.h: 652: }
  2868                           ;CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2869  001FA0  0E02               	movlw	2
  2870  001FA2  0100               	movlb	0	; () banked
  2871  001FA4  19C3               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2872  001FA6  A4D8               	btfss	status,2,c
  2873  001FA8  D056               	goto	l4336
  2874                           
  2875                           ; BSR set to: 0
  2876  001FAA  0100               	movlb	0	; () banked
  2877  001FAC  29BE               	incf	CANSetMask@type& (0+255),w,b
  2878  001FAE  A4D8               	btfss	status,2,c
  2879  001FB0  D052               	goto	l4336
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;CANlib.h: 655: {
  2883                           ;CANlib.h: 656: tamp = (mask >> 3);
  2884  001FB2  C0BA  F0BF         	movff	CANSetMask@mask,??_CANSetMask
  2885  001FB6  C0BB  F0C0         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2886  001FBA  C0BC  F0C1         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2887  001FBE  C0BD  F0C2         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2888  001FC2  0E04               	movlw	4
  2889  001FC4  D006               	goto	u5120
  2890  001FC6                     u5125:
  2891  001FC6  0100               	movlb	0	; () banked
  2892  001FC8  90D8               	bcf	status,0,c
  2893  001FCA  33C2               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2894  001FCC  33C1               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2895  001FCE  33C0               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2896  001FD0  33BF               	rrcf	??_CANSetMask& (0+255),f,b
  2897  001FD2                     u5120:
  2898  001FD2  2EE8               	decfsz	wreg,f,c
  2899  001FD4  D7F8               	goto	u5125
  2900  001FD6  C0BF  F0C4         	movff	??_CANSetMask,CANSetMask@tamp
  2901  001FDA  C0C0  F0C5         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2902  001FDE  C0C1  F0C6         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2903  001FE2  C0C2  F0C7         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;CANlib.h: 657: tamp = tamp & 0x000000FF;
  2907  001FE6  0100               	movlb	0	; () banked
  2908  001FE8  51C4               	movf	CANSetMask@tamp& (0+255),w,b
  2909  001FEA  0100               	movlb	0	; () banked
  2910  001FEC  6FC4               	movwf	CANSetMask@tamp& (0+255),b
  2911  001FEE  6BC5               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2912  001FF0  6BC6               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2913  001FF2  6BC7               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  2917  001FF4  C0C4  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;CANlib.h: 660: tamp = mask & 0x00000007;
  2921  001FF8  0E07               	movlw	7
  2922  001FFA  0100               	movlb	0	; () banked
  2923  001FFC  15BA               	andwf	CANSetMask@mask& (0+255),w,b
  2924  001FFE  0100               	movlb	0	; () banked
  2925  002000  6FC4               	movwf	CANSetMask@tamp& (0+255),b
  2926  002002  0E00               	movlw	0
  2927  002004  0100               	movlb	0	; () banked
  2928  002006  15BB               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  2929  002008  0100               	movlb	0	; () banked
  2930  00200A  6FC5               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2931  00200C  0E00               	movlw	0
  2932  00200E  0100               	movlb	0	; () banked
  2933  002010  15BC               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  2934  002012  0100               	movlb	0	; () banked
  2935  002014  6FC6               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2936  002016  0E00               	movlw	0
  2937  002018  0100               	movlb	0	; () banked
  2938  00201A  15BD               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  2939  00201C  0100               	movlb	0	; () banked
  2940  00201E  6FC7               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;CANlib.h: 661: tamp = tamp << 5;
  2944  002020  C0C4  F0BF         	movff	CANSetMask@tamp,??_CANSetMask
  2945  002024  C0C5  F0C0         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2946  002028  C0C6  F0C1         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2947  00202C  C0C7  F0C2         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2948  002030  0E05               	movlw	5
  2949  002032                     u5135:
  2950  002032  90D8               	bcf	status,0,c
  2951  002034  0100               	movlb	0	; () banked
  2952  002036  37BF               	rlcf	??_CANSetMask& (0+255),f,b
  2953  002038  37C0               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2954  00203A  37C1               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2955  00203C  37C2               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2956  00203E  2EE8               	decfsz	wreg,f,c
  2957  002040  D7F8               	goto	u5135
  2958  002042  C0BF  F0C4         	movff	??_CANSetMask,CANSetMask@tamp
  2959  002046  C0C0  F0C5         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2960  00204A  C0C1  F0C6         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2961  00204E  C0C2  F0C7         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  2965  002052  C0C4  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2966  002056                     l4336:
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;CANlib.h: 663: }
  2970                           ;CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2971  002056  0100               	movlb	0	; () banked
  2972  002058  05C3               	decf	CANSetMask@numBuffer& (0+255),w,b
  2973  00205A  A4D8               	btfss	status,2,c
  2974  00205C  D087               	goto	l4368
  2975                           
  2976                           ; BSR set to: 0
  2977  00205E  0EF7               	movlw	247
  2978  002060  0100               	movlb	0	; () banked
  2979  002062  19BE               	xorwf	CANSetMask@type& (0+255),w,b
  2980  002064  A4D8               	btfss	status,2,c
  2981  002066  D082               	goto	l4368
  2982                           
  2983                           ; BSR set to: 0
  2984                           ;CANlib.h: 666: {
  2985                           ;CANlib.h: 667: tamp = mask & 0x000000FF;
  2986  002068  0100               	movlb	0	; () banked
  2987  00206A  51BA               	movf	CANSetMask@mask& (0+255),w,b
  2988  00206C  0100               	movlb	0	; () banked
  2989  00206E  6FC4               	movwf	CANSetMask@tamp& (0+255),b
  2990  002070  6BC5               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2991  002072  6BC6               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2992  002074  6BC7               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  2996  002076  C0C4  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;CANlib.h: 670: tamp = mask & 0x0000FF00;
  3000  00207A  0E00               	movlw	0
  3001  00207C  0100               	movlb	0	; () banked
  3002  00207E  15BA               	andwf	CANSetMask@mask& (0+255),w,b
  3003  002080  0100               	movlb	0	; () banked
  3004  002082  6FC4               	movwf	CANSetMask@tamp& (0+255),b
  3005  002084  0EFF               	movlw	255
  3006  002086  0100               	movlb	0	; () banked
  3007  002088  15BB               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3008  00208A  0100               	movlb	0	; () banked
  3009  00208C  6FC5               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3010  00208E  0E00               	movlw	0
  3011  002090  0100               	movlb	0	; () banked
  3012  002092  15BC               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3013  002094  0100               	movlb	0	; () banked
  3014  002096  6FC6               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3015  002098  0E00               	movlw	0
  3016  00209A  0100               	movlb	0	; () banked
  3017  00209C  15BD               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3018  00209E  0100               	movlb	0	; () banked
  3019  0020A0  6FC7               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;CANlib.h: 671: tamp = tamp >> 8;
  3023  0020A2  C0C4  F0BF         	movff	CANSetMask@tamp,??_CANSetMask
  3024  0020A6  C0C5  F0C0         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3025  0020AA  C0C6  F0C1         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3026  0020AE  C0C7  F0C2         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3027  0020B2  C0C0  F0BF         	movff	??_CANSetMask+1,??_CANSetMask
  3028  0020B6  C0C1  F0C0         	movff	??_CANSetMask+2,??_CANSetMask+1
  3029  0020BA  C0C2  F0C1         	movff	??_CANSetMask+3,??_CANSetMask+2
  3030  0020BE  0100               	movlb	0	; () banked
  3031  0020C0  6BC2               	clrf	(??_CANSetMask+3)& (0+255),b
  3032  0020C2  C0BF  F0C4         	movff	??_CANSetMask,CANSetMask@tamp
  3033  0020C6  C0C0  F0C5         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3034  0020CA  C0C1  F0C6         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3035  0020CE  C0C2  F0C7         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  3039  0020D2  C0C4  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;CANlib.h: 674: if (mask & 0x00010000)
  3043  0020D6  0100               	movlb	0	; () banked
  3044  0020D8  A1BC               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3045  0020DA  D003               	goto	l438
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  3049  0020DC  010F               	movlb	15	; () banked
  3050  0020DE  8119               	bsf	25,0,b	;volatile
  3051  0020E0  D002               	goto	l439
  3052  0020E2                     l438:
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;CANlib.h: 676: else
  3056                           ;CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  3057  0020E2  010F               	movlb	15	; () banked
  3058  0020E4  9119               	bcf	25,0,b	;volatile
  3059  0020E6                     l439:
  3060                           
  3061                           ; BSR set to: 15
  3062                           ;CANlib.h: 679: if (mask & 0x00020000)
  3063  0020E6  0100               	movlb	0	; () banked
  3064  0020E8  A3BC               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3065  0020EA  D003               	goto	l440
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  3069  0020EC  010F               	movlb	15	; () banked
  3070  0020EE  8319               	bsf	25,1,b	;volatile
  3071  0020F0  D002               	goto	l441
  3072  0020F2                     l440:
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;CANlib.h: 681: else
  3076                           ;CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  3077  0020F2  010F               	movlb	15	; () banked
  3078  0020F4  9319               	bcf	25,1,b	;volatile
  3079  0020F6                     l441:
  3080                           
  3081                           ; BSR set to: 15
  3082                           ;CANlib.h: 684: if (mask & 0x00040000)
  3083  0020F6  0100               	movlb	0	; () banked
  3084  0020F8  A5BC               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3085  0020FA  D003               	goto	l442
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  3089  0020FC  010F               	movlb	15	; () banked
  3090  0020FE  8B19               	bsf	25,5,b	;volatile
  3091  002100  D002               	goto	l443
  3092  002102                     l442:
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;CANlib.h: 686: else
  3096                           ;CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  3097  002102  010F               	movlb	15	; () banked
  3098  002104  9B19               	bcf	25,5,b	;volatile
  3099  002106                     l443:
  3100                           
  3101                           ; BSR set to: 15
  3102                           ;CANlib.h: 689: if (mask & 0x00080000)
  3103  002106  0100               	movlb	0	; () banked
  3104  002108  A7BC               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3105  00210A  D003               	goto	l444
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3109  00210C  010F               	movlb	15	; () banked
  3110  00210E  8D19               	bsf	25,6,b	;volatile
  3111  002110  D002               	goto	l445
  3112  002112                     l444:
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;CANlib.h: 691: else
  3116                           ;CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3117  002112  010F               	movlb	15	; () banked
  3118  002114  9D19               	bcf	25,6,b	;volatile
  3119  002116                     l445:
  3120                           
  3121                           ; BSR set to: 15
  3122                           ;CANlib.h: 694: if (mask & 0x00100000)
  3123  002116  0100               	movlb	0	; () banked
  3124  002118  A9BC               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3125  00211A  D003               	goto	l446
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3129  00211C  010F               	movlb	15	; () banked
  3130  00211E  8F19               	bsf	25,7,b	;volatile
  3131  002120  D002               	goto	l4362
  3132  002122                     l446:
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;CANlib.h: 696: else
  3136                           ;CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3137  002122  010F               	movlb	15	; () banked
  3138  002124  9F19               	bcf	25,7,b	;volatile
  3139  002126                     l4362:
  3140                           
  3141                           ; BSR set to: 15
  3142                           ;CANlib.h: 699: tamp = (mask >> 21);
  3143  002126  C0BA  F0BF         	movff	CANSetMask@mask,??_CANSetMask
  3144  00212A  C0BB  F0C0         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3145  00212E  C0BC  F0C1         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3146  002132  C0BD  F0C2         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3147  002136  0E16               	movlw	22
  3148  002138  D006               	goto	u5210
  3149  00213A                     u5215:
  3150  00213A  0100               	movlb	0	; () banked
  3151  00213C  90D8               	bcf	status,0,c
  3152  00213E  33C2               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3153  002140  33C1               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3154  002142  33C0               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3155  002144  33BF               	rrcf	??_CANSetMask& (0+255),f,b
  3156  002146                     u5210:
  3157  002146  2EE8               	decfsz	wreg,f,c
  3158  002148  D7F8               	goto	u5215
  3159  00214A  C0BF  F0C4         	movff	??_CANSetMask,CANSetMask@tamp
  3160  00214E  C0C0  F0C5         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3161  002152  C0C1  F0C6         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3162  002156  C0C2  F0C7         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;CANlib.h: 700: tamp = tamp & 0x000000FF;
  3166  00215A  0100               	movlb	0	; () banked
  3167  00215C  51C4               	movf	CANSetMask@tamp& (0+255),w,b
  3168  00215E  0100               	movlb	0	; () banked
  3169  002160  6FC4               	movwf	CANSetMask@tamp& (0+255),b
  3170  002162  6BC5               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3171  002164  6BC6               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3172  002166  6BC7               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3176  002168  C0C4  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3177  00216C                     l4368:
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;CANlib.h: 702: }
  3181                           ;CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3182  00216C  0E02               	movlw	2
  3183  00216E  0100               	movlb	0	; () banked
  3184  002170  19C3               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3185  002172  A4D8               	btfss	status,2,c
  3186  002174  0012               	return	
  3187                           
  3188                           ; BSR set to: 0
  3189  002176  0EF7               	movlw	247
  3190  002178  0100               	movlb	0	; () banked
  3191  00217A  19BE               	xorwf	CANSetMask@type& (0+255),w,b
  3192  00217C  A4D8               	btfss	status,2,c
  3193  00217E  0012               	return	
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;CANlib.h: 705: {
  3197                           ;CANlib.h: 706: tamp = mask & 0x000000FF;
  3198  002180  0100               	movlb	0	; () banked
  3199  002182  51BA               	movf	CANSetMask@mask& (0+255),w,b
  3200  002184  0100               	movlb	0	; () banked
  3201  002186  6FC4               	movwf	CANSetMask@tamp& (0+255),b
  3202  002188  6BC5               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3203  00218A  6BC6               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3204  00218C  6BC7               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3208  00218E  C0C4  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;CANlib.h: 709: tamp = mask & 0x0000FF00;
  3212  002192  0E00               	movlw	0
  3213  002194  0100               	movlb	0	; () banked
  3214  002196  15BA               	andwf	CANSetMask@mask& (0+255),w,b
  3215  002198  0100               	movlb	0	; () banked
  3216  00219A  6FC4               	movwf	CANSetMask@tamp& (0+255),b
  3217  00219C  0EFF               	movlw	255
  3218  00219E  0100               	movlb	0	; () banked
  3219  0021A0  15BB               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3220  0021A2  0100               	movlb	0	; () banked
  3221  0021A4  6FC5               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3222  0021A6  0E00               	movlw	0
  3223  0021A8  0100               	movlb	0	; () banked
  3224  0021AA  15BC               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3225  0021AC  0100               	movlb	0	; () banked
  3226  0021AE  6FC6               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3227  0021B0  0E00               	movlw	0
  3228  0021B2  0100               	movlb	0	; () banked
  3229  0021B4  15BD               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3230  0021B6  0100               	movlb	0	; () banked
  3231  0021B8  6FC7               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;CANlib.h: 710: tamp = tamp >> 8;
  3235  0021BA  C0C4  F0BF         	movff	CANSetMask@tamp,??_CANSetMask
  3236  0021BE  C0C5  F0C0         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3237  0021C2  C0C6  F0C1         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3238  0021C6  C0C7  F0C2         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3239  0021CA  C0C0  F0BF         	movff	??_CANSetMask+1,??_CANSetMask
  3240  0021CE  C0C1  F0C0         	movff	??_CANSetMask+2,??_CANSetMask+1
  3241  0021D2  C0C2  F0C1         	movff	??_CANSetMask+3,??_CANSetMask+2
  3242  0021D6  0100               	movlb	0	; () banked
  3243  0021D8  6BC2               	clrf	(??_CANSetMask+3)& (0+255),b
  3244  0021DA  C0BF  F0C4         	movff	??_CANSetMask,CANSetMask@tamp
  3245  0021DE  C0C0  F0C5         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3246  0021E2  C0C1  F0C6         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3247  0021E6  C0C2  F0C7         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3251  0021EA  C0C4  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;CANlib.h: 713: if (mask & 0x00010000)
  3255  0021EE  0100               	movlb	0	; () banked
  3256  0021F0  A1BC               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  3257  0021F2  D003               	goto	l449
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3261  0021F4  010F               	movlb	15	; () banked
  3262  0021F6  811D               	bsf	29,0,b	;volatile
  3263  0021F8  D002               	goto	l450
  3264  0021FA                     l449:
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;CANlib.h: 715: else
  3268                           ;CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3269  0021FA  010F               	movlb	15	; () banked
  3270  0021FC  911D               	bcf	29,0,b	;volatile
  3271  0021FE                     l450:
  3272                           
  3273                           ; BSR set to: 15
  3274                           ;CANlib.h: 718: if (mask & 0x00020000)
  3275  0021FE  0100               	movlb	0	; () banked
  3276  002200  A3BC               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  3277  002202  D003               	goto	l451
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3281  002204  010F               	movlb	15	; () banked
  3282  002206  831D               	bsf	29,1,b	;volatile
  3283  002208  D002               	goto	l452
  3284  00220A                     l451:
  3285                           
  3286                           ; BSR set to: 0
  3287                           ;CANlib.h: 720: else
  3288                           ;CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3289  00220A  010F               	movlb	15	; () banked
  3290  00220C  931D               	bcf	29,1,b	;volatile
  3291  00220E                     l452:
  3292                           
  3293                           ; BSR set to: 15
  3294                           ;CANlib.h: 723: if (mask & 0x00040000)
  3295  00220E  0100               	movlb	0	; () banked
  3296  002210  A5BC               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  3297  002212  D003               	goto	l453
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3301  002214  010F               	movlb	15	; () banked
  3302  002216  8B1D               	bsf	29,5,b	;volatile
  3303  002218  D002               	goto	l454
  3304  00221A                     l453:
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;CANlib.h: 725: else
  3308                           ;CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3309  00221A  010F               	movlb	15	; () banked
  3310  00221C  9B1D               	bcf	29,5,b	;volatile
  3311  00221E                     l454:
  3312                           
  3313                           ; BSR set to: 15
  3314                           ;CANlib.h: 728: if (mask & 0x00080000)
  3315  00221E  0100               	movlb	0	; () banked
  3316  002220  A7BC               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  3317  002222  D003               	goto	l455
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3321  002224  010F               	movlb	15	; () banked
  3322  002226  8D1D               	bsf	29,6,b	;volatile
  3323  002228  D002               	goto	l456
  3324  00222A                     l455:
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;CANlib.h: 730: else
  3328                           ;CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3329  00222A  010F               	movlb	15	; () banked
  3330  00222C  9D1D               	bcf	29,6,b	;volatile
  3331  00222E                     l456:
  3332                           
  3333                           ; BSR set to: 15
  3334                           ;CANlib.h: 733: if (mask & 0x00100000)
  3335  00222E  0100               	movlb	0	; () banked
  3336  002230  A9BC               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  3337  002232  D003               	goto	l457
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3341  002234  010F               	movlb	15	; () banked
  3342  002236  8F1D               	bsf	29,7,b	;volatile
  3343  002238  D002               	goto	l4394
  3344  00223A                     l457:
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;CANlib.h: 735: else
  3348                           ;CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3349  00223A  010F               	movlb	15	; () banked
  3350  00223C  9F1D               	bcf	29,7,b	;volatile
  3351  00223E                     l4394:
  3352                           
  3353                           ; BSR set to: 15
  3354                           ;CANlib.h: 738: tamp = (mask >> 21);
  3355  00223E  C0BA  F0BF         	movff	CANSetMask@mask,??_CANSetMask
  3356  002242  C0BB  F0C0         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3357  002246  C0BC  F0C1         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3358  00224A  C0BD  F0C2         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3359  00224E  0E16               	movlw	22
  3360  002250  D006               	goto	u5290
  3361  002252                     u5295:
  3362  002252  0100               	movlb	0	; () banked
  3363  002254  90D8               	bcf	status,0,c
  3364  002256  33C2               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3365  002258  33C1               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3366  00225A  33C0               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3367  00225C  33BF               	rrcf	??_CANSetMask& (0+255),f,b
  3368  00225E                     u5290:
  3369  00225E  2EE8               	decfsz	wreg,f,c
  3370  002260  D7F8               	goto	u5295
  3371  002262  C0BF  F0C4         	movff	??_CANSetMask,CANSetMask@tamp
  3372  002266  C0C0  F0C5         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3373  00226A  C0C1  F0C6         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3374  00226E  C0C2  F0C7         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;CANlib.h: 739: tamp = tamp & 0x000000FF;
  3378  002272  0100               	movlb	0	; () banked
  3379  002274  51C4               	movf	CANSetMask@tamp& (0+255),w,b
  3380  002276  0100               	movlb	0	; () banked
  3381  002278  6FC4               	movwf	CANSetMask@tamp& (0+255),b
  3382  00227A  6BC5               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3383  00227C  6BC6               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3384  00227E  6BC7               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3388  002280  C0C4  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3389  002284  0012               	return	
  3390  002286                     __end_of_CANSetMask:
  3391                           	opt stack 0
  3392                           tblptru	equ	0xFF8
  3393                           tblptrh	equ	0xFF7
  3394                           tblptrl	equ	0xFF6
  3395                           tablat	equ	0xFF5
  3396                           prodh	equ	0xFF4
  3397                           prodl	equ	0xFF3
  3398                           intcon	equ	0xFF2
  3399                           postinc0	equ	0xFEE
  3400                           wreg	equ	0xFE8
  3401                           indf1	equ	0xFE7
  3402                           postdec1	equ	0xFE5
  3403                           fsr1h	equ	0xFE2
  3404                           fsr1l	equ	0xFE1
  3405                           indf2	equ	0xFDF
  3406                           fsr2h	equ	0xFDA
  3407                           fsr2l	equ	0xFD9
  3408                           status	equ	0xFD8
  3409                           
  3410 ;; *************** function _CANSetFilter *****************
  3411 ;; Defined at:
  3412 ;;		line 748 in file "CANlib.h"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;  numBuffer       1    wreg     enum E16881
  3415 ;;  filter          4    0[BANK0 ] unsigned long 
  3416 ;;  type            1    4[BANK0 ] enum E16844
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  numBuffer       1    9[BANK0 ] enum E16881
  3419 ;;  tamp            4   10[BANK0 ] unsigned long 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;		None               void
  3422 ;; Registers used:
  3423 ;;		wreg, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3429 ;;      Params:         0       5       0       0
  3430 ;;      Locals:         0       5       0       0
  3431 ;;      Temps:          0       4       0       0
  3432 ;;      Totals:         0      14       0       0
  3433 ;;Total ram usage:       14 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    2
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_CANInitialize
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text7
  3444  000218                     __ptext7:
  3445                           	opt stack 0
  3446  000218                     _CANSetFilter:
  3447                           	opt stack 26
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;incstack = 0
  3451                           ;CANSetFilter@numBuffer stored from wreg
  3452  000218  0100               	movlb	0	; () banked
  3453  00021A  6FC3               	movwf	CANSetFilter@numBuffer& (0+255),b
  3454                           
  3455                           ;CANlib.h: 750: unsigned long tamp;
  3456                           ;CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3457  00021C  0100               	movlb	0	; () banked
  3458  00021E  51C3               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3459  000220  0100               	movlb	0	; () banked
  3460  000222  A4D8               	btfss	status,2,c
  3461  000224  D058               	goto	l4418
  3462                           
  3463                           ; BSR set to: 0
  3464  000226  0100               	movlb	0	; () banked
  3465  000228  29BE               	incf	CANSetFilter@type& (0+255),w,b
  3466  00022A  A4D8               	btfss	status,2,c
  3467  00022C  D054               	goto	l4418
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;CANlib.h: 753: {
  3471                           ;CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3472  00022E  010F               	movlb	15	; () banked
  3473  000230  9701               	bcf	1,3,b	;volatile
  3474                           
  3475                           ; BSR set to: 15
  3476                           ;CANlib.h: 756: tamp = (filter >> 3);
  3477  000232  C0BA  F0BF         	movff	CANSetFilter@filter,??_CANSetFilter
  3478  000236  C0BB  F0C0         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3479  00023A  C0BC  F0C1         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3480  00023E  C0BD  F0C2         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3481  000242  0E04               	movlw	4
  3482  000244  D006               	goto	u5320
  3483  000246                     u5325:
  3484  000246  0100               	movlb	0	; () banked
  3485  000248  90D8               	bcf	status,0,c
  3486  00024A  33C2               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3487  00024C  33C1               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3488  00024E  33C0               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3489  000250  33BF               	rrcf	??_CANSetFilter& (0+255),f,b
  3490  000252                     u5320:
  3491  000252  2EE8               	decfsz	wreg,f,c
  3492  000254  D7F8               	goto	u5325
  3493  000256  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  3494  00025A  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3495  00025E  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3496  000262  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;CANlib.h: 757: tamp = tamp & 0x000000FF;
  3500  000266  0100               	movlb	0	; () banked
  3501  000268  51C4               	movf	CANSetFilter@tamp& (0+255),w,b
  3502  00026A  0100               	movlb	0	; () banked
  3503  00026C  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  3504  00026E  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3505  000270  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3506  000272  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3510  000274  C0C4  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;CANlib.h: 760: tamp = filter & 0x00000007;
  3514  000278  0E07               	movlw	7
  3515  00027A  0100               	movlb	0	; () banked
  3516  00027C  15BA               	andwf	CANSetFilter@filter& (0+255),w,b
  3517  00027E  0100               	movlb	0	; () banked
  3518  000280  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  3519  000282  0E00               	movlw	0
  3520  000284  0100               	movlb	0	; () banked
  3521  000286  15BB               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3522  000288  0100               	movlb	0	; () banked
  3523  00028A  6FC5               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3524  00028C  0E00               	movlw	0
  3525  00028E  0100               	movlb	0	; () banked
  3526  000290  15BC               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3527  000292  0100               	movlb	0	; () banked
  3528  000294  6FC6               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3529  000296  0E00               	movlw	0
  3530  000298  0100               	movlb	0	; () banked
  3531  00029A  15BD               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3532  00029C  0100               	movlb	0	; () banked
  3533  00029E  6FC7               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;CANlib.h: 761: tamp = tamp << 5;
  3537  0002A0  C0C4  F0BF         	movff	CANSetFilter@tamp,??_CANSetFilter
  3538  0002A4  C0C5  F0C0         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3539  0002A8  C0C6  F0C1         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3540  0002AC  C0C7  F0C2         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3541  0002B0  0E05               	movlw	5
  3542  0002B2                     u5335:
  3543  0002B2  90D8               	bcf	status,0,c
  3544  0002B4  0100               	movlb	0	; () banked
  3545  0002B6  37BF               	rlcf	??_CANSetFilter& (0+255),f,b
  3546  0002B8  37C0               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3547  0002BA  37C1               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3548  0002BC  37C2               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3549  0002BE  2EE8               	decfsz	wreg,f,c
  3550  0002C0  D7F8               	goto	u5335
  3551  0002C2  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  3552  0002C6  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3553  0002CA  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3554  0002CE  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3558  0002D2  C0C4  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3559  0002D6                     l4418:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;CANlib.h: 763: }
  3563                           ;CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3564  0002D6  0100               	movlb	0	; () banked
  3565  0002D8  05C3               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3566  0002DA  A4D8               	btfss	status,2,c
  3567  0002DC  D058               	goto	l4436
  3568                           
  3569                           ; BSR set to: 0
  3570  0002DE  0100               	movlb	0	; () banked
  3571  0002E0  29BE               	incf	CANSetFilter@type& (0+255),w,b
  3572  0002E2  A4D8               	btfss	status,2,c
  3573  0002E4  D054               	goto	l4436
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;CANlib.h: 766: {
  3577                           ;CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3578  0002E6  010F               	movlb	15	; () banked
  3579  0002E8  9705               	bcf	5,3,b	;volatile
  3580                           
  3581                           ; BSR set to: 15
  3582                           ;CANlib.h: 769: tamp = (filter >> 3);
  3583  0002EA  C0BA  F0BF         	movff	CANSetFilter@filter,??_CANSetFilter
  3584  0002EE  C0BB  F0C0         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3585  0002F2  C0BC  F0C1         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3586  0002F6  C0BD  F0C2         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3587  0002FA  0E04               	movlw	4
  3588  0002FC  D006               	goto	u5360
  3589  0002FE                     u5365:
  3590  0002FE  0100               	movlb	0	; () banked
  3591  000300  90D8               	bcf	status,0,c
  3592  000302  33C2               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3593  000304  33C1               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3594  000306  33C0               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3595  000308  33BF               	rrcf	??_CANSetFilter& (0+255),f,b
  3596  00030A                     u5360:
  3597  00030A  2EE8               	decfsz	wreg,f,c
  3598  00030C  D7F8               	goto	u5365
  3599  00030E  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  3600  000312  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3601  000316  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3602  00031A  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;CANlib.h: 770: tamp = tamp & 0x000000FF;
  3606  00031E  0100               	movlb	0	; () banked
  3607  000320  51C4               	movf	CANSetFilter@tamp& (0+255),w,b
  3608  000322  0100               	movlb	0	; () banked
  3609  000324  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  3610  000326  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3611  000328  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3612  00032A  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3616  00032C  C0C4  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;CANlib.h: 773: tamp = filter & 0x00000007;
  3620  000330  0E07               	movlw	7
  3621  000332  0100               	movlb	0	; () banked
  3622  000334  15BA               	andwf	CANSetFilter@filter& (0+255),w,b
  3623  000336  0100               	movlb	0	; () banked
  3624  000338  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  3625  00033A  0E00               	movlw	0
  3626  00033C  0100               	movlb	0	; () banked
  3627  00033E  15BB               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3628  000340  0100               	movlb	0	; () banked
  3629  000342  6FC5               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3630  000344  0E00               	movlw	0
  3631  000346  0100               	movlb	0	; () banked
  3632  000348  15BC               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3633  00034A  0100               	movlb	0	; () banked
  3634  00034C  6FC6               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3635  00034E  0E00               	movlw	0
  3636  000350  0100               	movlb	0	; () banked
  3637  000352  15BD               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3638  000354  0100               	movlb	0	; () banked
  3639  000356  6FC7               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;CANlib.h: 774: tamp = tamp << 5;
  3643  000358  C0C4  F0BF         	movff	CANSetFilter@tamp,??_CANSetFilter
  3644  00035C  C0C5  F0C0         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3645  000360  C0C6  F0C1         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3646  000364  C0C7  F0C2         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3647  000368  0E05               	movlw	5
  3648  00036A                     u5375:
  3649  00036A  90D8               	bcf	status,0,c
  3650  00036C  0100               	movlb	0	; () banked
  3651  00036E  37BF               	rlcf	??_CANSetFilter& (0+255),f,b
  3652  000370  37C0               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3653  000372  37C1               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3654  000374  37C2               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3655  000376  2EE8               	decfsz	wreg,f,c
  3656  000378  D7F8               	goto	u5375
  3657  00037A  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  3658  00037E  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3659  000382  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3660  000386  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3664  00038A  C0C4  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3665  00038E                     l4436:
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;CANlib.h: 776: }
  3669                           ;CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3670  00038E  0E02               	movlw	2
  3671  000390  0100               	movlb	0	; () banked
  3672  000392  19C3               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3673  000394  A4D8               	btfss	status,2,c
  3674  000396  D058               	goto	l4454
  3675                           
  3676                           ; BSR set to: 0
  3677  000398  0100               	movlb	0	; () banked
  3678  00039A  29BE               	incf	CANSetFilter@type& (0+255),w,b
  3679  00039C  A4D8               	btfss	status,2,c
  3680  00039E  D054               	goto	l4454
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;CANlib.h: 779: {
  3684                           ;CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3685  0003A0  010F               	movlb	15	; () banked
  3686  0003A2  9709               	bcf	9,3,b	;volatile
  3687                           
  3688                           ; BSR set to: 15
  3689                           ;CANlib.h: 782: tamp = (filter >> 3);
  3690  0003A4  C0BA  F0BF         	movff	CANSetFilter@filter,??_CANSetFilter
  3691  0003A8  C0BB  F0C0         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3692  0003AC  C0BC  F0C1         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3693  0003B0  C0BD  F0C2         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3694  0003B4  0E04               	movlw	4
  3695  0003B6  D006               	goto	u5400
  3696  0003B8                     u5405:
  3697  0003B8  0100               	movlb	0	; () banked
  3698  0003BA  90D8               	bcf	status,0,c
  3699  0003BC  33C2               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3700  0003BE  33C1               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3701  0003C0  33C0               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3702  0003C2  33BF               	rrcf	??_CANSetFilter& (0+255),f,b
  3703  0003C4                     u5400:
  3704  0003C4  2EE8               	decfsz	wreg,f,c
  3705  0003C6  D7F8               	goto	u5405
  3706  0003C8  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  3707  0003CC  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3708  0003D0  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3709  0003D4  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;CANlib.h: 783: tamp = tamp & 0x000000FF;
  3713  0003D8  0100               	movlb	0	; () banked
  3714  0003DA  51C4               	movf	CANSetFilter@tamp& (0+255),w,b
  3715  0003DC  0100               	movlb	0	; () banked
  3716  0003DE  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  3717  0003E0  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3718  0003E2  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3719  0003E4  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3723  0003E6  C0C4  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;CANlib.h: 786: tamp = filter & 0x00000007;
  3727  0003EA  0E07               	movlw	7
  3728  0003EC  0100               	movlb	0	; () banked
  3729  0003EE  15BA               	andwf	CANSetFilter@filter& (0+255),w,b
  3730  0003F0  0100               	movlb	0	; () banked
  3731  0003F2  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  3732  0003F4  0E00               	movlw	0
  3733  0003F6  0100               	movlb	0	; () banked
  3734  0003F8  15BB               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3735  0003FA  0100               	movlb	0	; () banked
  3736  0003FC  6FC5               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3737  0003FE  0E00               	movlw	0
  3738  000400  0100               	movlb	0	; () banked
  3739  000402  15BC               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3740  000404  0100               	movlb	0	; () banked
  3741  000406  6FC6               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3742  000408  0E00               	movlw	0
  3743  00040A  0100               	movlb	0	; () banked
  3744  00040C  15BD               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3745  00040E  0100               	movlb	0	; () banked
  3746  000410  6FC7               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;CANlib.h: 787: tamp = tamp << 5;
  3750  000412  C0C4  F0BF         	movff	CANSetFilter@tamp,??_CANSetFilter
  3751  000416  C0C5  F0C0         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3752  00041A  C0C6  F0C1         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3753  00041E  C0C7  F0C2         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3754  000422  0E05               	movlw	5
  3755  000424                     u5415:
  3756  000424  90D8               	bcf	status,0,c
  3757  000426  0100               	movlb	0	; () banked
  3758  000428  37BF               	rlcf	??_CANSetFilter& (0+255),f,b
  3759  00042A  37C0               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3760  00042C  37C1               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3761  00042E  37C2               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3762  000430  2EE8               	decfsz	wreg,f,c
  3763  000432  D7F8               	goto	u5415
  3764  000434  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  3765  000438  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3766  00043C  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3767  000440  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  3771  000444  C0C4  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3772  000448                     l4454:
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;CANlib.h: 789: }
  3776                           ;CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3777  000448  0E03               	movlw	3
  3778  00044A  0100               	movlb	0	; () banked
  3779  00044C  19C3               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3780  00044E  A4D8               	btfss	status,2,c
  3781  000450  D058               	goto	l4472
  3782                           
  3783                           ; BSR set to: 0
  3784  000452  0100               	movlb	0	; () banked
  3785  000454  29BE               	incf	CANSetFilter@type& (0+255),w,b
  3786  000456  A4D8               	btfss	status,2,c
  3787  000458  D054               	goto	l4472
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;CANlib.h: 792: {
  3791                           ;CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  3792  00045A  010F               	movlb	15	; () banked
  3793  00045C  970D               	bcf	13,3,b	;volatile
  3794                           
  3795                           ; BSR set to: 15
  3796                           ;CANlib.h: 795: tamp = (filter >> 3);
  3797  00045E  C0BA  F0BF         	movff	CANSetFilter@filter,??_CANSetFilter
  3798  000462  C0BB  F0C0         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3799  000466  C0BC  F0C1         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3800  00046A  C0BD  F0C2         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3801  00046E  0E04               	movlw	4
  3802  000470  D006               	goto	u5440
  3803  000472                     u5445:
  3804  000472  0100               	movlb	0	; () banked
  3805  000474  90D8               	bcf	status,0,c
  3806  000476  33C2               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3807  000478  33C1               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3808  00047A  33C0               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3809  00047C  33BF               	rrcf	??_CANSetFilter& (0+255),f,b
  3810  00047E                     u5440:
  3811  00047E  2EE8               	decfsz	wreg,f,c
  3812  000480  D7F8               	goto	u5445
  3813  000482  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  3814  000486  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3815  00048A  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3816  00048E  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;CANlib.h: 796: tamp = tamp & 0x000000FF;
  3820  000492  0100               	movlb	0	; () banked
  3821  000494  51C4               	movf	CANSetFilter@tamp& (0+255),w,b
  3822  000496  0100               	movlb	0	; () banked
  3823  000498  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  3824  00049A  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3825  00049C  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3826  00049E  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  3830  0004A0  C0C4  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;CANlib.h: 799: tamp = filter & 0x00000007;
  3834  0004A4  0E07               	movlw	7
  3835  0004A6  0100               	movlb	0	; () banked
  3836  0004A8  15BA               	andwf	CANSetFilter@filter& (0+255),w,b
  3837  0004AA  0100               	movlb	0	; () banked
  3838  0004AC  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  3839  0004AE  0E00               	movlw	0
  3840  0004B0  0100               	movlb	0	; () banked
  3841  0004B2  15BB               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3842  0004B4  0100               	movlb	0	; () banked
  3843  0004B6  6FC5               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3844  0004B8  0E00               	movlw	0
  3845  0004BA  0100               	movlb	0	; () banked
  3846  0004BC  15BC               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3847  0004BE  0100               	movlb	0	; () banked
  3848  0004C0  6FC6               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3849  0004C2  0E00               	movlw	0
  3850  0004C4  0100               	movlb	0	; () banked
  3851  0004C6  15BD               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3852  0004C8  0100               	movlb	0	; () banked
  3853  0004CA  6FC7               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;CANlib.h: 800: tamp = tamp << 5;
  3857  0004CC  C0C4  F0BF         	movff	CANSetFilter@tamp,??_CANSetFilter
  3858  0004D0  C0C5  F0C0         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3859  0004D4  C0C6  F0C1         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3860  0004D8  C0C7  F0C2         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3861  0004DC  0E05               	movlw	5
  3862  0004DE                     u5455:
  3863  0004DE  90D8               	bcf	status,0,c
  3864  0004E0  0100               	movlb	0	; () banked
  3865  0004E2  37BF               	rlcf	??_CANSetFilter& (0+255),f,b
  3866  0004E4  37C0               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3867  0004E6  37C1               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3868  0004E8  37C2               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3869  0004EA  2EE8               	decfsz	wreg,f,c
  3870  0004EC  D7F8               	goto	u5455
  3871  0004EE  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  3872  0004F2  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3873  0004F6  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3874  0004FA  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  3878  0004FE  C0C4  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3879  000502                     l4472:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;CANlib.h: 802: }
  3883                           ;CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3884  000502  0E04               	movlw	4
  3885  000504  0100               	movlb	0	; () banked
  3886  000506  19C3               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3887  000508  A4D8               	btfss	status,2,c
  3888  00050A  D058               	goto	l4490
  3889                           
  3890                           ; BSR set to: 0
  3891  00050C  0100               	movlb	0	; () banked
  3892  00050E  29BE               	incf	CANSetFilter@type& (0+255),w,b
  3893  000510  A4D8               	btfss	status,2,c
  3894  000512  D054               	goto	l4490
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;CANlib.h: 805: {
  3898                           ;CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  3899  000514  010F               	movlb	15	; () banked
  3900  000516  9711               	bcf	17,3,b	;volatile
  3901                           
  3902                           ; BSR set to: 15
  3903                           ;CANlib.h: 808: tamp = (filter >> 3);
  3904  000518  C0BA  F0BF         	movff	CANSetFilter@filter,??_CANSetFilter
  3905  00051C  C0BB  F0C0         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3906  000520  C0BC  F0C1         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3907  000524  C0BD  F0C2         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3908  000528  0E04               	movlw	4
  3909  00052A  D006               	goto	u5480
  3910  00052C                     u5485:
  3911  00052C  0100               	movlb	0	; () banked
  3912  00052E  90D8               	bcf	status,0,c
  3913  000530  33C2               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3914  000532  33C1               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3915  000534  33C0               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3916  000536  33BF               	rrcf	??_CANSetFilter& (0+255),f,b
  3917  000538                     u5480:
  3918  000538  2EE8               	decfsz	wreg,f,c
  3919  00053A  D7F8               	goto	u5485
  3920  00053C  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  3921  000540  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3922  000544  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3923  000548  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;CANlib.h: 809: tamp = tamp & 0x000000FF;
  3927  00054C  0100               	movlb	0	; () banked
  3928  00054E  51C4               	movf	CANSetFilter@tamp& (0+255),w,b
  3929  000550  0100               	movlb	0	; () banked
  3930  000552  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  3931  000554  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3932  000556  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3933  000558  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  3937  00055A  C0C4  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;CANlib.h: 812: tamp = filter & 0x00000007;
  3941  00055E  0E07               	movlw	7
  3942  000560  0100               	movlb	0	; () banked
  3943  000562  15BA               	andwf	CANSetFilter@filter& (0+255),w,b
  3944  000564  0100               	movlb	0	; () banked
  3945  000566  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  3946  000568  0E00               	movlw	0
  3947  00056A  0100               	movlb	0	; () banked
  3948  00056C  15BB               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  3949  00056E  0100               	movlb	0	; () banked
  3950  000570  6FC5               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3951  000572  0E00               	movlw	0
  3952  000574  0100               	movlb	0	; () banked
  3953  000576  15BC               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  3954  000578  0100               	movlb	0	; () banked
  3955  00057A  6FC6               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3956  00057C  0E00               	movlw	0
  3957  00057E  0100               	movlb	0	; () banked
  3958  000580  15BD               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  3959  000582  0100               	movlb	0	; () banked
  3960  000584  6FC7               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;CANlib.h: 813: tamp = tamp << 5;
  3964  000586  C0C4  F0BF         	movff	CANSetFilter@tamp,??_CANSetFilter
  3965  00058A  C0C5  F0C0         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3966  00058E  C0C6  F0C1         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3967  000592  C0C7  F0C2         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3968  000596  0E05               	movlw	5
  3969  000598                     u5495:
  3970  000598  90D8               	bcf	status,0,c
  3971  00059A  0100               	movlb	0	; () banked
  3972  00059C  37BF               	rlcf	??_CANSetFilter& (0+255),f,b
  3973  00059E  37C0               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3974  0005A0  37C1               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3975  0005A2  37C2               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3976  0005A4  2EE8               	decfsz	wreg,f,c
  3977  0005A6  D7F8               	goto	u5495
  3978  0005A8  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  3979  0005AC  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3980  0005B0  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3981  0005B4  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  3985  0005B8  C0C4  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3986  0005BC                     l4490:
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;CANlib.h: 815: }
  3990                           ;CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3991  0005BC  0E05               	movlw	5
  3992  0005BE  0100               	movlb	0	; () banked
  3993  0005C0  19C3               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3994  0005C2  A4D8               	btfss	status,2,c
  3995  0005C4  D058               	goto	l4508
  3996                           
  3997                           ; BSR set to: 0
  3998  0005C6  0100               	movlb	0	; () banked
  3999  0005C8  29BE               	incf	CANSetFilter@type& (0+255),w,b
  4000  0005CA  A4D8               	btfss	status,2,c
  4001  0005CC  D054               	goto	l4508
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;CANlib.h: 818: {
  4005                           ;CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  4006  0005CE  010F               	movlb	15	; () banked
  4007  0005D0  9715               	bcf	21,3,b	;volatile
  4008                           
  4009                           ; BSR set to: 15
  4010                           ;CANlib.h: 821: tamp = (filter >> 3);
  4011  0005D2  C0BA  F0BF         	movff	CANSetFilter@filter,??_CANSetFilter
  4012  0005D6  C0BB  F0C0         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4013  0005DA  C0BC  F0C1         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4014  0005DE  C0BD  F0C2         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4015  0005E2  0E04               	movlw	4
  4016  0005E4  D006               	goto	u5520
  4017  0005E6                     u5525:
  4018  0005E6  0100               	movlb	0	; () banked
  4019  0005E8  90D8               	bcf	status,0,c
  4020  0005EA  33C2               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4021  0005EC  33C1               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4022  0005EE  33C0               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4023  0005F0  33BF               	rrcf	??_CANSetFilter& (0+255),f,b
  4024  0005F2                     u5520:
  4025  0005F2  2EE8               	decfsz	wreg,f,c
  4026  0005F4  D7F8               	goto	u5525
  4027  0005F6  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  4028  0005FA  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4029  0005FE  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4030  000602  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;CANlib.h: 822: tamp = tamp & 0x000000FF;
  4034  000606  0100               	movlb	0	; () banked
  4035  000608  51C4               	movf	CANSetFilter@tamp& (0+255),w,b
  4036  00060A  0100               	movlb	0	; () banked
  4037  00060C  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  4038  00060E  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4039  000610  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4040  000612  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  4044  000614  C0C4  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;CANlib.h: 825: tamp = filter & 0x00000007;
  4048  000618  0E07               	movlw	7
  4049  00061A  0100               	movlb	0	; () banked
  4050  00061C  15BA               	andwf	CANSetFilter@filter& (0+255),w,b
  4051  00061E  0100               	movlb	0	; () banked
  4052  000620  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  4053  000622  0E00               	movlw	0
  4054  000624  0100               	movlb	0	; () banked
  4055  000626  15BB               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4056  000628  0100               	movlb	0	; () banked
  4057  00062A  6FC5               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4058  00062C  0E00               	movlw	0
  4059  00062E  0100               	movlb	0	; () banked
  4060  000630  15BC               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4061  000632  0100               	movlb	0	; () banked
  4062  000634  6FC6               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4063  000636  0E00               	movlw	0
  4064  000638  0100               	movlb	0	; () banked
  4065  00063A  15BD               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4066  00063C  0100               	movlb	0	; () banked
  4067  00063E  6FC7               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;CANlib.h: 826: tamp = tamp << 5;
  4071  000640  C0C4  F0BF         	movff	CANSetFilter@tamp,??_CANSetFilter
  4072  000644  C0C5  F0C0         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4073  000648  C0C6  F0C1         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4074  00064C  C0C7  F0C2         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4075  000650  0E05               	movlw	5
  4076  000652                     u5535:
  4077  000652  90D8               	bcf	status,0,c
  4078  000654  0100               	movlb	0	; () banked
  4079  000656  37BF               	rlcf	??_CANSetFilter& (0+255),f,b
  4080  000658  37C0               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4081  00065A  37C1               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4082  00065C  37C2               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4083  00065E  2EE8               	decfsz	wreg,f,c
  4084  000660  D7F8               	goto	u5535
  4085  000662  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  4086  000666  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4087  00066A  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4088  00066E  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4089                           
  4090                           ; BSR set to: 0
  4091                           ;CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  4092  000672  C0C4  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  4093  000676                     l4508:
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;CANlib.h: 828: }
  4097                           ;CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  4098  000676  0100               	movlb	0	; () banked
  4099  000678  51C3               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4100  00067A  0100               	movlb	0	; () banked
  4101  00067C  A4D8               	btfss	status,2,c
  4102  00067E  D089               	goto	l4542
  4103                           
  4104                           ; BSR set to: 0
  4105  000680  0EF7               	movlw	247
  4106  000682  0100               	movlb	0	; () banked
  4107  000684  19BE               	xorwf	CANSetFilter@type& (0+255),w,b
  4108  000686  A4D8               	btfss	status,2,c
  4109  000688  D084               	goto	l4542
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;CANlib.h: 832: {
  4113                           ;CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  4114  00068A  010F               	movlb	15	; () banked
  4115  00068C  8701               	bsf	1,3,b	;volatile
  4116                           
  4117                           ; BSR set to: 15
  4118                           ;CANlib.h: 835: tamp = filter & 0x000000FF;
  4119  00068E  0100               	movlb	0	; () banked
  4120  000690  51BA               	movf	CANSetFilter@filter& (0+255),w,b
  4121  000692  0100               	movlb	0	; () banked
  4122  000694  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  4123  000696  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4124  000698  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4125  00069A  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4126                           
  4127                           ; BSR set to: 0
  4128                           ;CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  4129  00069C  C0C4  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;CANlib.h: 838: tamp = filter & 0x0000FF00;
  4133  0006A0  0E00               	movlw	0
  4134  0006A2  0100               	movlb	0	; () banked
  4135  0006A4  15BA               	andwf	CANSetFilter@filter& (0+255),w,b
  4136  0006A6  0100               	movlb	0	; () banked
  4137  0006A8  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  4138  0006AA  0EFF               	movlw	255
  4139  0006AC  0100               	movlb	0	; () banked
  4140  0006AE  15BB               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4141  0006B0  0100               	movlb	0	; () banked
  4142  0006B2  6FC5               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4143  0006B4  0E00               	movlw	0
  4144  0006B6  0100               	movlb	0	; () banked
  4145  0006B8  15BC               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4146  0006BA  0100               	movlb	0	; () banked
  4147  0006BC  6FC6               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4148  0006BE  0E00               	movlw	0
  4149  0006C0  0100               	movlb	0	; () banked
  4150  0006C2  15BD               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4151  0006C4  0100               	movlb	0	; () banked
  4152  0006C6  6FC7               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;CANlib.h: 839: tamp = tamp >> 8;
  4156  0006C8  C0C4  F0BF         	movff	CANSetFilter@tamp,??_CANSetFilter
  4157  0006CC  C0C5  F0C0         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4158  0006D0  C0C6  F0C1         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4159  0006D4  C0C7  F0C2         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4160  0006D8  C0C0  F0BF         	movff	??_CANSetFilter+1,??_CANSetFilter
  4161  0006DC  C0C1  F0C0         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4162  0006E0  C0C2  F0C1         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4163  0006E4  0100               	movlb	0	; () banked
  4164  0006E6  6BC2               	clrf	(??_CANSetFilter+3)& (0+255),b
  4165  0006E8  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  4166  0006EC  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4167  0006F0  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4168  0006F4  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4172  0006F8  C0C4  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;CANlib.h: 842: if (filter & 0x00010000)
  4176  0006FC  0100               	movlb	0	; () banked
  4177  0006FE  A1BC               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4178  000700  D003               	goto	l469
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4182  000702  010F               	movlb	15	; () banked
  4183  000704  8101               	bsf	1,0,b	;volatile
  4184  000706  D002               	goto	l470
  4185  000708                     l469:
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;CANlib.h: 844: else
  4189                           ;CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4190  000708  010F               	movlb	15	; () banked
  4191  00070A  9101               	bcf	1,0,b	;volatile
  4192  00070C                     l470:
  4193                           
  4194                           ; BSR set to: 15
  4195                           ;CANlib.h: 847: if (filter & 0x00020000)
  4196  00070C  0100               	movlb	0	; () banked
  4197  00070E  A3BC               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4198  000710  D003               	goto	l471
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4202  000712  010F               	movlb	15	; () banked
  4203  000714  8301               	bsf	1,1,b	;volatile
  4204  000716  D002               	goto	l472
  4205  000718                     l471:
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;CANlib.h: 849: else
  4209                           ;CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4210  000718  010F               	movlb	15	; () banked
  4211  00071A  9301               	bcf	1,1,b	;volatile
  4212  00071C                     l472:
  4213                           
  4214                           ; BSR set to: 15
  4215                           ;CANlib.h: 852: if (filter & 0x00040000)
  4216  00071C  0100               	movlb	0	; () banked
  4217  00071E  A5BC               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4218  000720  D003               	goto	l473
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4222  000722  010F               	movlb	15	; () banked
  4223  000724  8B01               	bsf	1,5,b	;volatile
  4224  000726  D002               	goto	l474
  4225  000728                     l473:
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;CANlib.h: 854: else
  4229                           ;CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4230  000728  010F               	movlb	15	; () banked
  4231  00072A  9B01               	bcf	1,5,b	;volatile
  4232  00072C                     l474:
  4233                           
  4234                           ; BSR set to: 15
  4235                           ;CANlib.h: 857: if (filter & 0x00080000)
  4236  00072C  0100               	movlb	0	; () banked
  4237  00072E  A7BC               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4238  000730  D003               	goto	l475
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4242  000732  010F               	movlb	15	; () banked
  4243  000734  8D01               	bsf	1,6,b	;volatile
  4244  000736  D002               	goto	l476
  4245  000738                     l475:
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;CANlib.h: 859: else
  4249                           ;CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4250  000738  010F               	movlb	15	; () banked
  4251  00073A  9D01               	bcf	1,6,b	;volatile
  4252  00073C                     l476:
  4253                           
  4254                           ; BSR set to: 15
  4255                           ;CANlib.h: 862: if (filter & 0x00100000)
  4256  00073C  0100               	movlb	0	; () banked
  4257  00073E  A9BC               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4258  000740  D003               	goto	l477
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4262  000742  010F               	movlb	15	; () banked
  4263  000744  8F01               	bsf	1,7,b	;volatile
  4264  000746  D002               	goto	l4536
  4265  000748                     l477:
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;CANlib.h: 864: else
  4269                           ;CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4270  000748  010F               	movlb	15	; () banked
  4271  00074A  9F01               	bcf	1,7,b	;volatile
  4272  00074C                     l4536:
  4273                           
  4274                           ; BSR set to: 15
  4275                           ;CANlib.h: 867: tamp = (filter >> 21);
  4276  00074C  C0BA  F0BF         	movff	CANSetFilter@filter,??_CANSetFilter
  4277  000750  C0BB  F0C0         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4278  000754  C0BC  F0C1         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4279  000758  C0BD  F0C2         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4280  00075C  0E16               	movlw	22
  4281  00075E  D006               	goto	u5610
  4282  000760                     u5615:
  4283  000760  0100               	movlb	0	; () banked
  4284  000762  90D8               	bcf	status,0,c
  4285  000764  33C2               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4286  000766  33C1               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4287  000768  33C0               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4288  00076A  33BF               	rrcf	??_CANSetFilter& (0+255),f,b
  4289  00076C                     u5610:
  4290  00076C  2EE8               	decfsz	wreg,f,c
  4291  00076E  D7F8               	goto	u5615
  4292  000770  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  4293  000774  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4294  000778  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4295  00077C  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;CANlib.h: 868: tamp = tamp & 0x000000FF;
  4299  000780  0100               	movlb	0	; () banked
  4300  000782  51C4               	movf	CANSetFilter@tamp& (0+255),w,b
  4301  000784  0100               	movlb	0	; () banked
  4302  000786  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  4303  000788  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4304  00078A  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4305  00078C  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4306                           
  4307                           ; BSR set to: 0
  4308                           ;CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4309  00078E  C0C4  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4310  000792                     l4542:
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;CANlib.h: 870: }
  4314                           ;CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4315  000792  0100               	movlb	0	; () banked
  4316  000794  05C3               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4317  000796  A4D8               	btfss	status,2,c
  4318  000798  D089               	goto	l4576
  4319                           
  4320                           ; BSR set to: 0
  4321  00079A  0EF7               	movlw	247
  4322  00079C  0100               	movlb	0	; () banked
  4323  00079E  19BE               	xorwf	CANSetFilter@type& (0+255),w,b
  4324  0007A0  A4D8               	btfss	status,2,c
  4325  0007A2  D084               	goto	l4576
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;CANlib.h: 873: {
  4329                           ;CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4330  0007A4  010F               	movlb	15	; () banked
  4331  0007A6  8705               	bsf	5,3,b	;volatile
  4332                           
  4333                           ; BSR set to: 15
  4334                           ;CANlib.h: 876: tamp = filter & 0x000000FF;
  4335  0007A8  0100               	movlb	0	; () banked
  4336  0007AA  51BA               	movf	CANSetFilter@filter& (0+255),w,b
  4337  0007AC  0100               	movlb	0	; () banked
  4338  0007AE  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  4339  0007B0  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4340  0007B2  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4341  0007B4  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4345  0007B6  C0C4  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;CANlib.h: 879: tamp = filter & 0x0000FF00;
  4349  0007BA  0E00               	movlw	0
  4350  0007BC  0100               	movlb	0	; () banked
  4351  0007BE  15BA               	andwf	CANSetFilter@filter& (0+255),w,b
  4352  0007C0  0100               	movlb	0	; () banked
  4353  0007C2  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  4354  0007C4  0EFF               	movlw	255
  4355  0007C6  0100               	movlb	0	; () banked
  4356  0007C8  15BB               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4357  0007CA  0100               	movlb	0	; () banked
  4358  0007CC  6FC5               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4359  0007CE  0E00               	movlw	0
  4360  0007D0  0100               	movlb	0	; () banked
  4361  0007D2  15BC               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4362  0007D4  0100               	movlb	0	; () banked
  4363  0007D6  6FC6               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4364  0007D8  0E00               	movlw	0
  4365  0007DA  0100               	movlb	0	; () banked
  4366  0007DC  15BD               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4367  0007DE  0100               	movlb	0	; () banked
  4368  0007E0  6FC7               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;CANlib.h: 880: tamp = tamp >> 8;
  4372  0007E2  C0C4  F0BF         	movff	CANSetFilter@tamp,??_CANSetFilter
  4373  0007E6  C0C5  F0C0         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4374  0007EA  C0C6  F0C1         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4375  0007EE  C0C7  F0C2         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4376  0007F2  C0C0  F0BF         	movff	??_CANSetFilter+1,??_CANSetFilter
  4377  0007F6  C0C1  F0C0         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4378  0007FA  C0C2  F0C1         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4379  0007FE  0100               	movlb	0	; () banked
  4380  000800  6BC2               	clrf	(??_CANSetFilter+3)& (0+255),b
  4381  000802  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  4382  000806  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4383  00080A  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4384  00080E  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4388  000812  C0C4  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;CANlib.h: 883: if (filter & 0x00010000)
  4392  000816  0100               	movlb	0	; () banked
  4393  000818  A1BC               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4394  00081A  D003               	goto	l480
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4398  00081C  010F               	movlb	15	; () banked
  4399  00081E  8105               	bsf	5,0,b	;volatile
  4400  000820  D002               	goto	l481
  4401  000822                     l480:
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;CANlib.h: 885: else
  4405                           ;CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4406  000822  010F               	movlb	15	; () banked
  4407  000824  9105               	bcf	5,0,b	;volatile
  4408  000826                     l481:
  4409                           
  4410                           ; BSR set to: 15
  4411                           ;CANlib.h: 888: if (filter & 0x00020000)
  4412  000826  0100               	movlb	0	; () banked
  4413  000828  A3BC               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4414  00082A  D003               	goto	l482
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4418  00082C  010F               	movlb	15	; () banked
  4419  00082E  8305               	bsf	5,1,b	;volatile
  4420  000830  D002               	goto	l483
  4421  000832                     l482:
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;CANlib.h: 890: else
  4425                           ;CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4426  000832  010F               	movlb	15	; () banked
  4427  000834  9305               	bcf	5,1,b	;volatile
  4428  000836                     l483:
  4429                           
  4430                           ; BSR set to: 15
  4431                           ;CANlib.h: 893: if (filter & 0x00040000)
  4432  000836  0100               	movlb	0	; () banked
  4433  000838  A5BC               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4434  00083A  D003               	goto	l484
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4438  00083C  010F               	movlb	15	; () banked
  4439  00083E  8B05               	bsf	5,5,b	;volatile
  4440  000840  D002               	goto	l485
  4441  000842                     l484:
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;CANlib.h: 895: else
  4445                           ;CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4446  000842  010F               	movlb	15	; () banked
  4447  000844  9B05               	bcf	5,5,b	;volatile
  4448  000846                     l485:
  4449                           
  4450                           ; BSR set to: 15
  4451                           ;CANlib.h: 898: if (filter & 0x00080000)
  4452  000846  0100               	movlb	0	; () banked
  4453  000848  A7BC               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4454  00084A  D003               	goto	l486
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4458  00084C  010F               	movlb	15	; () banked
  4459  00084E  8D05               	bsf	5,6,b	;volatile
  4460  000850  D002               	goto	l487
  4461  000852                     l486:
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;CANlib.h: 900: else
  4465                           ;CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4466  000852  010F               	movlb	15	; () banked
  4467  000854  9D05               	bcf	5,6,b	;volatile
  4468  000856                     l487:
  4469                           
  4470                           ; BSR set to: 15
  4471                           ;CANlib.h: 903: if (filter & 0x00100000)
  4472  000856  0100               	movlb	0	; () banked
  4473  000858  A9BC               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4474  00085A  D003               	goto	l488
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4478  00085C  010F               	movlb	15	; () banked
  4479  00085E  8F05               	bsf	5,7,b	;volatile
  4480  000860  D002               	goto	l4570
  4481  000862                     l488:
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;CANlib.h: 905: else
  4485                           ;CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4486  000862  010F               	movlb	15	; () banked
  4487  000864  9F05               	bcf	5,7,b	;volatile
  4488  000866                     l4570:
  4489                           
  4490                           ; BSR set to: 15
  4491                           ;CANlib.h: 908: tamp = (filter >> 21);
  4492  000866  C0BA  F0BF         	movff	CANSetFilter@filter,??_CANSetFilter
  4493  00086A  C0BB  F0C0         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4494  00086E  C0BC  F0C1         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4495  000872  C0BD  F0C2         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4496  000876  0E16               	movlw	22
  4497  000878  D006               	goto	u5690
  4498  00087A                     u5695:
  4499  00087A  0100               	movlb	0	; () banked
  4500  00087C  90D8               	bcf	status,0,c
  4501  00087E  33C2               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4502  000880  33C1               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4503  000882  33C0               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4504  000884  33BF               	rrcf	??_CANSetFilter& (0+255),f,b
  4505  000886                     u5690:
  4506  000886  2EE8               	decfsz	wreg,f,c
  4507  000888  D7F8               	goto	u5695
  4508  00088A  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  4509  00088E  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4510  000892  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4511  000896  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;CANlib.h: 909: tamp = tamp & 0x000000FF;
  4515  00089A  0100               	movlb	0	; () banked
  4516  00089C  51C4               	movf	CANSetFilter@tamp& (0+255),w,b
  4517  00089E  0100               	movlb	0	; () banked
  4518  0008A0  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  4519  0008A2  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4520  0008A4  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4521  0008A6  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4525  0008A8  C0C4  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4526  0008AC                     l4576:
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;CANlib.h: 911: }
  4530                           ;CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4531  0008AC  0E02               	movlw	2
  4532  0008AE  0100               	movlb	0	; () banked
  4533  0008B0  19C3               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4534  0008B2  A4D8               	btfss	status,2,c
  4535  0008B4  D089               	goto	l4610
  4536                           
  4537                           ; BSR set to: 0
  4538  0008B6  0EF7               	movlw	247
  4539  0008B8  0100               	movlb	0	; () banked
  4540  0008BA  19BE               	xorwf	CANSetFilter@type& (0+255),w,b
  4541  0008BC  A4D8               	btfss	status,2,c
  4542  0008BE  D084               	goto	l4610
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;CANlib.h: 915: {
  4546                           ;CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4547  0008C0  010F               	movlb	15	; () banked
  4548  0008C2  8709               	bsf	9,3,b	;volatile
  4549                           
  4550                           ; BSR set to: 15
  4551                           ;CANlib.h: 918: tamp = filter & 0x000000FF;
  4552  0008C4  0100               	movlb	0	; () banked
  4553  0008C6  51BA               	movf	CANSetFilter@filter& (0+255),w,b
  4554  0008C8  0100               	movlb	0	; () banked
  4555  0008CA  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  4556  0008CC  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4557  0008CE  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4558  0008D0  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4562  0008D2  C0C4  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;CANlib.h: 921: tamp = filter & 0x0000FF00;
  4566  0008D6  0E00               	movlw	0
  4567  0008D8  0100               	movlb	0	; () banked
  4568  0008DA  15BA               	andwf	CANSetFilter@filter& (0+255),w,b
  4569  0008DC  0100               	movlb	0	; () banked
  4570  0008DE  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  4571  0008E0  0EFF               	movlw	255
  4572  0008E2  0100               	movlb	0	; () banked
  4573  0008E4  15BB               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4574  0008E6  0100               	movlb	0	; () banked
  4575  0008E8  6FC5               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4576  0008EA  0E00               	movlw	0
  4577  0008EC  0100               	movlb	0	; () banked
  4578  0008EE  15BC               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4579  0008F0  0100               	movlb	0	; () banked
  4580  0008F2  6FC6               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4581  0008F4  0E00               	movlw	0
  4582  0008F6  0100               	movlb	0	; () banked
  4583  0008F8  15BD               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4584  0008FA  0100               	movlb	0	; () banked
  4585  0008FC  6FC7               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;CANlib.h: 922: tamp = tamp >> 8;
  4589  0008FE  C0C4  F0BF         	movff	CANSetFilter@tamp,??_CANSetFilter
  4590  000902  C0C5  F0C0         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4591  000906  C0C6  F0C1         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4592  00090A  C0C7  F0C2         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4593  00090E  C0C0  F0BF         	movff	??_CANSetFilter+1,??_CANSetFilter
  4594  000912  C0C1  F0C0         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4595  000916  C0C2  F0C1         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4596  00091A  0100               	movlb	0	; () banked
  4597  00091C  6BC2               	clrf	(??_CANSetFilter+3)& (0+255),b
  4598  00091E  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  4599  000922  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4600  000926  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4601  00092A  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4605  00092E  C0C4  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;CANlib.h: 925: if (filter & 0x00010000)
  4609  000932  0100               	movlb	0	; () banked
  4610  000934  A1BC               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4611  000936  D003               	goto	l491
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4615  000938  010F               	movlb	15	; () banked
  4616  00093A  8109               	bsf	9,0,b	;volatile
  4617  00093C  D002               	goto	l492
  4618  00093E                     l491:
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;CANlib.h: 927: else
  4622                           ;CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4623  00093E  010F               	movlb	15	; () banked
  4624  000940  9109               	bcf	9,0,b	;volatile
  4625  000942                     l492:
  4626                           
  4627                           ; BSR set to: 15
  4628                           ;CANlib.h: 930: if (filter & 0x00020000)
  4629  000942  0100               	movlb	0	; () banked
  4630  000944  A3BC               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4631  000946  D003               	goto	l493
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4635  000948  010F               	movlb	15	; () banked
  4636  00094A  8309               	bsf	9,1,b	;volatile
  4637  00094C  D002               	goto	l494
  4638  00094E                     l493:
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;CANlib.h: 932: else
  4642                           ;CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4643  00094E  010F               	movlb	15	; () banked
  4644  000950  9309               	bcf	9,1,b	;volatile
  4645  000952                     l494:
  4646                           
  4647                           ; BSR set to: 15
  4648                           ;CANlib.h: 935: if (filter & 0x00040000)
  4649  000952  0100               	movlb	0	; () banked
  4650  000954  A5BC               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4651  000956  D003               	goto	l495
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4655  000958  010F               	movlb	15	; () banked
  4656  00095A  8B09               	bsf	9,5,b	;volatile
  4657  00095C  D002               	goto	l496
  4658  00095E                     l495:
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;CANlib.h: 937: else
  4662                           ;CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4663  00095E  010F               	movlb	15	; () banked
  4664  000960  9B09               	bcf	9,5,b	;volatile
  4665  000962                     l496:
  4666                           
  4667                           ; BSR set to: 15
  4668                           ;CANlib.h: 940: if (filter & 0x00080000)
  4669  000962  0100               	movlb	0	; () banked
  4670  000964  A7BC               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4671  000966  D003               	goto	l497
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4675  000968  010F               	movlb	15	; () banked
  4676  00096A  8D09               	bsf	9,6,b	;volatile
  4677  00096C  D002               	goto	l498
  4678  00096E                     l497:
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;CANlib.h: 942: else
  4682                           ;CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4683  00096E  010F               	movlb	15	; () banked
  4684  000970  9D09               	bcf	9,6,b	;volatile
  4685  000972                     l498:
  4686                           
  4687                           ; BSR set to: 15
  4688                           ;CANlib.h: 945: if (filter & 0x00100000)
  4689  000972  0100               	movlb	0	; () banked
  4690  000974  A9BC               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4691  000976  D003               	goto	l499
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4695  000978  010F               	movlb	15	; () banked
  4696  00097A  8F09               	bsf	9,7,b	;volatile
  4697  00097C  D002               	goto	l4604
  4698  00097E                     l499:
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;CANlib.h: 947: else
  4702                           ;CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4703  00097E  010F               	movlb	15	; () banked
  4704  000980  9F09               	bcf	9,7,b	;volatile
  4705  000982                     l4604:
  4706                           
  4707                           ; BSR set to: 15
  4708                           ;CANlib.h: 950: tamp = (filter >> 21);
  4709  000982  C0BA  F0BF         	movff	CANSetFilter@filter,??_CANSetFilter
  4710  000986  C0BB  F0C0         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4711  00098A  C0BC  F0C1         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4712  00098E  C0BD  F0C2         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4713  000992  0E16               	movlw	22
  4714  000994  D006               	goto	u5770
  4715  000996                     u5775:
  4716  000996  0100               	movlb	0	; () banked
  4717  000998  90D8               	bcf	status,0,c
  4718  00099A  33C2               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4719  00099C  33C1               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4720  00099E  33C0               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4721  0009A0  33BF               	rrcf	??_CANSetFilter& (0+255),f,b
  4722  0009A2                     u5770:
  4723  0009A2  2EE8               	decfsz	wreg,f,c
  4724  0009A4  D7F8               	goto	u5775
  4725  0009A6  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  4726  0009AA  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4727  0009AE  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4728  0009B2  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;CANlib.h: 951: tamp = tamp & 0x000000FF;
  4732  0009B6  0100               	movlb	0	; () banked
  4733  0009B8  51C4               	movf	CANSetFilter@tamp& (0+255),w,b
  4734  0009BA  0100               	movlb	0	; () banked
  4735  0009BC  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  4736  0009BE  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4737  0009C0  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4738  0009C2  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4742  0009C4  C0C4  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4743  0009C8                     l4610:
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;CANlib.h: 953: }
  4747                           ;CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4748  0009C8  0E03               	movlw	3
  4749  0009CA  0100               	movlb	0	; () banked
  4750  0009CC  19C3               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4751  0009CE  A4D8               	btfss	status,2,c
  4752  0009D0  D089               	goto	l4644
  4753                           
  4754                           ; BSR set to: 0
  4755  0009D2  0EF7               	movlw	247
  4756  0009D4  0100               	movlb	0	; () banked
  4757  0009D6  19BE               	xorwf	CANSetFilter@type& (0+255),w,b
  4758  0009D8  A4D8               	btfss	status,2,c
  4759  0009DA  D084               	goto	l4644
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;CANlib.h: 956: {
  4763                           ;CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  4764  0009DC  010F               	movlb	15	; () banked
  4765  0009DE  870D               	bsf	13,3,b	;volatile
  4766                           
  4767                           ; BSR set to: 15
  4768                           ;CANlib.h: 959: tamp = filter & 0x000000FF;
  4769  0009E0  0100               	movlb	0	; () banked
  4770  0009E2  51BA               	movf	CANSetFilter@filter& (0+255),w,b
  4771  0009E4  0100               	movlb	0	; () banked
  4772  0009E6  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  4773  0009E8  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4774  0009EA  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4775  0009EC  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  4779  0009EE  C0C4  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;CANlib.h: 962: tamp = filter & 0x0000FF00;
  4783  0009F2  0E00               	movlw	0
  4784  0009F4  0100               	movlb	0	; () banked
  4785  0009F6  15BA               	andwf	CANSetFilter@filter& (0+255),w,b
  4786  0009F8  0100               	movlb	0	; () banked
  4787  0009FA  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  4788  0009FC  0EFF               	movlw	255
  4789  0009FE  0100               	movlb	0	; () banked
  4790  000A00  15BB               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4791  000A02  0100               	movlb	0	; () banked
  4792  000A04  6FC5               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4793  000A06  0E00               	movlw	0
  4794  000A08  0100               	movlb	0	; () banked
  4795  000A0A  15BC               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4796  000A0C  0100               	movlb	0	; () banked
  4797  000A0E  6FC6               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4798  000A10  0E00               	movlw	0
  4799  000A12  0100               	movlb	0	; () banked
  4800  000A14  15BD               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4801  000A16  0100               	movlb	0	; () banked
  4802  000A18  6FC7               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;CANlib.h: 963: tamp = tamp >> 8;
  4806  000A1A  C0C4  F0BF         	movff	CANSetFilter@tamp,??_CANSetFilter
  4807  000A1E  C0C5  F0C0         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4808  000A22  C0C6  F0C1         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4809  000A26  C0C7  F0C2         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4810  000A2A  C0C0  F0BF         	movff	??_CANSetFilter+1,??_CANSetFilter
  4811  000A2E  C0C1  F0C0         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4812  000A32  C0C2  F0C1         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4813  000A36  0100               	movlb	0	; () banked
  4814  000A38  6BC2               	clrf	(??_CANSetFilter+3)& (0+255),b
  4815  000A3A  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  4816  000A3E  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4817  000A42  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4818  000A46  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  4822  000A4A  C0C4  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;CANlib.h: 966: if (filter & 0x00010000)
  4826  000A4E  0100               	movlb	0	; () banked
  4827  000A50  A1BC               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  4828  000A52  D003               	goto	l502
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  4832  000A54  010F               	movlb	15	; () banked
  4833  000A56  810D               	bsf	13,0,b	;volatile
  4834  000A58  D002               	goto	l503
  4835  000A5A                     l502:
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;CANlib.h: 968: else
  4839                           ;CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  4840  000A5A  010F               	movlb	15	; () banked
  4841  000A5C  910D               	bcf	13,0,b	;volatile
  4842  000A5E                     l503:
  4843                           
  4844                           ; BSR set to: 15
  4845                           ;CANlib.h: 971: if (filter & 0x00020000)
  4846  000A5E  0100               	movlb	0	; () banked
  4847  000A60  A3BC               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  4848  000A62  D003               	goto	l504
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  4852  000A64  010F               	movlb	15	; () banked
  4853  000A66  830D               	bsf	13,1,b	;volatile
  4854  000A68  D002               	goto	l505
  4855  000A6A                     l504:
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;CANlib.h: 973: else
  4859                           ;CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  4860  000A6A  010F               	movlb	15	; () banked
  4861  000A6C  930D               	bcf	13,1,b	;volatile
  4862  000A6E                     l505:
  4863                           
  4864                           ; BSR set to: 15
  4865                           ;CANlib.h: 976: if (filter & 0x00040000)
  4866  000A6E  0100               	movlb	0	; () banked
  4867  000A70  A5BC               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  4868  000A72  D003               	goto	l506
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  4872  000A74  010F               	movlb	15	; () banked
  4873  000A76  8B0D               	bsf	13,5,b	;volatile
  4874  000A78  D002               	goto	l507
  4875  000A7A                     l506:
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;CANlib.h: 978: else
  4879                           ;CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  4880  000A7A  010F               	movlb	15	; () banked
  4881  000A7C  9B0D               	bcf	13,5,b	;volatile
  4882  000A7E                     l507:
  4883                           
  4884                           ; BSR set to: 15
  4885                           ;CANlib.h: 981: if (filter & 0x00080000)
  4886  000A7E  0100               	movlb	0	; () banked
  4887  000A80  A7BC               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  4888  000A82  D003               	goto	l508
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  4892  000A84  010F               	movlb	15	; () banked
  4893  000A86  8D0D               	bsf	13,6,b	;volatile
  4894  000A88  D002               	goto	l509
  4895  000A8A                     l508:
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;CANlib.h: 983: else
  4899                           ;CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  4900  000A8A  010F               	movlb	15	; () banked
  4901  000A8C  9D0D               	bcf	13,6,b	;volatile
  4902  000A8E                     l509:
  4903                           
  4904                           ; BSR set to: 15
  4905                           ;CANlib.h: 986: if (filter & 0x00100000)
  4906  000A8E  0100               	movlb	0	; () banked
  4907  000A90  A9BC               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  4908  000A92  D003               	goto	l510
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  4912  000A94  010F               	movlb	15	; () banked
  4913  000A96  8F0D               	bsf	13,7,b	;volatile
  4914  000A98  D002               	goto	l4638
  4915  000A9A                     l510:
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;CANlib.h: 988: else
  4919                           ;CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  4920  000A9A  010F               	movlb	15	; () banked
  4921  000A9C  9F0D               	bcf	13,7,b	;volatile
  4922  000A9E                     l4638:
  4923                           
  4924                           ; BSR set to: 15
  4925                           ;CANlib.h: 991: tamp = (filter >> 21);
  4926  000A9E  C0BA  F0BF         	movff	CANSetFilter@filter,??_CANSetFilter
  4927  000AA2  C0BB  F0C0         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4928  000AA6  C0BC  F0C1         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4929  000AAA  C0BD  F0C2         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4930  000AAE  0E16               	movlw	22
  4931  000AB0  D006               	goto	u5850
  4932  000AB2                     u5855:
  4933  000AB2  0100               	movlb	0	; () banked
  4934  000AB4  90D8               	bcf	status,0,c
  4935  000AB6  33C2               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4936  000AB8  33C1               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4937  000ABA  33C0               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4938  000ABC  33BF               	rrcf	??_CANSetFilter& (0+255),f,b
  4939  000ABE                     u5850:
  4940  000ABE  2EE8               	decfsz	wreg,f,c
  4941  000AC0  D7F8               	goto	u5855
  4942  000AC2  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  4943  000AC6  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4944  000ACA  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4945  000ACE  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;CANlib.h: 992: tamp = tamp & 0x000000FF;
  4949  000AD2  0100               	movlb	0	; () banked
  4950  000AD4  51C4               	movf	CANSetFilter@tamp& (0+255),w,b
  4951  000AD6  0100               	movlb	0	; () banked
  4952  000AD8  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  4953  000ADA  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4954  000ADC  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4955  000ADE  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  4959  000AE0  C0C4  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4960  000AE4                     l4644:
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;CANlib.h: 994: }
  4964                           ;CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4965  000AE4  0E04               	movlw	4
  4966  000AE6  0100               	movlb	0	; () banked
  4967  000AE8  19C3               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4968  000AEA  A4D8               	btfss	status,2,c
  4969  000AEC  D089               	goto	l4678
  4970                           
  4971                           ; BSR set to: 0
  4972  000AEE  0EF7               	movlw	247
  4973  000AF0  0100               	movlb	0	; () banked
  4974  000AF2  19BE               	xorwf	CANSetFilter@type& (0+255),w,b
  4975  000AF4  A4D8               	btfss	status,2,c
  4976  000AF6  D084               	goto	l4678
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;CANlib.h: 997: {
  4980                           ;CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  4981  000AF8  010F               	movlb	15	; () banked
  4982  000AFA  8711               	bsf	17,3,b	;volatile
  4983                           
  4984                           ; BSR set to: 15
  4985                           ;CANlib.h: 1000: tamp = filter & 0x000000FF;
  4986  000AFC  0100               	movlb	0	; () banked
  4987  000AFE  51BA               	movf	CANSetFilter@filter& (0+255),w,b
  4988  000B00  0100               	movlb	0	; () banked
  4989  000B02  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  4990  000B04  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4991  000B06  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4992  000B08  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  4996  000B0A  C0C4  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;CANlib.h: 1003: tamp = filter & 0x0000FF00;
  5000  000B0E  0E00               	movlw	0
  5001  000B10  0100               	movlb	0	; () banked
  5002  000B12  15BA               	andwf	CANSetFilter@filter& (0+255),w,b
  5003  000B14  0100               	movlb	0	; () banked
  5004  000B16  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  5005  000B18  0EFF               	movlw	255
  5006  000B1A  0100               	movlb	0	; () banked
  5007  000B1C  15BB               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5008  000B1E  0100               	movlb	0	; () banked
  5009  000B20  6FC5               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5010  000B22  0E00               	movlw	0
  5011  000B24  0100               	movlb	0	; () banked
  5012  000B26  15BC               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5013  000B28  0100               	movlb	0	; () banked
  5014  000B2A  6FC6               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5015  000B2C  0E00               	movlw	0
  5016  000B2E  0100               	movlb	0	; () banked
  5017  000B30  15BD               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5018  000B32  0100               	movlb	0	; () banked
  5019  000B34  6FC7               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;CANlib.h: 1004: tamp = tamp >> 8;
  5023  000B36  C0C4  F0BF         	movff	CANSetFilter@tamp,??_CANSetFilter
  5024  000B3A  C0C5  F0C0         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5025  000B3E  C0C6  F0C1         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5026  000B42  C0C7  F0C2         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5027  000B46  C0C0  F0BF         	movff	??_CANSetFilter+1,??_CANSetFilter
  5028  000B4A  C0C1  F0C0         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5029  000B4E  C0C2  F0C1         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5030  000B52  0100               	movlb	0	; () banked
  5031  000B54  6BC2               	clrf	(??_CANSetFilter+3)& (0+255),b
  5032  000B56  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  5033  000B5A  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5034  000B5E  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5035  000B62  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  5039  000B66  C0C4  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;CANlib.h: 1007: if (filter & 0x00010000)
  5043  000B6A  0100               	movlb	0	; () banked
  5044  000B6C  A1BC               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5045  000B6E  D003               	goto	l513
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  5049  000B70  010F               	movlb	15	; () banked
  5050  000B72  8111               	bsf	17,0,b	;volatile
  5051  000B74  D002               	goto	l514
  5052  000B76                     l513:
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;CANlib.h: 1009: else
  5056                           ;CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  5057  000B76  010F               	movlb	15	; () banked
  5058  000B78  9111               	bcf	17,0,b	;volatile
  5059  000B7A                     l514:
  5060                           
  5061                           ; BSR set to: 15
  5062                           ;CANlib.h: 1012: if (filter & 0x00020000)
  5063  000B7A  0100               	movlb	0	; () banked
  5064  000B7C  A3BC               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5065  000B7E  D003               	goto	l515
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  5069  000B80  010F               	movlb	15	; () banked
  5070  000B82  8311               	bsf	17,1,b	;volatile
  5071  000B84  D002               	goto	l516
  5072  000B86                     l515:
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;CANlib.h: 1014: else
  5076                           ;CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  5077  000B86  010F               	movlb	15	; () banked
  5078  000B88  9311               	bcf	17,1,b	;volatile
  5079  000B8A                     l516:
  5080                           
  5081                           ; BSR set to: 15
  5082                           ;CANlib.h: 1017: if (filter & 0x00040000)
  5083  000B8A  0100               	movlb	0	; () banked
  5084  000B8C  A5BC               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5085  000B8E  D003               	goto	l517
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  5089  000B90  010F               	movlb	15	; () banked
  5090  000B92  8B11               	bsf	17,5,b	;volatile
  5091  000B94  D002               	goto	l518
  5092  000B96                     l517:
  5093                           
  5094                           ; BSR set to: 0
  5095                           ;CANlib.h: 1019: else
  5096                           ;CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  5097  000B96  010F               	movlb	15	; () banked
  5098  000B98  9B11               	bcf	17,5,b	;volatile
  5099  000B9A                     l518:
  5100                           
  5101                           ; BSR set to: 15
  5102                           ;CANlib.h: 1022: if (filter & 0x00080000)
  5103  000B9A  0100               	movlb	0	; () banked
  5104  000B9C  A7BC               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5105  000B9E  D003               	goto	l519
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  5109  000BA0  010F               	movlb	15	; () banked
  5110  000BA2  8D11               	bsf	17,6,b	;volatile
  5111  000BA4  D002               	goto	l520
  5112  000BA6                     l519:
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;CANlib.h: 1024: else
  5116                           ;CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  5117  000BA6  010F               	movlb	15	; () banked
  5118  000BA8  9D11               	bcf	17,6,b	;volatile
  5119  000BAA                     l520:
  5120                           
  5121                           ; BSR set to: 15
  5122                           ;CANlib.h: 1027: if (filter & 0x00100000)
  5123  000BAA  0100               	movlb	0	; () banked
  5124  000BAC  A9BC               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5125  000BAE  D003               	goto	l521
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  5129  000BB0  010F               	movlb	15	; () banked
  5130  000BB2  8F11               	bsf	17,7,b	;volatile
  5131  000BB4  D002               	goto	l4672
  5132  000BB6                     l521:
  5133                           
  5134                           ; BSR set to: 0
  5135                           ;CANlib.h: 1029: else
  5136                           ;CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  5137  000BB6  010F               	movlb	15	; () banked
  5138  000BB8  9F11               	bcf	17,7,b	;volatile
  5139  000BBA                     l4672:
  5140                           
  5141                           ; BSR set to: 15
  5142                           ;CANlib.h: 1032: tamp = (filter >> 21);
  5143  000BBA  C0BA  F0BF         	movff	CANSetFilter@filter,??_CANSetFilter
  5144  000BBE  C0BB  F0C0         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5145  000BC2  C0BC  F0C1         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5146  000BC6  C0BD  F0C2         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5147  000BCA  0E16               	movlw	22
  5148  000BCC  D006               	goto	u5930
  5149  000BCE                     u5935:
  5150  000BCE  0100               	movlb	0	; () banked
  5151  000BD0  90D8               	bcf	status,0,c
  5152  000BD2  33C2               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5153  000BD4  33C1               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5154  000BD6  33C0               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5155  000BD8  33BF               	rrcf	??_CANSetFilter& (0+255),f,b
  5156  000BDA                     u5930:
  5157  000BDA  2EE8               	decfsz	wreg,f,c
  5158  000BDC  D7F8               	goto	u5935
  5159  000BDE  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  5160  000BE2  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5161  000BE6  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5162  000BEA  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5163                           
  5164                           ; BSR set to: 0
  5165                           ;CANlib.h: 1033: tamp = tamp & 0x000000FF;
  5166  000BEE  0100               	movlb	0	; () banked
  5167  000BF0  51C4               	movf	CANSetFilter@tamp& (0+255),w,b
  5168  000BF2  0100               	movlb	0	; () banked
  5169  000BF4  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  5170  000BF6  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5171  000BF8  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5172  000BFA  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  5176  000BFC  C0C4  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5177  000C00                     l4678:
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;CANlib.h: 1035: }
  5181                           ;CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  5182  000C00  0E05               	movlw	5
  5183  000C02  0100               	movlb	0	; () banked
  5184  000C04  19C3               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5185  000C06  A4D8               	btfss	status,2,c
  5186  000C08  0012               	return	
  5187                           
  5188                           ; BSR set to: 0
  5189  000C0A  0EF7               	movlw	247
  5190  000C0C  0100               	movlb	0	; () banked
  5191  000C0E  19BE               	xorwf	CANSetFilter@type& (0+255),w,b
  5192  000C10  A4D8               	btfss	status,2,c
  5193  000C12  0012               	return	
  5194                           
  5195                           ; BSR set to: 0
  5196                           ;CANlib.h: 1038: {
  5197                           ;CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  5198  000C14  010F               	movlb	15	; () banked
  5199  000C16  8715               	bsf	21,3,b	;volatile
  5200                           
  5201                           ; BSR set to: 15
  5202                           ;CANlib.h: 1041: tamp = filter & 0x000000FF;
  5203  000C18  0100               	movlb	0	; () banked
  5204  000C1A  51BA               	movf	CANSetFilter@filter& (0+255),w,b
  5205  000C1C  0100               	movlb	0	; () banked
  5206  000C1E  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  5207  000C20  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5208  000C22  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5209  000C24  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5213  000C26  C0C4  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5217  000C2A  0E00               	movlw	0
  5218  000C2C  0100               	movlb	0	; () banked
  5219  000C2E  15BA               	andwf	CANSetFilter@filter& (0+255),w,b
  5220  000C30  0100               	movlb	0	; () banked
  5221  000C32  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  5222  000C34  0EFF               	movlw	255
  5223  000C36  0100               	movlb	0	; () banked
  5224  000C38  15BB               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5225  000C3A  0100               	movlb	0	; () banked
  5226  000C3C  6FC5               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5227  000C3E  0E00               	movlw	0
  5228  000C40  0100               	movlb	0	; () banked
  5229  000C42  15BC               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5230  000C44  0100               	movlb	0	; () banked
  5231  000C46  6FC6               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5232  000C48  0E00               	movlw	0
  5233  000C4A  0100               	movlb	0	; () banked
  5234  000C4C  15BD               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5235  000C4E  0100               	movlb	0	; () banked
  5236  000C50  6FC7               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;CANlib.h: 1045: tamp = tamp >> 8;
  5240  000C52  C0C4  F0BF         	movff	CANSetFilter@tamp,??_CANSetFilter
  5241  000C56  C0C5  F0C0         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5242  000C5A  C0C6  F0C1         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5243  000C5E  C0C7  F0C2         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5244  000C62  C0C0  F0BF         	movff	??_CANSetFilter+1,??_CANSetFilter
  5245  000C66  C0C1  F0C0         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5246  000C6A  C0C2  F0C1         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5247  000C6E  0100               	movlb	0	; () banked
  5248  000C70  6BC2               	clrf	(??_CANSetFilter+3)& (0+255),b
  5249  000C72  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  5250  000C76  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5251  000C7A  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5252  000C7E  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5253                           
  5254                           ; BSR set to: 0
  5255                           ;CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5256  000C82  C0C4  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;CANlib.h: 1048: if (filter & 0x00010000)
  5260  000C86  0100               	movlb	0	; () banked
  5261  000C88  A1BC               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5262  000C8A  D003               	goto	l524
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5266  000C8C  010F               	movlb	15	; () banked
  5267  000C8E  8115               	bsf	21,0,b	;volatile
  5268  000C90  D002               	goto	l525
  5269  000C92                     l524:
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;CANlib.h: 1050: else
  5273                           ;CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5274  000C92  010F               	movlb	15	; () banked
  5275  000C94  9115               	bcf	21,0,b	;volatile
  5276  000C96                     l525:
  5277                           
  5278                           ; BSR set to: 15
  5279                           ;CANlib.h: 1053: if (filter & 0x00020000)
  5280  000C96  0100               	movlb	0	; () banked
  5281  000C98  A3BC               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5282  000C9A  D003               	goto	l526
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5286  000C9C  010F               	movlb	15	; () banked
  5287  000C9E  8315               	bsf	21,1,b	;volatile
  5288  000CA0  D002               	goto	l527
  5289  000CA2                     l526:
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;CANlib.h: 1055: else
  5293                           ;CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5294  000CA2  010F               	movlb	15	; () banked
  5295  000CA4  9315               	bcf	21,1,b	;volatile
  5296  000CA6                     l527:
  5297                           
  5298                           ; BSR set to: 15
  5299                           ;CANlib.h: 1058: if (filter & 0x00040000)
  5300  000CA6  0100               	movlb	0	; () banked
  5301  000CA8  A5BC               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5302  000CAA  D003               	goto	l528
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5306  000CAC  010F               	movlb	15	; () banked
  5307  000CAE  8B15               	bsf	21,5,b	;volatile
  5308  000CB0  D002               	goto	l529
  5309  000CB2                     l528:
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;CANlib.h: 1060: else
  5313                           ;CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5314  000CB2  010F               	movlb	15	; () banked
  5315  000CB4  9B15               	bcf	21,5,b	;volatile
  5316  000CB6                     l529:
  5317                           
  5318                           ; BSR set to: 15
  5319                           ;CANlib.h: 1063: if (filter & 0x00080000)
  5320  000CB6  0100               	movlb	0	; () banked
  5321  000CB8  A7BC               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5322  000CBA  D003               	goto	l530
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5326  000CBC  010F               	movlb	15	; () banked
  5327  000CBE  8D15               	bsf	21,6,b	;volatile
  5328  000CC0  D002               	goto	l531
  5329  000CC2                     l530:
  5330                           
  5331                           ; BSR set to: 0
  5332                           ;CANlib.h: 1065: else
  5333                           ;CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5334  000CC2  010F               	movlb	15	; () banked
  5335  000CC4  9D15               	bcf	21,6,b	;volatile
  5336  000CC6                     l531:
  5337                           
  5338                           ; BSR set to: 15
  5339                           ;CANlib.h: 1068: if (filter & 0x00100000)
  5340  000CC6  0100               	movlb	0	; () banked
  5341  000CC8  A9BC               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5342  000CCA  D003               	goto	l532
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5346  000CCC  010F               	movlb	15	; () banked
  5347  000CCE  8F15               	bsf	21,7,b	;volatile
  5348  000CD0  D002               	goto	l4706
  5349  000CD2                     l532:
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;CANlib.h: 1070: else
  5353                           ;CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5354  000CD2  010F               	movlb	15	; () banked
  5355  000CD4  9F15               	bcf	21,7,b	;volatile
  5356  000CD6                     l4706:
  5357                           
  5358                           ; BSR set to: 15
  5359                           ;CANlib.h: 1073: tamp = (filter >> 21);
  5360  000CD6  C0BA  F0BF         	movff	CANSetFilter@filter,??_CANSetFilter
  5361  000CDA  C0BB  F0C0         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5362  000CDE  C0BC  F0C1         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5363  000CE2  C0BD  F0C2         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5364  000CE6  0E16               	movlw	22
  5365  000CE8  D006               	goto	u6010
  5366  000CEA                     u6015:
  5367  000CEA  0100               	movlb	0	; () banked
  5368  000CEC  90D8               	bcf	status,0,c
  5369  000CEE  33C2               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5370  000CF0  33C1               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5371  000CF2  33C0               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5372  000CF4  33BF               	rrcf	??_CANSetFilter& (0+255),f,b
  5373  000CF6                     u6010:
  5374  000CF6  2EE8               	decfsz	wreg,f,c
  5375  000CF8  D7F8               	goto	u6015
  5376  000CFA  C0BF  F0C4         	movff	??_CANSetFilter,CANSetFilter@tamp
  5377  000CFE  C0C0  F0C5         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5378  000D02  C0C1  F0C6         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5379  000D06  C0C2  F0C7         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5380                           
  5381                           ; BSR set to: 0
  5382                           ;CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5383  000D0A  0100               	movlb	0	; () banked
  5384  000D0C  51C4               	movf	CANSetFilter@tamp& (0+255),w,b
  5385  000D0E  0100               	movlb	0	; () banked
  5386  000D10  6FC4               	movwf	CANSetFilter@tamp& (0+255),b
  5387  000D12  6BC5               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5388  000D14  6BC6               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5389  000D16  6BC7               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5393  000D18  C0C4  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5394  000D1C  0012               	return	
  5395  000D1E                     __end_of_CANSetFilter:
  5396                           	opt stack 0
  5397                           tblptru	equ	0xFF8
  5398                           tblptrh	equ	0xFF7
  5399                           tblptrl	equ	0xFF6
  5400                           tablat	equ	0xFF5
  5401                           prodh	equ	0xFF4
  5402                           prodl	equ	0xFF3
  5403                           intcon	equ	0xFF2
  5404                           postinc0	equ	0xFEE
  5405                           wreg	equ	0xFE8
  5406                           indf1	equ	0xFE7
  5407                           postdec1	equ	0xFE5
  5408                           fsr1h	equ	0xFE2
  5409                           fsr1l	equ	0xFE1
  5410                           indf2	equ	0xFDF
  5411                           fsr2h	equ	0xFDA
  5412                           fsr2l	equ	0xFD9
  5413                           status	equ	0xFD8
  5414                           
  5415 ;; *************** function _CANOperationMode *****************
  5416 ;; Defined at:
  5417 ;;		line 206 in file "CANlib.h"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  mode            1    wreg     enum E16838
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;  mode            1    0[BANK0 ] enum E16838
  5422 ;; Return value:  Size  Location     Type
  5423 ;;		None               void
  5424 ;; Registers used:
  5425 ;;		wreg, status,2, status,0
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5431 ;;      Params:         0       0       0       0
  5432 ;;      Locals:         0       1       0       0
  5433 ;;      Temps:          0       0       0       0
  5434 ;;      Totals:         0       1       0       0
  5435 ;;Total ram usage:        1 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:    2
  5438 ;; This function calls:
  5439 ;;		Nothing
  5440 ;; This function is called by:
  5441 ;;		_CANInitialize
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text8
  5446  002A5E                     __ptext8:
  5447                           	opt stack 0
  5448  002A5E                     _CANOperationMode:
  5449                           	opt stack 26
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;incstack = 0
  5453                           ;CANOperationMode@mode stored from wreg
  5454  002A5E  0100               	movlb	0	; () banked
  5455  002A60  6FBA               	movwf	CANOperationMode@mode& (0+255),b
  5456                           
  5457                           ;CANlib.h: 208: CANCON = mode;
  5458  002A62  C0BA  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5459  002A66                     l4302:
  5460  002A66  506E               	movf	3950,w,c	;volatile
  5461  002A68  0BE0               	andlw	224
  5462  002A6A  0100               	movlb	0	; () banked
  5463  002A6C  19BA               	xorwf	CANOperationMode@mode& (0+255),w,b
  5464  002A6E  B4D8               	btfsc	status,2,c
  5465  002A70  0012               	return	
  5466  002A72  D7F9               	goto	l4302
  5467  002A74                     __end_of_CANOperationMode:
  5468                           	opt stack 0
  5469                           tblptru	equ	0xFF8
  5470                           tblptrh	equ	0xFF7
  5471                           tblptrl	equ	0xFF6
  5472                           tablat	equ	0xFF5
  5473                           prodh	equ	0xFF4
  5474                           prodl	equ	0xFF3
  5475                           intcon	equ	0xFF2
  5476                           postinc0	equ	0xFEE
  5477                           wreg	equ	0xFE8
  5478                           indf1	equ	0xFE7
  5479                           postdec1	equ	0xFE5
  5480                           fsr1h	equ	0xFE2
  5481                           fsr1l	equ	0xFE1
  5482                           indf2	equ	0xFDF
  5483                           fsr2h	equ	0xFDA
  5484                           fsr2l	equ	0xFD9
  5485                           status	equ	0xFD8
  5486                           
  5487 ;; *************** function _battery_measure *****************
  5488 ;; Defined at:
  5489 ;;		line 297 in file "motore.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;		None
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;		None
  5494 ;; Return value:  Size  Location     Type
  5495 ;;		None               void
  5496 ;; Registers used:
  5497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5503 ;;      Params:         0       0       0       0
  5504 ;;      Locals:         0       0       0       0
  5505 ;;      Temps:          0       0       0       0
  5506 ;;      Totals:         0       0       0       0
  5507 ;;Total ram usage:        0 bytes
  5508 ;; Hardware stack levels used:    1
  5509 ;; Hardware stack levels required when called:    3
  5510 ;; This function calls:
  5511 ;;		_CANisTxReady
  5512 ;;		_CANsendMessage
  5513 ;;		_WriteUSART
  5514 ;;		___awdiv
  5515 ;;		___wmul
  5516 ;; This function is called by:
  5517 ;;		_main
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text9
  5522  0026C0                     __ptext9:
  5523                           	opt stack 0
  5524  0026C0                     _battery_measure:
  5525                           	opt stack 27
  5526                           
  5527                           ;motore.c: 298: ADCON0bits.GO = 1;
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;incstack = 0
  5531  0026C0  82C2               	bsf	4034,1,c	;volatile
  5532  0026C2                     l728:
  5533  0026C2  B2C2               	btfsc	4034,1,c	;volatile
  5534  0026C4  D7FE               	goto	l728
  5535                           
  5536                           ;motore.c: 300: vBatt = ADRESH;
  5537  0026C6  CFC4 F036          	movff	4036,_vBatt	;volatile
  5538  0026CA  6A37               	clrf	_vBatt+1,c
  5539                           
  5540                           ;motore.c: 301: vBatt = (vBatt * 14) / 255;
  5541  0026CC  C036  F0C1         	movff	_vBatt,___wmul@multiplier
  5542  0026D0  C037  F0C2         	movff	_vBatt+1,___wmul@multiplier+1
  5543  0026D4  0E00               	movlw	0
  5544  0026D6  0100               	movlb	0	; () banked
  5545  0026D8  6FC4               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5546  0026DA  0E0E               	movlw	14
  5547  0026DC  6FC3               	movwf	___wmul@multiplicand& (0+255),b
  5548  0026DE  ECC1  F014         	call	___wmul	;wreg free
  5549  0026E2  C0C1  F0C7         	movff	?___wmul,___awdiv@dividend
  5550  0026E6  C0C2  F0C8         	movff	?___wmul+1,___awdiv@dividend+1
  5551  0026EA  0E00               	movlw	0
  5552  0026EC  0100               	movlb	0	; () banked
  5553  0026EE  6FCA               	movwf	(___awdiv@divisor+1)& (0+255),b
  5554  0026F0  69C9               	setf	___awdiv@divisor& (0+255),b
  5555  0026F2  ECA9  F012         	call	___awdiv	;wreg free
  5556  0026F6  C0C7  F036         	movff	?___awdiv,_vBatt
  5557  0026FA  C0C8  F037         	movff	?___awdiv+1,_vBatt+1
  5558                           
  5559                           ;motore.c: 302: WriteUSART(vBatt);
  5560  0026FE  5036               	movf	_vBatt,w,c
  5561  002700  EC45  F015         	call	_WriteUSART
  5562                           
  5563                           ;motore.c: 303: if (vBatt < 8) {
  5564  002704  BE37               	btfsc	_vBatt+1,7,c
  5565  002706  D006               	goto	l5304
  5566  002708  5037               	movf	_vBatt+1,w,c
  5567  00270A  E122               	bnz	l731
  5568  00270C  0E08               	movlw	8
  5569  00270E  5C36               	subwf	_vBatt,w,c
  5570  002710  B0D8               	btfsc	status,0,c
  5571  002712  D01E               	goto	l731
  5572  002714                     l5304:
  5573  002714  EC0C  F015         	call	_CANisTxReady	;wreg free
  5574  002718  0900               	iorlw	0
  5575  00271A  B4D8               	btfsc	status,2,c
  5576  00271C  D7FB               	goto	l5304
  5577                           
  5578                           ;motore.c: 305: CANsendMessage(0b00000000000000000000000001001, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5579  00271E  0E09               	movlw	9
  5580  002720  0100               	movlb	0	; () banked
  5581  002722  6FBA               	movwf	CANsendMessage@identifier& (0+255),b
  5582  002724  0E00               	movlw	0
  5583  002726  6FBB               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5584  002728  0E00               	movlw	0
  5585  00272A  6FBC               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5586  00272C  0E00               	movlw	0
  5587  00272E  6FBD               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5588  002730  0EA2               	movlw	low _data_array
  5589  002732  0100               	movlb	0	; () banked
  5590  002734  6FBE               	movwf	CANsendMessage@data& (0+255),b
  5591  002736  0E00               	movlw	high _data_array
  5592  002738  0100               	movlb	0	; () banked
  5593  00273A  6FBF               	movwf	(CANsendMessage@data+1)& (0+255),b
  5594  00273C  0E08               	movlw	8
  5595  00273E  0100               	movlb	0	; () banked
  5596  002740  6FC0               	movwf	CANsendMessage@dataLength& (0+255),b
  5597  002742  0EFC               	movlw	252
  5598  002744  0100               	movlb	0	; () banked
  5599  002746  6FC1               	movwf	CANsendMessage@flags& (0+255),b
  5600  002748  EC8F  F006         	call	_CANsendMessage	;wreg free
  5601                           
  5602                           ;motore.c: 306: PORTCbits.RC1 = 1;
  5603  00274C  8282               	bsf	3970,1,c	;volatile
  5604                           
  5605                           ;motore.c: 307: } else {
  5606  00274E  0012               	return	
  5607  002750                     l731:
  5608                           
  5609                           ;motore.c: 308: PORTCbits.RC1 = 0;
  5610  002750  9282               	bcf	3970,1,c	;volatile
  5611  002752  0012               	return	
  5612  002754                     __end_of_battery_measure:
  5613                           	opt stack 0
  5614                           tblptru	equ	0xFF8
  5615                           tblptrh	equ	0xFF7
  5616                           tblptrl	equ	0xFF6
  5617                           tablat	equ	0xFF5
  5618                           prodh	equ	0xFF4
  5619                           prodl	equ	0xFF3
  5620                           intcon	equ	0xFF2
  5621                           postinc0	equ	0xFEE
  5622                           wreg	equ	0xFE8
  5623                           indf1	equ	0xFE7
  5624                           postdec1	equ	0xFE5
  5625                           fsr1h	equ	0xFE2
  5626                           fsr1l	equ	0xFE1
  5627                           indf2	equ	0xFDF
  5628                           fsr2h	equ	0xFDA
  5629                           fsr2l	equ	0xFD9
  5630                           status	equ	0xFD8
  5631                           
  5632 ;; *************** function ___wmul *****************
  5633 ;; Defined at:
  5634 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  multiplier      2    7[BANK0 ] unsigned int 
  5637 ;;  multiplicand    2    9[BANK0 ] unsigned int 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  product         2   11[BANK0 ] unsigned int 
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  2    7[BANK0 ] unsigned int 
  5642 ;; Registers used:
  5643 ;;		wreg, status,2, status,0, prodl, prodh
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5649 ;;      Params:         0       4       0       0
  5650 ;;      Locals:         0       2       0       0
  5651 ;;      Temps:          0       0       0       0
  5652 ;;      Totals:         0       6       0       0
  5653 ;;Total ram usage:        6 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; Hardware stack levels required when called:    2
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_delay_ms
  5660 ;;		_main
  5661 ;;		_battery_measure
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           	psect	text10
  5666  002982                     __ptext10:
  5667                           	opt stack 0
  5668  002982                     ___wmul:
  5669                           	opt stack 27
  5670                           
  5671                           ;incstack = 0
  5672  002982  0100               	movlb	0	; () banked
  5673  002984  51C1               	movf	___wmul@multiplier& (0+255),w,b
  5674  002986  0100               	movlb	0	; () banked
  5675  002988  03C3               	mulwf	___wmul@multiplicand& (0+255),b
  5676  00298A  CFF3 F0C5          	movff	prodl,___wmul@product
  5677  00298E  CFF4 F0C6          	movff	prodh,___wmul@product+1
  5678  002992  0100               	movlb	0	; () banked
  5679  002994  51C1               	movf	___wmul@multiplier& (0+255),w,b
  5680  002996  0100               	movlb	0	; () banked
  5681  002998  03C4               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5682  00299A  50F3               	movf	prodl,w,c
  5683  00299C  0100               	movlb	0	; () banked
  5684  00299E  27C6               	addwf	(___wmul@product+1)& (0+255),f,b
  5685  0029A0  0100               	movlb	0	; () banked
  5686  0029A2  51C2               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5687  0029A4  0100               	movlb	0	; () banked
  5688  0029A6  03C3               	mulwf	___wmul@multiplicand& (0+255),b
  5689  0029A8  50F3               	movf	prodl,w,c
  5690  0029AA  0100               	movlb	0	; () banked
  5691  0029AC  27C6               	addwf	(___wmul@product+1)& (0+255),f,b
  5692                           
  5693                           ; BSR set to: 0
  5694  0029AE  C0C5  F0C1         	movff	___wmul@product,?___wmul
  5695  0029B2  C0C6  F0C2         	movff	___wmul@product+1,?___wmul+1
  5696  0029B6  0012               	return	
  5697  0029B8                     __end_of___wmul:
  5698                           	opt stack 0
  5699                           tblptru	equ	0xFF8
  5700                           tblptrh	equ	0xFF7
  5701                           tblptrl	equ	0xFF6
  5702                           tablat	equ	0xFF5
  5703                           prodh	equ	0xFF4
  5704                           prodl	equ	0xFF3
  5705                           intcon	equ	0xFF2
  5706                           postinc0	equ	0xFEE
  5707                           wreg	equ	0xFE8
  5708                           indf1	equ	0xFE7
  5709                           postdec1	equ	0xFE5
  5710                           fsr1h	equ	0xFE2
  5711                           fsr1l	equ	0xFE1
  5712                           indf2	equ	0xFDF
  5713                           fsr2h	equ	0xFDA
  5714                           fsr2l	equ	0xFD9
  5715                           status	equ	0xFD8
  5716                           
  5717 ;; *************** function ___awdiv *****************
  5718 ;; Defined at:
  5719 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;  dividend        2   13[BANK0 ] int 
  5722 ;;  divisor         2   15[BANK0 ] int 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  quotient        2   19[BANK0 ] int 
  5725 ;;  sign            1   18[BANK0 ] unsigned char 
  5726 ;;  counter         1   17[BANK0 ] unsigned char 
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  2   13[BANK0 ] int 
  5729 ;; Registers used:
  5730 ;;		wreg, status,2, status,0
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5736 ;;      Params:         0       4       0       0
  5737 ;;      Locals:         0       4       0       0
  5738 ;;      Temps:          0       0       0       0
  5739 ;;      Totals:         0       8       0       0
  5740 ;;Total ram usage:        8 bytes
  5741 ;; Hardware stack levels used:    1
  5742 ;; Hardware stack levels required when called:    2
  5743 ;; This function calls:
  5744 ;;		Nothing
  5745 ;; This function is called by:
  5746 ;;		_battery_measure
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text11
  5751  002552                     __ptext11:
  5752                           	opt stack 0
  5753  002552                     ___awdiv:
  5754                           	opt stack 27
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;incstack = 0
  5758  002552  0E00               	movlw	0
  5759  002554  0100               	movlb	0	; () banked
  5760  002556  6FCC               	movwf	___awdiv@sign& (0+255),b
  5761                           
  5762                           ; BSR set to: 0
  5763  002558  0100               	movlb	0	; () banked
  5764  00255A  AFCA               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5765  00255C  D008               	goto	l5046
  5766                           
  5767                           ; BSR set to: 0
  5768  00255E  0100               	movlb	0	; () banked
  5769  002560  6DC9               	negf	___awdiv@divisor& (0+255),b
  5770  002562  1FCA               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5771  002564  B0D8               	btfsc	status,0,c
  5772  002566  2BCA               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5773                           
  5774                           ; BSR set to: 0
  5775  002568  0E01               	movlw	1
  5776  00256A  0100               	movlb	0	; () banked
  5777  00256C  6FCC               	movwf	___awdiv@sign& (0+255),b
  5778  00256E                     l5046:
  5779                           
  5780                           ; BSR set to: 0
  5781  00256E  0100               	movlb	0	; () banked
  5782  002570  AFC8               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5783  002572  D008               	goto	l5052
  5784                           
  5785                           ; BSR set to: 0
  5786  002574  0100               	movlb	0	; () banked
  5787  002576  6DC7               	negf	___awdiv@dividend& (0+255),b
  5788  002578  1FC8               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5789  00257A  B0D8               	btfsc	status,0,c
  5790  00257C  2BC8               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5791                           
  5792                           ; BSR set to: 0
  5793  00257E  0E01               	movlw	1
  5794  002580  0100               	movlb	0	; () banked
  5795  002582  1BCC               	xorwf	___awdiv@sign& (0+255),f,b
  5796  002584                     l5052:
  5797                           
  5798                           ; BSR set to: 0
  5799  002584  0E00               	movlw	0
  5800  002586  0100               	movlb	0	; () banked
  5801  002588  6FCE               	movwf	(___awdiv@quotient+1)& (0+255),b
  5802  00258A  0E00               	movlw	0
  5803  00258C  6FCD               	movwf	___awdiv@quotient& (0+255),b
  5804                           
  5805                           ; BSR set to: 0
  5806  00258E  0100               	movlb	0	; () banked
  5807  002590  51C9               	movf	___awdiv@divisor& (0+255),w,b
  5808  002592  0100               	movlb	0	; () banked
  5809  002594  11CA               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5810  002596  B4D8               	btfsc	status,2,c
  5811  002598  D02C               	goto	l5074
  5812                           
  5813                           ; BSR set to: 0
  5814  00259A  0E01               	movlw	1
  5815  00259C  0100               	movlb	0	; () banked
  5816  00259E  6FCB               	movwf	___awdiv@counter& (0+255),b
  5817  0025A0  D006               	goto	l5060
  5818  0025A2                     l5058:
  5819                           
  5820                           ; BSR set to: 0
  5821  0025A2  0100               	movlb	0	; () banked
  5822  0025A4  90D8               	bcf	status,0,c
  5823  0025A6  37C9               	rlcf	___awdiv@divisor& (0+255),f,b
  5824  0025A8  37CA               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5825  0025AA  0100               	movlb	0	; () banked
  5826  0025AC  2BCB               	incf	___awdiv@counter& (0+255),f,b
  5827  0025AE                     l5060:
  5828                           
  5829                           ; BSR set to: 0
  5830  0025AE  0100               	movlb	0	; () banked
  5831  0025B0  AFCA               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5832  0025B2  D7F7               	goto	l5058
  5833  0025B4                     l5062:
  5834                           
  5835                           ; BSR set to: 0
  5836  0025B4  0100               	movlb	0	; () banked
  5837  0025B6  90D8               	bcf	status,0,c
  5838  0025B8  37CD               	rlcf	___awdiv@quotient& (0+255),f,b
  5839  0025BA  37CE               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5840                           
  5841                           ; BSR set to: 0
  5842  0025BC  0100               	movlb	0	; () banked
  5843  0025BE  51C9               	movf	___awdiv@divisor& (0+255),w,b
  5844  0025C0  0100               	movlb	0	; () banked
  5845  0025C2  5DC7               	subwf	___awdiv@dividend& (0+255),w,b
  5846  0025C4  0100               	movlb	0	; () banked
  5847  0025C6  51CA               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5848  0025C8  0100               	movlb	0	; () banked
  5849  0025CA  59C8               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5850  0025CC  A0D8               	btfss	status,0,c
  5851  0025CE  D00A               	goto	l5070
  5852                           
  5853                           ; BSR set to: 0
  5854  0025D0  0100               	movlb	0	; () banked
  5855  0025D2  51C9               	movf	___awdiv@divisor& (0+255),w,b
  5856  0025D4  0100               	movlb	0	; () banked
  5857  0025D6  5FC7               	subwf	___awdiv@dividend& (0+255),f,b
  5858  0025D8  0100               	movlb	0	; () banked
  5859  0025DA  51CA               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5860  0025DC  0100               	movlb	0	; () banked
  5861  0025DE  5BC8               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5862                           
  5863                           ; BSR set to: 0
  5864  0025E0  0100               	movlb	0	; () banked
  5865  0025E2  81CD               	bsf	___awdiv@quotient& (0+255),0,b
  5866  0025E4                     l5070:
  5867                           
  5868                           ; BSR set to: 0
  5869  0025E4  0100               	movlb	0	; () banked
  5870  0025E6  90D8               	bcf	status,0,c
  5871  0025E8  33CA               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5872  0025EA  33C9               	rrcf	___awdiv@divisor& (0+255),f,b
  5873                           
  5874                           ; BSR set to: 0
  5875  0025EC  0100               	movlb	0	; () banked
  5876  0025EE  2FCB               	decfsz	___awdiv@counter& (0+255),f,b
  5877  0025F0  D7E1               	goto	l5062
  5878  0025F2                     l5074:
  5879                           
  5880                           ; BSR set to: 0
  5881  0025F2  0100               	movlb	0	; () banked
  5882  0025F4  51CC               	movf	___awdiv@sign& (0+255),w,b
  5883  0025F6  0100               	movlb	0	; () banked
  5884  0025F8  B4D8               	btfsc	status,2,c
  5885  0025FA  D005               	goto	l5078
  5886                           
  5887                           ; BSR set to: 0
  5888  0025FC  0100               	movlb	0	; () banked
  5889  0025FE  6DCD               	negf	___awdiv@quotient& (0+255),b
  5890  002600  1FCE               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5891  002602  B0D8               	btfsc	status,0,c
  5892  002604  2BCE               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5893  002606                     l5078:
  5894                           
  5895                           ; BSR set to: 0
  5896  002606  C0CD  F0C7         	movff	___awdiv@quotient,?___awdiv
  5897  00260A  C0CE  F0C8         	movff	___awdiv@quotient+1,?___awdiv+1
  5898  00260E  0012               	return	
  5899  002610                     __end_of___awdiv:
  5900                           	opt stack 0
  5901                           tblptru	equ	0xFF8
  5902                           tblptrh	equ	0xFF7
  5903                           tblptrl	equ	0xFF6
  5904                           tablat	equ	0xFF5
  5905                           prodh	equ	0xFF4
  5906                           prodl	equ	0xFF3
  5907                           intcon	equ	0xFF2
  5908                           postinc0	equ	0xFEE
  5909                           wreg	equ	0xFE8
  5910                           indf1	equ	0xFE7
  5911                           postdec1	equ	0xFE5
  5912                           fsr1h	equ	0xFE2
  5913                           fsr1l	equ	0xFE1
  5914                           indf2	equ	0xFDF
  5915                           fsr2h	equ	0xFDA
  5916                           fsr2l	equ	0xFD9
  5917                           status	equ	0xFD8
  5918                           
  5919 ;; *************** function _WriteUSART *****************
  5920 ;; Defined at:
  5921 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uwrite.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;  data            1    wreg     unsigned char 
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;  data            1    0[BANK0 ] unsigned char 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;		None               void
  5928 ;; Registers used:
  5929 ;;		wreg
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5935 ;;      Params:         0       0       0       0
  5936 ;;      Locals:         0       1       0       0
  5937 ;;      Temps:          0       0       0       0
  5938 ;;      Totals:         0       1       0       0
  5939 ;;Total ram usage:        1 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    2
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_main
  5946 ;;		_battery_measure
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text12
  5951  002A8A                     __ptext12:
  5952                           	opt stack 0
  5953  002A8A                     _WriteUSART:
  5954                           	opt stack 27
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;incstack = 0
  5958                           ;WriteUSART@data stored from wreg
  5959  002A8A  0100               	movlb	0	; () banked
  5960  002A8C  6FBA               	movwf	WriteUSART@data& (0+255),b
  5961  002A8E  ACAC               	btfss	4012,6,c	;volatile
  5962  002A90  D003               	goto	l5036
  5963  002A92  90AC               	bcf	4012,0,c	;volatile
  5964  002A94  B238               	btfsc	_USART_Status,1,c
  5965  002A96  80AC               	bsf	4012,0,c	;volatile
  5966  002A98                     l5036:
  5967  002A98  C0BA  FFAD         	movff	WriteUSART@data,4013	;volatile
  5968  002A9C  0012               	return		;funcret
  5969  002A9E                     __end_of_WriteUSART:
  5970                           	opt stack 0
  5971                           tblptru	equ	0xFF8
  5972                           tblptrh	equ	0xFF7
  5973                           tblptrl	equ	0xFF6
  5974                           tablat	equ	0xFF5
  5975                           prodh	equ	0xFF4
  5976                           prodl	equ	0xFF3
  5977                           intcon	equ	0xFF2
  5978                           postinc0	equ	0xFEE
  5979                           wreg	equ	0xFE8
  5980                           indf1	equ	0xFE7
  5981                           postdec1	equ	0xFE5
  5982                           fsr1h	equ	0xFE2
  5983                           fsr1l	equ	0xFE1
  5984                           indf2	equ	0xFDF
  5985                           fsr2h	equ	0xFDA
  5986                           fsr2l	equ	0xFD9
  5987                           status	equ	0xFD8
  5988                           
  5989 ;; *************** function _CANsendMessage *****************
  5990 ;; Defined at:
  5991 ;;		line 294 in file "CANlib.h"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;  identifier      4    0[BANK0 ] unsigned long 
  5994 ;;  data            2    4[BANK0 ] PTR unsigned char 
  5995 ;;		 -> data_array1(8), data_array(8), data_array_debug(8), 
  5996 ;;  dataLength      1    6[BANK0 ] unsigned char 
  5997 ;;  flags           1    7[BANK0 ] enum E16866
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;  tamp            4   12[BANK0 ] unsigned long 
  6000 ;; Return value:  Size  Location     Type
  6001 ;;		None               void
  6002 ;; Registers used:
  6003 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6004 ;; Tracked objects:
  6005 ;;		On entry : 0/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6009 ;;      Params:         0       8       0       0
  6010 ;;      Locals:         0       4       0       0
  6011 ;;      Temps:          0       4       0       0
  6012 ;;      Totals:         0      16       0       0
  6013 ;;Total ram usage:       16 bytes
  6014 ;; Hardware stack levels used:    1
  6015 ;; Hardware stack levels required when called:    2
  6016 ;; This function calls:
  6017 ;;		Nothing
  6018 ;; This function is called by:
  6019 ;;		_main
  6020 ;;		_send_data
  6021 ;;		_battery_measure
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           	psect	text13
  6026  000D1E                     __ptext13:
  6027                           	opt stack 0
  6028  000D1E                     _CANsendMessage:
  6029                           	opt stack 27
  6030                           
  6031                           ;CANlib.h: 296: unsigned long tamp;
  6032                           ;CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  6033                           
  6034                           ;incstack = 0
  6035  000D1E  010F               	movlb	15	; () banked
  6036  000D20  B740               	btfsc	64,3,b	;volatile
  6037  000D22  D13F               	goto	l369
  6038                           
  6039                           ; BSR set to: 15
  6040                           ;CANlib.h: 299: { TXB0DLC = dataLength;
  6041  000D24  C0C0  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  6042                           
  6043                           ;CANlib.h: 300: if (0b01000000 & flags)
  6044  000D28  0100               	movlb	0	; () banked
  6045  000D2A  ADC1               	btfss	CANsendMessage@flags& (0+255),6,b
  6046  000D2C  D003               	goto	l370
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  6050  000D2E  010F               	movlb	15	; () banked
  6051  000D30  8D45               	bsf	69,6,b	;volatile
  6052  000D32  D002               	goto	l371
  6053  000D34                     l370:
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;CANlib.h: 302: else
  6057                           ;CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  6058  000D34  010F               	movlb	15	; () banked
  6059  000D36  9D45               	bcf	69,6,b	;volatile
  6060  000D38                     l371:
  6061                           
  6062                           ; BSR set to: 15
  6063                           ;CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  6064  000D38  0100               	movlb	0	; () banked
  6065  000D3A  A7C1               	btfss	CANsendMessage@flags& (0+255),3,b
  6066  000D3C  D079               	goto	l372
  6067                           
  6068                           ; BSR set to: 0
  6069                           ;CANlib.h: 306: {
  6070                           ;CANlib.h: 308: tamp = identifier & 0x000000FF;
  6071  000D3E  0100               	movlb	0	; () banked
  6072  000D40  51BA               	movf	CANsendMessage@identifier& (0+255),w,b
  6073  000D42  0100               	movlb	0	; () banked
  6074  000D44  6FC6               	movwf	CANsendMessage@tamp& (0+255),b
  6075  000D46  6BC7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6076  000D48  6BC8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6077  000D4A  6BC9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6078                           
  6079                           ; BSR set to: 0
  6080                           ;CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  6081  000D4C  C0C6  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;CANlib.h: 311: tamp = identifier & 0x0000FF00;
  6085  000D50  0E00               	movlw	0
  6086  000D52  0100               	movlb	0	; () banked
  6087  000D54  15BA               	andwf	CANsendMessage@identifier& (0+255),w,b
  6088  000D56  0100               	movlb	0	; () banked
  6089  000D58  6FC6               	movwf	CANsendMessage@tamp& (0+255),b
  6090  000D5A  0EFF               	movlw	255
  6091  000D5C  0100               	movlb	0	; () banked
  6092  000D5E  15BB               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6093  000D60  0100               	movlb	0	; () banked
  6094  000D62  6FC7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6095  000D64  0E00               	movlw	0
  6096  000D66  0100               	movlb	0	; () banked
  6097  000D68  15BC               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6098  000D6A  0100               	movlb	0	; () banked
  6099  000D6C  6FC8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6100  000D6E  0E00               	movlw	0
  6101  000D70  0100               	movlb	0	; () banked
  6102  000D72  15BD               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6103  000D74  0100               	movlb	0	; () banked
  6104  000D76  6FC9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6105                           
  6106                           ; BSR set to: 0
  6107                           ;CANlib.h: 312: tamp = tamp >> 8;
  6108  000D78  C0C6  F0C2         	movff	CANsendMessage@tamp,??_CANsendMessage
  6109  000D7C  C0C7  F0C3         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6110  000D80  C0C8  F0C4         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6111  000D84  C0C9  F0C5         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6112  000D88  C0C3  F0C2         	movff	??_CANsendMessage+1,??_CANsendMessage
  6113  000D8C  C0C4  F0C3         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6114  000D90  C0C5  F0C4         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6115  000D94  0100               	movlb	0	; () banked
  6116  000D96  6BC5               	clrf	(??_CANsendMessage+3)& (0+255),b
  6117  000D98  C0C2  F0C6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6118  000D9C  C0C3  F0C7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6119  000DA0  C0C4  F0C8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6120  000DA4  C0C5  F0C9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  6124  000DA8  C0C6  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;CANlib.h: 315: TXB0SIDL = 0x00;
  6128  000DAC  0E00               	movlw	0
  6129  000DAE  010F               	movlb	15	; () banked
  6130  000DB0  6F42               	movwf	66,b	;volatile
  6131                           
  6132                           ; BSR set to: 15
  6133                           ;CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  6134  000DB2  010F               	movlb	15	; () banked
  6135  000DB4  8742               	bsf	66,3,b	;volatile
  6136                           
  6137                           ; BSR set to: 15
  6138                           ;CANlib.h: 318: if (identifier & 0x00010000)
  6139  000DB6  0100               	movlb	0	; () banked
  6140  000DB8  A1BC               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6141  000DBA  D002               	goto	l373
  6142                           
  6143                           ; BSR set to: 0
  6144                           ;CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  6145  000DBC  010F               	movlb	15	; () banked
  6146  000DBE  8142               	bsf	66,0,b	;volatile
  6147  000DC0                     l373:
  6148                           
  6149                           ;CANlib.h: 320: if (identifier & 0x00020000)
  6150  000DC0  0100               	movlb	0	; () banked
  6151  000DC2  A3BC               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6152  000DC4  D002               	goto	l374
  6153                           
  6154                           ; BSR set to: 0
  6155                           ;CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  6156  000DC6  010F               	movlb	15	; () banked
  6157  000DC8  8342               	bsf	66,1,b	;volatile
  6158  000DCA                     l374:
  6159                           
  6160                           ;CANlib.h: 322: if (identifier & 0x00040000)
  6161  000DCA  0100               	movlb	0	; () banked
  6162  000DCC  A5BC               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6163  000DCE  D002               	goto	l375
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  6167  000DD0  010F               	movlb	15	; () banked
  6168  000DD2  8B42               	bsf	66,5,b	;volatile
  6169  000DD4                     l375:
  6170                           
  6171                           ;CANlib.h: 324: if (identifier & 0x00080000)
  6172  000DD4  0100               	movlb	0	; () banked
  6173  000DD6  A7BC               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6174  000DD8  D002               	goto	l376
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  6178  000DDA  010F               	movlb	15	; () banked
  6179  000DDC  8D42               	bsf	66,6,b	;volatile
  6180  000DDE                     l376:
  6181                           
  6182                           ;CANlib.h: 326: if (identifier & 0x00100000)
  6183  000DDE  0100               	movlb	0	; () banked
  6184  000DE0  A9BC               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6185  000DE2  D002               	goto	l4802
  6186                           
  6187                           ; BSR set to: 0
  6188                           ;CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  6189  000DE4  010F               	movlb	15	; () banked
  6190  000DE6  8F42               	bsf	66,7,b	;volatile
  6191  000DE8                     l4802:
  6192                           
  6193                           ;CANlib.h: 329: tamp = (identifier >> 21);
  6194  000DE8  C0BA  F0C2         	movff	CANsendMessage@identifier,??_CANsendMessage
  6195  000DEC  C0BB  F0C3         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6196  000DF0  C0BC  F0C4         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6197  000DF4  C0BD  F0C5         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6198  000DF8  0E16               	movlw	22
  6199  000DFA  D006               	goto	u6140
  6200  000DFC                     u6145:
  6201  000DFC  0100               	movlb	0	; () banked
  6202  000DFE  90D8               	bcf	status,0,c
  6203  000E00  33C5               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6204  000E02  33C4               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6205  000E04  33C3               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6206  000E06  33C2               	rrcf	??_CANsendMessage& (0+255),f,b
  6207  000E08                     u6140:
  6208  000E08  2EE8               	decfsz	wreg,f,c
  6209  000E0A  D7F8               	goto	u6145
  6210  000E0C  C0C2  F0C6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6211  000E10  C0C3  F0C7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6212  000E14  C0C4  F0C8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6213  000E18  C0C5  F0C9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;CANlib.h: 330: tamp = tamp & 0x000000FF;
  6217  000E1C  0100               	movlb	0	; () banked
  6218  000E1E  51C6               	movf	CANsendMessage@tamp& (0+255),w,b
  6219  000E20  0100               	movlb	0	; () banked
  6220  000E22  6FC6               	movwf	CANsendMessage@tamp& (0+255),b
  6221  000E24  6BC7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6222  000E26  6BC8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6223  000E28  6BC9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6224                           
  6225                           ; BSR set to: 0
  6226                           ;CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  6227  000E2A  C0C6  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  6228                           
  6229                           ;CANlib.h: 332: }
  6230  000E2E  D059               	goto	l4822
  6231  000E30                     l372:
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;CANlib.h: 334: else
  6235                           ;CANlib.h: 336: {
  6236                           ;CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  6237  000E30  010F               	movlb	15	; () banked
  6238  000E32  9742               	bcf	66,3,b	;volatile
  6239                           
  6240                           ; BSR set to: 15
  6241                           ;CANlib.h: 339: tamp = (identifier >> 3);
  6242  000E34  C0BA  F0C2         	movff	CANsendMessage@identifier,??_CANsendMessage
  6243  000E38  C0BB  F0C3         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6244  000E3C  C0BC  F0C4         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6245  000E40  C0BD  F0C5         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6246  000E44  0E04               	movlw	4
  6247  000E46  D006               	goto	u6150
  6248  000E48                     u6155:
  6249  000E48  0100               	movlb	0	; () banked
  6250  000E4A  90D8               	bcf	status,0,c
  6251  000E4C  33C5               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6252  000E4E  33C4               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6253  000E50  33C3               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6254  000E52  33C2               	rrcf	??_CANsendMessage& (0+255),f,b
  6255  000E54                     u6150:
  6256  000E54  2EE8               	decfsz	wreg,f,c
  6257  000E56  D7F8               	goto	u6155
  6258  000E58  C0C2  F0C6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6259  000E5C  C0C3  F0C7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6260  000E60  C0C4  F0C8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6261  000E64  C0C5  F0C9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;CANlib.h: 340: tamp = tamp & 0x000000FF;
  6265  000E68  0100               	movlb	0	; () banked
  6266  000E6A  51C6               	movf	CANsendMessage@tamp& (0+255),w,b
  6267  000E6C  0100               	movlb	0	; () banked
  6268  000E6E  6FC6               	movwf	CANsendMessage@tamp& (0+255),b
  6269  000E70  6BC7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6270  000E72  6BC8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6271  000E74  6BC9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  6275  000E76  C0C6  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  6276                           
  6277                           ; BSR set to: 0
  6278                           ;CANlib.h: 343: tamp = identifier & 0x00000007;
  6279  000E7A  0E07               	movlw	7
  6280  000E7C  0100               	movlb	0	; () banked
  6281  000E7E  15BA               	andwf	CANsendMessage@identifier& (0+255),w,b
  6282  000E80  0100               	movlb	0	; () banked
  6283  000E82  6FC6               	movwf	CANsendMessage@tamp& (0+255),b
  6284  000E84  0E00               	movlw	0
  6285  000E86  0100               	movlb	0	; () banked
  6286  000E88  15BB               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6287  000E8A  0100               	movlb	0	; () banked
  6288  000E8C  6FC7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6289  000E8E  0E00               	movlw	0
  6290  000E90  0100               	movlb	0	; () banked
  6291  000E92  15BC               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6292  000E94  0100               	movlb	0	; () banked
  6293  000E96  6FC8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6294  000E98  0E00               	movlw	0
  6295  000E9A  0100               	movlb	0	; () banked
  6296  000E9C  15BD               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6297  000E9E  0100               	movlb	0	; () banked
  6298  000EA0  6FC9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;CANlib.h: 344: tamp = tamp << 5;
  6302  000EA2  C0C6  F0C2         	movff	CANsendMessage@tamp,??_CANsendMessage
  6303  000EA6  C0C7  F0C3         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6304  000EAA  C0C8  F0C4         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6305  000EAE  C0C9  F0C5         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6306  000EB2  0E05               	movlw	5
  6307  000EB4                     u6165:
  6308  000EB4  90D8               	bcf	status,0,c
  6309  000EB6  0100               	movlb	0	; () banked
  6310  000EB8  37C2               	rlcf	??_CANsendMessage& (0+255),f,b
  6311  000EBA  37C3               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6312  000EBC  37C4               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6313  000EBE  37C5               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6314  000EC0  2EE8               	decfsz	wreg,f,c
  6315  000EC2  D7F8               	goto	u6165
  6316  000EC4  C0C2  F0C6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6317  000EC8  C0C3  F0C7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6318  000ECC  C0C4  F0C8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6319  000ED0  C0C5  F0C9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  6323  000ED4  010F               	movlb	15	; () banked
  6324  000ED6  5142               	movf	66,w,b	;volatile
  6325  000ED8  0B1F               	andlw	31
  6326  000EDA  010F               	movlb	15	; () banked
  6327  000EDC  6F42               	movwf	66,b	;volatile
  6328                           
  6329                           ; BSR set to: 15
  6330                           ;CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  6331  000EDE  C0C6  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  6332  000EE2                     l4822:
  6333                           
  6334                           ;CANlib.h: 347: }
  6335                           ;CANlib.h: 349: if (0b00000001 & flags)
  6336  000EE2  0100               	movlb	0	; () banked
  6337  000EE4  A1C1               	btfss	CANsendMessage@flags& (0+255),0,b
  6338  000EE6  D003               	goto	l379
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  6342  000EE8  010F               	movlb	15	; () banked
  6343  000EEA  8140               	bsf	64,0,b	;volatile
  6344  000EEC  D002               	goto	l380
  6345  000EEE                     l379:
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;CANlib.h: 351: else
  6349                           ;CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  6350  000EEE  010F               	movlb	15	; () banked
  6351  000EF0  9140               	bcf	64,0,b	;volatile
  6352  000EF2                     l380:
  6353                           
  6354                           ; BSR set to: 15
  6355                           ;CANlib.h: 353: if (0b00000010 & flags)
  6356  000EF2  0100               	movlb	0	; () banked
  6357  000EF4  A3C1               	btfss	CANsendMessage@flags& (0+255),1,b
  6358  000EF6  D003               	goto	l381
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  6362  000EF8  010F               	movlb	15	; () banked
  6363  000EFA  8340               	bsf	64,1,b	;volatile
  6364  000EFC  D002               	goto	l4828
  6365  000EFE                     l381:
  6366                           
  6367                           ; BSR set to: 0
  6368                           ;CANlib.h: 355: else
  6369                           ;CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  6370  000EFE  010F               	movlb	15	; () banked
  6371  000F00  9340               	bcf	64,1,b	;volatile
  6372  000F02                     l4828:
  6373                           
  6374                           ; BSR set to: 15
  6375                           ;CANlib.h: 358: TXB0D0 = data[0];
  6376  000F02  C0BE  FFD9         	movff	CANsendMessage@data,fsr2l
  6377  000F06  C0BF  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6378  000F0A  50DF               	movf	indf2,w,c
  6379  000F0C  010F               	movlb	15	; () banked
  6380  000F0E  6F46               	movwf	70,b	;volatile
  6381                           
  6382                           ; BSR set to: 15
  6383                           ;CANlib.h: 359: TXB0D1 = data[1];
  6384  000F10  0100               	movlb	0	; () banked
  6385  000F12  EE20 F001          	lfsr	2,1
  6386  000F16  51BE               	movf	CANsendMessage@data& (0+255),w,b
  6387  000F18  26D9               	addwf	fsr2l,f,c
  6388  000F1A  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6389  000F1C  22DA               	addwfc	fsr2h,f,c
  6390  000F1E  50DF               	movf	indf2,w,c
  6391  000F20  010F               	movlb	15	; () banked
  6392  000F22  6F47               	movwf	71,b	;volatile
  6393                           
  6394                           ; BSR set to: 15
  6395                           ;CANlib.h: 360: TXB0D2 = data[2];
  6396  000F24  0100               	movlb	0	; () banked
  6397  000F26  EE20 F002          	lfsr	2,2
  6398  000F2A  51BE               	movf	CANsendMessage@data& (0+255),w,b
  6399  000F2C  26D9               	addwf	fsr2l,f,c
  6400  000F2E  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6401  000F30  22DA               	addwfc	fsr2h,f,c
  6402  000F32  50DF               	movf	indf2,w,c
  6403  000F34  010F               	movlb	15	; () banked
  6404  000F36  6F48               	movwf	72,b	;volatile
  6405                           
  6406                           ; BSR set to: 15
  6407                           ;CANlib.h: 361: TXB0D3 = data[3];
  6408  000F38  0100               	movlb	0	; () banked
  6409  000F3A  EE20 F003          	lfsr	2,3
  6410  000F3E  51BE               	movf	CANsendMessage@data& (0+255),w,b
  6411  000F40  26D9               	addwf	fsr2l,f,c
  6412  000F42  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6413  000F44  22DA               	addwfc	fsr2h,f,c
  6414  000F46  50DF               	movf	indf2,w,c
  6415  000F48  010F               	movlb	15	; () banked
  6416  000F4A  6F49               	movwf	73,b	;volatile
  6417                           
  6418                           ; BSR set to: 15
  6419                           ;CANlib.h: 362: TXB0D4 = data[4];
  6420  000F4C  0100               	movlb	0	; () banked
  6421  000F4E  EE20 F004          	lfsr	2,4
  6422  000F52  51BE               	movf	CANsendMessage@data& (0+255),w,b
  6423  000F54  26D9               	addwf	fsr2l,f,c
  6424  000F56  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6425  000F58  22DA               	addwfc	fsr2h,f,c
  6426  000F5A  50DF               	movf	indf2,w,c
  6427  000F5C  010F               	movlb	15	; () banked
  6428  000F5E  6F4A               	movwf	74,b	;volatile
  6429                           
  6430                           ; BSR set to: 15
  6431                           ;CANlib.h: 363: TXB0D5 = data[5];
  6432  000F60  0100               	movlb	0	; () banked
  6433  000F62  EE20 F005          	lfsr	2,5
  6434  000F66  51BE               	movf	CANsendMessage@data& (0+255),w,b
  6435  000F68  26D9               	addwf	fsr2l,f,c
  6436  000F6A  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6437  000F6C  22DA               	addwfc	fsr2h,f,c
  6438  000F6E  50DF               	movf	indf2,w,c
  6439  000F70  010F               	movlb	15	; () banked
  6440  000F72  6F4B               	movwf	75,b	;volatile
  6441                           
  6442                           ; BSR set to: 15
  6443                           ;CANlib.h: 364: TXB0D6 = data[6];
  6444  000F74  0100               	movlb	0	; () banked
  6445  000F76  EE20 F006          	lfsr	2,6
  6446  000F7A  51BE               	movf	CANsendMessage@data& (0+255),w,b
  6447  000F7C  26D9               	addwf	fsr2l,f,c
  6448  000F7E  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6449  000F80  22DA               	addwfc	fsr2h,f,c
  6450  000F82  50DF               	movf	indf2,w,c
  6451  000F84  010F               	movlb	15	; () banked
  6452  000F86  6F4C               	movwf	76,b	;volatile
  6453                           
  6454                           ; BSR set to: 15
  6455                           ;CANlib.h: 365: TXB0D7 = data[7];
  6456  000F88  0100               	movlb	0	; () banked
  6457  000F8A  EE20 F007          	lfsr	2,7
  6458  000F8E  51BE               	movf	CANsendMessage@data& (0+255),w,b
  6459  000F90  26D9               	addwf	fsr2l,f,c
  6460  000F92  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6461  000F94  22DA               	addwfc	fsr2h,f,c
  6462  000F96  50DF               	movf	indf2,w,c
  6463  000F98  010F               	movlb	15	; () banked
  6464  000F9A  6F4D               	movwf	77,b	;volatile
  6465                           
  6466                           ; BSR set to: 15
  6467                           ;CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  6468  000F9C  010F               	movlb	15	; () banked
  6469  000F9E  8740               	bsf	64,3,b	;volatile
  6470                           
  6471                           ; BSR set to: 15
  6472                           ;CANlib.h: 368: return;
  6473  000FA0  0012               	return	
  6474  000FA2                     l369:
  6475                           
  6476                           ; BSR set to: 15
  6477                           ;CANlib.h: 369: }
  6478                           ;CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  6479  000FA2  010F               	movlb	15	; () banked
  6480  000FA4  B730               	btfsc	48,3,b	;volatile
  6481  000FA6  D13F               	goto	l384
  6482                           
  6483                           ; BSR set to: 15
  6484                           ;CANlib.h: 374: { TXB1DLC = dataLength;
  6485  000FA8  C0C0  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  6486                           
  6487                           ;CANlib.h: 376: if (0b01000000 & flags)
  6488  000FAC  0100               	movlb	0	; () banked
  6489  000FAE  ADC1               	btfss	CANsendMessage@flags& (0+255),6,b
  6490  000FB0  D003               	goto	l385
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  6494  000FB2  010F               	movlb	15	; () banked
  6495  000FB4  8D35               	bsf	53,6,b	;volatile
  6496  000FB6  D002               	goto	l386
  6497  000FB8                     l385:
  6498                           
  6499                           ; BSR set to: 0
  6500                           ;CANlib.h: 378: else
  6501                           ;CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  6502  000FB8  010F               	movlb	15	; () banked
  6503  000FBA  9D35               	bcf	53,6,b	;volatile
  6504  000FBC                     l386:
  6505                           
  6506                           ; BSR set to: 15
  6507                           ;CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  6508  000FBC  0100               	movlb	0	; () banked
  6509  000FBE  A7C1               	btfss	CANsendMessage@flags& (0+255),3,b
  6510  000FC0  D079               	goto	l387
  6511                           
  6512                           ; BSR set to: 0
  6513                           ;CANlib.h: 382: {
  6514                           ;CANlib.h: 383: tamp = identifier & 0x000000FF;
  6515  000FC2  0100               	movlb	0	; () banked
  6516  000FC4  51BA               	movf	CANsendMessage@identifier& (0+255),w,b
  6517  000FC6  0100               	movlb	0	; () banked
  6518  000FC8  6FC6               	movwf	CANsendMessage@tamp& (0+255),b
  6519  000FCA  6BC7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6520  000FCC  6BC8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6521  000FCE  6BC9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  6525  000FD0  C0C6  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  6526                           
  6527                           ; BSR set to: 0
  6528                           ;CANlib.h: 386: tamp = identifier & 0x0000FF00;
  6529  000FD4  0E00               	movlw	0
  6530  000FD6  0100               	movlb	0	; () banked
  6531  000FD8  15BA               	andwf	CANsendMessage@identifier& (0+255),w,b
  6532  000FDA  0100               	movlb	0	; () banked
  6533  000FDC  6FC6               	movwf	CANsendMessage@tamp& (0+255),b
  6534  000FDE  0EFF               	movlw	255
  6535  000FE0  0100               	movlb	0	; () banked
  6536  000FE2  15BB               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6537  000FE4  0100               	movlb	0	; () banked
  6538  000FE6  6FC7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6539  000FE8  0E00               	movlw	0
  6540  000FEA  0100               	movlb	0	; () banked
  6541  000FEC  15BC               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6542  000FEE  0100               	movlb	0	; () banked
  6543  000FF0  6FC8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6544  000FF2  0E00               	movlw	0
  6545  000FF4  0100               	movlb	0	; () banked
  6546  000FF6  15BD               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6547  000FF8  0100               	movlb	0	; () banked
  6548  000FFA  6FC9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6549                           
  6550                           ; BSR set to: 0
  6551                           ;CANlib.h: 387: tamp = tamp >> 8;
  6552  000FFC  C0C6  F0C2         	movff	CANsendMessage@tamp,??_CANsendMessage
  6553  001000  C0C7  F0C3         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6554  001004  C0C8  F0C4         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6555  001008  C0C9  F0C5         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6556  00100C  C0C3  F0C2         	movff	??_CANsendMessage+1,??_CANsendMessage
  6557  001010  C0C4  F0C3         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6558  001014  C0C5  F0C4         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6559  001018  0100               	movlb	0	; () banked
  6560  00101A  6BC5               	clrf	(??_CANsendMessage+3)& (0+255),b
  6561  00101C  C0C2  F0C6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6562  001020  C0C3  F0C7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6563  001024  C0C4  F0C8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6564  001028  C0C5  F0C9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6565                           
  6566                           ; BSR set to: 0
  6567                           ;CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  6568  00102C  C0C6  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  6569                           
  6570                           ; BSR set to: 0
  6571                           ;CANlib.h: 390: TXB1SIDL = 0x00;
  6572  001030  0E00               	movlw	0
  6573  001032  010F               	movlb	15	; () banked
  6574  001034  6F32               	movwf	50,b	;volatile
  6575                           
  6576                           ; BSR set to: 15
  6577                           ;CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  6578  001036  010F               	movlb	15	; () banked
  6579  001038  8732               	bsf	50,3,b	;volatile
  6580                           
  6581                           ; BSR set to: 15
  6582                           ;CANlib.h: 393: if (identifier & 0x00010000)
  6583  00103A  0100               	movlb	0	; () banked
  6584  00103C  A1BC               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6585  00103E  D002               	goto	l388
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  6589  001040  010F               	movlb	15	; () banked
  6590  001042  8132               	bsf	50,0,b	;volatile
  6591  001044                     l388:
  6592                           
  6593                           ;CANlib.h: 395: if (identifier & 0x00020000)
  6594  001044  0100               	movlb	0	; () banked
  6595  001046  A3BC               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6596  001048  D002               	goto	l389
  6597                           
  6598                           ; BSR set to: 0
  6599                           ;CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  6600  00104A  010F               	movlb	15	; () banked
  6601  00104C  8332               	bsf	50,1,b	;volatile
  6602  00104E                     l389:
  6603                           
  6604                           ;CANlib.h: 397: if (identifier & 0x00040000)
  6605  00104E  0100               	movlb	0	; () banked
  6606  001050  A5BC               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6607  001052  D002               	goto	l390
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  6611  001054  010F               	movlb	15	; () banked
  6612  001056  8B32               	bsf	50,5,b	;volatile
  6613  001058                     l390:
  6614                           
  6615                           ;CANlib.h: 399: if (identifier & 0x00080000)
  6616  001058  0100               	movlb	0	; () banked
  6617  00105A  A7BC               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6618  00105C  D002               	goto	l391
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  6622  00105E  010F               	movlb	15	; () banked
  6623  001060  8D32               	bsf	50,6,b	;volatile
  6624  001062                     l391:
  6625                           
  6626                           ;CANlib.h: 401: if (identifier & 0x00100000)
  6627  001062  0100               	movlb	0	; () banked
  6628  001064  A9BC               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6629  001066  D002               	goto	l4878
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  6633  001068  010F               	movlb	15	; () banked
  6634  00106A  8F32               	bsf	50,7,b	;volatile
  6635  00106C                     l4878:
  6636                           
  6637                           ;CANlib.h: 404: tamp = (identifier >> 21);
  6638  00106C  C0BA  F0C2         	movff	CANsendMessage@identifier,??_CANsendMessage
  6639  001070  C0BB  F0C3         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6640  001074  C0BC  F0C4         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6641  001078  C0BD  F0C5         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6642  00107C  0E16               	movlw	22
  6643  00107E  D006               	goto	u6270
  6644  001080                     u6275:
  6645  001080  0100               	movlb	0	; () banked
  6646  001082  90D8               	bcf	status,0,c
  6647  001084  33C5               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6648  001086  33C4               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6649  001088  33C3               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6650  00108A  33C2               	rrcf	??_CANsendMessage& (0+255),f,b
  6651  00108C                     u6270:
  6652  00108C  2EE8               	decfsz	wreg,f,c
  6653  00108E  D7F8               	goto	u6275
  6654  001090  C0C2  F0C6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6655  001094  C0C3  F0C7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6656  001098  C0C4  F0C8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6657  00109C  C0C5  F0C9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6658                           
  6659                           ; BSR set to: 0
  6660                           ;CANlib.h: 405: tamp = tamp & 0x000000FF;
  6661  0010A0  0100               	movlb	0	; () banked
  6662  0010A2  51C6               	movf	CANsendMessage@tamp& (0+255),w,b
  6663  0010A4  0100               	movlb	0	; () banked
  6664  0010A6  6FC6               	movwf	CANsendMessage@tamp& (0+255),b
  6665  0010A8  6BC7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6666  0010AA  6BC8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6667  0010AC  6BC9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  6671  0010AE  C0C6  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6672                           
  6673                           ;CANlib.h: 407: }
  6674  0010B2  D059               	goto	l4898
  6675  0010B4                     l387:
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;CANlib.h: 409: else
  6679                           ;CANlib.h: 411: {
  6680                           ;CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  6681  0010B4  010F               	movlb	15	; () banked
  6682  0010B6  9732               	bcf	50,3,b	;volatile
  6683                           
  6684                           ; BSR set to: 15
  6685                           ;CANlib.h: 414: tamp = (identifier >> 3);
  6686  0010B8  C0BA  F0C2         	movff	CANsendMessage@identifier,??_CANsendMessage
  6687  0010BC  C0BB  F0C3         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6688  0010C0  C0BC  F0C4         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6689  0010C4  C0BD  F0C5         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6690  0010C8  0E04               	movlw	4
  6691  0010CA  D006               	goto	u6280
  6692  0010CC                     u6285:
  6693  0010CC  0100               	movlb	0	; () banked
  6694  0010CE  90D8               	bcf	status,0,c
  6695  0010D0  33C5               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6696  0010D2  33C4               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6697  0010D4  33C3               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6698  0010D6  33C2               	rrcf	??_CANsendMessage& (0+255),f,b
  6699  0010D8                     u6280:
  6700  0010D8  2EE8               	decfsz	wreg,f,c
  6701  0010DA  D7F8               	goto	u6285
  6702  0010DC  C0C2  F0C6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6703  0010E0  C0C3  F0C7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6704  0010E4  C0C4  F0C8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6705  0010E8  C0C5  F0C9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6706                           
  6707                           ; BSR set to: 0
  6708                           ;CANlib.h: 415: tamp = tamp & 0x000000FF;
  6709  0010EC  0100               	movlb	0	; () banked
  6710  0010EE  51C6               	movf	CANsendMessage@tamp& (0+255),w,b
  6711  0010F0  0100               	movlb	0	; () banked
  6712  0010F2  6FC6               	movwf	CANsendMessage@tamp& (0+255),b
  6713  0010F4  6BC7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6714  0010F6  6BC8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6715  0010F8  6BC9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  6719  0010FA  C0C6  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6720                           
  6721                           ; BSR set to: 0
  6722                           ;CANlib.h: 418: tamp = identifier & 0x00000007;
  6723  0010FE  0E07               	movlw	7
  6724  001100  0100               	movlb	0	; () banked
  6725  001102  15BA               	andwf	CANsendMessage@identifier& (0+255),w,b
  6726  001104  0100               	movlb	0	; () banked
  6727  001106  6FC6               	movwf	CANsendMessage@tamp& (0+255),b
  6728  001108  0E00               	movlw	0
  6729  00110A  0100               	movlb	0	; () banked
  6730  00110C  15BB               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6731  00110E  0100               	movlb	0	; () banked
  6732  001110  6FC7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6733  001112  0E00               	movlw	0
  6734  001114  0100               	movlb	0	; () banked
  6735  001116  15BC               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6736  001118  0100               	movlb	0	; () banked
  6737  00111A  6FC8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6738  00111C  0E00               	movlw	0
  6739  00111E  0100               	movlb	0	; () banked
  6740  001120  15BD               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6741  001122  0100               	movlb	0	; () banked
  6742  001124  6FC9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6743                           
  6744                           ; BSR set to: 0
  6745                           ;CANlib.h: 419: tamp = tamp << 5;
  6746  001126  C0C6  F0C2         	movff	CANsendMessage@tamp,??_CANsendMessage
  6747  00112A  C0C7  F0C3         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6748  00112E  C0C8  F0C4         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6749  001132  C0C9  F0C5         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6750  001136  0E05               	movlw	5
  6751  001138                     u6295:
  6752  001138  90D8               	bcf	status,0,c
  6753  00113A  0100               	movlb	0	; () banked
  6754  00113C  37C2               	rlcf	??_CANsendMessage& (0+255),f,b
  6755  00113E  37C3               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  6756  001140  37C4               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  6757  001142  37C5               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  6758  001144  2EE8               	decfsz	wreg,f,c
  6759  001146  D7F8               	goto	u6295
  6760  001148  C0C2  F0C6         	movff	??_CANsendMessage,CANsendMessage@tamp
  6761  00114C  C0C3  F0C7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6762  001150  C0C4  F0C8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6763  001154  C0C5  F0C9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  6767  001158  010F               	movlb	15	; () banked
  6768  00115A  5132               	movf	50,w,b	;volatile
  6769  00115C  0B1F               	andlw	31
  6770  00115E  010F               	movlb	15	; () banked
  6771  001160  6F32               	movwf	50,b	;volatile
  6772                           
  6773                           ; BSR set to: 15
  6774                           ;CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  6775  001162  C0C6  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6776  001166                     l4898:
  6777                           
  6778                           ;CANlib.h: 422: }
  6779                           ;CANlib.h: 424: if (0b00000001 & flags)
  6780  001166  0100               	movlb	0	; () banked
  6781  001168  A1C1               	btfss	CANsendMessage@flags& (0+255),0,b
  6782  00116A  D003               	goto	l394
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  6786  00116C  010F               	movlb	15	; () banked
  6787  00116E  8130               	bsf	48,0,b	;volatile
  6788  001170  D002               	goto	l395
  6789  001172                     l394:
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;CANlib.h: 426: else
  6793                           ;CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  6794  001172  010F               	movlb	15	; () banked
  6795  001174  9130               	bcf	48,0,b	;volatile
  6796  001176                     l395:
  6797                           
  6798                           ; BSR set to: 15
  6799                           ;CANlib.h: 428: if (0b00000010 & flags)
  6800  001176  0100               	movlb	0	; () banked
  6801  001178  A3C1               	btfss	CANsendMessage@flags& (0+255),1,b
  6802  00117A  D003               	goto	l396
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  6806  00117C  010F               	movlb	15	; () banked
  6807  00117E  8330               	bsf	48,1,b	;volatile
  6808  001180  D002               	goto	l4904
  6809  001182                     l396:
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;CANlib.h: 430: else
  6813                           ;CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  6814  001182  010F               	movlb	15	; () banked
  6815  001184  9330               	bcf	48,1,b	;volatile
  6816  001186                     l4904:
  6817                           
  6818                           ; BSR set to: 15
  6819                           ;CANlib.h: 433: TXB1D0 = data[0];
  6820  001186  C0BE  FFD9         	movff	CANsendMessage@data,fsr2l
  6821  00118A  C0BF  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6822  00118E  50DF               	movf	indf2,w,c
  6823  001190  010F               	movlb	15	; () banked
  6824  001192  6F36               	movwf	54,b	;volatile
  6825                           
  6826                           ; BSR set to: 15
  6827                           ;CANlib.h: 434: TXB1D1 = data[1];
  6828  001194  0100               	movlb	0	; () banked
  6829  001196  EE20 F001          	lfsr	2,1
  6830  00119A  51BE               	movf	CANsendMessage@data& (0+255),w,b
  6831  00119C  26D9               	addwf	fsr2l,f,c
  6832  00119E  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6833  0011A0  22DA               	addwfc	fsr2h,f,c
  6834  0011A2  50DF               	movf	indf2,w,c
  6835  0011A4  010F               	movlb	15	; () banked
  6836  0011A6  6F37               	movwf	55,b	;volatile
  6837                           
  6838                           ; BSR set to: 15
  6839                           ;CANlib.h: 435: TXB1D2 = data[2];
  6840  0011A8  0100               	movlb	0	; () banked
  6841  0011AA  EE20 F002          	lfsr	2,2
  6842  0011AE  51BE               	movf	CANsendMessage@data& (0+255),w,b
  6843  0011B0  26D9               	addwf	fsr2l,f,c
  6844  0011B2  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6845  0011B4  22DA               	addwfc	fsr2h,f,c
  6846  0011B6  50DF               	movf	indf2,w,c
  6847  0011B8  010F               	movlb	15	; () banked
  6848  0011BA  6F38               	movwf	56,b	;volatile
  6849                           
  6850                           ; BSR set to: 15
  6851                           ;CANlib.h: 436: TXB1D3 = data[3];
  6852  0011BC  0100               	movlb	0	; () banked
  6853  0011BE  EE20 F003          	lfsr	2,3
  6854  0011C2  51BE               	movf	CANsendMessage@data& (0+255),w,b
  6855  0011C4  26D9               	addwf	fsr2l,f,c
  6856  0011C6  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6857  0011C8  22DA               	addwfc	fsr2h,f,c
  6858  0011CA  50DF               	movf	indf2,w,c
  6859  0011CC  010F               	movlb	15	; () banked
  6860  0011CE  6F39               	movwf	57,b	;volatile
  6861                           
  6862                           ; BSR set to: 15
  6863                           ;CANlib.h: 437: TXB1D4 = data[4];
  6864  0011D0  0100               	movlb	0	; () banked
  6865  0011D2  EE20 F004          	lfsr	2,4
  6866  0011D6  51BE               	movf	CANsendMessage@data& (0+255),w,b
  6867  0011D8  26D9               	addwf	fsr2l,f,c
  6868  0011DA  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6869  0011DC  22DA               	addwfc	fsr2h,f,c
  6870  0011DE  50DF               	movf	indf2,w,c
  6871  0011E0  010F               	movlb	15	; () banked
  6872  0011E2  6F3A               	movwf	58,b	;volatile
  6873                           
  6874                           ; BSR set to: 15
  6875                           ;CANlib.h: 438: TXB1D5 = data[5];
  6876  0011E4  0100               	movlb	0	; () banked
  6877  0011E6  EE20 F005          	lfsr	2,5
  6878  0011EA  51BE               	movf	CANsendMessage@data& (0+255),w,b
  6879  0011EC  26D9               	addwf	fsr2l,f,c
  6880  0011EE  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6881  0011F0  22DA               	addwfc	fsr2h,f,c
  6882  0011F2  50DF               	movf	indf2,w,c
  6883  0011F4  010F               	movlb	15	; () banked
  6884  0011F6  6F3B               	movwf	59,b	;volatile
  6885                           
  6886                           ; BSR set to: 15
  6887                           ;CANlib.h: 439: TXB1D6 = data[6];
  6888  0011F8  0100               	movlb	0	; () banked
  6889  0011FA  EE20 F006          	lfsr	2,6
  6890  0011FE  51BE               	movf	CANsendMessage@data& (0+255),w,b
  6891  001200  26D9               	addwf	fsr2l,f,c
  6892  001202  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6893  001204  22DA               	addwfc	fsr2h,f,c
  6894  001206  50DF               	movf	indf2,w,c
  6895  001208  010F               	movlb	15	; () banked
  6896  00120A  6F3C               	movwf	60,b	;volatile
  6897                           
  6898                           ; BSR set to: 15
  6899                           ;CANlib.h: 440: TXB1D7 = data[7];
  6900  00120C  0100               	movlb	0	; () banked
  6901  00120E  EE20 F007          	lfsr	2,7
  6902  001212  51BE               	movf	CANsendMessage@data& (0+255),w,b
  6903  001214  26D9               	addwf	fsr2l,f,c
  6904  001216  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6905  001218  22DA               	addwfc	fsr2h,f,c
  6906  00121A  50DF               	movf	indf2,w,c
  6907  00121C  010F               	movlb	15	; () banked
  6908  00121E  6F3D               	movwf	61,b	;volatile
  6909                           
  6910                           ; BSR set to: 15
  6911                           ;CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  6912  001220  010F               	movlb	15	; () banked
  6913  001222  8730               	bsf	48,3,b	;volatile
  6914                           
  6915                           ; BSR set to: 15
  6916                           ;CANlib.h: 444: return;
  6917  001224  0012               	return	
  6918  001226                     l384:
  6919                           
  6920                           ; BSR set to: 15
  6921                           ;CANlib.h: 445: }
  6922                           ;CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  6923  001226  010F               	movlb	15	; () banked
  6924  001228  B720               	btfsc	32,3,b	;volatile
  6925  00122A  0012               	return	
  6926                           
  6927                           ; BSR set to: 15
  6928                           ;CANlib.h: 450: { TXB2DLC = dataLength;
  6929  00122C  C0C0  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6930                           
  6931                           ;CANlib.h: 452: if (0b01000000 & flags)
  6932  001230  0100               	movlb	0	; () banked
  6933  001232  ADC1               	btfss	CANsendMessage@flags& (0+255),6,b
  6934  001234  D003               	goto	l399
  6935                           
  6936                           ; BSR set to: 0
  6937                           ;CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  6938  001236  010F               	movlb	15	; () banked
  6939  001238  8D25               	bsf	37,6,b	;volatile
  6940  00123A  D002               	goto	l400
  6941  00123C                     l399:
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;CANlib.h: 454: else
  6945                           ;CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  6946  00123C  010F               	movlb	15	; () banked
  6947  00123E  9D25               	bcf	37,6,b	;volatile
  6948  001240                     l400:
  6949                           
  6950                           ; BSR set to: 15
  6951                           ;CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  6952  001240  0100               	movlb	0	; () banked
  6953  001242  A7C1               	btfss	CANsendMessage@flags& (0+255),3,b
  6954  001244  D079               	goto	l401
  6955                           
  6956                           ; BSR set to: 0
  6957                           ;CANlib.h: 458: {
  6958                           ;CANlib.h: 459: tamp = identifier & 0x000000FF;
  6959  001246  0100               	movlb	0	; () banked
  6960  001248  51BA               	movf	CANsendMessage@identifier& (0+255),w,b
  6961  00124A  0100               	movlb	0	; () banked
  6962  00124C  6FC6               	movwf	CANsendMessage@tamp& (0+255),b
  6963  00124E  6BC7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6964  001250  6BC8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6965  001252  6BC9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  6969  001254  C0C6  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6970                           
  6971                           ; BSR set to: 0
  6972                           ;CANlib.h: 462: tamp = identifier & 0x0000FF00;
  6973  001258  0E00               	movlw	0
  6974  00125A  0100               	movlb	0	; () banked
  6975  00125C  15BA               	andwf	CANsendMessage@identifier& (0+255),w,b
  6976  00125E  0100               	movlb	0	; () banked
  6977  001260  6FC6               	movwf	CANsendMessage@tamp& (0+255),b
  6978  001262  0EFF               	movlw	255
  6979  001264  0100               	movlb	0	; () banked
  6980  001266  15BB               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6981  001268  0100               	movlb	0	; () banked
  6982  00126A  6FC7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6983  00126C  0E00               	movlw	0
  6984  00126E  0100               	movlb	0	; () banked
  6985  001270  15BC               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6986  001272  0100               	movlb	0	; () banked
  6987  001274  6FC8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6988  001276  0E00               	movlw	0
  6989  001278  0100               	movlb	0	; () banked
  6990  00127A  15BD               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6991  00127C  0100               	movlb	0	; () banked
  6992  00127E  6FC9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;CANlib.h: 463: tamp = tamp >> 8;
  6996  001280  C0C6  F0C2         	movff	CANsendMessage@tamp,??_CANsendMessage
  6997  001284  C0C7  F0C3         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6998  001288  C0C8  F0C4         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6999  00128C  C0C9  F0C5         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7000  001290  C0C3  F0C2         	movff	??_CANsendMessage+1,??_CANsendMessage
  7001  001294  C0C4  F0C3         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  7002  001298  C0C5  F0C4         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  7003  00129C  0100               	movlb	0	; () banked
  7004  00129E  6BC5               	clrf	(??_CANsendMessage+3)& (0+255),b
  7005  0012A0  C0C2  F0C6         	movff	??_CANsendMessage,CANsendMessage@tamp
  7006  0012A4  C0C3  F0C7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7007  0012A8  C0C4  F0C8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7008  0012AC  C0C5  F0C9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  7012  0012B0  C0C6  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;CANlib.h: 466: TXB2SIDL = 0x00;
  7016  0012B4  0E00               	movlw	0
  7017  0012B6  010F               	movlb	15	; () banked
  7018  0012B8  6F22               	movwf	34,b	;volatile
  7019                           
  7020                           ; BSR set to: 15
  7021                           ;CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  7022  0012BA  010F               	movlb	15	; () banked
  7023  0012BC  8722               	bsf	34,3,b	;volatile
  7024                           
  7025                           ; BSR set to: 15
  7026                           ;CANlib.h: 469: if (identifier & 0x00010000)
  7027  0012BE  0100               	movlb	0	; () banked
  7028  0012C0  A1BC               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  7029  0012C2  D002               	goto	l402
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  7033  0012C4  010F               	movlb	15	; () banked
  7034  0012C6  8122               	bsf	34,0,b	;volatile
  7035  0012C8                     l402:
  7036                           
  7037                           ;CANlib.h: 471: if (identifier & 0x00020000)
  7038  0012C8  0100               	movlb	0	; () banked
  7039  0012CA  A3BC               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  7040  0012CC  D002               	goto	l403
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  7044  0012CE  010F               	movlb	15	; () banked
  7045  0012D0  8322               	bsf	34,1,b	;volatile
  7046  0012D2                     l403:
  7047                           
  7048                           ;CANlib.h: 473: if (identifier & 0x00040000)
  7049  0012D2  0100               	movlb	0	; () banked
  7050  0012D4  A5BC               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  7051  0012D6  D002               	goto	l404
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  7055  0012D8  010F               	movlb	15	; () banked
  7056  0012DA  8B22               	bsf	34,5,b	;volatile
  7057  0012DC                     l404:
  7058                           
  7059                           ;CANlib.h: 475: if (identifier & 0x00080000)
  7060  0012DC  0100               	movlb	0	; () banked
  7061  0012DE  A7BC               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  7062  0012E0  D002               	goto	l405
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  7066  0012E2  010F               	movlb	15	; () banked
  7067  0012E4  8D22               	bsf	34,6,b	;volatile
  7068  0012E6                     l405:
  7069                           
  7070                           ;CANlib.h: 477: if (identifier & 0x00100000)
  7071  0012E6  0100               	movlb	0	; () banked
  7072  0012E8  A9BC               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  7073  0012EA  D002               	goto	l4954
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  7077  0012EC  010F               	movlb	15	; () banked
  7078  0012EE  8F22               	bsf	34,7,b	;volatile
  7079  0012F0                     l4954:
  7080                           
  7081                           ;CANlib.h: 480: tamp = (identifier >> 21);
  7082  0012F0  C0BA  F0C2         	movff	CANsendMessage@identifier,??_CANsendMessage
  7083  0012F4  C0BB  F0C3         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7084  0012F8  C0BC  F0C4         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7085  0012FC  C0BD  F0C5         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7086  001300  0E16               	movlw	22
  7087  001302  D006               	goto	u6400
  7088  001304                     u6405:
  7089  001304  0100               	movlb	0	; () banked
  7090  001306  90D8               	bcf	status,0,c
  7091  001308  33C5               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7092  00130A  33C4               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7093  00130C  33C3               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7094  00130E  33C2               	rrcf	??_CANsendMessage& (0+255),f,b
  7095  001310                     u6400:
  7096  001310  2EE8               	decfsz	wreg,f,c
  7097  001312  D7F8               	goto	u6405
  7098  001314  C0C2  F0C6         	movff	??_CANsendMessage,CANsendMessage@tamp
  7099  001318  C0C3  F0C7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7100  00131C  C0C4  F0C8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7101  001320  C0C5  F0C9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;CANlib.h: 481: tamp = tamp & 0x000000FF;
  7105  001324  0100               	movlb	0	; () banked
  7106  001326  51C6               	movf	CANsendMessage@tamp& (0+255),w,b
  7107  001328  0100               	movlb	0	; () banked
  7108  00132A  6FC6               	movwf	CANsendMessage@tamp& (0+255),b
  7109  00132C  6BC7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7110  00132E  6BC8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7111  001330  6BC9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  7115  001332  C0C6  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  7116                           
  7117                           ;CANlib.h: 483: }
  7118  001336  D059               	goto	l4974
  7119  001338                     l401:
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;CANlib.h: 485: else
  7123                           ;CANlib.h: 487: {
  7124                           ;CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  7125  001338  010F               	movlb	15	; () banked
  7126  00133A  9722               	bcf	34,3,b	;volatile
  7127                           
  7128                           ; BSR set to: 15
  7129                           ;CANlib.h: 490: tamp = (identifier >> 3);
  7130  00133C  C0BA  F0C2         	movff	CANsendMessage@identifier,??_CANsendMessage
  7131  001340  C0BB  F0C3         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7132  001344  C0BC  F0C4         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7133  001348  C0BD  F0C5         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7134  00134C  0E04               	movlw	4
  7135  00134E  D006               	goto	u6410
  7136  001350                     u6415:
  7137  001350  0100               	movlb	0	; () banked
  7138  001352  90D8               	bcf	status,0,c
  7139  001354  33C5               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7140  001356  33C4               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7141  001358  33C3               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7142  00135A  33C2               	rrcf	??_CANsendMessage& (0+255),f,b
  7143  00135C                     u6410:
  7144  00135C  2EE8               	decfsz	wreg,f,c
  7145  00135E  D7F8               	goto	u6415
  7146  001360  C0C2  F0C6         	movff	??_CANsendMessage,CANsendMessage@tamp
  7147  001364  C0C3  F0C7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7148  001368  C0C4  F0C8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7149  00136C  C0C5  F0C9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;CANlib.h: 491: tamp = tamp & 0x000000FF;
  7153  001370  0100               	movlb	0	; () banked
  7154  001372  51C6               	movf	CANsendMessage@tamp& (0+255),w,b
  7155  001374  0100               	movlb	0	; () banked
  7156  001376  6FC6               	movwf	CANsendMessage@tamp& (0+255),b
  7157  001378  6BC7               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7158  00137A  6BC8               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7159  00137C  6BC9               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  7163  00137E  C0C6  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;CANlib.h: 494: tamp = identifier & 0x00000007;
  7167  001382  0E07               	movlw	7
  7168  001384  0100               	movlb	0	; () banked
  7169  001386  15BA               	andwf	CANsendMessage@identifier& (0+255),w,b
  7170  001388  0100               	movlb	0	; () banked
  7171  00138A  6FC6               	movwf	CANsendMessage@tamp& (0+255),b
  7172  00138C  0E00               	movlw	0
  7173  00138E  0100               	movlb	0	; () banked
  7174  001390  15BB               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  7175  001392  0100               	movlb	0	; () banked
  7176  001394  6FC7               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  7177  001396  0E00               	movlw	0
  7178  001398  0100               	movlb	0	; () banked
  7179  00139A  15BC               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  7180  00139C  0100               	movlb	0	; () banked
  7181  00139E  6FC8               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  7182  0013A0  0E00               	movlw	0
  7183  0013A2  0100               	movlb	0	; () banked
  7184  0013A4  15BD               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  7185  0013A6  0100               	movlb	0	; () banked
  7186  0013A8  6FC9               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;CANlib.h: 495: tamp = tamp << 5;
  7190  0013AA  C0C6  F0C2         	movff	CANsendMessage@tamp,??_CANsendMessage
  7191  0013AE  C0C7  F0C3         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7192  0013B2  C0C8  F0C4         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7193  0013B6  C0C9  F0C5         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7194  0013BA  0E05               	movlw	5
  7195  0013BC                     u6425:
  7196  0013BC  90D8               	bcf	status,0,c
  7197  0013BE  0100               	movlb	0	; () banked
  7198  0013C0  37C2               	rlcf	??_CANsendMessage& (0+255),f,b
  7199  0013C2  37C3               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  7200  0013C4  37C4               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  7201  0013C6  37C5               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  7202  0013C8  2EE8               	decfsz	wreg,f,c
  7203  0013CA  D7F8               	goto	u6425
  7204  0013CC  C0C2  F0C6         	movff	??_CANsendMessage,CANsendMessage@tamp
  7205  0013D0  C0C3  F0C7         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7206  0013D4  C0C4  F0C8         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7207  0013D8  C0C5  F0C9         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7208                           
  7209                           ; BSR set to: 0
  7210                           ;CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  7211  0013DC  010F               	movlb	15	; () banked
  7212  0013DE  5122               	movf	34,w,b	;volatile
  7213  0013E0  0B1F               	andlw	31
  7214  0013E2  010F               	movlb	15	; () banked
  7215  0013E4  6F22               	movwf	34,b	;volatile
  7216                           
  7217                           ; BSR set to: 15
  7218                           ;CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  7219  0013E6  C0C6  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  7220  0013EA                     l4974:
  7221                           
  7222                           ;CANlib.h: 498: }
  7223                           ;CANlib.h: 500: if (0b00000001 & flags)
  7224  0013EA  0100               	movlb	0	; () banked
  7225  0013EC  A1C1               	btfss	CANsendMessage@flags& (0+255),0,b
  7226  0013EE  D003               	goto	l408
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  7230  0013F0  010F               	movlb	15	; () banked
  7231  0013F2  8120               	bsf	32,0,b	;volatile
  7232  0013F4  D002               	goto	l409
  7233  0013F6                     l408:
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;CANlib.h: 502: else
  7237                           ;CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  7238  0013F6  010F               	movlb	15	; () banked
  7239  0013F8  9120               	bcf	32,0,b	;volatile
  7240  0013FA                     l409:
  7241                           
  7242                           ; BSR set to: 15
  7243                           ;CANlib.h: 504: if (0b00000010 & flags)
  7244  0013FA  0100               	movlb	0	; () banked
  7245  0013FC  A3C1               	btfss	CANsendMessage@flags& (0+255),1,b
  7246  0013FE  D003               	goto	l410
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  7250  001400  010F               	movlb	15	; () banked
  7251  001402  8320               	bsf	32,1,b	;volatile
  7252  001404  D002               	goto	l4980
  7253  001406                     l410:
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;CANlib.h: 506: else
  7257                           ;CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  7258  001406  010F               	movlb	15	; () banked
  7259  001408  9320               	bcf	32,1,b	;volatile
  7260  00140A                     l4980:
  7261                           
  7262                           ; BSR set to: 15
  7263                           ;CANlib.h: 509: TXB2D0 = data[0];
  7264  00140A  C0BE  FFD9         	movff	CANsendMessage@data,fsr2l
  7265  00140E  C0BF  FFDA         	movff	CANsendMessage@data+1,fsr2h
  7266  001412  50DF               	movf	indf2,w,c
  7267  001414  010F               	movlb	15	; () banked
  7268  001416  6F26               	movwf	38,b	;volatile
  7269                           
  7270                           ; BSR set to: 15
  7271                           ;CANlib.h: 510: TXB2D1 = data[1];
  7272  001418  0100               	movlb	0	; () banked
  7273  00141A  EE20 F001          	lfsr	2,1
  7274  00141E  51BE               	movf	CANsendMessage@data& (0+255),w,b
  7275  001420  26D9               	addwf	fsr2l,f,c
  7276  001422  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7277  001424  22DA               	addwfc	fsr2h,f,c
  7278  001426  50DF               	movf	indf2,w,c
  7279  001428  010F               	movlb	15	; () banked
  7280  00142A  6F27               	movwf	39,b	;volatile
  7281                           
  7282                           ; BSR set to: 15
  7283                           ;CANlib.h: 511: TXB2D2 = data[2];
  7284  00142C  0100               	movlb	0	; () banked
  7285  00142E  EE20 F002          	lfsr	2,2
  7286  001432  51BE               	movf	CANsendMessage@data& (0+255),w,b
  7287  001434  26D9               	addwf	fsr2l,f,c
  7288  001436  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7289  001438  22DA               	addwfc	fsr2h,f,c
  7290  00143A  50DF               	movf	indf2,w,c
  7291  00143C  010F               	movlb	15	; () banked
  7292  00143E  6F28               	movwf	40,b	;volatile
  7293                           
  7294                           ; BSR set to: 15
  7295                           ;CANlib.h: 512: TXB2D3 = data[3];
  7296  001440  0100               	movlb	0	; () banked
  7297  001442  EE20 F003          	lfsr	2,3
  7298  001446  51BE               	movf	CANsendMessage@data& (0+255),w,b
  7299  001448  26D9               	addwf	fsr2l,f,c
  7300  00144A  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7301  00144C  22DA               	addwfc	fsr2h,f,c
  7302  00144E  50DF               	movf	indf2,w,c
  7303  001450  010F               	movlb	15	; () banked
  7304  001452  6F29               	movwf	41,b	;volatile
  7305                           
  7306                           ; BSR set to: 15
  7307                           ;CANlib.h: 513: TXB2D4 = data[4];
  7308  001454  0100               	movlb	0	; () banked
  7309  001456  EE20 F004          	lfsr	2,4
  7310  00145A  51BE               	movf	CANsendMessage@data& (0+255),w,b
  7311  00145C  26D9               	addwf	fsr2l,f,c
  7312  00145E  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7313  001460  22DA               	addwfc	fsr2h,f,c
  7314  001462  50DF               	movf	indf2,w,c
  7315  001464  010F               	movlb	15	; () banked
  7316  001466  6F2A               	movwf	42,b	;volatile
  7317                           
  7318                           ; BSR set to: 15
  7319                           ;CANlib.h: 514: TXB2D5 = data[5];
  7320  001468  0100               	movlb	0	; () banked
  7321  00146A  EE20 F005          	lfsr	2,5
  7322  00146E  51BE               	movf	CANsendMessage@data& (0+255),w,b
  7323  001470  26D9               	addwf	fsr2l,f,c
  7324  001472  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7325  001474  22DA               	addwfc	fsr2h,f,c
  7326  001476  50DF               	movf	indf2,w,c
  7327  001478  010F               	movlb	15	; () banked
  7328  00147A  6F2B               	movwf	43,b	;volatile
  7329                           
  7330                           ; BSR set to: 15
  7331                           ;CANlib.h: 515: TXB2D6 = data[6];
  7332  00147C  0100               	movlb	0	; () banked
  7333  00147E  EE20 F006          	lfsr	2,6
  7334  001482  51BE               	movf	CANsendMessage@data& (0+255),w,b
  7335  001484  26D9               	addwf	fsr2l,f,c
  7336  001486  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7337  001488  22DA               	addwfc	fsr2h,f,c
  7338  00148A  50DF               	movf	indf2,w,c
  7339  00148C  010F               	movlb	15	; () banked
  7340  00148E  6F2C               	movwf	44,b	;volatile
  7341                           
  7342                           ; BSR set to: 15
  7343                           ;CANlib.h: 516: TXB2D7 = data[7];
  7344  001490  0100               	movlb	0	; () banked
  7345  001492  EE20 F007          	lfsr	2,7
  7346  001496  51BE               	movf	CANsendMessage@data& (0+255),w,b
  7347  001498  26D9               	addwf	fsr2l,f,c
  7348  00149A  51BF               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7349  00149C  22DA               	addwfc	fsr2h,f,c
  7350  00149E  50DF               	movf	indf2,w,c
  7351  0014A0  010F               	movlb	15	; () banked
  7352  0014A2  6F2D               	movwf	45,b	;volatile
  7353                           
  7354                           ; BSR set to: 15
  7355                           ;CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  7356  0014A4  010F               	movlb	15	; () banked
  7357  0014A6  8720               	bsf	32,3,b	;volatile
  7358                           
  7359                           ; BSR set to: 15
  7360                           ;CANlib.h: 520: return;
  7361  0014A8  0012               	return	
  7362  0014AA                     __end_of_CANsendMessage:
  7363                           	opt stack 0
  7364                           tblptru	equ	0xFF8
  7365                           tblptrh	equ	0xFF7
  7366                           tblptrl	equ	0xFF6
  7367                           tablat	equ	0xFF5
  7368                           prodh	equ	0xFF4
  7369                           prodl	equ	0xFF3
  7370                           intcon	equ	0xFF2
  7371                           postinc0	equ	0xFEE
  7372                           wreg	equ	0xFE8
  7373                           indf1	equ	0xFE7
  7374                           postdec1	equ	0xFE5
  7375                           fsr1h	equ	0xFE2
  7376                           fsr1l	equ	0xFE1
  7377                           indf2	equ	0xFDF
  7378                           fsr2h	equ	0xFDA
  7379                           fsr2l	equ	0xFD9
  7380                           status	equ	0xFD8
  7381                           
  7382 ;; *************** function _CANisTxReady *****************
  7383 ;; Defined at:
  7384 ;;		line 1154 in file "CANlib.h"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;		None
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;		None
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1    wreg      unsigned char 
  7391 ;; Registers used:
  7392 ;;		wreg, status,2
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7398 ;;      Params:         0       0       0       0
  7399 ;;      Locals:         0       1       0       0
  7400 ;;      Temps:          0       0       0       0
  7401 ;;      Totals:         0       1       0       0
  7402 ;;Total ram usage:        1 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; Hardware stack levels required when called:    2
  7405 ;; This function calls:
  7406 ;;		Nothing
  7407 ;; This function is called by:
  7408 ;;		_send_data
  7409 ;;		_battery_measure
  7410 ;; This function uses a non-reentrant model
  7411 ;;
  7412                           
  7413                           	psect	text14
  7414  002A18                     __ptext14:
  7415                           	opt stack 0
  7416  002A18                     _CANisTxReady:
  7417                           	opt stack 27
  7418                           
  7419                           ;CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TXREQ)
      +                          ;
  7420                           
  7421                           ; BSR set to: 15
  7422                           ;incstack = 0
  7423  002A18  0E01               	movlw	1
  7424  002A1A  0100               	movlb	0	; () banked
  7425  002A1C  6FBA               	movwf	_CANisTxReady$3044& (0+255),b
  7426                           
  7427                           ; BSR set to: 0
  7428  002A1E  010F               	movlb	15	; () banked
  7429  002A20  A740               	btfss	64,3,b	;volatile
  7430  002A22  D009               	goto	l562
  7431                           
  7432                           ; BSR set to: 15
  7433  002A24  010F               	movlb	15	; () banked
  7434  002A26  A730               	btfss	48,3,b	;volatile
  7435  002A28  D006               	goto	l562
  7436                           
  7437                           ; BSR set to: 15
  7438  002A2A  010F               	movlb	15	; () banked
  7439  002A2C  A720               	btfss	32,3,b	;volatile
  7440  002A2E  D003               	goto	l562
  7441                           
  7442                           ; BSR set to: 15
  7443  002A30  0E00               	movlw	0
  7444  002A32  0100               	movlb	0	; () banked
  7445  002A34  6FBA               	movwf	_CANisTxReady$3044& (0+255),b
  7446  002A36                     l562:
  7447  002A36  0100               	movlb	0	; () banked
  7448  002A38  51BA               	movf	_CANisTxReady$3044& (0+255),w,b
  7449  002A3A  0012               	return	
  7450  002A3C                     __end_of_CANisTxReady:
  7451                           	opt stack 0
  7452                           tblptru	equ	0xFF8
  7453                           tblptrh	equ	0xFF7
  7454                           tblptrl	equ	0xFF6
  7455                           tablat	equ	0xFF5
  7456                           prodh	equ	0xFF4
  7457                           prodl	equ	0xFF3
  7458                           intcon	equ	0xFF2
  7459                           postinc0	equ	0xFEE
  7460                           wreg	equ	0xFE8
  7461                           indf1	equ	0xFE7
  7462                           postdec1	equ	0xFE5
  7463                           fsr1h	equ	0xFE2
  7464                           fsr1l	equ	0xFE1
  7465                           indf2	equ	0xFDF
  7466                           fsr2h	equ	0xFDA
  7467                           fsr2l	equ	0xFD9
  7468                           status	equ	0xFD8
  7469                           
  7470 ;; *************** function _abs *****************
  7471 ;; Defined at:
  7472 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;  a               2    0[BANK0 ] int 
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;		None
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  2    0[BANK0 ] int 
  7479 ;; Registers used:
  7480 ;;		wreg, status,2, status,0
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7486 ;;      Params:         0       2       0       0
  7487 ;;      Locals:         0       0       0       0
  7488 ;;      Temps:          0       2       0       0
  7489 ;;      Totals:         0       4       0       0
  7490 ;;Total ram usage:        4 bytes
  7491 ;; Hardware stack levels used:    1
  7492 ;; Hardware stack levels required when called:    2
  7493 ;; This function calls:
  7494 ;;		Nothing
  7495 ;; This function is called by:
  7496 ;;		_main
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           
  7500                           	psect	text15
  7501  0029EC                     __ptext15:
  7502                           	opt stack 0
  7503  0029EC                     _abs:
  7504                           	opt stack 28
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;incstack = 0
  7508  0029EC  0100               	movlb	0	; () banked
  7509  0029EE  AFBB               	btfss	(abs@a+1)& (0+255),7,b
  7510  0029F0  D00E               	goto	l878
  7511                           
  7512                           ; BSR set to: 0
  7513  0029F2  C0BA  F0BC         	movff	abs@a,??_abs
  7514  0029F6  C0BB  F0BD         	movff	abs@a+1,??_abs+1
  7515  0029FA  0100               	movlb	0	; () banked
  7516  0029FC  1FBC               	comf	??_abs& (0+255),f,b
  7517  0029FE  1FBD               	comf	(??_abs+1)& (0+255),f,b
  7518  002A00  4BBC               	infsnz	??_abs& (0+255),f,b
  7519  002A02  2BBD               	incf	(??_abs+1)& (0+255),f,b
  7520  002A04  C0BC  F0BA         	movff	??_abs,?_abs
  7521  002A08  C0BD  F0BB         	movff	??_abs+1,?_abs+1
  7522  002A0C  0012               	return	
  7523  002A0E                     l878:
  7524                           
  7525                           ; BSR set to: 0
  7526  002A0E  C0BA  F0BA         	movff	abs@a,?_abs
  7527  002A12  C0BB  F0BB         	movff	abs@a+1,?_abs+1
  7528                           
  7529                           ; BSR set to: 0
  7530  002A16  0012               	return		;funcret
  7531  002A18                     __end_of_abs:
  7532                           	opt stack 0
  7533                           tblptru	equ	0xFF8
  7534                           tblptrh	equ	0xFF7
  7535                           tblptrl	equ	0xFF6
  7536                           tablat	equ	0xFF5
  7537                           prodh	equ	0xFF4
  7538                           prodl	equ	0xFF3
  7539                           intcon	equ	0xFF2
  7540                           postinc0	equ	0xFEE
  7541                           wreg	equ	0xFE8
  7542                           indf1	equ	0xFE7
  7543                           postdec1	equ	0xFE5
  7544                           fsr1h	equ	0xFE2
  7545                           fsr1l	equ	0xFE1
  7546                           indf2	equ	0xFDF
  7547                           fsr2h	equ	0xFDA
  7548                           fsr2l	equ	0xFD9
  7549                           status	equ	0xFD8
  7550                           
  7551 ;; *************** function ___lwdiv *****************
  7552 ;; Defined at:
  7553 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;  dividend        2    0[BANK0 ] unsigned int 
  7556 ;;  divisor         2    2[BANK0 ] unsigned int 
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;  quotient        2    5[BANK0 ] unsigned int 
  7559 ;;  counter         1    4[BANK0 ] unsigned char 
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  2    0[BANK0 ] unsigned int 
  7562 ;; Registers used:
  7563 ;;		wreg, status,2, status,0
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7569 ;;      Params:         0       4       0       0
  7570 ;;      Locals:         0       3       0       0
  7571 ;;      Temps:          0       0       0       0
  7572 ;;      Totals:         0       7       0       0
  7573 ;;Total ram usage:        7 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; Hardware stack levels required when called:    2
  7576 ;; This function calls:
  7577 ;;		Nothing
  7578 ;; This function is called by:
  7579 ;;		_main
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           	psect	text16
  7584  002754                     __ptext16:
  7585                           	opt stack 0
  7586  002754                     ___lwdiv:
  7587                           	opt stack 28
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;incstack = 0
  7591  002754  0E00               	movlw	0
  7592  002756  0100               	movlb	0	; () banked
  7593  002758  6FC0               	movwf	(___lwdiv@quotient+1)& (0+255),b
  7594  00275A  0E00               	movlw	0
  7595  00275C  6FBF               	movwf	___lwdiv@quotient& (0+255),b
  7596                           
  7597                           ; BSR set to: 0
  7598  00275E  0100               	movlb	0	; () banked
  7599  002760  51BC               	movf	___lwdiv@divisor& (0+255),w,b
  7600  002762  0100               	movlb	0	; () banked
  7601  002764  11BD               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  7602  002766  B4D8               	btfsc	status,2,c
  7603  002768  D02C               	goto	l1235
  7604                           
  7605                           ; BSR set to: 0
  7606  00276A  0E01               	movlw	1
  7607  00276C  0100               	movlb	0	; () banked
  7608  00276E  6FBE               	movwf	___lwdiv@counter& (0+255),b
  7609  002770  D006               	goto	l5318
  7610  002772                     l5316:
  7611                           
  7612                           ; BSR set to: 0
  7613  002772  0100               	movlb	0	; () banked
  7614  002774  90D8               	bcf	status,0,c
  7615  002776  37BC               	rlcf	___lwdiv@divisor& (0+255),f,b
  7616  002778  37BD               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  7617  00277A  0100               	movlb	0	; () banked
  7618  00277C  2BBE               	incf	___lwdiv@counter& (0+255),f,b
  7619  00277E                     l5318:
  7620                           
  7621                           ; BSR set to: 0
  7622  00277E  0100               	movlb	0	; () banked
  7623  002780  AFBD               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  7624  002782  D7F7               	goto	l5316
  7625  002784                     l5320:
  7626                           
  7627                           ; BSR set to: 0
  7628  002784  0100               	movlb	0	; () banked
  7629  002786  90D8               	bcf	status,0,c
  7630  002788  37BF               	rlcf	___lwdiv@quotient& (0+255),f,b
  7631  00278A  37C0               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  7632                           
  7633                           ; BSR set to: 0
  7634  00278C  0100               	movlb	0	; () banked
  7635  00278E  51BC               	movf	___lwdiv@divisor& (0+255),w,b
  7636  002790  0100               	movlb	0	; () banked
  7637  002792  5DBA               	subwf	___lwdiv@dividend& (0+255),w,b
  7638  002794  0100               	movlb	0	; () banked
  7639  002796  51BD               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7640  002798  0100               	movlb	0	; () banked
  7641  00279A  59BB               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  7642  00279C  A0D8               	btfss	status,0,c
  7643  00279E  D00A               	goto	l5328
  7644                           
  7645                           ; BSR set to: 0
  7646  0027A0  0100               	movlb	0	; () banked
  7647  0027A2  51BC               	movf	___lwdiv@divisor& (0+255),w,b
  7648  0027A4  0100               	movlb	0	; () banked
  7649  0027A6  5FBA               	subwf	___lwdiv@dividend& (0+255),f,b
  7650  0027A8  0100               	movlb	0	; () banked
  7651  0027AA  51BD               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7652  0027AC  0100               	movlb	0	; () banked
  7653  0027AE  5BBB               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7654                           
  7655                           ; BSR set to: 0
  7656  0027B0  0100               	movlb	0	; () banked
  7657  0027B2  81BF               	bsf	___lwdiv@quotient& (0+255),0,b
  7658  0027B4                     l5328:
  7659                           
  7660                           ; BSR set to: 0
  7661  0027B4  0100               	movlb	0	; () banked
  7662  0027B6  90D8               	bcf	status,0,c
  7663  0027B8  33BD               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7664  0027BA  33BC               	rrcf	___lwdiv@divisor& (0+255),f,b
  7665                           
  7666                           ; BSR set to: 0
  7667  0027BC  0100               	movlb	0	; () banked
  7668  0027BE  2FBE               	decfsz	___lwdiv@counter& (0+255),f,b
  7669  0027C0  D7E1               	goto	l5320
  7670  0027C2                     l1235:
  7671                           
  7672                           ; BSR set to: 0
  7673  0027C2  C0BF  F0BA         	movff	___lwdiv@quotient,?___lwdiv
  7674  0027C6  C0C0  F0BB         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7675                           
  7676                           ; BSR set to: 0
  7677  0027CA  0012               	return		;funcret
  7678  0027CC                     __end_of___lwdiv:
  7679                           	opt stack 0
  7680                           tblptru	equ	0xFF8
  7681                           tblptrh	equ	0xFF7
  7682                           tblptrl	equ	0xFF6
  7683                           tablat	equ	0xFF5
  7684                           prodh	equ	0xFF4
  7685                           prodl	equ	0xFF3
  7686                           intcon	equ	0xFF2
  7687                           postinc0	equ	0xFEE
  7688                           wreg	equ	0xFE8
  7689                           indf1	equ	0xFE7
  7690                           postdec1	equ	0xFE5
  7691                           fsr1h	equ	0xFE2
  7692                           fsr1l	equ	0xFE1
  7693                           indf2	equ	0xFDF
  7694                           fsr2h	equ	0xFDA
  7695                           fsr2l	equ	0xFD9
  7696                           status	equ	0xFD8
  7697                           
  7698 ;; *************** function _SetDCEPWM1 *****************
  7699 ;; Defined at:
  7700 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  7705 ;; Return value:  Size  Location     Type
  7706 ;;		None               void
  7707 ;; Registers used:
  7708 ;;		wreg, status,2, status,0
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7714 ;;      Params:         0       2       0       0
  7715 ;;      Locals:         0       2       0       0
  7716 ;;      Temps:          0       2       0       0
  7717 ;;      Totals:         0       6       0       0
  7718 ;;Total ram usage:        6 bytes
  7719 ;; Hardware stack levels used:    1
  7720 ;; Hardware stack levels required when called:    2
  7721 ;; This function calls:
  7722 ;;		Nothing
  7723 ;; This function is called by:
  7724 ;;		_main
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           	psect	text17
  7729  0028FA                     __ptext17:
  7730                           	opt stack 0
  7731  0028FA                     _SetDCEPWM1:
  7732                           	opt stack 28
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;incstack = 0
  7736  0028FA  C0BA  F0BC         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  7737  0028FE  C0BB  F0BD         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  7738  002902  0E06               	movlw	6
  7739  002904                     u6755:
  7740  002904  90D8               	bcf	status,0,c
  7741  002906  0100               	movlb	0	; () banked
  7742  002908  37BC               	rlcf	??_SetDCEPWM1& (0+255),f,b
  7743  00290A  37BD               	rlcf	(??_SetDCEPWM1+1)& (0+255),f,b
  7744  00290C  2EE8               	decfsz	wreg,f,c
  7745  00290E  D7FA               	goto	u6755
  7746  002910  C0BC  F0BE         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  7747  002914  C0BD  F0BF         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  7748                           
  7749                           ; BSR set to: 0
  7750  002918  C0BF  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  7751  00291C  C0BE  F0BC         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  7752  002920  0100               	movlb	0	; () banked
  7753  002922  90D8               	bcf	status,0,c
  7754  002924  33BC               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7755  002926  0100               	movlb	0	; () banked
  7756  002928  90D8               	bcf	status,0,c
  7757  00292A  33BC               	rrcf	??_SetDCEPWM1& (0+255),f,b
  7758  00292C  0E30               	movlw	48
  7759  00292E  0100               	movlb	0	; () banked
  7760  002930  17BC               	andwf	??_SetDCEPWM1& (0+255),f,b
  7761  002932  50BA               	movf	4026,w,c	;volatile
  7762  002934  0BCF               	andlw	207
  7763  002936  0100               	movlb	0	; () banked
  7764  002938  11BC               	iorwf	??_SetDCEPWM1& (0+255),w,b
  7765  00293A  6EBA               	movwf	4026,c	;volatile
  7766                           
  7767                           ; BSR set to: 0
  7768  00293C  0012               	return		;funcret
  7769  00293E                     __end_of_SetDCEPWM1:
  7770                           	opt stack 0
  7771                           tblptru	equ	0xFF8
  7772                           tblptrh	equ	0xFF7
  7773                           tblptrl	equ	0xFF6
  7774                           tablat	equ	0xFF5
  7775                           prodh	equ	0xFF4
  7776                           prodl	equ	0xFF3
  7777                           intcon	equ	0xFF2
  7778                           postinc0	equ	0xFEE
  7779                           wreg	equ	0xFE8
  7780                           indf1	equ	0xFE7
  7781                           postdec1	equ	0xFE5
  7782                           fsr1h	equ	0xFE2
  7783                           fsr1l	equ	0xFE1
  7784                           indf2	equ	0xFDF
  7785                           fsr2h	equ	0xFDA
  7786                           fsr2l	equ	0xFD9
  7787                           status	equ	0xFD8
  7788                           
  7789 ;; *************** function _OpenUSART *****************
  7790 ;; Defined at:
  7791 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\USART\uopen.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;  config          1    wreg     unsigned char 
  7794 ;;  spbrg           2    0[BANK0 ] unsigned int 
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;  config          1    2[BANK0 ] unsigned char 
  7797 ;; Return value:  Size  Location     Type
  7798 ;;		None               void
  7799 ;; Registers used:
  7800 ;;		wreg, status,2
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7806 ;;      Params:         0       2       0       0
  7807 ;;      Locals:         0       1       0       0
  7808 ;;      Temps:          0       0       0       0
  7809 ;;      Totals:         0       3       0       0
  7810 ;;Total ram usage:        3 bytes
  7811 ;; Hardware stack levels used:    1
  7812 ;; Hardware stack levels required when called:    2
  7813 ;; This function calls:
  7814 ;;		Nothing
  7815 ;; This function is called by:
  7816 ;;		_main
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text18
  7821  0027CC                     __ptext18:
  7822                           	opt stack 0
  7823  0027CC                     _OpenUSART:
  7824                           	opt stack 28
  7825                           
  7826                           ; BSR set to: 0
  7827                           ;incstack = 0
  7828                           ;OpenUSART@config stored from wreg
  7829  0027CC  0100               	movlb	0	; () banked
  7830  0027CE  6FBC               	movwf	OpenUSART@config& (0+255),b
  7831  0027D0  0E00               	movlw	0
  7832  0027D2  6EAC               	movwf	4012,c	;volatile
  7833  0027D4  0E00               	movlw	0
  7834  0027D6  6EAB               	movwf	4011,c	;volatile
  7835  0027D8  0100               	movlb	0	; () banked
  7836  0027DA  B1BC               	btfsc	OpenUSART@config& (0+255),0,b
  7837                           
  7838                           ; BSR set to: 0
  7839  0027DC  88AC               	bsf	4012,4,c	;volatile
  7840                           
  7841                           ; BSR set to: 0
  7842                           
  7843                           ; BSR set to: 0
  7844  0027DE  0100               	movlb	0	; () banked
  7845  0027E0  A3BC               	btfss	OpenUSART@config& (0+255),1,b
  7846  0027E2  D002               	goto	l5212
  7847                           
  7848                           ; BSR set to: 0
  7849  0027E4  8CAC               	bsf	4012,6,c	;volatile
  7850  0027E6  8CAB               	bsf	4011,6,c	;volatile
  7851  0027E8                     l5212:
  7852                           
  7853                           ; BSR set to: 0
  7854  0027E8  0100               	movlb	0	; () banked
  7855  0027EA  B5BC               	btfsc	OpenUSART@config& (0+255),2,b
  7856                           
  7857                           ; BSR set to: 0
  7858  0027EC  8EAC               	bsf	4012,7,c	;volatile
  7859                           
  7860                           ; BSR set to: 0
  7861                           
  7862                           ; BSR set to: 0
  7863  0027EE  0100               	movlb	0	; () banked
  7864  0027F0  A7BC               	btfss	OpenUSART@config& (0+255),3,b
  7865  0027F2  D002               	goto	l808
  7866                           
  7867                           ; BSR set to: 0
  7868  0027F4  88AB               	bsf	4011,4,c	;volatile
  7869  0027F6  D001               	goto	l5220
  7870  0027F8                     l808:
  7871                           
  7872                           ; BSR set to: 0
  7873  0027F8  8AAB               	bsf	4011,5,c	;volatile
  7874  0027FA                     l5220:
  7875                           
  7876                           ; BSR set to: 0
  7877  0027FA  0100               	movlb	0	; () banked
  7878  0027FC  B9BC               	btfsc	OpenUSART@config& (0+255),4,b
  7879                           
  7880                           ; BSR set to: 0
  7881  0027FE  84AC               	bsf	4012,2,c	;volatile
  7882                           
  7883                           ; BSR set to: 0
  7884  002800  989E               	bcf	3998,4,c	;volatile
  7885                           
  7886                           ; BSR set to: 0
  7887  002802  0100               	movlb	0	; () banked
  7888  002804  BBBC               	btfsc	OpenUSART@config& (0+255),5,b
  7889                           
  7890                           ; BSR set to: 0
  7891  002806  86AB               	bsf	4011,3,c	;volatile
  7892                           
  7893                           ; BSR set to: 0
  7894                           
  7895                           ; BSR set to: 0
  7896  002808  0100               	movlb	0	; () banked
  7897  00280A  ADBC               	btfss	OpenUSART@config& (0+255),6,b
  7898  00280C  D002               	goto	l812
  7899                           
  7900                           ; BSR set to: 0
  7901  00280E  8A9D               	bsf	3997,5,c	;volatile
  7902  002810  D001               	goto	l813
  7903  002812                     l812:
  7904                           
  7905                           ; BSR set to: 0
  7906  002812  9A9D               	bcf	3997,5,c	;volatile
  7907  002814                     l813:
  7908                           
  7909                           ; BSR set to: 0
  7910  002814  9A9E               	bcf	3998,5,c	;volatile
  7911                           
  7912                           ; BSR set to: 0
  7913  002816  0100               	movlb	0	; () banked
  7914  002818  AFBC               	btfss	OpenUSART@config& (0+255),7,b
  7915  00281A  D002               	goto	l814
  7916                           
  7917                           ; BSR set to: 0
  7918  00281C  889D               	bsf	3997,4,c	;volatile
  7919  00281E  D001               	goto	l815
  7920  002820                     l814:
  7921                           
  7922                           ; BSR set to: 0
  7923  002820  989D               	bcf	3997,4,c	;volatile
  7924  002822                     l815:
  7925                           
  7926                           ; BSR set to: 0
  7927  002822  C0BA  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  7928                           
  7929                           ; BSR set to: 0
  7930  002826  0100               	movlb	0	; () banked
  7931  002828  51BB               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
  7932  00282A  6EB0               	movwf	4016,c	;volatile
  7933                           
  7934                           ; BSR set to: 0
  7935  00282C  8AAC               	bsf	4012,5,c	;volatile
  7936                           
  7937                           ; BSR set to: 0
  7938  00282E  8EAB               	bsf	4011,7,c	;volatile
  7939                           
  7940                           ; BSR set to: 0
  7941  002830  9C94               	bcf	3988,6,c	;volatile
  7942                           
  7943                           ; BSR set to: 0
  7944  002832  8E94               	bsf	3988,7,c	;volatile
  7945                           
  7946                           ; BSR set to: 0
  7947  002834  A8AC               	btfss	4012,4,c	;volatile
  7948  002836  0012               	return	
  7949                           
  7950                           ; BSR set to: 0
  7951  002838  BEAC               	btfsc	4012,7,c	;volatile
  7952  00283A  0012               	return	
  7953                           
  7954                           ; BSR set to: 0
  7955  00283C  8C94               	bsf	3988,6,c	;volatile
  7956  00283E  0012               	return	
  7957  002840                     __end_of_OpenUSART:
  7958                           	opt stack 0
  7959                           tblptru	equ	0xFF8
  7960                           tblptrh	equ	0xFF7
  7961                           tblptrl	equ	0xFF6
  7962                           tablat	equ	0xFF5
  7963                           prodh	equ	0xFF4
  7964                           prodl	equ	0xFF3
  7965                           intcon	equ	0xFF2
  7966                           postinc0	equ	0xFEE
  7967                           wreg	equ	0xFE8
  7968                           indf1	equ	0xFE7
  7969                           postdec1	equ	0xFE5
  7970                           fsr1h	equ	0xFE2
  7971                           fsr1l	equ	0xFE1
  7972                           indf2	equ	0xFDF
  7973                           fsr2h	equ	0xFDA
  7974                           fsr2l	equ	0xFD9
  7975                           status	equ	0xFD8
  7976                           
  7977 ;; *************** function _OpenTimer2 *****************
  7978 ;; Defined at:
  7979 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;  config          1    wreg     unsigned char 
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;  config          1    0[BANK0 ] unsigned char 
  7984 ;; Return value:  Size  Location     Type
  7985 ;;		None               void
  7986 ;; Registers used:
  7987 ;;		wreg, status,2, status,0
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7993 ;;      Params:         0       0       0       0
  7994 ;;      Locals:         0       1       0       0
  7995 ;;      Temps:          0       0       0       0
  7996 ;;      Totals:         0       1       0       0
  7997 ;;Total ram usage:        1 bytes
  7998 ;; Hardware stack levels used:    1
  7999 ;; Hardware stack levels required when called:    2
  8000 ;; This function calls:
  8001 ;;		Nothing
  8002 ;; This function is called by:
  8003 ;;		_main
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text19
  8008  002A3C                     __ptext19:
  8009                           	opt stack 0
  8010  002A3C                     _OpenTimer2:
  8011                           	opt stack 28
  8012                           
  8013                           ; BSR set to: 0
  8014                           ;incstack = 0
  8015                           ;OpenTimer2@config stored from wreg
  8016  002A3C  0100               	movlb	0	; () banked
  8017  002A3E  6FBA               	movwf	OpenTimer2@config& (0+255),b
  8018  002A40  0100               	movlb	0	; () banked
  8019  002A42  51BA               	movf	OpenTimer2@config& (0+255),w,b
  8020  002A44  0BFB               	andlw	251
  8021  002A46  6ECA               	movwf	4042,c	;volatile
  8022                           
  8023                           ; BSR set to: 0
  8024  002A48  0E00               	movlw	0
  8025  002A4A  6ECC               	movwf	4044,c	;volatile
  8026                           
  8027                           ; BSR set to: 0
  8028  002A4C  929E               	bcf	3998,1,c	;volatile
  8029                           
  8030                           ; BSR set to: 0
  8031  002A4E  0100               	movlb	0	; () banked
  8032  002A50  AFBA               	btfss	OpenTimer2@config& (0+255),7,b
  8033  002A52  D002               	goto	l782
  8034                           
  8035                           ; BSR set to: 0
  8036  002A54  829D               	bsf	3997,1,c	;volatile
  8037  002A56  D001               	goto	l783
  8038  002A58                     l782:
  8039                           
  8040                           ; BSR set to: 0
  8041  002A58  929D               	bcf	3997,1,c	;volatile
  8042  002A5A                     l783:
  8043                           
  8044                           ; BSR set to: 0
  8045  002A5A  84CA               	bsf	4042,2,c	;volatile
  8046                           
  8047                           ; BSR set to: 0
  8048  002A5C  0012               	return		;funcret
  8049  002A5E                     __end_of_OpenTimer2:
  8050                           	opt stack 0
  8051                           tblptru	equ	0xFF8
  8052                           tblptrh	equ	0xFF7
  8053                           tblptrl	equ	0xFF6
  8054                           tablat	equ	0xFF5
  8055                           prodh	equ	0xFF4
  8056                           prodl	equ	0xFF3
  8057                           intcon	equ	0xFF2
  8058                           postinc0	equ	0xFEE
  8059                           wreg	equ	0xFE8
  8060                           indf1	equ	0xFE7
  8061                           postdec1	equ	0xFE5
  8062                           fsr1h	equ	0xFE2
  8063                           fsr1l	equ	0xFE1
  8064                           indf2	equ	0xFDF
  8065                           fsr2h	equ	0xFDA
  8066                           fsr2l	equ	0xFD9
  8067                           status	equ	0xFD8
  8068                           
  8069 ;; *************** function _OpenEPWM1 *****************
  8070 ;; Defined at:
  8071 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;  period          1    wreg     unsigned char 
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;  period          1    0[BANK0 ] unsigned char 
  8076 ;; Return value:  Size  Location     Type
  8077 ;;		None               void
  8078 ;; Registers used:
  8079 ;;		wreg, status,2
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8085 ;;      Params:         0       0       0       0
  8086 ;;      Locals:         0       1       0       0
  8087 ;;      Temps:          0       0       0       0
  8088 ;;      Totals:         0       1       0       0
  8089 ;;Total ram usage:        1 bytes
  8090 ;; Hardware stack levels used:    1
  8091 ;; Hardware stack levels required when called:    2
  8092 ;; This function calls:
  8093 ;;		Nothing
  8094 ;; This function is called by:
  8095 ;;		_main
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099                           	psect	text20
  8100  002A9E                     __ptext20:
  8101                           	opt stack 0
  8102  002A9E                     _OpenEPWM1:
  8103                           	opt stack 28
  8104                           
  8105                           ; BSR set to: 0
  8106                           ;incstack = 0
  8107                           ;OpenEPWM1@period stored from wreg
  8108  002A9E  0100               	movlb	0	; () banked
  8109  002AA0  6FBA               	movwf	OpenEPWM1@period& (0+255),b
  8110  002AA2  0E0C               	movlw	12
  8111  002AA4  6EBA               	movwf	4026,c	;volatile
  8112  002AA6  94CA               	bcf	4042,2,c	;volatile
  8113  002AA8  C0BA  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  8114  002AAC  84CA               	bsf	4042,2,c	;volatile
  8115  002AAE  0012               	return		;funcret
  8116  002AB0                     __end_of_OpenEPWM1:
  8117                           	opt stack 0
  8118                           tblptru	equ	0xFF8
  8119                           tblptrh	equ	0xFF7
  8120                           tblptrl	equ	0xFF6
  8121                           tablat	equ	0xFF5
  8122                           prodh	equ	0xFF4
  8123                           prodl	equ	0xFF3
  8124                           intcon	equ	0xFF2
  8125                           postinc0	equ	0xFEE
  8126                           wreg	equ	0xFE8
  8127                           indf1	equ	0xFE7
  8128                           postdec1	equ	0xFE5
  8129                           fsr1h	equ	0xFE2
  8130                           fsr1l	equ	0xFE1
  8131                           indf2	equ	0xFDF
  8132                           fsr2h	equ	0xFDA
  8133                           fsr2l	equ	0xFD9
  8134                           status	equ	0xFD8
  8135                           
  8136 ;; *************** function _CANisTXwarningON *****************
  8137 ;; Defined at:
  8138 ;;		line 1119 in file "CANlib.h"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;		None
  8141 ;; Auto vars:     Size  Location     Type
  8142 ;;		None
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  1    wreg      unsigned char 
  8145 ;; Registers used:
  8146 ;;		wreg
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/0
  8149 ;;		On exit  : 0/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8152 ;;      Params:         0       0       0       0
  8153 ;;      Locals:         0       0       0       0
  8154 ;;      Temps:          0       0       0       0
  8155 ;;      Totals:         0       0       0       0
  8156 ;;Total ram usage:        0 bytes
  8157 ;; Hardware stack levels used:    1
  8158 ;; Hardware stack levels required when called:    2
  8159 ;; This function calls:
  8160 ;;		Nothing
  8161 ;; This function is called by:
  8162 ;;		_main
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text21
  8167  002AB0                     __ptext21:
  8168                           	opt stack 0
  8169  002AB0                     _CANisTXwarningON:
  8170                           	opt stack 28
  8171                           
  8172                           ;CANlib.h: 1121: return (COMSTATbits.TXWARN);
  8173                           
  8174                           ;incstack = 0
  8175  002AB0  A474               	btfss	3956,2,c	;volatile
  8176  002AB2  D002               	goto	u6610
  8177  002AB4  0E01               	movlw	1
  8178  002AB6  0012               	return	
  8179  002AB8                     u6610:
  8180  002AB8  0E00               	movlw	0
  8181  002ABA  0012               	return	
  8182  002ABC                     __end_of_CANisTXwarningON:
  8183                           	opt stack 0
  8184                           tblptru	equ	0xFF8
  8185                           tblptrh	equ	0xFF7
  8186                           tblptrl	equ	0xFF6
  8187                           tablat	equ	0xFF5
  8188                           prodh	equ	0xFF4
  8189                           prodl	equ	0xFF3
  8190                           intcon	equ	0xFF2
  8191                           postinc0	equ	0xFEE
  8192                           wreg	equ	0xFE8
  8193                           indf1	equ	0xFE7
  8194                           postdec1	equ	0xFE5
  8195                           fsr1h	equ	0xFE2
  8196                           fsr1l	equ	0xFE1
  8197                           indf2	equ	0xFDF
  8198                           fsr2h	equ	0xFDA
  8199                           fsr2l	equ	0xFD9
  8200                           status	equ	0xFD8
  8201                           
  8202 ;; *************** function _CANisRXwarningON *****************
  8203 ;; Defined at:
  8204 ;;		line 1127 in file "CANlib.h"
  8205 ;; Parameters:    Size  Location     Type
  8206 ;;		None
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;		None
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  1    wreg      unsigned char 
  8211 ;; Registers used:
  8212 ;;		wreg
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8218 ;;      Params:         0       0       0       0
  8219 ;;      Locals:         0       0       0       0
  8220 ;;      Temps:          0       0       0       0
  8221 ;;      Totals:         0       0       0       0
  8222 ;;Total ram usage:        0 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; Hardware stack levels required when called:    2
  8225 ;; This function calls:
  8226 ;;		Nothing
  8227 ;; This function is called by:
  8228 ;;		_main
  8229 ;; This function uses a non-reentrant model
  8230 ;;
  8231                           
  8232                           	psect	text22
  8233  002ABC                     __ptext22:
  8234                           	opt stack 0
  8235  002ABC                     _CANisRXwarningON:
  8236                           	opt stack 28
  8237                           
  8238                           ;CANlib.h: 1129: return (COMSTATbits.RXWARN);
  8239                           
  8240                           ;incstack = 0
  8241  002ABC  A274               	btfss	3956,1,c	;volatile
  8242  002ABE  D002               	goto	u6620
  8243  002AC0  0E01               	movlw	1
  8244  002AC2  0012               	return	
  8245  002AC4                     u6620:
  8246  002AC4  0E00               	movlw	0
  8247  002AC6  0012               	return	
  8248  002AC8                     __end_of_CANisRXwarningON:
  8249                           	opt stack 0
  8250                           tblptru	equ	0xFF8
  8251                           tblptrh	equ	0xFF7
  8252                           tblptrl	equ	0xFF6
  8253                           tablat	equ	0xFF5
  8254                           prodh	equ	0xFF4
  8255                           prodl	equ	0xFF3
  8256                           intcon	equ	0xFF2
  8257                           postinc0	equ	0xFEE
  8258                           wreg	equ	0xFE8
  8259                           indf1	equ	0xFE7
  8260                           postdec1	equ	0xFE5
  8261                           fsr1h	equ	0xFE2
  8262                           fsr1l	equ	0xFE1
  8263                           indf2	equ	0xFDF
  8264                           fsr2h	equ	0xFDA
  8265                           fsr2l	equ	0xFD9
  8266                           status	equ	0xFD8
  8267                           
  8268 ;; *************** function _ISR_bassa *****************
  8269 ;; Defined at:
  8270 ;;		line 93 in file "motore.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;		None
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;  i               2   31[COMRAM] int 
  8275 ;; Return value:  Size  Location     Type
  8276 ;;		None               void
  8277 ;; Registers used:
  8278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8279 ;; Tracked objects:
  8280 ;;		On entry : 0/0
  8281 ;;		On exit  : 0/0
  8282 ;;		Unchanged: 0/0
  8283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8284 ;;      Params:         0       0       0       0
  8285 ;;      Locals:         2       0       0       0
  8286 ;;      Temps:         19       0       0       0
  8287 ;;      Totals:        21       0       0       0
  8288 ;;Total ram usage:       21 bytes
  8289 ;; Hardware stack levels used:    1
  8290 ;; Hardware stack levels required when called:    1
  8291 ;; This function calls:
  8292 ;;		_CANisRxReady
  8293 ;;		_CANreceiveMessage
  8294 ;;		i1_SetOutputEPWM1
  8295 ;; This function is called by:
  8296 ;;		Interrupt level 1
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	intcodelo
  8301  000018                     __pintcodelo:
  8302                           	opt stack 0
  8303  000018                     _ISR_bassa:
  8304                           	opt stack 26
  8305                           
  8306                           ;incstack = 0
  8307  000018  803F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  8308  00001A  CFD8 F00F          	movff	status,??_ISR_bassa+2
  8309  00001E  CFE8 F010          	movff	wreg,??_ISR_bassa+3
  8310  000022  CFE0 F011          	movff	bsr,??_ISR_bassa+4
  8311  000026  CFFA F012          	movff	pclath,??_ISR_bassa+5
  8312  00002A  CFFB F013          	movff	pclatu,??_ISR_bassa+6
  8313  00002E  CFE9 F014          	movff	fsr0l,??_ISR_bassa+7
  8314  000032  CFEA F015          	movff	fsr0h,??_ISR_bassa+8
  8315  000036  CFE1 F016          	movff	fsr1l,??_ISR_bassa+9
  8316  00003A  CFE2 F017          	movff	fsr1h,??_ISR_bassa+10
  8317  00003E  CFD9 F018          	movff	fsr2l,??_ISR_bassa+11
  8318  000042  CFDA F019          	movff	fsr2h,??_ISR_bassa+12
  8319  000046  CFF3 F01A          	movff	prodl,??_ISR_bassa+13
  8320  00004A  CFF4 F01B          	movff	prodh,??_ISR_bassa+14
  8321  00004E  CFF6 F01C          	movff	tblptrl,??_ISR_bassa+15
  8322  000052  CFF7 F01D          	movff	tblptrh,??_ISR_bassa+16
  8323  000056  CFF8 F01E          	movff	tblptru,??_ISR_bassa+17
  8324  00005A  CFF5 F01F          	movff	tablat,??_ISR_bassa+18
  8325                           
  8326                           ;motore.c: 94: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  8327  00005E  A0A4               	btfss	4004,0,c	;volatile
  8328  000060  B2A4               	btfsc	4004,1,c	;volatile
  8329  000062  D001               	goto	i1l4088
  8330  000064  D0A5               	goto	i1l664
  8331  000066                     i1l4088:
  8332                           
  8333                           ;motore.c: 95: if (CANisRxReady()) {
  8334  000066  EC3A  F015         	call	_CANisRxReady	;wreg free
  8335  00006A  0900               	iorlw	0
  8336  00006C  B4D8               	btfsc	status,2,c
  8337  00006E  D09E               	goto	i1l667
  8338                           
  8339                           ;motore.c: 96: CANreceiveMessage(&msg);
  8340  000070  0E93               	movlw	low _msg
  8341  000072  6E01               	movwf	CANreceiveMessage@msg,c
  8342  000074  0E00               	movlw	high _msg
  8343  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  8344  000078  ECEE  F00C         	call	_CANreceiveMessage	;wreg free
  8345                           
  8346                           ;motore.c: 97: if (msg.identifier == 0b00000000000000000000000000011) {
  8347  00007C  0E03               	movlw	3
  8348  00007E  0100               	movlb	0	; () banked
  8349  000080  1993               	xorwf	_msg& (0+255),w,b
  8350  000082  0100               	movlb	0	; () banked
  8351  000084  1194               	iorwf	(_msg+1)& (0+255),w,b
  8352  000086  0100               	movlb	0	; () banked
  8353  000088  1195               	iorwf	(_msg+2)& (0+255),w,b
  8354  00008A  0100               	movlb	0	; () banked
  8355  00008C  1196               	iorwf	(_msg+3)& (0+255),w,b
  8356  00008E  A4D8               	btfss	status,2,c
  8357  000090  D01C               	goto	i1l4106
  8358                           
  8359                           ; BSR set to: 0
  8360                           ;motore.c: 99: requestSpeed = msg.data[0];
  8361  000092  0100               	movlb	0	; () banked
  8362  000094  5197               	movf	(_msg+4)& (0+255),w,b
  8363  000096  0100               	movlb	0	; () banked
  8364  000098  6F84               	movwf	_requestSpeed& (0+255),b	;volatile
  8365  00009A  6B85               	clrf	(_requestSpeed+1)& (0+255),b	;volatile
  8366  00009C  6B86               	clrf	(_requestSpeed+2)& (0+255),b	;volatile
  8367  00009E  6B87               	clrf	(_requestSpeed+3)& (0+255),b	;volatile
  8368                           
  8369                           ; BSR set to: 0
  8370                           ;motore.c: 100: dir = msg.data[1];
  8371  0000A0  C098  F03C         	movff	_msg+5,_dir	;volatile
  8372  0000A4  6A3D               	clrf	_dir+1,c	;volatile
  8373                           
  8374                           ; BSR set to: 0
  8375                           ;motore.c: 101: if (dir == 1) {
  8376  0000A6  043C               	decf	_dir,w,c	;volatile
  8377  0000A8  103D               	iorwf	_dir+1,w,c	;volatile
  8378  0000AA  A4D8               	btfss	status,2,c
  8379  0000AC  D005               	goto	i1l4102
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;motore.c: 102: SetOutputEPWM1(0b01111111, 0b11111100);
  8383  0000AE  0EFC               	movlw	252
  8384  0000B0  6E01               	movwf	i1SetOutputEPWM1@outputmode,c
  8385  0000B2  0E7F               	movlw	127
  8386  0000B4  EC9F  F014         	call	i1_SetOutputEPWM1
  8387  0000B8                     i1l4102:
  8388                           
  8389                           ;motore.c: 103: }
  8390                           ;motore.c: 104: if (dir == 0) {
  8391  0000B8  503C               	movf	_dir,w,c	;volatile
  8392  0000BA  103D               	iorwf	_dir+1,w,c	;volatile
  8393  0000BC  A4D8               	btfss	status,2,c
  8394  0000BE  D005               	goto	i1l4106
  8395                           
  8396                           ;motore.c: 105: SetOutputEPWM1(0b11111111, 0b11111100);
  8397  0000C0  0EFC               	movlw	252
  8398  0000C2  6E01               	movwf	i1SetOutputEPWM1@outputmode,c
  8399  0000C4  0EFF               	movlw	255
  8400  0000C6  EC9F  F014         	call	i1_SetOutputEPWM1
  8401  0000CA                     i1l4106:
  8402                           
  8403                           ;motore.c: 106: }
  8404                           ;motore.c: 110: }
  8405                           ;motore.c: 111: if (msg.identifier == 0b00000000000000000000000000001) {
  8406  0000CA  0100               	movlb	0	; () banked
  8407  0000CC  0593               	decf	_msg& (0+255),w,b
  8408  0000CE  0100               	movlb	0	; () banked
  8409  0000D0  1194               	iorwf	(_msg+1)& (0+255),w,b
  8410  0000D2  0100               	movlb	0	; () banked
  8411  0000D4  1195               	iorwf	(_msg+2)& (0+255),w,b
  8412  0000D6  0100               	movlb	0	; () banked
  8413  0000D8  1196               	iorwf	(_msg+3)& (0+255),w,b
  8414  0000DA  A4D8               	btfss	status,2,c
  8415  0000DC  D00A               	goto	i1l4112
  8416                           
  8417                           ; BSR set to: 0
  8418                           ;motore.c: 112: requestSpeed = 0;
  8419  0000DE  0E00               	movlw	0
  8420  0000E0  0100               	movlb	0	; () banked
  8421  0000E2  6F84               	movwf	_requestSpeed& (0+255),b	;volatile
  8422  0000E4  0E00               	movlw	0
  8423  0000E6  6F85               	movwf	(_requestSpeed+1)& (0+255),b	;volatile
  8424  0000E8  0E00               	movlw	0
  8425  0000EA  6F86               	movwf	(_requestSpeed+2)& (0+255),b	;volatile
  8426  0000EC  0E00               	movlw	0
  8427  0000EE  6F87               	movwf	(_requestSpeed+3)& (0+255),b	;volatile
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;motore.c: 113: PORTAbits.RA1 = 1;
  8431  0000F0  8280               	bsf	3968,1,c	;volatile
  8432  0000F2                     i1l4112:
  8433                           
  8434                           ; BSR set to: 0
  8435                           ;motore.c: 114: }
  8436                           ;motore.c: 115: if (msg.identifier == 0b00000000000000000000000000110) {
  8437  0000F2  0E06               	movlw	6
  8438  0000F4  0100               	movlb	0	; () banked
  8439  0000F6  1993               	xorwf	_msg& (0+255),w,b
  8440  0000F8  0100               	movlb	0	; () banked
  8441  0000FA  1194               	iorwf	(_msg+1)& (0+255),w,b
  8442  0000FC  0100               	movlb	0	; () banked
  8443  0000FE  1195               	iorwf	(_msg+2)& (0+255),w,b
  8444  000100  0100               	movlb	0	; () banked
  8445  000102  1196               	iorwf	(_msg+3)& (0+255),w,b
  8446  000104  A4D8               	btfss	status,2,c
  8447  000106  D036               	goto	i1l4132
  8448                           
  8449                           ; BSR set to: 0
  8450                           ;motore.c: 123: for (int i = 0; i < 8; i++) {
  8451  000108  0E00               	movlw	0
  8452  00010A  6E21               	movwf	ISR_bassa@i+1,c
  8453  00010C  0E00               	movlw	0
  8454  00010E  6E20               	movwf	ISR_bassa@i,c
  8455                           
  8456                           ; BSR set to: 0
  8457  000110  BE21               	btfsc	ISR_bassa@i+1,7,c
  8458  000112  D006               	goto	i1l4120
  8459  000114  5021               	movf	ISR_bassa@i+1,w,c
  8460  000116  E119               	bnz	i1l674
  8461  000118  0E08               	movlw	8
  8462  00011A  5C20               	subwf	ISR_bassa@i,w,c
  8463  00011C  B0D8               	btfsc	status,0,c
  8464  00011E  D015               	goto	i1l674
  8465  000120                     i1l4120:
  8466                           
  8467                           ;motore.c: 124: current[i] = msg.data[i];
  8468  000120  0E97               	movlw	low (_msg+4)
  8469  000122  2420               	addwf	ISR_bassa@i,w,c
  8470  000124  6ED9               	movwf	fsr2l,c
  8471  000126  0E00               	movlw	high (_msg+4)
  8472  000128  2021               	addwfc	ISR_bassa@i+1,w,c
  8473  00012A  6EDA               	movwf	fsr2h,c
  8474  00012C  0E39               	movlw	low _current
  8475  00012E  2420               	addwf	ISR_bassa@i,w,c
  8476  000130  6EE1               	movwf	fsr1l,c
  8477  000132  0E00               	movlw	high _current
  8478  000134  2021               	addwfc	ISR_bassa@i+1,w,c
  8479  000136  6EE2               	movwf	fsr1h,c
  8480  000138  CFDF FFE7          	movff	indf2,indf1
  8481  00013C  4A20               	infsnz	ISR_bassa@i,f,c
  8482  00013E  2A21               	incf	ISR_bassa@i+1,f,c
  8483  000140  BE21               	btfsc	ISR_bassa@i+1,7,c
  8484  000142  D7EE               	goto	i1l4120
  8485  000144  5021               	movf	ISR_bassa@i+1,w,c
  8486  000146  E101               	bnz	i1u482_20
  8487  000148  D7E7               	goto	L3
  8488  00014A                     i1u482_20:
  8489  00014A                     i1l674:
  8490                           
  8491                           ;motore.c: 125: }
  8492                           ;motore.c: 128: left_speed = msg.data[1];
  8493  00014A  C098  F032         	movff	_msg+5,_left_speed
  8494  00014E  6A33               	clrf	_left_speed+1,c
  8495                           
  8496                           ;motore.c: 129: left_speed = ((left_speed << 8) | (msg.data[0]));
  8497  000150  5032               	movf	_left_speed,w,c
  8498  000152  6E0D               	movwf	??_ISR_bassa& (0+255),c
  8499  000154  0100               	movlb	0	; () banked
  8500  000156  5197               	movf	(_msg+4)& (0+255),w,b
  8501  000158  6E32               	movwf	_left_speed,c
  8502  00015A  C00D  F033         	movff	??_ISR_bassa,_left_speed+1
  8503                           
  8504                           ; BSR set to: 0
  8505                           ;motore.c: 130: right_speed = msg.data[3];
  8506  00015E  C09A  F034         	movff	_msg+7,_right_speed
  8507  000162  6A35               	clrf	_right_speed+1,c
  8508                           
  8509                           ;motore.c: 131: right_speed = ((right_speed << 8) | (msg.data[2]));
  8510  000164  5034               	movf	_right_speed,w,c
  8511  000166  6E0D               	movwf	??_ISR_bassa& (0+255),c
  8512  000168  0100               	movlb	0	; () banked
  8513  00016A  5199               	movf	(_msg+6)& (0+255),w,b
  8514  00016C  6E34               	movwf	_right_speed,c
  8515  00016E  C00D  F035         	movff	??_ISR_bassa,_right_speed+1
  8516                           
  8517                           ; BSR set to: 0
  8518                           ;motore.c: 132: speed_fetched = 1;
  8519  000172  803B               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
  8520  000174                     i1l4132:
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;motore.c: 133: }
  8524                           ;motore.c: 134: if (msg.identifier == 0b00000000000000000000000000010) {
  8525  000174  0E02               	movlw	2
  8526  000176  0100               	movlb	0	; () banked
  8527  000178  1993               	xorwf	_msg& (0+255),w,b
  8528  00017A  0100               	movlb	0	; () banked
  8529  00017C  1194               	iorwf	(_msg+1)& (0+255),w,b
  8530  00017E  0100               	movlb	0	; () banked
  8531  000180  1195               	iorwf	(_msg+2)& (0+255),w,b
  8532  000182  0100               	movlb	0	; () banked
  8533  000184  1196               	iorwf	(_msg+3)& (0+255),w,b
  8534  000186  B4D8               	btfsc	status,2,c
  8535  000188  D006               	goto	i1l4138
  8536  00018A  D010               	goto	i1l667
  8537  00018C                     i1l677:
  8538                           
  8539                           ; BSR set to: 0
  8540  00018C  823A               	bsf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  8541                           
  8542                           ;motore.c: 137: break;
  8543  00018E  D00E               	goto	i1l667
  8544  000190                     i1l679:
  8545                           
  8546                           ; BSR set to: 0
  8547  000190  863A               	bsf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  8548  000192                     i1l680:
  8549                           
  8550                           ; BSR set to: 0
  8551  000192  843A               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  8552                           
  8553                           ; BSR set to: 0
  8554                           ;motore.c: 143: }
  8555                           
  8556                           ;motore.c: 142: break;
  8557  000194  D00B               	goto	i1l667
  8558  000196                     i1l4138:
  8559                           
  8560                           ; BSR set to: 0
  8561  000196  0100               	movlb	0	; () banked
  8562  000198  5197               	movf	(_msg+4)& (0+255),w,b
  8563                           
  8564                           ; Switch size 1, requested type "space"
  8565                           ; Number of cases is 3, Range of values is 1 to 3
  8566                           ; switch strategies available:
  8567                           ; Name         Instructions Cycles
  8568                           ; simple_byte           10     6 (average)
  8569                           ;	Chosen strategy is simple_byte
  8570  00019A  0A01               	xorlw	1	; case 1
  8571  00019C  B4D8               	btfsc	status,2,c
  8572  00019E  D7F6               	goto	i1l677
  8573  0001A0  0A03               	xorlw	3	; case 2
  8574  0001A2  B4D8               	btfsc	status,2,c
  8575  0001A4  D7F5               	goto	i1l679
  8576  0001A6  0A01               	xorlw	1	; case 3
  8577  0001A8  B4D8               	btfsc	status,2,c
  8578  0001AA  D7F3               	goto	i1l680
  8579  0001AC                     i1l667:
  8580                           
  8581                           ;motore.c: 145: }
  8582                           ;motore.c: 146: }
  8583                           ;motore.c: 147: PIR3bits.RXB0IF = 0;
  8584  0001AC  90A4               	bcf	4004,0,c	;volatile
  8585                           
  8586                           ;motore.c: 148: PIR3bits.RXB1IF = 0;
  8587  0001AE  92A4               	bcf	4004,1,c	;volatile
  8588  0001B0                     i1l664:
  8589                           
  8590                           ;motore.c: 149: }
  8591                           ;motore.c: 150: if (PIR2bits.TMR3IF) {
  8592  0001B0  A2A1               	btfss	4001,1,c	;volatile
  8593  0001B2  D00C               	goto	i1l682
  8594                           
  8595                           ;motore.c: 151: timeCounter++;
  8596  0001B4  0E01               	movlw	1
  8597  0001B6  0100               	movlb	0	; () banked
  8598  0001B8  2788               	addwf	_timeCounter& (0+255),f,b
  8599  0001BA  0E00               	movlw	0
  8600  0001BC  2389               	addwfc	(_timeCounter+1)& (0+255),f,b
  8601  0001BE  238A               	addwfc	(_timeCounter+2)& (0+255),f,b
  8602  0001C0  238B               	addwfc	(_timeCounter+3)& (0+255),f,b
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;motore.c: 152: TMR3H = 0x63;
  8606  0001C2  0E63               	movlw	99
  8607  0001C4  6EB3               	movwf	4019,c	;volatile
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;motore.c: 153: TMR3L = 0xC0;
  8611  0001C6  0EC0               	movlw	192
  8612  0001C8  6EB2               	movwf	4018,c	;volatile
  8613                           
  8614                           ; BSR set to: 0
  8615                           ;motore.c: 154: PIR2bits.TMR3IF = 0;
  8616  0001CA  92A1               	bcf	4001,1,c	;volatile
  8617  0001CC                     i1l682:
  8618  0001CC  C01F  FFF5         	movff	??_ISR_bassa+18,tablat
  8619  0001D0  C01E  FFF8         	movff	??_ISR_bassa+17,tblptru
  8620  0001D4  C01D  FFF7         	movff	??_ISR_bassa+16,tblptrh
  8621  0001D8  C01C  FFF6         	movff	??_ISR_bassa+15,tblptrl
  8622  0001DC  C01B  FFF4         	movff	??_ISR_bassa+14,prodh
  8623  0001E0  C01A  FFF3         	movff	??_ISR_bassa+13,prodl
  8624  0001E4  C019  FFDA         	movff	??_ISR_bassa+12,fsr2h
  8625  0001E8  C018  FFD9         	movff	??_ISR_bassa+11,fsr2l
  8626  0001EC  C017  FFE2         	movff	??_ISR_bassa+10,fsr1h
  8627  0001F0  C016  FFE1         	movff	??_ISR_bassa+9,fsr1l
  8628  0001F4  C015  FFEA         	movff	??_ISR_bassa+8,fsr0h
  8629  0001F8  C014  FFE9         	movff	??_ISR_bassa+7,fsr0l
  8630  0001FC  C013  FFFB         	movff	??_ISR_bassa+6,pclatu
  8631  000200  C012  FFFA         	movff	??_ISR_bassa+5,pclath
  8632  000204  C011  FFE0         	movff	??_ISR_bassa+4,bsr
  8633  000208  C010  FFE8         	movff	??_ISR_bassa+3,wreg
  8634  00020C  C00F  FFD8         	movff	??_ISR_bassa+2,status
  8635  000210  903F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  8636  000212  0010               	retfie	
  8637  000214                     __end_of_ISR_bassa:
  8638                           	opt stack 0
  8639                           pclatu	equ	0xFFB
  8640                           pclath	equ	0xFFA
  8641                           tblptru	equ	0xFF8
  8642                           tblptrh	equ	0xFF7
  8643                           tblptrl	equ	0xFF6
  8644                           tablat	equ	0xFF5
  8645                           prodh	equ	0xFF4
  8646                           prodl	equ	0xFF3
  8647                           intcon	equ	0xFF2
  8648                           postinc0	equ	0xFEE
  8649                           fsr0h	equ	0xFEA
  8650                           fsr0l	equ	0xFE9
  8651                           wreg	equ	0xFE8
  8652                           indf1	equ	0xFE7
  8653                           postdec1	equ	0xFE5
  8654                           fsr1h	equ	0xFE2
  8655                           fsr1l	equ	0xFE1
  8656                           bsr	equ	0xFE0
  8657                           indf2	equ	0xFDF
  8658                           fsr2h	equ	0xFDA
  8659                           fsr2l	equ	0xFD9
  8660                           status	equ	0xFD8
  8661                           
  8662 ;; *************** function i1_SetOutputEPWM1 *****************
  8663 ;; Defined at:
  8664 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  8665 ;; Parameters:    Size  Location     Type
  8666 ;;  outputconfig    1    wreg     unsigned char 
  8667 ;;  outputmode      1    0[COMRAM] unsigned char 
  8668 ;; Auto vars:     Size  Location     Type
  8669 ;;  outputconfig    1    1[COMRAM] unsigned char 
  8670 ;; Return value:  Size  Location     Type
  8671 ;;		None               void
  8672 ;; Registers used:
  8673 ;;		wreg, status,2, status,0
  8674 ;; Tracked objects:
  8675 ;;		On entry : 0/0
  8676 ;;		On exit  : 0/0
  8677 ;;		Unchanged: 0/0
  8678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8679 ;;      Params:         1       0       0       0
  8680 ;;      Locals:         1       0       0       0
  8681 ;;      Temps:          0       0       0       0
  8682 ;;      Totals:         2       0       0       0
  8683 ;;Total ram usage:        2 bytes
  8684 ;; Hardware stack levels used:    1
  8685 ;; This function calls:
  8686 ;;		Nothing
  8687 ;; This function is called by:
  8688 ;;		_ISR_bassa
  8689 ;; This function uses a non-reentrant model
  8690 ;;
  8691                           
  8692                           	psect	text24
  8693  00293E                     __ptext24:
  8694                           	opt stack 0
  8695  00293E                     i1_SetOutputEPWM1:
  8696                           	opt stack 26
  8697                           
  8698                           ;incstack = 0
  8699                           ;i1SetOutputEPWM1@outputconfig stored from wreg
  8700  00293E  6E02               	movwf	i1SetOutputEPWM1@outputconfig,c
  8701  002940  50BA               	movf	4026,w,c	;volatile
  8702  002942  09C0               	iorlw	192
  8703  002944  1402               	andwf	i1SetOutputEPWM1@outputconfig,w,c
  8704  002946  6EBA               	movwf	4026,c	;volatile
  8705  002948  50BA               	movf	4026,w,c	;volatile
  8706  00294A  090F               	iorlw	15
  8707  00294C  1401               	andwf	i1SetOutputEPWM1@outputmode,w,c
  8708  00294E  6EBA               	movwf	4026,c	;volatile
  8709  002950  0E3F               	movlw	63
  8710  002952  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  8711  002954  A4D8               	btfss	status,2,c
  8712  002956  D002               	goto	i1l4068
  8713  002958  9895               	bcf	3989,4,c	;volatile
  8714  00295A  0012               	return	
  8715  00295C                     i1l4068:
  8716  00295C  0EBF               	movlw	191
  8717  00295E  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  8718  002960  A4D8               	btfss	status,2,c
  8719  002962  D003               	goto	i1l4072
  8720  002964  9895               	bcf	3989,4,c	;volatile
  8721  002966  9A95               	bcf	3989,5,c	;volatile
  8722  002968  0012               	return	
  8723  00296A                     i1l4072:
  8724  00296A  0E7F               	movlw	127
  8725  00296C  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  8726  00296E  B4D8               	btfsc	status,2,c
  8727  002970  D003               	goto	i1l768
  8728  002972  2802               	incf	i1SetOutputEPWM1@outputconfig,w,c
  8729  002974  A4D8               	btfss	status,2,c
  8730  002976  0012               	return	
  8731  002978                     i1l768:
  8732  002978  9895               	bcf	3989,4,c	;volatile
  8733  00297A  9A95               	bcf	3989,5,c	;volatile
  8734  00297C  9C95               	bcf	3989,6,c	;volatile
  8735  00297E  9E95               	bcf	3989,7,c	;volatile
  8736  002980  0012               	return	
  8737  002982                     __end_ofi1_SetOutputEPWM1:
  8738                           	opt stack 0
  8739                           pclatu	equ	0xFFB
  8740                           pclath	equ	0xFFA
  8741                           tblptru	equ	0xFF8
  8742                           tblptrh	equ	0xFF7
  8743                           tblptrl	equ	0xFF6
  8744                           tablat	equ	0xFF5
  8745                           prodh	equ	0xFF4
  8746                           prodl	equ	0xFF3
  8747                           intcon	equ	0xFF2
  8748                           postinc0	equ	0xFEE
  8749                           fsr0h	equ	0xFEA
  8750                           fsr0l	equ	0xFE9
  8751                           wreg	equ	0xFE8
  8752                           indf1	equ	0xFE7
  8753                           postdec1	equ	0xFE5
  8754                           fsr1h	equ	0xFE2
  8755                           fsr1l	equ	0xFE1
  8756                           bsr	equ	0xFE0
  8757                           indf2	equ	0xFDF
  8758                           fsr2h	equ	0xFDA
  8759                           fsr2l	equ	0xFD9
  8760                           status	equ	0xFD8
  8761                           
  8762 ;; *************** function _CANreceiveMessage *****************
  8763 ;; Defined at:
  8764 ;;		line 528 in file "CANlib.h"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;  msg             2    0[COMRAM] PTR struct .
  8767 ;;		 -> msg(15), 
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;  tamp            1   11[COMRAM] unsigned char 
  8770 ;;  error           1   10[COMRAM] unsigned char 
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  1    wreg      unsigned char 
  8773 ;; Registers used:
  8774 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8780 ;;      Params:         2       0       0       0
  8781 ;;      Locals:         2       0       0       0
  8782 ;;      Temps:          8       0       0       0
  8783 ;;      Totals:        12       0       0       0
  8784 ;;Total ram usage:       12 bytes
  8785 ;; Hardware stack levels used:    1
  8786 ;; This function calls:
  8787 ;;		Nothing
  8788 ;; This function is called by:
  8789 ;;		_ISR_bassa
  8790 ;; This function uses a non-reentrant model
  8791 ;;
  8792                           
  8793                           	psect	text25
  8794  0019DC                     __ptext25:
  8795                           	opt stack 0
  8796  0019DC                     _CANreceiveMessage:
  8797                           	opt stack 26
  8798                           
  8799                           ;CANlib.h: 530: BYTE tamp;
  8800                           ;CANlib.h: 531: BYTE error = 0;
  8801                           
  8802                           ;incstack = 0
  8803  0019DC  0E00               	movlw	0
  8804  0019DE  6E0B               	movwf	CANreceiveMessage@error,c
  8805                           
  8806                           ;CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  8807  0019E0  BE74               	btfsc	3956,7,c	;volatile
  8808                           
  8809                           ;CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  8810  0019E2  800B               	bsf	CANreceiveMessage@error,0,c
  8811                           
  8812                           ;CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  8813  0019E4  BC74               	btfsc	3956,6,c	;volatile
  8814                           
  8815                           ;CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  8816  0019E6  820B               	bsf	CANreceiveMessage@error,1,c
  8817                           
  8818                           ;CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  8819  0019E8  010F               	movlb	15	; () banked
  8820  0019EA  AF50               	btfss	80,7,b	;volatile
  8821  0019EC  D143               	goto	i1l416
  8822                           
  8823                           ; BSR set to: 15
  8824                           ;CANlib.h: 541: {
  8825                           ;CANlib.h: 542: msg->identifier = 0;
  8826  0019EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8827  0019F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8828  0019F6  6ADE               	clrf	postinc2,c
  8829  0019F8  6ADE               	clrf	postinc2,c
  8830  0019FA  6ADE               	clrf	postinc2,c
  8831  0019FC  6ADD               	clrf	postdec2,c
  8832                           
  8833                           ; BSR set to: 15
  8834                           ;CANlib.h: 543: msg->data[0] =RXB1D0;
  8835  0019FE  EE20 F004          	lfsr	2,4
  8836  001A02  5001               	movf	CANreceiveMessage@msg,w,c
  8837  001A04  26D9               	addwf	fsr2l,f,c
  8838  001A06  5002               	movf	CANreceiveMessage@msg+1,w,c
  8839  001A08  22DA               	addwfc	fsr2h,f,c
  8840  001A0A  CF56 FFDF          	movff	3926,indf2	;volatile
  8841                           
  8842                           ; BSR set to: 15
  8843                           ;CANlib.h: 544: msg->data[1] =RXB1D1;
  8844  001A0E  EE20 F005          	lfsr	2,5
  8845  001A12  5001               	movf	CANreceiveMessage@msg,w,c
  8846  001A14  26D9               	addwf	fsr2l,f,c
  8847  001A16  5002               	movf	CANreceiveMessage@msg+1,w,c
  8848  001A18  22DA               	addwfc	fsr2h,f,c
  8849  001A1A  CF57 FFDF          	movff	3927,indf2	;volatile
  8850                           
  8851                           ; BSR set to: 15
  8852                           ;CANlib.h: 545: msg->data[2] =RXB1D2;
  8853  001A1E  EE20 F006          	lfsr	2,6
  8854  001A22  5001               	movf	CANreceiveMessage@msg,w,c
  8855  001A24  26D9               	addwf	fsr2l,f,c
  8856  001A26  5002               	movf	CANreceiveMessage@msg+1,w,c
  8857  001A28  22DA               	addwfc	fsr2h,f,c
  8858  001A2A  CF58 FFDF          	movff	3928,indf2	;volatile
  8859                           
  8860                           ; BSR set to: 15
  8861                           ;CANlib.h: 546: msg->data[3] =RXB1D3;
  8862  001A2E  EE20 F007          	lfsr	2,7
  8863  001A32  5001               	movf	CANreceiveMessage@msg,w,c
  8864  001A34  26D9               	addwf	fsr2l,f,c
  8865  001A36  5002               	movf	CANreceiveMessage@msg+1,w,c
  8866  001A38  22DA               	addwfc	fsr2h,f,c
  8867  001A3A  CF59 FFDF          	movff	3929,indf2	;volatile
  8868                           
  8869                           ; BSR set to: 15
  8870                           ;CANlib.h: 547: msg->data[4] =RXB1D4;
  8871  001A3E  EE20 F008          	lfsr	2,8
  8872  001A42  5001               	movf	CANreceiveMessage@msg,w,c
  8873  001A44  26D9               	addwf	fsr2l,f,c
  8874  001A46  5002               	movf	CANreceiveMessage@msg+1,w,c
  8875  001A48  22DA               	addwfc	fsr2h,f,c
  8876  001A4A  CF5A FFDF          	movff	3930,indf2	;volatile
  8877                           
  8878                           ; BSR set to: 15
  8879                           ;CANlib.h: 548: msg->data[5] =RXB1D5;
  8880  001A4E  EE20 F009          	lfsr	2,9
  8881  001A52  5001               	movf	CANreceiveMessage@msg,w,c
  8882  001A54  26D9               	addwf	fsr2l,f,c
  8883  001A56  5002               	movf	CANreceiveMessage@msg+1,w,c
  8884  001A58  22DA               	addwfc	fsr2h,f,c
  8885  001A5A  CF5B FFDF          	movff	3931,indf2	;volatile
  8886                           
  8887                           ; BSR set to: 15
  8888                           ;CANlib.h: 549: msg->data[6] =RXB1D6;
  8889  001A5E  EE20 F00A          	lfsr	2,10
  8890  001A62  5001               	movf	CANreceiveMessage@msg,w,c
  8891  001A64  26D9               	addwf	fsr2l,f,c
  8892  001A66  5002               	movf	CANreceiveMessage@msg+1,w,c
  8893  001A68  22DA               	addwfc	fsr2h,f,c
  8894  001A6A  CF5C FFDF          	movff	3932,indf2	;volatile
  8895                           
  8896                           ; BSR set to: 15
  8897                           ;CANlib.h: 550: msg->data[7] =RXB1D7;
  8898  001A6E  EE20 F00B          	lfsr	2,11
  8899  001A72  5001               	movf	CANreceiveMessage@msg,w,c
  8900  001A74  26D9               	addwf	fsr2l,f,c
  8901  001A76  5002               	movf	CANreceiveMessage@msg+1,w,c
  8902  001A78  22DA               	addwfc	fsr2h,f,c
  8903  001A7A  CF5D FFDF          	movff	3933,indf2	;volatile
  8904                           
  8905                           ; BSR set to: 15
  8906                           ;CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  8907  001A7E  EE20 F00E          	lfsr	2,14
  8908  001A82  5001               	movf	CANreceiveMessage@msg,w,c
  8909  001A84  26D9               	addwf	fsr2l,f,c
  8910  001A86  5002               	movf	CANreceiveMessage@msg+1,w,c
  8911  001A88  22DA               	addwfc	fsr2h,f,c
  8912  001A8A  010F               	movlb	15	; () banked
  8913  001A8C  AD55               	btfss	85,6,b	;volatile
  8914  001A8E  D002               	goto	i1u412_20
  8915  001A90  0E01               	movlw	1
  8916  001A92  D001               	goto	i1u412_26
  8917  001A94                     i1u412_20:
  8918  001A94  0E00               	movlw	0
  8919  001A96                     i1u412_26:
  8920  001A96  6EDF               	movwf	indf2,c
  8921                           
  8922                           ; BSR set to: 15
  8923                           ;CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  8924  001A98  EE20 F00D          	lfsr	2,13
  8925  001A9C  5001               	movf	CANreceiveMessage@msg,w,c
  8926  001A9E  26D9               	addwf	fsr2l,f,c
  8927  001AA0  5002               	movf	CANreceiveMessage@msg+1,w,c
  8928  001AA2  22DA               	addwfc	fsr2h,f,c
  8929  001AA4  010F               	movlb	15	; () banked
  8930  001AA6  5155               	movf	85,w,b	;volatile
  8931  001AA8  0B0F               	andlw	15
  8932  001AAA  6EDF               	movwf	indf2,c
  8933                           
  8934                           ; BSR set to: 15
  8935                           ;CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  8936  001AAC  EE20 F00C          	lfsr	2,12
  8937  001AB0  5001               	movf	CANreceiveMessage@msg,w,c
  8938  001AB2  26D9               	addwf	fsr2l,f,c
  8939  001AB4  5002               	movf	CANreceiveMessage@msg+1,w,c
  8940  001AB6  22DA               	addwfc	fsr2h,f,c
  8941  001AB8  010F               	movlb	15	; () banked
  8942  001ABA  A752               	btfss	82,3,b	;volatile
  8943  001ABC  D002               	goto	i1u413_20
  8944  001ABE  0E01               	movlw	1
  8945  001AC0  D001               	goto	i1u413_26
  8946  001AC2                     i1u413_20:
  8947  001AC2  0E00               	movlw	0
  8948  001AC4                     i1u413_26:
  8949  001AC4  6EDF               	movwf	indf2,c
  8950                           
  8951                           ; BSR set to: 15
  8952                           ;CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  8953  001AC6  010F               	movlb	15	; () banked
  8954  001AC8  B752               	btfsc	82,3,b	;volatile
  8955  001ACA  D044               	goto	i1l3712
  8956                           
  8957                           ; BSR set to: 15
  8958                           ;CANlib.h: 559: {
  8959                           ;CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  8960  001ACC  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8961  001AD0  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8962  001AD2  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8963  001AD4  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8964  001AD6  0E03               	movlw	3
  8965  001AD8                     i1u415_25:
  8966  001AD8  90D8               	bcf	status,0,c
  8967  001ADA  3603               	rlcf	??_CANreceiveMessage,f,c
  8968  001ADC  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8969  001ADE  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8970  001AE0  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8971  001AE2  2EE8               	decfsz	wreg,f,c
  8972  001AE4  D7F9               	goto	i1u415_25
  8973  001AE6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8974  001AEA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8975  001AEE  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8976  001AF2  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8977  001AF6  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8978  001AFA  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8979                           
  8980                           ; BSR set to: 15
  8981                           ;CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  8982  001AFE  010F               	movlb	15	; () banked
  8983  001B00  3952               	swapf	82,w,b	;volatile
  8984  001B02  42E8               	rrncf	wreg,f,c
  8985  001B04  0B07               	andlw	7
  8986  001B06  0B07               	andlw	7
  8987  001B08  6E0C               	movwf	CANreceiveMessage@tamp,c
  8988                           
  8989                           ; BSR set to: 15
  8990                           ;CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  8991  001B0A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8992  001B0E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8993  001B12  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8994  001B16  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8995  001B1A  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8996  001B1E  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8997  001B22  500C               	movf	CANreceiveMessage@tamp,w,c
  8998  001B24  2403               	addwf	??_CANreceiveMessage,w,c
  8999  001B26  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  9000  001B28  0E00               	movlw	0
  9001  001B2A  2004               	addwfc	??_CANreceiveMessage+1,w,c
  9002  001B2C  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  9003  001B2E  0E00               	movlw	0
  9004  001B30  2005               	addwfc	??_CANreceiveMessage+2,w,c
  9005  001B32  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  9006  001B34  0E00               	movlw	0
  9007  001B36  2006               	addwfc	??_CANreceiveMessage+3,w,c
  9008  001B38  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  9009  001B3A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9010  001B3E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9011  001B42  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  9012  001B46  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  9013  001B4A  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  9014  001B4E  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  9015                           
  9016                           ;CANlib.h: 563: }
  9017  001B52  D08D               	goto	i1l3738
  9018  001B54                     i1l3712:
  9019                           
  9020                           ; BSR set to: 15
  9021                           ;CANlib.h: 564: else
  9022                           ;CANlib.h: 565: {
  9023                           ;CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  9024  001B54  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  9025  001B58  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9026  001B5A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9027  001B5C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9028  001B5E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9029  001B62  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9030  001B66  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  9031  001B6A  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9032  001B6E  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9033  001B72  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  9034                           
  9035                           ; BSR set to: 15
  9036                           ;CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  9037  001B76  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  9038  001B7A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9039  001B7C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9040  001B7E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9041  001B80  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  9042  001B84  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  9043  001B88  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  9044  001B8C  6A03               	clrf	??_CANreceiveMessage,c
  9045  001B8E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9046  001B92  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9047  001B96  5003               	movf	??_CANreceiveMessage,w,c
  9048  001B98  26DE               	addwf	postinc2,f,c
  9049  001B9A  5004               	movf	??_CANreceiveMessage+1,w,c
  9050  001B9C  22DE               	addwfc	postinc2,f,c
  9051  001B9E  5005               	movf	??_CANreceiveMessage+2,w,c
  9052  001BA0  22DE               	addwfc	postinc2,f,c
  9053  001BA2  5006               	movf	??_CANreceiveMessage+3,w,c
  9054  001BA4  22DE               	addwfc	postinc2,f,c
  9055                           
  9056                           ; BSR set to: 15
  9057                           ;CANlib.h: 569: if (RXB1SIDLbits.EID16)
  9058  001BA6  010F               	movlb	15	; () banked
  9059  001BA8  A152               	btfss	82,0,b	;volatile
  9060  001BAA  D00C               	goto	i1l3720
  9061                           
  9062                           ; BSR set to: 15
  9063                           ;CANlib.h: 570: msg->identifier |= 0x00010000;
  9064  001BAC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9065  001BB0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9066  001BB4  0E00               	movlw	0
  9067  001BB6  12DE               	iorwf	postinc2,f,c
  9068  001BB8  0E00               	movlw	0
  9069  001BBA  12DE               	iorwf	postinc2,f,c
  9070  001BBC  0E01               	movlw	1
  9071  001BBE  12DE               	iorwf	postinc2,f,c
  9072  001BC0  0E00               	movlw	0
  9073  001BC2  12DE               	iorwf	postinc2,f,c
  9074  001BC4                     i1l3720:
  9075                           
  9076                           ; BSR set to: 15
  9077                           ;CANlib.h: 571: if (RXB1SIDLbits.EID17)
  9078  001BC4  010F               	movlb	15	; () banked
  9079  001BC6  A352               	btfss	82,1,b	;volatile
  9080  001BC8  D00C               	goto	i1l3724
  9081                           
  9082                           ; BSR set to: 15
  9083                           ;CANlib.h: 572: msg->identifier |= 0x00020000;
  9084  001BCA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9085  001BCE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9086  001BD2  0E00               	movlw	0
  9087  001BD4  12DE               	iorwf	postinc2,f,c
  9088  001BD6  0E00               	movlw	0
  9089  001BD8  12DE               	iorwf	postinc2,f,c
  9090  001BDA  0E02               	movlw	2
  9091  001BDC  12DE               	iorwf	postinc2,f,c
  9092  001BDE  0E00               	movlw	0
  9093  001BE0  12DE               	iorwf	postinc2,f,c
  9094  001BE2                     i1l3724:
  9095                           
  9096                           ; BSR set to: 15
  9097                           ;CANlib.h: 573: if (RXB1SIDLbits.SID0)
  9098  001BE2  010F               	movlb	15	; () banked
  9099  001BE4  AB52               	btfss	82,5,b	;volatile
  9100  001BE6  D00C               	goto	i1l3728
  9101                           
  9102                           ; BSR set to: 15
  9103                           ;CANlib.h: 574: msg->identifier |= 0x00040000;
  9104  001BE8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9105  001BEC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9106  001BF0  0E00               	movlw	0
  9107  001BF2  12DE               	iorwf	postinc2,f,c
  9108  001BF4  0E00               	movlw	0
  9109  001BF6  12DE               	iorwf	postinc2,f,c
  9110  001BF8  0E04               	movlw	4
  9111  001BFA  12DE               	iorwf	postinc2,f,c
  9112  001BFC  0E00               	movlw	0
  9113  001BFE  12DE               	iorwf	postinc2,f,c
  9114  001C00                     i1l3728:
  9115                           
  9116                           ; BSR set to: 15
  9117                           ;CANlib.h: 575: if (RXB1SIDLbits.SID1)
  9118  001C00  010F               	movlb	15	; () banked
  9119  001C02  AD52               	btfss	82,6,b	;volatile
  9120  001C04  D00C               	goto	i1l3732
  9121                           
  9122                           ; BSR set to: 15
  9123                           ;CANlib.h: 576: msg->identifier |= 0x00080000;
  9124  001C06  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9125  001C0A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9126  001C0E  0E00               	movlw	0
  9127  001C10  12DE               	iorwf	postinc2,f,c
  9128  001C12  0E00               	movlw	0
  9129  001C14  12DE               	iorwf	postinc2,f,c
  9130  001C16  0E08               	movlw	8
  9131  001C18  12DE               	iorwf	postinc2,f,c
  9132  001C1A  0E00               	movlw	0
  9133  001C1C  12DE               	iorwf	postinc2,f,c
  9134  001C1E                     i1l3732:
  9135                           
  9136                           ; BSR set to: 15
  9137                           ;CANlib.h: 577: if (RXB1SIDLbits.SID2)
  9138  001C1E  010F               	movlb	15	; () banked
  9139  001C20  AF52               	btfss	82,7,b	;volatile
  9140  001C22  D00C               	goto	i1l3736
  9141                           
  9142                           ; BSR set to: 15
  9143                           ;CANlib.h: 578: msg->identifier |= 0x00100000;
  9144  001C24  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9145  001C28  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9146  001C2C  0E00               	movlw	0
  9147  001C2E  12DE               	iorwf	postinc2,f,c
  9148  001C30  0E00               	movlw	0
  9149  001C32  12DE               	iorwf	postinc2,f,c
  9150  001C34  0E10               	movlw	16
  9151  001C36  12DE               	iorwf	postinc2,f,c
  9152  001C38  0E00               	movlw	0
  9153  001C3A  12DE               	iorwf	postinc2,f,c
  9154  001C3C                     i1l3736:
  9155                           
  9156                           ; BSR set to: 15
  9157                           ;CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  9158  001C3C  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  9159  001C40  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9160  001C42  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9161  001C44  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9162  001C46  0E15               	movlw	21
  9163  001C48                     i1u421_25:
  9164  001C48  90D8               	bcf	status,0,c
  9165  001C4A  3603               	rlcf	??_CANreceiveMessage,f,c
  9166  001C4C  3604               	rlcf	??_CANreceiveMessage+1,f,c
  9167  001C4E  3605               	rlcf	??_CANreceiveMessage+2,f,c
  9168  001C50  3606               	rlcf	??_CANreceiveMessage+3,f,c
  9169  001C52  2EE8               	decfsz	wreg,f,c
  9170  001C54  D7F9               	goto	i1u421_25
  9171  001C56  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9172  001C5A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9173  001C5E  5003               	movf	??_CANreceiveMessage,w,c
  9174  001C60  12DE               	iorwf	postinc2,f,c
  9175  001C62  5004               	movf	??_CANreceiveMessage+1,w,c
  9176  001C64  12DE               	iorwf	postinc2,f,c
  9177  001C66  5005               	movf	??_CANreceiveMessage+2,w,c
  9178  001C68  12DE               	iorwf	postinc2,f,c
  9179  001C6A  5006               	movf	??_CANreceiveMessage+3,w,c
  9180  001C6C  12DE               	iorwf	postinc2,f,c
  9181  001C6E                     i1l3738:
  9182                           
  9183                           ; BSR set to: 15
  9184                           ;CANlib.h: 581: }
  9185                           ;CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  9186  001C6E  010F               	movlb	15	; () banked
  9187  001C70  9F50               	bcf	80,7,b	;volatile
  9188                           
  9189                           ; BSR set to: 15
  9190                           ;CANlib.h: 584: return (error);
  9191                           ;	Return value of _CANreceiveMessage is never used
  9192  001C72  0012               	return	
  9193  001C74                     i1l416:
  9194                           
  9195                           ; BSR set to: 15
  9196                           ;CANlib.h: 585: }
  9197                           ;CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  9198  001C74  AE60               	btfss	3936,7,c	;volatile
  9199  001C76  0012               	return	
  9200                           
  9201                           ; BSR set to: 15
  9202                           ;CANlib.h: 588: {
  9203                           ;CANlib.h: 589: msg->identifier = 0;
  9204  001C78  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9205  001C7C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9206  001C80  6ADE               	clrf	postinc2,c
  9207  001C82  6ADE               	clrf	postinc2,c
  9208  001C84  6ADE               	clrf	postinc2,c
  9209  001C86  6ADD               	clrf	postdec2,c
  9210                           
  9211                           ; BSR set to: 15
  9212                           ;CANlib.h: 590: msg->data[0] =RXB0D0;
  9213  001C88  EE20 F004          	lfsr	2,4
  9214  001C8C  5001               	movf	CANreceiveMessage@msg,w,c
  9215  001C8E  26D9               	addwf	fsr2l,f,c
  9216  001C90  5002               	movf	CANreceiveMessage@msg+1,w,c
  9217  001C92  22DA               	addwfc	fsr2h,f,c
  9218  001C94  CF66 FFDF          	movff	3942,indf2	;volatile
  9219                           
  9220                           ; BSR set to: 15
  9221                           ;CANlib.h: 591: msg->data[1] =RXB0D1;
  9222  001C98  EE20 F005          	lfsr	2,5
  9223  001C9C  5001               	movf	CANreceiveMessage@msg,w,c
  9224  001C9E  26D9               	addwf	fsr2l,f,c
  9225  001CA0  5002               	movf	CANreceiveMessage@msg+1,w,c
  9226  001CA2  22DA               	addwfc	fsr2h,f,c
  9227  001CA4  CF67 FFDF          	movff	3943,indf2	;volatile
  9228                           
  9229                           ; BSR set to: 15
  9230                           ;CANlib.h: 592: msg->data[2] =RXB0D2;
  9231  001CA8  EE20 F006          	lfsr	2,6
  9232  001CAC  5001               	movf	CANreceiveMessage@msg,w,c
  9233  001CAE  26D9               	addwf	fsr2l,f,c
  9234  001CB0  5002               	movf	CANreceiveMessage@msg+1,w,c
  9235  001CB2  22DA               	addwfc	fsr2h,f,c
  9236  001CB4  CF68 FFDF          	movff	3944,indf2	;volatile
  9237                           
  9238                           ; BSR set to: 15
  9239                           ;CANlib.h: 593: msg->data[3] =RXB0D3;
  9240  001CB8  EE20 F007          	lfsr	2,7
  9241  001CBC  5001               	movf	CANreceiveMessage@msg,w,c
  9242  001CBE  26D9               	addwf	fsr2l,f,c
  9243  001CC0  5002               	movf	CANreceiveMessage@msg+1,w,c
  9244  001CC2  22DA               	addwfc	fsr2h,f,c
  9245  001CC4  CF69 FFDF          	movff	3945,indf2	;volatile
  9246                           
  9247                           ; BSR set to: 15
  9248                           ;CANlib.h: 594: msg->data[4] =RXB0D4;
  9249  001CC8  EE20 F008          	lfsr	2,8
  9250  001CCC  5001               	movf	CANreceiveMessage@msg,w,c
  9251  001CCE  26D9               	addwf	fsr2l,f,c
  9252  001CD0  5002               	movf	CANreceiveMessage@msg+1,w,c
  9253  001CD2  22DA               	addwfc	fsr2h,f,c
  9254  001CD4  CF6A FFDF          	movff	3946,indf2	;volatile
  9255                           
  9256                           ; BSR set to: 15
  9257                           ;CANlib.h: 595: msg->data[5] =RXB0D5;
  9258  001CD8  EE20 F009          	lfsr	2,9
  9259  001CDC  5001               	movf	CANreceiveMessage@msg,w,c
  9260  001CDE  26D9               	addwf	fsr2l,f,c
  9261  001CE0  5002               	movf	CANreceiveMessage@msg+1,w,c
  9262  001CE2  22DA               	addwfc	fsr2h,f,c
  9263  001CE4  CF6B FFDF          	movff	3947,indf2	;volatile
  9264                           
  9265                           ; BSR set to: 15
  9266                           ;CANlib.h: 596: msg->data[6] =RXB0D6;
  9267  001CE8  EE20 F00A          	lfsr	2,10
  9268  001CEC  5001               	movf	CANreceiveMessage@msg,w,c
  9269  001CEE  26D9               	addwf	fsr2l,f,c
  9270  001CF0  5002               	movf	CANreceiveMessage@msg+1,w,c
  9271  001CF2  22DA               	addwfc	fsr2h,f,c
  9272  001CF4  CF6C FFDF          	movff	3948,indf2	;volatile
  9273                           
  9274                           ; BSR set to: 15
  9275                           ;CANlib.h: 597: msg->data[7] =RXB0D7;
  9276  001CF8  EE20 F00B          	lfsr	2,11
  9277  001CFC  5001               	movf	CANreceiveMessage@msg,w,c
  9278  001CFE  26D9               	addwf	fsr2l,f,c
  9279  001D00  5002               	movf	CANreceiveMessage@msg+1,w,c
  9280  001D02  22DA               	addwfc	fsr2h,f,c
  9281  001D04  CF6D FFDF          	movff	3949,indf2	;volatile
  9282                           
  9283                           ; BSR set to: 15
  9284                           ;CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  9285  001D08  EE20 F00E          	lfsr	2,14
  9286  001D0C  5001               	movf	CANreceiveMessage@msg,w,c
  9287  001D0E  26D9               	addwf	fsr2l,f,c
  9288  001D10  5002               	movf	CANreceiveMessage@msg+1,w,c
  9289  001D12  22DA               	addwfc	fsr2h,f,c
  9290  001D14  AC65               	btfss	3941,6,c	;volatile
  9291  001D16  D002               	goto	i1u423_20
  9292  001D18  0E01               	movlw	1
  9293  001D1A  D001               	goto	i1u423_26
  9294  001D1C                     i1u423_20:
  9295  001D1C  0E00               	movlw	0
  9296  001D1E                     i1u423_26:
  9297  001D1E  6EDF               	movwf	indf2,c
  9298                           
  9299                           ; BSR set to: 15
  9300                           ;CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  9301  001D20  EE20 F00D          	lfsr	2,13
  9302  001D24  5001               	movf	CANreceiveMessage@msg,w,c
  9303  001D26  26D9               	addwf	fsr2l,f,c
  9304  001D28  5002               	movf	CANreceiveMessage@msg+1,w,c
  9305  001D2A  22DA               	addwfc	fsr2h,f,c
  9306  001D2C  5065               	movf	3941,w,c	;volatile
  9307  001D2E  0B0F               	andlw	15
  9308  001D30  6EDF               	movwf	indf2,c
  9309                           
  9310                           ; BSR set to: 15
  9311                           ;CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  9312  001D32  EE20 F00C          	lfsr	2,12
  9313  001D36  5001               	movf	CANreceiveMessage@msg,w,c
  9314  001D38  26D9               	addwf	fsr2l,f,c
  9315  001D3A  5002               	movf	CANreceiveMessage@msg+1,w,c
  9316  001D3C  22DA               	addwfc	fsr2h,f,c
  9317  001D3E  A662               	btfss	3938,3,c	;volatile
  9318  001D40  D002               	goto	i1u424_20
  9319  001D42  0E01               	movlw	1
  9320  001D44  D001               	goto	i1u424_26
  9321  001D46                     i1u424_20:
  9322  001D46  0E00               	movlw	0
  9323  001D48                     i1u424_26:
  9324  001D48  6EDF               	movwf	indf2,c
  9325                           
  9326                           ; BSR set to: 15
  9327                           ;CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  9328  001D4A  B662               	btfsc	3938,3,c	;volatile
  9329  001D4C  D043               	goto	i1l3774
  9330                           
  9331                           ; BSR set to: 15
  9332                           ;CANlib.h: 606: {
  9333                           ;CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  9334  001D4E  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  9335  001D52  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9336  001D54  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9337  001D56  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9338  001D58  0E03               	movlw	3
  9339  001D5A                     i1u426_25:
  9340  001D5A  90D8               	bcf	status,0,c
  9341  001D5C  3603               	rlcf	??_CANreceiveMessage,f,c
  9342  001D5E  3604               	rlcf	??_CANreceiveMessage+1,f,c
  9343  001D60  3605               	rlcf	??_CANreceiveMessage+2,f,c
  9344  001D62  3606               	rlcf	??_CANreceiveMessage+3,f,c
  9345  001D64  2EE8               	decfsz	wreg,f,c
  9346  001D66  D7F9               	goto	i1u426_25
  9347  001D68  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9348  001D6C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9349  001D70  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  9350  001D74  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9351  001D78  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9352  001D7C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  9353                           
  9354                           ; BSR set to: 15
  9355                           ;CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  9356  001D80  3862               	swapf	3938,w,c	;volatile
  9357  001D82  42E8               	rrncf	wreg,f,c
  9358  001D84  0B07               	andlw	7
  9359  001D86  0B07               	andlw	7
  9360  001D88  6E0C               	movwf	CANreceiveMessage@tamp,c
  9361                           
  9362                           ; BSR set to: 15
  9363                           ;CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  9364  001D8A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9365  001D8E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9366  001D92  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  9367  001D96  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  9368  001D9A  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  9369  001D9E  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  9370  001DA2  500C               	movf	CANreceiveMessage@tamp,w,c
  9371  001DA4  2403               	addwf	??_CANreceiveMessage,w,c
  9372  001DA6  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  9373  001DA8  0E00               	movlw	0
  9374  001DAA  2004               	addwfc	??_CANreceiveMessage+1,w,c
  9375  001DAC  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  9376  001DAE  0E00               	movlw	0
  9377  001DB0  2005               	addwfc	??_CANreceiveMessage+2,w,c
  9378  001DB2  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  9379  001DB4  0E00               	movlw	0
  9380  001DB6  2006               	addwfc	??_CANreceiveMessage+3,w,c
  9381  001DB8  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  9382  001DBA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9383  001DBE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9384  001DC2  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  9385  001DC6  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  9386  001DCA  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  9387  001DCE  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  9388                           
  9389                           ;CANlib.h: 610: }
  9390  001DD2  D088               	goto	i1l3800
  9391  001DD4                     i1l3774:
  9392                           
  9393                           ; BSR set to: 15
  9394                           ;CANlib.h: 611: else
  9395                           ;CANlib.h: 612: {
  9396                           ;CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  9397  001DD4  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  9398  001DD8  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9399  001DDA  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9400  001DDC  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9401  001DDE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9402  001DE2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9403  001DE6  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  9404  001DEA  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  9405  001DEE  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  9406  001DF2  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  9407                           
  9408                           ; BSR set to: 15
  9409                           ;CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  9410  001DF6  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  9411  001DFA  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9412  001DFC  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9413  001DFE  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9414  001E00  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  9415  001E04  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  9416  001E08  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  9417  001E0C  6A03               	clrf	??_CANreceiveMessage,c
  9418  001E0E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9419  001E12  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9420  001E16  5003               	movf	??_CANreceiveMessage,w,c
  9421  001E18  26DE               	addwf	postinc2,f,c
  9422  001E1A  5004               	movf	??_CANreceiveMessage+1,w,c
  9423  001E1C  22DE               	addwfc	postinc2,f,c
  9424  001E1E  5005               	movf	??_CANreceiveMessage+2,w,c
  9425  001E20  22DE               	addwfc	postinc2,f,c
  9426  001E22  5006               	movf	??_CANreceiveMessage+3,w,c
  9427  001E24  22DE               	addwfc	postinc2,f,c
  9428                           
  9429                           ; BSR set to: 15
  9430                           ;CANlib.h: 616: if (RXB0SIDLbits.EID16)
  9431  001E26  A062               	btfss	3938,0,c	;volatile
  9432  001E28  D00C               	goto	i1l3782
  9433                           
  9434                           ; BSR set to: 15
  9435                           ;CANlib.h: 617: msg->identifier |= 0x00010000;
  9436  001E2A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9437  001E2E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9438  001E32  0E00               	movlw	0
  9439  001E34  12DE               	iorwf	postinc2,f,c
  9440  001E36  0E00               	movlw	0
  9441  001E38  12DE               	iorwf	postinc2,f,c
  9442  001E3A  0E01               	movlw	1
  9443  001E3C  12DE               	iorwf	postinc2,f,c
  9444  001E3E  0E00               	movlw	0
  9445  001E40  12DE               	iorwf	postinc2,f,c
  9446  001E42                     i1l3782:
  9447                           
  9448                           ; BSR set to: 15
  9449                           ;CANlib.h: 618: if (RXB0SIDLbits.EID17)
  9450  001E42  A262               	btfss	3938,1,c	;volatile
  9451  001E44  D00C               	goto	i1l3786
  9452                           
  9453                           ; BSR set to: 15
  9454                           ;CANlib.h: 619: msg->identifier |= 0x00020000;
  9455  001E46  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9456  001E4A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9457  001E4E  0E00               	movlw	0
  9458  001E50  12DE               	iorwf	postinc2,f,c
  9459  001E52  0E00               	movlw	0
  9460  001E54  12DE               	iorwf	postinc2,f,c
  9461  001E56  0E02               	movlw	2
  9462  001E58  12DE               	iorwf	postinc2,f,c
  9463  001E5A  0E00               	movlw	0
  9464  001E5C  12DE               	iorwf	postinc2,f,c
  9465  001E5E                     i1l3786:
  9466                           
  9467                           ; BSR set to: 15
  9468                           ;CANlib.h: 620: if (RXB0SIDLbits.SID0)
  9469  001E5E  AA62               	btfss	3938,5,c	;volatile
  9470  001E60  D00C               	goto	i1l3790
  9471                           
  9472                           ; BSR set to: 15
  9473                           ;CANlib.h: 621: msg->identifier |= 0x00040000;
  9474  001E62  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9475  001E66  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9476  001E6A  0E00               	movlw	0
  9477  001E6C  12DE               	iorwf	postinc2,f,c
  9478  001E6E  0E00               	movlw	0
  9479  001E70  12DE               	iorwf	postinc2,f,c
  9480  001E72  0E04               	movlw	4
  9481  001E74  12DE               	iorwf	postinc2,f,c
  9482  001E76  0E00               	movlw	0
  9483  001E78  12DE               	iorwf	postinc2,f,c
  9484  001E7A                     i1l3790:
  9485                           
  9486                           ; BSR set to: 15
  9487                           ;CANlib.h: 622: if (RXB0SIDLbits.SID1)
  9488  001E7A  AC62               	btfss	3938,6,c	;volatile
  9489  001E7C  D00C               	goto	i1l3794
  9490                           
  9491                           ; BSR set to: 15
  9492                           ;CANlib.h: 623: msg->identifier |= 0x00080000;
  9493  001E7E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9494  001E82  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9495  001E86  0E00               	movlw	0
  9496  001E88  12DE               	iorwf	postinc2,f,c
  9497  001E8A  0E00               	movlw	0
  9498  001E8C  12DE               	iorwf	postinc2,f,c
  9499  001E8E  0E08               	movlw	8
  9500  001E90  12DE               	iorwf	postinc2,f,c
  9501  001E92  0E00               	movlw	0
  9502  001E94  12DE               	iorwf	postinc2,f,c
  9503  001E96                     i1l3794:
  9504                           
  9505                           ; BSR set to: 15
  9506                           ;CANlib.h: 624: if (RXB0SIDLbits.SID2)
  9507  001E96  AE62               	btfss	3938,7,c	;volatile
  9508  001E98  D00C               	goto	i1l3798
  9509                           
  9510                           ; BSR set to: 15
  9511                           ;CANlib.h: 625: msg->identifier |= 0x00100000;
  9512  001E9A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9513  001E9E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9514  001EA2  0E00               	movlw	0
  9515  001EA4  12DE               	iorwf	postinc2,f,c
  9516  001EA6  0E00               	movlw	0
  9517  001EA8  12DE               	iorwf	postinc2,f,c
  9518  001EAA  0E10               	movlw	16
  9519  001EAC  12DE               	iorwf	postinc2,f,c
  9520  001EAE  0E00               	movlw	0
  9521  001EB0  12DE               	iorwf	postinc2,f,c
  9522  001EB2                     i1l3798:
  9523                           
  9524                           ; BSR set to: 15
  9525                           ;CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  9526  001EB2  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  9527  001EB6  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  9528  001EB8  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  9529  001EBA  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  9530  001EBC  0E15               	movlw	21
  9531  001EBE                     i1u432_25:
  9532  001EBE  90D8               	bcf	status,0,c
  9533  001EC0  3603               	rlcf	??_CANreceiveMessage,f,c
  9534  001EC2  3604               	rlcf	??_CANreceiveMessage+1,f,c
  9535  001EC4  3605               	rlcf	??_CANreceiveMessage+2,f,c
  9536  001EC6  3606               	rlcf	??_CANreceiveMessage+3,f,c
  9537  001EC8  2EE8               	decfsz	wreg,f,c
  9538  001ECA  D7F9               	goto	i1u432_25
  9539  001ECC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  9540  001ED0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  9541  001ED4  5003               	movf	??_CANreceiveMessage,w,c
  9542  001ED6  12DE               	iorwf	postinc2,f,c
  9543  001ED8  5004               	movf	??_CANreceiveMessage+1,w,c
  9544  001EDA  12DE               	iorwf	postinc2,f,c
  9545  001EDC  5005               	movf	??_CANreceiveMessage+2,w,c
  9546  001EDE  12DE               	iorwf	postinc2,f,c
  9547  001EE0  5006               	movf	??_CANreceiveMessage+3,w,c
  9548  001EE2  12DE               	iorwf	postinc2,f,c
  9549  001EE4                     i1l3800:
  9550                           
  9551                           ; BSR set to: 15
  9552                           ;CANlib.h: 629: }
  9553                           ;CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  9554  001EE4  9E60               	bcf	3936,7,c	;volatile
  9555                           
  9556                           ; BSR set to: 15
  9557                           ;CANlib.h: 632: return (error);
  9558                           ;	Return value of _CANreceiveMessage is never used
  9559  001EE6  0012               	return	
  9560  001EE8                     __end_of_CANreceiveMessage:
  9561                           	opt stack 0
  9562                           pclatu	equ	0xFFB
  9563                           pclath	equ	0xFFA
  9564                           tblptru	equ	0xFF8
  9565                           tblptrh	equ	0xFF7
  9566                           tblptrl	equ	0xFF6
  9567                           tablat	equ	0xFF5
  9568                           prodh	equ	0xFF4
  9569                           prodl	equ	0xFF3
  9570                           intcon	equ	0xFF2
  9571                           postinc0	equ	0xFEE
  9572                           fsr0h	equ	0xFEA
  9573                           fsr0l	equ	0xFE9
  9574                           wreg	equ	0xFE8
  9575                           indf1	equ	0xFE7
  9576                           postdec1	equ	0xFE5
  9577                           fsr1h	equ	0xFE2
  9578                           fsr1l	equ	0xFE1
  9579                           bsr	equ	0xFE0
  9580                           indf2	equ	0xFDF
  9581                           postinc2	equ	0xFDE
  9582                           postdec2	equ	0xFDD
  9583                           fsr2h	equ	0xFDA
  9584                           fsr2l	equ	0xFD9
  9585                           status	equ	0xFD8
  9586                           
  9587 ;; *************** function _CANisRxReady *****************
  9588 ;; Defined at:
  9589 ;;		line 1163 in file "CANlib.h"
  9590 ;; Parameters:    Size  Location     Type
  9591 ;;		None
  9592 ;; Auto vars:     Size  Location     Type
  9593 ;;		None
  9594 ;; Return value:  Size  Location     Type
  9595 ;;                  1    wreg      unsigned char 
  9596 ;; Registers used:
  9597 ;;		wreg, status,2
  9598 ;; Tracked objects:
  9599 ;;		On entry : 0/0
  9600 ;;		On exit  : 0/0
  9601 ;;		Unchanged: 0/0
  9602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9603 ;;      Params:         0       0       0       0
  9604 ;;      Locals:         1       0       0       0
  9605 ;;      Temps:          0       0       0       0
  9606 ;;      Totals:         1       0       0       0
  9607 ;;Total ram usage:        1 bytes
  9608 ;; Hardware stack levels used:    1
  9609 ;; This function calls:
  9610 ;;		Nothing
  9611 ;; This function is called by:
  9612 ;;		_ISR_bassa
  9613 ;; This function uses a non-reentrant model
  9614 ;;
  9615                           
  9616                           	psect	text26
  9617  002A74                     __ptext26:
  9618                           	opt stack 0
  9619  002A74                     _CANisRxReady:
  9620                           	opt stack 26
  9621                           
  9622                           ;CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  9623                           
  9624                           ; BSR set to: 15
  9625                           ;incstack = 0
  9626  002A74  0E01               	movlw	1
  9627  002A76  6E01               	movwf	_CANisRxReady$3046,c
  9628  002A78  BE60               	btfsc	3936,7,c	;volatile
  9629  002A7A  D005               	goto	i1l567
  9630  002A7C  010F               	movlb	15	; () banked
  9631  002A7E  BF50               	btfsc	80,7,b	;volatile
  9632  002A80  D002               	goto	i1l567
  9633                           
  9634                           ; BSR set to: 15
  9635  002A82  0E00               	movlw	0
  9636  002A84  6E01               	movwf	_CANisRxReady$3046,c
  9637  002A86                     i1l567:
  9638  002A86  5001               	movf	_CANisRxReady$3046,w,c
  9639  002A88  0012               	return	
  9640  002A8A                     __end_of_CANisRxReady:
  9641                           	opt stack 0
  9642  0000                     pclatu	equ	0xFFB
  9643                           pclath	equ	0xFFA
  9644                           tblptru	equ	0xFF8
  9645                           tblptrh	equ	0xFF7
  9646                           tblptrl	equ	0xFF6
  9647                           tablat	equ	0xFF5
  9648                           prodh	equ	0xFF4
  9649                           prodl	equ	0xFF3
  9650                           intcon	equ	0xFF2
  9651                           postinc0	equ	0xFEE
  9652                           fsr0h	equ	0xFEA
  9653                           fsr0l	equ	0xFE9
  9654                           wreg	equ	0xFE8
  9655                           indf1	equ	0xFE7
  9656                           postdec1	equ	0xFE5
  9657                           fsr1h	equ	0xFE2
  9658                           fsr1l	equ	0xFE1
  9659                           bsr	equ	0xFE0
  9660                           indf2	equ	0xFDF
  9661                           postinc2	equ	0xFDE
  9662                           postdec2	equ	0xFDD
  9663                           fsr2h	equ	0xFDA
  9664                           fsr2l	equ	0xFD9
  9665                           status	equ	0xFD8
  9666                           pclatu	equ	0xFFB
  9667                           pclath	equ	0xFFA
  9668                           tblptru	equ	0xFF8
  9669                           tblptrh	equ	0xFF7
  9670                           tblptrl	equ	0xFF6
  9671                           tablat	equ	0xFF5
  9672                           prodh	equ	0xFF4
  9673                           prodl	equ	0xFF3
  9674                           intcon	equ	0xFF2
  9675                           postinc0	equ	0xFEE
  9676                           fsr0h	equ	0xFEA
  9677                           fsr0l	equ	0xFE9
  9678                           wreg	equ	0xFE8
  9679                           indf1	equ	0xFE7
  9680                           postdec1	equ	0xFE5
  9681                           fsr1h	equ	0xFE2
  9682                           fsr1l	equ	0xFE1
  9683                           bsr	equ	0xFE0
  9684                           indf2	equ	0xFDF
  9685                           postinc2	equ	0xFDE
  9686                           postdec2	equ	0xFDD
  9687                           fsr2h	equ	0xFDA
  9688                           fsr2l	equ	0xFD9
  9689                           status	equ	0xFD8
  9690                           
  9691                           	psect	rparam
  9692  0000                     pclatu	equ	0xFFB
  9693                           pclath	equ	0xFFA
  9694                           tblptru	equ	0xFF8
  9695                           tblptrh	equ	0xFF7
  9696                           tblptrl	equ	0xFF6
  9697                           tablat	equ	0xFF5
  9698                           prodh	equ	0xFF4
  9699                           prodl	equ	0xFF3
  9700                           intcon	equ	0xFF2
  9701                           postinc0	equ	0xFEE
  9702                           fsr0h	equ	0xFEA
  9703                           fsr0l	equ	0xFE9
  9704                           wreg	equ	0xFE8
  9705                           indf1	equ	0xFE7
  9706                           postdec1	equ	0xFE5
  9707                           fsr1h	equ	0xFE2
  9708                           fsr1l	equ	0xFE1
  9709                           bsr	equ	0xFE0
  9710                           indf2	equ	0xFDF
  9711                           postinc2	equ	0xFDE
  9712                           postdec2	equ	0xFDD
  9713                           fsr2h	equ	0xFDA
  9714                           fsr2l	equ	0xFD9
  9715                           status	equ	0xFD8
  9716                           
  9717                           	psect	temp
  9718  00003F                     btemp:
  9719                           	opt stack 0
  9720  00003F                     	ds	1
  9721  0000                     int$flags	set	btemp
  9722                           pclatu	equ	0xFFB
  9723                           pclath	equ	0xFFA
  9724                           tblptru	equ	0xFF8
  9725                           tblptrh	equ	0xFF7
  9726                           tblptrl	equ	0xFF6
  9727                           tablat	equ	0xFF5
  9728                           prodh	equ	0xFF4
  9729                           prodl	equ	0xFF3
  9730                           intcon	equ	0xFF2
  9731                           postinc0	equ	0xFEE
  9732                           fsr0h	equ	0xFEA
  9733                           fsr0l	equ	0xFE9
  9734                           wreg	equ	0xFE8
  9735                           indf1	equ	0xFE7
  9736                           postdec1	equ	0xFE5
  9737                           fsr1h	equ	0xFE2
  9738                           fsr1l	equ	0xFE1
  9739                           bsr	equ	0xFE0
  9740                           indf2	equ	0xFDF
  9741                           postinc2	equ	0xFDE
  9742                           postdec2	equ	0xFDD
  9743                           fsr2h	equ	0xFDA
  9744                           fsr2l	equ	0xFD9
  9745                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      62
    BANK0           160     37     131
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array1(BANK0[8]), data_array(BANK0[8]), data_array_debug(BANK0[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _configurazione_iniziale->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->___awdiv
    ___wmul->___lwdiv
    ___awdiv->___wmul

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   28986
                                             26 BANK0     11    11      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                          _OpenUSART
                         _SetDCEPWM1
                     _SetOutputEPWM1
                         _WriteUSART
                            ___lwdiv
                             ___wmul
                                _abs
                    _battery_measure
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            1     1      0    4764
                                             16 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    9823
                      _CANInitialize
                     _SetOutputEPWM1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1187
                                             13 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _SetOutputEPWM1                                       2     1      1     424
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                             14 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                              0 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0    5958
                       _CANisTxReady
                     _CANsendMessage
                         _WriteUSART
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                              7 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     599
                                             13 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4597
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     170
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     549
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetDCEPWM1                                           6     4      2     176
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            3     1      2     387
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           21    21      0    1435
                                             12 COMRAM    21    21      0
                       _CANisRxReady
                  _CANreceiveMessage
                   i1_SetOutputEPWM1
 ---------------------------------------------------------------------------------
 (5) i1_SetOutputEPWM1                                     2     1      1     184
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _OpenUSART
   _SetDCEPWM1
   _SetOutputEPWM1
   _WriteUSART
   ___lwdiv
   ___wmul
     ___lwdiv (ARG)
   _abs
   _battery_measure
     _CANisTxReady
     _CANsendMessage
     _WriteUSART
     ___awdiv
       ___wmul (ARG)
         ___lwdiv (ARG)
     ___wmul
       ___lwdiv (ARG)
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _SetOutputEPWM1
     _delay_ms
       ___wmul
         ___lwdiv (ARG)
   _delay_ms
     ___wmul
       ___lwdiv (ARG)
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i1_SetOutputEPWM1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     25      83       4       81.9%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     21      3E       1       66.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C1       9        0.0%
DATA                 0      0      C1      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Feb 06 15:58:03 2016

              ??_CANisTXwarningON 00BA              __end_of_CANSetFilter 0D1E  
                    ___awdiv@sign 00CC                                _id 0026  
                              bsr 000FE0               ___wmul@multiplicand 00C3  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 28A8  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000              _previousTimeCounter1 007C  
            _previousTimeCounter2 0080                               l400 1240  
                             l401 1338                               l410 1406  
                             l402 12C8                               l403 12D2  
                             l404 12DC                               l405 12E6  
                             l510 0A9A                               l502 0A5A  
                             l503 0A5E                               l408 13F6  
                             l520 0BAA                               l504 0A6A  
                             l440 20F2                               l409 13FA  
                             l521 0BB6                               l513 0B76  
                             l505 0A6E                               l441 20F6  
                             l370 0D34                               l530 0CC2  
                             l514 0B7A                               l506 0A7A  
                             l450 21FE                               l442 2102  
                             l371 0D38                               l531 0CC6  
                             l515 0B86                               l507 0A7E  
                             l451 220A                               l443 2106  
                             l380 0EF2                               l372 0E30  
                             l532 0CD2                               l524 0C92  
                             l516 0B8A                               l508 0A8A  
                             l452 220E                               l444 2112  
                             l364 2342                               l381 0EFE  
                             l373 0DC0                               l525 0C96  
                             l517 0B96                               l509 0A8E  
                             l453 221A                               l445 2116  
                             l365 234C                               l701 1836  
                             l390 1058                               l374 0DCA  
                             l526 0CA2                               l518 0B9A  
                             l470 070C                               l454 221E  
                             l446 2122                               l438 20E2  
                             l391 1062                               l375 0DD4  
                             l527 0CA6                               l519 0BA6  
                             l471 0718                               l455 222A  
                             l439 20E6                               l384 1226  
                             l376 0DDE                               l528 0CB2  
                             l480 0822                               l472 071C  
                             l456 222E                               l385 0FB8  
                             l369 0FA2                               l529 0CB6  
                             l481 0826                               l473 0728  
                             l457 223A                               l449 21FA  
                             l562 2A36                               l394 1172  
                             l386 0FBC                               l482 0832  
                             l474 072C                               l722 254E  
                             l706 191A                               l395 1176  
                             l387 10B4                               l379 0EEE  
                             l731 2750                               l491 093E  
                             l483 0836                               l475 0738  
                             l723 254C                               l812 2812  
                             l396 1182                               l388 1044  
                             l492 0942                               l484 0842  
                             l476 073C                               l813 2814  
                             l389 104E                               l493 094E  
                             l485 0846                               l477 0748  
                             l469 0708                               l717 2526  
                             l814 2820                               l494 0952  
                             l486 0852                               l815 2822  
                             l399 123C                               l495 095E  
                             l487 0856                               l575 29E2  
                             l719 24C4                               l808 27F8  
                             l728 26C2                               l496 0962  
                             l488 0862                               l497 096E  
                             l498 0972                               l499 097E  
                             l782 2A58                               l783 2A5A  
                             l768 28F0                               l689 1602  
                             l699 185E                               l878 2A0E  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                               _id1 002A  
                             _abs 29EC                               _dir 003C  
                             _msg 0093                               prod 000FF3  
                             wreg 000FE8                      __CFG_LVP$OFF 000000  
                    __CFG_WDT$OFF 000000                              ?_abs 00BA  
                            l1235 27C2                              l4302 2A66  
                            l5022 28CE                              l5014 29D6  
                            l4320 1FA0                              l5026 28DE  
                            l5220 27FA                              l5212 27E8  
                            l5036 2A98                              l5060 25AE  
                            l5052 2584                              l5070 25E4  
                            l5062 25B4                              l5046 256E  
                            l5320 2784                              l5304 2714  
                            l4336 2056                              l5058 25A2  
                            l5074 25F2                              l4610 09C8  
                            l4418 02D6                              l4362 2126  
                            l5410 1786                              l5316 2772  
                            l4604 0982                              l4508 0676  
                            l4436 038E                              l5318 277E  
                            l5078 2606                              l4542 0792  
                            l4454 0448                              l5414 17E4  
                            l5422 1816                              l5328 27B4  
                            l4536 074C                              l4472 0502  
                            l4368 216C                              l5272 24B8  
                            l5416 17F2                              l4802 0DE8  
                            l4706 0CD6                              l4570 0866  
                            l4490 05BC                              l4394 223E  
                            l5282 24F0                              l5450 1902  
                            l5442 1860                              l5426 181E  
                            l5418 17FA                              l4644 0AE4  
                            l5276 24E0                              l5268 2488  
                            l5428 1822                              l5372 150C  
                            l4822 0EE2                              l4638 0A9E  
                            l5278 24E6                              l5462 192A  
                            l4904 1186                              l4672 0BBA  
                            l4576 08AC                              l5464 193A  
                            l4762 2358                              l5386 15D0  
                            l4828 0F02                              l4764 239C  
                            l4756 233A                              l4678 0C00  
                            l4758 2350                              l4954 12F0  
                            l4980 140A                              l4974 13EA  
                            l4878 106C                              l4898 1166  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u5120 1FD2  
                            u6010 0CF6                              u5210 2146  
                            u5125 1FC6                              u6015 0CEA  
                            u5215 213A                              u5135 2032  
                            u5400 03C4                              u5320 0252  
                            u5080 1F1C                              u6140 0E08  
                            u7020 17D0                              u5405 03B8  
                            u5325 0246                              u5085 1F10  
                            u6150 0E54                              u5415 0424  
                            u5335 02B2                              u5095 1F7C  
                            u6400 1310                              u5520 05F2  
                            u5440 047E                              u5360 030A  
                            u6145 0DFC                              u6410 135C  
                            u5610 076C                              u5290 225E  
                            u7130 19A6                              u6155 0E48  
                            u7140 19AE                              u6405 1304  
                            u6165 0EB4                              u5525 05E6  
                            u5445 0472                              u5365 02FE  
                            u6270 108C                              u7070 18CE  
                            u6415 1350                              u5615 0760  
                            u5535 0652                              u5455 04DE  
                            u5375 036A                              u5295 2252  
                            u6280 10D8                              u5480 0538  
                            u6425 13BC                              u6610 2AB8  
                            u7146 19B0                              u6275 1080  
                            u6620 2AC4                              u6285 10CC  
                            u5485 052C                              u7157 29D8  
                            u6295 1138                              u5495 0598  
                            u5930 0BDA                              u5850 0ABE  
                            u5770 09A2                              u5690 0886  
                            u6810 24DE                              u5935 0BCE  
                            u5855 0AB2                              u5775 0996  
                            u5695 087A                              u6755 2904  
                            u6860 2534                              u6950 1578  
                            u6875 2536                              u6980 1602  
                            u6990 16F6                              _TMR2 000FCC  
             __size_of_CANSetMask 039E                              abs@a 00BA  
                            _baud 0091                              _main 14AA  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 003F                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 0214                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000010  
                _CANOperationMode 2A5E            __end_of_SetOutputEPWM1 28FA  
                           ??_abs 00BC        __size_of_CANreceiveMessage 050C  
                           ?_main 0001                   __end_of___awdiv 2610  
                 ___awdiv@divisor 00C9                             _T2CON 000FCA  
                           _T3CON 000FB1                   __end_of___lwdiv 27CC  
                           i1l416 1C74                             i1l567 2A86  
                           i1l680 0192                             i1l664 01B0  
                           i1l682 01CC                             i1l674 014A  
                           i1l667 01AC                             i1l677 018C  
                           i1l679 0190                             i1l768 2978  
                 ___awdiv@counter 00CB                             _RCSTA 000FAB  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
                           _SPBRG 000FAF                 _CANisRxReady$3046 0001  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                             _TXREG 000FAD  
                           _TXSTA 000FAC                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
              __size_of_ISR_bassa 01FC                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 00CC                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _vBatt 0036  
                           main@i 00DD                    __pbitbssCOMRAM 01D0  
            __end_of_CANisRxReady 2A8A         __size_ofi1_SetOutputEPWM1 0044  
                           tablat 000FF5              __end_of_CANisTxReady 2A3C  
                           status 000FD8                    __CFG_PBADEN$ON 000000  
                      _SetDCEPWM1 28FA                    WriteUSART@data 00BA  
                 __initialization 2840          __size_of_battery_measure 0094  
                    __end_of_main 19DC                   ?_SetOutputEPWM1 00BA  
                          ??_main 00D4                     __activetblptr 000002  
               _CANisTxReady$3044 00BA                     _counter_array 0060  
                          _CANCON 000F6F                            _ADRESH 000FC4  
                ___awdiv@dividend 00C7                   __CFG_BBSIZ$1024 000000  
                          i1l4102 00B8                            i1l4120 0120  
                          i1l4112 00F2                            i1l4106 00CA  
                          i1l4132 0174                            i1l4072 296A  
                          i1l4138 0196                            i1l4068 295C  
                          i1l3800 1EE4                            i1l3720 1BC4  
                          i1l3712 1B54                            i1l4088 0066  
                          i1l3732 1C1E                            i1l3724 1BE2  
                          i1l3736 1C3C                            i1l3728 1C00  
                          i1l3738 1C6E                            i1l3790 1E7A  
                          i1l3782 1E42                            i1l3774 1DD4  
                          i1l3794 1E96                            i1l3786 1E5E  
                      _OpenTimer2 2A3C                            i1l3798 1EB2  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _SPBRGH 000FB0                            _TXB1D2 000F38  
                          _TXB0D6 000F4C                            _TXB1D3 000F39  
                          _TXB0D7 000F4D                            _TXB2D0 000F26  
                          _TXB1D4 000F3A                            _TXB2D1 000F27  
                          _TXB1D5 000F3B                            _TXB2D2 000F28  
                          _TXB1D6 000F3C                            _TXB2D3 000F29  
                          _TXB1D7 000F3D                            _TXB2D4 000F2A  
                          _TXB2D5 000F2B                            _TXB2D6 000F2C  
                          _TXB2D7 000F2D                CANsendMessage@data 00BE  
              CANsendMessage@tamp 00C6                  __end_of_delay_ms 29EC  
           __size_of_CANSetFilter 0B06                    __CFG_XINST$OFF 000000  
              __size_of_OpenEPWM1 0012                 __end_of_ISR_bassa 0214  
              __size_of_OpenUSART 0074                            ___wmul 2982  
                       ??___awdiv 00CB                    __CFG_STVREN$ON 000000  
                       ??___lwdiv 00BE                      ??_CANSetMask 00BF  
                          _errore 008C                  OpenTimer2@config 00BA  
                          clear_0 2846                            clear_1 2856  
                ___awdiv@quotient 00CD          ?_configurazione_iniziale 0001  
                 __CFG_BOREN$BOHW 000000                      __pdataCOMRAM 003C  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                      _CANSetFilter 0218  
                      __accesstop 0060           __end_of__initialization 289A  
              __end_of_CANSetMask 2286                     ___rparam_used 000001  
       __size_of_CANisRXwarningON 000C                       ?_SetDCEPWM1 00BA  
                      _WriteUSART 2A8A                    __pcstackCOMRAM 0001  
                    __pidataBANK0 2AC8                 ??_battery_measure 00CF  
           CANSetFilter@numBuffer 00C3                   OpenEPWM1@period 00BA  
       __size_of_CANisTXwarningON 000C             __size_of_CANisRxReady 0016  
           __size_of_CANisTxReady 0024                 __end_of_OpenEPWM1 2AB0  
               __end_of_OpenUSART 2840          __end_of_CANOperationMode 2A74  
                i1_SetOutputEPWM1 293E                        __pbssBANK0 0060  
                     ?_OpenTimer2 0001                        _data_array 00A2  
         __size_of_CANsendMessage 078C                           ?___wmul 00C1  
              __size_of_send_data 0106                      _CANisRxReady 2A74  
                         _ECCPR1L 000FBB                           _CANSTAT 000F6E  
                    _CANisTxReady 2A18                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01C6                         ?_delay_ms 00C7  
                         _RXB0DLC 000F65                           _RXB1DLC 000F55  
                         _RXB0CON 000F60               __size_of_SetDCEPWM1 0044  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 00C1                  _data_array_debug 00B2  
        SetOutputEPWM1@outputmode 00BA                        _correzione 0070  
                ??_SetOutputEPWM1 00BB                           __Hparam 0000  
                      _left_speed 0032                           __Lparam 0000  
                delay_ms@value_ms 00C7                       ?_WriteUSART 0001  
                         ___awdiv 2552                   __size_of___wmul 0036  
                         ___lwdiv 2754              CANInitialize@propSeg 00D1  
                         __pcinit 2840                           __ramtop 0300  
             __size_of_OpenTimer2 0022                           __ptext0 14AA  
                         __ptext1 244C                           __ptext2 2610  
                         __ptext3 29B8                           __ptext4 28A8  
                         __ptext5 2286                           __ptext6 1EE8  
                         __ptext7 0218                           __ptext8 2A5E  
                         __ptext9 26C0                           _counter 0022  
                       _T2CONbits 000FCA                      __size_of_abs 002C  
                         _current 0039        i1SetOutputEPWM1@outputmode 0001  
                      _duty_cycle 0030                        ??_delay_ms 00C9  
          CANreceiveMessage@error 000B              end_of_initialization 289A  
               __end_of_send_data 2552                     __Lmediumconst 0000  
                _CANisRXwarningON 2ABC                     _CANInitialize 2286  
                       _RCSTAbits 000FAB                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE      i1SetOutputEPWM1@outputconfig 0002  
                       _ISR_bassa 0018                         _PORTAbits 000F80  
                  CANSetMask@mask 00BA                         _PORTCbits 000F82  
                  CANSetMask@tamp 00C4                    _centralina_abs 01D1  
                  CANSetMask@type 00BE                  _CANisTXwarningON 2AB0  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
             __size_of_WriteUSART 0014  __size_of_configurazione_iniziale 00B0  
             _previousTimeCounter 0078           _clock_counter_reference 002E  
                  _CANsendMessage 0D1E                  CANInitialize@BRP 00CB  
                CANInitialize@SJW 00CA                         _TXSTAbits 000FAC  
                  ?_CANInitialize 00C8                        main@period 00DC  
                    ??_SetDCEPWM1 00BC                   _battery_measure 26C0  
                      ?_ISR_bassa 0001          __end_ofi1_SetOutputEPWM1 2982  
                  __end_of___wmul 29B8                     __pidataCOMRAM 2ACC  
             start_initialization 2840                       __end_of_abs 2A18  
              __end_of_SetDCEPWM1 293E               CANSetMask@numBuffer 00C3  
          __end_of_CANsendMessage 14AA                 ?_CANOperationMode 0001  
                    ??_OpenTimer2 00BA                         _OpenEPWM1 2A9E  
                       _OpenUSART 27CC                ??_CANOperationMode 00BA  
      CANInitialize@FilterConfig1 00D2        CANInitialize@FilterConfig2 00D3  
                        ??___wmul 00C5                       __pdataBANK0 00DF  
                __CFG_LPT1OSC$OFF 000000                __end_of_OpenTimer2 2A5E  
          CANInitialize@phaseSeg1 00C8            CANInitialize@phaseSeg2 00C9  
                     __pbssCOMRAM 0022                     __pcstackBANK0 00BA  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
                     _data_array1 00AA               SetDCEPWM1@dutycycle 00BA  
               __size_of_delay_ms 0034                   ?_CANsendMessage 00BA  
                      ?_OpenEPWM1 0001           __end_of_battery_measure 2754  
                 ??_CANInitialize 00CD                        ?_OpenUSART 00BA  
                       _can_retry 01D0                      _currentSpeed 00DF  
              CANSetFilter@filter 00BA                  ___lwdiv@dividend 00BA  
                    ??_WriteUSART 00BA                          ?___awdiv 00C7  
                        ?___lwdiv 00BA                       ??_ISR_bassa 000D  
                     __pintcodelo 0018                        send_data@i 00CA  
                        _ECCP1CON 000FBA          __end_of_CANisRXwarningON 2AC8  
                     _COMSTATbits 000F74        SetOutputEPWM1@outputconfig 00BB  
                      ISR_bassa@i 0020                     _remote_frame1 01D6  
                ___lwdiv@quotient 00BF           _configurazione_iniziale 2610  
              __end_of_WriteUSART 2A9E                      _message_sent 01D4  
           CANreceiveMessage@tamp 000C                    ___wmul@product 00C5  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 003E  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                         _send_data 244C  
                        _PIE3bits 000FA3          __end_of_CANisTXwarningON 2ABC  
                        i1u412_20 1A94                          i1u412_26 1A96  
                        i1u413_20 1AC2                          i1u421_25 1C48  
                        i1u413_26 1AC4                          i1u423_20 1D1C  
                        i1u415_25 1AD8                          i1u423_26 1D1E  
                        i1u424_20 1D46                          i1u432_25 1EBE  
                        i1u424_26 1D48                          i1u426_25 1D5A  
                        i1u482_20 014A                          _PIR1bits 000F9E  
                        _PIR2bits 000FA1                          _PIR3bits 000FA4  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                        _RXB0SIDH 000F61                         _scrittura 0092  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
                        _TXERRCNT 000F76                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                        _ADCON2bits 000FC0  
               ___wmul@multiplier 00C1                     ?_CANSetFilter 00BA  
                       copy_data0 2870                        _CANCONbits 000F6F  
                     ??_OpenEPWM1 00BA                       ??_OpenUSART 00BC  
                ?_battery_measure 0001                   OpenUSART@config 00BC  
                      ?_send_data 0001                          __Hrparam 0000  
                    _RXB0SIDLbits 000F62                  SetDCEPWM1@DCycle 00BE  
                        __Lrparam 0000                      _RXB1SIDLbits 000F52  
              _centralina_comando 01D2                        _CANSetMask 1EE8  
                __size_of___awdiv 00BE                  __size_of___lwdiv 0078  
               ?i1_SetOutputEPWM1 0001           __size_of_SetOutputEPWM1 0052  
              ??i1_SetOutputEPWM1 0002                _currentSpeed_array 0068  
       ??_configurazione_iniziale 00D4                      _RXF0SIDLbits 000F01  
                        _delay_ms 29B8                   ___lwdiv@divisor 00BC  
                    _RXF1SIDLbits 000F05                   ___lwdiv@counter 00BE  
                  ??_CANSetFilter 00BF                          __ptext10 2982  
                        __ptext11 2552                          __ptext20 2A9E  
                        __ptext12 2A8A                          __ptext21 2AB0  
                        __ptext13 0D1E                          __ptext22 2ABC  
                        __ptext14 2A18                          __ptext15 29EC  
                        __ptext24 293E                          __ptext16 2754  
                        __ptext25 19DC                          __ptext17 28FA  
                        __ptext26 2A74                          __ptext18 27CC  
                        __ptext19 2A3C                      _RXF2SIDLbits 000F09  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                   _speed_fetched 01D8                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 00C0                      _remote_frame 01D5  
                   __size_of_main 0532                          _duty_set 0074  
            CANreceiveMessage@msg 0001                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 003F                       _UART1Config 0090  
       __size_of_CANOperationMode 0016                     ?_CANisRxReady 0001  
                   ?_CANisTxReady 0001                       _RXB0DLCbits 000F65  
                     _RXB1DLCbits 000F55                      _RXM0SIDLbits 000F19  
                     _RXB0CONbits 000F60                       _RXB1CONbits 000F50  
               _CANreceiveMessage 19DC                      _RXM1SIDLbits 000F1D  
                      _INTCONbits 000FF2                  ??_CANsendMessage 00C2  
                  OpenUSART@spbrg 00BA                      _requestSpeed 0084  
              ?_CANreceiveMessage 0001                      _request_sent 01D7  
        CANsendMessage@identifier 00BA                          intlevel1 0000  
               _centralina_sterzo 01D3                  CANSetFilter@tamp 00C4  
                CANSetFilter@type 00BE               ??_CANreceiveMessage 0003  
                     _TXB0DLCbits 000F45                       _right_speed 0034  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     ??_send_data 00CA                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 26C0                       _TXB1CONbits 000F30  
                     _TXB2CONbits 000F20                       _timeCounter 0088  
            CANOperationMode@mode 00BA                    ??_CANisRxReady 0001  
                     ?_CANSetMask 00BA                    ??_CANisTxReady 00BA  
       __end_of_CANreceiveMessage 1EE8                 ?_CANisRXwarningON 0001  
              ??_CANisRXwarningON 00BA                       _previousPwm 008E  
           __end_of_CANInitialize 244C                      _USART_Status 0038  
               ?_CANisTXwarningON 0001  
