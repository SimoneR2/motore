

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Feb 28 17:02:58 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataCOMRAM
    42  0026F8                     __pidataCOMRAM:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _currentSpeed
    46  0026F8  0001               	dw	1
    47  0026FA  0000               	dw	0
    48                           
    49                           ;initializer for _dir
    50  0026FC  0001               	dw	1
    51                           
    52                           ;initializer for _delay_quartz_frequency_value
    53  0026FE  10                 	db	16
    54  0000                     _RXB1CON	set	3920
    55  0000                     _RXB1CONbits	set	3920
    56  0000                     _RXB1D0	set	3926
    57  0000                     _RXB1D1	set	3927
    58  0000                     _RXB1D2	set	3928
    59  0000                     _RXB1D3	set	3929
    60  0000                     _RXB1D4	set	3930
    61  0000                     _RXB1D5	set	3931
    62  0000                     _RXB1D6	set	3932
    63  0000                     _RXB1D7	set	3933
    64  0000                     _RXB1DLC	set	3925
    65  0000                     _RXB1DLCbits	set	3925
    66  0000                     _RXB1EIDH	set	3923
    67  0000                     _RXB1EIDL	set	3924
    68  0000                     _RXB1SIDH	set	3921
    69  0000                     _RXB1SIDL	set	3922
    70  0000                     _RXB1SIDLbits	set	3922
    71  0000                     _RXF0EIDH	set	3842
    72  0000                     _RXF0EIDL	set	3843
    73  0000                     _RXF0SIDH	set	3840
    74  0000                     _RXF0SIDL	set	3841
    75  0000                     _RXF0SIDLbits	set	3841
    76  0000                     _RXF1EIDH	set	3846
    77  0000                     _RXF1EIDL	set	3847
    78  0000                     _RXF1SIDH	set	3844
    79  0000                     _RXF1SIDL	set	3845
    80  0000                     _RXF1SIDLbits	set	3845
    81  0000                     _RXF2EIDH	set	3850
    82  0000                     _RXF2EIDL	set	3851
    83  0000                     _RXF2SIDH	set	3848
    84  0000                     _RXF2SIDL	set	3849
    85  0000                     _RXF2SIDLbits	set	3849
    86  0000                     _RXF3EIDH	set	3854
    87  0000                     _RXF3EIDL	set	3855
    88  0000                     _RXF3SIDH	set	3852
    89  0000                     _RXF3SIDL	set	3853
    90  0000                     _RXF3SIDLbits	set	3853
    91  0000                     _RXF4EIDH	set	3858
    92  0000                     _RXF4EIDL	set	3859
    93  0000                     _RXF4SIDH	set	3856
    94  0000                     _RXF4SIDL	set	3857
    95  0000                     _RXF4SIDLbits	set	3857
    96  0000                     _RXF5EIDH	set	3862
    97  0000                     _RXF5EIDL	set	3863
    98  0000                     _RXF5SIDH	set	3860
    99  0000                     _RXF5SIDL	set	3861
   100  0000                     _RXF5SIDLbits	set	3861
   101  0000                     _RXM0EIDH	set	3866
   102  0000                     _RXM0EIDL	set	3867
   103  0000                     _RXM0SIDH	set	3864
   104  0000                     _RXM0SIDL	set	3865
   105  0000                     _RXM0SIDLbits	set	3865
   106  0000                     _RXM1EIDH	set	3870
   107  0000                     _RXM1EIDL	set	3871
   108  0000                     _RXM1SIDH	set	3868
   109  0000                     _RXM1SIDL	set	3869
   110  0000                     _RXM1SIDLbits	set	3869
   111  0000                     _TXB0CONbits	set	3904
   112  0000                     _TXB0D0	set	3910
   113  0000                     _TXB0D1	set	3911
   114  0000                     _TXB0D2	set	3912
   115  0000                     _TXB0D3	set	3913
   116  0000                     _TXB0D4	set	3914
   117  0000                     _TXB0D5	set	3915
   118  0000                     _TXB0D6	set	3916
   119  0000                     _TXB0D7	set	3917
   120  0000                     _TXB0DLC	set	3909
   121  0000                     _TXB0DLCbits	set	3909
   122  0000                     _TXB0EIDH	set	3907
   123  0000                     _TXB0EIDL	set	3908
   124  0000                     _TXB0SIDH	set	3905
   125  0000                     _TXB0SIDL	set	3906
   126  0000                     _TXB0SIDLbits	set	3906
   127  0000                     _TXB1CONbits	set	3888
   128  0000                     _TXB1D0	set	3894
   129  0000                     _TXB1D1	set	3895
   130  0000                     _TXB1D2	set	3896
   131  0000                     _TXB1D3	set	3897
   132  0000                     _TXB1D4	set	3898
   133  0000                     _TXB1D5	set	3899
   134  0000                     _TXB1D6	set	3900
   135  0000                     _TXB1D7	set	3901
   136  0000                     _TXB1DLC	set	3893
   137  0000                     _TXB1DLCbits	set	3893
   138  0000                     _TXB1EIDH	set	3891
   139  0000                     _TXB1EIDL	set	3892
   140  0000                     _TXB1SIDH	set	3889
   141  0000                     _TXB1SIDL	set	3890
   142  0000                     _TXB1SIDLbits	set	3890
   143  0000                     _TXB2CONbits	set	3872
   144  0000                     _TXB2D0	set	3878
   145  0000                     _TXB2D1	set	3879
   146  0000                     _TXB2D2	set	3880
   147  0000                     _TXB2D3	set	3881
   148  0000                     _TXB2D4	set	3882
   149  0000                     _TXB2D5	set	3883
   150  0000                     _TXB2D6	set	3884
   151  0000                     _TXB2D7	set	3885
   152  0000                     _TXB2DLC	set	3877
   153  0000                     _TXB2DLCbits	set	3877
   154  0000                     _TXB2EIDH	set	3875
   155  0000                     _TXB2EIDL	set	3876
   156  0000                     _TXB2SIDH	set	3873
   157  0000                     _TXB2SIDL	set	3874
   158  0000                     _TXB2SIDLbits	set	3874
   159  0000                     _ADCON0bits	set	4034
   160  0000                     _ADCON1bits	set	4033
   161  0000                     _ADCON2bits	set	4032
   162  0000                     _ADRESH	set	4036
   163  0000                     _BRGCON1	set	3952
   164  0000                     _BRGCON2	set	3953
   165  0000                     _BRGCON2bits	set	3953
   166  0000                     _BRGCON3	set	3954
   167  0000                     _BRGCON3bits	set	3954
   168  0000                     _CANCON	set	3951
   169  0000                     _CANCONbits	set	3951
   170  0000                     _CANSTAT	set	3950
   171  0000                     _COMSTATbits	set	3956
   172  0000                     _ECCP1CON	set	4026
   173  0000                     _ECCPR1L	set	4027
   174  0000                     _INTCONbits	set	4082
   175  0000                     _IPR2bits	set	4002
   176  0000                     _IPR3bits	set	4005
   177  0000                     _LATA	set	3977
   178  0000                     _LATB	set	3978
   179  0000                     _LATC	set	3979
   180  0000                     _LATD	set	3980
   181  0000                     _LATE	set	3981
   182  0000                     _PIE1bits	set	3997
   183  0000                     _PIE2bits	set	4000
   184  0000                     _PIE3bits	set	4003
   185  0000                     _PIR1bits	set	3998
   186  0000                     _PIR2bits	set	4001
   187  0000                     _PIR3bits	set	4004
   188  0000                     _PORTAbits	set	3968
   189  0000                     _PORTCbits	set	3970
   190  0000                     _PR2	set	4043
   191  0000                     _RCONbits	set	4048
   192  0000                     _RXB0CON	set	3936
   193  0000                     _RXB0CONbits	set	3936
   194  0000                     _RXB0D0	set	3942
   195  0000                     _RXB0D1	set	3943
   196  0000                     _RXB0D2	set	3944
   197  0000                     _RXB0D3	set	3945
   198  0000                     _RXB0D4	set	3946
   199  0000                     _RXB0D5	set	3947
   200  0000                     _RXB0D6	set	3948
   201  0000                     _RXB0D7	set	3949
   202  0000                     _RXB0DLC	set	3941
   203  0000                     _RXB0DLCbits	set	3941
   204  0000                     _RXB0EIDH	set	3939
   205  0000                     _RXB0EIDL	set	3940
   206  0000                     _RXB0SIDH	set	3937
   207  0000                     _RXB0SIDL	set	3938
   208  0000                     _RXB0SIDLbits	set	3938
   209  0000                     _RXERRCNT	set	3957
   210  0000                     _T2CON	set	4042
   211  0000                     _T2CONbits	set	4042
   212  0000                     _T3CON	set	4017
   213  0000                     _TMR2	set	4044
   214  0000                     _TMR3H	set	4019
   215  0000                     _TMR3L	set	4018
   216  0000                     _TRISA	set	3986
   217  0000                     _TRISB	set	3987
   218  0000                     _TRISC	set	3988
   219  0000                     _TRISD	set	3989
   220  0000                     _TRISDbits	set	3989
   221  0000                     _TRISE	set	3990
   222  0000                     _TXERRCNT	set	3958
   223                           
   224                           ; #config settings
   225  0000                     
   226                           	psect	cinit
   227  0024DC                     __pcinit:
   228                           	opt stack 0
   229  0024DC                     start_initialization:
   230                           	opt stack 0
   231  0024DC                     __initialization:
   232                           	opt stack 0
   233                           
   234                           ; Clear objects allocated to BANK0 (75 bytes)
   235  0024DC  EE00  F060         	lfsr	0,__pbssBANK0
   236  0024E0  0E4B               	movlw	75
   237  0024E2                     clear_0:
   238  0024E2  6AEE               	clrf	postinc0,c
   239  0024E4  06E8               	decf	wreg,f,c
   240  0024E6  E1FD               	bnz	clear_0
   241                           
   242                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   243  0024E8  6A39               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   244  0024EA  6A38               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   245                           
   246                           ; Clear objects allocated to COMRAM (20 bytes)
   247  0024EC  EE00  F024         	lfsr	0,__pbssCOMRAM
   248  0024F0  0E14               	movlw	20
   249  0024F2                     clear_1:
   250  0024F2  6AEE               	clrf	postinc0,c
   251  0024F4  06E8               	decf	wreg,f,c
   252  0024F6  E1FD               	bnz	clear_1
   253                           
   254                           ; Initialize objects allocated to COMRAM (7 bytes)
   255                           ; load TBLPTR registers with __pidataCOMRAM
   256  0024F8  0EF8               	movlw	low __pidataCOMRAM
   257  0024FA  6EF6               	movwf	tblptrl,c
   258  0024FC  0E26               	movlw	high __pidataCOMRAM
   259  0024FE  6EF7               	movwf	tblptrh,c
   260  002500  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   261  002502  6EF8               	movwf	tblptru,c
   262  002504  EE00  F03A         	lfsr	0,__pdataCOMRAM
   263  002508  EE10 F007          	lfsr	1,7
   264  00250C                     copy_data0:
   265  00250C  0009               	tblrd		*+
   266  00250E  CFF5 FFEE          	movff	tablat,postinc0
   267  002512  50E5               	movf	postdec1,w,c
   268  002514  50E1               	movf	fsr1l,w,c
   269  002516  E1FA               	bnz	copy_data0
   270  002518                     end_of_initialization:
   271                           	opt stack 0
   272  002518                     __end_of__initialization:
   273                           	opt stack 0
   274  002518  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   275  00251A  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   276  00251C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   277  00251E  6EF8               	movwf	tblptru,c
   278  002520  0100               	movlb	0
   279  002522  EFE1  F00E         	goto	_main	;jump to C main() function
   280                           tblptru	equ	0xFF8
   281                           tblptrh	equ	0xFF7
   282                           tblptrl	equ	0xFF6
   283                           tablat	equ	0xFF5
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           postdec1	equ	0xFE5
   287                           fsr1l	equ	0xFE1
   288                           
   289                           	psect	bitbssCOMRAM
   290  0001C0                     __pbitbssCOMRAM:
   291                           	opt stack 0
   292  0001C0                     _can_retry:
   293                           	opt stack 0
   294  0001C0                     	ds	1
   295  0001C1                     _centralina_abs:
   296                           	opt stack 0
   297  0001C1                     	ds	1
   298  0001C2                     _centralina_comando:
   299                           	opt stack 0
   300  0001C2                     	ds	1
   301  0001C3                     _centralina_sterzo:
   302                           	opt stack 0
   303  0001C3                     	ds	1
   304  0001C4                     _message_sent:
   305                           	opt stack 0
   306  0001C4                     	ds	1
   307  0001C5                     _new_message:
   308                           	opt stack 0
   309  0001C5                     	ds	1
   310  0001C6                     _remote_frame:
   311                           	opt stack 0
   312  0001C6                     	ds	1
   313  0001C7                     _remote_frame1:
   314                           	opt stack 0
   315  0001C7                     	ds	1
   316  0001C8                     _request_sent:
   317                           	opt stack 0
   318  0001C8                     	ds	1
   319  0001C9                     _speed_fetched:
   320                           	opt stack 0
   321  0001C9                     	ds	1
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           postdec1	equ	0xFE5
   329                           fsr1l	equ	0xFE1
   330                           
   331                           	psect	bssCOMRAM
   332  000024                     __pbssCOMRAM:
   333                           	opt stack 0
   334  000024                     _duty_set:
   335                           	opt stack 0
   336  000024                     	ds	4
   337  000028                     _id:
   338                           	opt stack 0
   339  000028                     	ds	4
   340  00002C                     _requestSpeed:
   341                           	opt stack 0
   342  00002C                     	ds	4
   343  000030                     _left_speed:
   344                           	opt stack 0
   345  000030                     	ds	2
   346  000032                     _previousPwm:
   347                           	opt stack 0
   348  000032                     	ds	2
   349  000034                     _right_speed:
   350                           	opt stack 0
   351  000034                     	ds	2
   352  000036                     _current:
   353                           	opt stack 0
   354  000036                     	ds	1
   355  000037                     _scrittura:
   356                           	opt stack 0
   357  000037                     	ds	1
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           postdec1	equ	0xFE5
   365                           fsr1l	equ	0xFE1
   366                           
   367                           	psect	dataCOMRAM
   368  00003A                     __pdataCOMRAM:
   369                           	opt stack 0
   370  00003A                     _currentSpeed:
   371                           	opt stack 0
   372  00003A                     	ds	4
   373  00003E                     _dir:
   374                           	opt stack 0
   375  00003E                     	ds	2
   376  000040                     _delay_quartz_frequency_value:
   377                           	opt stack 0
   378  000040                     	ds	1
   379                           tblptru	equ	0xFF8
   380                           tblptrh	equ	0xFF7
   381                           tblptrl	equ	0xFF6
   382                           tablat	equ	0xFF5
   383                           postinc0	equ	0xFEE
   384                           wreg	equ	0xFE8
   385                           postdec1	equ	0xFE5
   386                           fsr1l	equ	0xFE1
   387                           
   388                           	psect	bssBANK0
   389  000060                     __pbssBANK0:
   390                           	opt stack 0
   391  000060                     _counter_array:
   392                           	opt stack 0
   393  000060                     	ds	8
   394  000068                     _currentSpeed_array:
   395                           	opt stack 0
   396  000068                     	ds	8
   397  000070                     _correzione:
   398                           	opt stack 0
   399  000070                     	ds	4
   400  000074                     _previousTimeCounter:
   401                           	opt stack 0
   402  000074                     	ds	4
   403  000078                     _previousTimeCounter1:
   404                           	opt stack 0
   405  000078                     	ds	4
   406  00007C                     _previousTimeCounter2:
   407                           	opt stack 0
   408  00007C                     	ds	4
   409  000080                     _timeCounter:
   410                           	opt stack 0
   411  000080                     	ds	4
   412  000084                     _clock_counter_reference:
   413                           	opt stack 0
   414  000084                     	ds	2
   415  000086                     _duty_cycle:
   416                           	opt stack 0
   417  000086                     	ds	2
   418  000088                     _errore:
   419                           	opt stack 0
   420  000088                     	ds	2
   421  00008A                     _vBatt:
   422                           	opt stack 0
   423  00008A                     	ds	2
   424  00008C                     _msg:
   425                           	opt stack 0
   426  00008C                     	ds	15
   427  00009B                     _data_array:
   428                           	opt stack 0
   429  00009B                     	ds	8
   430  0000A3                     _data_array_debug:
   431                           	opt stack 0
   432  0000A3                     	ds	8
   433                           tblptru	equ	0xFF8
   434                           tblptrh	equ	0xFF7
   435                           tblptrl	equ	0xFF6
   436                           tablat	equ	0xFF5
   437                           postinc0	equ	0xFEE
   438                           wreg	equ	0xFE8
   439                           postdec1	equ	0xFE5
   440                           fsr1l	equ	0xFE1
   441                           
   442                           	psect	cstackBANK0
   443  0000AB                     __pcstackBANK0:
   444                           	opt stack 0
   445  0000AB                     ??_CANSetMask:
   446  0000AB                     ??_CANSetFilter:
   447  0000AB                     ___lwdiv@counter:
   448                           	opt stack 0
   449  0000AB                     SetDCEPWM1@DCycle:
   450                           	opt stack 0
   451  0000AB                     CANsendMessage@identifier:
   452                           	opt stack 0
   453                           
   454                           ; 4 bytes @ 0x0
   455  0000AB                     	ds	1
   456  0000AC                     ___lwdiv@quotient:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x1
   460  0000AC                     	ds	2
   461  0000AE                     ?___wmul:
   462                           	opt stack 0
   463  0000AE                     ___wmul@multiplier:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x3
   467  0000AE                     	ds	1
   468  0000AF                     CANSetMask@numBuffer:
   469                           	opt stack 0
   470  0000AF                     CANSetFilter@numBuffer:
   471                           	opt stack 0
   472  0000AF                     CANsendMessage@data:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x4
   476  0000AF                     	ds	1
   477  0000B0                     ___wmul@multiplicand:
   478                           	opt stack 0
   479  0000B0                     CANSetMask@tamp:
   480                           	opt stack 0
   481  0000B0                     CANSetFilter@tamp:
   482                           	opt stack 0
   483                           
   484                           ; 4 bytes @ 0x5
   485  0000B0                     	ds	1
   486  0000B1                     CANsendMessage@dataLength:
   487                           	opt stack 0
   488                           
   489                           ; 1 bytes @ 0x6
   490  0000B1                     	ds	1
   491  0000B2                     CANsendMessage@flags:
   492                           	opt stack 0
   493  0000B2                     ___wmul@product:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0x7
   497  0000B2                     	ds	1
   498  0000B3                     CANsendMessage@tamp:
   499                           	opt stack 0
   500                           
   501                           ; 4 bytes @ 0x8
   502  0000B3                     	ds	1
   503  0000B4                     ?___awdiv:
   504                           	opt stack 0
   505  0000B4                     CANInitialize@phaseSeg1:
   506                           	opt stack 0
   507  0000B4                     delay_ms@value_ms:
   508                           	opt stack 0
   509  0000B4                     ___awdiv@dividend:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x9
   513  0000B4                     	ds	1
   514  0000B5                     CANInitialize@phaseSeg2:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0xA
   518  0000B5                     	ds	1
   519  0000B6                     CANInitialize@SJW:
   520                           	opt stack 0
   521  0000B6                     ___awdiv@divisor:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0xB
   525  0000B6                     	ds	1
   526  0000B7                     ??_rampe:
   527  0000B7                     CANInitialize@BRP:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0xC
   531  0000B7                     	ds	1
   532  0000B8                     CANInitialize@flags:
   533                           	opt stack 0
   534  0000B8                     ___awdiv@counter:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0xD
   538  0000B8                     	ds	1
   539  0000B9                     ??_CANInitialize:
   540  0000B9                     ___awdiv@sign:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0xE
   544  0000B9                     	ds	1
   545  0000BA                     ___awdiv@quotient:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0xF
   549  0000BA                     	ds	3
   550  0000BD                     CANInitialize@propSeg:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x12
   554  0000BD                     	ds	1
   555  0000BE                     CANInitialize@FilterConfig1:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x13
   559  0000BE                     	ds	1
   560  0000BF                     CANInitialize@FilterConfig2:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x14
   564  0000BF                     	ds	1
   565  0000C0                     ??_main:
   566                           
   567                           ; 0 bytes @ 0x15
   568  0000C0                     	ds	8
   569  0000C8                     main@period:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x1D
   573  0000C8                     	ds	1
   574                           tblptru	equ	0xFF8
   575                           tblptrh	equ	0xFF7
   576                           tblptrl	equ	0xFF6
   577                           tablat	equ	0xFF5
   578                           postinc0	equ	0xFEE
   579                           wreg	equ	0xFE8
   580                           postdec1	equ	0xFE5
   581                           fsr1l	equ	0xFE1
   582                           
   583                           	psect	cstackCOMRAM
   584  000001                     __pcstackCOMRAM:
   585                           	opt stack 0
   586  000001                     _CANisRxReady$3003:
   587                           	opt stack 0
   588  000001                     CANreceiveMessage@msg:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x0
   592  000001                     	ds	2
   593  000003                     ??_CANreceiveMessage:
   594                           
   595                           ; 0 bytes @ 0x2
   596  000003                     	ds	8
   597  00000B                     CANreceiveMessage@error:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0xA
   601  00000B                     	ds	1
   602  00000C                     CANreceiveMessage@tamp:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0xB
   606  00000C                     	ds	1
   607  00000D                     ??_ISR_bassa:
   608                           
   609                           ; 0 bytes @ 0xC
   610  00000D                     	ds	17
   611  00001E                     ISR_bassa@i:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x1D
   615  00001E                     	ds	1
   616  00001F                     ??_can_interpreter:
   617  00001F                     ??_CANsendMessage:
   618  00001F                     ?_abs:
   619                           	opt stack 0
   620  00001F                     ?___lwdiv:
   621                           	opt stack 0
   622  00001F                     CANOperationMode@mode:
   623                           	opt stack 0
   624  00001F                     _CANisTxReady$3001:
   625                           	opt stack 0
   626  00001F                     OpenEPWM1@period:
   627                           	opt stack 0
   628  00001F                     SetOutputEPWM1@outputmode:
   629                           	opt stack 0
   630  00001F                     OpenTimer2@config:
   631                           	opt stack 0
   632  00001F                     SetDCEPWM1@dutycycle:
   633                           	opt stack 0
   634  00001F                     abs@a:
   635                           	opt stack 0
   636  00001F                     ___lwdiv@dividend:
   637                           	opt stack 0
   638  00001F                     CANSetMask@mask:
   639                           	opt stack 0
   640  00001F                     CANSetFilter@filter:
   641                           	opt stack 0
   642                           
   643                           ; 4 bytes @ 0x1E
   644  00001F                     	ds	1
   645  000020                     SetOutputEPWM1@outputconfig:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x1F
   649  000020                     	ds	1
   650  000021                     ??_abs:
   651  000021                     ??_SetDCEPWM1:
   652  000021                     ___lwdiv@divisor:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x20
   656  000021                     	ds	2
   657  000023                     CANSetMask@type:
   658                           	opt stack 0
   659  000023                     CANSetFilter@type:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x22
   663  000023                     	ds	1
   664  000024                     tblptru	equ	0xFF8
   665                           tblptrh	equ	0xFF7
   666                           tblptrl	equ	0xFF6
   667                           tablat	equ	0xFF5
   668                           postinc0	equ	0xFEE
   669                           wreg	equ	0xFE8
   670                           postdec1	equ	0xFE5
   671                           fsr1l	equ	0xFE1
   672                           
   673                           ; 0 bytes @ 0x23
   674 ;;
   675 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   676 ;;
   677 ;; *************** function _main *****************
   678 ;; Defined at:
   679 ;;		line 115 in file "motore.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  period          1   29[BANK0 ] unsigned char 
   684 ;; Return value:  Size  Location     Type
   685 ;;                  2  663[None  ] int 
   686 ;; Registers used:
   687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   693 ;;      Params:         0       0       0       0
   694 ;;      Locals:         0       1       0       0
   695 ;;      Temps:          0       8       0       0
   696 ;;      Totals:         0       9       0       0
   697 ;;Total ram usage:        9 bytes
   698 ;; Hardware stack levels required when called:    5
   699 ;; This function calls:
   700 ;;		_CANisTxReady
   701 ;;		_CANsendMessage
   702 ;;		_OpenEPWM1
   703 ;;		_OpenTimer2
   704 ;;		_SetOutputEPWM1
   705 ;;		_battery_measure
   706 ;;		_can_interpreter
   707 ;;		_configurazione_iniziale
   708 ;;		_delay_ms
   709 ;;		_rampe
   710 ;;		_send_data
   711 ;; This function is called by:
   712 ;;		Startup code after reset
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           	psect	text0
   717  001DC2                     __ptext0:
   718                           	opt stack 0
   719  001DC2                     _main:
   720                           	opt stack 26
   721                           
   722                           ;motore.c: 116: unsigned char period;
   723                           ;motore.c: 117: configurazione_iniziale();
   724                           
   725                           ;incstack = 0
   726  001DC2  EC9D  F011         	call	_configurazione_iniziale	;wreg free
   727                           
   728                           ;motore.c: 118: PORTAbits.RA1 = 1;
   729  001DC6  8280               	bsf	3968,1,c	;volatile
   730                           
   731                           ;motore.c: 119: PORTCbits.RC1 = 1;
   732  001DC8  8282               	bsf	3970,1,c	;volatile
   733                           
   734                           ;motore.c: 120: delay_ms(500);
   735  001DCA  0E01               	movlw	1
   736  001DCC  0100               	movlb	0	; () banked
   737  001DCE  6FB5               	movwf	(delay_ms@value_ms+1)& (0+255),b
   738  001DD0  0EF4               	movlw	244
   739  001DD2  6FB4               	movwf	delay_ms@value_ms& (0+255),b
   740  001DD4  ECF7  F012         	call	_delay_ms	;wreg free
   741                           
   742                           ;motore.c: 121: PORTAbits.RA1 = 0;
   743  001DD8  9280               	bcf	3968,1,c	;volatile
   744                           
   745                           ;motore.c: 122: PORTCbits.RC1 = 0;
   746  001DDA  9282               	bcf	3970,1,c	;volatile
   747                           
   748                           ;motore.c: 123: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
   749  001DDC  0E06               	movlw	6
   750  001DDE  EC52  F013         	call	_OpenTimer2
   751                           
   752                           ;motore.c: 124: period = 0xFE;
   753  001DE2  0EFE               	movlw	254
   754  001DE4  0100               	movlb	0	; () banked
   755  001DE6  6FC8               	movwf	main@period& (0+255),b
   756                           
   757                           ; BSR set to: 0
   758                           ;motore.c: 125: OpenEPWM1(period);
   759  001DE8  0100               	movlb	0	; () banked
   760  001DEA  51C8               	movf	main@period& (0+255),w,b
   761  001DEC  EC74  F013         	call	_OpenEPWM1
   762                           
   763                           ;motore.c: 126: speed_fetched = 1;
   764  001DF0  8239               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
   765                           
   766                           ;motore.c: 127: SetOutputEPWM1(0b01111111, 0b11111100);
   767  001DF2  0EFC               	movlw	252
   768  001DF4  6E1F               	movwf	SetOutputEPWM1@outputmode,c
   769  001DF6  0E7F               	movlw	127
   770  001DF8  ECB8  F012         	call	_SetOutputEPWM1
   771  001DFC                     l4994:
   772                           
   773                           ;motore.c: 129: can_interpreter();
   774  001DFC  ECD4  F010         	call	_can_interpreter	;wreg free
   775                           
   776                           ;motore.c: 130: if ((PORTAbits.RA1 == 0)&&(PORTCbits.RC1 == 0)) {
   777  001E00  A280               	btfss	3968,1,c	;volatile
   778  001E02  B282               	btfsc	3970,1,c	;volatile
   779  001E04  D037               	goto	l5004
   780                           
   781                           ;motore.c: 131: if ((timeCounter - previousTimeCounter1 >= 30)) {
   782  001E06  C078  F0C0         	movff	_previousTimeCounter1,??_main
   783  001E0A  C079  F0C1         	movff	_previousTimeCounter1+1,??_main+1
   784  001E0E  C07A  F0C2         	movff	_previousTimeCounter1+2,??_main+2
   785  001E12  C07B  F0C3         	movff	_previousTimeCounter1+3,??_main+3
   786  001E16  0100               	movlb	0	; () banked
   787  001E18  1FC0               	comf	??_main& (0+255),f,b
   788  001E1A  1FC1               	comf	(??_main+1)& (0+255),f,b
   789  001E1C  1FC2               	comf	(??_main+2)& (0+255),f,b
   790  001E1E  1FC3               	comf	(??_main+3)& (0+255),f,b
   791  001E20  2BC0               	incf	??_main& (0+255),f,b
   792  001E22  0E00               	movlw	0
   793  001E24  23C1               	addwfc	(??_main+1)& (0+255),f,b
   794  001E26  23C2               	addwfc	(??_main+2)& (0+255),f,b
   795  001E28  23C3               	addwfc	(??_main+3)& (0+255),f,b
   796  001E2A  0100               	movlb	0	; () banked
   797  001E2C  5180               	movf	_timeCounter& (0+255),w,b	;volatile
   798  001E2E  0100               	movlb	0	; () banked
   799  001E30  25C0               	addwf	??_main& (0+255),w,b
   800  001E32  0100               	movlb	0	; () banked
   801  001E34  6FC4               	movwf	(??_main+4)& (0+255),b
   802  001E36  0100               	movlb	0	; () banked
   803  001E38  5181               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
   804  001E3A  0100               	movlb	0	; () banked
   805  001E3C  21C1               	addwfc	(??_main+1)& (0+255),w,b
   806  001E3E  0100               	movlb	0	; () banked
   807  001E40  6FC5               	movwf	(??_main+5)& (0+255),b
   808  001E42  0100               	movlb	0	; () banked
   809  001E44  5182               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
   810  001E46  0100               	movlb	0	; () banked
   811  001E48  21C2               	addwfc	(??_main+2)& (0+255),w,b
   812  001E4A  0100               	movlb	0	; () banked
   813  001E4C  6FC6               	movwf	(??_main+6)& (0+255),b
   814  001E4E  0100               	movlb	0	; () banked
   815  001E50  5183               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
   816  001E52  0100               	movlb	0	; () banked
   817  001E54  21C3               	addwfc	(??_main+3)& (0+255),w,b
   818  001E56  0100               	movlb	0	; () banked
   819  001E58  6FC7               	movwf	(??_main+7)& (0+255),b
   820  001E5A  0100               	movlb	0	; () banked
   821  001E5C  51C7               	movf	(??_main+7)& (0+255),w,b
   822  001E5E  0100               	movlb	0	; () banked
   823  001E60  11C6               	iorwf	(??_main+6)& (0+255),w,b
   824  001E62  0100               	movlb	0	; () banked
   825  001E64  11C5               	iorwf	(??_main+5)& (0+255),w,b
   826  001E66  E104               	bnz	u6300
   827  001E68  0E1E               	movlw	30
   828  001E6A  0100               	movlb	0	; () banked
   829  001E6C  5DC4               	subwf	(??_main+4)& (0+255),w,b
   830  001E6E  B0D8               	btfsc	status,0,c
   831  001E70                     u6300:
   832                           
   833                           ; BSR set to: 0
   834                           ;motore.c: 132: rampe();
   835  001E70  ECAF  F00D         	call	_rampe	;wreg free
   836  001E74                     l5004:
   837                           
   838                           ;motore.c: 133: }
   839                           ;motore.c: 134: }
   840                           ;motore.c: 135: if ((can_retry == 1)&&(remote_frame)) {
   841  001E74  B038               	btfsc	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
   842  001E76  AC38               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   843  001E78  D002               	goto	l5010
   844                           
   845                           ;motore.c: 136: send_data();
   846  001E7A  EC93  F012         	call	_send_data	;wreg free
   847  001E7E                     l5010:
   848                           
   849                           ;motore.c: 137: }
   850                           ;motore.c: 139: if ((timeCounter - previousTimeCounter) > 500) {
   851  001E7E  C074  F0C0         	movff	_previousTimeCounter,??_main
   852  001E82  C075  F0C1         	movff	_previousTimeCounter+1,??_main+1
   853  001E86  C076  F0C2         	movff	_previousTimeCounter+2,??_main+2
   854  001E8A  C077  F0C3         	movff	_previousTimeCounter+3,??_main+3
   855  001E8E  0100               	movlb	0	; () banked
   856  001E90  1FC0               	comf	??_main& (0+255),f,b
   857  001E92  1FC1               	comf	(??_main+1)& (0+255),f,b
   858  001E94  1FC2               	comf	(??_main+2)& (0+255),f,b
   859  001E96  1FC3               	comf	(??_main+3)& (0+255),f,b
   860  001E98  2BC0               	incf	??_main& (0+255),f,b
   861  001E9A  0E00               	movlw	0
   862  001E9C  23C1               	addwfc	(??_main+1)& (0+255),f,b
   863  001E9E  23C2               	addwfc	(??_main+2)& (0+255),f,b
   864  001EA0  23C3               	addwfc	(??_main+3)& (0+255),f,b
   865  001EA2  0100               	movlb	0	; () banked
   866  001EA4  5180               	movf	_timeCounter& (0+255),w,b	;volatile
   867  001EA6  0100               	movlb	0	; () banked
   868  001EA8  25C0               	addwf	??_main& (0+255),w,b
   869  001EAA  0100               	movlb	0	; () banked
   870  001EAC  6FC4               	movwf	(??_main+4)& (0+255),b
   871  001EAE  0100               	movlb	0	; () banked
   872  001EB0  5181               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
   873  001EB2  0100               	movlb	0	; () banked
   874  001EB4  21C1               	addwfc	(??_main+1)& (0+255),w,b
   875  001EB6  0100               	movlb	0	; () banked
   876  001EB8  6FC5               	movwf	(??_main+5)& (0+255),b
   877  001EBA  0100               	movlb	0	; () banked
   878  001EBC  5182               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
   879  001EBE  0100               	movlb	0	; () banked
   880  001EC0  21C2               	addwfc	(??_main+2)& (0+255),w,b
   881  001EC2  0100               	movlb	0	; () banked
   882  001EC4  6FC6               	movwf	(??_main+6)& (0+255),b
   883  001EC6  0100               	movlb	0	; () banked
   884  001EC8  5183               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
   885  001ECA  0100               	movlb	0	; () banked
   886  001ECC  21C3               	addwfc	(??_main+3)& (0+255),w,b
   887  001ECE  0100               	movlb	0	; () banked
   888  001ED0  6FC7               	movwf	(??_main+7)& (0+255),b
   889  001ED2  0100               	movlb	0	; () banked
   890  001ED4  51C7               	movf	(??_main+7)& (0+255),w,b
   891  001ED6  0100               	movlb	0	; () banked
   892  001ED8  11C6               	iorwf	(??_main+6)& (0+255),w,b
   893  001EDA  E108               	bnz	u6330
   894  001EDC  0EF5               	movlw	245
   895  001EDE  0100               	movlb	0	; () banked
   896  001EE0  5DC4               	subwf	(??_main+4)& (0+255),w,b
   897  001EE2  0E01               	movlw	1
   898  001EE4  0100               	movlb	0	; () banked
   899  001EE6  59C5               	subwfb	(??_main+5)& (0+255),w,b
   900  001EE8  A0D8               	btfss	status,0,c
   901  001EEA  D044               	goto	l5038
   902  001EEC                     u6330:
   903                           
   904                           ; BSR set to: 0
   905                           ;motore.c: 140: if (request_sent == 0) {
   906  001EEC  B039               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
   907  001EEE  D01E               	goto	l669
   908  001EF0                     l5016:
   909  001EF0  EC43  F013         	call	_CANisTxReady	;wreg free
   910  001EF4  06E8               	decf	wreg,f,c
   911  001EF6  A4D8               	btfss	status,2,c
   912  001EF8  D7FB               	goto	l5016
   913                           
   914                           ;motore.c: 142: }
   915                           ;motore.c: 143: CANsendMessage(0b00000000000000000000000000010, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   916  001EFA  0E02               	movlw	2
   917  001EFC  0100               	movlb	0	; () banked
   918  001EFE  6FAB               	movwf	CANsendMessage@identifier& (0+255),b
   919  001F00  0E00               	movlw	0
   920  001F02  6FAC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   921  001F04  0E00               	movlw	0
   922  001F06  6FAD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   923  001F08  0E00               	movlw	0
   924  001F0A  6FAE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   925  001F0C  0E9B               	movlw	low _data_array
   926  001F0E  0100               	movlb	0	; () banked
   927  001F10  6FAF               	movwf	CANsendMessage@data& (0+255),b
   928  001F12  0E00               	movlw	high _data_array
   929  001F14  0100               	movlb	0	; () banked
   930  001F16  6FB0               	movwf	(CANsendMessage@data+1)& (0+255),b
   931  001F18  0E08               	movlw	8
   932  001F1A  0100               	movlb	0	; () banked
   933  001F1C  6FB1               	movwf	CANsendMessage@dataLength& (0+255),b
   934  001F1E  0EFC               	movlw	252
   935  001F20  0100               	movlb	0	; () banked
   936  001F22  6FB2               	movwf	CANsendMessage@flags& (0+255),b
   937  001F24  ECC0  F005         	call	_CANsendMessage	;wreg free
   938                           
   939                           ;motore.c: 144: request_sent = 1;
   940  001F28  8039               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
   941                           
   942                           ;motore.c: 145: } else {
   943  001F2A  D01C               	goto	l5036
   944  001F2C                     l669:
   945                           
   946                           ; BSR set to: 0
   947                           ;motore.c: 146: if ((centralina_abs == 1)&&(centralina_sterzo == 1)&&(centralina_comando
      +                           == 1)) {
   948  001F2C  B238               	btfsc	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
   949                           
   950                           ; BSR set to: 0
   951  001F2E  A638               	btfss	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
   952  001F30  D007               	goto	l674
   953                           
   954                           ; BSR set to: 0
   955  001F32  A438               	btfss	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
   956  001F34  D005               	goto	l674
   957                           
   958                           ; BSR set to: 0
   959                           ;motore.c: 147: centralina_abs = 0;
   960  001F36  9238               	bcf	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
   961                           
   962                           ;motore.c: 148: centralina_sterzo = 0;
   963  001F38  9638               	bcf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
   964                           
   965                           ;motore.c: 149: centralina_comando = 0;
   966  001F3A  9438               	bcf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
   967                           
   968                           ;motore.c: 150: PORTAbits.RA1 = 0;
   969  001F3C  9280               	bcf	3968,1,c	;volatile
   970  001F3E  D011               	goto	l5034
   971  001F40                     l674:
   972                           
   973                           ; BSR set to: 0
   974                           ;motore.c: 154: PORTAbits.RA1 = 1;
   975  001F40  8280               	bsf	3968,1,c	;volatile
   976                           
   977                           ; BSR set to: 0
   978                           ;motore.c: 155: delay_ms(200);
   979  001F42  0E00               	movlw	0
   980  001F44  0100               	movlb	0	; () banked
   981  001F46  6FB5               	movwf	(delay_ms@value_ms+1)& (0+255),b
   982  001F48  0EC8               	movlw	200
   983  001F4A  6FB4               	movwf	delay_ms@value_ms& (0+255),b
   984  001F4C  ECF7  F012         	call	_delay_ms	;wreg free
   985                           
   986                           ;motore.c: 156: PORTAbits.RA1 = 0;
   987  001F50  9280               	bcf	3968,1,c	;volatile
   988                           
   989                           ;motore.c: 157: delay_ms(200);
   990  001F52  0E00               	movlw	0
   991  001F54  0100               	movlb	0	; () banked
   992  001F56  6FB5               	movwf	(delay_ms@value_ms+1)& (0+255),b
   993  001F58  0EC8               	movlw	200
   994  001F5A  6FB4               	movwf	delay_ms@value_ms& (0+255),b
   995  001F5C  ECF7  F012         	call	_delay_ms	;wreg free
   996                           
   997                           ;motore.c: 158: PORTAbits.RA1 = 1;
   998  001F60  8280               	bsf	3968,1,c	;volatile
   999  001F62                     l5034:
  1000                           
  1001                           ;motore.c: 159: request_sent = 0;
  1002  001F62  9039               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1003  001F64                     l5036:
  1004                           
  1005                           ;motore.c: 160: }
  1006                           ;motore.c: 161: }
  1007                           ;motore.c: 162: previousTimeCounter = timeCounter;
  1008  001F64  C080  F074         	movff	_timeCounter,_previousTimeCounter	;volatile
  1009  001F68  C081  F075         	movff	_timeCounter+1,_previousTimeCounter+1	;volatile
  1010  001F6C  C082  F076         	movff	_timeCounter+2,_previousTimeCounter+2	;volatile
  1011  001F70  C083  F077         	movff	_timeCounter+3,_previousTimeCounter+3	;volatile
  1012  001F74                     l5038:
  1013                           
  1014                           ;motore.c: 163: }
  1015                           ;motore.c: 164: if ((timeCounter - previousTimeCounter2 > 100)) {
  1016  001F74  C07C  F0C0         	movff	_previousTimeCounter2,??_main
  1017  001F78  C07D  F0C1         	movff	_previousTimeCounter2+1,??_main+1
  1018  001F7C  C07E  F0C2         	movff	_previousTimeCounter2+2,??_main+2
  1019  001F80  C07F  F0C3         	movff	_previousTimeCounter2+3,??_main+3
  1020  001F84  0100               	movlb	0	; () banked
  1021  001F86  1FC0               	comf	??_main& (0+255),f,b
  1022  001F88  1FC1               	comf	(??_main+1)& (0+255),f,b
  1023  001F8A  1FC2               	comf	(??_main+2)& (0+255),f,b
  1024  001F8C  1FC3               	comf	(??_main+3)& (0+255),f,b
  1025  001F8E  2BC0               	incf	??_main& (0+255),f,b
  1026  001F90  0E00               	movlw	0
  1027  001F92  23C1               	addwfc	(??_main+1)& (0+255),f,b
  1028  001F94  23C2               	addwfc	(??_main+2)& (0+255),f,b
  1029  001F96  23C3               	addwfc	(??_main+3)& (0+255),f,b
  1030  001F98  0100               	movlb	0	; () banked
  1031  001F9A  5180               	movf	_timeCounter& (0+255),w,b	;volatile
  1032  001F9C  0100               	movlb	0	; () banked
  1033  001F9E  25C0               	addwf	??_main& (0+255),w,b
  1034  001FA0  0100               	movlb	0	; () banked
  1035  001FA2  6FC4               	movwf	(??_main+4)& (0+255),b
  1036  001FA4  0100               	movlb	0	; () banked
  1037  001FA6  5181               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
  1038  001FA8  0100               	movlb	0	; () banked
  1039  001FAA  21C1               	addwfc	(??_main+1)& (0+255),w,b
  1040  001FAC  0100               	movlb	0	; () banked
  1041  001FAE  6FC5               	movwf	(??_main+5)& (0+255),b
  1042  001FB0  0100               	movlb	0	; () banked
  1043  001FB2  5182               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
  1044  001FB4  0100               	movlb	0	; () banked
  1045  001FB6  21C2               	addwfc	(??_main+2)& (0+255),w,b
  1046  001FB8  0100               	movlb	0	; () banked
  1047  001FBA  6FC6               	movwf	(??_main+6)& (0+255),b
  1048  001FBC  0100               	movlb	0	; () banked
  1049  001FBE  5183               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
  1050  001FC0  0100               	movlb	0	; () banked
  1051  001FC2  21C3               	addwfc	(??_main+3)& (0+255),w,b
  1052  001FC4  0100               	movlb	0	; () banked
  1053  001FC6  6FC7               	movwf	(??_main+7)& (0+255),b
  1054  001FC8  0100               	movlb	0	; () banked
  1055  001FCA  51C7               	movf	(??_main+7)& (0+255),w,b
  1056  001FCC  0100               	movlb	0	; () banked
  1057  001FCE  11C6               	iorwf	(??_main+6)& (0+255),w,b
  1058  001FD0  0100               	movlb	0	; () banked
  1059  001FD2  11C5               	iorwf	(??_main+5)& (0+255),w,b
  1060  001FD4  E105               	bnz	u6390
  1061  001FD6  0E65               	movlw	101
  1062  001FD8  0100               	movlb	0	; () banked
  1063  001FDA  5DC4               	subwf	(??_main+4)& (0+255),w,b
  1064  001FDC  A0D8               	btfss	status,0,c
  1065  001FDE  D70E               	goto	l4994
  1066  001FE0                     u6390:
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;motore.c: 165: battery_measure();
  1070  001FE0  ECF4  F011         	call	_battery_measure	;wreg free
  1071                           
  1072                           ;motore.c: 166: previousTimeCounter2 = timeCounter;
  1073  001FE4  C080  F07C         	movff	_timeCounter,_previousTimeCounter2	;volatile
  1074  001FE8  C081  F07D         	movff	_timeCounter+1,_previousTimeCounter2+1	;volatile
  1075  001FEC  C082  F07E         	movff	_timeCounter+2,_previousTimeCounter2+2	;volatile
  1076  001FF0  C083  F07F         	movff	_timeCounter+3,_previousTimeCounter2+3	;volatile
  1077  001FF4  D703               	goto	l4994
  1078  001FF6                     __end_of_main:
  1079                           	opt stack 0
  1080                           tblptru	equ	0xFF8
  1081                           tblptrh	equ	0xFF7
  1082                           tblptrl	equ	0xFF6
  1083                           tablat	equ	0xFF5
  1084                           postinc0	equ	0xFEE
  1085                           wreg	equ	0xFE8
  1086                           postdec1	equ	0xFE5
  1087                           fsr1l	equ	0xFE1
  1088                           status	equ	0xFD8
  1089                           
  1090 ;; *************** function _send_data *****************
  1091 ;; Defined at:
  1092 ;;		line 206 in file "motore.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;		None               void
  1099 ;; Registers used:
  1100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1106 ;;      Params:         0       0       0       0
  1107 ;;      Locals:         0       0       0       0
  1108 ;;      Temps:          0       0       0       0
  1109 ;;      Totals:         0       0       0       0
  1110 ;;Total ram usage:        0 bytes
  1111 ;; Hardware stack levels used:    1
  1112 ;; Hardware stack levels required when called:    3
  1113 ;; This function calls:
  1114 ;;		_CANisTxReady
  1115 ;;		_CANsendMessage
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text1
  1122  002526                     __ptext1:
  1123                           	opt stack 0
  1124  002526                     _send_data:
  1125                           	opt stack 27
  1126                           
  1127                           ;motore.c: 207: if (CANisTxReady()) {
  1128                           
  1129                           ;incstack = 0
  1130  002526  EC43  F013         	call	_CANisTxReady	;wreg free
  1131  00252A  0900               	iorlw	0
  1132  00252C  A4D8               	btfss	status,2,c
  1133                           
  1134                           ;motore.c: 208: if (remote_frame == 1) {
  1135  00252E  AC38               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1136  002530  D017               	goto	l4948
  1137                           
  1138                           ;motore.c: 209: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1139  002532  C028  F0AB         	movff	_id,CANsendMessage@identifier	;volatile
  1140  002536  C029  F0AC         	movff	_id+1,CANsendMessage@identifier+1	;volatile
  1141  00253A  C02A  F0AD         	movff	_id+2,CANsendMessage@identifier+2	;volatile
  1142  00253E  C02B  F0AE         	movff	_id+3,CANsendMessage@identifier+3	;volatile
  1143  002542  0E9B               	movlw	low _data_array
  1144  002544  0100               	movlb	0	; () banked
  1145  002546  6FAF               	movwf	CANsendMessage@data& (0+255),b
  1146  002548  0E00               	movlw	high _data_array
  1147  00254A  0100               	movlb	0	; () banked
  1148  00254C  6FB0               	movwf	(CANsendMessage@data+1)& (0+255),b
  1149  00254E  0E08               	movlw	8
  1150  002550  0100               	movlb	0	; () banked
  1151  002552  6FB1               	movwf	CANsendMessage@dataLength& (0+255),b
  1152  002554  0EBC               	movlw	188
  1153  002556  0100               	movlb	0	; () banked
  1154  002558  6FB2               	movwf	CANsendMessage@flags& (0+255),b
  1155  00255A  ECC0  F005         	call	_CANsendMessage	;wreg free
  1156                           
  1157                           ;motore.c: 210: remote_frame = 0;
  1158  00255E  9C38               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1159  002560                     l4948:
  1160                           
  1161                           ;motore.c: 211: }
  1162                           ;motore.c: 212: }
  1163                           ;motore.c: 213: if ((TXB0CONbits.TXABT) || (TXB1CONbits.TXABT)) {
  1164  002560  010F               	movlb	15	; () banked
  1165  002562  BD40               	btfsc	64,6,b	;volatile
  1166  002564  D003               	goto	l701
  1167                           
  1168                           ; BSR set to: 15
  1169  002566  010F               	movlb	15	; () banked
  1170  002568  AD30               	btfss	48,6,b	;volatile
  1171  00256A  0012               	return	
  1172  00256C                     l701:
  1173                           
  1174                           ; BSR set to: 15
  1175                           ;motore.c: 214: can_retry = 1;
  1176  00256C  8038               	bsf	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
  1177  00256E  0012               	return	
  1178  002570                     __end_of_send_data:
  1179                           	opt stack 0
  1180                           tblptru	equ	0xFF8
  1181                           tblptrh	equ	0xFF7
  1182                           tblptrl	equ	0xFF6
  1183                           tablat	equ	0xFF5
  1184                           postinc0	equ	0xFEE
  1185                           wreg	equ	0xFE8
  1186                           postdec1	equ	0xFE5
  1187                           fsr1l	equ	0xFE1
  1188                           status	equ	0xFD8
  1189                           
  1190 ;; *************** function _rampe *****************
  1191 ;; Defined at:
  1192 ;;		line 171 in file "motore.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;		None               void
  1199 ;; Registers used:
  1200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1206 ;;      Params:         0       0       0       0
  1207 ;;      Locals:         0       0       0       0
  1208 ;;      Temps:          0       8       0       0
  1209 ;;      Totals:         0       8       0       0
  1210 ;;Total ram usage:        8 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    3
  1213 ;; This function calls:
  1214 ;;		_CANisTxReady
  1215 ;;		_CANsendMessage
  1216 ;;		_SetDCEPWM1
  1217 ;;		_SetOutputEPWM1
  1218 ;;		___lwdiv
  1219 ;;		___wmul
  1220 ;;		_abs
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text2
  1227  001B5E                     __ptext2:
  1228                           	opt stack 0
  1229  001B5E                     _rampe:
  1230                           	opt stack 27
  1231  001B5E                     l4898:
  1232  001B5E  EC43  F013         	call	_CANisTxReady	;wreg free
  1233  001B62  06E8               	decf	wreg,f,c
  1234  001B64  A4D8               	btfss	status,2,c
  1235  001B66  D7FB               	goto	l4898
  1236                           
  1237                           ;motore.c: 173: CANsendMessage(0b00000000000000000000000000110, data_array_debug, 8, CAN
      +                          _CONFIG_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1238  001B68  0E06               	movlw	6
  1239  001B6A  0100               	movlb	0	; () banked
  1240  001B6C  6FAB               	movwf	CANsendMessage@identifier& (0+255),b
  1241  001B6E  0E00               	movlw	0
  1242  001B70  6FAC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1243  001B72  0E00               	movlw	0
  1244  001B74  6FAD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1245  001B76  0E00               	movlw	0
  1246  001B78  6FAE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1247  001B7A  0EA3               	movlw	low _data_array_debug
  1248  001B7C  0100               	movlb	0	; () banked
  1249  001B7E  6FAF               	movwf	CANsendMessage@data& (0+255),b
  1250  001B80  0E00               	movlw	high _data_array_debug
  1251  001B82  0100               	movlb	0	; () banked
  1252  001B84  6FB0               	movwf	(CANsendMessage@data+1)& (0+255),b
  1253  001B86  0E08               	movlw	8
  1254  001B88  0100               	movlb	0	; () banked
  1255  001B8A  6FB1               	movwf	CANsendMessage@dataLength& (0+255),b
  1256  001B8C  0EFC               	movlw	252
  1257  001B8E  0100               	movlb	0	; () banked
  1258  001B90  6FB2               	movwf	CANsendMessage@flags& (0+255),b
  1259  001B92  ECC0  F005         	call	_CANsendMessage	;wreg free
  1260                           
  1261                           ;motore.c: 174: if (speed_fetched == 1) {
  1262  001B96  A239               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1263  001B98  D105               	goto	l4936
  1264                           
  1265                           ;motore.c: 175: if (dir == 1) {
  1266  001B9A  043E               	decf	_dir,w,c	;volatile
  1267  001B9C  103F               	iorwf	_dir+1,w,c	;volatile
  1268  001B9E  A4D8               	btfss	status,2,c
  1269  001BA0  D005               	goto	l4908
  1270                           
  1271                           ;motore.c: 176: SetOutputEPWM1(0b01111111, 0b11111100);
  1272  001BA2  0EFC               	movlw	252
  1273  001BA4  6E1F               	movwf	SetOutputEPWM1@outputmode,c
  1274  001BA6  0E7F               	movlw	127
  1275  001BA8  ECB8  F012         	call	_SetOutputEPWM1
  1276  001BAC                     l4908:
  1277                           
  1278                           ;motore.c: 177: }
  1279                           ;motore.c: 178: if (dir == 0) {
  1280  001BAC  503E               	movf	_dir,w,c	;volatile
  1281  001BAE  103F               	iorwf	_dir+1,w,c	;volatile
  1282  001BB0  A4D8               	btfss	status,2,c
  1283  001BB2  D005               	goto	l4912
  1284                           
  1285                           ;motore.c: 179: SetOutputEPWM1(0b11111111, 0b11111100);
  1286  001BB4  0EFC               	movlw	252
  1287  001BB6  6E1F               	movwf	SetOutputEPWM1@outputmode,c
  1288  001BB8  0EFF               	movlw	255
  1289  001BBA  ECB8  F012         	call	_SetOutputEPWM1
  1290  001BBE                     l4912:
  1291                           
  1292                           ;motore.c: 180: }
  1293                           ;motore.c: 181: speed_fetched = 0;
  1294  001BBE  9239               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1295                           
  1296                           ;motore.c: 182: currentSpeed = ((left_speed + right_speed) / 2);
  1297  001BC0  5034               	movf	_right_speed,w,c	;volatile
  1298  001BC2  2430               	addwf	_left_speed,w,c	;volatile
  1299  001BC4  0100               	movlb	0	; () banked
  1300  001BC6  6FB7               	movwf	??_rampe& (0+255),b
  1301  001BC8  5035               	movf	_right_speed+1,w,c	;volatile
  1302  001BCA  2031               	addwfc	_left_speed+1,w,c	;volatile
  1303  001BCC  0100               	movlb	0	; () banked
  1304  001BCE  6FB8               	movwf	(??_rampe+1)& (0+255),b
  1305  001BD0  90D8               	bcf	status,0,c
  1306  001BD2  0100               	movlb	0	; () banked
  1307  001BD4  31B8               	rrcf	(??_rampe+1)& (0+255),w,b
  1308  001BD6  0100               	movlb	0	; () banked
  1309  001BD8  6FBA               	movwf	(??_rampe+3)& (0+255),b
  1310  001BDA  0100               	movlb	0	; () banked
  1311  001BDC  31B7               	rrcf	??_rampe& (0+255),w,b
  1312  001BDE  0100               	movlb	0	; () banked
  1313  001BE0  6FB9               	movwf	(??_rampe+2)& (0+255),b
  1314  001BE2  C0B9  F03A         	movff	??_rampe+2,_currentSpeed	;volatile
  1315  001BE6  C0BA  F03B         	movff	??_rampe+3,_currentSpeed+1	;volatile
  1316  001BEA  6A3C               	clrf	_currentSpeed+2,c	;volatile
  1317  001BEC  6A3D               	clrf	_currentSpeed+3,c	;volatile
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;motore.c: 183: errore = abs((currentSpeed - requestSpeed));
  1321  001BEE  C02C  F0B7         	movff	_requestSpeed,??_rampe	;volatile
  1322  001BF2  C02D  F0B8         	movff	_requestSpeed+1,??_rampe+1	;volatile
  1323  001BF6  0100               	movlb	0	; () banked
  1324  001BF8  1FB7               	comf	??_rampe& (0+255),f,b
  1325  001BFA  1FB8               	comf	(??_rampe+1)& (0+255),f,b
  1326  001BFC  4BB7               	infsnz	??_rampe& (0+255),f,b
  1327  001BFE  2BB8               	incf	(??_rampe+1)& (0+255),f,b
  1328  001C00  503A               	movf	_currentSpeed,w,c	;volatile
  1329  001C02  0100               	movlb	0	; () banked
  1330  001C04  25B7               	addwf	??_rampe& (0+255),w,b
  1331  001C06  6E1F               	movwf	abs@a,c
  1332  001C08  503B               	movf	_currentSpeed+1,w,c	;volatile
  1333  001C0A  0100               	movlb	0	; () banked
  1334  001C0C  21B8               	addwfc	(??_rampe+1)& (0+255),w,b
  1335  001C0E  6E20               	movwf	abs@a+1,c
  1336  001C10  EC2F  F013         	call	_abs	;wreg free
  1337  001C14  C01F  F088         	movff	?_abs,_errore
  1338  001C18  C020  F089         	movff	?_abs+1,_errore+1
  1339                           
  1340                           ;motore.c: 184: correzione = ((errore / 150)*(errore / 150))*2;
  1341  001C1C  0E00               	movlw	0
  1342  001C1E  6E22               	movwf	___lwdiv@divisor+1,c
  1343  001C20  0E96               	movlw	150
  1344  001C22  6E21               	movwf	___lwdiv@divisor,c
  1345  001C24  C088  F01F         	movff	_errore,___lwdiv@dividend
  1346  001C28  C089  F020         	movff	_errore+1,___lwdiv@dividend+1
  1347  001C2C  EC3F  F012         	call	___lwdiv	;wreg free
  1348  001C30  C01F  F0AE         	movff	?___lwdiv,___wmul@multiplier
  1349  001C34  C020  F0AF         	movff	?___lwdiv+1,___wmul@multiplier+1
  1350  001C38  0E00               	movlw	0
  1351  001C3A  6E22               	movwf	___lwdiv@divisor+1,c
  1352  001C3C  0E96               	movlw	150
  1353  001C3E  6E21               	movwf	___lwdiv@divisor,c
  1354  001C40  C088  F01F         	movff	_errore,___lwdiv@dividend
  1355  001C44  C089  F020         	movff	_errore+1,___lwdiv@dividend+1
  1356  001C48  EC3F  F012         	call	___lwdiv	;wreg free
  1357  001C4C  C01F  F0B0         	movff	?___lwdiv,___wmul@multiplicand
  1358  001C50  C020  F0B1         	movff	?___lwdiv+1,___wmul@multiplicand+1
  1359  001C54  EC14  F013         	call	___wmul	;wreg free
  1360  001C58  90D8               	bcf	status,0,c
  1361  001C5A  0100               	movlb	0	; () banked
  1362  001C5C  37AE               	rlcf	?___wmul& (0+255),f,b
  1363  001C5E  0100               	movlb	0	; () banked
  1364  001C60  37AF               	rlcf	(?___wmul+1)& (0+255),f,b
  1365  001C62  0100               	movlb	0	; () banked
  1366  001C64  C0AE  F070         	movff	?___wmul,_correzione
  1367  001C68  0100               	movlb	0	; () banked
  1368  001C6A  C0AF  F071         	movff	?___wmul+1,_correzione+1
  1369  001C6E  0100               	movlb	0	; () banked
  1370  001C70  6B72               	clrf	(_correzione+2)& (0+255),b
  1371  001C72  6B73               	clrf	(_correzione+3)& (0+255),b
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;motore.c: 185: if (correzione > 1) {
  1375  001C74  0100               	movlb	0	; () banked
  1376  001C76  BF73               	btfsc	(_correzione+3)& (0+255),7,b
  1377  001C78  D08B               	goto	l4932
  1378  001C7A  0100               	movlb	0	; () banked
  1379  001C7C  5173               	movf	(_correzione+3)& (0+255),w,b
  1380  001C7E  0100               	movlb	0	; () banked
  1381  001C80  1172               	iorwf	(_correzione+2)& (0+255),w,b
  1382  001C82  0100               	movlb	0	; () banked
  1383  001C84  1171               	iorwf	(_correzione+1)& (0+255),w,b
  1384  001C86  E105               	bnz	u6160
  1385  001C88  0E02               	movlw	2
  1386  001C8A  0100               	movlb	0	; () banked
  1387  001C8C  5D70               	subwf	_correzione& (0+255),w,b
  1388  001C8E  A0D8               	btfss	status,0,c
  1389  001C90  D07F               	goto	l4932
  1390  001C92                     u6160:
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;motore.c: 186: if (currentSpeed - requestSpeed > 0) {
  1394  001C92  C02C  F0B7         	movff	_requestSpeed,??_rampe	;volatile
  1395  001C96  C02D  F0B8         	movff	_requestSpeed+1,??_rampe+1	;volatile
  1396  001C9A  C02E  F0B9         	movff	_requestSpeed+2,??_rampe+2	;volatile
  1397  001C9E  C02F  F0BA         	movff	_requestSpeed+3,??_rampe+3	;volatile
  1398  001CA2  0100               	movlb	0	; () banked
  1399  001CA4  1FB7               	comf	??_rampe& (0+255),f,b
  1400  001CA6  1FB8               	comf	(??_rampe+1)& (0+255),f,b
  1401  001CA8  1FB9               	comf	(??_rampe+2)& (0+255),f,b
  1402  001CAA  1FBA               	comf	(??_rampe+3)& (0+255),f,b
  1403  001CAC  2BB7               	incf	??_rampe& (0+255),f,b
  1404  001CAE  0E00               	movlw	0
  1405  001CB0  23B8               	addwfc	(??_rampe+1)& (0+255),f,b
  1406  001CB2  23B9               	addwfc	(??_rampe+2)& (0+255),f,b
  1407  001CB4  23BA               	addwfc	(??_rampe+3)& (0+255),f,b
  1408  001CB6  503A               	movf	_currentSpeed,w,c	;volatile
  1409  001CB8  0100               	movlb	0	; () banked
  1410  001CBA  25B7               	addwf	??_rampe& (0+255),w,b
  1411  001CBC  0100               	movlb	0	; () banked
  1412  001CBE  6FBB               	movwf	(??_rampe+4)& (0+255),b
  1413  001CC0  503B               	movf	_currentSpeed+1,w,c	;volatile
  1414  001CC2  0100               	movlb	0	; () banked
  1415  001CC4  21B8               	addwfc	(??_rampe+1)& (0+255),w,b
  1416  001CC6  0100               	movlb	0	; () banked
  1417  001CC8  6FBC               	movwf	(??_rampe+5)& (0+255),b
  1418  001CCA  503C               	movf	_currentSpeed+2,w,c	;volatile
  1419  001CCC  0100               	movlb	0	; () banked
  1420  001CCE  21B9               	addwfc	(??_rampe+2)& (0+255),w,b
  1421  001CD0  0100               	movlb	0	; () banked
  1422  001CD2  6FBD               	movwf	(??_rampe+6)& (0+255),b
  1423  001CD4  503D               	movf	_currentSpeed+3,w,c	;volatile
  1424  001CD6  0100               	movlb	0	; () banked
  1425  001CD8  21BA               	addwfc	(??_rampe+3)& (0+255),w,b
  1426  001CDA  0100               	movlb	0	; () banked
  1427  001CDC  6FBE               	movwf	(??_rampe+7)& (0+255),b
  1428  001CDE  0100               	movlb	0	; () banked
  1429  001CE0  BFBE               	btfsc	(??_rampe+7)& (0+255),7,b
  1430  001CE2  D033               	goto	l4928
  1431  001CE4  0100               	movlb	0	; () banked
  1432  001CE6  51BE               	movf	(??_rampe+7)& (0+255),w,b
  1433  001CE8  0100               	movlb	0	; () banked
  1434  001CEA  11BD               	iorwf	(??_rampe+6)& (0+255),w,b
  1435  001CEC  0100               	movlb	0	; () banked
  1436  001CEE  11BC               	iorwf	(??_rampe+5)& (0+255),w,b
  1437  001CF0  E104               	bnz	u6170
  1438  001CF2  0100               	movlb	0	; () banked
  1439  001CF4  05BB               	decf	(??_rampe+4)& (0+255),w,b
  1440  001CF6  A0D8               	btfss	status,0,c
  1441  001CF8  D028               	goto	l4928
  1442  001CFA                     u6170:
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;motore.c: 187: duty_set = previousPwm - correzione;
  1446  001CFA  C070  F0B7         	movff	_correzione,??_rampe
  1447  001CFE  C071  F0B8         	movff	_correzione+1,??_rampe+1
  1448  001D02  C072  F0B9         	movff	_correzione+2,??_rampe+2
  1449  001D06  C073  F0BA         	movff	_correzione+3,??_rampe+3
  1450  001D0A  0100               	movlb	0	; () banked
  1451  001D0C  1FB7               	comf	??_rampe& (0+255),f,b
  1452  001D0E  1FB8               	comf	(??_rampe+1)& (0+255),f,b
  1453  001D10  1FB9               	comf	(??_rampe+2)& (0+255),f,b
  1454  001D12  1FBA               	comf	(??_rampe+3)& (0+255),f,b
  1455  001D14  2BB7               	incf	??_rampe& (0+255),f,b
  1456  001D16  0E00               	movlw	0
  1457  001D18  23B8               	addwfc	(??_rampe+1)& (0+255),f,b
  1458  001D1A  23B9               	addwfc	(??_rampe+2)& (0+255),f,b
  1459  001D1C  23BA               	addwfc	(??_rampe+3)& (0+255),f,b
  1460  001D1E  5032               	movf	_previousPwm,w,c
  1461  001D20  0100               	movlb	0	; () banked
  1462  001D22  25B7               	addwf	??_rampe& (0+255),w,b
  1463  001D24  6E24               	movwf	_duty_set,c
  1464  001D26  5033               	movf	_previousPwm+1,w,c
  1465  001D28  0100               	movlb	0	; () banked
  1466  001D2A  21B8               	addwfc	(??_rampe+1)& (0+255),w,b
  1467  001D2C  6E25               	movwf	_duty_set+1,c
  1468  001D2E  0E00               	movlw	0
  1469  001D30  0100               	movlb	0	; () banked
  1470  001D32  21B9               	addwfc	(??_rampe+2)& (0+255),w,b
  1471  001D34  6E26               	movwf	_duty_set+2,c
  1472  001D36  0E00               	movlw	0
  1473  001D38  0100               	movlb	0	; () banked
  1474  001D3A  21BA               	addwfc	(??_rampe+3)& (0+255),w,b
  1475  001D3C  6E27               	movwf	_duty_set+3,c
  1476                           
  1477                           ;motore.c: 188: if (duty_set < 0) {
  1478  001D3E  AE27               	btfss	_duty_set+3,7,c
  1479  001D40  D02D               	goto	l4934
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;motore.c: 189: duty_set = 0;
  1483  001D42  0E00               	movlw	0
  1484  001D44  6E24               	movwf	_duty_set,c
  1485  001D46  0E00               	movlw	0
  1486  001D48  D01D               	goto	L1
  1487  001D4A                     l4928:
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;motore.c: 192: duty_set = previousPwm + correzione;
  1491  001D4A  5032               	movf	_previousPwm,w,c
  1492  001D4C  0100               	movlb	0	; () banked
  1493  001D4E  2570               	addwf	_correzione& (0+255),w,b
  1494  001D50  6E24               	movwf	_duty_set,c
  1495  001D52  5033               	movf	_previousPwm+1,w,c
  1496  001D54  0100               	movlb	0	; () banked
  1497  001D56  2171               	addwfc	(_correzione+1)& (0+255),w,b
  1498  001D58  6E25               	movwf	_duty_set+1,c
  1499  001D5A  0E00               	movlw	0
  1500  001D5C  0100               	movlb	0	; () banked
  1501  001D5E  2172               	addwfc	(_correzione+2)& (0+255),w,b
  1502  001D60  6E26               	movwf	_duty_set+2,c
  1503  001D62  0E00               	movlw	0
  1504  001D64  0100               	movlb	0	; () banked
  1505  001D66  2173               	addwfc	(_correzione+3)& (0+255),w,b
  1506  001D68  6E27               	movwf	_duty_set+3,c
  1507                           
  1508                           ;motore.c: 193: if (duty_set > 1024) {
  1509  001D6A  BE27               	btfsc	_duty_set+3,7,c
  1510  001D6C  D017               	goto	l4934
  1511  001D6E  5027               	movf	_duty_set+3,w,c
  1512  001D70  1026               	iorwf	_duty_set+2,w,c
  1513  001D72  E105               	bnz	u6190
  1514  001D74  0424               	decf	_duty_set,w,c
  1515  001D76  0E04               	movlw	4
  1516  001D78  5825               	subwfb	_duty_set+1,w,c
  1517  001D7A  A0D8               	btfss	status,0,c
  1518  001D7C  D00F               	goto	l4934
  1519  001D7E                     u6190:
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;motore.c: 194: duty_set = 1023;
  1523  001D7E  0EFF               	movlw	255
  1524  001D80  6E24               	movwf	_duty_set,c
  1525  001D82  0E03               	movlw	3
  1526  001D84                     L1:
  1527  001D84  6E25               	movwf	_duty_set+1,c
  1528  001D86  0E00               	movlw	0
  1529  001D88  6E26               	movwf	_duty_set+2,c
  1530  001D8A  0E00               	movlw	0
  1531  001D8C  6E27               	movwf	_duty_set+3,c
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;motore.c: 195: }
  1535                           ;motore.c: 196: }
  1536                           ;motore.c: 197: } else {
  1537                           
  1538                           ; BSR set to: 0
  1539  001D8E  D006               	goto	l4934
  1540  001D90                     l4932:
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;motore.c: 198: duty_set = previousPwm;
  1544  001D90  C032  F024         	movff	_previousPwm,_duty_set
  1545  001D94  C033  F025         	movff	_previousPwm+1,_duty_set+1
  1546  001D98  6A26               	clrf	_duty_set+2,c
  1547  001D9A  6A27               	clrf	_duty_set+3,c
  1548  001D9C                     l4934:
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;motore.c: 199: }
  1552                           ;motore.c: 200: previousPwm = duty_set;
  1553  001D9C  C024  F032         	movff	_duty_set,_previousPwm
  1554  001DA0  C025  F033         	movff	_duty_set+1,_previousPwm+1
  1555  001DA4                     l4936:
  1556                           
  1557                           ;motore.c: 201: }
  1558                           ;motore.c: 202: previousTimeCounter1 = timeCounter;
  1559  001DA4  C080  F078         	movff	_timeCounter,_previousTimeCounter1	;volatile
  1560  001DA8  C081  F079         	movff	_timeCounter+1,_previousTimeCounter1+1	;volatile
  1561  001DAC  C082  F07A         	movff	_timeCounter+2,_previousTimeCounter1+2	;volatile
  1562  001DB0  C083  F07B         	movff	_timeCounter+3,_previousTimeCounter1+3	;volatile
  1563                           
  1564                           ;motore.c: 203: SetDCEPWM1(duty_set);
  1565  001DB4  C024  F01F         	movff	_duty_set,SetDCEPWM1@dutycycle
  1566  001DB8  C025  F020         	movff	_duty_set+1,SetDCEPWM1@dutycycle+1
  1567  001DBC  ECDA  F012         	call	_SetDCEPWM1	;wreg free
  1568  001DC0  0012               	return		;funcret
  1569  001DC2                     __end_of_rampe:
  1570                           	opt stack 0
  1571                           tblptru	equ	0xFF8
  1572                           tblptrh	equ	0xFF7
  1573                           tblptrl	equ	0xFF6
  1574                           tablat	equ	0xFF5
  1575                           postinc0	equ	0xFEE
  1576                           wreg	equ	0xFE8
  1577                           postdec1	equ	0xFE5
  1578                           fsr1l	equ	0xFE1
  1579                           status	equ	0xFD8
  1580                           
  1581 ;; *************** function _abs *****************
  1582 ;; Defined at:
  1583 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  a               2   30[COMRAM] int 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  2   30[COMRAM] int 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1597 ;;      Params:         2       0       0       0
  1598 ;;      Locals:         0       0       0       0
  1599 ;;      Temps:          2       0       0       0
  1600 ;;      Totals:         4       0       0       0
  1601 ;;Total ram usage:        4 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; Hardware stack levels required when called:    2
  1604 ;; This function calls:
  1605 ;;		Nothing
  1606 ;; This function is called by:
  1607 ;;		_rampe
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text3
  1612  00265E                     __ptext3:
  1613                           	opt stack 0
  1614  00265E                     _abs:
  1615                           	opt stack 27
  1616                           
  1617                           ;incstack = 0
  1618  00265E  AE20               	btfss	abs@a+1,7,c
  1619  002660  D00D               	goto	l822
  1620  002662  C01F  F021         	movff	abs@a,??_abs
  1621  002666  C020  F022         	movff	abs@a+1,??_abs+1
  1622  00266A  1E21               	comf	??_abs,f,c
  1623  00266C  1E22               	comf	??_abs+1,f,c
  1624  00266E  4A21               	infsnz	??_abs,f,c
  1625  002670  2A22               	incf	??_abs+1,f,c
  1626  002672  C021  F01F         	movff	??_abs,?_abs
  1627  002676  C022  F020         	movff	??_abs+1,?_abs+1
  1628  00267A  0012               	return	
  1629  00267C                     l822:
  1630  00267C  C01F  F01F         	movff	abs@a,?_abs
  1631  002680  C020  F020         	movff	abs@a+1,?_abs+1
  1632  002684  0012               	return		;funcret
  1633  002686                     __end_of_abs:
  1634                           	opt stack 0
  1635                           tblptru	equ	0xFF8
  1636                           tblptrh	equ	0xFF7
  1637                           tblptrl	equ	0xFF6
  1638                           tablat	equ	0xFF5
  1639                           postinc0	equ	0xFEE
  1640                           wreg	equ	0xFE8
  1641                           postdec1	equ	0xFE5
  1642                           fsr1l	equ	0xFE1
  1643                           status	equ	0xFD8
  1644                           
  1645 ;; *************** function ___lwdiv *****************
  1646 ;; Defined at:
  1647 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  dividend        2   30[COMRAM] unsigned int 
  1650 ;;  divisor         2   32[COMRAM] unsigned int 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  quotient        2    1[BANK0 ] unsigned int 
  1653 ;;  counter         1    0[BANK0 ] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  2   30[COMRAM] unsigned int 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, status,0
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1663 ;;      Params:         4       0       0       0
  1664 ;;      Locals:         0       3       0       0
  1665 ;;      Temps:          0       0       0       0
  1666 ;;      Totals:         4       3       0       0
  1667 ;;Total ram usage:        7 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    2
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_rampe
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text4
  1678  00247E                     __ptext4:
  1679                           	opt stack 0
  1680  00247E                     ___lwdiv:
  1681                           	opt stack 27
  1682                           
  1683                           ;incstack = 0
  1684  00247E  0E00               	movlw	0
  1685  002480  0100               	movlb	0	; () banked
  1686  002482  6FAD               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1687  002484  0E00               	movlw	0
  1688  002486  6FAC               	movwf	___lwdiv@quotient& (0+255),b
  1689                           
  1690                           ; BSR set to: 0
  1691  002488  5021               	movf	___lwdiv@divisor,w,c
  1692  00248A  1022               	iorwf	___lwdiv@divisor+1,w,c
  1693  00248C  B4D8               	btfsc	status,2,c
  1694  00248E  D021               	goto	l1179
  1695                           
  1696                           ; BSR set to: 0
  1697  002490  0E01               	movlw	1
  1698  002492  0100               	movlb	0	; () banked
  1699  002494  6FAB               	movwf	___lwdiv@counter& (0+255),b
  1700  002496  D005               	goto	l4788
  1701  002498                     l4786:
  1702                           
  1703                           ; BSR set to: 0
  1704  002498  90D8               	bcf	status,0,c
  1705  00249A  3621               	rlcf	___lwdiv@divisor,f,c
  1706  00249C  3622               	rlcf	___lwdiv@divisor+1,f,c
  1707  00249E  0100               	movlb	0	; () banked
  1708  0024A0  2BAB               	incf	___lwdiv@counter& (0+255),f,b
  1709  0024A2                     l4788:
  1710                           
  1711                           ; BSR set to: 0
  1712  0024A2  AE22               	btfss	___lwdiv@divisor+1,7,c
  1713  0024A4  D7F9               	goto	l4786
  1714  0024A6                     l4790:
  1715                           
  1716                           ; BSR set to: 0
  1717  0024A6  0100               	movlb	0	; () banked
  1718  0024A8  90D8               	bcf	status,0,c
  1719  0024AA  37AC               	rlcf	___lwdiv@quotient& (0+255),f,b
  1720  0024AC  37AD               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1721                           
  1722                           ; BSR set to: 0
  1723  0024AE  5021               	movf	___lwdiv@divisor,w,c
  1724  0024B0  5C1F               	subwf	___lwdiv@dividend,w,c
  1725  0024B2  5022               	movf	___lwdiv@divisor+1,w,c
  1726  0024B4  5820               	subwfb	___lwdiv@dividend+1,w,c
  1727  0024B6  A0D8               	btfss	status,0,c
  1728  0024B8  D006               	goto	l4798
  1729                           
  1730                           ; BSR set to: 0
  1731  0024BA  5021               	movf	___lwdiv@divisor,w,c
  1732  0024BC  5E1F               	subwf	___lwdiv@dividend,f,c
  1733  0024BE  5022               	movf	___lwdiv@divisor+1,w,c
  1734  0024C0  5A20               	subwfb	___lwdiv@dividend+1,f,c
  1735                           
  1736                           ; BSR set to: 0
  1737  0024C2  0100               	movlb	0	; () banked
  1738  0024C4  81AC               	bsf	___lwdiv@quotient& (0+255),0,b
  1739  0024C6                     l4798:
  1740                           
  1741                           ; BSR set to: 0
  1742  0024C6  90D8               	bcf	status,0,c
  1743  0024C8  3222               	rrcf	___lwdiv@divisor+1,f,c
  1744  0024CA  3221               	rrcf	___lwdiv@divisor,f,c
  1745                           
  1746                           ; BSR set to: 0
  1747  0024CC  0100               	movlb	0	; () banked
  1748  0024CE  2FAB               	decfsz	___lwdiv@counter& (0+255),f,b
  1749  0024D0  D7EA               	goto	l4790
  1750  0024D2                     l1179:
  1751                           
  1752                           ; BSR set to: 0
  1753  0024D2  C0AC  F01F         	movff	___lwdiv@quotient,?___lwdiv
  1754  0024D6  C0AD  F020         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1755                           
  1756                           ; BSR set to: 0
  1757  0024DA  0012               	return		;funcret
  1758  0024DC                     __end_of___lwdiv:
  1759                           	opt stack 0
  1760                           tblptru	equ	0xFF8
  1761                           tblptrh	equ	0xFF7
  1762                           tblptrl	equ	0xFF6
  1763                           tablat	equ	0xFF5
  1764                           postinc0	equ	0xFEE
  1765                           wreg	equ	0xFE8
  1766                           postdec1	equ	0xFE5
  1767                           fsr1l	equ	0xFE1
  1768                           status	equ	0xFD8
  1769                           
  1770 ;; *************** function _SetDCEPWM1 *****************
  1771 ;; Defined at:
  1772 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;  dutycycle       2   30[COMRAM] unsigned int 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  DCycle          2    0[BANK0 ] struct PWMDC
  1777 ;; Return value:  Size  Location     Type
  1778 ;;		None               void
  1779 ;; Registers used:
  1780 ;;		wreg, status,2, status,0
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1786 ;;      Params:         2       0       0       0
  1787 ;;      Locals:         0       2       0       0
  1788 ;;      Temps:          2       0       0       0
  1789 ;;      Totals:         4       2       0       0
  1790 ;;Total ram usage:        6 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    2
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_rampe
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text5
  1801  0025B4                     __ptext5:
  1802                           	opt stack 0
  1803  0025B4                     _SetDCEPWM1:
  1804                           	opt stack 27
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;incstack = 0
  1808  0025B4  C01F  F021         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  1809  0025B8  C020  F022         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  1810  0025BC  0E06               	movlw	6
  1811  0025BE                     u6025:
  1812  0025BE  90D8               	bcf	status,0,c
  1813  0025C0  3621               	rlcf	??_SetDCEPWM1,f,c
  1814  0025C2  3622               	rlcf	??_SetDCEPWM1+1,f,c
  1815  0025C4  2EE8               	decfsz	wreg,f,c
  1816  0025C6  D7FB               	goto	u6025
  1817  0025C8  C021  F0AB         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  1818  0025CC  C022  F0AC         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  1819  0025D0  C0AC  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  1820  0025D4  C0AB  F021         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  1821  0025D8  90D8               	bcf	status,0,c
  1822  0025DA  3221               	rrcf	??_SetDCEPWM1,f,c
  1823  0025DC  90D8               	bcf	status,0,c
  1824  0025DE  3221               	rrcf	??_SetDCEPWM1,f,c
  1825  0025E0  0E30               	movlw	48
  1826  0025E2  1621               	andwf	??_SetDCEPWM1,f,c
  1827  0025E4  50BA               	movf	4026,w,c	;volatile
  1828  0025E6  0BCF               	andlw	207
  1829  0025E8  1021               	iorwf	??_SetDCEPWM1,w,c
  1830  0025EA  6EBA               	movwf	4026,c	;volatile
  1831  0025EC  0012               	return		;funcret
  1832  0025EE                     __end_of_SetDCEPWM1:
  1833                           	opt stack 0
  1834                           tblptru	equ	0xFF8
  1835                           tblptrh	equ	0xFF7
  1836                           tblptrl	equ	0xFF6
  1837                           tablat	equ	0xFF5
  1838                           postinc0	equ	0xFEE
  1839                           wreg	equ	0xFE8
  1840                           postdec1	equ	0xFE5
  1841                           fsr1l	equ	0xFE1
  1842                           status	equ	0xFD8
  1843                           
  1844 ;; *************** function _configurazione_iniziale *****************
  1845 ;; Defined at:
  1846 ;;		line 277 in file "motore.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;		None
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;		None               void
  1853 ;; Registers used:
  1854 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1860 ;;      Params:         0       0       0       0
  1861 ;;      Locals:         0       0       0       0
  1862 ;;      Temps:          0       0       0       0
  1863 ;;      Totals:         0       0       0       0
  1864 ;;Total ram usage:        0 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    4
  1867 ;; This function calls:
  1868 ;;		_CANInitialize
  1869 ;;		_SetOutputEPWM1
  1870 ;;		_delay_ms
  1871 ;; This function is called by:
  1872 ;;		_main
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text6
  1877  00233A                     __ptext6:
  1878                           	opt stack 0
  1879  00233A                     _configurazione_iniziale:
  1880                           	opt stack 26
  1881                           
  1882                           ;motore.c: 280: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1883                           
  1884                           ;incstack = 0
  1885  00233A  0E06               	movlw	6
  1886  00233C  0100               	movlb	0	; () banked
  1887  00233E  6FB4               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1888  002340  0E05               	movlw	5
  1889  002342  0100               	movlb	0	; () banked
  1890  002344  6FB5               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1891  002346  0E01               	movlw	1
  1892  002348  0100               	movlb	0	; () banked
  1893  00234A  6FB6               	movwf	CANInitialize@SJW& (0+255),b
  1894  00234C  0E03               	movlw	3
  1895  00234E  0100               	movlb	0	; () banked
  1896  002350  6FB7               	movwf	CANInitialize@BRP& (0+255),b
  1897  002352  0E9D               	movlw	157
  1898  002354  0100               	movlb	0	; () banked
  1899  002356  6FB8               	movwf	CANInitialize@flags& (0+255),b
  1900  002358  0E04               	movlw	4
  1901  00235A  ECFB  F00F         	call	_CANInitialize
  1902                           
  1903                           ;motore.c: 281: RCONbits.IPEN = 1;
  1904  00235E  8ED0               	bsf	4048,7,c	;volatile
  1905                           
  1906                           ;motore.c: 282: INTCONbits.INT0IF = 0;
  1907  002360  92F2               	bcf	intcon,1,c	;volatile
  1908                           
  1909                           ;motore.c: 283: PIR3bits.RXB1IF = 0;
  1910  002362  92A4               	bcf	4004,1,c	;volatile
  1911                           
  1912                           ;motore.c: 284: PIR3bits.RXB0IF = 0;
  1913  002364  90A4               	bcf	4004,0,c	;volatile
  1914                           
  1915                           ;motore.c: 286: IPR3bits.RXB1IP = 0;
  1916  002366  92A5               	bcf	4005,1,c	;volatile
  1917                           
  1918                           ;motore.c: 287: IPR3bits.RXB0IP = 0;
  1919  002368  90A5               	bcf	4005,0,c	;volatile
  1920                           
  1921                           ;motore.c: 288: INTCONbits.GIEH = 1;
  1922  00236A  8EF2               	bsf	intcon,7,c	;volatile
  1923                           
  1924                           ;motore.c: 289: INTCONbits.GIEL = 1;
  1925  00236C  8CF2               	bsf	intcon,6,c	;volatile
  1926                           
  1927                           ;motore.c: 292: T3CON = 0x01;
  1928  00236E  0E01               	movlw	1
  1929  002370  6EB1               	movwf	4017,c	;volatile
  1930                           
  1931                           ;motore.c: 293: PIR2bits.TMR3IF = 0;
  1932  002372  92A1               	bcf	4001,1,c	;volatile
  1933                           
  1934                           ;motore.c: 294: IPR2bits.TMR3IP = 0;
  1935  002374  92A2               	bcf	4002,1,c	;volatile
  1936                           
  1937                           ;motore.c: 295: TMR3H = 0x63;
  1938  002376  0E63               	movlw	99
  1939  002378  6EB3               	movwf	4019,c	;volatile
  1940                           
  1941                           ;motore.c: 296: TMR3L = 0xC0;
  1942  00237A  0EC0               	movlw	192
  1943  00237C  6EB2               	movwf	4018,c	;volatile
  1944                           
  1945                           ;motore.c: 301: ADCON0bits.ADON = 1;
  1946  00237E  80C2               	bsf	4034,0,c	;volatile
  1947                           
  1948                           ;motore.c: 302: ADCON0bits.CHS0 = 0;
  1949  002380  94C2               	bcf	4034,2,c	;volatile
  1950                           
  1951                           ;motore.c: 303: ADCON0bits.CHS1 = 0;
  1952  002382  96C2               	bcf	4034,3,c	;volatile
  1953                           
  1954                           ;motore.c: 304: ADCON0bits.CHS2 = 0;
  1955  002384  98C2               	bcf	4034,4,c	;volatile
  1956                           
  1957                           ;motore.c: 305: ADCON0bits.CHS3 = 0;
  1958  002386  9AC2               	bcf	4034,5,c	;volatile
  1959                           
  1960                           ;motore.c: 306: ADCON1bits.PCFG0 = 0;
  1961  002388  90C1               	bcf	4033,0,c	;volatile
  1962                           
  1963                           ;motore.c: 307: ADCON1bits.PCFG1 = 1;
  1964  00238A  82C1               	bsf	4033,1,c	;volatile
  1965                           
  1966                           ;motore.c: 308: ADCON1bits.PCFG2 = 1;
  1967  00238C  84C1               	bsf	4033,2,c	;volatile
  1968                           
  1969                           ;motore.c: 309: ADCON1bits.PCFG3 = 1;
  1970  00238E  86C1               	bsf	4033,3,c	;volatile
  1971                           
  1972                           ;motore.c: 310: ADCON1bits.VCFG0 = 0;
  1973  002390  98C1               	bcf	4033,4,c	;volatile
  1974                           
  1975                           ;motore.c: 311: ADCON1bits.VCFG1 = 0;
  1976  002392  9AC1               	bcf	4033,5,c	;volatile
  1977                           
  1978                           ;motore.c: 312: ADCON2bits.ADCS0 = 1;
  1979  002394  80C0               	bsf	4032,0,c	;volatile
  1980                           
  1981                           ;motore.c: 313: ADCON2bits.ADCS1 = 0;
  1982  002396  92C0               	bcf	4032,1,c	;volatile
  1983                           
  1984                           ;motore.c: 314: ADCON2bits.ADCS2 = 1;
  1985  002398  84C0               	bsf	4032,2,c	;volatile
  1986                           
  1987                           ;motore.c: 315: ADCON2bits.ACQT0 = 0;
  1988  00239A  96C0               	bcf	4032,3,c	;volatile
  1989                           
  1990                           ;motore.c: 316: ADCON2bits.ACQT1 = 1;
  1991  00239C  88C0               	bsf	4032,4,c	;volatile
  1992                           
  1993                           ;motore.c: 317: ADCON2bits.ACQT2 = 1;
  1994  00239E  8AC0               	bsf	4032,5,c	;volatile
  1995                           
  1996                           ;motore.c: 318: ADCON2bits.ADFM = 0;
  1997  0023A0  9EC0               	bcf	4032,7,c	;volatile
  1998                           
  1999                           ;motore.c: 321: PIE3bits.RXB1IE = 1;
  2000  0023A2  82A3               	bsf	4003,1,c	;volatile
  2001                           
  2002                           ;motore.c: 322: PIE3bits.RXB0IE = 1;
  2003  0023A4  80A3               	bsf	4003,0,c	;volatile
  2004                           
  2005                           ;motore.c: 323: PIE2bits.TMR3IE = 1;
  2006  0023A6  82A0               	bsf	4000,1,c	;volatile
  2007                           
  2008                           ;motore.c: 325: LATA = 0x00;
  2009  0023A8  0E00               	movlw	0
  2010  0023AA  6E89               	movwf	3977,c	;volatile
  2011                           
  2012                           ;motore.c: 326: TRISA = 0b01111101;
  2013  0023AC  0E7D               	movlw	125
  2014  0023AE  6E92               	movwf	3986,c	;volatile
  2015                           
  2016                           ;motore.c: 328: LATB = 0x00;
  2017  0023B0  0E00               	movlw	0
  2018  0023B2  6E8A               	movwf	3978,c	;volatile
  2019                           
  2020                           ;motore.c: 329: TRISB = 0b11111011;
  2021  0023B4  0EFB               	movlw	251
  2022  0023B6  6E93               	movwf	3987,c	;volatile
  2023                           
  2024                           ;motore.c: 331: LATC = 0x00;
  2025  0023B8  0E00               	movlw	0
  2026  0023BA  6E8B               	movwf	3979,c	;volatile
  2027                           
  2028                           ;motore.c: 332: TRISC = 0x00;
  2029  0023BC  0E00               	movlw	0
  2030  0023BE  6E94               	movwf	3988,c	;volatile
  2031                           
  2032                           ;motore.c: 334: LATD = 0x00;
  2033  0023C0  0E00               	movlw	0
  2034  0023C2  6E8C               	movwf	3980,c	;volatile
  2035                           
  2036                           ;motore.c: 335: TRISD = 0x00;
  2037  0023C4  0E00               	movlw	0
  2038  0023C6  6E95               	movwf	3989,c	;volatile
  2039                           
  2040                           ;motore.c: 337: LATE = 0x00;
  2041  0023C8  0E00               	movlw	0
  2042  0023CA  6E8D               	movwf	3981,c	;volatile
  2043                           
  2044                           ;motore.c: 338: TRISE = 0xFF;
  2045  0023CC  6896               	setf	3990,c	;volatile
  2046                           
  2047                           ;motore.c: 339: delay_ms(2);
  2048  0023CE  0E00               	movlw	0
  2049  0023D0  0100               	movlb	0	; () banked
  2050  0023D2  6FB5               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2051  0023D4  0E02               	movlw	2
  2052  0023D6  6FB4               	movwf	delay_ms@value_ms& (0+255),b
  2053  0023D8  ECF7  F012         	call	_delay_ms	;wreg free
  2054                           
  2055                           ;motore.c: 340: SetOutputEPWM1(0b01111111, 0b11111100);
  2056  0023DC  0EFC               	movlw	252
  2057  0023DE  6E1F               	movwf	SetOutputEPWM1@outputmode,c
  2058  0023E0  0E7F               	movlw	127
  2059  0023E2  ECB8  F012         	call	_SetOutputEPWM1
  2060  0023E6  0012               	return		;funcret
  2061  0023E8                     __end_of_configurazione_iniziale:
  2062                           	opt stack 0
  2063                           tblptru	equ	0xFF8
  2064                           tblptrh	equ	0xFF7
  2065                           tblptrl	equ	0xFF6
  2066                           tablat	equ	0xFF5
  2067                           intcon	equ	0xFF2
  2068                           postinc0	equ	0xFEE
  2069                           wreg	equ	0xFE8
  2070                           postdec1	equ	0xFE5
  2071                           fsr1l	equ	0xFE1
  2072                           status	equ	0xFD8
  2073                           
  2074 ;; *************** function _delay_ms *****************
  2075 ;; Defined at:
  2076 ;;		line 61 in file "delay.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  value_ms        2    9[BANK0 ] unsigned int 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;		None
  2081 ;; Return value:  Size  Location     Type
  2082 ;;		None               void
  2083 ;; Registers used:
  2084 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2090 ;;      Params:         0       2       0       0
  2091 ;;      Locals:         0       0       0       0
  2092 ;;      Temps:          0       0       0       0
  2093 ;;      Totals:         0       2       0       0
  2094 ;;Total ram usage:        2 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    3
  2097 ;; This function calls:
  2098 ;;		___wmul
  2099 ;; This function is called by:
  2100 ;;		_main
  2101 ;;		_configurazione_iniziale
  2102 ;;		_delay_s
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text7
  2107  0025EE                     __ptext7:
  2108                           	opt stack 0
  2109  0025EE                     _delay_ms:
  2110                           	opt stack 27
  2111                           
  2112                           ;delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  2113                           
  2114                           ;incstack = 0
  2115  0025EE  C040  F0AE         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  2116  0025F2  0100               	movlb	0	; () banked
  2117  0025F4  6BAF               	clrf	(___wmul@multiplier+1)& (0+255),b
  2118  0025F6  C0B4  F0B0         	movff	delay_ms@value_ms,___wmul@multiplicand
  2119  0025FA  C0B5  F0B1         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  2120  0025FE  EC14  F013         	call	___wmul	;wreg free
  2121  002602  C0AE  F084         	movff	?___wmul,_clock_counter_reference	;volatile
  2122  002606  C0AF  F085         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  2123                           
  2124                           ;delay.c: 75: while (clock_counter_reference) {
  2125  00260A  D007               	goto	l573
  2126  00260C                     l4728:
  2127                           
  2128                           ;delay.c: 85: _delay(240);
  2129  00260C  0E50               	movlw	80
  2130  00260E                     u6407:
  2131  00260E  2EE8               	decfsz	wreg,f,c
  2132  002610  D7FE               	goto	u6407
  2133                           
  2134                           ;delay.c: 88: clock_counter_reference--;
  2135  002612  0100               	movlb	0	; () banked
  2136  002614  0784               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  2137  002616  A0D8               	btfss	status,0,c
  2138  002618  0785               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  2139  00261A                     l573:
  2140  00261A  0100               	movlb	0	; () banked
  2141  00261C  5184               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  2142  00261E  0100               	movlb	0	; () banked
  2143  002620  1185               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  2144  002622  B4D8               	btfsc	status,2,c
  2145  002624  0012               	return	
  2146  002626  D7F2               	goto	l4728
  2147  002628                     __end_of_delay_ms:
  2148                           	opt stack 0
  2149                           tblptru	equ	0xFF8
  2150                           tblptrh	equ	0xFF7
  2151                           tblptrl	equ	0xFF6
  2152                           tablat	equ	0xFF5
  2153                           intcon	equ	0xFF2
  2154                           postinc0	equ	0xFEE
  2155                           wreg	equ	0xFE8
  2156                           postdec1	equ	0xFE5
  2157                           fsr1l	equ	0xFE1
  2158                           status	equ	0xFD8
  2159                           
  2160 ;; *************** function _SetOutputEPWM1 *****************
  2161 ;; Defined at:
  2162 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  outputconfig    1    wreg     unsigned char 
  2165 ;;  outputmode      1   30[COMRAM] unsigned char 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  outputconfig    1   31[COMRAM] unsigned char 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;		None               void
  2170 ;; Registers used:
  2171 ;;		wreg, status,2, status,0
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2177 ;;      Params:         1       0       0       0
  2178 ;;      Locals:         1       0       0       0
  2179 ;;      Temps:          0       0       0       0
  2180 ;;      Totals:         2       0       0       0
  2181 ;;Total ram usage:        2 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    2
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		_main
  2188 ;;		_rampe
  2189 ;;		_configurazione_iniziale
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text8
  2194  002570                     __ptext8:
  2195                           	opt stack 0
  2196  002570                     _SetOutputEPWM1:
  2197                           	opt stack 27
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;incstack = 0
  2201                           ;SetOutputEPWM1@outputconfig stored from wreg
  2202  002570  6E20               	movwf	SetOutputEPWM1@outputconfig,c
  2203  002572  50BA               	movf	4026,w,c	;volatile
  2204  002574  09C0               	iorlw	192
  2205  002576  1420               	andwf	SetOutputEPWM1@outputconfig,w,c
  2206  002578  6EBA               	movwf	4026,c	;volatile
  2207  00257A  50BA               	movf	4026,w,c	;volatile
  2208  00257C  090F               	iorlw	15
  2209  00257E  141F               	andwf	SetOutputEPWM1@outputmode,w,c
  2210  002580  6EBA               	movwf	4026,c	;volatile
  2211  002582  0E3F               	movlw	63
  2212  002584  1820               	xorwf	SetOutputEPWM1@outputconfig,w,c
  2213  002586  A4D8               	btfss	status,2,c
  2214  002588  D002               	goto	l3446
  2215  00258A  9895               	bcf	3989,4,c	;volatile
  2216  00258C  0012               	return	
  2217  00258E                     l3446:
  2218  00258E  0EBF               	movlw	191
  2219  002590  1820               	xorwf	SetOutputEPWM1@outputconfig,w,c
  2220  002592  A4D8               	btfss	status,2,c
  2221  002594  D003               	goto	l3450
  2222  002596  9895               	bcf	3989,4,c	;volatile
  2223  002598  9A95               	bcf	3989,5,c	;volatile
  2224  00259A  0012               	return	
  2225  00259C                     l3450:
  2226  00259C  0E7F               	movlw	127
  2227  00259E  1820               	xorwf	SetOutputEPWM1@outputconfig,w,c
  2228  0025A0  B4D8               	btfsc	status,2,c
  2229  0025A2  D003               	goto	l756
  2230  0025A4  2820               	incf	SetOutputEPWM1@outputconfig,w,c
  2231  0025A6  A4D8               	btfss	status,2,c
  2232  0025A8  0012               	return	
  2233  0025AA                     l756:
  2234  0025AA  9895               	bcf	3989,4,c	;volatile
  2235  0025AC  9A95               	bcf	3989,5,c	;volatile
  2236  0025AE  9C95               	bcf	3989,6,c	;volatile
  2237  0025B0  9E95               	bcf	3989,7,c	;volatile
  2238  0025B2  0012               	return	
  2239  0025B4                     __end_of_SetOutputEPWM1:
  2240                           	opt stack 0
  2241                           tblptru	equ	0xFF8
  2242                           tblptrh	equ	0xFF7
  2243                           tblptrl	equ	0xFF6
  2244                           tablat	equ	0xFF5
  2245                           intcon	equ	0xFF2
  2246                           postinc0	equ	0xFEE
  2247                           wreg	equ	0xFE8
  2248                           postdec1	equ	0xFE5
  2249                           fsr1l	equ	0xFE1
  2250                           status	equ	0xFD8
  2251                           
  2252 ;; *************** function _CANInitialize *****************
  2253 ;; Defined at:
  2254 ;;		line 218 in file "CANlib.h"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  propSeg         1    wreg     unsigned char 
  2257 ;;  phaseSeg1       1    9[BANK0 ] unsigned char 
  2258 ;;  phaseSeg2       1   10[BANK0 ] unsigned char 
  2259 ;;  SJW             1   11[BANK0 ] unsigned char 
  2260 ;;  BRP             1   12[BANK0 ] unsigned char 
  2261 ;;  flags           1   13[BANK0 ] enum E16844
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  propSeg         1   18[BANK0 ] unsigned char 
  2264 ;;  FilterConfig    1   20[BANK0 ] unsigned char 
  2265 ;;  FilterConfig    1   19[BANK0 ] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;		None               void
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2275 ;;      Params:         0       5       0       0
  2276 ;;      Locals:         0       3       0       0
  2277 ;;      Temps:          0       4       0       0
  2278 ;;      Totals:         0      12       0       0
  2279 ;;Total ram usage:       12 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    3
  2282 ;; This function calls:
  2283 ;;		_CANOperationMode
  2284 ;;		_CANSetFilter
  2285 ;;		_CANSetMask
  2286 ;; This function is called by:
  2287 ;;		_configurazione_iniziale
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text9
  2292  001FF6                     __ptext9:
  2293                           	opt stack 0
  2294  001FF6                     _CANInitialize:
  2295                           	opt stack 26
  2296                           
  2297                           ;incstack = 0
  2298                           ;CANInitialize@propSeg stored from wreg
  2299  001FF6  0100               	movlb	0	; () banked
  2300  001FF8  6FBD               	movwf	CANInitialize@propSeg& (0+255),b
  2301                           
  2302                           ;CANlib.h: 220: BYTE FilterConfig1;
  2303                           ;CANlib.h: 221: BYTE FilterConfig2;
  2304                           ;CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2305  001FFA  0E80               	movlw	128
  2306  001FFC  EC6B  F013         	call	_CANOperationMode
  2307                           
  2308                           ;CANlib.h: 225: BRGCON1 = 0x00;
  2309  002000  0E00               	movlw	0
  2310  002002  6E70               	movwf	3952,c	;volatile
  2311                           
  2312                           ;CANlib.h: 226: BRGCON2 = 0x00;
  2313  002004  0E00               	movlw	0
  2314  002006  6E71               	movwf	3953,c	;volatile
  2315                           
  2316                           ;CANlib.h: 227: BRGCON3 = 0x00;
  2317  002008  0E00               	movlw	0
  2318  00200A  6E72               	movwf	3954,c	;volatile
  2319                           
  2320                           ;CANlib.h: 229: SJW= SJW << 6;
  2321  00200C  0100               	movlb	0	; () banked
  2322  00200E  41B6               	rrncf	CANInitialize@SJW& (0+255),w,b
  2323  002010  42E8               	rrncf	wreg,f,c
  2324  002012  0BC0               	andlw	192
  2325  002014  0100               	movlb	0	; () banked
  2326  002016  6FB6               	movwf	CANInitialize@SJW& (0+255),b
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;CANlib.h: 230: BRGCON1 |= SJW;
  2330  002018  0100               	movlb	0	; () banked
  2331  00201A  51B6               	movf	CANInitialize@SJW& (0+255),w,b
  2332  00201C  1270               	iorwf	3952,f,c	;volatile
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;CANlib.h: 231: BRGCON1 |= BRP;
  2336  00201E  0100               	movlb	0	; () banked
  2337  002020  51B7               	movf	CANInitialize@BRP& (0+255),w,b
  2338  002022  1270               	iorwf	3952,f,c	;volatile
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;CANlib.h: 233: BRGCON2 |= propSeg;
  2342  002024  0100               	movlb	0	; () banked
  2343  002026  51BD               	movf	CANInitialize@propSeg& (0+255),w,b
  2344  002028  1271               	iorwf	3953,f,c	;volatile
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2348  00202A  0100               	movlb	0	; () banked
  2349  00202C  39B4               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2350  00202E  42E8               	rrncf	wreg,f,c
  2351  002030  0BF8               	andlw	248
  2352  002032  0100               	movlb	0	; () banked
  2353  002034  6FB4               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2357  002036  0100               	movlb	0	; () banked
  2358  002038  51B4               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2359  00203A  1271               	iorwf	3953,f,c	;volatile
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2363  00203C  0100               	movlb	0	; () banked
  2364  00203E  A5B8               	btfss	CANInitialize@flags& (0+255),2,b
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;CANlib.h: 238: BRGCON2bits.SAM= 1;
  2368  002040  8C71               	bsf	3953,6,c	;volatile
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2372  002042  0100               	movlb	0	; () banked
  2373  002044  B1B8               	btfsc	CANInitialize@flags& (0+255),0,b
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2377  002046  8E71               	bsf	3953,7,c	;volatile
  2378                           
  2379                           ; BSR set to: 0
  2380                           ;CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2381                           
  2382                           ; BSR set to: 0
  2383  002048  0100               	movlb	0	; () banked
  2384  00204A  51B5               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2385  00204C  1272               	iorwf	3954,f,c	;volatile
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2389  00204E  0100               	movlb	0	; () banked
  2390  002050  B3B8               	btfsc	CANInitialize@flags& (0+255),1,b
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2394  002052  8C72               	bsf	3954,6,c	;volatile
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2398                           
  2399                           ; BSR set to: 0
  2400  002054  0100               	movlb	0	; () banked
  2401  002056  51B8               	movf	CANInitialize@flags& (0+255),w,b
  2402  002058  0B60               	andlw	96
  2403  00205A  6E60               	movwf	3936,c	;volatile
  2404                           
  2405                           ;CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON )
  2406  00205C  0100               	movlb	0	; () banked
  2407  00205E  51B8               	movf	CANInitialize@flags& (0+255),w,b
  2408  002060  0B10               	andlw	16
  2409  002062  0AFF               	xorlw	255
  2410  002064  B4D8               	btfsc	status,2,c
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2414  002066  8460               	bsf	3936,2,c	;volatile
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;CANlib.h: 255: RXB1CON = RXB0CON;
  2418  002068  CF60 FF50          	movff	3936,3920	;volatile
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2422  00206C  0E00               	movlw	0
  2423  00206E  6E1F               	movwf	CANSetMask@mask,c
  2424  002070  0E00               	movlw	0
  2425  002072  6E20               	movwf	CANSetMask@mask+1,c
  2426  002074  0E00               	movlw	0
  2427  002076  6E21               	movwf	CANSetMask@mask+2,c
  2428  002078  0E00               	movlw	0
  2429  00207A  6E22               	movwf	CANSetMask@mask+3,c
  2430  00207C  0EF7               	movlw	247
  2431  00207E  6E23               	movwf	CANSetMask@type,c
  2432  002080  0E01               	movlw	1
  2433  002082  EC00  F00C         	call	_CANSetMask
  2434                           
  2435                           ;CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2436  002086  0E00               	movlw	0
  2437  002088  6E1F               	movwf	CANSetMask@mask,c
  2438  00208A  0E00               	movlw	0
  2439  00208C  6E20               	movwf	CANSetMask@mask+1,c
  2440  00208E  0E00               	movlw	0
  2441  002090  6E21               	movwf	CANSetMask@mask+2,c
  2442  002092  0E00               	movlw	0
  2443  002094  6E22               	movwf	CANSetMask@mask+3,c
  2444  002096  0EF7               	movlw	247
  2445  002098  6E23               	movwf	CANSetMask@type,c
  2446  00209A  0E02               	movlw	2
  2447  00209C  EC00  F00C         	call	_CANSetMask
  2448                           
  2449                           ;CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2450  0020A0  D00F               	goto	l4488
  2451  0020A2                     l4482:
  2452                           
  2453                           ;CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2454  0020A2  0EF7               	movlw	247
  2455  0020A4  0100               	movlb	0	; () banked
  2456  0020A6  6FBE               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2457  0020A8  D007               	goto	l4484
  2458  0020AA                     l362:
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2462  0020AA  0100               	movlb	0	; () banked
  2463  0020AC  69BE               	setf	CANInitialize@FilterConfig1& (0+255),b
  2464                           
  2465                           ;CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2466  0020AE  0100               	movlb	0	; () banked
  2467  0020B0  69BF               	setf	CANInitialize@FilterConfig2& (0+255),b
  2468                           
  2469                           ;CANlib.h: 273: break;
  2470  0020B2  D028               	goto	l4490
  2471  0020B4                     l363:
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2475  0020B4  0100               	movlb	0	; () banked
  2476  0020B6  69BE               	setf	CANInitialize@FilterConfig1& (0+255),b
  2477  0020B8                     l4484:
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2481  0020B8  0EF7               	movlw	247
  2482  0020BA  0100               	movlb	0	; () banked
  2483  0020BC  6FBF               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;CANlib.h: 278: }
  2487                           
  2488                           ;CANlib.h: 277: break;
  2489  0020BE  D022               	goto	l4490
  2490  0020C0                     l4488:
  2491  0020C0  0E9F               	movlw	159
  2492  0020C2  0100               	movlb	0	; () banked
  2493  0020C4  6FB9               	movwf	??_CANInitialize& (0+255),b
  2494  0020C6  0EFF               	movlw	255
  2495  0020C8  0100               	movlb	0	; () banked
  2496  0020CA  6FBA               	movwf	(??_CANInitialize+1)& (0+255),b
  2497  0020CC  0100               	movlb	0	; () banked
  2498  0020CE  51B8               	movf	CANInitialize@flags& (0+255),w,b
  2499  0020D0  0B60               	andlw	96
  2500  0020D2  0100               	movlb	0	; () banked
  2501  0020D4  6FBB               	movwf	(??_CANInitialize+2)& (0+255),b
  2502  0020D6  6BBC               	clrf	(??_CANInitialize+3)& (0+255),b
  2503  0020D8  0100               	movlb	0	; () banked
  2504  0020DA  51B9               	movf	??_CANInitialize& (0+255),w,b
  2505  0020DC  0100               	movlb	0	; () banked
  2506  0020DE  13BB               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2507  0020E0  0100               	movlb	0	; () banked
  2508  0020E2  51BA               	movf	(??_CANInitialize+1)& (0+255),w,b
  2509  0020E4  0100               	movlb	0	; () banked
  2510  0020E6  13BC               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2511                           
  2512                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2513                           ; Switch size 1, requested type "space"
  2514                           ; Number of cases is 1, Range of values is 0 to 0
  2515                           ; switch strategies available:
  2516                           ; Name         Instructions Cycles
  2517                           ; simple_byte            4     3 (average)
  2518                           ;	Chosen strategy is simple_byte
  2519  0020E8  0100               	movlb	0	; () banked
  2520  0020EA  51BC               	movf	(??_CANInitialize+3)& (0+255),w,b
  2521  0020EC  0A00               	xorlw	0	; case 0
  2522  0020EE  A4D8               	btfss	status,2,c
  2523  0020F0  D7E1               	goto	l363
  2524                           
  2525                           ; BSR set to: 0
  2526                           ; Switch size 1, requested type "space"
  2527                           ; Number of cases is 2, Range of values is 191 to 223
  2528                           ; switch strategies available:
  2529                           ; Name         Instructions Cycles
  2530                           ; simple_byte            7     4 (average)
  2531                           ;	Chosen strategy is simple_byte
  2532  0020F2  0100               	movlb	0	; () banked
  2533  0020F4  51BB               	movf	(??_CANInitialize+2)& (0+255),w,b
  2534  0020F6  0ABF               	xorlw	191	; case 191
  2535  0020F8  B4D8               	btfsc	status,2,c
  2536  0020FA  D7D7               	goto	l362
  2537  0020FC  0A60               	xorlw	96	; case 223
  2538  0020FE  B4D8               	btfsc	status,2,c
  2539  002100  D7D0               	goto	l4482
  2540  002102  D7D8               	goto	l363
  2541  002104                     l4490:
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2545  002104  0E00               	movlw	0
  2546  002106  6E1F               	movwf	CANSetFilter@filter,c
  2547  002108  0E00               	movlw	0
  2548  00210A  6E20               	movwf	CANSetFilter@filter+1,c
  2549  00210C  0E00               	movlw	0
  2550  00210E  6E21               	movwf	CANSetFilter@filter+2,c
  2551  002110  0E00               	movlw	0
  2552  002112  6E22               	movwf	CANSetFilter@filter+3,c
  2553  002114  C0BE  F023         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2554  002118  0E00               	movlw	0
  2555  00211A  EC9D  F000         	call	_CANSetFilter
  2556                           
  2557                           ;CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2558  00211E  0E00               	movlw	0
  2559  002120  6E1F               	movwf	CANSetFilter@filter,c
  2560  002122  0E00               	movlw	0
  2561  002124  6E20               	movwf	CANSetFilter@filter+1,c
  2562  002126  0E00               	movlw	0
  2563  002128  6E21               	movwf	CANSetFilter@filter+2,c
  2564  00212A  0E00               	movlw	0
  2565  00212C  6E22               	movwf	CANSetFilter@filter+3,c
  2566  00212E  C0BE  F023         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2567  002132  0E01               	movlw	1
  2568  002134  EC9D  F000         	call	_CANSetFilter
  2569                           
  2570                           ;CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2571  002138  0E00               	movlw	0
  2572  00213A  6E1F               	movwf	CANSetFilter@filter,c
  2573  00213C  0E00               	movlw	0
  2574  00213E  6E20               	movwf	CANSetFilter@filter+1,c
  2575  002140  0E00               	movlw	0
  2576  002142  6E21               	movwf	CANSetFilter@filter+2,c
  2577  002144  0E00               	movlw	0
  2578  002146  6E22               	movwf	CANSetFilter@filter+3,c
  2579  002148  C0BF  F023         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2580  00214C  0E02               	movlw	2
  2581  00214E  EC9D  F000         	call	_CANSetFilter
  2582                           
  2583                           ;CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2584  002152  0E00               	movlw	0
  2585  002154  6E1F               	movwf	CANSetFilter@filter,c
  2586  002156  0E00               	movlw	0
  2587  002158  6E20               	movwf	CANSetFilter@filter+1,c
  2588  00215A  0E00               	movlw	0
  2589  00215C  6E21               	movwf	CANSetFilter@filter+2,c
  2590  00215E  0E00               	movlw	0
  2591  002160  6E22               	movwf	CANSetFilter@filter+3,c
  2592  002162  C0BF  F023         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2593  002166  0E03               	movlw	3
  2594  002168  EC9D  F000         	call	_CANSetFilter
  2595                           
  2596                           ;CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2597  00216C  0E00               	movlw	0
  2598  00216E  6E1F               	movwf	CANSetFilter@filter,c
  2599  002170  0E00               	movlw	0
  2600  002172  6E20               	movwf	CANSetFilter@filter+1,c
  2601  002174  0E00               	movlw	0
  2602  002176  6E21               	movwf	CANSetFilter@filter+2,c
  2603  002178  0E00               	movlw	0
  2604  00217A  6E22               	movwf	CANSetFilter@filter+3,c
  2605  00217C  C0BF  F023         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2606  002180  0E04               	movlw	4
  2607  002182  EC9D  F000         	call	_CANSetFilter
  2608                           
  2609                           ;CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2610  002186  0E00               	movlw	0
  2611  002188  6E1F               	movwf	CANSetFilter@filter,c
  2612  00218A  0E00               	movlw	0
  2613  00218C  6E20               	movwf	CANSetFilter@filter+1,c
  2614  00218E  0E00               	movlw	0
  2615  002190  6E21               	movwf	CANSetFilter@filter+2,c
  2616  002192  0E00               	movlw	0
  2617  002194  6E22               	movwf	CANSetFilter@filter+3,c
  2618  002196  C0BF  F023         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2619  00219A  0E05               	movlw	5
  2620  00219C  EC9D  F000         	call	_CANSetFilter
  2621                           
  2622                           ;CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2623  0021A0  0E00               	movlw	0
  2624  0021A2  EC6B  F013         	call	_CANOperationMode
  2625  0021A6  0012               	return		;funcret
  2626  0021A8                     __end_of_CANInitialize:
  2627                           	opt stack 0
  2628                           tblptru	equ	0xFF8
  2629                           tblptrh	equ	0xFF7
  2630                           tblptrl	equ	0xFF6
  2631                           tablat	equ	0xFF5
  2632                           intcon	equ	0xFF2
  2633                           postinc0	equ	0xFEE
  2634                           wreg	equ	0xFE8
  2635                           postdec1	equ	0xFE5
  2636                           fsr1l	equ	0xFE1
  2637                           status	equ	0xFD8
  2638                           
  2639 ;; *************** function _CANSetMask *****************
  2640 ;; Defined at:
  2641 ;;		line 640 in file "CANlib.h"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  numBuffer       1    wreg     enum E16878
  2644 ;;  mask            4   30[COMRAM] unsigned long 
  2645 ;;  type            1   34[COMRAM] enum E16844
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  numBuffer       1    4[BANK0 ] enum E16878
  2648 ;;  tamp            4    5[BANK0 ] unsigned long 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;		None               void
  2651 ;; Registers used:
  2652 ;;		wreg, status,2, status,0
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2658 ;;      Params:         5       0       0       0
  2659 ;;      Locals:         0       5       0       0
  2660 ;;      Temps:          0       4       0       0
  2661 ;;      Totals:         5       9       0       0
  2662 ;;Total ram usage:       14 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    2
  2665 ;; This function calls:
  2666 ;;		Nothing
  2667 ;; This function is called by:
  2668 ;;		_CANInitialize
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text10
  2673  001800                     __ptext10:
  2674                           	opt stack 0
  2675  001800                     _CANSetMask:
  2676                           	opt stack 26
  2677                           
  2678                           ;incstack = 0
  2679                           ;CANSetMask@numBuffer stored from wreg
  2680  001800  0100               	movlb	0	; () banked
  2681  001802  6FAF               	movwf	CANSetMask@numBuffer& (0+255),b
  2682                           
  2683                           ;CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2684  001804  0100               	movlb	0	; () banked
  2685  001806  05AF               	decf	CANSetMask@numBuffer& (0+255),w,b
  2686  001808  A4D8               	btfss	status,2,c
  2687  00180A  D051               	goto	l4046
  2688                           
  2689                           ; BSR set to: 0
  2690  00180C  2823               	incf	CANSetMask@type,w,c
  2691  00180E  A4D8               	btfss	status,2,c
  2692  001810  D04E               	goto	l4046
  2693                           
  2694                           ; BSR set to: 0
  2695                           ;CANlib.h: 644: {
  2696                           ;CANlib.h: 645: tamp = (mask >> 3);
  2697  001812  C01F  F0AB         	movff	CANSetMask@mask,??_CANSetMask
  2698  001816  C020  F0AC         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2699  00181A  C021  F0AD         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2700  00181E  C022  F0AE         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2701  001822  0E04               	movlw	4
  2702  001824  D006               	goto	u4640
  2703  001826                     u4645:
  2704  001826  0100               	movlb	0	; () banked
  2705  001828  90D8               	bcf	status,0,c
  2706  00182A  33AE               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2707  00182C  33AD               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2708  00182E  33AC               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2709  001830  33AB               	rrcf	??_CANSetMask& (0+255),f,b
  2710  001832                     u4640:
  2711  001832  2EE8               	decfsz	wreg,f,c
  2712  001834  D7F8               	goto	u4645
  2713  001836  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  2714  00183A  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2715  00183E  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2716  001842  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;CANlib.h: 646: tamp = tamp & 0x000000FF;
  2720  001846  0100               	movlb	0	; () banked
  2721  001848  51B0               	movf	CANSetMask@tamp& (0+255),w,b
  2722  00184A  0100               	movlb	0	; () banked
  2723  00184C  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  2724  00184E  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2725  001850  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2726  001852  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  2730  001854  C0B0  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;CANlib.h: 649: tamp = mask & 0x00000007;
  2734  001858  0E07               	movlw	7
  2735  00185A  141F               	andwf	CANSetMask@mask,w,c
  2736  00185C  0100               	movlb	0	; () banked
  2737  00185E  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  2738  001860  0E00               	movlw	0
  2739  001862  1420               	andwf	CANSetMask@mask+1,w,c
  2740  001864  0100               	movlb	0	; () banked
  2741  001866  6FB1               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2742  001868  0E00               	movlw	0
  2743  00186A  1421               	andwf	CANSetMask@mask+2,w,c
  2744  00186C  0100               	movlb	0	; () banked
  2745  00186E  6FB2               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2746  001870  0E00               	movlw	0
  2747  001872  1422               	andwf	CANSetMask@mask+3,w,c
  2748  001874  0100               	movlb	0	; () banked
  2749  001876  6FB3               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;CANlib.h: 650: tamp = tamp << 5;
  2753  001878  C0B0  F0AB         	movff	CANSetMask@tamp,??_CANSetMask
  2754  00187C  C0B1  F0AC         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2755  001880  C0B2  F0AD         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2756  001884  C0B3  F0AE         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2757  001888  0E05               	movlw	5
  2758  00188A                     u4655:
  2759  00188A  90D8               	bcf	status,0,c
  2760  00188C  0100               	movlb	0	; () banked
  2761  00188E  37AB               	rlcf	??_CANSetMask& (0+255),f,b
  2762  001890  37AC               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2763  001892  37AD               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2764  001894  37AE               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2765  001896  2EE8               	decfsz	wreg,f,c
  2766  001898  D7F8               	goto	u4655
  2767  00189A  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  2768  00189E  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2769  0018A2  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2770  0018A6  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  2774  0018AA  C0B0  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2775  0018AE                     l4046:
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;CANlib.h: 652: }
  2779                           ;CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2780  0018AE  0E02               	movlw	2
  2781  0018B0  0100               	movlb	0	; () banked
  2782  0018B2  19AF               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2783  0018B4  A4D8               	btfss	status,2,c
  2784  0018B6  D051               	goto	l4062
  2785                           
  2786                           ; BSR set to: 0
  2787  0018B8  2823               	incf	CANSetMask@type,w,c
  2788  0018BA  A4D8               	btfss	status,2,c
  2789  0018BC  D04E               	goto	l4062
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;CANlib.h: 655: {
  2793                           ;CANlib.h: 656: tamp = (mask >> 3);
  2794  0018BE  C01F  F0AB         	movff	CANSetMask@mask,??_CANSetMask
  2795  0018C2  C020  F0AC         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2796  0018C6  C021  F0AD         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2797  0018CA  C022  F0AE         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2798  0018CE  0E04               	movlw	4
  2799  0018D0  D006               	goto	u4680
  2800  0018D2                     u4685:
  2801  0018D2  0100               	movlb	0	; () banked
  2802  0018D4  90D8               	bcf	status,0,c
  2803  0018D6  33AE               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2804  0018D8  33AD               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2805  0018DA  33AC               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2806  0018DC  33AB               	rrcf	??_CANSetMask& (0+255),f,b
  2807  0018DE                     u4680:
  2808  0018DE  2EE8               	decfsz	wreg,f,c
  2809  0018E0  D7F8               	goto	u4685
  2810  0018E2  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  2811  0018E6  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2812  0018EA  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2813  0018EE  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;CANlib.h: 657: tamp = tamp & 0x000000FF;
  2817  0018F2  0100               	movlb	0	; () banked
  2818  0018F4  51B0               	movf	CANSetMask@tamp& (0+255),w,b
  2819  0018F6  0100               	movlb	0	; () banked
  2820  0018F8  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  2821  0018FA  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2822  0018FC  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2823  0018FE  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  2827  001900  C0B0  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;CANlib.h: 660: tamp = mask & 0x00000007;
  2831  001904  0E07               	movlw	7
  2832  001906  141F               	andwf	CANSetMask@mask,w,c
  2833  001908  0100               	movlb	0	; () banked
  2834  00190A  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  2835  00190C  0E00               	movlw	0
  2836  00190E  1420               	andwf	CANSetMask@mask+1,w,c
  2837  001910  0100               	movlb	0	; () banked
  2838  001912  6FB1               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2839  001914  0E00               	movlw	0
  2840  001916  1421               	andwf	CANSetMask@mask+2,w,c
  2841  001918  0100               	movlb	0	; () banked
  2842  00191A  6FB2               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2843  00191C  0E00               	movlw	0
  2844  00191E  1422               	andwf	CANSetMask@mask+3,w,c
  2845  001920  0100               	movlb	0	; () banked
  2846  001922  6FB3               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;CANlib.h: 661: tamp = tamp << 5;
  2850  001924  C0B0  F0AB         	movff	CANSetMask@tamp,??_CANSetMask
  2851  001928  C0B1  F0AC         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2852  00192C  C0B2  F0AD         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2853  001930  C0B3  F0AE         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2854  001934  0E05               	movlw	5
  2855  001936                     u4695:
  2856  001936  90D8               	bcf	status,0,c
  2857  001938  0100               	movlb	0	; () banked
  2858  00193A  37AB               	rlcf	??_CANSetMask& (0+255),f,b
  2859  00193C  37AC               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2860  00193E  37AD               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2861  001940  37AE               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2862  001942  2EE8               	decfsz	wreg,f,c
  2863  001944  D7F8               	goto	u4695
  2864  001946  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  2865  00194A  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2866  00194E  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2867  001952  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  2871  001956  C0B0  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2872  00195A                     l4062:
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;CANlib.h: 663: }
  2876                           ;CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2877  00195A  0100               	movlb	0	; () banked
  2878  00195C  05AF               	decf	CANSetMask@numBuffer& (0+255),w,b
  2879  00195E  A4D8               	btfss	status,2,c
  2880  001960  D07C               	goto	l4094
  2881                           
  2882                           ; BSR set to: 0
  2883  001962  0EF7               	movlw	247
  2884  001964  1823               	xorwf	CANSetMask@type,w,c
  2885  001966  A4D8               	btfss	status,2,c
  2886  001968  D078               	goto	l4094
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;CANlib.h: 666: {
  2890                           ;CANlib.h: 667: tamp = mask & 0x000000FF;
  2891  00196A  501F               	movf	CANSetMask@mask,w,c
  2892  00196C  0100               	movlb	0	; () banked
  2893  00196E  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  2894  001970  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2895  001972  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2896  001974  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  2900  001976  C0B0  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;CANlib.h: 670: tamp = mask & 0x0000FF00;
  2904  00197A  0E00               	movlw	0
  2905  00197C  141F               	andwf	CANSetMask@mask,w,c
  2906  00197E  0100               	movlb	0	; () banked
  2907  001980  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  2908  001982  0EFF               	movlw	255
  2909  001984  1420               	andwf	CANSetMask@mask+1,w,c
  2910  001986  0100               	movlb	0	; () banked
  2911  001988  6FB1               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2912  00198A  0E00               	movlw	0
  2913  00198C  1421               	andwf	CANSetMask@mask+2,w,c
  2914  00198E  0100               	movlb	0	; () banked
  2915  001990  6FB2               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2916  001992  0E00               	movlw	0
  2917  001994  1422               	andwf	CANSetMask@mask+3,w,c
  2918  001996  0100               	movlb	0	; () banked
  2919  001998  6FB3               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;CANlib.h: 671: tamp = tamp >> 8;
  2923  00199A  C0B0  F0AB         	movff	CANSetMask@tamp,??_CANSetMask
  2924  00199E  C0B1  F0AC         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2925  0019A2  C0B2  F0AD         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2926  0019A6  C0B3  F0AE         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2927  0019AA  C0AC  F0AB         	movff	??_CANSetMask+1,??_CANSetMask
  2928  0019AE  C0AD  F0AC         	movff	??_CANSetMask+2,??_CANSetMask+1
  2929  0019B2  C0AE  F0AD         	movff	??_CANSetMask+3,??_CANSetMask+2
  2930  0019B6  0100               	movlb	0	; () banked
  2931  0019B8  6BAE               	clrf	(??_CANSetMask+3)& (0+255),b
  2932  0019BA  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  2933  0019BE  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2934  0019C2  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2935  0019C6  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  2939  0019CA  C0B0  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;CANlib.h: 674: if (mask & 0x00010000)
  2943  0019CE  A021               	btfss	CANSetMask@mask+2,0,c
  2944  0019D0  D003               	goto	l436
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  2948  0019D2  010F               	movlb	15	; () banked
  2949  0019D4  8119               	bsf	25,0,b	;volatile
  2950  0019D6  D002               	goto	l437
  2951  0019D8                     l436:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;CANlib.h: 676: else
  2955                           ;CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  2956  0019D8  010F               	movlb	15	; () banked
  2957  0019DA  9119               	bcf	25,0,b	;volatile
  2958  0019DC                     l437:
  2959                           
  2960                           ; BSR set to: 15
  2961                           ;CANlib.h: 679: if (mask & 0x00020000)
  2962  0019DC  A221               	btfss	CANSetMask@mask+2,1,c
  2963  0019DE  D003               	goto	l438
  2964                           
  2965                           ; BSR set to: 15
  2966                           ;CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  2967  0019E0  010F               	movlb	15	; () banked
  2968  0019E2  8319               	bsf	25,1,b	;volatile
  2969  0019E4  D002               	goto	l439
  2970  0019E6                     l438:
  2971                           
  2972                           ; BSR set to: 15
  2973                           ;CANlib.h: 681: else
  2974                           ;CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  2975  0019E6  010F               	movlb	15	; () banked
  2976  0019E8  9319               	bcf	25,1,b	;volatile
  2977  0019EA                     l439:
  2978                           
  2979                           ; BSR set to: 15
  2980                           ;CANlib.h: 684: if (mask & 0x00040000)
  2981  0019EA  A421               	btfss	CANSetMask@mask+2,2,c
  2982  0019EC  D003               	goto	l440
  2983                           
  2984                           ; BSR set to: 15
  2985                           ;CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  2986  0019EE  010F               	movlb	15	; () banked
  2987  0019F0  8B19               	bsf	25,5,b	;volatile
  2988  0019F2  D002               	goto	l441
  2989  0019F4                     l440:
  2990                           
  2991                           ; BSR set to: 15
  2992                           ;CANlib.h: 686: else
  2993                           ;CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  2994  0019F4  010F               	movlb	15	; () banked
  2995  0019F6  9B19               	bcf	25,5,b	;volatile
  2996  0019F8                     l441:
  2997                           
  2998                           ; BSR set to: 15
  2999                           ;CANlib.h: 689: if (mask & 0x00080000)
  3000  0019F8  A621               	btfss	CANSetMask@mask+2,3,c
  3001  0019FA  D003               	goto	l442
  3002                           
  3003                           ; BSR set to: 15
  3004                           ;CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  3005  0019FC  010F               	movlb	15	; () banked
  3006  0019FE  8D19               	bsf	25,6,b	;volatile
  3007  001A00  D002               	goto	l443
  3008  001A02                     l442:
  3009                           
  3010                           ; BSR set to: 15
  3011                           ;CANlib.h: 691: else
  3012                           ;CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  3013  001A02  010F               	movlb	15	; () banked
  3014  001A04  9D19               	bcf	25,6,b	;volatile
  3015  001A06                     l443:
  3016                           
  3017                           ; BSR set to: 15
  3018                           ;CANlib.h: 694: if (mask & 0x00100000)
  3019  001A06  A821               	btfss	CANSetMask@mask+2,4,c
  3020  001A08  D003               	goto	l444
  3021                           
  3022                           ; BSR set to: 15
  3023                           ;CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  3024  001A0A  010F               	movlb	15	; () banked
  3025  001A0C  8F19               	bsf	25,7,b	;volatile
  3026  001A0E  D002               	goto	l4088
  3027  001A10                     l444:
  3028                           
  3029                           ; BSR set to: 15
  3030                           ;CANlib.h: 696: else
  3031                           ;CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  3032  001A10  010F               	movlb	15	; () banked
  3033  001A12  9F19               	bcf	25,7,b	;volatile
  3034  001A14                     l4088:
  3035                           
  3036                           ; BSR set to: 15
  3037                           ;CANlib.h: 699: tamp = (mask >> 21);
  3038  001A14  C01F  F0AB         	movff	CANSetMask@mask,??_CANSetMask
  3039  001A18  C020  F0AC         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3040  001A1C  C021  F0AD         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3041  001A20  C022  F0AE         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3042  001A24  0E16               	movlw	22
  3043  001A26  D006               	goto	u4770
  3044  001A28                     u4775:
  3045  001A28  0100               	movlb	0	; () banked
  3046  001A2A  90D8               	bcf	status,0,c
  3047  001A2C  33AE               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3048  001A2E  33AD               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3049  001A30  33AC               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3050  001A32  33AB               	rrcf	??_CANSetMask& (0+255),f,b
  3051  001A34                     u4770:
  3052  001A34  2EE8               	decfsz	wreg,f,c
  3053  001A36  D7F8               	goto	u4775
  3054  001A38  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  3055  001A3C  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3056  001A40  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3057  001A44  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;CANlib.h: 700: tamp = tamp & 0x000000FF;
  3061  001A48  0100               	movlb	0	; () banked
  3062  001A4A  51B0               	movf	CANSetMask@tamp& (0+255),w,b
  3063  001A4C  0100               	movlb	0	; () banked
  3064  001A4E  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  3065  001A50  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3066  001A52  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3067  001A54  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  3071  001A56  C0B0  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3072  001A5A                     l4094:
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;CANlib.h: 702: }
  3076                           ;CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  3077  001A5A  0E02               	movlw	2
  3078  001A5C  0100               	movlb	0	; () banked
  3079  001A5E  19AF               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3080  001A60  A4D8               	btfss	status,2,c
  3081  001A62  0012               	return	
  3082                           
  3083                           ; BSR set to: 0
  3084  001A64  0EF7               	movlw	247
  3085  001A66  1823               	xorwf	CANSetMask@type,w,c
  3086  001A68  A4D8               	btfss	status,2,c
  3087  001A6A  0012               	return	
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;CANlib.h: 705: {
  3091                           ;CANlib.h: 706: tamp = mask & 0x000000FF;
  3092  001A6C  501F               	movf	CANSetMask@mask,w,c
  3093  001A6E  0100               	movlb	0	; () banked
  3094  001A70  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  3095  001A72  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3096  001A74  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3097  001A76  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  3101  001A78  C0B0  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;CANlib.h: 709: tamp = mask & 0x0000FF00;
  3105  001A7C  0E00               	movlw	0
  3106  001A7E  141F               	andwf	CANSetMask@mask,w,c
  3107  001A80  0100               	movlb	0	; () banked
  3108  001A82  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  3109  001A84  0EFF               	movlw	255
  3110  001A86  1420               	andwf	CANSetMask@mask+1,w,c
  3111  001A88  0100               	movlb	0	; () banked
  3112  001A8A  6FB1               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3113  001A8C  0E00               	movlw	0
  3114  001A8E  1421               	andwf	CANSetMask@mask+2,w,c
  3115  001A90  0100               	movlb	0	; () banked
  3116  001A92  6FB2               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3117  001A94  0E00               	movlw	0
  3118  001A96  1422               	andwf	CANSetMask@mask+3,w,c
  3119  001A98  0100               	movlb	0	; () banked
  3120  001A9A  6FB3               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;CANlib.h: 710: tamp = tamp >> 8;
  3124  001A9C  C0B0  F0AB         	movff	CANSetMask@tamp,??_CANSetMask
  3125  001AA0  C0B1  F0AC         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3126  001AA4  C0B2  F0AD         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3127  001AA8  C0B3  F0AE         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3128  001AAC  C0AC  F0AB         	movff	??_CANSetMask+1,??_CANSetMask
  3129  001AB0  C0AD  F0AC         	movff	??_CANSetMask+2,??_CANSetMask+1
  3130  001AB4  C0AE  F0AD         	movff	??_CANSetMask+3,??_CANSetMask+2
  3131  001AB8  0100               	movlb	0	; () banked
  3132  001ABA  6BAE               	clrf	(??_CANSetMask+3)& (0+255),b
  3133  001ABC  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  3134  001AC0  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3135  001AC4  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3136  001AC8  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  3140  001ACC  C0B0  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;CANlib.h: 713: if (mask & 0x00010000)
  3144  001AD0  A021               	btfss	CANSetMask@mask+2,0,c
  3145  001AD2  D003               	goto	l447
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  3149  001AD4  010F               	movlb	15	; () banked
  3150  001AD6  811D               	bsf	29,0,b	;volatile
  3151  001AD8  D002               	goto	l448
  3152  001ADA                     l447:
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;CANlib.h: 715: else
  3156                           ;CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  3157  001ADA  010F               	movlb	15	; () banked
  3158  001ADC  911D               	bcf	29,0,b	;volatile
  3159  001ADE                     l448:
  3160                           
  3161                           ; BSR set to: 15
  3162                           ;CANlib.h: 718: if (mask & 0x00020000)
  3163  001ADE  A221               	btfss	CANSetMask@mask+2,1,c
  3164  001AE0  D003               	goto	l449
  3165                           
  3166                           ; BSR set to: 15
  3167                           ;CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  3168  001AE2  010F               	movlb	15	; () banked
  3169  001AE4  831D               	bsf	29,1,b	;volatile
  3170  001AE6  D002               	goto	l450
  3171  001AE8                     l449:
  3172                           
  3173                           ; BSR set to: 15
  3174                           ;CANlib.h: 720: else
  3175                           ;CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  3176  001AE8  010F               	movlb	15	; () banked
  3177  001AEA  931D               	bcf	29,1,b	;volatile
  3178  001AEC                     l450:
  3179                           
  3180                           ; BSR set to: 15
  3181                           ;CANlib.h: 723: if (mask & 0x00040000)
  3182  001AEC  A421               	btfss	CANSetMask@mask+2,2,c
  3183  001AEE  D003               	goto	l451
  3184                           
  3185                           ; BSR set to: 15
  3186                           ;CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  3187  001AF0  010F               	movlb	15	; () banked
  3188  001AF2  8B1D               	bsf	29,5,b	;volatile
  3189  001AF4  D002               	goto	l452
  3190  001AF6                     l451:
  3191                           
  3192                           ; BSR set to: 15
  3193                           ;CANlib.h: 725: else
  3194                           ;CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  3195  001AF6  010F               	movlb	15	; () banked
  3196  001AF8  9B1D               	bcf	29,5,b	;volatile
  3197  001AFA                     l452:
  3198                           
  3199                           ; BSR set to: 15
  3200                           ;CANlib.h: 728: if (mask & 0x00080000)
  3201  001AFA  A621               	btfss	CANSetMask@mask+2,3,c
  3202  001AFC  D003               	goto	l453
  3203                           
  3204                           ; BSR set to: 15
  3205                           ;CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  3206  001AFE  010F               	movlb	15	; () banked
  3207  001B00  8D1D               	bsf	29,6,b	;volatile
  3208  001B02  D002               	goto	l454
  3209  001B04                     l453:
  3210                           
  3211                           ; BSR set to: 15
  3212                           ;CANlib.h: 730: else
  3213                           ;CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3214  001B04  010F               	movlb	15	; () banked
  3215  001B06  9D1D               	bcf	29,6,b	;volatile
  3216  001B08                     l454:
  3217                           
  3218                           ; BSR set to: 15
  3219                           ;CANlib.h: 733: if (mask & 0x00100000)
  3220  001B08  A821               	btfss	CANSetMask@mask+2,4,c
  3221  001B0A  D003               	goto	l455
  3222                           
  3223                           ; BSR set to: 15
  3224                           ;CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3225  001B0C  010F               	movlb	15	; () banked
  3226  001B0E  8F1D               	bsf	29,7,b	;volatile
  3227  001B10  D002               	goto	l4120
  3228  001B12                     l455:
  3229                           
  3230                           ; BSR set to: 15
  3231                           ;CANlib.h: 735: else
  3232                           ;CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3233  001B12  010F               	movlb	15	; () banked
  3234  001B14  9F1D               	bcf	29,7,b	;volatile
  3235  001B16                     l4120:
  3236                           
  3237                           ; BSR set to: 15
  3238                           ;CANlib.h: 738: tamp = (mask >> 21);
  3239  001B16  C01F  F0AB         	movff	CANSetMask@mask,??_CANSetMask
  3240  001B1A  C020  F0AC         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3241  001B1E  C021  F0AD         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3242  001B22  C022  F0AE         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3243  001B26  0E16               	movlw	22
  3244  001B28  D006               	goto	u4850
  3245  001B2A                     u4855:
  3246  001B2A  0100               	movlb	0	; () banked
  3247  001B2C  90D8               	bcf	status,0,c
  3248  001B2E  33AE               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3249  001B30  33AD               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3250  001B32  33AC               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3251  001B34  33AB               	rrcf	??_CANSetMask& (0+255),f,b
  3252  001B36                     u4850:
  3253  001B36  2EE8               	decfsz	wreg,f,c
  3254  001B38  D7F8               	goto	u4855
  3255  001B3A  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  3256  001B3E  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3257  001B42  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3258  001B46  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;CANlib.h: 739: tamp = tamp & 0x000000FF;
  3262  001B4A  0100               	movlb	0	; () banked
  3263  001B4C  51B0               	movf	CANSetMask@tamp& (0+255),w,b
  3264  001B4E  0100               	movlb	0	; () banked
  3265  001B50  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  3266  001B52  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3267  001B54  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3268  001B56  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3272  001B58  C0B0  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3273  001B5C  0012               	return	
  3274  001B5E                     __end_of_CANSetMask:
  3275                           	opt stack 0
  3276                           tblptru	equ	0xFF8
  3277                           tblptrh	equ	0xFF7
  3278                           tblptrl	equ	0xFF6
  3279                           tablat	equ	0xFF5
  3280                           intcon	equ	0xFF2
  3281                           postinc0	equ	0xFEE
  3282                           wreg	equ	0xFE8
  3283                           postdec1	equ	0xFE5
  3284                           fsr1l	equ	0xFE1
  3285                           status	equ	0xFD8
  3286                           
  3287 ;; *************** function _CANSetFilter *****************
  3288 ;; Defined at:
  3289 ;;		line 748 in file "CANlib.h"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  numBuffer       1    wreg     enum E16881
  3292 ;;  filter          4   30[COMRAM] unsigned long 
  3293 ;;  type            1   34[COMRAM] enum E16844
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  numBuffer       1    4[BANK0 ] enum E16881
  3296 ;;  tamp            4    5[BANK0 ] unsigned long 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;		None               void
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3306 ;;      Params:         5       0       0       0
  3307 ;;      Locals:         0       5       0       0
  3308 ;;      Temps:          0       4       0       0
  3309 ;;      Totals:         5       9       0       0
  3310 ;;Total ram usage:       14 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    2
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_CANInitialize
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text11
  3321  00013A                     __ptext11:
  3322                           	opt stack 0
  3323  00013A                     _CANSetFilter:
  3324                           	opt stack 26
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;incstack = 0
  3328                           ;CANSetFilter@numBuffer stored from wreg
  3329  00013A  0100               	movlb	0	; () banked
  3330  00013C  6FAF               	movwf	CANSetFilter@numBuffer& (0+255),b
  3331                           
  3332                           ;CANlib.h: 750: unsigned long tamp;
  3333                           ;CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3334  00013E  0100               	movlb	0	; () banked
  3335  000140  51AF               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3336  000142  0100               	movlb	0	; () banked
  3337  000144  A4D8               	btfss	status,2,c
  3338  000146  D053               	goto	l4144
  3339                           
  3340                           ; BSR set to: 0
  3341  000148  2823               	incf	CANSetFilter@type,w,c
  3342  00014A  A4D8               	btfss	status,2,c
  3343  00014C  D050               	goto	l4144
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;CANlib.h: 753: {
  3347                           ;CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3348  00014E  010F               	movlb	15	; () banked
  3349  000150  9701               	bcf	1,3,b	;volatile
  3350                           
  3351                           ; BSR set to: 15
  3352                           ;CANlib.h: 756: tamp = (filter >> 3);
  3353  000152  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  3354  000156  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3355  00015A  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3356  00015E  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3357  000162  0E04               	movlw	4
  3358  000164  D006               	goto	u4880
  3359  000166                     u4885:
  3360  000166  0100               	movlb	0	; () banked
  3361  000168  90D8               	bcf	status,0,c
  3362  00016A  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3363  00016C  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3364  00016E  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3365  000170  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  3366  000172                     u4880:
  3367  000172  2EE8               	decfsz	wreg,f,c
  3368  000174  D7F8               	goto	u4885
  3369  000176  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  3370  00017A  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3371  00017E  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3372  000182  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;CANlib.h: 757: tamp = tamp & 0x000000FF;
  3376  000186  0100               	movlb	0	; () banked
  3377  000188  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  3378  00018A  0100               	movlb	0	; () banked
  3379  00018C  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  3380  00018E  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3381  000190  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3382  000192  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3386  000194  C0B0  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;CANlib.h: 760: tamp = filter & 0x00000007;
  3390  000198  0E07               	movlw	7
  3391  00019A  141F               	andwf	CANSetFilter@filter,w,c
  3392  00019C  0100               	movlb	0	; () banked
  3393  00019E  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  3394  0001A0  0E00               	movlw	0
  3395  0001A2  1420               	andwf	CANSetFilter@filter+1,w,c
  3396  0001A4  0100               	movlb	0	; () banked
  3397  0001A6  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3398  0001A8  0E00               	movlw	0
  3399  0001AA  1421               	andwf	CANSetFilter@filter+2,w,c
  3400  0001AC  0100               	movlb	0	; () banked
  3401  0001AE  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3402  0001B0  0E00               	movlw	0
  3403  0001B2  1422               	andwf	CANSetFilter@filter+3,w,c
  3404  0001B4  0100               	movlb	0	; () banked
  3405  0001B6  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;CANlib.h: 761: tamp = tamp << 5;
  3409  0001B8  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  3410  0001BC  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3411  0001C0  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3412  0001C4  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3413  0001C8  0E05               	movlw	5
  3414  0001CA                     u4895:
  3415  0001CA  90D8               	bcf	status,0,c
  3416  0001CC  0100               	movlb	0	; () banked
  3417  0001CE  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  3418  0001D0  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3419  0001D2  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3420  0001D4  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3421  0001D6  2EE8               	decfsz	wreg,f,c
  3422  0001D8  D7F8               	goto	u4895
  3423  0001DA  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  3424  0001DE  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3425  0001E2  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3426  0001E6  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3430  0001EA  C0B0  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3431  0001EE                     l4144:
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;CANlib.h: 763: }
  3435                           ;CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3436  0001EE  0100               	movlb	0	; () banked
  3437  0001F0  05AF               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3438  0001F2  A4D8               	btfss	status,2,c
  3439  0001F4  D053               	goto	l4162
  3440                           
  3441                           ; BSR set to: 0
  3442  0001F6  2823               	incf	CANSetFilter@type,w,c
  3443  0001F8  A4D8               	btfss	status,2,c
  3444  0001FA  D050               	goto	l4162
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;CANlib.h: 766: {
  3448                           ;CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3449  0001FC  010F               	movlb	15	; () banked
  3450  0001FE  9705               	bcf	5,3,b	;volatile
  3451                           
  3452                           ; BSR set to: 15
  3453                           ;CANlib.h: 769: tamp = (filter >> 3);
  3454  000200  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  3455  000204  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3456  000208  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3457  00020C  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3458  000210  0E04               	movlw	4
  3459  000212  D006               	goto	u4920
  3460  000214                     u4925:
  3461  000214  0100               	movlb	0	; () banked
  3462  000216  90D8               	bcf	status,0,c
  3463  000218  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3464  00021A  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3465  00021C  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3466  00021E  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  3467  000220                     u4920:
  3468  000220  2EE8               	decfsz	wreg,f,c
  3469  000222  D7F8               	goto	u4925
  3470  000224  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  3471  000228  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3472  00022C  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3473  000230  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;CANlib.h: 770: tamp = tamp & 0x000000FF;
  3477  000234  0100               	movlb	0	; () banked
  3478  000236  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  3479  000238  0100               	movlb	0	; () banked
  3480  00023A  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  3481  00023C  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3482  00023E  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3483  000240  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3487  000242  C0B0  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;CANlib.h: 773: tamp = filter & 0x00000007;
  3491  000246  0E07               	movlw	7
  3492  000248  141F               	andwf	CANSetFilter@filter,w,c
  3493  00024A  0100               	movlb	0	; () banked
  3494  00024C  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  3495  00024E  0E00               	movlw	0
  3496  000250  1420               	andwf	CANSetFilter@filter+1,w,c
  3497  000252  0100               	movlb	0	; () banked
  3498  000254  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3499  000256  0E00               	movlw	0
  3500  000258  1421               	andwf	CANSetFilter@filter+2,w,c
  3501  00025A  0100               	movlb	0	; () banked
  3502  00025C  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3503  00025E  0E00               	movlw	0
  3504  000260  1422               	andwf	CANSetFilter@filter+3,w,c
  3505  000262  0100               	movlb	0	; () banked
  3506  000264  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;CANlib.h: 774: tamp = tamp << 5;
  3510  000266  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  3511  00026A  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3512  00026E  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3513  000272  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3514  000276  0E05               	movlw	5
  3515  000278                     u4935:
  3516  000278  90D8               	bcf	status,0,c
  3517  00027A  0100               	movlb	0	; () banked
  3518  00027C  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  3519  00027E  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3520  000280  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3521  000282  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3522  000284  2EE8               	decfsz	wreg,f,c
  3523  000286  D7F8               	goto	u4935
  3524  000288  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  3525  00028C  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3526  000290  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3527  000294  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3531  000298  C0B0  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3532  00029C                     l4162:
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;CANlib.h: 776: }
  3536                           ;CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3537  00029C  0E02               	movlw	2
  3538  00029E  0100               	movlb	0	; () banked
  3539  0002A0  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3540  0002A2  A4D8               	btfss	status,2,c
  3541  0002A4  D053               	goto	l4180
  3542                           
  3543                           ; BSR set to: 0
  3544  0002A6  2823               	incf	CANSetFilter@type,w,c
  3545  0002A8  A4D8               	btfss	status,2,c
  3546  0002AA  D050               	goto	l4180
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;CANlib.h: 779: {
  3550                           ;CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3551  0002AC  010F               	movlb	15	; () banked
  3552  0002AE  9709               	bcf	9,3,b	;volatile
  3553                           
  3554                           ; BSR set to: 15
  3555                           ;CANlib.h: 782: tamp = (filter >> 3);
  3556  0002B0  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  3557  0002B4  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3558  0002B8  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3559  0002BC  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3560  0002C0  0E04               	movlw	4
  3561  0002C2  D006               	goto	u4960
  3562  0002C4                     u4965:
  3563  0002C4  0100               	movlb	0	; () banked
  3564  0002C6  90D8               	bcf	status,0,c
  3565  0002C8  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3566  0002CA  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3567  0002CC  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3568  0002CE  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  3569  0002D0                     u4960:
  3570  0002D0  2EE8               	decfsz	wreg,f,c
  3571  0002D2  D7F8               	goto	u4965
  3572  0002D4  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  3573  0002D8  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3574  0002DC  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3575  0002E0  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;CANlib.h: 783: tamp = tamp & 0x000000FF;
  3579  0002E4  0100               	movlb	0	; () banked
  3580  0002E6  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  3581  0002E8  0100               	movlb	0	; () banked
  3582  0002EA  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  3583  0002EC  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3584  0002EE  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3585  0002F0  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3589  0002F2  C0B0  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;CANlib.h: 786: tamp = filter & 0x00000007;
  3593  0002F6  0E07               	movlw	7
  3594  0002F8  141F               	andwf	CANSetFilter@filter,w,c
  3595  0002FA  0100               	movlb	0	; () banked
  3596  0002FC  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  3597  0002FE  0E00               	movlw	0
  3598  000300  1420               	andwf	CANSetFilter@filter+1,w,c
  3599  000302  0100               	movlb	0	; () banked
  3600  000304  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3601  000306  0E00               	movlw	0
  3602  000308  1421               	andwf	CANSetFilter@filter+2,w,c
  3603  00030A  0100               	movlb	0	; () banked
  3604  00030C  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3605  00030E  0E00               	movlw	0
  3606  000310  1422               	andwf	CANSetFilter@filter+3,w,c
  3607  000312  0100               	movlb	0	; () banked
  3608  000314  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;CANlib.h: 787: tamp = tamp << 5;
  3612  000316  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  3613  00031A  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3614  00031E  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3615  000322  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3616  000326  0E05               	movlw	5
  3617  000328                     u4975:
  3618  000328  90D8               	bcf	status,0,c
  3619  00032A  0100               	movlb	0	; () banked
  3620  00032C  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  3621  00032E  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3622  000330  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3623  000332  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3624  000334  2EE8               	decfsz	wreg,f,c
  3625  000336  D7F8               	goto	u4975
  3626  000338  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  3627  00033C  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3628  000340  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3629  000344  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  3633  000348  C0B0  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3634  00034C                     l4180:
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;CANlib.h: 789: }
  3638                           ;CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3639  00034C  0E03               	movlw	3
  3640  00034E  0100               	movlb	0	; () banked
  3641  000350  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3642  000352  A4D8               	btfss	status,2,c
  3643  000354  D053               	goto	l4198
  3644                           
  3645                           ; BSR set to: 0
  3646  000356  2823               	incf	CANSetFilter@type,w,c
  3647  000358  A4D8               	btfss	status,2,c
  3648  00035A  D050               	goto	l4198
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;CANlib.h: 792: {
  3652                           ;CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  3653  00035C  010F               	movlb	15	; () banked
  3654  00035E  970D               	bcf	13,3,b	;volatile
  3655                           
  3656                           ; BSR set to: 15
  3657                           ;CANlib.h: 795: tamp = (filter >> 3);
  3658  000360  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  3659  000364  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3660  000368  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3661  00036C  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3662  000370  0E04               	movlw	4
  3663  000372  D006               	goto	u5000
  3664  000374                     u5005:
  3665  000374  0100               	movlb	0	; () banked
  3666  000376  90D8               	bcf	status,0,c
  3667  000378  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3668  00037A  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3669  00037C  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3670  00037E  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  3671  000380                     u5000:
  3672  000380  2EE8               	decfsz	wreg,f,c
  3673  000382  D7F8               	goto	u5005
  3674  000384  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  3675  000388  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3676  00038C  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3677  000390  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;CANlib.h: 796: tamp = tamp & 0x000000FF;
  3681  000394  0100               	movlb	0	; () banked
  3682  000396  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  3683  000398  0100               	movlb	0	; () banked
  3684  00039A  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  3685  00039C  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3686  00039E  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3687  0003A0  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  3691  0003A2  C0B0  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;CANlib.h: 799: tamp = filter & 0x00000007;
  3695  0003A6  0E07               	movlw	7
  3696  0003A8  141F               	andwf	CANSetFilter@filter,w,c
  3697  0003AA  0100               	movlb	0	; () banked
  3698  0003AC  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  3699  0003AE  0E00               	movlw	0
  3700  0003B0  1420               	andwf	CANSetFilter@filter+1,w,c
  3701  0003B2  0100               	movlb	0	; () banked
  3702  0003B4  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3703  0003B6  0E00               	movlw	0
  3704  0003B8  1421               	andwf	CANSetFilter@filter+2,w,c
  3705  0003BA  0100               	movlb	0	; () banked
  3706  0003BC  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3707  0003BE  0E00               	movlw	0
  3708  0003C0  1422               	andwf	CANSetFilter@filter+3,w,c
  3709  0003C2  0100               	movlb	0	; () banked
  3710  0003C4  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;CANlib.h: 800: tamp = tamp << 5;
  3714  0003C6  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  3715  0003CA  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3716  0003CE  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3717  0003D2  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3718  0003D6  0E05               	movlw	5
  3719  0003D8                     u5015:
  3720  0003D8  90D8               	bcf	status,0,c
  3721  0003DA  0100               	movlb	0	; () banked
  3722  0003DC  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  3723  0003DE  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3724  0003E0  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3725  0003E2  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3726  0003E4  2EE8               	decfsz	wreg,f,c
  3727  0003E6  D7F8               	goto	u5015
  3728  0003E8  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  3729  0003EC  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3730  0003F0  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3731  0003F4  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  3735  0003F8  C0B0  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3736  0003FC                     l4198:
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;CANlib.h: 802: }
  3740                           ;CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3741  0003FC  0E04               	movlw	4
  3742  0003FE  0100               	movlb	0	; () banked
  3743  000400  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3744  000402  A4D8               	btfss	status,2,c
  3745  000404  D053               	goto	l4216
  3746                           
  3747                           ; BSR set to: 0
  3748  000406  2823               	incf	CANSetFilter@type,w,c
  3749  000408  A4D8               	btfss	status,2,c
  3750  00040A  D050               	goto	l4216
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;CANlib.h: 805: {
  3754                           ;CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  3755  00040C  010F               	movlb	15	; () banked
  3756  00040E  9711               	bcf	17,3,b	;volatile
  3757                           
  3758                           ; BSR set to: 15
  3759                           ;CANlib.h: 808: tamp = (filter >> 3);
  3760  000410  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  3761  000414  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3762  000418  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3763  00041C  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3764  000420  0E04               	movlw	4
  3765  000422  D006               	goto	u5040
  3766  000424                     u5045:
  3767  000424  0100               	movlb	0	; () banked
  3768  000426  90D8               	bcf	status,0,c
  3769  000428  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3770  00042A  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3771  00042C  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3772  00042E  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  3773  000430                     u5040:
  3774  000430  2EE8               	decfsz	wreg,f,c
  3775  000432  D7F8               	goto	u5045
  3776  000434  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  3777  000438  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3778  00043C  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3779  000440  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;CANlib.h: 809: tamp = tamp & 0x000000FF;
  3783  000444  0100               	movlb	0	; () banked
  3784  000446  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  3785  000448  0100               	movlb	0	; () banked
  3786  00044A  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  3787  00044C  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3788  00044E  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3789  000450  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  3793  000452  C0B0  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;CANlib.h: 812: tamp = filter & 0x00000007;
  3797  000456  0E07               	movlw	7
  3798  000458  141F               	andwf	CANSetFilter@filter,w,c
  3799  00045A  0100               	movlb	0	; () banked
  3800  00045C  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  3801  00045E  0E00               	movlw	0
  3802  000460  1420               	andwf	CANSetFilter@filter+1,w,c
  3803  000462  0100               	movlb	0	; () banked
  3804  000464  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3805  000466  0E00               	movlw	0
  3806  000468  1421               	andwf	CANSetFilter@filter+2,w,c
  3807  00046A  0100               	movlb	0	; () banked
  3808  00046C  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3809  00046E  0E00               	movlw	0
  3810  000470  1422               	andwf	CANSetFilter@filter+3,w,c
  3811  000472  0100               	movlb	0	; () banked
  3812  000474  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;CANlib.h: 813: tamp = tamp << 5;
  3816  000476  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  3817  00047A  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3818  00047E  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3819  000482  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3820  000486  0E05               	movlw	5
  3821  000488                     u5055:
  3822  000488  90D8               	bcf	status,0,c
  3823  00048A  0100               	movlb	0	; () banked
  3824  00048C  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  3825  00048E  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3826  000490  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3827  000492  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3828  000494  2EE8               	decfsz	wreg,f,c
  3829  000496  D7F8               	goto	u5055
  3830  000498  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  3831  00049C  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3832  0004A0  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3833  0004A4  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  3837  0004A8  C0B0  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3838  0004AC                     l4216:
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;CANlib.h: 815: }
  3842                           ;CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3843  0004AC  0E05               	movlw	5
  3844  0004AE  0100               	movlb	0	; () banked
  3845  0004B0  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3846  0004B2  A4D8               	btfss	status,2,c
  3847  0004B4  D053               	goto	l4234
  3848                           
  3849                           ; BSR set to: 0
  3850  0004B6  2823               	incf	CANSetFilter@type,w,c
  3851  0004B8  A4D8               	btfss	status,2,c
  3852  0004BA  D050               	goto	l4234
  3853                           
  3854                           ; BSR set to: 0
  3855                           ;CANlib.h: 818: {
  3856                           ;CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  3857  0004BC  010F               	movlb	15	; () banked
  3858  0004BE  9715               	bcf	21,3,b	;volatile
  3859                           
  3860                           ; BSR set to: 15
  3861                           ;CANlib.h: 821: tamp = (filter >> 3);
  3862  0004C0  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  3863  0004C4  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3864  0004C8  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3865  0004CC  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3866  0004D0  0E04               	movlw	4
  3867  0004D2  D006               	goto	u5080
  3868  0004D4                     u5085:
  3869  0004D4  0100               	movlb	0	; () banked
  3870  0004D6  90D8               	bcf	status,0,c
  3871  0004D8  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3872  0004DA  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3873  0004DC  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3874  0004DE  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  3875  0004E0                     u5080:
  3876  0004E0  2EE8               	decfsz	wreg,f,c
  3877  0004E2  D7F8               	goto	u5085
  3878  0004E4  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  3879  0004E8  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3880  0004EC  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3881  0004F0  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;CANlib.h: 822: tamp = tamp & 0x000000FF;
  3885  0004F4  0100               	movlb	0	; () banked
  3886  0004F6  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  3887  0004F8  0100               	movlb	0	; () banked
  3888  0004FA  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  3889  0004FC  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3890  0004FE  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3891  000500  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  3895  000502  C0B0  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;CANlib.h: 825: tamp = filter & 0x00000007;
  3899  000506  0E07               	movlw	7
  3900  000508  141F               	andwf	CANSetFilter@filter,w,c
  3901  00050A  0100               	movlb	0	; () banked
  3902  00050C  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  3903  00050E  0E00               	movlw	0
  3904  000510  1420               	andwf	CANSetFilter@filter+1,w,c
  3905  000512  0100               	movlb	0	; () banked
  3906  000514  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3907  000516  0E00               	movlw	0
  3908  000518  1421               	andwf	CANSetFilter@filter+2,w,c
  3909  00051A  0100               	movlb	0	; () banked
  3910  00051C  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3911  00051E  0E00               	movlw	0
  3912  000520  1422               	andwf	CANSetFilter@filter+3,w,c
  3913  000522  0100               	movlb	0	; () banked
  3914  000524  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;CANlib.h: 826: tamp = tamp << 5;
  3918  000526  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  3919  00052A  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3920  00052E  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3921  000532  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3922  000536  0E05               	movlw	5
  3923  000538                     u5095:
  3924  000538  90D8               	bcf	status,0,c
  3925  00053A  0100               	movlb	0	; () banked
  3926  00053C  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  3927  00053E  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3928  000540  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3929  000542  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3930  000544  2EE8               	decfsz	wreg,f,c
  3931  000546  D7F8               	goto	u5095
  3932  000548  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  3933  00054C  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3934  000550  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3935  000554  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  3939  000558  C0B0  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3940  00055C                     l4234:
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;CANlib.h: 828: }
  3944                           ;CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3945  00055C  0100               	movlb	0	; () banked
  3946  00055E  51AF               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3947  000560  0100               	movlb	0	; () banked
  3948  000562  A4D8               	btfss	status,2,c
  3949  000564  D07E               	goto	l4268
  3950                           
  3951                           ; BSR set to: 0
  3952  000566  0EF7               	movlw	247
  3953  000568  1823               	xorwf	CANSetFilter@type,w,c
  3954  00056A  A4D8               	btfss	status,2,c
  3955  00056C  D07A               	goto	l4268
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;CANlib.h: 832: {
  3959                           ;CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  3960  00056E  010F               	movlb	15	; () banked
  3961  000570  8701               	bsf	1,3,b	;volatile
  3962                           
  3963                           ; BSR set to: 15
  3964                           ;CANlib.h: 835: tamp = filter & 0x000000FF;
  3965  000572  501F               	movf	CANSetFilter@filter,w,c
  3966  000574  0100               	movlb	0	; () banked
  3967  000576  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  3968  000578  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3969  00057A  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3970  00057C  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  3974  00057E  C0B0  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;CANlib.h: 838: tamp = filter & 0x0000FF00;
  3978  000582  0E00               	movlw	0
  3979  000584  141F               	andwf	CANSetFilter@filter,w,c
  3980  000586  0100               	movlb	0	; () banked
  3981  000588  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  3982  00058A  0EFF               	movlw	255
  3983  00058C  1420               	andwf	CANSetFilter@filter+1,w,c
  3984  00058E  0100               	movlb	0	; () banked
  3985  000590  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3986  000592  0E00               	movlw	0
  3987  000594  1421               	andwf	CANSetFilter@filter+2,w,c
  3988  000596  0100               	movlb	0	; () banked
  3989  000598  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3990  00059A  0E00               	movlw	0
  3991  00059C  1422               	andwf	CANSetFilter@filter+3,w,c
  3992  00059E  0100               	movlb	0	; () banked
  3993  0005A0  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;CANlib.h: 839: tamp = tamp >> 8;
  3997  0005A2  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  3998  0005A6  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3999  0005AA  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4000  0005AE  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4001  0005B2  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  4002  0005B6  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4003  0005BA  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4004  0005BE  0100               	movlb	0	; () banked
  4005  0005C0  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  4006  0005C2  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  4007  0005C6  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4008  0005CA  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4009  0005CE  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  4013  0005D2  C0B0  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;CANlib.h: 842: if (filter & 0x00010000)
  4017  0005D6  A021               	btfss	CANSetFilter@filter+2,0,c
  4018  0005D8  D003               	goto	l467
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  4022  0005DA  010F               	movlb	15	; () banked
  4023  0005DC  8101               	bsf	1,0,b	;volatile
  4024  0005DE  D002               	goto	l468
  4025  0005E0                     l467:
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;CANlib.h: 844: else
  4029                           ;CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  4030  0005E0  010F               	movlb	15	; () banked
  4031  0005E2  9101               	bcf	1,0,b	;volatile
  4032  0005E4                     l468:
  4033                           
  4034                           ; BSR set to: 15
  4035                           ;CANlib.h: 847: if (filter & 0x00020000)
  4036  0005E4  A221               	btfss	CANSetFilter@filter+2,1,c
  4037  0005E6  D003               	goto	l469
  4038                           
  4039                           ; BSR set to: 15
  4040                           ;CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  4041  0005E8  010F               	movlb	15	; () banked
  4042  0005EA  8301               	bsf	1,1,b	;volatile
  4043  0005EC  D002               	goto	l470
  4044  0005EE                     l469:
  4045                           
  4046                           ; BSR set to: 15
  4047                           ;CANlib.h: 849: else
  4048                           ;CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  4049  0005EE  010F               	movlb	15	; () banked
  4050  0005F0  9301               	bcf	1,1,b	;volatile
  4051  0005F2                     l470:
  4052                           
  4053                           ; BSR set to: 15
  4054                           ;CANlib.h: 852: if (filter & 0x00040000)
  4055  0005F2  A421               	btfss	CANSetFilter@filter+2,2,c
  4056  0005F4  D003               	goto	l471
  4057                           
  4058                           ; BSR set to: 15
  4059                           ;CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  4060  0005F6  010F               	movlb	15	; () banked
  4061  0005F8  8B01               	bsf	1,5,b	;volatile
  4062  0005FA  D002               	goto	l472
  4063  0005FC                     l471:
  4064                           
  4065                           ; BSR set to: 15
  4066                           ;CANlib.h: 854: else
  4067                           ;CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  4068  0005FC  010F               	movlb	15	; () banked
  4069  0005FE  9B01               	bcf	1,5,b	;volatile
  4070  000600                     l472:
  4071                           
  4072                           ; BSR set to: 15
  4073                           ;CANlib.h: 857: if (filter & 0x00080000)
  4074  000600  A621               	btfss	CANSetFilter@filter+2,3,c
  4075  000602  D003               	goto	l473
  4076                           
  4077                           ; BSR set to: 15
  4078                           ;CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  4079  000604  010F               	movlb	15	; () banked
  4080  000606  8D01               	bsf	1,6,b	;volatile
  4081  000608  D002               	goto	l474
  4082  00060A                     l473:
  4083                           
  4084                           ; BSR set to: 15
  4085                           ;CANlib.h: 859: else
  4086                           ;CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  4087  00060A  010F               	movlb	15	; () banked
  4088  00060C  9D01               	bcf	1,6,b	;volatile
  4089  00060E                     l474:
  4090                           
  4091                           ; BSR set to: 15
  4092                           ;CANlib.h: 862: if (filter & 0x00100000)
  4093  00060E  A821               	btfss	CANSetFilter@filter+2,4,c
  4094  000610  D003               	goto	l475
  4095                           
  4096                           ; BSR set to: 15
  4097                           ;CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  4098  000612  010F               	movlb	15	; () banked
  4099  000614  8F01               	bsf	1,7,b	;volatile
  4100  000616  D002               	goto	l4262
  4101  000618                     l475:
  4102                           
  4103                           ; BSR set to: 15
  4104                           ;CANlib.h: 864: else
  4105                           ;CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  4106  000618  010F               	movlb	15	; () banked
  4107  00061A  9F01               	bcf	1,7,b	;volatile
  4108  00061C                     l4262:
  4109                           
  4110                           ; BSR set to: 15
  4111                           ;CANlib.h: 867: tamp = (filter >> 21);
  4112  00061C  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  4113  000620  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4114  000624  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4115  000628  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4116  00062C  0E16               	movlw	22
  4117  00062E  D006               	goto	u5170
  4118  000630                     u5175:
  4119  000630  0100               	movlb	0	; () banked
  4120  000632  90D8               	bcf	status,0,c
  4121  000634  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4122  000636  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4123  000638  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4124  00063A  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  4125  00063C                     u5170:
  4126  00063C  2EE8               	decfsz	wreg,f,c
  4127  00063E  D7F8               	goto	u5175
  4128  000640  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  4129  000644  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4130  000648  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4131  00064C  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;CANlib.h: 868: tamp = tamp & 0x000000FF;
  4135  000650  0100               	movlb	0	; () banked
  4136  000652  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  4137  000654  0100               	movlb	0	; () banked
  4138  000656  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4139  000658  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4140  00065A  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4141  00065C  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  4145  00065E  C0B0  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4146  000662                     l4268:
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;CANlib.h: 870: }
  4150                           ;CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  4151  000662  0100               	movlb	0	; () banked
  4152  000664  05AF               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4153  000666  A4D8               	btfss	status,2,c
  4154  000668  D07E               	goto	l4302
  4155                           
  4156                           ; BSR set to: 0
  4157  00066A  0EF7               	movlw	247
  4158  00066C  1823               	xorwf	CANSetFilter@type,w,c
  4159  00066E  A4D8               	btfss	status,2,c
  4160  000670  D07A               	goto	l4302
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;CANlib.h: 873: {
  4164                           ;CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  4165  000672  010F               	movlb	15	; () banked
  4166  000674  8705               	bsf	5,3,b	;volatile
  4167                           
  4168                           ; BSR set to: 15
  4169                           ;CANlib.h: 876: tamp = filter & 0x000000FF;
  4170  000676  501F               	movf	CANSetFilter@filter,w,c
  4171  000678  0100               	movlb	0	; () banked
  4172  00067A  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4173  00067C  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4174  00067E  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4175  000680  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  4179  000682  C0B0  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;CANlib.h: 879: tamp = filter & 0x0000FF00;
  4183  000686  0E00               	movlw	0
  4184  000688  141F               	andwf	CANSetFilter@filter,w,c
  4185  00068A  0100               	movlb	0	; () banked
  4186  00068C  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4187  00068E  0EFF               	movlw	255
  4188  000690  1420               	andwf	CANSetFilter@filter+1,w,c
  4189  000692  0100               	movlb	0	; () banked
  4190  000694  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4191  000696  0E00               	movlw	0
  4192  000698  1421               	andwf	CANSetFilter@filter+2,w,c
  4193  00069A  0100               	movlb	0	; () banked
  4194  00069C  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4195  00069E  0E00               	movlw	0
  4196  0006A0  1422               	andwf	CANSetFilter@filter+3,w,c
  4197  0006A2  0100               	movlb	0	; () banked
  4198  0006A4  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;CANlib.h: 880: tamp = tamp >> 8;
  4202  0006A6  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  4203  0006AA  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4204  0006AE  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4205  0006B2  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4206  0006B6  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  4207  0006BA  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4208  0006BE  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4209  0006C2  0100               	movlb	0	; () banked
  4210  0006C4  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  4211  0006C6  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  4212  0006CA  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4213  0006CE  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4214  0006D2  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4218  0006D6  C0B0  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4219                           
  4220                           ; BSR set to: 0
  4221                           ;CANlib.h: 883: if (filter & 0x00010000)
  4222  0006DA  A021               	btfss	CANSetFilter@filter+2,0,c
  4223  0006DC  D003               	goto	l478
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4227  0006DE  010F               	movlb	15	; () banked
  4228  0006E0  8105               	bsf	5,0,b	;volatile
  4229  0006E2  D002               	goto	l479
  4230  0006E4                     l478:
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;CANlib.h: 885: else
  4234                           ;CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4235  0006E4  010F               	movlb	15	; () banked
  4236  0006E6  9105               	bcf	5,0,b	;volatile
  4237  0006E8                     l479:
  4238                           
  4239                           ; BSR set to: 15
  4240                           ;CANlib.h: 888: if (filter & 0x00020000)
  4241  0006E8  A221               	btfss	CANSetFilter@filter+2,1,c
  4242  0006EA  D003               	goto	l480
  4243                           
  4244                           ; BSR set to: 15
  4245                           ;CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4246  0006EC  010F               	movlb	15	; () banked
  4247  0006EE  8305               	bsf	5,1,b	;volatile
  4248  0006F0  D002               	goto	l481
  4249  0006F2                     l480:
  4250                           
  4251                           ; BSR set to: 15
  4252                           ;CANlib.h: 890: else
  4253                           ;CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4254  0006F2  010F               	movlb	15	; () banked
  4255  0006F4  9305               	bcf	5,1,b	;volatile
  4256  0006F6                     l481:
  4257                           
  4258                           ; BSR set to: 15
  4259                           ;CANlib.h: 893: if (filter & 0x00040000)
  4260  0006F6  A421               	btfss	CANSetFilter@filter+2,2,c
  4261  0006F8  D003               	goto	l482
  4262                           
  4263                           ; BSR set to: 15
  4264                           ;CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4265  0006FA  010F               	movlb	15	; () banked
  4266  0006FC  8B05               	bsf	5,5,b	;volatile
  4267  0006FE  D002               	goto	l483
  4268  000700                     l482:
  4269                           
  4270                           ; BSR set to: 15
  4271                           ;CANlib.h: 895: else
  4272                           ;CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4273  000700  010F               	movlb	15	; () banked
  4274  000702  9B05               	bcf	5,5,b	;volatile
  4275  000704                     l483:
  4276                           
  4277                           ; BSR set to: 15
  4278                           ;CANlib.h: 898: if (filter & 0x00080000)
  4279  000704  A621               	btfss	CANSetFilter@filter+2,3,c
  4280  000706  D003               	goto	l484
  4281                           
  4282                           ; BSR set to: 15
  4283                           ;CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4284  000708  010F               	movlb	15	; () banked
  4285  00070A  8D05               	bsf	5,6,b	;volatile
  4286  00070C  D002               	goto	l485
  4287  00070E                     l484:
  4288                           
  4289                           ; BSR set to: 15
  4290                           ;CANlib.h: 900: else
  4291                           ;CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4292  00070E  010F               	movlb	15	; () banked
  4293  000710  9D05               	bcf	5,6,b	;volatile
  4294  000712                     l485:
  4295                           
  4296                           ; BSR set to: 15
  4297                           ;CANlib.h: 903: if (filter & 0x00100000)
  4298  000712  A821               	btfss	CANSetFilter@filter+2,4,c
  4299  000714  D003               	goto	l486
  4300                           
  4301                           ; BSR set to: 15
  4302                           ;CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4303  000716  010F               	movlb	15	; () banked
  4304  000718  8F05               	bsf	5,7,b	;volatile
  4305  00071A  D002               	goto	l4296
  4306  00071C                     l486:
  4307                           
  4308                           ; BSR set to: 15
  4309                           ;CANlib.h: 905: else
  4310                           ;CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4311  00071C  010F               	movlb	15	; () banked
  4312  00071E  9F05               	bcf	5,7,b	;volatile
  4313  000720                     l4296:
  4314                           
  4315                           ; BSR set to: 15
  4316                           ;CANlib.h: 908: tamp = (filter >> 21);
  4317  000720  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  4318  000724  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4319  000728  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4320  00072C  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4321  000730  0E16               	movlw	22
  4322  000732  D006               	goto	u5250
  4323  000734                     u5255:
  4324  000734  0100               	movlb	0	; () banked
  4325  000736  90D8               	bcf	status,0,c
  4326  000738  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4327  00073A  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4328  00073C  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4329  00073E  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  4330  000740                     u5250:
  4331  000740  2EE8               	decfsz	wreg,f,c
  4332  000742  D7F8               	goto	u5255
  4333  000744  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  4334  000748  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4335  00074C  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4336  000750  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;CANlib.h: 909: tamp = tamp & 0x000000FF;
  4340  000754  0100               	movlb	0	; () banked
  4341  000756  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  4342  000758  0100               	movlb	0	; () banked
  4343  00075A  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4344  00075C  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4345  00075E  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4346  000760  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4350  000762  C0B0  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4351  000766                     l4302:
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;CANlib.h: 911: }
  4355                           ;CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4356  000766  0E02               	movlw	2
  4357  000768  0100               	movlb	0	; () banked
  4358  00076A  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4359  00076C  A4D8               	btfss	status,2,c
  4360  00076E  D07E               	goto	l4336
  4361                           
  4362                           ; BSR set to: 0
  4363  000770  0EF7               	movlw	247
  4364  000772  1823               	xorwf	CANSetFilter@type,w,c
  4365  000774  A4D8               	btfss	status,2,c
  4366  000776  D07A               	goto	l4336
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;CANlib.h: 915: {
  4370                           ;CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4371  000778  010F               	movlb	15	; () banked
  4372  00077A  8709               	bsf	9,3,b	;volatile
  4373                           
  4374                           ; BSR set to: 15
  4375                           ;CANlib.h: 918: tamp = filter & 0x000000FF;
  4376  00077C  501F               	movf	CANSetFilter@filter,w,c
  4377  00077E  0100               	movlb	0	; () banked
  4378  000780  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4379  000782  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4380  000784  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4381  000786  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4385  000788  C0B0  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;CANlib.h: 921: tamp = filter & 0x0000FF00;
  4389  00078C  0E00               	movlw	0
  4390  00078E  141F               	andwf	CANSetFilter@filter,w,c
  4391  000790  0100               	movlb	0	; () banked
  4392  000792  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4393  000794  0EFF               	movlw	255
  4394  000796  1420               	andwf	CANSetFilter@filter+1,w,c
  4395  000798  0100               	movlb	0	; () banked
  4396  00079A  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4397  00079C  0E00               	movlw	0
  4398  00079E  1421               	andwf	CANSetFilter@filter+2,w,c
  4399  0007A0  0100               	movlb	0	; () banked
  4400  0007A2  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4401  0007A4  0E00               	movlw	0
  4402  0007A6  1422               	andwf	CANSetFilter@filter+3,w,c
  4403  0007A8  0100               	movlb	0	; () banked
  4404  0007AA  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;CANlib.h: 922: tamp = tamp >> 8;
  4408  0007AC  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  4409  0007B0  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4410  0007B4  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4411  0007B8  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4412  0007BC  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  4413  0007C0  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4414  0007C4  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4415  0007C8  0100               	movlb	0	; () banked
  4416  0007CA  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  4417  0007CC  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  4418  0007D0  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4419  0007D4  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4420  0007D8  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4424  0007DC  C0B0  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;CANlib.h: 925: if (filter & 0x00010000)
  4428  0007E0  A021               	btfss	CANSetFilter@filter+2,0,c
  4429  0007E2  D003               	goto	l489
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4433  0007E4  010F               	movlb	15	; () banked
  4434  0007E6  8109               	bsf	9,0,b	;volatile
  4435  0007E8  D002               	goto	l490
  4436  0007EA                     l489:
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;CANlib.h: 927: else
  4440                           ;CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4441  0007EA  010F               	movlb	15	; () banked
  4442  0007EC  9109               	bcf	9,0,b	;volatile
  4443  0007EE                     l490:
  4444                           
  4445                           ; BSR set to: 15
  4446                           ;CANlib.h: 930: if (filter & 0x00020000)
  4447  0007EE  A221               	btfss	CANSetFilter@filter+2,1,c
  4448  0007F0  D003               	goto	l491
  4449                           
  4450                           ; BSR set to: 15
  4451                           ;CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4452  0007F2  010F               	movlb	15	; () banked
  4453  0007F4  8309               	bsf	9,1,b	;volatile
  4454  0007F6  D002               	goto	l492
  4455  0007F8                     l491:
  4456                           
  4457                           ; BSR set to: 15
  4458                           ;CANlib.h: 932: else
  4459                           ;CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4460  0007F8  010F               	movlb	15	; () banked
  4461  0007FA  9309               	bcf	9,1,b	;volatile
  4462  0007FC                     l492:
  4463                           
  4464                           ; BSR set to: 15
  4465                           ;CANlib.h: 935: if (filter & 0x00040000)
  4466  0007FC  A421               	btfss	CANSetFilter@filter+2,2,c
  4467  0007FE  D003               	goto	l493
  4468                           
  4469                           ; BSR set to: 15
  4470                           ;CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4471  000800  010F               	movlb	15	; () banked
  4472  000802  8B09               	bsf	9,5,b	;volatile
  4473  000804  D002               	goto	l494
  4474  000806                     l493:
  4475                           
  4476                           ; BSR set to: 15
  4477                           ;CANlib.h: 937: else
  4478                           ;CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4479  000806  010F               	movlb	15	; () banked
  4480  000808  9B09               	bcf	9,5,b	;volatile
  4481  00080A                     l494:
  4482                           
  4483                           ; BSR set to: 15
  4484                           ;CANlib.h: 940: if (filter & 0x00080000)
  4485  00080A  A621               	btfss	CANSetFilter@filter+2,3,c
  4486  00080C  D003               	goto	l495
  4487                           
  4488                           ; BSR set to: 15
  4489                           ;CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4490  00080E  010F               	movlb	15	; () banked
  4491  000810  8D09               	bsf	9,6,b	;volatile
  4492  000812  D002               	goto	l496
  4493  000814                     l495:
  4494                           
  4495                           ; BSR set to: 15
  4496                           ;CANlib.h: 942: else
  4497                           ;CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4498  000814  010F               	movlb	15	; () banked
  4499  000816  9D09               	bcf	9,6,b	;volatile
  4500  000818                     l496:
  4501                           
  4502                           ; BSR set to: 15
  4503                           ;CANlib.h: 945: if (filter & 0x00100000)
  4504  000818  A821               	btfss	CANSetFilter@filter+2,4,c
  4505  00081A  D003               	goto	l497
  4506                           
  4507                           ; BSR set to: 15
  4508                           ;CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4509  00081C  010F               	movlb	15	; () banked
  4510  00081E  8F09               	bsf	9,7,b	;volatile
  4511  000820  D002               	goto	l4330
  4512  000822                     l497:
  4513                           
  4514                           ; BSR set to: 15
  4515                           ;CANlib.h: 947: else
  4516                           ;CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4517  000822  010F               	movlb	15	; () banked
  4518  000824  9F09               	bcf	9,7,b	;volatile
  4519  000826                     l4330:
  4520                           
  4521                           ; BSR set to: 15
  4522                           ;CANlib.h: 950: tamp = (filter >> 21);
  4523  000826  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  4524  00082A  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4525  00082E  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4526  000832  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4527  000836  0E16               	movlw	22
  4528  000838  D006               	goto	u5330
  4529  00083A                     u5335:
  4530  00083A  0100               	movlb	0	; () banked
  4531  00083C  90D8               	bcf	status,0,c
  4532  00083E  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4533  000840  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4534  000842  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4535  000844  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  4536  000846                     u5330:
  4537  000846  2EE8               	decfsz	wreg,f,c
  4538  000848  D7F8               	goto	u5335
  4539  00084A  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  4540  00084E  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4541  000852  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4542  000856  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;CANlib.h: 951: tamp = tamp & 0x000000FF;
  4546  00085A  0100               	movlb	0	; () banked
  4547  00085C  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  4548  00085E  0100               	movlb	0	; () banked
  4549  000860  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4550  000862  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4551  000864  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4552  000866  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4556  000868  C0B0  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4557  00086C                     l4336:
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;CANlib.h: 953: }
  4561                           ;CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4562  00086C  0E03               	movlw	3
  4563  00086E  0100               	movlb	0	; () banked
  4564  000870  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4565  000872  A4D8               	btfss	status,2,c
  4566  000874  D07E               	goto	l4370
  4567                           
  4568                           ; BSR set to: 0
  4569  000876  0EF7               	movlw	247
  4570  000878  1823               	xorwf	CANSetFilter@type,w,c
  4571  00087A  A4D8               	btfss	status,2,c
  4572  00087C  D07A               	goto	l4370
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;CANlib.h: 956: {
  4576                           ;CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  4577  00087E  010F               	movlb	15	; () banked
  4578  000880  870D               	bsf	13,3,b	;volatile
  4579                           
  4580                           ; BSR set to: 15
  4581                           ;CANlib.h: 959: tamp = filter & 0x000000FF;
  4582  000882  501F               	movf	CANSetFilter@filter,w,c
  4583  000884  0100               	movlb	0	; () banked
  4584  000886  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4585  000888  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4586  00088A  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4587  00088C  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  4591  00088E  C0B0  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;CANlib.h: 962: tamp = filter & 0x0000FF00;
  4595  000892  0E00               	movlw	0
  4596  000894  141F               	andwf	CANSetFilter@filter,w,c
  4597  000896  0100               	movlb	0	; () banked
  4598  000898  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4599  00089A  0EFF               	movlw	255
  4600  00089C  1420               	andwf	CANSetFilter@filter+1,w,c
  4601  00089E  0100               	movlb	0	; () banked
  4602  0008A0  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4603  0008A2  0E00               	movlw	0
  4604  0008A4  1421               	andwf	CANSetFilter@filter+2,w,c
  4605  0008A6  0100               	movlb	0	; () banked
  4606  0008A8  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4607  0008AA  0E00               	movlw	0
  4608  0008AC  1422               	andwf	CANSetFilter@filter+3,w,c
  4609  0008AE  0100               	movlb	0	; () banked
  4610  0008B0  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;CANlib.h: 963: tamp = tamp >> 8;
  4614  0008B2  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  4615  0008B6  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4616  0008BA  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4617  0008BE  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4618  0008C2  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  4619  0008C6  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4620  0008CA  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4621  0008CE  0100               	movlb	0	; () banked
  4622  0008D0  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  4623  0008D2  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  4624  0008D6  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4625  0008DA  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4626  0008DE  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  4630  0008E2  C0B0  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;CANlib.h: 966: if (filter & 0x00010000)
  4634  0008E6  A021               	btfss	CANSetFilter@filter+2,0,c
  4635  0008E8  D003               	goto	l500
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  4639  0008EA  010F               	movlb	15	; () banked
  4640  0008EC  810D               	bsf	13,0,b	;volatile
  4641  0008EE  D002               	goto	l501
  4642  0008F0                     l500:
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;CANlib.h: 968: else
  4646                           ;CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  4647  0008F0  010F               	movlb	15	; () banked
  4648  0008F2  910D               	bcf	13,0,b	;volatile
  4649  0008F4                     l501:
  4650                           
  4651                           ; BSR set to: 15
  4652                           ;CANlib.h: 971: if (filter & 0x00020000)
  4653  0008F4  A221               	btfss	CANSetFilter@filter+2,1,c
  4654  0008F6  D003               	goto	l502
  4655                           
  4656                           ; BSR set to: 15
  4657                           ;CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  4658  0008F8  010F               	movlb	15	; () banked
  4659  0008FA  830D               	bsf	13,1,b	;volatile
  4660  0008FC  D002               	goto	l503
  4661  0008FE                     l502:
  4662                           
  4663                           ; BSR set to: 15
  4664                           ;CANlib.h: 973: else
  4665                           ;CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  4666  0008FE  010F               	movlb	15	; () banked
  4667  000900  930D               	bcf	13,1,b	;volatile
  4668  000902                     l503:
  4669                           
  4670                           ; BSR set to: 15
  4671                           ;CANlib.h: 976: if (filter & 0x00040000)
  4672  000902  A421               	btfss	CANSetFilter@filter+2,2,c
  4673  000904  D003               	goto	l504
  4674                           
  4675                           ; BSR set to: 15
  4676                           ;CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  4677  000906  010F               	movlb	15	; () banked
  4678  000908  8B0D               	bsf	13,5,b	;volatile
  4679  00090A  D002               	goto	l505
  4680  00090C                     l504:
  4681                           
  4682                           ; BSR set to: 15
  4683                           ;CANlib.h: 978: else
  4684                           ;CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  4685  00090C  010F               	movlb	15	; () banked
  4686  00090E  9B0D               	bcf	13,5,b	;volatile
  4687  000910                     l505:
  4688                           
  4689                           ; BSR set to: 15
  4690                           ;CANlib.h: 981: if (filter & 0x00080000)
  4691  000910  A621               	btfss	CANSetFilter@filter+2,3,c
  4692  000912  D003               	goto	l506
  4693                           
  4694                           ; BSR set to: 15
  4695                           ;CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  4696  000914  010F               	movlb	15	; () banked
  4697  000916  8D0D               	bsf	13,6,b	;volatile
  4698  000918  D002               	goto	l507
  4699  00091A                     l506:
  4700                           
  4701                           ; BSR set to: 15
  4702                           ;CANlib.h: 983: else
  4703                           ;CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  4704  00091A  010F               	movlb	15	; () banked
  4705  00091C  9D0D               	bcf	13,6,b	;volatile
  4706  00091E                     l507:
  4707                           
  4708                           ; BSR set to: 15
  4709                           ;CANlib.h: 986: if (filter & 0x00100000)
  4710  00091E  A821               	btfss	CANSetFilter@filter+2,4,c
  4711  000920  D003               	goto	l508
  4712                           
  4713                           ; BSR set to: 15
  4714                           ;CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  4715  000922  010F               	movlb	15	; () banked
  4716  000924  8F0D               	bsf	13,7,b	;volatile
  4717  000926  D002               	goto	l4364
  4718  000928                     l508:
  4719                           
  4720                           ; BSR set to: 15
  4721                           ;CANlib.h: 988: else
  4722                           ;CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  4723  000928  010F               	movlb	15	; () banked
  4724  00092A  9F0D               	bcf	13,7,b	;volatile
  4725  00092C                     l4364:
  4726                           
  4727                           ; BSR set to: 15
  4728                           ;CANlib.h: 991: tamp = (filter >> 21);
  4729  00092C  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  4730  000930  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4731  000934  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4732  000938  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4733  00093C  0E16               	movlw	22
  4734  00093E  D006               	goto	u5410
  4735  000940                     u5415:
  4736  000940  0100               	movlb	0	; () banked
  4737  000942  90D8               	bcf	status,0,c
  4738  000944  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4739  000946  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4740  000948  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4741  00094A  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  4742  00094C                     u5410:
  4743  00094C  2EE8               	decfsz	wreg,f,c
  4744  00094E  D7F8               	goto	u5415
  4745  000950  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  4746  000954  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4747  000958  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4748  00095C  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;CANlib.h: 992: tamp = tamp & 0x000000FF;
  4752  000960  0100               	movlb	0	; () banked
  4753  000962  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  4754  000964  0100               	movlb	0	; () banked
  4755  000966  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4756  000968  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4757  00096A  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4758  00096C  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  4762  00096E  C0B0  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4763  000972                     l4370:
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;CANlib.h: 994: }
  4767                           ;CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4768  000972  0E04               	movlw	4
  4769  000974  0100               	movlb	0	; () banked
  4770  000976  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4771  000978  A4D8               	btfss	status,2,c
  4772  00097A  D07E               	goto	l4404
  4773                           
  4774                           ; BSR set to: 0
  4775  00097C  0EF7               	movlw	247
  4776  00097E  1823               	xorwf	CANSetFilter@type,w,c
  4777  000980  A4D8               	btfss	status,2,c
  4778  000982  D07A               	goto	l4404
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;CANlib.h: 997: {
  4782                           ;CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  4783  000984  010F               	movlb	15	; () banked
  4784  000986  8711               	bsf	17,3,b	;volatile
  4785                           
  4786                           ; BSR set to: 15
  4787                           ;CANlib.h: 1000: tamp = filter & 0x000000FF;
  4788  000988  501F               	movf	CANSetFilter@filter,w,c
  4789  00098A  0100               	movlb	0	; () banked
  4790  00098C  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4791  00098E  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4792  000990  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4793  000992  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  4797  000994  C0B0  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;CANlib.h: 1003: tamp = filter & 0x0000FF00;
  4801  000998  0E00               	movlw	0
  4802  00099A  141F               	andwf	CANSetFilter@filter,w,c
  4803  00099C  0100               	movlb	0	; () banked
  4804  00099E  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4805  0009A0  0EFF               	movlw	255
  4806  0009A2  1420               	andwf	CANSetFilter@filter+1,w,c
  4807  0009A4  0100               	movlb	0	; () banked
  4808  0009A6  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4809  0009A8  0E00               	movlw	0
  4810  0009AA  1421               	andwf	CANSetFilter@filter+2,w,c
  4811  0009AC  0100               	movlb	0	; () banked
  4812  0009AE  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4813  0009B0  0E00               	movlw	0
  4814  0009B2  1422               	andwf	CANSetFilter@filter+3,w,c
  4815  0009B4  0100               	movlb	0	; () banked
  4816  0009B6  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4817                           
  4818                           ; BSR set to: 0
  4819                           ;CANlib.h: 1004: tamp = tamp >> 8;
  4820  0009B8  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  4821  0009BC  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4822  0009C0  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4823  0009C4  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4824  0009C8  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  4825  0009CC  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4826  0009D0  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4827  0009D4  0100               	movlb	0	; () banked
  4828  0009D6  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  4829  0009D8  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  4830  0009DC  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4831  0009E0  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4832  0009E4  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  4836  0009E8  C0B0  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4837                           
  4838                           ; BSR set to: 0
  4839                           ;CANlib.h: 1007: if (filter & 0x00010000)
  4840  0009EC  A021               	btfss	CANSetFilter@filter+2,0,c
  4841  0009EE  D003               	goto	l511
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  4845  0009F0  010F               	movlb	15	; () banked
  4846  0009F2  8111               	bsf	17,0,b	;volatile
  4847  0009F4  D002               	goto	l512
  4848  0009F6                     l511:
  4849                           
  4850                           ; BSR set to: 0
  4851                           ;CANlib.h: 1009: else
  4852                           ;CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  4853  0009F6  010F               	movlb	15	; () banked
  4854  0009F8  9111               	bcf	17,0,b	;volatile
  4855  0009FA                     l512:
  4856                           
  4857                           ; BSR set to: 15
  4858                           ;CANlib.h: 1012: if (filter & 0x00020000)
  4859  0009FA  A221               	btfss	CANSetFilter@filter+2,1,c
  4860  0009FC  D003               	goto	l513
  4861                           
  4862                           ; BSR set to: 15
  4863                           ;CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  4864  0009FE  010F               	movlb	15	; () banked
  4865  000A00  8311               	bsf	17,1,b	;volatile
  4866  000A02  D002               	goto	l514
  4867  000A04                     l513:
  4868                           
  4869                           ; BSR set to: 15
  4870                           ;CANlib.h: 1014: else
  4871                           ;CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  4872  000A04  010F               	movlb	15	; () banked
  4873  000A06  9311               	bcf	17,1,b	;volatile
  4874  000A08                     l514:
  4875                           
  4876                           ; BSR set to: 15
  4877                           ;CANlib.h: 1017: if (filter & 0x00040000)
  4878  000A08  A421               	btfss	CANSetFilter@filter+2,2,c
  4879  000A0A  D003               	goto	l515
  4880                           
  4881                           ; BSR set to: 15
  4882                           ;CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  4883  000A0C  010F               	movlb	15	; () banked
  4884  000A0E  8B11               	bsf	17,5,b	;volatile
  4885  000A10  D002               	goto	l516
  4886  000A12                     l515:
  4887                           
  4888                           ; BSR set to: 15
  4889                           ;CANlib.h: 1019: else
  4890                           ;CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  4891  000A12  010F               	movlb	15	; () banked
  4892  000A14  9B11               	bcf	17,5,b	;volatile
  4893  000A16                     l516:
  4894                           
  4895                           ; BSR set to: 15
  4896                           ;CANlib.h: 1022: if (filter & 0x00080000)
  4897  000A16  A621               	btfss	CANSetFilter@filter+2,3,c
  4898  000A18  D003               	goto	l517
  4899                           
  4900                           ; BSR set to: 15
  4901                           ;CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  4902  000A1A  010F               	movlb	15	; () banked
  4903  000A1C  8D11               	bsf	17,6,b	;volatile
  4904  000A1E  D002               	goto	l518
  4905  000A20                     l517:
  4906                           
  4907                           ; BSR set to: 15
  4908                           ;CANlib.h: 1024: else
  4909                           ;CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  4910  000A20  010F               	movlb	15	; () banked
  4911  000A22  9D11               	bcf	17,6,b	;volatile
  4912  000A24                     l518:
  4913                           
  4914                           ; BSR set to: 15
  4915                           ;CANlib.h: 1027: if (filter & 0x00100000)
  4916  000A24  A821               	btfss	CANSetFilter@filter+2,4,c
  4917  000A26  D003               	goto	l519
  4918                           
  4919                           ; BSR set to: 15
  4920                           ;CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  4921  000A28  010F               	movlb	15	; () banked
  4922  000A2A  8F11               	bsf	17,7,b	;volatile
  4923  000A2C  D002               	goto	l4398
  4924  000A2E                     l519:
  4925                           
  4926                           ; BSR set to: 15
  4927                           ;CANlib.h: 1029: else
  4928                           ;CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  4929  000A2E  010F               	movlb	15	; () banked
  4930  000A30  9F11               	bcf	17,7,b	;volatile
  4931  000A32                     l4398:
  4932                           
  4933                           ; BSR set to: 15
  4934                           ;CANlib.h: 1032: tamp = (filter >> 21);
  4935  000A32  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  4936  000A36  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4937  000A3A  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4938  000A3E  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4939  000A42  0E16               	movlw	22
  4940  000A44  D006               	goto	u5490
  4941  000A46                     u5495:
  4942  000A46  0100               	movlb	0	; () banked
  4943  000A48  90D8               	bcf	status,0,c
  4944  000A4A  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4945  000A4C  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4946  000A4E  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4947  000A50  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  4948  000A52                     u5490:
  4949  000A52  2EE8               	decfsz	wreg,f,c
  4950  000A54  D7F8               	goto	u5495
  4951  000A56  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  4952  000A5A  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4953  000A5E  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4954  000A62  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;CANlib.h: 1033: tamp = tamp & 0x000000FF;
  4958  000A66  0100               	movlb	0	; () banked
  4959  000A68  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  4960  000A6A  0100               	movlb	0	; () banked
  4961  000A6C  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4962  000A6E  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4963  000A70  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4964  000A72  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  4968  000A74  C0B0  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4969  000A78                     l4404:
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;CANlib.h: 1035: }
  4973                           ;CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4974  000A78  0E05               	movlw	5
  4975  000A7A  0100               	movlb	0	; () banked
  4976  000A7C  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4977  000A7E  A4D8               	btfss	status,2,c
  4978  000A80  0012               	return	
  4979                           
  4980                           ; BSR set to: 0
  4981  000A82  0EF7               	movlw	247
  4982  000A84  1823               	xorwf	CANSetFilter@type,w,c
  4983  000A86  A4D8               	btfss	status,2,c
  4984  000A88  0012               	return	
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;CANlib.h: 1038: {
  4988                           ;CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  4989  000A8A  010F               	movlb	15	; () banked
  4990  000A8C  8715               	bsf	21,3,b	;volatile
  4991                           
  4992                           ; BSR set to: 15
  4993                           ;CANlib.h: 1041: tamp = filter & 0x000000FF;
  4994  000A8E  501F               	movf	CANSetFilter@filter,w,c
  4995  000A90  0100               	movlb	0	; () banked
  4996  000A92  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4997  000A94  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4998  000A96  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4999  000A98  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  5003  000A9A  C0B0  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;CANlib.h: 1044: tamp = filter & 0x0000FF00;
  5007  000A9E  0E00               	movlw	0
  5008  000AA0  141F               	andwf	CANSetFilter@filter,w,c
  5009  000AA2  0100               	movlb	0	; () banked
  5010  000AA4  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5011  000AA6  0EFF               	movlw	255
  5012  000AA8  1420               	andwf	CANSetFilter@filter+1,w,c
  5013  000AAA  0100               	movlb	0	; () banked
  5014  000AAC  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5015  000AAE  0E00               	movlw	0
  5016  000AB0  1421               	andwf	CANSetFilter@filter+2,w,c
  5017  000AB2  0100               	movlb	0	; () banked
  5018  000AB4  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5019  000AB6  0E00               	movlw	0
  5020  000AB8  1422               	andwf	CANSetFilter@filter+3,w,c
  5021  000ABA  0100               	movlb	0	; () banked
  5022  000ABC  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;CANlib.h: 1045: tamp = tamp >> 8;
  5026  000ABE  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  5027  000AC2  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5028  000AC6  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5029  000ACA  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5030  000ACE  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  5031  000AD2  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5032  000AD6  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5033  000ADA  0100               	movlb	0	; () banked
  5034  000ADC  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  5035  000ADE  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5036  000AE2  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5037  000AE6  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5038  000AEA  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  5042  000AEE  C0B0  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;CANlib.h: 1048: if (filter & 0x00010000)
  5046  000AF2  A021               	btfss	CANSetFilter@filter+2,0,c
  5047  000AF4  D003               	goto	l522
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  5051  000AF6  010F               	movlb	15	; () banked
  5052  000AF8  8115               	bsf	21,0,b	;volatile
  5053  000AFA  D002               	goto	l523
  5054  000AFC                     l522:
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;CANlib.h: 1050: else
  5058                           ;CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  5059  000AFC  010F               	movlb	15	; () banked
  5060  000AFE  9115               	bcf	21,0,b	;volatile
  5061  000B00                     l523:
  5062                           
  5063                           ; BSR set to: 15
  5064                           ;CANlib.h: 1053: if (filter & 0x00020000)
  5065  000B00  A221               	btfss	CANSetFilter@filter+2,1,c
  5066  000B02  D003               	goto	l524
  5067                           
  5068                           ; BSR set to: 15
  5069                           ;CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  5070  000B04  010F               	movlb	15	; () banked
  5071  000B06  8315               	bsf	21,1,b	;volatile
  5072  000B08  D002               	goto	l525
  5073  000B0A                     l524:
  5074                           
  5075                           ; BSR set to: 15
  5076                           ;CANlib.h: 1055: else
  5077                           ;CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  5078  000B0A  010F               	movlb	15	; () banked
  5079  000B0C  9315               	bcf	21,1,b	;volatile
  5080  000B0E                     l525:
  5081                           
  5082                           ; BSR set to: 15
  5083                           ;CANlib.h: 1058: if (filter & 0x00040000)
  5084  000B0E  A421               	btfss	CANSetFilter@filter+2,2,c
  5085  000B10  D003               	goto	l526
  5086                           
  5087                           ; BSR set to: 15
  5088                           ;CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  5089  000B12  010F               	movlb	15	; () banked
  5090  000B14  8B15               	bsf	21,5,b	;volatile
  5091  000B16  D002               	goto	l527
  5092  000B18                     l526:
  5093                           
  5094                           ; BSR set to: 15
  5095                           ;CANlib.h: 1060: else
  5096                           ;CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  5097  000B18  010F               	movlb	15	; () banked
  5098  000B1A  9B15               	bcf	21,5,b	;volatile
  5099  000B1C                     l527:
  5100                           
  5101                           ; BSR set to: 15
  5102                           ;CANlib.h: 1063: if (filter & 0x00080000)
  5103  000B1C  A621               	btfss	CANSetFilter@filter+2,3,c
  5104  000B1E  D003               	goto	l528
  5105                           
  5106                           ; BSR set to: 15
  5107                           ;CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  5108  000B20  010F               	movlb	15	; () banked
  5109  000B22  8D15               	bsf	21,6,b	;volatile
  5110  000B24  D002               	goto	l529
  5111  000B26                     l528:
  5112                           
  5113                           ; BSR set to: 15
  5114                           ;CANlib.h: 1065: else
  5115                           ;CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  5116  000B26  010F               	movlb	15	; () banked
  5117  000B28  9D15               	bcf	21,6,b	;volatile
  5118  000B2A                     l529:
  5119                           
  5120                           ; BSR set to: 15
  5121                           ;CANlib.h: 1068: if (filter & 0x00100000)
  5122  000B2A  A821               	btfss	CANSetFilter@filter+2,4,c
  5123  000B2C  D003               	goto	l530
  5124                           
  5125                           ; BSR set to: 15
  5126                           ;CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  5127  000B2E  010F               	movlb	15	; () banked
  5128  000B30  8F15               	bsf	21,7,b	;volatile
  5129  000B32  D002               	goto	l4432
  5130  000B34                     l530:
  5131                           
  5132                           ; BSR set to: 15
  5133                           ;CANlib.h: 1070: else
  5134                           ;CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  5135  000B34  010F               	movlb	15	; () banked
  5136  000B36  9F15               	bcf	21,7,b	;volatile
  5137  000B38                     l4432:
  5138                           
  5139                           ; BSR set to: 15
  5140                           ;CANlib.h: 1073: tamp = (filter >> 21);
  5141  000B38  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  5142  000B3C  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5143  000B40  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5144  000B44  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5145  000B48  0E16               	movlw	22
  5146  000B4A  D006               	goto	u5570
  5147  000B4C                     u5575:
  5148  000B4C  0100               	movlb	0	; () banked
  5149  000B4E  90D8               	bcf	status,0,c
  5150  000B50  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5151  000B52  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5152  000B54  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5153  000B56  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  5154  000B58                     u5570:
  5155  000B58  2EE8               	decfsz	wreg,f,c
  5156  000B5A  D7F8               	goto	u5575
  5157  000B5C  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5158  000B60  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5159  000B64  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5160  000B68  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;CANlib.h: 1074: tamp = tamp & 0x000000FF;
  5164  000B6C  0100               	movlb	0	; () banked
  5165  000B6E  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  5166  000B70  0100               	movlb	0	; () banked
  5167  000B72  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5168  000B74  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5169  000B76  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5170  000B78  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  5174  000B7A  C0B0  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5175  000B7E  0012               	return	
  5176  000B80                     __end_of_CANSetFilter:
  5177                           	opt stack 0
  5178                           tblptru	equ	0xFF8
  5179                           tblptrh	equ	0xFF7
  5180                           tblptrl	equ	0xFF6
  5181                           tablat	equ	0xFF5
  5182                           intcon	equ	0xFF2
  5183                           postinc0	equ	0xFEE
  5184                           wreg	equ	0xFE8
  5185                           postdec1	equ	0xFE5
  5186                           fsr1l	equ	0xFE1
  5187                           status	equ	0xFD8
  5188                           
  5189 ;; *************** function _CANOperationMode *****************
  5190 ;; Defined at:
  5191 ;;		line 206 in file "CANlib.h"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;  mode            1    wreg     enum E16838
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  mode            1   30[COMRAM] enum E16838
  5196 ;; Return value:  Size  Location     Type
  5197 ;;		None               void
  5198 ;; Registers used:
  5199 ;;		wreg, status,2, status,0
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5205 ;;      Params:         0       0       0       0
  5206 ;;      Locals:         1       0       0       0
  5207 ;;      Temps:          0       0       0       0
  5208 ;;      Totals:         1       0       0       0
  5209 ;;Total ram usage:        1 bytes
  5210 ;; Hardware stack levels used:    1
  5211 ;; Hardware stack levels required when called:    2
  5212 ;; This function calls:
  5213 ;;		Nothing
  5214 ;; This function is called by:
  5215 ;;		_CANInitialize
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           	psect	text12
  5220  0026D6                     __ptext12:
  5221                           	opt stack 0
  5222  0026D6                     _CANOperationMode:
  5223                           	opt stack 26
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;incstack = 0
  5227                           ;CANOperationMode@mode stored from wreg
  5228  0026D6  6E1F               	movwf	CANOperationMode@mode,c
  5229                           
  5230                           ;CANlib.h: 208: CANCON = mode;
  5231  0026D8  C01F  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5232  0026DC                     l4028:
  5233  0026DC  506E               	movf	3950,w,c	;volatile
  5234  0026DE  0BE0               	andlw	224
  5235  0026E0  181F               	xorwf	CANOperationMode@mode,w,c
  5236  0026E2  B4D8               	btfsc	status,2,c
  5237  0026E4  0012               	return	
  5238  0026E6  D7FA               	goto	l4028
  5239  0026E8                     __end_of_CANOperationMode:
  5240                           	opt stack 0
  5241                           tblptru	equ	0xFF8
  5242                           tblptrh	equ	0xFF7
  5243                           tblptrl	equ	0xFF6
  5244                           tablat	equ	0xFF5
  5245                           intcon	equ	0xFF2
  5246                           postinc0	equ	0xFEE
  5247                           wreg	equ	0xFE8
  5248                           postdec1	equ	0xFE5
  5249                           fsr1l	equ	0xFE1
  5250                           status	equ	0xFD8
  5251                           
  5252 ;; *************** function _can_interpreter *****************
  5253 ;; Defined at:
  5254 ;;		line 232 in file "motore.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;		None
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;		None
  5259 ;; Return value:  Size  Location     Type
  5260 ;;		None               void
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5268 ;;      Params:         0       0       0       0
  5269 ;;      Locals:         0       0       0       0
  5270 ;;      Temps:          4       0       0       0
  5271 ;;      Totals:         4       0       0       0
  5272 ;;Total ram usage:        4 bytes
  5273 ;; Hardware stack levels used:    1
  5274 ;; Hardware stack levels required when called:    2
  5275 ;; This function calls:
  5276 ;;		Nothing
  5277 ;; This function is called by:
  5278 ;;		_main
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           	psect	text13
  5283  0021A8                     __ptext13:
  5284                           	opt stack 0
  5285  0021A8                     _can_interpreter:
  5286                           	opt stack 28
  5287                           
  5288                           ;motore.c: 233: if (new_message == 1) {
  5289                           
  5290                           ;incstack = 0
  5291  0021A8  AA38               	btfss	_new_message/(0+8),_new_message& (0+7),c	;volatile
  5292  0021AA  D066               	goto	l716
  5293                           
  5294                           ;motore.c: 234: if (id == 0b00000000000000000000000000011) {
  5295  0021AC  0E03               	movlw	3
  5296  0021AE  1828               	xorwf	_id,w,c	;volatile
  5297  0021B0  1029               	iorwf	_id+1,w,c	;volatile
  5298  0021B2  102A               	iorwf	_id+2,w,c	;volatile
  5299  0021B4  102B               	iorwf	_id+3,w,c	;volatile
  5300  0021B6  A4D8               	btfss	status,2,c
  5301  0021B8  D01A               	goto	l3796
  5302                           
  5303                           ;motore.c: 235: requestSpeed = data_array[1];
  5304  0021BA  0100               	movlb	0	; () banked
  5305  0021BC  519C               	movf	(_data_array+1)& (0+255),w,b
  5306  0021BE  6E2C               	movwf	_requestSpeed,c	;volatile
  5307  0021C0  6A2D               	clrf	_requestSpeed+1,c	;volatile
  5308  0021C2  6A2E               	clrf	_requestSpeed+2,c	;volatile
  5309  0021C4  6A2F               	clrf	_requestSpeed+3,c	;volatile
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;motore.c: 236: requestSpeed = ((requestSpeed << 8) | msg.data[0]);
  5313  0021C6  0100               	movlb	0	; () banked
  5314  0021C8  5190               	movf	(_msg+4)& (0+255),w,b
  5315  0021CA  C02C  F020         	movff	_requestSpeed,??_can_interpreter+1	;volatile
  5316  0021CE  C02D  F021         	movff	_requestSpeed+1,??_can_interpreter+2	;volatile
  5317  0021D2  C02E  F022         	movff	_requestSpeed+2,??_can_interpreter+3	;volatile
  5318  0021D6  6A1F               	clrf	??_can_interpreter& (0+255),c
  5319  0021D8  101F               	iorwf	??_can_interpreter,w,c
  5320  0021DA  6E2C               	movwf	_requestSpeed,c	;volatile
  5321  0021DC  5020               	movf	??_can_interpreter+1,w,c
  5322  0021DE  6E2D               	movwf	_requestSpeed+1,c	;volatile
  5323  0021E0  5021               	movf	??_can_interpreter+2,w,c
  5324  0021E2  6E2E               	movwf	_requestSpeed+2,c	;volatile
  5325  0021E4  5022               	movf	??_can_interpreter+3,w,c
  5326  0021E6  6E2F               	movwf	_requestSpeed+3,c	;volatile
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;motore.c: 237: dir = data_array[2];
  5330  0021E8  C09D  F03E         	movff	_data_array+2,_dir	;volatile
  5331  0021EC  6A3F               	clrf	_dir+1,c	;volatile
  5332  0021EE                     l3796:
  5333                           
  5334                           ;motore.c: 239: }
  5335                           ;motore.c: 241: if (id == 0b00000000000000000000000000001) {
  5336  0021EE  0428               	decf	_id,w,c	;volatile
  5337  0021F0  1029               	iorwf	_id+1,w,c	;volatile
  5338  0021F2  102A               	iorwf	_id+2,w,c	;volatile
  5339  0021F4  102B               	iorwf	_id+3,w,c	;volatile
  5340  0021F6  A4D8               	btfss	status,2,c
  5341  0021F8  D009               	goto	l3802
  5342                           
  5343                           ;motore.c: 242: requestSpeed = 0;
  5344  0021FA  0E00               	movlw	0
  5345  0021FC  6E2C               	movwf	_requestSpeed,c	;volatile
  5346  0021FE  0E00               	movlw	0
  5347  002200  6E2D               	movwf	_requestSpeed+1,c	;volatile
  5348  002202  0E00               	movlw	0
  5349  002204  6E2E               	movwf	_requestSpeed+2,c	;volatile
  5350  002206  0E00               	movlw	0
  5351  002208  6E2F               	movwf	_requestSpeed+3,c	;volatile
  5352                           
  5353                           ;motore.c: 243: PORTAbits.RA1 = 1;
  5354  00220A  8280               	bsf	3968,1,c	;volatile
  5355  00220C                     l3802:
  5356                           
  5357                           ;motore.c: 244: }
  5358                           ;motore.c: 246: if (id == 0b00000000000000000000000000110) {
  5359  00220C  0E06               	movlw	6
  5360  00220E  1828               	xorwf	_id,w,c	;volatile
  5361  002210  1029               	iorwf	_id+1,w,c	;volatile
  5362  002212  102A               	iorwf	_id+2,w,c	;volatile
  5363  002214  102B               	iorwf	_id+3,w,c	;volatile
  5364  002216  A4D8               	btfss	status,2,c
  5365  002218  D015               	goto	l3812
  5366                           
  5367                           ;motore.c: 252: left_speed = data_array[1];
  5368  00221A  C09C  F030         	movff	_data_array+1,_left_speed	;volatile
  5369  00221E  6A31               	clrf	_left_speed+1,c	;volatile
  5370                           
  5371                           ;motore.c: 253: left_speed = ((left_speed << 8) | (data_array[0]));
  5372  002220  5030               	movf	_left_speed,w,c	;volatile
  5373  002222  6E1F               	movwf	??_can_interpreter& (0+255),c
  5374  002224  0100               	movlb	0	; () banked
  5375  002226  519B               	movf	_data_array& (0+255),w,b
  5376  002228  6E30               	movwf	_left_speed,c	;volatile
  5377  00222A  C01F  F031         	movff	??_can_interpreter,_left_speed+1	;volatile
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;motore.c: 254: right_speed = data_array[3];
  5381  00222E  C09E  F034         	movff	_data_array+3,_right_speed	;volatile
  5382  002232  6A35               	clrf	_right_speed+1,c	;volatile
  5383                           
  5384                           ;motore.c: 255: right_speed = ((right_speed << 8) | (data_array[2]));
  5385  002234  5034               	movf	_right_speed,w,c	;volatile
  5386  002236  6E1F               	movwf	??_can_interpreter& (0+255),c
  5387  002238  0100               	movlb	0	; () banked
  5388  00223A  519D               	movf	(_data_array+2)& (0+255),w,b
  5389  00223C  6E34               	movwf	_right_speed,c	;volatile
  5390  00223E  C01F  F035         	movff	??_can_interpreter,_right_speed+1	;volatile
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;motore.c: 256: speed_fetched = 1;
  5394  002242  8239               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  5395  002244                     l3812:
  5396                           
  5397                           ;motore.c: 257: }
  5398                           ;motore.c: 259: if (id == 0b00000000000000000000000000010) {
  5399  002244  0E02               	movlw	2
  5400  002246  1828               	xorwf	_id,w,c	;volatile
  5401  002248  1029               	iorwf	_id+1,w,c	;volatile
  5402  00224A  102A               	iorwf	_id+2,w,c	;volatile
  5403  00224C  102B               	iorwf	_id+3,w,c	;volatile
  5404  00224E  A4D8               	btfss	status,2,c
  5405  002250  D013               	goto	l716
  5406                           
  5407                           ;motore.c: 260: if (data_array[0] == 0x01) {
  5408  002252  0100               	movlb	0	; () banked
  5409  002254  059B               	decf	_data_array& (0+255),w,b
  5410  002256  A4D8               	btfss	status,2,c
  5411  002258  D002               	goto	l3818
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;motore.c: 261: centralina_abs = 1;
  5415  00225A  8238               	bsf	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
  5416                           
  5417                           ;motore.c: 262: PORTCbits.RC5 = 0;
  5418  00225C  9A82               	bcf	3970,5,c	;volatile
  5419  00225E                     l3818:
  5420                           
  5421                           ; BSR set to: 0
  5422                           ;motore.c: 263: }
  5423                           ;motore.c: 264: if (data_array[0] == 0x02) {
  5424  00225E  0E02               	movlw	2
  5425  002260  0100               	movlb	0	; () banked
  5426  002262  199B               	xorwf	_data_array& (0+255),w,b
  5427  002264  A4D8               	btfss	status,2,c
  5428  002266  D003               	goto	l3822
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;motore.c: 265: centralina_sterzo = 1;
  5432  002268  8638               	bsf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
  5433                           
  5434                           ;motore.c: 266: centralina_comando = 1;
  5435  00226A  8438               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  5436                           
  5437                           ;motore.c: 267: PORTCbits.RC4 = 0;
  5438  00226C  9882               	bcf	3970,4,c	;volatile
  5439  00226E                     l3822:
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;motore.c: 268: }
  5443                           ;motore.c: 269: if (data_array[0] == 0x03) {
  5444  00226E  0E03               	movlw	3
  5445  002270  0100               	movlb	0	; () banked
  5446  002272  199B               	xorwf	_data_array& (0+255),w,b
  5447  002274  B4D8               	btfsc	status,2,c
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;motore.c: 270: centralina_comando = 1;
  5451  002276  8438               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  5452  002278                     l716:
  5453                           
  5454                           ;motore.c: 271: }
  5455                           ;motore.c: 272: }
  5456                           ;motore.c: 273: }
  5457                           ;motore.c: 274: new_message = 0;
  5458  002278  9A38               	bcf	_new_message/(0+8),_new_message& (0+7),c	;volatile
  5459  00227A  0012               	return		;funcret
  5460  00227C                     __end_of_can_interpreter:
  5461                           	opt stack 0
  5462                           tblptru	equ	0xFF8
  5463                           tblptrh	equ	0xFF7
  5464                           tblptrl	equ	0xFF6
  5465                           tablat	equ	0xFF5
  5466                           intcon	equ	0xFF2
  5467                           postinc0	equ	0xFEE
  5468                           wreg	equ	0xFE8
  5469                           postdec1	equ	0xFE5
  5470                           fsr1l	equ	0xFE1
  5471                           status	equ	0xFD8
  5472                           
  5473 ;; *************** function _battery_measure *****************
  5474 ;; Defined at:
  5475 ;;		line 218 in file "motore.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;		None
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;		None
  5480 ;; Return value:  Size  Location     Type
  5481 ;;		None               void
  5482 ;; Registers used:
  5483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5489 ;;      Params:         0       0       0       0
  5490 ;;      Locals:         0       0       0       0
  5491 ;;      Temps:          0       0       0       0
  5492 ;;      Totals:         0       0       0       0
  5493 ;;Total ram usage:        0 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; Hardware stack levels required when called:    3
  5496 ;; This function calls:
  5497 ;;		_CANisTxReady
  5498 ;;		_CANsendMessage
  5499 ;;		___awdiv
  5500 ;;		___wmul
  5501 ;; This function is called by:
  5502 ;;		_main
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text14
  5507  0023E8                     __ptext14:
  5508                           	opt stack 0
  5509  0023E8                     _battery_measure:
  5510                           	opt stack 27
  5511                           
  5512                           ;motore.c: 219: ADCON0bits.GO = 1;
  5513                           
  5514                           ;incstack = 0
  5515  0023E8  82C2               	bsf	4034,1,c	;volatile
  5516  0023EA                     l705:
  5517  0023EA  B2C2               	btfsc	4034,1,c	;volatile
  5518  0023EC  D7FE               	goto	l705
  5519                           
  5520                           ;motore.c: 221: vBatt = ADRESH;
  5521  0023EE  CFC4 F08A          	movff	4036,_vBatt	;volatile
  5522  0023F2  0100               	movlb	0	; () banked
  5523  0023F4  6B8B               	clrf	(_vBatt+1)& (0+255),b
  5524                           
  5525                           ; BSR set to: 0
  5526                           ;motore.c: 222: vBatt = (vBatt * 14) / 255;
  5527  0023F6  C08A  F0AE         	movff	_vBatt,___wmul@multiplier
  5528  0023FA  C08B  F0AF         	movff	_vBatt+1,___wmul@multiplier+1
  5529  0023FE  0E00               	movlw	0
  5530  002400  0100               	movlb	0	; () banked
  5531  002402  6FB1               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5532  002404  0E0E               	movlw	14
  5533  002406  6FB0               	movwf	___wmul@multiplicand& (0+255),b
  5534  002408  EC14  F013         	call	___wmul	;wreg free
  5535  00240C  C0AE  F0B4         	movff	?___wmul,___awdiv@dividend
  5536  002410  C0AF  F0B5         	movff	?___wmul+1,___awdiv@dividend+1
  5537  002414  0E00               	movlw	0
  5538  002416  0100               	movlb	0	; () banked
  5539  002418  6FB7               	movwf	(___awdiv@divisor+1)& (0+255),b
  5540  00241A  69B6               	setf	___awdiv@divisor& (0+255),b
  5541  00241C  EC3E  F011         	call	___awdiv	;wreg free
  5542  002420  C0B4  F08A         	movff	?___awdiv,_vBatt
  5543  002424  C0B5  F08B         	movff	?___awdiv+1,_vBatt+1
  5544                           
  5545                           ;motore.c: 223: if (vBatt < 8) {
  5546  002428  0100               	movlb	0	; () banked
  5547  00242A  BF8B               	btfsc	(_vBatt+1)& (0+255),7,b
  5548  00242C  D008               	goto	l4960
  5549  00242E  0100               	movlb	0	; () banked
  5550  002430  518B               	movf	(_vBatt+1)& (0+255),w,b
  5551  002432  E123               	bnz	l708
  5552  002434  0E08               	movlw	8
  5553  002436  0100               	movlb	0	; () banked
  5554  002438  5D8A               	subwf	_vBatt& (0+255),w,b
  5555  00243A  B0D8               	btfsc	status,0,c
  5556  00243C  D01E               	goto	l708
  5557  00243E                     l4960:
  5558  00243E  EC43  F013         	call	_CANisTxReady	;wreg free
  5559  002442  06E8               	decf	wreg,f,c
  5560  002444  A4D8               	btfss	status,2,c
  5561  002446  D7FB               	goto	l4960
  5562                           
  5563                           ;motore.c: 225: CANsendMessage(0b00000000000000000000000001001, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5564  002448  0E09               	movlw	9
  5565  00244A  0100               	movlb	0	; () banked
  5566  00244C  6FAB               	movwf	CANsendMessage@identifier& (0+255),b
  5567  00244E  0E00               	movlw	0
  5568  002450  6FAC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5569  002452  0E00               	movlw	0
  5570  002454  6FAD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5571  002456  0E00               	movlw	0
  5572  002458  6FAE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5573  00245A  0E9B               	movlw	low _data_array
  5574  00245C  0100               	movlb	0	; () banked
  5575  00245E  6FAF               	movwf	CANsendMessage@data& (0+255),b
  5576  002460  0E00               	movlw	high _data_array
  5577  002462  0100               	movlb	0	; () banked
  5578  002464  6FB0               	movwf	(CANsendMessage@data+1)& (0+255),b
  5579  002466  0E08               	movlw	8
  5580  002468  0100               	movlb	0	; () banked
  5581  00246A  6FB1               	movwf	CANsendMessage@dataLength& (0+255),b
  5582  00246C  0EFC               	movlw	252
  5583  00246E  0100               	movlb	0	; () banked
  5584  002470  6FB2               	movwf	CANsendMessage@flags& (0+255),b
  5585  002472  ECC0  F005         	call	_CANsendMessage	;wreg free
  5586                           
  5587                           ;motore.c: 226: PORTCbits.RC1 = 1;
  5588  002476  8282               	bsf	3970,1,c	;volatile
  5589                           
  5590                           ;motore.c: 227: } else {
  5591  002478  0012               	return	
  5592  00247A                     l708:
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;motore.c: 228: PORTCbits.RC1 = 0;
  5596  00247A  9282               	bcf	3970,1,c	;volatile
  5597  00247C  0012               	return	
  5598  00247E                     __end_of_battery_measure:
  5599                           	opt stack 0
  5600                           tblptru	equ	0xFF8
  5601                           tblptrh	equ	0xFF7
  5602                           tblptrl	equ	0xFF6
  5603                           tablat	equ	0xFF5
  5604                           intcon	equ	0xFF2
  5605                           postinc0	equ	0xFEE
  5606                           wreg	equ	0xFE8
  5607                           postdec1	equ	0xFE5
  5608                           fsr1l	equ	0xFE1
  5609                           status	equ	0xFD8
  5610                           
  5611 ;; *************** function ___wmul *****************
  5612 ;; Defined at:
  5613 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  multiplier      2    3[BANK0 ] unsigned int 
  5616 ;;  multiplicand    2    5[BANK0 ] unsigned int 
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;  product         2    7[BANK0 ] unsigned int 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  2    3[BANK0 ] unsigned int 
  5621 ;; Registers used:
  5622 ;;		wreg, status,2, status,0, prodl, prodh
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5628 ;;      Params:         0       4       0       0
  5629 ;;      Locals:         0       2       0       0
  5630 ;;      Temps:          0       0       0       0
  5631 ;;      Totals:         0       6       0       0
  5632 ;;Total ram usage:        6 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:    2
  5635 ;; This function calls:
  5636 ;;		Nothing
  5637 ;; This function is called by:
  5638 ;;		_delay_ms
  5639 ;;		_rampe
  5640 ;;		_battery_measure
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           	psect	text15
  5645  002628                     __ptext15:
  5646                           	opt stack 0
  5647  002628                     ___wmul:
  5648                           	opt stack 27
  5649                           
  5650                           ;incstack = 0
  5651  002628  0100               	movlb	0	; () banked
  5652  00262A  51AE               	movf	___wmul@multiplier& (0+255),w,b
  5653  00262C  0100               	movlb	0	; () banked
  5654  00262E  03B0               	mulwf	___wmul@multiplicand& (0+255),b
  5655  002630  CFF3 F0B2          	movff	prodl,___wmul@product
  5656  002634  CFF4 F0B3          	movff	prodh,___wmul@product+1
  5657  002638  0100               	movlb	0	; () banked
  5658  00263A  51AE               	movf	___wmul@multiplier& (0+255),w,b
  5659  00263C  0100               	movlb	0	; () banked
  5660  00263E  03B1               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5661  002640  50F3               	movf	prodl,w,c
  5662  002642  0100               	movlb	0	; () banked
  5663  002644  27B3               	addwf	(___wmul@product+1)& (0+255),f,b
  5664  002646  0100               	movlb	0	; () banked
  5665  002648  51AF               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5666  00264A  0100               	movlb	0	; () banked
  5667  00264C  03B0               	mulwf	___wmul@multiplicand& (0+255),b
  5668  00264E  50F3               	movf	prodl,w,c
  5669  002650  0100               	movlb	0	; () banked
  5670  002652  27B3               	addwf	(___wmul@product+1)& (0+255),f,b
  5671                           
  5672                           ; BSR set to: 0
  5673  002654  C0B2  F0AE         	movff	___wmul@product,?___wmul
  5674  002658  C0B3  F0AF         	movff	___wmul@product+1,?___wmul+1
  5675  00265C  0012               	return	
  5676  00265E                     __end_of___wmul:
  5677                           	opt stack 0
  5678                           tblptru	equ	0xFF8
  5679                           tblptrh	equ	0xFF7
  5680                           tblptrl	equ	0xFF6
  5681                           tablat	equ	0xFF5
  5682                           prodh	equ	0xFF4
  5683                           prodl	equ	0xFF3
  5684                           intcon	equ	0xFF2
  5685                           postinc0	equ	0xFEE
  5686                           wreg	equ	0xFE8
  5687                           postdec1	equ	0xFE5
  5688                           fsr1l	equ	0xFE1
  5689                           status	equ	0xFD8
  5690                           
  5691 ;; *************** function ___awdiv *****************
  5692 ;; Defined at:
  5693 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  dividend        2    9[BANK0 ] int 
  5696 ;;  divisor         2   11[BANK0 ] int 
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;  quotient        2   15[BANK0 ] int 
  5699 ;;  sign            1   14[BANK0 ] unsigned char 
  5700 ;;  counter         1   13[BANK0 ] unsigned char 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  2    9[BANK0 ] int 
  5703 ;; Registers used:
  5704 ;;		wreg, status,2, status,0
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5710 ;;      Params:         0       4       0       0
  5711 ;;      Locals:         0       4       0       0
  5712 ;;      Temps:          0       0       0       0
  5713 ;;      Totals:         0       8       0       0
  5714 ;;Total ram usage:        8 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    2
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_battery_measure
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           	psect	text16
  5725  00227C                     __ptext16:
  5726                           	opt stack 0
  5727  00227C                     ___awdiv:
  5728                           	opt stack 27
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;incstack = 0
  5732  00227C  0E00               	movlw	0
  5733  00227E  0100               	movlb	0	; () banked
  5734  002280  6FB9               	movwf	___awdiv@sign& (0+255),b
  5735                           
  5736                           ; BSR set to: 0
  5737  002282  0100               	movlb	0	; () banked
  5738  002284  AFB7               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5739  002286  D008               	goto	l4744
  5740                           
  5741                           ; BSR set to: 0
  5742  002288  0100               	movlb	0	; () banked
  5743  00228A  6DB6               	negf	___awdiv@divisor& (0+255),b
  5744  00228C  1FB7               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5745  00228E  B0D8               	btfsc	status,0,c
  5746  002290  2BB7               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5747                           
  5748                           ; BSR set to: 0
  5749  002292  0E01               	movlw	1
  5750  002294  0100               	movlb	0	; () banked
  5751  002296  6FB9               	movwf	___awdiv@sign& (0+255),b
  5752  002298                     l4744:
  5753                           
  5754                           ; BSR set to: 0
  5755  002298  0100               	movlb	0	; () banked
  5756  00229A  AFB5               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5757  00229C  D008               	goto	l4750
  5758                           
  5759                           ; BSR set to: 0
  5760  00229E  0100               	movlb	0	; () banked
  5761  0022A0  6DB4               	negf	___awdiv@dividend& (0+255),b
  5762  0022A2  1FB5               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5763  0022A4  B0D8               	btfsc	status,0,c
  5764  0022A6  2BB5               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5765                           
  5766                           ; BSR set to: 0
  5767  0022A8  0E01               	movlw	1
  5768  0022AA  0100               	movlb	0	; () banked
  5769  0022AC  1BB9               	xorwf	___awdiv@sign& (0+255),f,b
  5770  0022AE                     l4750:
  5771                           
  5772                           ; BSR set to: 0
  5773  0022AE  0E00               	movlw	0
  5774  0022B0  0100               	movlb	0	; () banked
  5775  0022B2  6FBB               	movwf	(___awdiv@quotient+1)& (0+255),b
  5776  0022B4  0E00               	movlw	0
  5777  0022B6  6FBA               	movwf	___awdiv@quotient& (0+255),b
  5778                           
  5779                           ; BSR set to: 0
  5780  0022B8  0100               	movlb	0	; () banked
  5781  0022BA  51B6               	movf	___awdiv@divisor& (0+255),w,b
  5782  0022BC  0100               	movlb	0	; () banked
  5783  0022BE  11B7               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5784  0022C0  B4D8               	btfsc	status,2,c
  5785  0022C2  D02C               	goto	l4772
  5786                           
  5787                           ; BSR set to: 0
  5788  0022C4  0E01               	movlw	1
  5789  0022C6  0100               	movlb	0	; () banked
  5790  0022C8  6FB8               	movwf	___awdiv@counter& (0+255),b
  5791  0022CA  D006               	goto	l4758
  5792  0022CC                     l4756:
  5793                           
  5794                           ; BSR set to: 0
  5795  0022CC  0100               	movlb	0	; () banked
  5796  0022CE  90D8               	bcf	status,0,c
  5797  0022D0  37B6               	rlcf	___awdiv@divisor& (0+255),f,b
  5798  0022D2  37B7               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5799  0022D4  0100               	movlb	0	; () banked
  5800  0022D6  2BB8               	incf	___awdiv@counter& (0+255),f,b
  5801  0022D8                     l4758:
  5802                           
  5803                           ; BSR set to: 0
  5804  0022D8  0100               	movlb	0	; () banked
  5805  0022DA  AFB7               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5806  0022DC  D7F7               	goto	l4756
  5807  0022DE                     l4760:
  5808                           
  5809                           ; BSR set to: 0
  5810  0022DE  0100               	movlb	0	; () banked
  5811  0022E0  90D8               	bcf	status,0,c
  5812  0022E2  37BA               	rlcf	___awdiv@quotient& (0+255),f,b
  5813  0022E4  37BB               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5814                           
  5815                           ; BSR set to: 0
  5816  0022E6  0100               	movlb	0	; () banked
  5817  0022E8  51B6               	movf	___awdiv@divisor& (0+255),w,b
  5818  0022EA  0100               	movlb	0	; () banked
  5819  0022EC  5DB4               	subwf	___awdiv@dividend& (0+255),w,b
  5820  0022EE  0100               	movlb	0	; () banked
  5821  0022F0  51B7               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5822  0022F2  0100               	movlb	0	; () banked
  5823  0022F4  59B5               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5824  0022F6  A0D8               	btfss	status,0,c
  5825  0022F8  D00A               	goto	l4768
  5826                           
  5827                           ; BSR set to: 0
  5828  0022FA  0100               	movlb	0	; () banked
  5829  0022FC  51B6               	movf	___awdiv@divisor& (0+255),w,b
  5830  0022FE  0100               	movlb	0	; () banked
  5831  002300  5FB4               	subwf	___awdiv@dividend& (0+255),f,b
  5832  002302  0100               	movlb	0	; () banked
  5833  002304  51B7               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5834  002306  0100               	movlb	0	; () banked
  5835  002308  5BB5               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5836                           
  5837                           ; BSR set to: 0
  5838  00230A  0100               	movlb	0	; () banked
  5839  00230C  81BA               	bsf	___awdiv@quotient& (0+255),0,b
  5840  00230E                     l4768:
  5841                           
  5842                           ; BSR set to: 0
  5843  00230E  0100               	movlb	0	; () banked
  5844  002310  90D8               	bcf	status,0,c
  5845  002312  33B7               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5846  002314  33B6               	rrcf	___awdiv@divisor& (0+255),f,b
  5847                           
  5848                           ; BSR set to: 0
  5849  002316  0100               	movlb	0	; () banked
  5850  002318  2FB8               	decfsz	___awdiv@counter& (0+255),f,b
  5851  00231A  D7E1               	goto	l4760
  5852  00231C                     l4772:
  5853                           
  5854                           ; BSR set to: 0
  5855  00231C  0100               	movlb	0	; () banked
  5856  00231E  51B9               	movf	___awdiv@sign& (0+255),w,b
  5857  002320  0100               	movlb	0	; () banked
  5858  002322  B4D8               	btfsc	status,2,c
  5859  002324  D005               	goto	l4776
  5860                           
  5861                           ; BSR set to: 0
  5862  002326  0100               	movlb	0	; () banked
  5863  002328  6DBA               	negf	___awdiv@quotient& (0+255),b
  5864  00232A  1FBB               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5865  00232C  B0D8               	btfsc	status,0,c
  5866  00232E  2BBB               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5867  002330                     l4776:
  5868                           
  5869                           ; BSR set to: 0
  5870  002330  C0BA  F0B4         	movff	___awdiv@quotient,?___awdiv
  5871  002334  C0BB  F0B5         	movff	___awdiv@quotient+1,?___awdiv+1
  5872  002338  0012               	return	
  5873  00233A                     __end_of___awdiv:
  5874                           	opt stack 0
  5875                           tblptru	equ	0xFF8
  5876                           tblptrh	equ	0xFF7
  5877                           tblptrl	equ	0xFF6
  5878                           tablat	equ	0xFF5
  5879                           prodh	equ	0xFF4
  5880                           prodl	equ	0xFF3
  5881                           intcon	equ	0xFF2
  5882                           postinc0	equ	0xFEE
  5883                           wreg	equ	0xFE8
  5884                           postdec1	equ	0xFE5
  5885                           fsr1l	equ	0xFE1
  5886                           status	equ	0xFD8
  5887                           
  5888 ;; *************** function _CANsendMessage *****************
  5889 ;; Defined at:
  5890 ;;		line 294 in file "CANlib.h"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;  identifier      4    0[BANK0 ] unsigned long 
  5893 ;;  data            2    4[BANK0 ] PTR unsigned char 
  5894 ;;		 -> data_array_debug(8), data_array(8), 
  5895 ;;  dataLength      1    6[BANK0 ] unsigned char 
  5896 ;;  flags           1    7[BANK0 ] enum E16866
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;  tamp            4    8[BANK0 ] unsigned long 
  5899 ;; Return value:  Size  Location     Type
  5900 ;;		None               void
  5901 ;; Registers used:
  5902 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5908 ;;      Params:         0       8       0       0
  5909 ;;      Locals:         0       4       0       0
  5910 ;;      Temps:          4       0       0       0
  5911 ;;      Totals:         4      12       0       0
  5912 ;;Total ram usage:       16 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; Hardware stack levels required when called:    2
  5915 ;; This function calls:
  5916 ;;		Nothing
  5917 ;; This function is called by:
  5918 ;;		_main
  5919 ;;		_rampe
  5920 ;;		_send_data
  5921 ;;		_battery_measure
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text17
  5926  000B80                     __ptext17:
  5927                           	opt stack 0
  5928  000B80                     _CANsendMessage:
  5929                           	opt stack 27
  5930                           
  5931                           ;CANlib.h: 296: unsigned long tamp;
  5932                           ;CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  5933                           
  5934                           ; BSR set to: 0
  5935                           ;incstack = 0
  5936  000B80  010F               	movlb	15	; () banked
  5937  000B82  B740               	btfsc	64,3,b	;volatile
  5938  000B84  D13B               	goto	l367
  5939                           
  5940                           ; BSR set to: 15
  5941                           ;CANlib.h: 299: { TXB0DLC = dataLength;
  5942  000B86  C0B1  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  5943                           
  5944                           ;CANlib.h: 300: if (0b01000000 & flags)
  5945  000B8A  0100               	movlb	0	; () banked
  5946  000B8C  ADB2               	btfss	CANsendMessage@flags& (0+255),6,b
  5947  000B8E  D003               	goto	l368
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  5951  000B90  010F               	movlb	15	; () banked
  5952  000B92  8D45               	bsf	69,6,b	;volatile
  5953  000B94  D002               	goto	l369
  5954  000B96                     l368:
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;CANlib.h: 302: else
  5958                           ;CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  5959  000B96  010F               	movlb	15	; () banked
  5960  000B98  9D45               	bcf	69,6,b	;volatile
  5961  000B9A                     l369:
  5962                           
  5963                           ; BSR set to: 15
  5964                           ;CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  5965  000B9A  0100               	movlb	0	; () banked
  5966  000B9C  A7B2               	btfss	CANsendMessage@flags& (0+255),3,b
  5967  000B9E  D077               	goto	l370
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;CANlib.h: 306: {
  5971                           ;CANlib.h: 308: tamp = identifier & 0x000000FF;
  5972  000BA0  0100               	movlb	0	; () banked
  5973  000BA2  51AB               	movf	CANsendMessage@identifier& (0+255),w,b
  5974  000BA4  0100               	movlb	0	; () banked
  5975  000BA6  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  5976  000BA8  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5977  000BAA  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5978  000BAC  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  5982  000BAE  C0B3  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;CANlib.h: 311: tamp = identifier & 0x0000FF00;
  5986  000BB2  0E00               	movlw	0
  5987  000BB4  0100               	movlb	0	; () banked
  5988  000BB6  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  5989  000BB8  0100               	movlb	0	; () banked
  5990  000BBA  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  5991  000BBC  0EFF               	movlw	255
  5992  000BBE  0100               	movlb	0	; () banked
  5993  000BC0  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5994  000BC2  0100               	movlb	0	; () banked
  5995  000BC4  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5996  000BC6  0E00               	movlw	0
  5997  000BC8  0100               	movlb	0	; () banked
  5998  000BCA  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5999  000BCC  0100               	movlb	0	; () banked
  6000  000BCE  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6001  000BD0  0E00               	movlw	0
  6002  000BD2  0100               	movlb	0	; () banked
  6003  000BD4  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6004  000BD6  0100               	movlb	0	; () banked
  6005  000BD8  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6006                           
  6007                           ; BSR set to: 0
  6008                           ;CANlib.h: 312: tamp = tamp >> 8;
  6009  000BDA  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  6010  000BDE  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6011  000BE2  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6012  000BE6  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6013  000BEA  C020  F01F         	movff	??_CANsendMessage+1,??_CANsendMessage
  6014  000BEE  C021  F020         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6015  000BF2  C022  F021         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6016  000BF6  6A22               	clrf	??_CANsendMessage+3,c
  6017  000BF8  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  6018  000BFC  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6019  000C00  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6020  000C04  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  6024  000C08  C0B3  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;CANlib.h: 315: TXB0SIDL = 0x00;
  6028  000C0C  0E00               	movlw	0
  6029  000C0E  010F               	movlb	15	; () banked
  6030  000C10  6F42               	movwf	66,b	;volatile
  6031                           
  6032                           ; BSR set to: 15
  6033                           ;CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  6034  000C12  010F               	movlb	15	; () banked
  6035  000C14  8742               	bsf	66,3,b	;volatile
  6036                           
  6037                           ; BSR set to: 15
  6038                           ;CANlib.h: 318: if (identifier & 0x00010000)
  6039  000C16  0100               	movlb	0	; () banked
  6040  000C18  A1AD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6041  000C1A  D002               	goto	l371
  6042                           
  6043                           ; BSR set to: 0
  6044                           ;CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  6045  000C1C  010F               	movlb	15	; () banked
  6046  000C1E  8142               	bsf	66,0,b	;volatile
  6047  000C20                     l371:
  6048                           
  6049                           ;CANlib.h: 320: if (identifier & 0x00020000)
  6050  000C20  0100               	movlb	0	; () banked
  6051  000C22  A3AD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6052  000C24  D002               	goto	l372
  6053                           
  6054                           ; BSR set to: 0
  6055                           ;CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  6056  000C26  010F               	movlb	15	; () banked
  6057  000C28  8342               	bsf	66,1,b	;volatile
  6058  000C2A                     l372:
  6059                           
  6060                           ;CANlib.h: 322: if (identifier & 0x00040000)
  6061  000C2A  0100               	movlb	0	; () banked
  6062  000C2C  A5AD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6063  000C2E  D002               	goto	l373
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  6067  000C30  010F               	movlb	15	; () banked
  6068  000C32  8B42               	bsf	66,5,b	;volatile
  6069  000C34                     l373:
  6070                           
  6071                           ;CANlib.h: 324: if (identifier & 0x00080000)
  6072  000C34  0100               	movlb	0	; () banked
  6073  000C36  A7AD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6074  000C38  D002               	goto	l374
  6075                           
  6076                           ; BSR set to: 0
  6077                           ;CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  6078  000C3A  010F               	movlb	15	; () banked
  6079  000C3C  8D42               	bsf	66,6,b	;volatile
  6080  000C3E                     l374:
  6081                           
  6082                           ;CANlib.h: 326: if (identifier & 0x00100000)
  6083  000C3E  0100               	movlb	0	; () banked
  6084  000C40  A9AD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6085  000C42  D002               	goto	l4528
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  6089  000C44  010F               	movlb	15	; () banked
  6090  000C46  8F42               	bsf	66,7,b	;volatile
  6091  000C48                     l4528:
  6092                           
  6093                           ;CANlib.h: 329: tamp = (identifier >> 21);
  6094  000C48  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  6095  000C4C  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6096  000C50  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6097  000C54  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6098  000C58  0E16               	movlw	22
  6099  000C5A  D005               	goto	u5700
  6100  000C5C                     u5705:
  6101  000C5C  90D8               	bcf	status,0,c
  6102  000C5E  3222               	rrcf	??_CANsendMessage+3,f,c
  6103  000C60  3221               	rrcf	??_CANsendMessage+2,f,c
  6104  000C62  3220               	rrcf	??_CANsendMessage+1,f,c
  6105  000C64  321F               	rrcf	??_CANsendMessage,f,c
  6106  000C66                     u5700:
  6107  000C66  2EE8               	decfsz	wreg,f,c
  6108  000C68  D7F9               	goto	u5705
  6109  000C6A  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  6110  000C6E  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6111  000C72  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6112  000C76  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6113                           
  6114                           ;CANlib.h: 330: tamp = tamp & 0x000000FF;
  6115  000C7A  0100               	movlb	0	; () banked
  6116  000C7C  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  6117  000C7E  0100               	movlb	0	; () banked
  6118  000C80  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  6119  000C82  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6120  000C84  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6121  000C86  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6122                           
  6123                           ; BSR set to: 0
  6124                           ;CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  6125  000C88  C0B3  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  6126                           
  6127                           ;CANlib.h: 332: }
  6128  000C8C  D057               	goto	l4548
  6129  000C8E                     l370:
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;CANlib.h: 334: else
  6133                           ;CANlib.h: 336: {
  6134                           ;CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  6135  000C8E  010F               	movlb	15	; () banked
  6136  000C90  9742               	bcf	66,3,b	;volatile
  6137                           
  6138                           ; BSR set to: 15
  6139                           ;CANlib.h: 339: tamp = (identifier >> 3);
  6140  000C92  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  6141  000C96  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6142  000C9A  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6143  000C9E  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6144  000CA2  0E04               	movlw	4
  6145  000CA4  D005               	goto	u5710
  6146  000CA6                     u5715:
  6147  000CA6  90D8               	bcf	status,0,c
  6148  000CA8  3222               	rrcf	??_CANsendMessage+3,f,c
  6149  000CAA  3221               	rrcf	??_CANsendMessage+2,f,c
  6150  000CAC  3220               	rrcf	??_CANsendMessage+1,f,c
  6151  000CAE  321F               	rrcf	??_CANsendMessage,f,c
  6152  000CB0                     u5710:
  6153  000CB0  2EE8               	decfsz	wreg,f,c
  6154  000CB2  D7F9               	goto	u5715
  6155  000CB4  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  6156  000CB8  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6157  000CBC  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6158  000CC0  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6159                           
  6160                           ; BSR set to: 15
  6161                           ;CANlib.h: 340: tamp = tamp & 0x000000FF;
  6162  000CC4  0100               	movlb	0	; () banked
  6163  000CC6  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  6164  000CC8  0100               	movlb	0	; () banked
  6165  000CCA  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  6166  000CCC  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6167  000CCE  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6168  000CD0  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6169                           
  6170                           ; BSR set to: 0
  6171                           ;CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  6172  000CD2  C0B3  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;CANlib.h: 343: tamp = identifier & 0x00000007;
  6176  000CD6  0E07               	movlw	7
  6177  000CD8  0100               	movlb	0	; () banked
  6178  000CDA  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  6179  000CDC  0100               	movlb	0	; () banked
  6180  000CDE  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  6181  000CE0  0E00               	movlw	0
  6182  000CE2  0100               	movlb	0	; () banked
  6183  000CE4  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6184  000CE6  0100               	movlb	0	; () banked
  6185  000CE8  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6186  000CEA  0E00               	movlw	0
  6187  000CEC  0100               	movlb	0	; () banked
  6188  000CEE  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6189  000CF0  0100               	movlb	0	; () banked
  6190  000CF2  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6191  000CF4  0E00               	movlw	0
  6192  000CF6  0100               	movlb	0	; () banked
  6193  000CF8  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6194  000CFA  0100               	movlb	0	; () banked
  6195  000CFC  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;CANlib.h: 344: tamp = tamp << 5;
  6199  000CFE  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  6200  000D02  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6201  000D06  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6202  000D0A  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6203  000D0E  0E05               	movlw	5
  6204  000D10                     u5725:
  6205  000D10  90D8               	bcf	status,0,c
  6206  000D12  361F               	rlcf	??_CANsendMessage,f,c
  6207  000D14  3620               	rlcf	??_CANsendMessage+1,f,c
  6208  000D16  3621               	rlcf	??_CANsendMessage+2,f,c
  6209  000D18  3622               	rlcf	??_CANsendMessage+3,f,c
  6210  000D1A  2EE8               	decfsz	wreg,f,c
  6211  000D1C  D7F9               	goto	u5725
  6212  000D1E  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  6213  000D22  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6214  000D26  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6215  000D2A  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6216                           
  6217                           ; BSR set to: 0
  6218                           ;CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  6219  000D2E  010F               	movlb	15	; () banked
  6220  000D30  5142               	movf	66,w,b	;volatile
  6221  000D32  0B1F               	andlw	31
  6222  000D34  010F               	movlb	15	; () banked
  6223  000D36  6F42               	movwf	66,b	;volatile
  6224                           
  6225                           ; BSR set to: 15
  6226                           ;CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  6227  000D38  C0B3  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  6228  000D3C                     l4548:
  6229                           
  6230                           ;CANlib.h: 347: }
  6231                           ;CANlib.h: 349: if (0b00000001 & flags)
  6232  000D3C  0100               	movlb	0	; () banked
  6233  000D3E  A1B2               	btfss	CANsendMessage@flags& (0+255),0,b
  6234  000D40  D003               	goto	l377
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  6238  000D42  010F               	movlb	15	; () banked
  6239  000D44  8140               	bsf	64,0,b	;volatile
  6240  000D46  D002               	goto	l378
  6241  000D48                     l377:
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;CANlib.h: 351: else
  6245                           ;CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  6246  000D48  010F               	movlb	15	; () banked
  6247  000D4A  9140               	bcf	64,0,b	;volatile
  6248  000D4C                     l378:
  6249                           
  6250                           ; BSR set to: 15
  6251                           ;CANlib.h: 353: if (0b00000010 & flags)
  6252  000D4C  0100               	movlb	0	; () banked
  6253  000D4E  A3B2               	btfss	CANsendMessage@flags& (0+255),1,b
  6254  000D50  D003               	goto	l379
  6255                           
  6256                           ; BSR set to: 0
  6257                           ;CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  6258  000D52  010F               	movlb	15	; () banked
  6259  000D54  8340               	bsf	64,1,b	;volatile
  6260  000D56  D002               	goto	l4554
  6261  000D58                     l379:
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;CANlib.h: 355: else
  6265                           ;CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  6266  000D58  010F               	movlb	15	; () banked
  6267  000D5A  9340               	bcf	64,1,b	;volatile
  6268  000D5C                     l4554:
  6269                           
  6270                           ; BSR set to: 15
  6271                           ;CANlib.h: 358: TXB0D0 = data[0];
  6272  000D5C  C0AF  FFD9         	movff	CANsendMessage@data,fsr2l
  6273  000D60  C0B0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6274  000D64  50DF               	movf	indf2,w,c
  6275  000D66  010F               	movlb	15	; () banked
  6276  000D68  6F46               	movwf	70,b	;volatile
  6277                           
  6278                           ; BSR set to: 15
  6279                           ;CANlib.h: 359: TXB0D1 = data[1];
  6280  000D6A  0100               	movlb	0	; () banked
  6281  000D6C  EE20 F001          	lfsr	2,1
  6282  000D70  51AF               	movf	CANsendMessage@data& (0+255),w,b
  6283  000D72  26D9               	addwf	fsr2l,f,c
  6284  000D74  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6285  000D76  22DA               	addwfc	fsr2h,f,c
  6286  000D78  50DF               	movf	indf2,w,c
  6287  000D7A  010F               	movlb	15	; () banked
  6288  000D7C  6F47               	movwf	71,b	;volatile
  6289                           
  6290                           ; BSR set to: 15
  6291                           ;CANlib.h: 360: TXB0D2 = data[2];
  6292  000D7E  0100               	movlb	0	; () banked
  6293  000D80  EE20 F002          	lfsr	2,2
  6294  000D84  51AF               	movf	CANsendMessage@data& (0+255),w,b
  6295  000D86  26D9               	addwf	fsr2l,f,c
  6296  000D88  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6297  000D8A  22DA               	addwfc	fsr2h,f,c
  6298  000D8C  50DF               	movf	indf2,w,c
  6299  000D8E  010F               	movlb	15	; () banked
  6300  000D90  6F48               	movwf	72,b	;volatile
  6301                           
  6302                           ; BSR set to: 15
  6303                           ;CANlib.h: 361: TXB0D3 = data[3];
  6304  000D92  0100               	movlb	0	; () banked
  6305  000D94  EE20 F003          	lfsr	2,3
  6306  000D98  51AF               	movf	CANsendMessage@data& (0+255),w,b
  6307  000D9A  26D9               	addwf	fsr2l,f,c
  6308  000D9C  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6309  000D9E  22DA               	addwfc	fsr2h,f,c
  6310  000DA0  50DF               	movf	indf2,w,c
  6311  000DA2  010F               	movlb	15	; () banked
  6312  000DA4  6F49               	movwf	73,b	;volatile
  6313                           
  6314                           ; BSR set to: 15
  6315                           ;CANlib.h: 362: TXB0D4 = data[4];
  6316  000DA6  0100               	movlb	0	; () banked
  6317  000DA8  EE20 F004          	lfsr	2,4
  6318  000DAC  51AF               	movf	CANsendMessage@data& (0+255),w,b
  6319  000DAE  26D9               	addwf	fsr2l,f,c
  6320  000DB0  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6321  000DB2  22DA               	addwfc	fsr2h,f,c
  6322  000DB4  50DF               	movf	indf2,w,c
  6323  000DB6  010F               	movlb	15	; () banked
  6324  000DB8  6F4A               	movwf	74,b	;volatile
  6325                           
  6326                           ; BSR set to: 15
  6327                           ;CANlib.h: 363: TXB0D5 = data[5];
  6328  000DBA  0100               	movlb	0	; () banked
  6329  000DBC  EE20 F005          	lfsr	2,5
  6330  000DC0  51AF               	movf	CANsendMessage@data& (0+255),w,b
  6331  000DC2  26D9               	addwf	fsr2l,f,c
  6332  000DC4  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6333  000DC6  22DA               	addwfc	fsr2h,f,c
  6334  000DC8  50DF               	movf	indf2,w,c
  6335  000DCA  010F               	movlb	15	; () banked
  6336  000DCC  6F4B               	movwf	75,b	;volatile
  6337                           
  6338                           ; BSR set to: 15
  6339                           ;CANlib.h: 364: TXB0D6 = data[6];
  6340  000DCE  0100               	movlb	0	; () banked
  6341  000DD0  EE20 F006          	lfsr	2,6
  6342  000DD4  51AF               	movf	CANsendMessage@data& (0+255),w,b
  6343  000DD6  26D9               	addwf	fsr2l,f,c
  6344  000DD8  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6345  000DDA  22DA               	addwfc	fsr2h,f,c
  6346  000DDC  50DF               	movf	indf2,w,c
  6347  000DDE  010F               	movlb	15	; () banked
  6348  000DE0  6F4C               	movwf	76,b	;volatile
  6349                           
  6350                           ; BSR set to: 15
  6351                           ;CANlib.h: 365: TXB0D7 = data[7];
  6352  000DE2  0100               	movlb	0	; () banked
  6353  000DE4  EE20 F007          	lfsr	2,7
  6354  000DE8  51AF               	movf	CANsendMessage@data& (0+255),w,b
  6355  000DEA  26D9               	addwf	fsr2l,f,c
  6356  000DEC  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6357  000DEE  22DA               	addwfc	fsr2h,f,c
  6358  000DF0  50DF               	movf	indf2,w,c
  6359  000DF2  010F               	movlb	15	; () banked
  6360  000DF4  6F4D               	movwf	77,b	;volatile
  6361                           
  6362                           ; BSR set to: 15
  6363                           ;CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  6364  000DF6  010F               	movlb	15	; () banked
  6365  000DF8  8740               	bsf	64,3,b	;volatile
  6366                           
  6367                           ; BSR set to: 15
  6368                           ;CANlib.h: 368: return;
  6369  000DFA  0012               	return	
  6370  000DFC                     l367:
  6371                           
  6372                           ; BSR set to: 15
  6373                           ;CANlib.h: 369: }
  6374                           ;CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  6375  000DFC  010F               	movlb	15	; () banked
  6376  000DFE  B730               	btfsc	48,3,b	;volatile
  6377  000E00  D13B               	goto	l382
  6378                           
  6379                           ; BSR set to: 15
  6380                           ;CANlib.h: 374: { TXB1DLC = dataLength;
  6381  000E02  C0B1  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  6382                           
  6383                           ;CANlib.h: 376: if (0b01000000 & flags)
  6384  000E06  0100               	movlb	0	; () banked
  6385  000E08  ADB2               	btfss	CANsendMessage@flags& (0+255),6,b
  6386  000E0A  D003               	goto	l383
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  6390  000E0C  010F               	movlb	15	; () banked
  6391  000E0E  8D35               	bsf	53,6,b	;volatile
  6392  000E10  D002               	goto	l384
  6393  000E12                     l383:
  6394                           
  6395                           ; BSR set to: 0
  6396                           ;CANlib.h: 378: else
  6397                           ;CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  6398  000E12  010F               	movlb	15	; () banked
  6399  000E14  9D35               	bcf	53,6,b	;volatile
  6400  000E16                     l384:
  6401                           
  6402                           ; BSR set to: 15
  6403                           ;CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  6404  000E16  0100               	movlb	0	; () banked
  6405  000E18  A7B2               	btfss	CANsendMessage@flags& (0+255),3,b
  6406  000E1A  D077               	goto	l385
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;CANlib.h: 382: {
  6410                           ;CANlib.h: 383: tamp = identifier & 0x000000FF;
  6411  000E1C  0100               	movlb	0	; () banked
  6412  000E1E  51AB               	movf	CANsendMessage@identifier& (0+255),w,b
  6413  000E20  0100               	movlb	0	; () banked
  6414  000E22  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  6415  000E24  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6416  000E26  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6417  000E28  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  6421  000E2A  C0B3  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  6422                           
  6423                           ; BSR set to: 0
  6424                           ;CANlib.h: 386: tamp = identifier & 0x0000FF00;
  6425  000E2E  0E00               	movlw	0
  6426  000E30  0100               	movlb	0	; () banked
  6427  000E32  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  6428  000E34  0100               	movlb	0	; () banked
  6429  000E36  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  6430  000E38  0EFF               	movlw	255
  6431  000E3A  0100               	movlb	0	; () banked
  6432  000E3C  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6433  000E3E  0100               	movlb	0	; () banked
  6434  000E40  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6435  000E42  0E00               	movlw	0
  6436  000E44  0100               	movlb	0	; () banked
  6437  000E46  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6438  000E48  0100               	movlb	0	; () banked
  6439  000E4A  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6440  000E4C  0E00               	movlw	0
  6441  000E4E  0100               	movlb	0	; () banked
  6442  000E50  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6443  000E52  0100               	movlb	0	; () banked
  6444  000E54  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;CANlib.h: 387: tamp = tamp >> 8;
  6448  000E56  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  6449  000E5A  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6450  000E5E  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6451  000E62  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6452  000E66  C020  F01F         	movff	??_CANsendMessage+1,??_CANsendMessage
  6453  000E6A  C021  F020         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6454  000E6E  C022  F021         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6455  000E72  6A22               	clrf	??_CANsendMessage+3,c
  6456  000E74  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  6457  000E78  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6458  000E7C  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6459  000E80  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6460                           
  6461                           ; BSR set to: 0
  6462                           ;CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  6463  000E84  C0B3  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  6464                           
  6465                           ; BSR set to: 0
  6466                           ;CANlib.h: 390: TXB1SIDL = 0x00;
  6467  000E88  0E00               	movlw	0
  6468  000E8A  010F               	movlb	15	; () banked
  6469  000E8C  6F32               	movwf	50,b	;volatile
  6470                           
  6471                           ; BSR set to: 15
  6472                           ;CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  6473  000E8E  010F               	movlb	15	; () banked
  6474  000E90  8732               	bsf	50,3,b	;volatile
  6475                           
  6476                           ; BSR set to: 15
  6477                           ;CANlib.h: 393: if (identifier & 0x00010000)
  6478  000E92  0100               	movlb	0	; () banked
  6479  000E94  A1AD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6480  000E96  D002               	goto	l386
  6481                           
  6482                           ; BSR set to: 0
  6483                           ;CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  6484  000E98  010F               	movlb	15	; () banked
  6485  000E9A  8132               	bsf	50,0,b	;volatile
  6486  000E9C                     l386:
  6487                           
  6488                           ;CANlib.h: 395: if (identifier & 0x00020000)
  6489  000E9C  0100               	movlb	0	; () banked
  6490  000E9E  A3AD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6491  000EA0  D002               	goto	l387
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  6495  000EA2  010F               	movlb	15	; () banked
  6496  000EA4  8332               	bsf	50,1,b	;volatile
  6497  000EA6                     l387:
  6498                           
  6499                           ;CANlib.h: 397: if (identifier & 0x00040000)
  6500  000EA6  0100               	movlb	0	; () banked
  6501  000EA8  A5AD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6502  000EAA  D002               	goto	l388
  6503                           
  6504                           ; BSR set to: 0
  6505                           ;CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  6506  000EAC  010F               	movlb	15	; () banked
  6507  000EAE  8B32               	bsf	50,5,b	;volatile
  6508  000EB0                     l388:
  6509                           
  6510                           ;CANlib.h: 399: if (identifier & 0x00080000)
  6511  000EB0  0100               	movlb	0	; () banked
  6512  000EB2  A7AD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6513  000EB4  D002               	goto	l389
  6514                           
  6515                           ; BSR set to: 0
  6516                           ;CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  6517  000EB6  010F               	movlb	15	; () banked
  6518  000EB8  8D32               	bsf	50,6,b	;volatile
  6519  000EBA                     l389:
  6520                           
  6521                           ;CANlib.h: 401: if (identifier & 0x00100000)
  6522  000EBA  0100               	movlb	0	; () banked
  6523  000EBC  A9AD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6524  000EBE  D002               	goto	l4604
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  6528  000EC0  010F               	movlb	15	; () banked
  6529  000EC2  8F32               	bsf	50,7,b	;volatile
  6530  000EC4                     l4604:
  6531                           
  6532                           ;CANlib.h: 404: tamp = (identifier >> 21);
  6533  000EC4  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  6534  000EC8  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6535  000ECC  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6536  000ED0  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6537  000ED4  0E16               	movlw	22
  6538  000ED6  D005               	goto	u5830
  6539  000ED8                     u5835:
  6540  000ED8  90D8               	bcf	status,0,c
  6541  000EDA  3222               	rrcf	??_CANsendMessage+3,f,c
  6542  000EDC  3221               	rrcf	??_CANsendMessage+2,f,c
  6543  000EDE  3220               	rrcf	??_CANsendMessage+1,f,c
  6544  000EE0  321F               	rrcf	??_CANsendMessage,f,c
  6545  000EE2                     u5830:
  6546  000EE2  2EE8               	decfsz	wreg,f,c
  6547  000EE4  D7F9               	goto	u5835
  6548  000EE6  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  6549  000EEA  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6550  000EEE  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6551  000EF2  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6552                           
  6553                           ;CANlib.h: 405: tamp = tamp & 0x000000FF;
  6554  000EF6  0100               	movlb	0	; () banked
  6555  000EF8  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  6556  000EFA  0100               	movlb	0	; () banked
  6557  000EFC  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  6558  000EFE  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6559  000F00  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6560  000F02  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  6564  000F04  C0B3  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6565                           
  6566                           ;CANlib.h: 407: }
  6567  000F08  D057               	goto	l4624
  6568  000F0A                     l385:
  6569                           
  6570                           ; BSR set to: 0
  6571                           ;CANlib.h: 409: else
  6572                           ;CANlib.h: 411: {
  6573                           ;CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  6574  000F0A  010F               	movlb	15	; () banked
  6575  000F0C  9732               	bcf	50,3,b	;volatile
  6576                           
  6577                           ; BSR set to: 15
  6578                           ;CANlib.h: 414: tamp = (identifier >> 3);
  6579  000F0E  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  6580  000F12  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6581  000F16  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6582  000F1A  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6583  000F1E  0E04               	movlw	4
  6584  000F20  D005               	goto	u5840
  6585  000F22                     u5845:
  6586  000F22  90D8               	bcf	status,0,c
  6587  000F24  3222               	rrcf	??_CANsendMessage+3,f,c
  6588  000F26  3221               	rrcf	??_CANsendMessage+2,f,c
  6589  000F28  3220               	rrcf	??_CANsendMessage+1,f,c
  6590  000F2A  321F               	rrcf	??_CANsendMessage,f,c
  6591  000F2C                     u5840:
  6592  000F2C  2EE8               	decfsz	wreg,f,c
  6593  000F2E  D7F9               	goto	u5845
  6594  000F30  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  6595  000F34  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6596  000F38  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6597  000F3C  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6598                           
  6599                           ; BSR set to: 15
  6600                           ;CANlib.h: 415: tamp = tamp & 0x000000FF;
  6601  000F40  0100               	movlb	0	; () banked
  6602  000F42  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  6603  000F44  0100               	movlb	0	; () banked
  6604  000F46  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  6605  000F48  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6606  000F4A  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6607  000F4C  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  6611  000F4E  C0B3  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6612                           
  6613                           ; BSR set to: 0
  6614                           ;CANlib.h: 418: tamp = identifier & 0x00000007;
  6615  000F52  0E07               	movlw	7
  6616  000F54  0100               	movlb	0	; () banked
  6617  000F56  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  6618  000F58  0100               	movlb	0	; () banked
  6619  000F5A  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  6620  000F5C  0E00               	movlw	0
  6621  000F5E  0100               	movlb	0	; () banked
  6622  000F60  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6623  000F62  0100               	movlb	0	; () banked
  6624  000F64  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6625  000F66  0E00               	movlw	0
  6626  000F68  0100               	movlb	0	; () banked
  6627  000F6A  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6628  000F6C  0100               	movlb	0	; () banked
  6629  000F6E  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6630  000F70  0E00               	movlw	0
  6631  000F72  0100               	movlb	0	; () banked
  6632  000F74  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6633  000F76  0100               	movlb	0	; () banked
  6634  000F78  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6635                           
  6636                           ; BSR set to: 0
  6637                           ;CANlib.h: 419: tamp = tamp << 5;
  6638  000F7A  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  6639  000F7E  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6640  000F82  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6641  000F86  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6642  000F8A  0E05               	movlw	5
  6643  000F8C                     u5855:
  6644  000F8C  90D8               	bcf	status,0,c
  6645  000F8E  361F               	rlcf	??_CANsendMessage,f,c
  6646  000F90  3620               	rlcf	??_CANsendMessage+1,f,c
  6647  000F92  3621               	rlcf	??_CANsendMessage+2,f,c
  6648  000F94  3622               	rlcf	??_CANsendMessage+3,f,c
  6649  000F96  2EE8               	decfsz	wreg,f,c
  6650  000F98  D7F9               	goto	u5855
  6651  000F9A  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  6652  000F9E  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6653  000FA2  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6654  000FA6  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  6658  000FAA  010F               	movlb	15	; () banked
  6659  000FAC  5132               	movf	50,w,b	;volatile
  6660  000FAE  0B1F               	andlw	31
  6661  000FB0  010F               	movlb	15	; () banked
  6662  000FB2  6F32               	movwf	50,b	;volatile
  6663                           
  6664                           ; BSR set to: 15
  6665                           ;CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  6666  000FB4  C0B3  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6667  000FB8                     l4624:
  6668                           
  6669                           ;CANlib.h: 422: }
  6670                           ;CANlib.h: 424: if (0b00000001 & flags)
  6671  000FB8  0100               	movlb	0	; () banked
  6672  000FBA  A1B2               	btfss	CANsendMessage@flags& (0+255),0,b
  6673  000FBC  D003               	goto	l392
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  6677  000FBE  010F               	movlb	15	; () banked
  6678  000FC0  8130               	bsf	48,0,b	;volatile
  6679  000FC2  D002               	goto	l393
  6680  000FC4                     l392:
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;CANlib.h: 426: else
  6684                           ;CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  6685  000FC4  010F               	movlb	15	; () banked
  6686  000FC6  9130               	bcf	48,0,b	;volatile
  6687  000FC8                     l393:
  6688                           
  6689                           ; BSR set to: 15
  6690                           ;CANlib.h: 428: if (0b00000010 & flags)
  6691  000FC8  0100               	movlb	0	; () banked
  6692  000FCA  A3B2               	btfss	CANsendMessage@flags& (0+255),1,b
  6693  000FCC  D003               	goto	l394
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  6697  000FCE  010F               	movlb	15	; () banked
  6698  000FD0  8330               	bsf	48,1,b	;volatile
  6699  000FD2  D002               	goto	l4630
  6700  000FD4                     l394:
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;CANlib.h: 430: else
  6704                           ;CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  6705  000FD4  010F               	movlb	15	; () banked
  6706  000FD6  9330               	bcf	48,1,b	;volatile
  6707  000FD8                     l4630:
  6708                           
  6709                           ; BSR set to: 15
  6710                           ;CANlib.h: 433: TXB1D0 = data[0];
  6711  000FD8  C0AF  FFD9         	movff	CANsendMessage@data,fsr2l
  6712  000FDC  C0B0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6713  000FE0  50DF               	movf	indf2,w,c
  6714  000FE2  010F               	movlb	15	; () banked
  6715  000FE4  6F36               	movwf	54,b	;volatile
  6716                           
  6717                           ; BSR set to: 15
  6718                           ;CANlib.h: 434: TXB1D1 = data[1];
  6719  000FE6  0100               	movlb	0	; () banked
  6720  000FE8  EE20 F001          	lfsr	2,1
  6721  000FEC  51AF               	movf	CANsendMessage@data& (0+255),w,b
  6722  000FEE  26D9               	addwf	fsr2l,f,c
  6723  000FF0  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6724  000FF2  22DA               	addwfc	fsr2h,f,c
  6725  000FF4  50DF               	movf	indf2,w,c
  6726  000FF6  010F               	movlb	15	; () banked
  6727  000FF8  6F37               	movwf	55,b	;volatile
  6728                           
  6729                           ; BSR set to: 15
  6730                           ;CANlib.h: 435: TXB1D2 = data[2];
  6731  000FFA  0100               	movlb	0	; () banked
  6732  000FFC  EE20 F002          	lfsr	2,2
  6733  001000  51AF               	movf	CANsendMessage@data& (0+255),w,b
  6734  001002  26D9               	addwf	fsr2l,f,c
  6735  001004  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6736  001006  22DA               	addwfc	fsr2h,f,c
  6737  001008  50DF               	movf	indf2,w,c
  6738  00100A  010F               	movlb	15	; () banked
  6739  00100C  6F38               	movwf	56,b	;volatile
  6740                           
  6741                           ; BSR set to: 15
  6742                           ;CANlib.h: 436: TXB1D3 = data[3];
  6743  00100E  0100               	movlb	0	; () banked
  6744  001010  EE20 F003          	lfsr	2,3
  6745  001014  51AF               	movf	CANsendMessage@data& (0+255),w,b
  6746  001016  26D9               	addwf	fsr2l,f,c
  6747  001018  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6748  00101A  22DA               	addwfc	fsr2h,f,c
  6749  00101C  50DF               	movf	indf2,w,c
  6750  00101E  010F               	movlb	15	; () banked
  6751  001020  6F39               	movwf	57,b	;volatile
  6752                           
  6753                           ; BSR set to: 15
  6754                           ;CANlib.h: 437: TXB1D4 = data[4];
  6755  001022  0100               	movlb	0	; () banked
  6756  001024  EE20 F004          	lfsr	2,4
  6757  001028  51AF               	movf	CANsendMessage@data& (0+255),w,b
  6758  00102A  26D9               	addwf	fsr2l,f,c
  6759  00102C  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6760  00102E  22DA               	addwfc	fsr2h,f,c
  6761  001030  50DF               	movf	indf2,w,c
  6762  001032  010F               	movlb	15	; () banked
  6763  001034  6F3A               	movwf	58,b	;volatile
  6764                           
  6765                           ; BSR set to: 15
  6766                           ;CANlib.h: 438: TXB1D5 = data[5];
  6767  001036  0100               	movlb	0	; () banked
  6768  001038  EE20 F005          	lfsr	2,5
  6769  00103C  51AF               	movf	CANsendMessage@data& (0+255),w,b
  6770  00103E  26D9               	addwf	fsr2l,f,c
  6771  001040  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6772  001042  22DA               	addwfc	fsr2h,f,c
  6773  001044  50DF               	movf	indf2,w,c
  6774  001046  010F               	movlb	15	; () banked
  6775  001048  6F3B               	movwf	59,b	;volatile
  6776                           
  6777                           ; BSR set to: 15
  6778                           ;CANlib.h: 439: TXB1D6 = data[6];
  6779  00104A  0100               	movlb	0	; () banked
  6780  00104C  EE20 F006          	lfsr	2,6
  6781  001050  51AF               	movf	CANsendMessage@data& (0+255),w,b
  6782  001052  26D9               	addwf	fsr2l,f,c
  6783  001054  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6784  001056  22DA               	addwfc	fsr2h,f,c
  6785  001058  50DF               	movf	indf2,w,c
  6786  00105A  010F               	movlb	15	; () banked
  6787  00105C  6F3C               	movwf	60,b	;volatile
  6788                           
  6789                           ; BSR set to: 15
  6790                           ;CANlib.h: 440: TXB1D7 = data[7];
  6791  00105E  0100               	movlb	0	; () banked
  6792  001060  EE20 F007          	lfsr	2,7
  6793  001064  51AF               	movf	CANsendMessage@data& (0+255),w,b
  6794  001066  26D9               	addwf	fsr2l,f,c
  6795  001068  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6796  00106A  22DA               	addwfc	fsr2h,f,c
  6797  00106C  50DF               	movf	indf2,w,c
  6798  00106E  010F               	movlb	15	; () banked
  6799  001070  6F3D               	movwf	61,b	;volatile
  6800                           
  6801                           ; BSR set to: 15
  6802                           ;CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  6803  001072  010F               	movlb	15	; () banked
  6804  001074  8730               	bsf	48,3,b	;volatile
  6805                           
  6806                           ; BSR set to: 15
  6807                           ;CANlib.h: 444: return;
  6808  001076  0012               	return	
  6809  001078                     l382:
  6810                           
  6811                           ; BSR set to: 15
  6812                           ;CANlib.h: 445: }
  6813                           ;CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  6814  001078  010F               	movlb	15	; () banked
  6815  00107A  B720               	btfsc	32,3,b	;volatile
  6816  00107C  0012               	return	
  6817                           
  6818                           ; BSR set to: 15
  6819                           ;CANlib.h: 450: { TXB2DLC = dataLength;
  6820  00107E  C0B1  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6821                           
  6822                           ;CANlib.h: 452: if (0b01000000 & flags)
  6823  001082  0100               	movlb	0	; () banked
  6824  001084  ADB2               	btfss	CANsendMessage@flags& (0+255),6,b
  6825  001086  D003               	goto	l397
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  6829  001088  010F               	movlb	15	; () banked
  6830  00108A  8D25               	bsf	37,6,b	;volatile
  6831  00108C  D002               	goto	l398
  6832  00108E                     l397:
  6833                           
  6834                           ; BSR set to: 0
  6835                           ;CANlib.h: 454: else
  6836                           ;CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  6837  00108E  010F               	movlb	15	; () banked
  6838  001090  9D25               	bcf	37,6,b	;volatile
  6839  001092                     l398:
  6840                           
  6841                           ; BSR set to: 15
  6842                           ;CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  6843  001092  0100               	movlb	0	; () banked
  6844  001094  A7B2               	btfss	CANsendMessage@flags& (0+255),3,b
  6845  001096  D077               	goto	l399
  6846                           
  6847                           ; BSR set to: 0
  6848                           ;CANlib.h: 458: {
  6849                           ;CANlib.h: 459: tamp = identifier & 0x000000FF;
  6850  001098  0100               	movlb	0	; () banked
  6851  00109A  51AB               	movf	CANsendMessage@identifier& (0+255),w,b
  6852  00109C  0100               	movlb	0	; () banked
  6853  00109E  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  6854  0010A0  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6855  0010A2  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6856  0010A4  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6857                           
  6858                           ; BSR set to: 0
  6859                           ;CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  6860  0010A6  C0B3  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6861                           
  6862                           ; BSR set to: 0
  6863                           ;CANlib.h: 462: tamp = identifier & 0x0000FF00;
  6864  0010AA  0E00               	movlw	0
  6865  0010AC  0100               	movlb	0	; () banked
  6866  0010AE  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  6867  0010B0  0100               	movlb	0	; () banked
  6868  0010B2  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  6869  0010B4  0EFF               	movlw	255
  6870  0010B6  0100               	movlb	0	; () banked
  6871  0010B8  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6872  0010BA  0100               	movlb	0	; () banked
  6873  0010BC  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6874  0010BE  0E00               	movlw	0
  6875  0010C0  0100               	movlb	0	; () banked
  6876  0010C2  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6877  0010C4  0100               	movlb	0	; () banked
  6878  0010C6  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6879  0010C8  0E00               	movlw	0
  6880  0010CA  0100               	movlb	0	; () banked
  6881  0010CC  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6882  0010CE  0100               	movlb	0	; () banked
  6883  0010D0  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6884                           
  6885                           ; BSR set to: 0
  6886                           ;CANlib.h: 463: tamp = tamp >> 8;
  6887  0010D2  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  6888  0010D6  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6889  0010DA  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6890  0010DE  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6891  0010E2  C020  F01F         	movff	??_CANsendMessage+1,??_CANsendMessage
  6892  0010E6  C021  F020         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6893  0010EA  C022  F021         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6894  0010EE  6A22               	clrf	??_CANsendMessage+3,c
  6895  0010F0  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  6896  0010F4  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6897  0010F8  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6898  0010FC  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6899                           
  6900                           ; BSR set to: 0
  6901                           ;CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  6902  001100  C0B3  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;CANlib.h: 466: TXB2SIDL = 0x00;
  6906  001104  0E00               	movlw	0
  6907  001106  010F               	movlb	15	; () banked
  6908  001108  6F22               	movwf	34,b	;volatile
  6909                           
  6910                           ; BSR set to: 15
  6911                           ;CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  6912  00110A  010F               	movlb	15	; () banked
  6913  00110C  8722               	bsf	34,3,b	;volatile
  6914                           
  6915                           ; BSR set to: 15
  6916                           ;CANlib.h: 469: if (identifier & 0x00010000)
  6917  00110E  0100               	movlb	0	; () banked
  6918  001110  A1AD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6919  001112  D002               	goto	l400
  6920                           
  6921                           ; BSR set to: 0
  6922                           ;CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  6923  001114  010F               	movlb	15	; () banked
  6924  001116  8122               	bsf	34,0,b	;volatile
  6925  001118                     l400:
  6926                           
  6927                           ;CANlib.h: 471: if (identifier & 0x00020000)
  6928  001118  0100               	movlb	0	; () banked
  6929  00111A  A3AD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6930  00111C  D002               	goto	l401
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  6934  00111E  010F               	movlb	15	; () banked
  6935  001120  8322               	bsf	34,1,b	;volatile
  6936  001122                     l401:
  6937                           
  6938                           ;CANlib.h: 473: if (identifier & 0x00040000)
  6939  001122  0100               	movlb	0	; () banked
  6940  001124  A5AD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6941  001126  D002               	goto	l402
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  6945  001128  010F               	movlb	15	; () banked
  6946  00112A  8B22               	bsf	34,5,b	;volatile
  6947  00112C                     l402:
  6948                           
  6949                           ;CANlib.h: 475: if (identifier & 0x00080000)
  6950  00112C  0100               	movlb	0	; () banked
  6951  00112E  A7AD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6952  001130  D002               	goto	l403
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  6956  001132  010F               	movlb	15	; () banked
  6957  001134  8D22               	bsf	34,6,b	;volatile
  6958  001136                     l403:
  6959                           
  6960                           ;CANlib.h: 477: if (identifier & 0x00100000)
  6961  001136  0100               	movlb	0	; () banked
  6962  001138  A9AD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6963  00113A  D002               	goto	l4680
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  6967  00113C  010F               	movlb	15	; () banked
  6968  00113E  8F22               	bsf	34,7,b	;volatile
  6969  001140                     l4680:
  6970                           
  6971                           ;CANlib.h: 480: tamp = (identifier >> 21);
  6972  001140  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  6973  001144  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6974  001148  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6975  00114C  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6976  001150  0E16               	movlw	22
  6977  001152  D005               	goto	u5960
  6978  001154                     u5965:
  6979  001154  90D8               	bcf	status,0,c
  6980  001156  3222               	rrcf	??_CANsendMessage+3,f,c
  6981  001158  3221               	rrcf	??_CANsendMessage+2,f,c
  6982  00115A  3220               	rrcf	??_CANsendMessage+1,f,c
  6983  00115C  321F               	rrcf	??_CANsendMessage,f,c
  6984  00115E                     u5960:
  6985  00115E  2EE8               	decfsz	wreg,f,c
  6986  001160  D7F9               	goto	u5965
  6987  001162  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  6988  001166  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6989  00116A  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6990  00116E  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6991                           
  6992                           ;CANlib.h: 481: tamp = tamp & 0x000000FF;
  6993  001172  0100               	movlb	0	; () banked
  6994  001174  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  6995  001176  0100               	movlb	0	; () banked
  6996  001178  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  6997  00117A  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6998  00117C  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6999  00117E  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  7003  001180  C0B3  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  7004                           
  7005                           ;CANlib.h: 483: }
  7006  001184  D057               	goto	l4700
  7007  001186                     l399:
  7008                           
  7009                           ; BSR set to: 0
  7010                           ;CANlib.h: 485: else
  7011                           ;CANlib.h: 487: {
  7012                           ;CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  7013  001186  010F               	movlb	15	; () banked
  7014  001188  9722               	bcf	34,3,b	;volatile
  7015                           
  7016                           ; BSR set to: 15
  7017                           ;CANlib.h: 490: tamp = (identifier >> 3);
  7018  00118A  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  7019  00118E  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7020  001192  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7021  001196  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7022  00119A  0E04               	movlw	4
  7023  00119C  D005               	goto	u5970
  7024  00119E                     u5975:
  7025  00119E  90D8               	bcf	status,0,c
  7026  0011A0  3222               	rrcf	??_CANsendMessage+3,f,c
  7027  0011A2  3221               	rrcf	??_CANsendMessage+2,f,c
  7028  0011A4  3220               	rrcf	??_CANsendMessage+1,f,c
  7029  0011A6  321F               	rrcf	??_CANsendMessage,f,c
  7030  0011A8                     u5970:
  7031  0011A8  2EE8               	decfsz	wreg,f,c
  7032  0011AA  D7F9               	goto	u5975
  7033  0011AC  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  7034  0011B0  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7035  0011B4  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7036  0011B8  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7037                           
  7038                           ; BSR set to: 15
  7039                           ;CANlib.h: 491: tamp = tamp & 0x000000FF;
  7040  0011BC  0100               	movlb	0	; () banked
  7041  0011BE  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  7042  0011C0  0100               	movlb	0	; () banked
  7043  0011C2  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  7044  0011C4  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7045  0011C6  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7046  0011C8  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7047                           
  7048                           ; BSR set to: 0
  7049                           ;CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  7050  0011CA  C0B3  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;CANlib.h: 494: tamp = identifier & 0x00000007;
  7054  0011CE  0E07               	movlw	7
  7055  0011D0  0100               	movlb	0	; () banked
  7056  0011D2  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  7057  0011D4  0100               	movlb	0	; () banked
  7058  0011D6  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  7059  0011D8  0E00               	movlw	0
  7060  0011DA  0100               	movlb	0	; () banked
  7061  0011DC  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  7062  0011DE  0100               	movlb	0	; () banked
  7063  0011E0  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  7064  0011E2  0E00               	movlw	0
  7065  0011E4  0100               	movlb	0	; () banked
  7066  0011E6  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  7067  0011E8  0100               	movlb	0	; () banked
  7068  0011EA  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  7069  0011EC  0E00               	movlw	0
  7070  0011EE  0100               	movlb	0	; () banked
  7071  0011F0  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  7072  0011F2  0100               	movlb	0	; () banked
  7073  0011F4  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;CANlib.h: 495: tamp = tamp << 5;
  7077  0011F6  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  7078  0011FA  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7079  0011FE  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7080  001202  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7081  001206  0E05               	movlw	5
  7082  001208                     u5985:
  7083  001208  90D8               	bcf	status,0,c
  7084  00120A  361F               	rlcf	??_CANsendMessage,f,c
  7085  00120C  3620               	rlcf	??_CANsendMessage+1,f,c
  7086  00120E  3621               	rlcf	??_CANsendMessage+2,f,c
  7087  001210  3622               	rlcf	??_CANsendMessage+3,f,c
  7088  001212  2EE8               	decfsz	wreg,f,c
  7089  001214  D7F9               	goto	u5985
  7090  001216  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  7091  00121A  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7092  00121E  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7093  001222  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7094                           
  7095                           ; BSR set to: 0
  7096                           ;CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  7097  001226  010F               	movlb	15	; () banked
  7098  001228  5122               	movf	34,w,b	;volatile
  7099  00122A  0B1F               	andlw	31
  7100  00122C  010F               	movlb	15	; () banked
  7101  00122E  6F22               	movwf	34,b	;volatile
  7102                           
  7103                           ; BSR set to: 15
  7104                           ;CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  7105  001230  C0B3  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  7106  001234                     l4700:
  7107                           
  7108                           ;CANlib.h: 498: }
  7109                           ;CANlib.h: 500: if (0b00000001 & flags)
  7110  001234  0100               	movlb	0	; () banked
  7111  001236  A1B2               	btfss	CANsendMessage@flags& (0+255),0,b
  7112  001238  D003               	goto	l406
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  7116  00123A  010F               	movlb	15	; () banked
  7117  00123C  8120               	bsf	32,0,b	;volatile
  7118  00123E  D002               	goto	l407
  7119  001240                     l406:
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;CANlib.h: 502: else
  7123                           ;CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  7124  001240  010F               	movlb	15	; () banked
  7125  001242  9120               	bcf	32,0,b	;volatile
  7126  001244                     l407:
  7127                           
  7128                           ; BSR set to: 15
  7129                           ;CANlib.h: 504: if (0b00000010 & flags)
  7130  001244  0100               	movlb	0	; () banked
  7131  001246  A3B2               	btfss	CANsendMessage@flags& (0+255),1,b
  7132  001248  D003               	goto	l408
  7133                           
  7134                           ; BSR set to: 0
  7135                           ;CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  7136  00124A  010F               	movlb	15	; () banked
  7137  00124C  8320               	bsf	32,1,b	;volatile
  7138  00124E  D002               	goto	l4706
  7139  001250                     l408:
  7140                           
  7141                           ; BSR set to: 0
  7142                           ;CANlib.h: 506: else
  7143                           ;CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  7144  001250  010F               	movlb	15	; () banked
  7145  001252  9320               	bcf	32,1,b	;volatile
  7146  001254                     l4706:
  7147                           
  7148                           ; BSR set to: 15
  7149                           ;CANlib.h: 509: TXB2D0 = data[0];
  7150  001254  C0AF  FFD9         	movff	CANsendMessage@data,fsr2l
  7151  001258  C0B0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  7152  00125C  50DF               	movf	indf2,w,c
  7153  00125E  010F               	movlb	15	; () banked
  7154  001260  6F26               	movwf	38,b	;volatile
  7155                           
  7156                           ; BSR set to: 15
  7157                           ;CANlib.h: 510: TXB2D1 = data[1];
  7158  001262  0100               	movlb	0	; () banked
  7159  001264  EE20 F001          	lfsr	2,1
  7160  001268  51AF               	movf	CANsendMessage@data& (0+255),w,b
  7161  00126A  26D9               	addwf	fsr2l,f,c
  7162  00126C  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7163  00126E  22DA               	addwfc	fsr2h,f,c
  7164  001270  50DF               	movf	indf2,w,c
  7165  001272  010F               	movlb	15	; () banked
  7166  001274  6F27               	movwf	39,b	;volatile
  7167                           
  7168                           ; BSR set to: 15
  7169                           ;CANlib.h: 511: TXB2D2 = data[2];
  7170  001276  0100               	movlb	0	; () banked
  7171  001278  EE20 F002          	lfsr	2,2
  7172  00127C  51AF               	movf	CANsendMessage@data& (0+255),w,b
  7173  00127E  26D9               	addwf	fsr2l,f,c
  7174  001280  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7175  001282  22DA               	addwfc	fsr2h,f,c
  7176  001284  50DF               	movf	indf2,w,c
  7177  001286  010F               	movlb	15	; () banked
  7178  001288  6F28               	movwf	40,b	;volatile
  7179                           
  7180                           ; BSR set to: 15
  7181                           ;CANlib.h: 512: TXB2D3 = data[3];
  7182  00128A  0100               	movlb	0	; () banked
  7183  00128C  EE20 F003          	lfsr	2,3
  7184  001290  51AF               	movf	CANsendMessage@data& (0+255),w,b
  7185  001292  26D9               	addwf	fsr2l,f,c
  7186  001294  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7187  001296  22DA               	addwfc	fsr2h,f,c
  7188  001298  50DF               	movf	indf2,w,c
  7189  00129A  010F               	movlb	15	; () banked
  7190  00129C  6F29               	movwf	41,b	;volatile
  7191                           
  7192                           ; BSR set to: 15
  7193                           ;CANlib.h: 513: TXB2D4 = data[4];
  7194  00129E  0100               	movlb	0	; () banked
  7195  0012A0  EE20 F004          	lfsr	2,4
  7196  0012A4  51AF               	movf	CANsendMessage@data& (0+255),w,b
  7197  0012A6  26D9               	addwf	fsr2l,f,c
  7198  0012A8  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7199  0012AA  22DA               	addwfc	fsr2h,f,c
  7200  0012AC  50DF               	movf	indf2,w,c
  7201  0012AE  010F               	movlb	15	; () banked
  7202  0012B0  6F2A               	movwf	42,b	;volatile
  7203                           
  7204                           ; BSR set to: 15
  7205                           ;CANlib.h: 514: TXB2D5 = data[5];
  7206  0012B2  0100               	movlb	0	; () banked
  7207  0012B4  EE20 F005          	lfsr	2,5
  7208  0012B8  51AF               	movf	CANsendMessage@data& (0+255),w,b
  7209  0012BA  26D9               	addwf	fsr2l,f,c
  7210  0012BC  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7211  0012BE  22DA               	addwfc	fsr2h,f,c
  7212  0012C0  50DF               	movf	indf2,w,c
  7213  0012C2  010F               	movlb	15	; () banked
  7214  0012C4  6F2B               	movwf	43,b	;volatile
  7215                           
  7216                           ; BSR set to: 15
  7217                           ;CANlib.h: 515: TXB2D6 = data[6];
  7218  0012C6  0100               	movlb	0	; () banked
  7219  0012C8  EE20 F006          	lfsr	2,6
  7220  0012CC  51AF               	movf	CANsendMessage@data& (0+255),w,b
  7221  0012CE  26D9               	addwf	fsr2l,f,c
  7222  0012D0  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7223  0012D2  22DA               	addwfc	fsr2h,f,c
  7224  0012D4  50DF               	movf	indf2,w,c
  7225  0012D6  010F               	movlb	15	; () banked
  7226  0012D8  6F2C               	movwf	44,b	;volatile
  7227                           
  7228                           ; BSR set to: 15
  7229                           ;CANlib.h: 516: TXB2D7 = data[7];
  7230  0012DA  0100               	movlb	0	; () banked
  7231  0012DC  EE20 F007          	lfsr	2,7
  7232  0012E0  51AF               	movf	CANsendMessage@data& (0+255),w,b
  7233  0012E2  26D9               	addwf	fsr2l,f,c
  7234  0012E4  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7235  0012E6  22DA               	addwfc	fsr2h,f,c
  7236  0012E8  50DF               	movf	indf2,w,c
  7237  0012EA  010F               	movlb	15	; () banked
  7238  0012EC  6F2D               	movwf	45,b	;volatile
  7239                           
  7240                           ; BSR set to: 15
  7241                           ;CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  7242  0012EE  010F               	movlb	15	; () banked
  7243  0012F0  8720               	bsf	32,3,b	;volatile
  7244                           
  7245                           ; BSR set to: 15
  7246                           ;CANlib.h: 520: return;
  7247  0012F2  0012               	return	
  7248  0012F4                     __end_of_CANsendMessage:
  7249                           	opt stack 0
  7250                           tblptru	equ	0xFF8
  7251                           tblptrh	equ	0xFF7
  7252                           tblptrl	equ	0xFF6
  7253                           tablat	equ	0xFF5
  7254                           prodh	equ	0xFF4
  7255                           prodl	equ	0xFF3
  7256                           intcon	equ	0xFF2
  7257                           postinc0	equ	0xFEE
  7258                           wreg	equ	0xFE8
  7259                           postdec1	equ	0xFE5
  7260                           fsr1l	equ	0xFE1
  7261                           indf2	equ	0xFDF
  7262                           fsr2h	equ	0xFDA
  7263                           fsr2l	equ	0xFD9
  7264                           status	equ	0xFD8
  7265                           
  7266 ;; *************** function _CANisTxReady *****************
  7267 ;; Defined at:
  7268 ;;		line 1154 in file "CANlib.h"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;		None
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;		None
  7273 ;; Return value:  Size  Location     Type
  7274 ;;                  1    wreg      unsigned char 
  7275 ;; Registers used:
  7276 ;;		wreg, status,2
  7277 ;; Tracked objects:
  7278 ;;		On entry : 0/0
  7279 ;;		On exit  : 0/0
  7280 ;;		Unchanged: 0/0
  7281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7282 ;;      Params:         0       0       0       0
  7283 ;;      Locals:         1       0       0       0
  7284 ;;      Temps:          0       0       0       0
  7285 ;;      Totals:         1       0       0       0
  7286 ;;Total ram usage:        1 bytes
  7287 ;; Hardware stack levels used:    1
  7288 ;; Hardware stack levels required when called:    2
  7289 ;; This function calls:
  7290 ;;		Nothing
  7291 ;; This function is called by:
  7292 ;;		_main
  7293 ;;		_rampe
  7294 ;;		_send_data
  7295 ;;		_battery_measure
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text18
  7300  002686                     __ptext18:
  7301                           	opt stack 0
  7302  002686                     _CANisTxReady:
  7303                           	opt stack 27
  7304                           
  7305                           ;CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TXREQ)
      +                          ;
  7306                           
  7307                           ; BSR set to: 15
  7308                           ;incstack = 0
  7309  002686  0E01               	movlw	1
  7310  002688  6E1F               	movwf	_CANisTxReady$3001,c
  7311  00268A  010F               	movlb	15	; () banked
  7312  00268C  A740               	btfss	64,3,b	;volatile
  7313  00268E  D008               	goto	l560
  7314                           
  7315                           ; BSR set to: 15
  7316  002690  010F               	movlb	15	; () banked
  7317  002692  A730               	btfss	48,3,b	;volatile
  7318  002694  D005               	goto	l560
  7319                           
  7320                           ; BSR set to: 15
  7321  002696  010F               	movlb	15	; () banked
  7322  002698  A720               	btfss	32,3,b	;volatile
  7323  00269A  D002               	goto	l560
  7324                           
  7325                           ; BSR set to: 15
  7326  00269C  0E00               	movlw	0
  7327  00269E  6E1F               	movwf	_CANisTxReady$3001,c
  7328  0026A0                     l560:
  7329                           
  7330                           ; BSR set to: 15
  7331  0026A0  501F               	movf	_CANisTxReady$3001,w,c
  7332  0026A2  0012               	return	
  7333  0026A4                     __end_of_CANisTxReady:
  7334                           	opt stack 0
  7335                           tblptru	equ	0xFF8
  7336                           tblptrh	equ	0xFF7
  7337                           tblptrl	equ	0xFF6
  7338                           tablat	equ	0xFF5
  7339                           prodh	equ	0xFF4
  7340                           prodl	equ	0xFF3
  7341                           intcon	equ	0xFF2
  7342                           postinc0	equ	0xFEE
  7343                           wreg	equ	0xFE8
  7344                           postdec1	equ	0xFE5
  7345                           fsr1l	equ	0xFE1
  7346                           indf2	equ	0xFDF
  7347                           fsr2h	equ	0xFDA
  7348                           fsr2l	equ	0xFD9
  7349                           status	equ	0xFD8
  7350                           
  7351 ;; *************** function _OpenTimer2 *****************
  7352 ;; Defined at:
  7353 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;  config          1    wreg     unsigned char 
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;  config          1   30[COMRAM] unsigned char 
  7358 ;; Return value:  Size  Location     Type
  7359 ;;		None               void
  7360 ;; Registers used:
  7361 ;;		wreg, status,2, status,0
  7362 ;; Tracked objects:
  7363 ;;		On entry : 0/0
  7364 ;;		On exit  : 0/0
  7365 ;;		Unchanged: 0/0
  7366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7367 ;;      Params:         0       0       0       0
  7368 ;;      Locals:         1       0       0       0
  7369 ;;      Temps:          0       0       0       0
  7370 ;;      Totals:         1       0       0       0
  7371 ;;Total ram usage:        1 bytes
  7372 ;; Hardware stack levels used:    1
  7373 ;; Hardware stack levels required when called:    2
  7374 ;; This function calls:
  7375 ;;		Nothing
  7376 ;; This function is called by:
  7377 ;;		_main
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381                           	psect	text19
  7382  0026A4                     __ptext19:
  7383                           	opt stack 0
  7384  0026A4                     _OpenTimer2:
  7385                           	opt stack 28
  7386                           
  7387                           ; BSR set to: 15
  7388                           ;incstack = 0
  7389                           ;OpenTimer2@config stored from wreg
  7390  0026A4  6E1F               	movwf	OpenTimer2@config,c
  7391  0026A6  501F               	movf	OpenTimer2@config,w,c
  7392  0026A8  0BFB               	andlw	251
  7393  0026AA  6ECA               	movwf	4042,c	;volatile
  7394  0026AC  0E00               	movlw	0
  7395  0026AE  6ECC               	movwf	4044,c	;volatile
  7396  0026B0  929E               	bcf	3998,1,c	;volatile
  7397  0026B2  AE1F               	btfss	OpenTimer2@config,7,c
  7398  0026B4  D002               	goto	l770
  7399  0026B6  829D               	bsf	3997,1,c	;volatile
  7400  0026B8  D001               	goto	l771
  7401  0026BA                     l770:
  7402  0026BA  929D               	bcf	3997,1,c	;volatile
  7403  0026BC                     l771:
  7404  0026BC  84CA               	bsf	4042,2,c	;volatile
  7405  0026BE  0012               	return		;funcret
  7406  0026C0                     __end_of_OpenTimer2:
  7407                           	opt stack 0
  7408                           tblptru	equ	0xFF8
  7409                           tblptrh	equ	0xFF7
  7410                           tblptrl	equ	0xFF6
  7411                           tablat	equ	0xFF5
  7412                           prodh	equ	0xFF4
  7413                           prodl	equ	0xFF3
  7414                           intcon	equ	0xFF2
  7415                           postinc0	equ	0xFEE
  7416                           wreg	equ	0xFE8
  7417                           postdec1	equ	0xFE5
  7418                           fsr1l	equ	0xFE1
  7419                           indf2	equ	0xFDF
  7420                           fsr2h	equ	0xFDA
  7421                           fsr2l	equ	0xFD9
  7422                           status	equ	0xFD8
  7423                           
  7424 ;; *************** function _OpenEPWM1 *****************
  7425 ;; Defined at:
  7426 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
  7427 ;; Parameters:    Size  Location     Type
  7428 ;;  period          1    wreg     unsigned char 
  7429 ;; Auto vars:     Size  Location     Type
  7430 ;;  period          1   30[COMRAM] unsigned char 
  7431 ;; Return value:  Size  Location     Type
  7432 ;;		None               void
  7433 ;; Registers used:
  7434 ;;		wreg, status,2
  7435 ;; Tracked objects:
  7436 ;;		On entry : 0/0
  7437 ;;		On exit  : 0/0
  7438 ;;		Unchanged: 0/0
  7439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7440 ;;      Params:         0       0       0       0
  7441 ;;      Locals:         1       0       0       0
  7442 ;;      Temps:          0       0       0       0
  7443 ;;      Totals:         1       0       0       0
  7444 ;;Total ram usage:        1 bytes
  7445 ;; Hardware stack levels used:    1
  7446 ;; Hardware stack levels required when called:    2
  7447 ;; This function calls:
  7448 ;;		Nothing
  7449 ;; This function is called by:
  7450 ;;		_main
  7451 ;; This function uses a non-reentrant model
  7452 ;;
  7453                           
  7454                           	psect	text20
  7455  0026E8                     __ptext20:
  7456                           	opt stack 0
  7457  0026E8                     _OpenEPWM1:
  7458                           	opt stack 28
  7459                           
  7460                           ;incstack = 0
  7461                           ;OpenEPWM1@period stored from wreg
  7462  0026E8  6E1F               	movwf	OpenEPWM1@period,c
  7463  0026EA  0E0C               	movlw	12
  7464  0026EC  6EBA               	movwf	4026,c	;volatile
  7465  0026EE  94CA               	bcf	4042,2,c	;volatile
  7466  0026F0  C01F  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  7467  0026F4  84CA               	bsf	4042,2,c	;volatile
  7468  0026F6  0012               	return		;funcret
  7469  0026F8                     __end_of_OpenEPWM1:
  7470                           	opt stack 0
  7471                           tblptru	equ	0xFF8
  7472                           tblptrh	equ	0xFF7
  7473                           tblptrl	equ	0xFF6
  7474                           tablat	equ	0xFF5
  7475                           prodh	equ	0xFF4
  7476                           prodl	equ	0xFF3
  7477                           intcon	equ	0xFF2
  7478                           postinc0	equ	0xFEE
  7479                           wreg	equ	0xFE8
  7480                           postdec1	equ	0xFE5
  7481                           fsr1l	equ	0xFE1
  7482                           indf2	equ	0xFDF
  7483                           fsr2h	equ	0xFDA
  7484                           fsr2l	equ	0xFD9
  7485                           status	equ	0xFD8
  7486                           
  7487 ;; *************** function _ISR_bassa *****************
  7488 ;; Defined at:
  7489 ;;		line 92 in file "motore.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;		None
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;  i               1   29[COMRAM] unsigned char 
  7494 ;; Return value:  Size  Location     Type
  7495 ;;		None               void
  7496 ;; Registers used:
  7497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7503 ;;      Params:         0       0       0       0
  7504 ;;      Locals:         1       0       0       0
  7505 ;;      Temps:         17       0       0       0
  7506 ;;      Totals:        18       0       0       0
  7507 ;;Total ram usage:       18 bytes
  7508 ;; Hardware stack levels used:    1
  7509 ;; Hardware stack levels required when called:    1
  7510 ;; This function calls:
  7511 ;;		_CANisRxReady
  7512 ;;		_CANreceiveMessage
  7513 ;; This function is called by:
  7514 ;;		Interrupt level 1
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           	psect	intcodelo
  7519  000018                     __pintcodelo:
  7520                           	opt stack 0
  7521  000018                     _ISR_bassa:
  7522                           	opt stack 26
  7523                           
  7524                           ;incstack = 0
  7525  000018  8041               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7526  00001A  CFD8 F00D          	movff	status,??_ISR_bassa
  7527  00001E  CFE8 F00E          	movff	wreg,??_ISR_bassa+1
  7528  000022  CFE0 F00F          	movff	bsr,??_ISR_bassa+2
  7529  000026  CFFA F010          	movff	pclath,??_ISR_bassa+3
  7530  00002A  CFFB F011          	movff	pclatu,??_ISR_bassa+4
  7531  00002E  CFE9 F012          	movff	fsr0l,??_ISR_bassa+5
  7532  000032  CFEA F013          	movff	fsr0h,??_ISR_bassa+6
  7533  000036  CFE1 F014          	movff	fsr1l,??_ISR_bassa+7
  7534  00003A  CFE2 F015          	movff	fsr1h,??_ISR_bassa+8
  7535  00003E  CFD9 F016          	movff	fsr2l,??_ISR_bassa+9
  7536  000042  CFDA F017          	movff	fsr2h,??_ISR_bassa+10
  7537  000046  CFF3 F018          	movff	prodl,??_ISR_bassa+11
  7538  00004A  CFF4 F019          	movff	prodh,??_ISR_bassa+12
  7539  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_bassa+13
  7540  000052  CFF7 F01B          	movff	tblptrh,??_ISR_bassa+14
  7541  000056  CFF8 F01C          	movff	tblptru,??_ISR_bassa+15
  7542  00005A  CFF5 F01D          	movff	tablat,??_ISR_bassa+16
  7543                           
  7544                           ;motore.c: 93: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7545  00005E  A0A4               	btfss	4004,0,c	;volatile
  7546  000060  B2A4               	btfsc	4004,1,c	;volatile
  7547  000062  D001               	goto	i1l3908
  7548  000064  D036               	goto	i1l654
  7549  000066                     i1l3908:
  7550                           
  7551                           ;motore.c: 94: if (CANisRxReady()) {
  7552  000066  EC60  F013         	call	_CANisRxReady	;wreg free
  7553  00006A  0900               	iorlw	0
  7554  00006C  B4D8               	btfsc	status,2,c
  7555  00006E  D02F               	goto	i1l657
  7556                           
  7557                           ;motore.c: 95: CANreceiveMessage(&msg);
  7558  000070  0E8C               	movlw	low _msg
  7559  000072  6E01               	movwf	CANreceiveMessage@msg,c
  7560  000074  0E00               	movlw	high _msg
  7561  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  7562  000078  EC7A  F009         	call	_CANreceiveMessage	;wreg free
  7563                           
  7564                           ;motore.c: 96: remote_frame = msg.RTR;
  7565  00007C  0100               	movlb	0	; () banked
  7566  00007E  A19A               	btfss	(_msg+14)& (0+255),0,b
  7567  000080  D002               	goto	i1u444_20
  7568  000082  8C38               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  7569  000084  D001               	goto	i1l3914
  7570  000086                     i1u444_20:
  7571  000086  9C38               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  7572  000088                     i1l3914:
  7573                           
  7574                           ;motore.c: 97: id = msg.identifier;
  7575  000088  C08C  F028         	movff	_msg,_id	;volatile
  7576  00008C  C08D  F029         	movff	_msg+1,_id+1	;volatile
  7577  000090  C08E  F02A         	movff	_msg+2,_id+2	;volatile
  7578  000094  C08F  F02B         	movff	_msg+3,_id+3	;volatile
  7579                           
  7580                           ;motore.c: 98: for (char i = 0; i < 8; i++) {
  7581  000098  0E00               	movlw	0
  7582  00009A  6E1E               	movwf	ISR_bassa@i,c
  7583  00009C                     i1l3918:
  7584  00009C  0E07               	movlw	7
  7585  00009E  641E               	cpfsgt	ISR_bassa@i,c
  7586  0000A0  D001               	goto	i1l3922
  7587  0000A2  D014               	goto	i1l659
  7588  0000A4                     i1l3922:
  7589                           
  7590                           ;motore.c: 99: data_array[i] = msg.data[i];
  7591  0000A4  501E               	movf	ISR_bassa@i,w,c
  7592  0000A6  0D01               	mullw	1
  7593  0000A8  0E90               	movlw	low (_msg+4)
  7594  0000AA  24F3               	addwf	prodl,w,c
  7595  0000AC  6ED9               	movwf	fsr2l,c
  7596  0000AE  0E00               	movlw	high (_msg+4)
  7597  0000B0  20F4               	addwfc	prodh,w,c
  7598  0000B2  6EDA               	movwf	fsr2h,c
  7599  0000B4  501E               	movf	ISR_bassa@i,w,c
  7600  0000B6  0D01               	mullw	1
  7601  0000B8  0E9B               	movlw	low _data_array
  7602  0000BA  24F3               	addwf	prodl,w,c
  7603  0000BC  6EE1               	movwf	fsr1l,c
  7604  0000BE  0E00               	movlw	high _data_array
  7605  0000C0  20F4               	addwfc	prodh,w,c
  7606  0000C2  6EE2               	movwf	fsr1h,c
  7607  0000C4  CFDF FFE7          	movff	indf2,indf1
  7608  0000C8  2A1E               	incf	ISR_bassa@i,f,c
  7609  0000CA  D7E8               	goto	i1l3918
  7610  0000CC                     i1l659:
  7611                           
  7612                           ;motore.c: 100: }
  7613                           ;motore.c: 101: new_message = 1;
  7614  0000CC  8A38               	bsf	_new_message/(0+8),_new_message& (0+7),c	;volatile
  7615  0000CE                     i1l657:
  7616                           
  7617                           ;motore.c: 102: }
  7618                           ;motore.c: 103: PIR3bits.RXB0IF = 0;
  7619  0000CE  90A4               	bcf	4004,0,c	;volatile
  7620                           
  7621                           ;motore.c: 104: PIR3bits.RXB1IF = 0;
  7622  0000D0  92A4               	bcf	4004,1,c	;volatile
  7623  0000D2                     i1l654:
  7624                           
  7625                           ;motore.c: 105: }
  7626                           ;motore.c: 107: if (PIR2bits.TMR3IF) {
  7627  0000D2  A2A1               	btfss	4001,1,c	;volatile
  7628  0000D4  D00C               	goto	i1l661
  7629                           
  7630                           ;motore.c: 108: timeCounter++;
  7631  0000D6  0E01               	movlw	1
  7632  0000D8  0100               	movlb	0	; () banked
  7633  0000DA  2780               	addwf	_timeCounter& (0+255),f,b	;volatile
  7634  0000DC  0E00               	movlw	0
  7635  0000DE  2381               	addwfc	(_timeCounter+1)& (0+255),f,b	;volatile
  7636  0000E0  2382               	addwfc	(_timeCounter+2)& (0+255),f,b	;volatile
  7637  0000E2  2383               	addwfc	(_timeCounter+3)& (0+255),f,b	;volatile
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;motore.c: 109: TMR3H = 0x63;
  7641  0000E4  0E63               	movlw	99
  7642  0000E6  6EB3               	movwf	4019,c	;volatile
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;motore.c: 110: TMR3L = 0xC0;
  7646  0000E8  0EC0               	movlw	192
  7647  0000EA  6EB2               	movwf	4018,c	;volatile
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;motore.c: 111: PIR2bits.TMR3IF = 0;
  7651  0000EC  92A1               	bcf	4001,1,c	;volatile
  7652  0000EE                     i1l661:
  7653  0000EE  C01D  FFF5         	movff	??_ISR_bassa+16,tablat
  7654  0000F2  C01C  FFF8         	movff	??_ISR_bassa+15,tblptru
  7655  0000F6  C01B  FFF7         	movff	??_ISR_bassa+14,tblptrh
  7656  0000FA  C01A  FFF6         	movff	??_ISR_bassa+13,tblptrl
  7657  0000FE  C019  FFF4         	movff	??_ISR_bassa+12,prodh
  7658  000102  C018  FFF3         	movff	??_ISR_bassa+11,prodl
  7659  000106  C017  FFDA         	movff	??_ISR_bassa+10,fsr2h
  7660  00010A  C016  FFD9         	movff	??_ISR_bassa+9,fsr2l
  7661  00010E  C015  FFE2         	movff	??_ISR_bassa+8,fsr1h
  7662  000112  C014  FFE1         	movff	??_ISR_bassa+7,fsr1l
  7663  000116  C013  FFEA         	movff	??_ISR_bassa+6,fsr0h
  7664  00011A  C012  FFE9         	movff	??_ISR_bassa+5,fsr0l
  7665  00011E  C011  FFFB         	movff	??_ISR_bassa+4,pclatu
  7666  000122  C010  FFFA         	movff	??_ISR_bassa+3,pclath
  7667  000126  C00F  FFE0         	movff	??_ISR_bassa+2,bsr
  7668  00012A  C00E  FFE8         	movff	??_ISR_bassa+1,wreg
  7669  00012E  C00D  FFD8         	movff	??_ISR_bassa,status
  7670  000132  9041               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7671  000134  0010               	retfie	
  7672  000136                     __end_of_ISR_bassa:
  7673                           	opt stack 0
  7674                           pclatu	equ	0xFFB
  7675                           pclath	equ	0xFFA
  7676                           tblptru	equ	0xFF8
  7677                           tblptrh	equ	0xFF7
  7678                           tblptrl	equ	0xFF6
  7679                           tablat	equ	0xFF5
  7680                           prodh	equ	0xFF4
  7681                           prodl	equ	0xFF3
  7682                           intcon	equ	0xFF2
  7683                           postinc0	equ	0xFEE
  7684                           fsr0h	equ	0xFEA
  7685                           fsr0l	equ	0xFE9
  7686                           wreg	equ	0xFE8
  7687                           indf1	equ	0xFE7
  7688                           postdec1	equ	0xFE5
  7689                           fsr1h	equ	0xFE2
  7690                           fsr1l	equ	0xFE1
  7691                           bsr	equ	0xFE0
  7692                           indf2	equ	0xFDF
  7693                           fsr2h	equ	0xFDA
  7694                           fsr2l	equ	0xFD9
  7695                           status	equ	0xFD8
  7696                           
  7697 ;; *************** function _CANreceiveMessage *****************
  7698 ;; Defined at:
  7699 ;;		line 528 in file "CANlib.h"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;  msg             2    0[COMRAM] PTR struct .
  7702 ;;		 -> msg(15), 
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;  tamp            1   11[COMRAM] unsigned char 
  7705 ;;  error           1   10[COMRAM] unsigned char 
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  1    wreg      unsigned char 
  7708 ;; Registers used:
  7709 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7715 ;;      Params:         2       0       0       0
  7716 ;;      Locals:         2       0       0       0
  7717 ;;      Temps:          8       0       0       0
  7718 ;;      Totals:        12       0       0       0
  7719 ;;Total ram usage:       12 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; This function calls:
  7722 ;;		Nothing
  7723 ;; This function is called by:
  7724 ;;		_ISR_bassa
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           	psect	text22
  7729  0012F4                     __ptext22:
  7730                           	opt stack 0
  7731  0012F4                     _CANreceiveMessage:
  7732                           	opt stack 26
  7733                           
  7734                           ;CANlib.h: 530: BYTE tamp;
  7735                           ;CANlib.h: 531: BYTE error = 0;
  7736                           
  7737                           ;incstack = 0
  7738  0012F4  0E00               	movlw	0
  7739  0012F6  6E0B               	movwf	CANreceiveMessage@error,c
  7740                           
  7741                           ;CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7742  0012F8  BE74               	btfsc	3956,7,c	;volatile
  7743                           
  7744                           ;CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7745  0012FA  800B               	bsf	CANreceiveMessage@error,0,c
  7746                           
  7747                           ;CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7748  0012FC  BC74               	btfsc	3956,6,c	;volatile
  7749                           
  7750                           ;CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7751  0012FE  820B               	bsf	CANreceiveMessage@error,1,c
  7752                           
  7753                           ;CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7754  001300  010F               	movlb	15	; () banked
  7755  001302  AF50               	btfss	80,7,b	;volatile
  7756  001304  D143               	goto	i1l414
  7757                           
  7758                           ; BSR set to: 15
  7759                           ;CANlib.h: 541: {
  7760                           ;CANlib.h: 542: msg->identifier = 0;
  7761  001306  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7762  00130A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7763  00130E  6ADE               	clrf	postinc2,c
  7764  001310  6ADE               	clrf	postinc2,c
  7765  001312  6ADE               	clrf	postinc2,c
  7766  001314  6ADD               	clrf	postdec2,c
  7767                           
  7768                           ; BSR set to: 15
  7769                           ;CANlib.h: 543: msg->data[0] =RXB1D0;
  7770  001316  EE20 F004          	lfsr	2,4
  7771  00131A  5001               	movf	CANreceiveMessage@msg,w,c
  7772  00131C  26D9               	addwf	fsr2l,f,c
  7773  00131E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7774  001320  22DA               	addwfc	fsr2h,f,c
  7775  001322  CF56 FFDF          	movff	3926,indf2	;volatile
  7776                           
  7777                           ; BSR set to: 15
  7778                           ;CANlib.h: 544: msg->data[1] =RXB1D1;
  7779  001326  EE20 F005          	lfsr	2,5
  7780  00132A  5001               	movf	CANreceiveMessage@msg,w,c
  7781  00132C  26D9               	addwf	fsr2l,f,c
  7782  00132E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7783  001330  22DA               	addwfc	fsr2h,f,c
  7784  001332  CF57 FFDF          	movff	3927,indf2	;volatile
  7785                           
  7786                           ; BSR set to: 15
  7787                           ;CANlib.h: 545: msg->data[2] =RXB1D2;
  7788  001336  EE20 F006          	lfsr	2,6
  7789  00133A  5001               	movf	CANreceiveMessage@msg,w,c
  7790  00133C  26D9               	addwf	fsr2l,f,c
  7791  00133E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7792  001340  22DA               	addwfc	fsr2h,f,c
  7793  001342  CF58 FFDF          	movff	3928,indf2	;volatile
  7794                           
  7795                           ; BSR set to: 15
  7796                           ;CANlib.h: 546: msg->data[3] =RXB1D3;
  7797  001346  EE20 F007          	lfsr	2,7
  7798  00134A  5001               	movf	CANreceiveMessage@msg,w,c
  7799  00134C  26D9               	addwf	fsr2l,f,c
  7800  00134E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7801  001350  22DA               	addwfc	fsr2h,f,c
  7802  001352  CF59 FFDF          	movff	3929,indf2	;volatile
  7803                           
  7804                           ; BSR set to: 15
  7805                           ;CANlib.h: 547: msg->data[4] =RXB1D4;
  7806  001356  EE20 F008          	lfsr	2,8
  7807  00135A  5001               	movf	CANreceiveMessage@msg,w,c
  7808  00135C  26D9               	addwf	fsr2l,f,c
  7809  00135E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7810  001360  22DA               	addwfc	fsr2h,f,c
  7811  001362  CF5A FFDF          	movff	3930,indf2	;volatile
  7812                           
  7813                           ; BSR set to: 15
  7814                           ;CANlib.h: 548: msg->data[5] =RXB1D5;
  7815  001366  EE20 F009          	lfsr	2,9
  7816  00136A  5001               	movf	CANreceiveMessage@msg,w,c
  7817  00136C  26D9               	addwf	fsr2l,f,c
  7818  00136E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7819  001370  22DA               	addwfc	fsr2h,f,c
  7820  001372  CF5B FFDF          	movff	3931,indf2	;volatile
  7821                           
  7822                           ; BSR set to: 15
  7823                           ;CANlib.h: 549: msg->data[6] =RXB1D6;
  7824  001376  EE20 F00A          	lfsr	2,10
  7825  00137A  5001               	movf	CANreceiveMessage@msg,w,c
  7826  00137C  26D9               	addwf	fsr2l,f,c
  7827  00137E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7828  001380  22DA               	addwfc	fsr2h,f,c
  7829  001382  CF5C FFDF          	movff	3932,indf2	;volatile
  7830                           
  7831                           ; BSR set to: 15
  7832                           ;CANlib.h: 550: msg->data[7] =RXB1D7;
  7833  001386  EE20 F00B          	lfsr	2,11
  7834  00138A  5001               	movf	CANreceiveMessage@msg,w,c
  7835  00138C  26D9               	addwf	fsr2l,f,c
  7836  00138E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7837  001390  22DA               	addwfc	fsr2h,f,c
  7838  001392  CF5D FFDF          	movff	3933,indf2	;volatile
  7839                           
  7840                           ; BSR set to: 15
  7841                           ;CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7842  001396  EE20 F00E          	lfsr	2,14
  7843  00139A  5001               	movf	CANreceiveMessage@msg,w,c
  7844  00139C  26D9               	addwf	fsr2l,f,c
  7845  00139E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7846  0013A0  22DA               	addwfc	fsr2h,f,c
  7847  0013A2  010F               	movlb	15	; () banked
  7848  0013A4  AD55               	btfss	85,6,b	;volatile
  7849  0013A6  D002               	goto	i1u393_20
  7850  0013A8  0E01               	movlw	1
  7851  0013AA  D001               	goto	i1u393_26
  7852  0013AC                     i1u393_20:
  7853  0013AC  0E00               	movlw	0
  7854  0013AE                     i1u393_26:
  7855  0013AE  6EDF               	movwf	indf2,c
  7856                           
  7857                           ; BSR set to: 15
  7858                           ;CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7859  0013B0  EE20 F00D          	lfsr	2,13
  7860  0013B4  5001               	movf	CANreceiveMessage@msg,w,c
  7861  0013B6  26D9               	addwf	fsr2l,f,c
  7862  0013B8  5002               	movf	CANreceiveMessage@msg+1,w,c
  7863  0013BA  22DA               	addwfc	fsr2h,f,c
  7864  0013BC  010F               	movlb	15	; () banked
  7865  0013BE  5155               	movf	85,w,b	;volatile
  7866  0013C0  0B0F               	andlw	15
  7867  0013C2  6EDF               	movwf	indf2,c
  7868                           
  7869                           ; BSR set to: 15
  7870                           ;CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7871  0013C4  EE20 F00C          	lfsr	2,12
  7872  0013C8  5001               	movf	CANreceiveMessage@msg,w,c
  7873  0013CA  26D9               	addwf	fsr2l,f,c
  7874  0013CC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7875  0013CE  22DA               	addwfc	fsr2h,f,c
  7876  0013D0  010F               	movlb	15	; () banked
  7877  0013D2  A752               	btfss	82,3,b	;volatile
  7878  0013D4  D002               	goto	i1u394_20
  7879  0013D6  0E01               	movlw	1
  7880  0013D8  D001               	goto	i1u394_26
  7881  0013DA                     i1u394_20:
  7882  0013DA  0E00               	movlw	0
  7883  0013DC                     i1u394_26:
  7884  0013DC  6EDF               	movwf	indf2,c
  7885                           
  7886                           ; BSR set to: 15
  7887                           ;CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7888  0013DE  010F               	movlb	15	; () banked
  7889  0013E0  B752               	btfsc	82,3,b	;volatile
  7890  0013E2  D044               	goto	i1l3572
  7891                           
  7892                           ; BSR set to: 15
  7893                           ;CANlib.h: 559: {
  7894                           ;CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7895  0013E4  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7896  0013E8  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7897  0013EA  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7898  0013EC  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7899  0013EE  0E03               	movlw	3
  7900  0013F0                     i1u396_25:
  7901  0013F0  90D8               	bcf	status,0,c
  7902  0013F2  3603               	rlcf	??_CANreceiveMessage,f,c
  7903  0013F4  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7904  0013F6  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7905  0013F8  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7906  0013FA  2EE8               	decfsz	wreg,f,c
  7907  0013FC  D7F9               	goto	i1u396_25
  7908  0013FE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7909  001402  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7910  001406  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7911  00140A  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7912  00140E  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7913  001412  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7914                           
  7915                           ; BSR set to: 15
  7916                           ;CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7917  001416  010F               	movlb	15	; () banked
  7918  001418  3952               	swapf	82,w,b	;volatile
  7919  00141A  42E8               	rrncf	wreg,f,c
  7920  00141C  0B07               	andlw	7
  7921  00141E  0B07               	andlw	7
  7922  001420  6E0C               	movwf	CANreceiveMessage@tamp,c
  7923                           
  7924                           ; BSR set to: 15
  7925                           ;CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7926  001422  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7927  001426  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7928  00142A  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7929  00142E  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7930  001432  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7931  001436  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7932  00143A  500C               	movf	CANreceiveMessage@tamp,w,c
  7933  00143C  2403               	addwf	??_CANreceiveMessage,w,c
  7934  00143E  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7935  001440  0E00               	movlw	0
  7936  001442  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7937  001444  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7938  001446  0E00               	movlw	0
  7939  001448  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7940  00144A  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7941  00144C  0E00               	movlw	0
  7942  00144E  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7943  001450  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7944  001452  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7945  001456  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7946  00145A  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7947  00145E  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7948  001462  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7949  001466  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7950                           
  7951                           ;CANlib.h: 563: }
  7952  00146A  D08D               	goto	i1l3598
  7953  00146C                     i1l3572:
  7954                           
  7955                           ; BSR set to: 15
  7956                           ;CANlib.h: 564: else
  7957                           ;CANlib.h: 565: {
  7958                           ;CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7959  00146C  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7960  001470  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7961  001472  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7962  001474  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7963  001476  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7964  00147A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7965  00147E  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7966  001482  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7967  001486  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7968  00148A  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7969                           
  7970                           ; BSR set to: 15
  7971                           ;CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7972  00148E  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7973  001492  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7974  001494  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7975  001496  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7976  001498  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7977  00149C  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7978  0014A0  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7979  0014A4  6A03               	clrf	??_CANreceiveMessage,c
  7980  0014A6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7981  0014AA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7982  0014AE  5003               	movf	??_CANreceiveMessage,w,c
  7983  0014B0  26DE               	addwf	postinc2,f,c
  7984  0014B2  5004               	movf	??_CANreceiveMessage+1,w,c
  7985  0014B4  22DE               	addwfc	postinc2,f,c
  7986  0014B6  5005               	movf	??_CANreceiveMessage+2,w,c
  7987  0014B8  22DE               	addwfc	postinc2,f,c
  7988  0014BA  5006               	movf	??_CANreceiveMessage+3,w,c
  7989  0014BC  22DE               	addwfc	postinc2,f,c
  7990                           
  7991                           ; BSR set to: 15
  7992                           ;CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7993  0014BE  010F               	movlb	15	; () banked
  7994  0014C0  A152               	btfss	82,0,b	;volatile
  7995  0014C2  D00C               	goto	i1l3580
  7996                           
  7997                           ; BSR set to: 15
  7998                           ;CANlib.h: 570: msg->identifier |= 0x00010000;
  7999  0014C4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8000  0014C8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8001  0014CC  0E00               	movlw	0
  8002  0014CE  12DE               	iorwf	postinc2,f,c
  8003  0014D0  0E00               	movlw	0
  8004  0014D2  12DE               	iorwf	postinc2,f,c
  8005  0014D4  0E01               	movlw	1
  8006  0014D6  12DE               	iorwf	postinc2,f,c
  8007  0014D8  0E00               	movlw	0
  8008  0014DA  12DE               	iorwf	postinc2,f,c
  8009  0014DC                     i1l3580:
  8010                           
  8011                           ; BSR set to: 15
  8012                           ;CANlib.h: 571: if (RXB1SIDLbits.EID17)
  8013  0014DC  010F               	movlb	15	; () banked
  8014  0014DE  A352               	btfss	82,1,b	;volatile
  8015  0014E0  D00C               	goto	i1l3584
  8016                           
  8017                           ; BSR set to: 15
  8018                           ;CANlib.h: 572: msg->identifier |= 0x00020000;
  8019  0014E2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8020  0014E6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8021  0014EA  0E00               	movlw	0
  8022  0014EC  12DE               	iorwf	postinc2,f,c
  8023  0014EE  0E00               	movlw	0
  8024  0014F0  12DE               	iorwf	postinc2,f,c
  8025  0014F2  0E02               	movlw	2
  8026  0014F4  12DE               	iorwf	postinc2,f,c
  8027  0014F6  0E00               	movlw	0
  8028  0014F8  12DE               	iorwf	postinc2,f,c
  8029  0014FA                     i1l3584:
  8030                           
  8031                           ; BSR set to: 15
  8032                           ;CANlib.h: 573: if (RXB1SIDLbits.SID0)
  8033  0014FA  010F               	movlb	15	; () banked
  8034  0014FC  AB52               	btfss	82,5,b	;volatile
  8035  0014FE  D00C               	goto	i1l3588
  8036                           
  8037                           ; BSR set to: 15
  8038                           ;CANlib.h: 574: msg->identifier |= 0x00040000;
  8039  001500  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8040  001504  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8041  001508  0E00               	movlw	0
  8042  00150A  12DE               	iorwf	postinc2,f,c
  8043  00150C  0E00               	movlw	0
  8044  00150E  12DE               	iorwf	postinc2,f,c
  8045  001510  0E04               	movlw	4
  8046  001512  12DE               	iorwf	postinc2,f,c
  8047  001514  0E00               	movlw	0
  8048  001516  12DE               	iorwf	postinc2,f,c
  8049  001518                     i1l3588:
  8050                           
  8051                           ; BSR set to: 15
  8052                           ;CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8053  001518  010F               	movlb	15	; () banked
  8054  00151A  AD52               	btfss	82,6,b	;volatile
  8055  00151C  D00C               	goto	i1l3592
  8056                           
  8057                           ; BSR set to: 15
  8058                           ;CANlib.h: 576: msg->identifier |= 0x00080000;
  8059  00151E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8060  001522  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8061  001526  0E00               	movlw	0
  8062  001528  12DE               	iorwf	postinc2,f,c
  8063  00152A  0E00               	movlw	0
  8064  00152C  12DE               	iorwf	postinc2,f,c
  8065  00152E  0E08               	movlw	8
  8066  001530  12DE               	iorwf	postinc2,f,c
  8067  001532  0E00               	movlw	0
  8068  001534  12DE               	iorwf	postinc2,f,c
  8069  001536                     i1l3592:
  8070                           
  8071                           ; BSR set to: 15
  8072                           ;CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8073  001536  010F               	movlb	15	; () banked
  8074  001538  AF52               	btfss	82,7,b	;volatile
  8075  00153A  D00C               	goto	i1l3596
  8076                           
  8077                           ; BSR set to: 15
  8078                           ;CANlib.h: 578: msg->identifier |= 0x00100000;
  8079  00153C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8080  001540  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8081  001544  0E00               	movlw	0
  8082  001546  12DE               	iorwf	postinc2,f,c
  8083  001548  0E00               	movlw	0
  8084  00154A  12DE               	iorwf	postinc2,f,c
  8085  00154C  0E10               	movlw	16
  8086  00154E  12DE               	iorwf	postinc2,f,c
  8087  001550  0E00               	movlw	0
  8088  001552  12DE               	iorwf	postinc2,f,c
  8089  001554                     i1l3596:
  8090                           
  8091                           ; BSR set to: 15
  8092                           ;CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8093  001554  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8094  001558  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8095  00155A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8096  00155C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8097  00155E  0E15               	movlw	21
  8098  001560                     i1u402_25:
  8099  001560  90D8               	bcf	status,0,c
  8100  001562  3603               	rlcf	??_CANreceiveMessage,f,c
  8101  001564  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8102  001566  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8103  001568  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8104  00156A  2EE8               	decfsz	wreg,f,c
  8105  00156C  D7F9               	goto	i1u402_25
  8106  00156E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8107  001572  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8108  001576  5003               	movf	??_CANreceiveMessage,w,c
  8109  001578  12DE               	iorwf	postinc2,f,c
  8110  00157A  5004               	movf	??_CANreceiveMessage+1,w,c
  8111  00157C  12DE               	iorwf	postinc2,f,c
  8112  00157E  5005               	movf	??_CANreceiveMessage+2,w,c
  8113  001580  12DE               	iorwf	postinc2,f,c
  8114  001582  5006               	movf	??_CANreceiveMessage+3,w,c
  8115  001584  12DE               	iorwf	postinc2,f,c
  8116  001586                     i1l3598:
  8117                           
  8118                           ; BSR set to: 15
  8119                           ;CANlib.h: 581: }
  8120                           ;CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8121  001586  010F               	movlb	15	; () banked
  8122  001588  9F50               	bcf	80,7,b	;volatile
  8123                           
  8124                           ; BSR set to: 15
  8125                           ;CANlib.h: 584: return (error);
  8126                           ;	Return value of _CANreceiveMessage is never used
  8127  00158A  0012               	return	
  8128  00158C                     i1l414:
  8129                           
  8130                           ; BSR set to: 15
  8131                           ;CANlib.h: 585: }
  8132                           ;CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8133  00158C  AE60               	btfss	3936,7,c	;volatile
  8134  00158E  0012               	return	
  8135                           
  8136                           ; BSR set to: 15
  8137                           ;CANlib.h: 588: {
  8138                           ;CANlib.h: 589: msg->identifier = 0;
  8139  001590  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8140  001594  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8141  001598  6ADE               	clrf	postinc2,c
  8142  00159A  6ADE               	clrf	postinc2,c
  8143  00159C  6ADE               	clrf	postinc2,c
  8144  00159E  6ADD               	clrf	postdec2,c
  8145                           
  8146                           ; BSR set to: 15
  8147                           ;CANlib.h: 590: msg->data[0] =RXB0D0;
  8148  0015A0  EE20 F004          	lfsr	2,4
  8149  0015A4  5001               	movf	CANreceiveMessage@msg,w,c
  8150  0015A6  26D9               	addwf	fsr2l,f,c
  8151  0015A8  5002               	movf	CANreceiveMessage@msg+1,w,c
  8152  0015AA  22DA               	addwfc	fsr2h,f,c
  8153  0015AC  CF66 FFDF          	movff	3942,indf2	;volatile
  8154                           
  8155                           ; BSR set to: 15
  8156                           ;CANlib.h: 591: msg->data[1] =RXB0D1;
  8157  0015B0  EE20 F005          	lfsr	2,5
  8158  0015B4  5001               	movf	CANreceiveMessage@msg,w,c
  8159  0015B6  26D9               	addwf	fsr2l,f,c
  8160  0015B8  5002               	movf	CANreceiveMessage@msg+1,w,c
  8161  0015BA  22DA               	addwfc	fsr2h,f,c
  8162  0015BC  CF67 FFDF          	movff	3943,indf2	;volatile
  8163                           
  8164                           ; BSR set to: 15
  8165                           ;CANlib.h: 592: msg->data[2] =RXB0D2;
  8166  0015C0  EE20 F006          	lfsr	2,6
  8167  0015C4  5001               	movf	CANreceiveMessage@msg,w,c
  8168  0015C6  26D9               	addwf	fsr2l,f,c
  8169  0015C8  5002               	movf	CANreceiveMessage@msg+1,w,c
  8170  0015CA  22DA               	addwfc	fsr2h,f,c
  8171  0015CC  CF68 FFDF          	movff	3944,indf2	;volatile
  8172                           
  8173                           ; BSR set to: 15
  8174                           ;CANlib.h: 593: msg->data[3] =RXB0D3;
  8175  0015D0  EE20 F007          	lfsr	2,7
  8176  0015D4  5001               	movf	CANreceiveMessage@msg,w,c
  8177  0015D6  26D9               	addwf	fsr2l,f,c
  8178  0015D8  5002               	movf	CANreceiveMessage@msg+1,w,c
  8179  0015DA  22DA               	addwfc	fsr2h,f,c
  8180  0015DC  CF69 FFDF          	movff	3945,indf2	;volatile
  8181                           
  8182                           ; BSR set to: 15
  8183                           ;CANlib.h: 594: msg->data[4] =RXB0D4;
  8184  0015E0  EE20 F008          	lfsr	2,8
  8185  0015E4  5001               	movf	CANreceiveMessage@msg,w,c
  8186  0015E6  26D9               	addwf	fsr2l,f,c
  8187  0015E8  5002               	movf	CANreceiveMessage@msg+1,w,c
  8188  0015EA  22DA               	addwfc	fsr2h,f,c
  8189  0015EC  CF6A FFDF          	movff	3946,indf2	;volatile
  8190                           
  8191                           ; BSR set to: 15
  8192                           ;CANlib.h: 595: msg->data[5] =RXB0D5;
  8193  0015F0  EE20 F009          	lfsr	2,9
  8194  0015F4  5001               	movf	CANreceiveMessage@msg,w,c
  8195  0015F6  26D9               	addwf	fsr2l,f,c
  8196  0015F8  5002               	movf	CANreceiveMessage@msg+1,w,c
  8197  0015FA  22DA               	addwfc	fsr2h,f,c
  8198  0015FC  CF6B FFDF          	movff	3947,indf2	;volatile
  8199                           
  8200                           ; BSR set to: 15
  8201                           ;CANlib.h: 596: msg->data[6] =RXB0D6;
  8202  001600  EE20 F00A          	lfsr	2,10
  8203  001604  5001               	movf	CANreceiveMessage@msg,w,c
  8204  001606  26D9               	addwf	fsr2l,f,c
  8205  001608  5002               	movf	CANreceiveMessage@msg+1,w,c
  8206  00160A  22DA               	addwfc	fsr2h,f,c
  8207  00160C  CF6C FFDF          	movff	3948,indf2	;volatile
  8208                           
  8209                           ; BSR set to: 15
  8210                           ;CANlib.h: 597: msg->data[7] =RXB0D7;
  8211  001610  EE20 F00B          	lfsr	2,11
  8212  001614  5001               	movf	CANreceiveMessage@msg,w,c
  8213  001616  26D9               	addwf	fsr2l,f,c
  8214  001618  5002               	movf	CANreceiveMessage@msg+1,w,c
  8215  00161A  22DA               	addwfc	fsr2h,f,c
  8216  00161C  CF6D FFDF          	movff	3949,indf2	;volatile
  8217                           
  8218                           ; BSR set to: 15
  8219                           ;CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8220  001620  EE20 F00E          	lfsr	2,14
  8221  001624  5001               	movf	CANreceiveMessage@msg,w,c
  8222  001626  26D9               	addwf	fsr2l,f,c
  8223  001628  5002               	movf	CANreceiveMessage@msg+1,w,c
  8224  00162A  22DA               	addwfc	fsr2h,f,c
  8225  00162C  AC65               	btfss	3941,6,c	;volatile
  8226  00162E  D002               	goto	i1u404_20
  8227  001630  0E01               	movlw	1
  8228  001632  D001               	goto	i1u404_26
  8229  001634                     i1u404_20:
  8230  001634  0E00               	movlw	0
  8231  001636                     i1u404_26:
  8232  001636  6EDF               	movwf	indf2,c
  8233                           
  8234                           ; BSR set to: 15
  8235                           ;CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8236  001638  EE20 F00D          	lfsr	2,13
  8237  00163C  5001               	movf	CANreceiveMessage@msg,w,c
  8238  00163E  26D9               	addwf	fsr2l,f,c
  8239  001640  5002               	movf	CANreceiveMessage@msg+1,w,c
  8240  001642  22DA               	addwfc	fsr2h,f,c
  8241  001644  5065               	movf	3941,w,c	;volatile
  8242  001646  0B0F               	andlw	15
  8243  001648  6EDF               	movwf	indf2,c
  8244                           
  8245                           ; BSR set to: 15
  8246                           ;CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8247  00164A  EE20 F00C          	lfsr	2,12
  8248  00164E  5001               	movf	CANreceiveMessage@msg,w,c
  8249  001650  26D9               	addwf	fsr2l,f,c
  8250  001652  5002               	movf	CANreceiveMessage@msg+1,w,c
  8251  001654  22DA               	addwfc	fsr2h,f,c
  8252  001656  A662               	btfss	3938,3,c	;volatile
  8253  001658  D002               	goto	i1u405_20
  8254  00165A  0E01               	movlw	1
  8255  00165C  D001               	goto	i1u405_26
  8256  00165E                     i1u405_20:
  8257  00165E  0E00               	movlw	0
  8258  001660                     i1u405_26:
  8259  001660  6EDF               	movwf	indf2,c
  8260                           
  8261                           ; BSR set to: 15
  8262                           ;CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8263  001662  B662               	btfsc	3938,3,c	;volatile
  8264  001664  D043               	goto	i1l3634
  8265                           
  8266                           ; BSR set to: 15
  8267                           ;CANlib.h: 606: {
  8268                           ;CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8269  001666  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8270  00166A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8271  00166C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8272  00166E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8273  001670  0E03               	movlw	3
  8274  001672                     i1u407_25:
  8275  001672  90D8               	bcf	status,0,c
  8276  001674  3603               	rlcf	??_CANreceiveMessage,f,c
  8277  001676  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8278  001678  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8279  00167A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8280  00167C  2EE8               	decfsz	wreg,f,c
  8281  00167E  D7F9               	goto	i1u407_25
  8282  001680  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8283  001684  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8284  001688  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8285  00168C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8286  001690  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8287  001694  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8288                           
  8289                           ; BSR set to: 15
  8290                           ;CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8291  001698  3862               	swapf	3938,w,c	;volatile
  8292  00169A  42E8               	rrncf	wreg,f,c
  8293  00169C  0B07               	andlw	7
  8294  00169E  0B07               	andlw	7
  8295  0016A0  6E0C               	movwf	CANreceiveMessage@tamp,c
  8296                           
  8297                           ; BSR set to: 15
  8298                           ;CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8299  0016A2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8300  0016A6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8301  0016AA  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8302  0016AE  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8303  0016B2  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8304  0016B6  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8305  0016BA  500C               	movf	CANreceiveMessage@tamp,w,c
  8306  0016BC  2403               	addwf	??_CANreceiveMessage,w,c
  8307  0016BE  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8308  0016C0  0E00               	movlw	0
  8309  0016C2  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8310  0016C4  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8311  0016C6  0E00               	movlw	0
  8312  0016C8  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8313  0016CA  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8314  0016CC  0E00               	movlw	0
  8315  0016CE  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8316  0016D0  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8317  0016D2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8318  0016D6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8319  0016DA  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8320  0016DE  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8321  0016E2  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8322  0016E6  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8323                           
  8324                           ;CANlib.h: 610: }
  8325  0016EA  D088               	goto	i1l3660
  8326  0016EC                     i1l3634:
  8327                           
  8328                           ; BSR set to: 15
  8329                           ;CANlib.h: 611: else
  8330                           ;CANlib.h: 612: {
  8331                           ;CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8332  0016EC  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8333  0016F0  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8334  0016F2  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8335  0016F4  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8336  0016F6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8337  0016FA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8338  0016FE  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8339  001702  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8340  001706  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8341  00170A  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8342                           
  8343                           ; BSR set to: 15
  8344                           ;CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8345  00170E  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8346  001712  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8347  001714  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8348  001716  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8349  001718  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8350  00171C  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8351  001720  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8352  001724  6A03               	clrf	??_CANreceiveMessage,c
  8353  001726  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8354  00172A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8355  00172E  5003               	movf	??_CANreceiveMessage,w,c
  8356  001730  26DE               	addwf	postinc2,f,c
  8357  001732  5004               	movf	??_CANreceiveMessage+1,w,c
  8358  001734  22DE               	addwfc	postinc2,f,c
  8359  001736  5005               	movf	??_CANreceiveMessage+2,w,c
  8360  001738  22DE               	addwfc	postinc2,f,c
  8361  00173A  5006               	movf	??_CANreceiveMessage+3,w,c
  8362  00173C  22DE               	addwfc	postinc2,f,c
  8363                           
  8364                           ; BSR set to: 15
  8365                           ;CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8366  00173E  A062               	btfss	3938,0,c	;volatile
  8367  001740  D00C               	goto	i1l3642
  8368                           
  8369                           ; BSR set to: 15
  8370                           ;CANlib.h: 617: msg->identifier |= 0x00010000;
  8371  001742  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8372  001746  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8373  00174A  0E00               	movlw	0
  8374  00174C  12DE               	iorwf	postinc2,f,c
  8375  00174E  0E00               	movlw	0
  8376  001750  12DE               	iorwf	postinc2,f,c
  8377  001752  0E01               	movlw	1
  8378  001754  12DE               	iorwf	postinc2,f,c
  8379  001756  0E00               	movlw	0
  8380  001758  12DE               	iorwf	postinc2,f,c
  8381  00175A                     i1l3642:
  8382                           
  8383                           ; BSR set to: 15
  8384                           ;CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8385  00175A  A262               	btfss	3938,1,c	;volatile
  8386  00175C  D00C               	goto	i1l3646
  8387                           
  8388                           ; BSR set to: 15
  8389                           ;CANlib.h: 619: msg->identifier |= 0x00020000;
  8390  00175E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8391  001762  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8392  001766  0E00               	movlw	0
  8393  001768  12DE               	iorwf	postinc2,f,c
  8394  00176A  0E00               	movlw	0
  8395  00176C  12DE               	iorwf	postinc2,f,c
  8396  00176E  0E02               	movlw	2
  8397  001770  12DE               	iorwf	postinc2,f,c
  8398  001772  0E00               	movlw	0
  8399  001774  12DE               	iorwf	postinc2,f,c
  8400  001776                     i1l3646:
  8401                           
  8402                           ; BSR set to: 15
  8403                           ;CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8404  001776  AA62               	btfss	3938,5,c	;volatile
  8405  001778  D00C               	goto	i1l3650
  8406                           
  8407                           ; BSR set to: 15
  8408                           ;CANlib.h: 621: msg->identifier |= 0x00040000;
  8409  00177A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8410  00177E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8411  001782  0E00               	movlw	0
  8412  001784  12DE               	iorwf	postinc2,f,c
  8413  001786  0E00               	movlw	0
  8414  001788  12DE               	iorwf	postinc2,f,c
  8415  00178A  0E04               	movlw	4
  8416  00178C  12DE               	iorwf	postinc2,f,c
  8417  00178E  0E00               	movlw	0
  8418  001790  12DE               	iorwf	postinc2,f,c
  8419  001792                     i1l3650:
  8420                           
  8421                           ; BSR set to: 15
  8422                           ;CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8423  001792  AC62               	btfss	3938,6,c	;volatile
  8424  001794  D00C               	goto	i1l3654
  8425                           
  8426                           ; BSR set to: 15
  8427                           ;CANlib.h: 623: msg->identifier |= 0x00080000;
  8428  001796  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8429  00179A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8430  00179E  0E00               	movlw	0
  8431  0017A0  12DE               	iorwf	postinc2,f,c
  8432  0017A2  0E00               	movlw	0
  8433  0017A4  12DE               	iorwf	postinc2,f,c
  8434  0017A6  0E08               	movlw	8
  8435  0017A8  12DE               	iorwf	postinc2,f,c
  8436  0017AA  0E00               	movlw	0
  8437  0017AC  12DE               	iorwf	postinc2,f,c
  8438  0017AE                     i1l3654:
  8439                           
  8440                           ; BSR set to: 15
  8441                           ;CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8442  0017AE  AE62               	btfss	3938,7,c	;volatile
  8443  0017B0  D00C               	goto	i1l3658
  8444                           
  8445                           ; BSR set to: 15
  8446                           ;CANlib.h: 625: msg->identifier |= 0x00100000;
  8447  0017B2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8448  0017B6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8449  0017BA  0E00               	movlw	0
  8450  0017BC  12DE               	iorwf	postinc2,f,c
  8451  0017BE  0E00               	movlw	0
  8452  0017C0  12DE               	iorwf	postinc2,f,c
  8453  0017C2  0E10               	movlw	16
  8454  0017C4  12DE               	iorwf	postinc2,f,c
  8455  0017C6  0E00               	movlw	0
  8456  0017C8  12DE               	iorwf	postinc2,f,c
  8457  0017CA                     i1l3658:
  8458                           
  8459                           ; BSR set to: 15
  8460                           ;CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8461  0017CA  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8462  0017CE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8463  0017D0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8464  0017D2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8465  0017D4  0E15               	movlw	21
  8466  0017D6                     i1u413_25:
  8467  0017D6  90D8               	bcf	status,0,c
  8468  0017D8  3603               	rlcf	??_CANreceiveMessage,f,c
  8469  0017DA  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8470  0017DC  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8471  0017DE  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8472  0017E0  2EE8               	decfsz	wreg,f,c
  8473  0017E2  D7F9               	goto	i1u413_25
  8474  0017E4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8475  0017E8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8476  0017EC  5003               	movf	??_CANreceiveMessage,w,c
  8477  0017EE  12DE               	iorwf	postinc2,f,c
  8478  0017F0  5004               	movf	??_CANreceiveMessage+1,w,c
  8479  0017F2  12DE               	iorwf	postinc2,f,c
  8480  0017F4  5005               	movf	??_CANreceiveMessage+2,w,c
  8481  0017F6  12DE               	iorwf	postinc2,f,c
  8482  0017F8  5006               	movf	??_CANreceiveMessage+3,w,c
  8483  0017FA  12DE               	iorwf	postinc2,f,c
  8484  0017FC                     i1l3660:
  8485                           
  8486                           ; BSR set to: 15
  8487                           ;CANlib.h: 629: }
  8488                           ;CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8489  0017FC  9E60               	bcf	3936,7,c	;volatile
  8490                           
  8491                           ; BSR set to: 15
  8492                           ;CANlib.h: 632: return (error);
  8493                           ;	Return value of _CANreceiveMessage is never used
  8494  0017FE  0012               	return	
  8495  001800                     __end_of_CANreceiveMessage:
  8496                           	opt stack 0
  8497                           pclatu	equ	0xFFB
  8498                           pclath	equ	0xFFA
  8499                           tblptru	equ	0xFF8
  8500                           tblptrh	equ	0xFF7
  8501                           tblptrl	equ	0xFF6
  8502                           tablat	equ	0xFF5
  8503                           prodh	equ	0xFF4
  8504                           prodl	equ	0xFF3
  8505                           intcon	equ	0xFF2
  8506                           postinc0	equ	0xFEE
  8507                           fsr0h	equ	0xFEA
  8508                           fsr0l	equ	0xFE9
  8509                           wreg	equ	0xFE8
  8510                           indf1	equ	0xFE7
  8511                           postdec1	equ	0xFE5
  8512                           fsr1h	equ	0xFE2
  8513                           fsr1l	equ	0xFE1
  8514                           bsr	equ	0xFE0
  8515                           indf2	equ	0xFDF
  8516                           postinc2	equ	0xFDE
  8517                           postdec2	equ	0xFDD
  8518                           fsr2h	equ	0xFDA
  8519                           fsr2l	equ	0xFD9
  8520                           status	equ	0xFD8
  8521                           
  8522 ;; *************** function _CANisRxReady *****************
  8523 ;; Defined at:
  8524 ;;		line 1163 in file "CANlib.h"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;		None
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;		None
  8529 ;; Return value:  Size  Location     Type
  8530 ;;                  1    wreg      unsigned char 
  8531 ;; Registers used:
  8532 ;;		wreg, status,2
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8538 ;;      Params:         0       0       0       0
  8539 ;;      Locals:         1       0       0       0
  8540 ;;      Temps:          0       0       0       0
  8541 ;;      Totals:         1       0       0       0
  8542 ;;Total ram usage:        1 bytes
  8543 ;; Hardware stack levels used:    1
  8544 ;; This function calls:
  8545 ;;		Nothing
  8546 ;; This function is called by:
  8547 ;;		_ISR_bassa
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           
  8551                           	psect	text23
  8552  0026C0                     __ptext23:
  8553                           	opt stack 0
  8554  0026C0                     _CANisRxReady:
  8555                           	opt stack 26
  8556                           
  8557                           ;CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8558                           
  8559                           ; BSR set to: 15
  8560                           ;incstack = 0
  8561  0026C0  0E01               	movlw	1
  8562  0026C2  6E01               	movwf	_CANisRxReady$3003,c
  8563  0026C4  BE60               	btfsc	3936,7,c	;volatile
  8564  0026C6  D005               	goto	i1l565
  8565  0026C8  010F               	movlb	15	; () banked
  8566  0026CA  BF50               	btfsc	80,7,b	;volatile
  8567  0026CC  D002               	goto	i1l565
  8568                           
  8569                           ; BSR set to: 15
  8570  0026CE  0E00               	movlw	0
  8571  0026D0  6E01               	movwf	_CANisRxReady$3003,c
  8572  0026D2                     i1l565:
  8573  0026D2  5001               	movf	_CANisRxReady$3003,w,c
  8574  0026D4  0012               	return	
  8575  0026D6                     __end_of_CANisRxReady:
  8576                           	opt stack 0
  8577  0000                     pclatu	equ	0xFFB
  8578                           pclath	equ	0xFFA
  8579                           tblptru	equ	0xFF8
  8580                           tblptrh	equ	0xFF7
  8581                           tblptrl	equ	0xFF6
  8582                           tablat	equ	0xFF5
  8583                           prodh	equ	0xFF4
  8584                           prodl	equ	0xFF3
  8585                           intcon	equ	0xFF2
  8586                           postinc0	equ	0xFEE
  8587                           fsr0h	equ	0xFEA
  8588                           fsr0l	equ	0xFE9
  8589                           wreg	equ	0xFE8
  8590                           indf1	equ	0xFE7
  8591                           postdec1	equ	0xFE5
  8592                           fsr1h	equ	0xFE2
  8593                           fsr1l	equ	0xFE1
  8594                           bsr	equ	0xFE0
  8595                           indf2	equ	0xFDF
  8596                           postinc2	equ	0xFDE
  8597                           postdec2	equ	0xFDD
  8598                           fsr2h	equ	0xFDA
  8599                           fsr2l	equ	0xFD9
  8600                           status	equ	0xFD8
  8601                           pclatu	equ	0xFFB
  8602                           pclath	equ	0xFFA
  8603                           tblptru	equ	0xFF8
  8604                           tblptrh	equ	0xFF7
  8605                           tblptrl	equ	0xFF6
  8606                           tablat	equ	0xFF5
  8607                           prodh	equ	0xFF4
  8608                           prodl	equ	0xFF3
  8609                           intcon	equ	0xFF2
  8610                           postinc0	equ	0xFEE
  8611                           fsr0h	equ	0xFEA
  8612                           fsr0l	equ	0xFE9
  8613                           wreg	equ	0xFE8
  8614                           indf1	equ	0xFE7
  8615                           postdec1	equ	0xFE5
  8616                           fsr1h	equ	0xFE2
  8617                           fsr1l	equ	0xFE1
  8618                           bsr	equ	0xFE0
  8619                           indf2	equ	0xFDF
  8620                           postinc2	equ	0xFDE
  8621                           postdec2	equ	0xFDD
  8622                           fsr2h	equ	0xFDA
  8623                           fsr2l	equ	0xFD9
  8624                           status	equ	0xFD8
  8625                           
  8626                           	psect	rparam
  8627  0000                     pclatu	equ	0xFFB
  8628                           pclath	equ	0xFFA
  8629                           tblptru	equ	0xFF8
  8630                           tblptrh	equ	0xFF7
  8631                           tblptrl	equ	0xFF6
  8632                           tablat	equ	0xFF5
  8633                           prodh	equ	0xFF4
  8634                           prodl	equ	0xFF3
  8635                           intcon	equ	0xFF2
  8636                           postinc0	equ	0xFEE
  8637                           fsr0h	equ	0xFEA
  8638                           fsr0l	equ	0xFE9
  8639                           wreg	equ	0xFE8
  8640                           indf1	equ	0xFE7
  8641                           postdec1	equ	0xFE5
  8642                           fsr1h	equ	0xFE2
  8643                           fsr1l	equ	0xFE1
  8644                           bsr	equ	0xFE0
  8645                           indf2	equ	0xFDF
  8646                           postinc2	equ	0xFDE
  8647                           postdec2	equ	0xFDD
  8648                           fsr2h	equ	0xFDA
  8649                           fsr2l	equ	0xFD9
  8650                           status	equ	0xFD8
  8651                           
  8652                           	psect	temp
  8653  000041                     btemp:
  8654                           	opt stack 0
  8655  000041                     	ds	1
  8656  0000                     int$flags	set	btemp
  8657                           pclatu	equ	0xFFB
  8658                           pclath	equ	0xFFA
  8659                           tblptru	equ	0xFF8
  8660                           tblptrh	equ	0xFF7
  8661                           tblptrl	equ	0xFF6
  8662                           tablat	equ	0xFF5
  8663                           prodh	equ	0xFF4
  8664                           prodl	equ	0xFF3
  8665                           intcon	equ	0xFF2
  8666                           postinc0	equ	0xFEE
  8667                           fsr0h	equ	0xFEA
  8668                           fsr0l	equ	0xFE9
  8669                           wreg	equ	0xFE8
  8670                           indf1	equ	0xFE7
  8671                           postdec1	equ	0xFE5
  8672                           fsr1h	equ	0xFE2
  8673                           fsr1l	equ	0xFE1
  8674                           bsr	equ	0xFE0
  8675                           indf2	equ	0xFDF
  8676                           postinc2	equ	0xFDE
  8677                           postdec2	equ	0xFDD
  8678                           fsr2h	equ	0xFDA
  8679                           fsr2l	equ	0xFD9
  8680                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         95
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      64
    BANK0           160     30     105
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array_debug(BANK0[8]), data_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    _send_data->_CANsendMessage
    _rampe->_CANsendMessage
    _rampe->_SetDCEPWM1
    _rampe->___lwdiv
    _rampe->_abs
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->_CANsendMessage
    ___wmul->___lwdiv

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _rampe->_CANsendMessage
    _configurazione_iniziale->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->___awdiv
    ___wmul->___lwdiv
    ___awdiv->___wmul

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   31790
                                             21 BANK0      9     9      0
                       _CANisTxReady
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                     _SetOutputEPWM1
                    _battery_measure
                    _can_interpreter
            _configurazione_iniziale
                           _delay_ms
                              _rampe
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    4313
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (1) _rampe                                                8     8      0    6250
                                             12 BANK0      8     8      0
                       _CANisTxReady
                     _CANsendMessage
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___lwdiv
                             ___wmul
                                _abs
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     130
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     549
                                             30 COMRAM     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _SetDCEPWM1                                           6     4      2     176
                                             30 COMRAM     4     2      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    9710
                      _CANInitialize
                     _SetOutputEPWM1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1110
                                              9 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _SetOutputEPWM1                                       2     1      1     388
                                             30 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                              9 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             30 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             30 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             30 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0    5606
                       _CANisTxReady
                     _CANsendMessage
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     694
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     599
                                              9 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4289
                                             30 COMRAM     4     4      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      44
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      22
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           18    18      0    1251
                                             12 COMRAM    18    18      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetOutputEPWM1
   _battery_measure
     _CANisTxReady
     _CANsendMessage
     ___awdiv
       ___wmul (ARG)
         ___lwdiv (ARG)
     ___wmul
       ___lwdiv (ARG)
   _can_interpreter
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _SetOutputEPWM1
     _delay_ms
       ___wmul
         ___lwdiv (ARG)
   _delay_ms
     ___wmul
       ___lwdiv (ARG)
   _rampe
     _CANisTxReady
     _CANsendMessage
     _SetDCEPWM1
     _SetOutputEPWM1
     ___lwdiv
     ___wmul
       ___lwdiv (ARG)
     _abs
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1E      69       4       65.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     23      40       1       68.1%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A9       9        0.0%
DATA                 0      0      A9      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Feb 28 17:02:58 2016

            __end_of_CANSetFilter 0B80                      ___awdiv@sign 00B9  
                              _id 0028                                bsr 000FE0  
             ___wmul@multiplicand 00B0                       __CFG_BORV$3 000000  
                  _SetOutputEPWM1 2570                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                       __CFG_OSC$HS 000000  
            _previousTimeCounter1 0078              _previousTimeCounter2 007C  
                             l400 1118                               l401 1122  
                             l402 112C                               l403 1136  
                             l500 08F0                               l501 08F4  
                             l406 1240                               l502 08FE  
                             l407 1244                               l511 09F6  
                             l503 0902                               l408 1250  
                             l512 09FA                               l504 090C  
                             l440 19F4                               l513 0A04  
                             l505 0910                               l441 19F8  
                             l370 0C8E                               l530 0B34  
                             l522 0AFC                               l514 0A08  
                             l506 091A                               l450 1AEC  
                             l442 1A02                               l362 20AA  
                             l371 0C20                               l523 0B00  
                             l515 0A12                               l507 091E  
                             l451 1AF6                               l443 1A06  
                             l363 20B4                               l372 0C2A  
                             l524 0B0A                               l516 0A16  
                             l508 0928                               l452 1AFA  
                             l444 1A10                               l436 19D8  
                             l373 0C34                               l525 0B0E  
                             l517 0A20                               l453 1B04  
                             l437 19DC                               l701 256C  
                             l382 1078                               l374 0C3E  
                             l526 0B18                               l518 0A24  
                             l470 05F2                               l454 1B08  
                             l438 19E6                               l383 0E12  
                             l367 0DFC                               l527 0B1C  
                             l519 0A2E                               l471 05FC  
                             l455 1B12                               l447 1ADA  
                             l439 19EA                               l560 26A0  
                             l392 0FC4                               l384 0E16  
                             l368 0B96                               l528 0B26  
                             l480 06F2                               l472 0600  
                             l448 1ADE                               l393 0FC8  
                             l385 0F0A                               l377 0D48  
                             l369 0B9A                               l705 23EA  
                             l529 0B2A                               l481 06F6  
                             l473 060A                               l449 1AE8  
                             l394 0FD4                               l386 0E9C  
                             l378 0D4C                               l490 07EE  
                             l482 0700                               l474 060E  
                             l387 0EA6                               l379 0D58  
                             l491 07F8                               l483 0704  
                             l475 0618                               l467 05E0  
                             l388 0EB0                               l708 247A  
                             l716 2278                               l492 07FC  
                             l484 070E                               l468 05E4  
                             l397 108E                               l389 0EBA  
                             l493 0806                               l485 0712  
                             l469 05EE                               l573 261A  
                             l398 1092                               l494 080A  
                             l486 071C                               l478 06E4  
                             l822 267C                               l399 1186  
                             l495 0814                               l479 06E8  
                             l496 0818                               l497 0822  
                             l489 07EA                               l770 26BA  
                             l674 1F40                               l771 26BC  
                             l756 25AA                               l669 1F2C  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                               _abs 265E  
                             _dir 003E                               _msg 008C  
                             prod 000FF3                               wreg 000FE8  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
                            ?_abs 001F                              l1179 24D2  
                            l4120 1B16                              l5010 1E7E  
                            l4028 26DC                              l5004 1E74  
                            l4302 0766                              l4062 195A  
                            l4046 18AE                              l4216 04AC  
                            l4144 01EE                              l5016 1EF0  
                            l4330 0826                              l4234 055C  
                            l4162 029C                              l3450 259C  
                            l5034 1F62                              l4404 0A78  
                            l4180 034C                              l5036 1F64  
                            l4262 061C                              l4094 1A5A  
                            l3446 258E                              l5038 1F74  
                            l4432 0B38                              l4336 086C  
                            l4088 1A14                              l3802 220C  
                            l4370 0972                              l4700 1234  
                            l4604 0EC4                              l3812 2244  
                            l4364 092C                              l4268 0662  
                            l4630 0FD8                              l3822 226E  
                            l4198 03FC                              l4624 0FB8  
                            l4528 0C48                              l4296 0720  
                            l4706 1254                              l4554 0D5C  
                            l3818 225E                              l4490 2104  
                            l4482 20A2                              l4548 0D3C  
                            l4484 20B8                              l4750 22AE  
                            l4398 0A32                              l4680 1140  
                            l4760 22DE                              l4744 2298  
                            l4488 20C0                              l4728 260C  
                            l4912 1BBE                              l4756 22CC  
                            l4772 231C                              l3796 21EE  
                            l4932 1D90                              l4908 1BAC  
                            l4758 22D8                              l4790 24A6  
                            l4934 1D9C                              l4776 2330  
                            l4768 230E                              l4960 243E  
                            l4928 1D4A                              l4936 1DA4  
                            l4786 2498                              l4788 24A2  
                            l4948 2560                              l4798 24C6  
                            l4898 1B5E                              l4994 1DFC  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u5000 0380  
                            u5005 0374                              u5015 03D8  
                            u5040 0430                              u5045 0424  
                            u5055 0488                              u5080 04E0  
                            u6025 25BE                              u5410 094C  
                            u5330 0846                              u5250 0740  
                            u5170 063C                              u6300 1E70  
                            u5085 04D4                              u5415 0940  
                            u5335 083A                              u5255 0734  
                            u5175 0630                              u5095 0538  
                            u4640 1832                              u6160 1C92  
                            u6170 1CFA                              u6330 1EEC  
                            u5700 0C66                              u4645 1826  
                            u5710 0CB0                              u6190 1D7E  
                            u4655 188A                              u6407 260E  
                            u4920 0220                              u4680 18DE  
                            u5705 0C5C                              u5570 0B58  
                            u5490 0A52                              u4850 1B36  
                            u4770 1A34                              u5715 0CA6  
                            u5725 0D10                              u4925 0214  
                            u4685 18D2                              u5830 0EE2  
                            u6390 1FE0                              u5575 0B4C  
                            u5495 0A46                              u4935 0278  
                            u4855 1B2A                              u4775 1A28  
                            u4695 1936                              u5840 0F2C  
                            u4960 02D0                              u4880 0172  
                            u5835 0ED8                              u5845 0F22  
                            u4965 02C4                              u4885 0166  
                            u5855 0F8C                              u4975 0328  
                            u4895 01CA                              u5960 115E  
                            u5970 11A8                              u5965 1154  
                            u5975 119E                              u5985 1208  
                            _TMR2 000FCC               __size_of_CANSetMask 035E  
                            abs@a 001F                              _main 1DC2  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 0041                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 0136                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000010  
                _CANOperationMode 26D6            __end_of_SetOutputEPWM1 25B4  
                           ??_abs 0021        __size_of_CANreceiveMessage 050C  
                           ?_main 0001                   __end_of___awdiv 233A  
                 ___awdiv@divisor 00B6                             _T2CON 000FCA  
                           _T3CON 000FB1                   __end_of___lwdiv 24DC  
                           i1l414 158C                             i1l565 26D2  
                           i1l661 00EE                             i1l654 00D2  
                           i1l657 00CE                             i1l659 00CC  
                 ___awdiv@counter 00B8                             _TMR3H 000FB3  
                           _TMR3L 000FB2                 _CANisRxReady$3003 0001  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
              __size_of_ISR_bassa 011E                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 00B8                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _vBatt 008A  
                           _rampe 1B5E                    __pbitbssCOMRAM 01C0  
            __end_of_CANisRxReady 26D6                             tablat 000FF5  
            __end_of_CANisTxReady 26A4                             status 000FD8  
                  __CFG_PBADEN$ON 000000                        _SetDCEPWM1 25B4  
                 __initialization 24DC          __size_of_battery_measure 0096  
                    __end_of_main 1FF6                   ?_SetOutputEPWM1 001F  
                          ??_main 00C0                     __activetblptr 000002  
               _CANisTxReady$3001 001F                     _counter_array 0060  
                          _CANCON 000F6F                            _ADRESH 000FC4  
                          ?_rampe 0001                  ___awdiv@dividend 00B4  
                 __CFG_BBSIZ$1024 000000                            i1l3650 1792  
                          i1l3642 175A                            i1l3634 16EC  
                          i1l3660 17FC                            i1l3580 14DC  
                          i1l3572 146C                            i1l3654 17AE  
                          i1l3646 1776                            i1l3592 1536  
                          i1l3584 14FA                            i1l3658 17CA  
                          i1l3922 00A4                            i1l3914 0088  
                          i1l3596 1554                            i1l3588 1518  
                          i1l3908 0066                            i1l3598 1586  
                          i1l3918 009C                        _OpenTimer2 26A4  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 00AF                CANsendMessage@tamp 00B3  
                __end_of_delay_ms 2628             __size_of_CANSetFilter 0A46  
                  __CFG_XINST$OFF 000000                __size_of_OpenEPWM1 0010  
               __end_of_ISR_bassa 0136                            ___wmul 2628  
                       ??___awdiv 0023                    __CFG_STVREN$ON 000000  
                       ??___lwdiv 0023                      ??_CANSetMask 00AB  
                          _errore 0088                  OpenTimer2@config 001F  
                          clear_0 24E2                            clear_1 24F2  
                ___awdiv@quotient 00BA          ?_configurazione_iniziale 0001  
                 __CFG_BOREN$BOHW 000000                      __pdataCOMRAM 003A  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                      _CANSetFilter 013A  
                      __accesstop 0060           __end_of__initialization 2518  
              __end_of_CANSetMask 1B5E                     ___rparam_used 000001  
                     ?_SetDCEPWM1 001F                    __pcstackCOMRAM 0001  
                   __end_of_rampe 1DC2                 ??_battery_measure 0023  
           CANSetFilter@numBuffer 00AF                   OpenEPWM1@period 001F  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 001E  
               __end_of_OpenEPWM1 26F8                           ??_rampe 00B7  
        __end_of_CANOperationMode 26E8                        __pbssBANK0 0060  
                     ?_OpenTimer2 0001                        _data_array 009B  
         __size_of_CANsendMessage 0774          __size_of_can_interpreter 00D4  
                         ?___wmul 00AE                __size_of_send_data 004A  
                    _CANisRxReady 26C0                           _ECCPR1L 000FBB  
                         _CANSTAT 000F6E                      _CANisTxReady 2686  
                         _BRGCON1 000F70                           _BRGCON2 000F71  
                         _BRGCON3 000F72            __size_of_CANInitialize 01B2  
                       ?_delay_ms 00B4                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
             __size_of_SetDCEPWM1 003A                           _RXB1CON 000F50  
                         _TXB0DLC 000F45                           _TXB1DLC 000F35  
                         _TXB2DLC 000F25               CANsendMessage@flags 00B2  
                _data_array_debug 00A3          SetOutputEPWM1@outputmode 001F  
                      _correzione 0070                  ??_SetOutputEPWM1 0020  
                         __Hparam 0000                        _left_speed 0030  
                         __Lparam 0000                  delay_ms@value_ms 00B4  
                         ___awdiv 227C                   __size_of___wmul 0036  
                         ___lwdiv 247E              CANInitialize@propSeg 00BD  
                         __pcinit 24DC                           __ramtop 0300  
             __size_of_OpenTimer2 001C                           __ptext0 1DC2  
                         __ptext1 2526                           __ptext2 1B5E  
                         __ptext3 265E                           __ptext4 247E  
                         __ptext5 25B4                           __ptext6 233A  
                         __ptext7 25EE                           __ptext8 2570  
                         __ptext9 1FF6                         _T2CONbits 000FCA  
                    __size_of_abs 0028                           _current 0036  
                      _duty_cycle 0086                        ??_delay_ms 0023  
          CANreceiveMessage@error 000B              end_of_initialization 2518  
               __end_of_send_data 2570                     __Lmediumconst 0000  
                   _CANInitialize 1FF6                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE                         _ISR_bassa 0018  
               ??_can_interpreter 001F                         _PORTAbits 000F80  
                  CANSetMask@mask 001F                         _PORTCbits 000F82  
                  CANSetMask@tamp 00B0                    _centralina_abs 01C1  
                  CANSetMask@type 0023                         _TRISDbits 000F95  
__size_of_configurazione_iniziale 00AE               _previousTimeCounter 0074  
         _clock_counter_reference 0084                    _CANsendMessage 0B80  
                CANInitialize@BRP 00B7                  CANInitialize@SJW 00B6  
                  ?_CANInitialize 00B4                        main@period 00C8  
                    ??_SetDCEPWM1 0021                   _battery_measure 23E8  
                      ?_ISR_bassa 0001                    __end_of___wmul 265E  
                   __pidataCOMRAM 26F8               start_initialization 24DC  
                     __end_of_abs 2686                __end_of_SetDCEPWM1 25EE  
             CANSetMask@numBuffer 00AF            __end_of_CANsendMessage 12F4  
               ?_CANOperationMode 0001                      ??_OpenTimer2 001F  
                       _OpenEPWM1 26E8                ??_CANOperationMode 001F  
      CANInitialize@FilterConfig1 00BE        CANInitialize@FilterConfig2 00BF  
                        ??___wmul 0023                  __CFG_LPT1OSC$OFF 000000  
              __end_of_OpenTimer2 26C0            CANInitialize@phaseSeg1 00B4  
          CANInitialize@phaseSeg2 00B5                       __pbssCOMRAM 0024  
                   __pcstackBANK0 00AB                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72               SetDCEPWM1@dutycycle 001F  
               __size_of_delay_ms 003A                   ?_CANsendMessage 00AB  
                      ?_OpenEPWM1 0001           __end_of_battery_measure 247E  
                 ??_CANInitialize 00B9                         _can_retry 01C0  
                    _currentSpeed 003A                CANSetFilter@filter 001F  
                ___lwdiv@dividend 001F                          ?___awdiv 00B4  
                        ?___lwdiv 001F                       ??_ISR_bassa 000D  
                     __pintcodelo 0018                          _ECCP1CON 000FBA  
                     _COMSTATbits 000F74        SetOutputEPWM1@outputconfig 0020  
                      ISR_bassa@i 001E                     _remote_frame1 01C7  
                ___lwdiv@quotient 00AC           _configurazione_iniziale 233A  
                  __size_of_rampe 0264                      _message_sent 01C4  
           CANreceiveMessage@tamp 000C                    ___wmul@product 00B2  
                 _can_interpreter 21A8                          _IPR2bits 000FA2  
    _delay_quartz_frequency_value 0040                          _PIE1bits 000F9D  
                        _IPR3bits 000FA5                          _PIE2bits 000FA0  
                       _send_data 2526                          _PIE3bits 000FA3  
                        i1u402_25 1560                          i1u404_20 1634  
                        i1u404_26 1636                          i1u405_20 165E  
                        i1u413_25 17D6                          i1u405_26 1660  
                        i1u407_25 1672                          i1u444_20 0086  
                        i1u393_20 13AC                          i1u393_26 13AE  
                        i1u394_20 13DA                          i1u394_26 13DC  
                        i1u396_25 13F0                          _PIR1bits 000F9E  
                        _PIR2bits 000FA1                          _PIR3bits 000FA4  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                        _RXB0SIDH 000F61                         _scrittura 0037  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
                        _TXERRCNT 000F76                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                        _ADCON2bits 000FC0  
               ___wmul@multiplier 00AE                     ?_CANSetFilter 001F  
                       copy_data0 250C                        _CANCONbits 000F6F  
                     ??_OpenEPWM1 001F                  ?_battery_measure 0001  
                      ?_send_data 0001                          __Hrparam 0000  
                    _RXB0SIDLbits 000F62                  SetDCEPWM1@DCycle 00AB  
                        __Lrparam 0000                      _RXB1SIDLbits 000F52  
              _centralina_comando 01C2                        _CANSetMask 1800  
                __size_of___awdiv 00BE                  __size_of___lwdiv 005E  
         __size_of_SetOutputEPWM1 0044                _currentSpeed_array 0068  
       ??_configurazione_iniziale 0024                      _RXF0SIDLbits 000F01  
                        _delay_ms 25EE                   ___lwdiv@divisor 0021  
                    _RXF1SIDLbits 000F05                   ___lwdiv@counter 00AB  
                  ??_CANSetFilter 00AB                          __ptext10 1800  
                        __ptext11 013A                          __ptext20 26E8  
                        __ptext12 26D6                          __ptext13 21A8  
                        __ptext22 12F4                          __ptext14 23E8  
                        __ptext23 26C0                          __ptext15 2628  
                        __ptext16 227C                          __ptext17 0B80  
                        __ptext18 2686                          __ptext19 26A4  
                    _RXF2SIDLbits 000F09           __end_of_can_interpreter 227C  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                   _speed_fetched 01C9                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 00B1                      _remote_frame 01C6  
                   __size_of_main 0234                          _duty_set 0024  
            CANreceiveMessage@msg 0001                      _TXB0SIDLbits 000F42  
                     _new_message 01C5                      _TXB1SIDLbits 000F32  
                    _TXB2SIDLbits 000F22                          int$flags 0041  
       __size_of_CANOperationMode 0012                     ?_CANisRxReady 0001  
                   ?_CANisTxReady 0001                       _RXB0DLCbits 000F65  
                     _RXB1DLCbits 000F55                      _RXM0SIDLbits 000F19  
                     _RXB0CONbits 000F60                       _RXB1CONbits 000F50  
               _CANreceiveMessage 12F4                      _RXM1SIDLbits 000F1D  
                      _INTCONbits 000FF2                  ??_CANsendMessage 001F  
                    _requestSpeed 002C                ?_CANreceiveMessage 0001  
                    _request_sent 01C8          CANsendMessage@identifier 00AB  
                        intlevel1 0000                 _centralina_sterzo 01C3  
                CANSetFilter@tamp 00B0                  CANSetFilter@type 0023  
             ??_CANreceiveMessage 0003                       _TXB0DLCbits 000F45  
                     _right_speed 0034                       _TXB1DLCbits 000F35  
                     _TXB0CONbits 000F40                       ??_send_data 0023  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 23E8  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
                     _timeCounter 0080              CANOperationMode@mode 001F  
                  ??_CANisRxReady 0001                       ?_CANSetMask 001F  
                  ??_CANisTxReady 001F         __end_of_CANreceiveMessage 1800  
                ?_can_interpreter 0001                       _previousPwm 0032  
           __end_of_CANInitialize 21A8  
