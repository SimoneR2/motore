

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Mar 25 10:19:57 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataCOMRAM
    41  0025A0                     __pidataCOMRAM:
    42                           	opt stack 0
    43                           
    44                           ;initializer for _currentSpeed
    45  0025A0  0001               	dw	1
    46  0025A2  0000               	dw	0
    47                           
    48                           ;initializer for _dir
    49  0025A4  0001               	dw	1
    50                           
    51                           ;initializer for _delay_quartz_frequency_value
    52  0025A6  10                 	db	16
    53  0000                     _RXB1CON	set	3920
    54  0000                     _RXB1CONbits	set	3920
    55  0000                     _RXB1D0	set	3926
    56  0000                     _RXB1D1	set	3927
    57  0000                     _RXB1D2	set	3928
    58  0000                     _RXB1D3	set	3929
    59  0000                     _RXB1D4	set	3930
    60  0000                     _RXB1D5	set	3931
    61  0000                     _RXB1D6	set	3932
    62  0000                     _RXB1D7	set	3933
    63  0000                     _RXB1DLC	set	3925
    64  0000                     _RXB1DLCbits	set	3925
    65  0000                     _RXB1EIDH	set	3923
    66  0000                     _RXB1EIDL	set	3924
    67  0000                     _RXB1SIDH	set	3921
    68  0000                     _RXB1SIDL	set	3922
    69  0000                     _RXB1SIDLbits	set	3922
    70  0000                     _RXF0EIDH	set	3842
    71  0000                     _RXF0EIDL	set	3843
    72  0000                     _RXF0SIDH	set	3840
    73  0000                     _RXF0SIDL	set	3841
    74  0000                     _RXF0SIDLbits	set	3841
    75  0000                     _RXF1EIDH	set	3846
    76  0000                     _RXF1EIDL	set	3847
    77  0000                     _RXF1SIDH	set	3844
    78  0000                     _RXF1SIDL	set	3845
    79  0000                     _RXF1SIDLbits	set	3845
    80  0000                     _RXF2EIDH	set	3850
    81  0000                     _RXF2EIDL	set	3851
    82  0000                     _RXF2SIDH	set	3848
    83  0000                     _RXF2SIDL	set	3849
    84  0000                     _RXF2SIDLbits	set	3849
    85  0000                     _RXF3EIDH	set	3854
    86  0000                     _RXF3EIDL	set	3855
    87  0000                     _RXF3SIDH	set	3852
    88  0000                     _RXF3SIDL	set	3853
    89  0000                     _RXF3SIDLbits	set	3853
    90  0000                     _RXF4EIDH	set	3858
    91  0000                     _RXF4EIDL	set	3859
    92  0000                     _RXF4SIDH	set	3856
    93  0000                     _RXF4SIDL	set	3857
    94  0000                     _RXF4SIDLbits	set	3857
    95  0000                     _RXF5EIDH	set	3862
    96  0000                     _RXF5EIDL	set	3863
    97  0000                     _RXF5SIDH	set	3860
    98  0000                     _RXF5SIDL	set	3861
    99  0000                     _RXF5SIDLbits	set	3861
   100  0000                     _RXM0EIDH	set	3866
   101  0000                     _RXM0EIDL	set	3867
   102  0000                     _RXM0SIDH	set	3864
   103  0000                     _RXM0SIDL	set	3865
   104  0000                     _RXM0SIDLbits	set	3865
   105  0000                     _RXM1EIDH	set	3870
   106  0000                     _RXM1EIDL	set	3871
   107  0000                     _RXM1SIDH	set	3868
   108  0000                     _RXM1SIDL	set	3869
   109  0000                     _RXM1SIDLbits	set	3869
   110  0000                     _TXB0CONbits	set	3904
   111  0000                     _TXB0D0	set	3910
   112  0000                     _TXB0D1	set	3911
   113  0000                     _TXB0D2	set	3912
   114  0000                     _TXB0D3	set	3913
   115  0000                     _TXB0D4	set	3914
   116  0000                     _TXB0D5	set	3915
   117  0000                     _TXB0D6	set	3916
   118  0000                     _TXB0D7	set	3917
   119  0000                     _TXB0DLC	set	3909
   120  0000                     _TXB0DLCbits	set	3909
   121  0000                     _TXB0EIDH	set	3907
   122  0000                     _TXB0EIDL	set	3908
   123  0000                     _TXB0SIDH	set	3905
   124  0000                     _TXB0SIDL	set	3906
   125  0000                     _TXB0SIDLbits	set	3906
   126  0000                     _TXB1CONbits	set	3888
   127  0000                     _TXB1D0	set	3894
   128  0000                     _TXB1D1	set	3895
   129  0000                     _TXB1D2	set	3896
   130  0000                     _TXB1D3	set	3897
   131  0000                     _TXB1D4	set	3898
   132  0000                     _TXB1D5	set	3899
   133  0000                     _TXB1D6	set	3900
   134  0000                     _TXB1D7	set	3901
   135  0000                     _TXB1DLC	set	3893
   136  0000                     _TXB1DLCbits	set	3893
   137  0000                     _TXB1EIDH	set	3891
   138  0000                     _TXB1EIDL	set	3892
   139  0000                     _TXB1SIDH	set	3889
   140  0000                     _TXB1SIDL	set	3890
   141  0000                     _TXB1SIDLbits	set	3890
   142  0000                     _TXB2CONbits	set	3872
   143  0000                     _TXB2D0	set	3878
   144  0000                     _TXB2D1	set	3879
   145  0000                     _TXB2D2	set	3880
   146  0000                     _TXB2D3	set	3881
   147  0000                     _TXB2D4	set	3882
   148  0000                     _TXB2D5	set	3883
   149  0000                     _TXB2D6	set	3884
   150  0000                     _TXB2D7	set	3885
   151  0000                     _TXB2DLC	set	3877
   152  0000                     _TXB2DLCbits	set	3877
   153  0000                     _TXB2EIDH	set	3875
   154  0000                     _TXB2EIDL	set	3876
   155  0000                     _TXB2SIDH	set	3873
   156  0000                     _TXB2SIDL	set	3874
   157  0000                     _TXB2SIDLbits	set	3874
   158  0000                     _ADCON0bits	set	4034
   159  0000                     _ADCON1bits	set	4033
   160  0000                     _ADCON2bits	set	4032
   161  0000                     _BRGCON1	set	3952
   162  0000                     _BRGCON2	set	3953
   163  0000                     _BRGCON2bits	set	3953
   164  0000                     _BRGCON3	set	3954
   165  0000                     _BRGCON3bits	set	3954
   166  0000                     _CANCON	set	3951
   167  0000                     _CANCONbits	set	3951
   168  0000                     _CANSTAT	set	3950
   169  0000                     _COMSTATbits	set	3956
   170  0000                     _ECCP1CON	set	4026
   171  0000                     _ECCPR1L	set	4027
   172  0000                     _INTCONbits	set	4082
   173  0000                     _IPR2bits	set	4002
   174  0000                     _IPR3bits	set	4005
   175  0000                     _LATA	set	3977
   176  0000                     _LATB	set	3978
   177  0000                     _LATC	set	3979
   178  0000                     _LATD	set	3980
   179  0000                     _LATE	set	3981
   180  0000                     _PIE1bits	set	3997
   181  0000                     _PIE2bits	set	4000
   182  0000                     _PIE3bits	set	4003
   183  0000                     _PIR1bits	set	3998
   184  0000                     _PIR2bits	set	4001
   185  0000                     _PIR3bits	set	4004
   186  0000                     _PORTAbits	set	3968
   187  0000                     _PORTCbits	set	3970
   188  0000                     _PR2	set	4043
   189  0000                     _RCONbits	set	4048
   190  0000                     _RXB0CON	set	3936
   191  0000                     _RXB0CONbits	set	3936
   192  0000                     _RXB0D0	set	3942
   193  0000                     _RXB0D1	set	3943
   194  0000                     _RXB0D2	set	3944
   195  0000                     _RXB0D3	set	3945
   196  0000                     _RXB0D4	set	3946
   197  0000                     _RXB0D5	set	3947
   198  0000                     _RXB0D6	set	3948
   199  0000                     _RXB0D7	set	3949
   200  0000                     _RXB0DLC	set	3941
   201  0000                     _RXB0DLCbits	set	3941
   202  0000                     _RXB0EIDH	set	3939
   203  0000                     _RXB0EIDL	set	3940
   204  0000                     _RXB0SIDH	set	3937
   205  0000                     _RXB0SIDL	set	3938
   206  0000                     _RXB0SIDLbits	set	3938
   207  0000                     _RXERRCNT	set	3957
   208  0000                     _T2CON	set	4042
   209  0000                     _T2CONbits	set	4042
   210  0000                     _T3CON	set	4017
   211  0000                     _TMR2	set	4044
   212  0000                     _TMR3H	set	4019
   213  0000                     _TMR3L	set	4018
   214  0000                     _TRISA	set	3986
   215  0000                     _TRISB	set	3987
   216  0000                     _TRISC	set	3988
   217  0000                     _TRISD	set	3989
   218  0000                     _TRISDbits	set	3989
   219  0000                     _TRISE	set	3990
   220  0000                     _TXERRCNT	set	3958
   221                           
   222                           ; #config settings
   223  0000                     
   224                           	psect	cinit
   225  0023DC                     __pcinit:
   226                           	opt stack 0
   227  0023DC                     start_initialization:
   228                           	opt stack 0
   229  0023DC                     __initialization:
   230                           	opt stack 0
   231                           
   232                           ; Clear objects allocated to BANK0 (75 bytes)
   233  0023DC  EE00  F060         	lfsr	0,__pbssBANK0
   234  0023E0  0E4B               	movlw	75
   235  0023E2                     clear_0:
   236  0023E2  6AEE               	clrf	postinc0,c
   237  0023E4  06E8               	decf	wreg,f,c
   238  0023E6  E1FD               	bnz	clear_0
   239                           
   240                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   241  0023E8  6A39               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   242  0023EA  6A38               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   243                           
   244                           ; Clear objects allocated to COMRAM (20 bytes)
   245  0023EC  EE00  F024         	lfsr	0,__pbssCOMRAM
   246  0023F0  0E14               	movlw	20
   247  0023F2                     clear_1:
   248  0023F2  6AEE               	clrf	postinc0,c
   249  0023F4  06E8               	decf	wreg,f,c
   250  0023F6  E1FD               	bnz	clear_1
   251                           
   252                           ; Initialize objects allocated to COMRAM (7 bytes)
   253                           ; load TBLPTR registers with __pidataCOMRAM
   254  0023F8  0EA0               	movlw	low __pidataCOMRAM
   255  0023FA  6EF6               	movwf	tblptrl,c
   256  0023FC  0E25               	movlw	high __pidataCOMRAM
   257  0023FE  6EF7               	movwf	tblptrh,c
   258  002400  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   259  002402  6EF8               	movwf	tblptru,c
   260  002404  EE00  F03A         	lfsr	0,__pdataCOMRAM
   261  002408  EE10 F007          	lfsr	1,7
   262  00240C                     copy_data0:
   263  00240C  0009               	tblrd		*+
   264  00240E  CFF5 FFEE          	movff	tablat,postinc0
   265  002412  50E5               	movf	postdec1,w,c
   266  002414  50E1               	movf	fsr1l,w,c
   267  002416  E1FA               	bnz	copy_data0
   268  002418                     end_of_initialization:
   269                           	opt stack 0
   270  002418                     __end_of__initialization:
   271                           	opt stack 0
   272  002418  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   273  00241A  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   274  00241C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   275  00241E  6EF8               	movwf	tblptru,c
   276  002420  0100               	movlb	0
   277  002422  EFE0  F00E         	goto	_main	;jump to C main() function
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           postdec1	equ	0xFE5
   285                           fsr1l	equ	0xFE1
   286                           
   287                           	psect	bitbssCOMRAM
   288  0001C0                     __pbitbssCOMRAM:
   289                           	opt stack 0
   290  0001C0                     _can_retry:
   291                           	opt stack 0
   292  0001C0                     	ds	1
   293  0001C1                     _centralina_abs:
   294                           	opt stack 0
   295  0001C1                     	ds	1
   296  0001C2                     _centralina_comando:
   297                           	opt stack 0
   298  0001C2                     	ds	1
   299  0001C3                     _centralina_sterzo:
   300                           	opt stack 0
   301  0001C3                     	ds	1
   302  0001C4                     _message_sent:
   303                           	opt stack 0
   304  0001C4                     	ds	1
   305  0001C5                     _new_message:
   306                           	opt stack 0
   307  0001C5                     	ds	1
   308  0001C6                     _remote_frame:
   309                           	opt stack 0
   310  0001C6                     	ds	1
   311  0001C7                     _remote_frame1:
   312                           	opt stack 0
   313  0001C7                     	ds	1
   314  0001C8                     _request_sent:
   315                           	opt stack 0
   316  0001C8                     	ds	1
   317  0001C9                     _speed_fetched:
   318                           	opt stack 0
   319  0001C9                     	ds	1
   320                           tblptru	equ	0xFF8
   321                           tblptrh	equ	0xFF7
   322                           tblptrl	equ	0xFF6
   323                           tablat	equ	0xFF5
   324                           postinc0	equ	0xFEE
   325                           wreg	equ	0xFE8
   326                           postdec1	equ	0xFE5
   327                           fsr1l	equ	0xFE1
   328                           
   329                           	psect	bssCOMRAM
   330  000024                     __pbssCOMRAM:
   331                           	opt stack 0
   332  000024                     _duty_set:
   333                           	opt stack 0
   334  000024                     	ds	4
   335  000028                     _id:
   336                           	opt stack 0
   337  000028                     	ds	4
   338  00002C                     _requestSpeed:
   339                           	opt stack 0
   340  00002C                     	ds	4
   341  000030                     _left_speed:
   342                           	opt stack 0
   343  000030                     	ds	2
   344  000032                     _previousPwm:
   345                           	opt stack 0
   346  000032                     	ds	2
   347  000034                     _right_speed:
   348                           	opt stack 0
   349  000034                     	ds	2
   350  000036                     _current:
   351                           	opt stack 0
   352  000036                     	ds	1
   353  000037                     _scrittura:
   354                           	opt stack 0
   355  000037                     	ds	1
   356                           tblptru	equ	0xFF8
   357                           tblptrh	equ	0xFF7
   358                           tblptrl	equ	0xFF6
   359                           tablat	equ	0xFF5
   360                           postinc0	equ	0xFEE
   361                           wreg	equ	0xFE8
   362                           postdec1	equ	0xFE5
   363                           fsr1l	equ	0xFE1
   364                           
   365                           	psect	dataCOMRAM
   366  00003A                     __pdataCOMRAM:
   367                           	opt stack 0
   368  00003A                     _currentSpeed:
   369                           	opt stack 0
   370  00003A                     	ds	4
   371  00003E                     _dir:
   372                           	opt stack 0
   373  00003E                     	ds	2
   374  000040                     _delay_quartz_frequency_value:
   375                           	opt stack 0
   376  000040                     	ds	1
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           postdec1	equ	0xFE5
   384                           fsr1l	equ	0xFE1
   385                           
   386                           	psect	bssBANK0
   387  000060                     __pbssBANK0:
   388                           	opt stack 0
   389  000060                     _counter_array:
   390                           	opt stack 0
   391  000060                     	ds	8
   392  000068                     _currentSpeed_array:
   393                           	opt stack 0
   394  000068                     	ds	8
   395  000070                     _correzione:
   396                           	opt stack 0
   397  000070                     	ds	4
   398  000074                     _previousTimeCounter:
   399                           	opt stack 0
   400  000074                     	ds	4
   401  000078                     _previousTimeCounter1:
   402                           	opt stack 0
   403  000078                     	ds	4
   404  00007C                     _previousTimeCounter2:
   405                           	opt stack 0
   406  00007C                     	ds	4
   407  000080                     _timeCounter:
   408                           	opt stack 0
   409  000080                     	ds	4
   410  000084                     _clock_counter_reference:
   411                           	opt stack 0
   412  000084                     	ds	2
   413  000086                     _duty_cycle:
   414                           	opt stack 0
   415  000086                     	ds	2
   416  000088                     _errore:
   417                           	opt stack 0
   418  000088                     	ds	2
   419  00008A                     _vBatt:
   420                           	opt stack 0
   421  00008A                     	ds	2
   422  00008C                     _msg:
   423                           	opt stack 0
   424  00008C                     	ds	15
   425  00009B                     _data_array:
   426                           	opt stack 0
   427  00009B                     	ds	8
   428  0000A3                     _data_array_debug:
   429                           	opt stack 0
   430  0000A3                     	ds	8
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           postdec1	equ	0xFE5
   438                           fsr1l	equ	0xFE1
   439                           
   440                           	psect	cstackBANK0
   441  0000AB                     __pcstackBANK0:
   442                           	opt stack 0
   443  0000AB                     ??_CANSetMask:
   444  0000AB                     ??_CANSetFilter:
   445  0000AB                     ___lwdiv@counter:
   446                           	opt stack 0
   447  0000AB                     SetDCEPWM1@DCycle:
   448                           	opt stack 0
   449  0000AB                     ___wmul@product:
   450                           	opt stack 0
   451  0000AB                     CANsendMessage@identifier:
   452                           	opt stack 0
   453                           
   454                           ; 4 bytes @ 0x0
   455  0000AB                     	ds	1
   456  0000AC                     ___lwdiv@quotient:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x1
   460  0000AC                     	ds	1
   461  0000AD                     delay_ms@value_ms:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x2
   465  0000AD                     	ds	2
   466  0000AF                     CANSetMask@numBuffer:
   467                           	opt stack 0
   468  0000AF                     CANSetFilter@numBuffer:
   469                           	opt stack 0
   470  0000AF                     CANsendMessage@data:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x4
   474  0000AF                     	ds	1
   475  0000B0                     CANSetMask@tamp:
   476                           	opt stack 0
   477  0000B0                     CANSetFilter@tamp:
   478                           	opt stack 0
   479                           
   480                           ; 4 bytes @ 0x5
   481  0000B0                     	ds	1
   482  0000B1                     CANsendMessage@dataLength:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x6
   486  0000B1                     	ds	1
   487  0000B2                     CANsendMessage@flags:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x7
   491  0000B2                     	ds	1
   492  0000B3                     CANsendMessage@tamp:
   493                           	opt stack 0
   494                           
   495                           ; 4 bytes @ 0x8
   496  0000B3                     	ds	1
   497  0000B4                     CANInitialize@phaseSeg1:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x9
   501  0000B4                     	ds	1
   502  0000B5                     CANInitialize@phaseSeg2:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0xA
   506  0000B5                     	ds	1
   507  0000B6                     CANInitialize@SJW:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0xB
   511  0000B6                     	ds	1
   512  0000B7                     ??_rampe:
   513  0000B7                     CANInitialize@BRP:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0xC
   517  0000B7                     	ds	1
   518  0000B8                     CANInitialize@flags:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0xD
   522  0000B8                     	ds	1
   523  0000B9                     ??_CANInitialize:
   524                           
   525                           ; 0 bytes @ 0xE
   526  0000B9                     	ds	4
   527  0000BD                     CANInitialize@propSeg:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x12
   531  0000BD                     	ds	1
   532  0000BE                     CANInitialize@FilterConfig1:
   533                           	opt stack 0
   534                           
   535                           ; 1 bytes @ 0x13
   536  0000BE                     	ds	1
   537  0000BF                     CANInitialize@FilterConfig2:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x14
   541  0000BF                     	ds	1
   542  0000C0                     ??_main:
   543                           
   544                           ; 0 bytes @ 0x15
   545  0000C0                     	ds	8
   546  0000C8                     main@period:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x1D
   550  0000C8                     	ds	1
   551                           tblptru	equ	0xFF8
   552                           tblptrh	equ	0xFF7
   553                           tblptrl	equ	0xFF6
   554                           tablat	equ	0xFF5
   555                           postinc0	equ	0xFEE
   556                           wreg	equ	0xFE8
   557                           postdec1	equ	0xFE5
   558                           fsr1l	equ	0xFE1
   559                           
   560                           	psect	cstackCOMRAM
   561  000001                     __pcstackCOMRAM:
   562                           	opt stack 0
   563  000001                     _CANisRxReady$3002:
   564                           	opt stack 0
   565  000001                     CANreceiveMessage@msg:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x0
   569  000001                     	ds	2
   570  000003                     ??_CANreceiveMessage:
   571                           
   572                           ; 0 bytes @ 0x2
   573  000003                     	ds	8
   574  00000B                     CANreceiveMessage@error:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0xA
   578  00000B                     	ds	1
   579  00000C                     CANreceiveMessage@tamp:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0xB
   583  00000C                     	ds	1
   584  00000D                     ??_ISR_bassa:
   585                           
   586                           ; 0 bytes @ 0xC
   587  00000D                     	ds	17
   588  00001E                     ISR_bassa@i:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x1D
   592  00001E                     	ds	1
   593  00001F                     ??_can_interpreter:
   594  00001F                     ??_CANsendMessage:
   595  00001F                     ?_abs:
   596                           	opt stack 0
   597  00001F                     ?___wmul:
   598                           	opt stack 0
   599  00001F                     ?___lwdiv:
   600                           	opt stack 0
   601  00001F                     CANOperationMode@mode:
   602                           	opt stack 0
   603  00001F                     _CANisTxReady$3000:
   604                           	opt stack 0
   605  00001F                     OpenEPWM1@period:
   606                           	opt stack 0
   607  00001F                     SetOutputEPWM1@outputmode:
   608                           	opt stack 0
   609  00001F                     OpenTimer2@config:
   610                           	opt stack 0
   611  00001F                     SetDCEPWM1@dutycycle:
   612                           	opt stack 0
   613  00001F                     ___wmul@multiplier:
   614                           	opt stack 0
   615  00001F                     abs@a:
   616                           	opt stack 0
   617  00001F                     ___lwdiv@dividend:
   618                           	opt stack 0
   619  00001F                     CANSetMask@mask:
   620                           	opt stack 0
   621  00001F                     CANSetFilter@filter:
   622                           	opt stack 0
   623                           
   624                           ; 4 bytes @ 0x1E
   625  00001F                     	ds	1
   626  000020                     SetOutputEPWM1@outputconfig:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0x1F
   630  000020                     	ds	1
   631  000021                     ??_SetDCEPWM1:
   632  000021                     ??_abs:
   633  000021                     ___wmul@multiplicand:
   634                           	opt stack 0
   635  000021                     ___lwdiv@divisor:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x20
   639  000021                     	ds	2
   640  000023                     CANSetMask@type:
   641                           	opt stack 0
   642  000023                     CANSetFilter@type:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x22
   646  000023                     	ds	1
   647  000024                     tblptru	equ	0xFF8
   648                           tblptrh	equ	0xFF7
   649                           tblptrl	equ	0xFF6
   650                           tablat	equ	0xFF5
   651                           postinc0	equ	0xFEE
   652                           wreg	equ	0xFE8
   653                           postdec1	equ	0xFE5
   654                           fsr1l	equ	0xFE1
   655                           
   656                           ; 0 bytes @ 0x23
   657 ;;
   658 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   659 ;;
   660 ;; *************** function _main *****************
   661 ;; Defined at:
   662 ;;		line 118 in file "motore.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  period          1   29[BANK0 ] unsigned char 
   667 ;; Return value:  Size  Location     Type
   668 ;;                  2  662[None  ] int 
   669 ;; Registers used:
   670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   676 ;;      Params:         0       0       0       0
   677 ;;      Locals:         0       1       0       0
   678 ;;      Temps:          0       8       0       0
   679 ;;      Totals:         0       9       0       0
   680 ;;Total ram usage:        9 bytes
   681 ;; Hardware stack levels required when called:    5
   682 ;; This function calls:
   683 ;;		_CANisTxReady
   684 ;;		_CANsendMessage
   685 ;;		_OpenEPWM1
   686 ;;		_OpenTimer2
   687 ;;		_SetDCEPWM1
   688 ;;		_SetOutputEPWM1
   689 ;;		_battery_measure
   690 ;;		_can_interpreter
   691 ;;		_configurazione_iniziale
   692 ;;		_delay_ms
   693 ;;		_rampe
   694 ;;		_send_data
   695 ;; This function is called by:
   696 ;;		Startup code after reset
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text0
   701  001DC0                     __ptext0:
   702                           	opt stack 0
   703  001DC0                     _main:
   704                           	opt stack 26
   705                           
   706                           ;motore.c: 119: unsigned char period;
   707                           ;motore.c: 120: configurazione_iniziale();
   708                           
   709                           ;incstack = 0
   710  001DC0  EC41  F011         	call	_configurazione_iniziale	;wreg free
   711                           
   712                           ;motore.c: 121: PORTAbits.RA1 = 1;
   713  001DC4  8280               	bsf	3968,1,c	;volatile
   714                           
   715                           ;motore.c: 122: PORTCbits.RC1 = 1;
   716  001DC6  8282               	bsf	3970,1,c	;volatile
   717                           
   718                           ;motore.c: 123: delay_ms(500);
   719  001DC8  0E01               	movlw	1
   720  001DCA  0100               	movlb	0	; () banked
   721  001DCC  6FAE               	movwf	(delay_ms@value_ms+1)& (0+255),b
   722  001DCE  0EF4               	movlw	244
   723  001DD0  6FAD               	movwf	delay_ms@value_ms& (0+255),b
   724  001DD2  EC52  F012         	call	_delay_ms	;wreg free
   725                           
   726                           ;motore.c: 124: PORTAbits.RA1 = 0;
   727  001DD6  9280               	bcf	3968,1,c	;volatile
   728                           
   729                           ;motore.c: 125: PORTCbits.RC1 = 0;
   730  001DD8  9282               	bcf	3970,1,c	;volatile
   731                           
   732                           ;motore.c: 126: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
   733  001DDA  0E06               	movlw	6
   734  001DDC  ECA6  F012         	call	_OpenTimer2
   735                           
   736                           ;motore.c: 127: period = 0xFE;
   737  001DE0  0EFE               	movlw	254
   738  001DE2  0100               	movlb	0	; () banked
   739  001DE4  6FC8               	movwf	main@period& (0+255),b
   740                           
   741                           ; BSR set to: 0
   742                           ;motore.c: 128: OpenEPWM1(period);
   743  001DE6  0100               	movlb	0	; () banked
   744  001DE8  51C8               	movf	main@period& (0+255),w,b
   745  001DEA  ECC8  F012         	call	_OpenEPWM1
   746                           
   747                           ;motore.c: 129: speed_fetched = 1;
   748  001DEE  8239               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
   749                           
   750                           ;motore.c: 130: SetOutputEPWM1(0b01111111, 0b11111100);
   751  001DF0  0EFC               	movlw	252
   752  001DF2  6E1F               	movwf	SetOutputEPWM1@outputmode,c
   753  001DF4  0E7F               	movlw	127
   754  001DF6  EC13  F012         	call	_SetOutputEPWM1
   755  001DFA                     l4830:
   756                           
   757                           ;motore.c: 132: can_interpreter();
   758  001DFA  ECDA  F010         	call	_can_interpreter	;wreg free
   759                           
   760                           ;motore.c: 133: if (PORTAbits.RA1 == 0){
   761  001DFE  B280               	btfsc	3968,1,c	;volatile
   762  001E00  D039               	goto	l4838
   763                           
   764                           ;motore.c: 135: if ((timeCounter - previousTimeCounter1 >= 40)) {
   765  001E02  C078  F0C0         	movff	_previousTimeCounter1,??_main
   766  001E06  C079  F0C1         	movff	_previousTimeCounter1+1,??_main+1
   767  001E0A  C07A  F0C2         	movff	_previousTimeCounter1+2,??_main+2
   768  001E0E  C07B  F0C3         	movff	_previousTimeCounter1+3,??_main+3
   769  001E12  0100               	movlb	0	; () banked
   770  001E14  1FC0               	comf	??_main& (0+255),f,b
   771  001E16  1FC1               	comf	(??_main+1)& (0+255),f,b
   772  001E18  1FC2               	comf	(??_main+2)& (0+255),f,b
   773  001E1A  1FC3               	comf	(??_main+3)& (0+255),f,b
   774  001E1C  2BC0               	incf	??_main& (0+255),f,b
   775  001E1E  0E00               	movlw	0
   776  001E20  23C1               	addwfc	(??_main+1)& (0+255),f,b
   777  001E22  23C2               	addwfc	(??_main+2)& (0+255),f,b
   778  001E24  23C3               	addwfc	(??_main+3)& (0+255),f,b
   779  001E26  0100               	movlb	0	; () banked
   780  001E28  5180               	movf	_timeCounter& (0+255),w,b	;volatile
   781  001E2A  0100               	movlb	0	; () banked
   782  001E2C  25C0               	addwf	??_main& (0+255),w,b
   783  001E2E  0100               	movlb	0	; () banked
   784  001E30  6FC4               	movwf	(??_main+4)& (0+255),b
   785  001E32  0100               	movlb	0	; () banked
   786  001E34  5181               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
   787  001E36  0100               	movlb	0	; () banked
   788  001E38  21C1               	addwfc	(??_main+1)& (0+255),w,b
   789  001E3A  0100               	movlb	0	; () banked
   790  001E3C  6FC5               	movwf	(??_main+5)& (0+255),b
   791  001E3E  0100               	movlb	0	; () banked
   792  001E40  5182               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
   793  001E42  0100               	movlb	0	; () banked
   794  001E44  21C2               	addwfc	(??_main+2)& (0+255),w,b
   795  001E46  0100               	movlb	0	; () banked
   796  001E48  6FC6               	movwf	(??_main+6)& (0+255),b
   797  001E4A  0100               	movlb	0	; () banked
   798  001E4C  5183               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
   799  001E4E  0100               	movlb	0	; () banked
   800  001E50  21C3               	addwfc	(??_main+3)& (0+255),w,b
   801  001E52  0100               	movlb	0	; () banked
   802  001E54  6FC7               	movwf	(??_main+7)& (0+255),b
   803  001E56  0100               	movlb	0	; () banked
   804  001E58  51C7               	movf	(??_main+7)& (0+255),w,b
   805  001E5A  0100               	movlb	0	; () banked
   806  001E5C  11C6               	iorwf	(??_main+6)& (0+255),w,b
   807  001E5E  0100               	movlb	0	; () banked
   808  001E60  11C5               	iorwf	(??_main+5)& (0+255),w,b
   809  001E62  E105               	bnz	u6050
   810  001E64  0E28               	movlw	40
   811  001E66  0100               	movlb	0	; () banked
   812  001E68  5DC4               	subwf	(??_main+4)& (0+255),w,b
   813  001E6A  A0D8               	btfss	status,0,c
   814  001E6C  D009               	goto	l4840
   815  001E6E                     u6050:
   816                           
   817                           ; BSR set to: 0
   818                           ;motore.c: 136: rampe();
   819  001E6E  ECB1  F00D         	call	_rampe	;wreg free
   820                           
   821                           ;motore.c: 137: }
   822                           ;motore.c: 138: }
   823  001E72  D006               	goto	l4840
   824  001E74                     l4838:
   825                           
   826                           ;motore.c: 139: else {
   827                           ;motore.c: 140: SetDCEPWM1(0);
   828  001E74  0E00               	movlw	0
   829  001E76  6E20               	movwf	SetDCEPWM1@dutycycle+1,c
   830  001E78  0E00               	movlw	0
   831  001E7A  6E1F               	movwf	SetDCEPWM1@dutycycle,c
   832  001E7C  EC35  F012         	call	_SetDCEPWM1	;wreg free
   833  001E80                     l4840:
   834                           
   835                           ;motore.c: 141: }
   836                           ;motore.c: 142: if ((can_retry == 1)&&(remote_frame)) {
   837  001E80  B038               	btfsc	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
   838  001E82  AC38               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
   839  001E84  D002               	goto	l4846
   840                           
   841                           ;motore.c: 143: send_data();
   842  001E86  ECC7  F011         	call	_send_data	;wreg free
   843  001E8A                     l4846:
   844                           
   845                           ;motore.c: 144: }
   846                           ;motore.c: 146: if ((timeCounter - previousTimeCounter) > 500) {
   847  001E8A  C074  F0C0         	movff	_previousTimeCounter,??_main
   848  001E8E  C075  F0C1         	movff	_previousTimeCounter+1,??_main+1
   849  001E92  C076  F0C2         	movff	_previousTimeCounter+2,??_main+2
   850  001E96  C077  F0C3         	movff	_previousTimeCounter+3,??_main+3
   851  001E9A  0100               	movlb	0	; () banked
   852  001E9C  1FC0               	comf	??_main& (0+255),f,b
   853  001E9E  1FC1               	comf	(??_main+1)& (0+255),f,b
   854  001EA0  1FC2               	comf	(??_main+2)& (0+255),f,b
   855  001EA2  1FC3               	comf	(??_main+3)& (0+255),f,b
   856  001EA4  2BC0               	incf	??_main& (0+255),f,b
   857  001EA6  0E00               	movlw	0
   858  001EA8  23C1               	addwfc	(??_main+1)& (0+255),f,b
   859  001EAA  23C2               	addwfc	(??_main+2)& (0+255),f,b
   860  001EAC  23C3               	addwfc	(??_main+3)& (0+255),f,b
   861  001EAE  0100               	movlb	0	; () banked
   862  001EB0  5180               	movf	_timeCounter& (0+255),w,b	;volatile
   863  001EB2  0100               	movlb	0	; () banked
   864  001EB4  25C0               	addwf	??_main& (0+255),w,b
   865  001EB6  0100               	movlb	0	; () banked
   866  001EB8  6FC4               	movwf	(??_main+4)& (0+255),b
   867  001EBA  0100               	movlb	0	; () banked
   868  001EBC  5181               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
   869  001EBE  0100               	movlb	0	; () banked
   870  001EC0  21C1               	addwfc	(??_main+1)& (0+255),w,b
   871  001EC2  0100               	movlb	0	; () banked
   872  001EC4  6FC5               	movwf	(??_main+5)& (0+255),b
   873  001EC6  0100               	movlb	0	; () banked
   874  001EC8  5182               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
   875  001ECA  0100               	movlb	0	; () banked
   876  001ECC  21C2               	addwfc	(??_main+2)& (0+255),w,b
   877  001ECE  0100               	movlb	0	; () banked
   878  001ED0  6FC6               	movwf	(??_main+6)& (0+255),b
   879  001ED2  0100               	movlb	0	; () banked
   880  001ED4  5183               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
   881  001ED6  0100               	movlb	0	; () banked
   882  001ED8  21C3               	addwfc	(??_main+3)& (0+255),w,b
   883  001EDA  0100               	movlb	0	; () banked
   884  001EDC  6FC7               	movwf	(??_main+7)& (0+255),b
   885  001EDE  0100               	movlb	0	; () banked
   886  001EE0  51C7               	movf	(??_main+7)& (0+255),w,b
   887  001EE2  0100               	movlb	0	; () banked
   888  001EE4  11C6               	iorwf	(??_main+6)& (0+255),w,b
   889  001EE6  E108               	bnz	u6080
   890  001EE8  0EF5               	movlw	245
   891  001EEA  0100               	movlb	0	; () banked
   892  001EEC  5DC4               	subwf	(??_main+4)& (0+255),w,b
   893  001EEE  0E01               	movlw	1
   894  001EF0  0100               	movlb	0	; () banked
   895  001EF2  59C5               	subwfb	(??_main+5)& (0+255),w,b
   896  001EF4  A0D8               	btfss	status,0,c
   897  001EF6  D044               	goto	l4874
   898  001EF8                     u6080:
   899                           
   900                           ; BSR set to: 0
   901                           ;motore.c: 147: if (request_sent == 0) {
   902  001EF8  B039               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
   903  001EFA  D01E               	goto	l669
   904  001EFC                     l4852:
   905  001EFC  EC97  F012         	call	_CANisTxReady	;wreg free
   906  001F00  06E8               	decf	wreg,f,c
   907  001F02  A4D8               	btfss	status,2,c
   908  001F04  D7FB               	goto	l4852
   909                           
   910                           ;motore.c: 149: }
   911                           ;motore.c: 150: CANsendMessage(0b00000000010, data_array, 8, CAN_CONFIG_STD_MSG & CAN_RE
      +                          MOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   912  001F06  0E02               	movlw	2
   913  001F08  0100               	movlb	0	; () banked
   914  001F0A  6FAB               	movwf	CANsendMessage@identifier& (0+255),b
   915  001F0C  0E00               	movlw	0
   916  001F0E  6FAC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   917  001F10  0E00               	movlw	0
   918  001F12  6FAD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   919  001F14  0E00               	movlw	0
   920  001F16  6FAE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   921  001F18  0E9B               	movlw	low _data_array
   922  001F1A  0100               	movlb	0	; () banked
   923  001F1C  6FAF               	movwf	CANsendMessage@data& (0+255),b
   924  001F1E  0E00               	movlw	high _data_array
   925  001F20  0100               	movlb	0	; () banked
   926  001F22  6FB0               	movwf	(CANsendMessage@data+1)& (0+255),b
   927  001F24  0E08               	movlw	8
   928  001F26  0100               	movlb	0	; () banked
   929  001F28  6FB1               	movwf	CANsendMessage@dataLength& (0+255),b
   930  001F2A  0EFC               	movlw	252
   931  001F2C  0100               	movlb	0	; () banked
   932  001F2E  6FB2               	movwf	CANsendMessage@flags& (0+255),b
   933  001F30  ECC2  F005         	call	_CANsendMessage	;wreg free
   934                           
   935                           ;motore.c: 151: request_sent = 1;
   936  001F34  8039               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
   937                           
   938                           ;motore.c: 152: } else {
   939  001F36  D01C               	goto	l4872
   940  001F38                     l669:
   941                           
   942                           ; BSR set to: 0
   943                           ;motore.c: 153: if ((centralina_abs == 1)&&(centralina_sterzo == 1)&&(centralina_comando
      +                           == 1)) {
   944  001F38  B238               	btfsc	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
   945                           
   946                           ; BSR set to: 0
   947  001F3A  A638               	btfss	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
   948  001F3C  D007               	goto	l674
   949                           
   950                           ; BSR set to: 0
   951  001F3E  A438               	btfss	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
   952  001F40  D005               	goto	l674
   953                           
   954                           ; BSR set to: 0
   955                           ;motore.c: 154: centralina_abs = 0;
   956  001F42  9238               	bcf	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
   957                           
   958                           ;motore.c: 155: centralina_sterzo = 0;
   959  001F44  9638               	bcf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
   960                           
   961                           ;motore.c: 156: centralina_comando = 0;
   962  001F46  9438               	bcf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
   963                           
   964                           ;motore.c: 157: PORTAbits.RA1 = 0;
   965  001F48  9280               	bcf	3968,1,c	;volatile
   966  001F4A  D011               	goto	l4870
   967  001F4C                     l674:
   968                           
   969                           ; BSR set to: 0
   970                           ;motore.c: 161: PORTAbits.RA1 = 1;
   971  001F4C  8280               	bsf	3968,1,c	;volatile
   972                           
   973                           ; BSR set to: 0
   974                           ;motore.c: 162: delay_ms(200);
   975  001F4E  0E00               	movlw	0
   976  001F50  0100               	movlb	0	; () banked
   977  001F52  6FAE               	movwf	(delay_ms@value_ms+1)& (0+255),b
   978  001F54  0EC8               	movlw	200
   979  001F56  6FAD               	movwf	delay_ms@value_ms& (0+255),b
   980  001F58  EC52  F012         	call	_delay_ms	;wreg free
   981                           
   982                           ;motore.c: 163: PORTAbits.RA1 = 0;
   983  001F5C  9280               	bcf	3968,1,c	;volatile
   984                           
   985                           ;motore.c: 164: delay_ms(200);
   986  001F5E  0E00               	movlw	0
   987  001F60  0100               	movlb	0	; () banked
   988  001F62  6FAE               	movwf	(delay_ms@value_ms+1)& (0+255),b
   989  001F64  0EC8               	movlw	200
   990  001F66  6FAD               	movwf	delay_ms@value_ms& (0+255),b
   991  001F68  EC52  F012         	call	_delay_ms	;wreg free
   992                           
   993                           ;motore.c: 165: PORTAbits.RA1 = 1;
   994  001F6C  8280               	bsf	3968,1,c	;volatile
   995  001F6E                     l4870:
   996                           
   997                           ;motore.c: 166: request_sent = 0;
   998  001F6E  9039               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
   999  001F70                     l4872:
  1000                           
  1001                           ;motore.c: 167: }
  1002                           ;motore.c: 168: }
  1003                           ;motore.c: 169: previousTimeCounter = timeCounter;
  1004  001F70  C080  F074         	movff	_timeCounter,_previousTimeCounter	;volatile
  1005  001F74  C081  F075         	movff	_timeCounter+1,_previousTimeCounter+1	;volatile
  1006  001F78  C082  F076         	movff	_timeCounter+2,_previousTimeCounter+2	;volatile
  1007  001F7C  C083  F077         	movff	_timeCounter+3,_previousTimeCounter+3	;volatile
  1008  001F80                     l4874:
  1009                           
  1010                           ;motore.c: 170: }
  1011                           ;motore.c: 171: if ((timeCounter - previousTimeCounter2 > 100)) {
  1012  001F80  C07C  F0C0         	movff	_previousTimeCounter2,??_main
  1013  001F84  C07D  F0C1         	movff	_previousTimeCounter2+1,??_main+1
  1014  001F88  C07E  F0C2         	movff	_previousTimeCounter2+2,??_main+2
  1015  001F8C  C07F  F0C3         	movff	_previousTimeCounter2+3,??_main+3
  1016  001F90  0100               	movlb	0	; () banked
  1017  001F92  1FC0               	comf	??_main& (0+255),f,b
  1018  001F94  1FC1               	comf	(??_main+1)& (0+255),f,b
  1019  001F96  1FC2               	comf	(??_main+2)& (0+255),f,b
  1020  001F98  1FC3               	comf	(??_main+3)& (0+255),f,b
  1021  001F9A  2BC0               	incf	??_main& (0+255),f,b
  1022  001F9C  0E00               	movlw	0
  1023  001F9E  23C1               	addwfc	(??_main+1)& (0+255),f,b
  1024  001FA0  23C2               	addwfc	(??_main+2)& (0+255),f,b
  1025  001FA2  23C3               	addwfc	(??_main+3)& (0+255),f,b
  1026  001FA4  0100               	movlb	0	; () banked
  1027  001FA6  5180               	movf	_timeCounter& (0+255),w,b	;volatile
  1028  001FA8  0100               	movlb	0	; () banked
  1029  001FAA  25C0               	addwf	??_main& (0+255),w,b
  1030  001FAC  0100               	movlb	0	; () banked
  1031  001FAE  6FC4               	movwf	(??_main+4)& (0+255),b
  1032  001FB0  0100               	movlb	0	; () banked
  1033  001FB2  5181               	movf	(_timeCounter+1)& (0+255),w,b	;volatile
  1034  001FB4  0100               	movlb	0	; () banked
  1035  001FB6  21C1               	addwfc	(??_main+1)& (0+255),w,b
  1036  001FB8  0100               	movlb	0	; () banked
  1037  001FBA  6FC5               	movwf	(??_main+5)& (0+255),b
  1038  001FBC  0100               	movlb	0	; () banked
  1039  001FBE  5182               	movf	(_timeCounter+2)& (0+255),w,b	;volatile
  1040  001FC0  0100               	movlb	0	; () banked
  1041  001FC2  21C2               	addwfc	(??_main+2)& (0+255),w,b
  1042  001FC4  0100               	movlb	0	; () banked
  1043  001FC6  6FC6               	movwf	(??_main+6)& (0+255),b
  1044  001FC8  0100               	movlb	0	; () banked
  1045  001FCA  5183               	movf	(_timeCounter+3)& (0+255),w,b	;volatile
  1046  001FCC  0100               	movlb	0	; () banked
  1047  001FCE  21C3               	addwfc	(??_main+3)& (0+255),w,b
  1048  001FD0  0100               	movlb	0	; () banked
  1049  001FD2  6FC7               	movwf	(??_main+7)& (0+255),b
  1050  001FD4  0100               	movlb	0	; () banked
  1051  001FD6  51C7               	movf	(??_main+7)& (0+255),w,b
  1052  001FD8  0100               	movlb	0	; () banked
  1053  001FDA  11C6               	iorwf	(??_main+6)& (0+255),w,b
  1054  001FDC  0100               	movlb	0	; () banked
  1055  001FDE  11C5               	iorwf	(??_main+5)& (0+255),w,b
  1056  001FE0  E105               	bnz	u6140
  1057  001FE2  0E65               	movlw	101
  1058  001FE4  0100               	movlb	0	; () banked
  1059  001FE6  5DC4               	subwf	(??_main+4)& (0+255),w,b
  1060  001FE8  A0D8               	btfss	status,0,c
  1061  001FEA  D707               	goto	l4830
  1062  001FEC                     u6140:
  1063                           
  1064                           ; BSR set to: 0
  1065                           ;motore.c: 172: battery_measure();
  1066  001FEC  ECD4  F012         	call	_battery_measure	;wreg free
  1067                           
  1068                           ;motore.c: 173: previousTimeCounter2 = timeCounter;
  1069  001FF0  C080  F07C         	movff	_timeCounter,_previousTimeCounter2	;volatile
  1070  001FF4  C081  F07D         	movff	_timeCounter+1,_previousTimeCounter2+1	;volatile
  1071  001FF8  C082  F07E         	movff	_timeCounter+2,_previousTimeCounter2+2	;volatile
  1072  001FFC  C083  F07F         	movff	_timeCounter+3,_previousTimeCounter2+3	;volatile
  1073  002000  D6FC               	goto	l4830
  1074  002002                     __end_of_main:
  1075                           	opt stack 0
  1076                           tblptru	equ	0xFF8
  1077                           tblptrh	equ	0xFF7
  1078                           tblptrl	equ	0xFF6
  1079                           tablat	equ	0xFF5
  1080                           postinc0	equ	0xFEE
  1081                           wreg	equ	0xFE8
  1082                           postdec1	equ	0xFE5
  1083                           fsr1l	equ	0xFE1
  1084                           status	equ	0xFD8
  1085                           
  1086 ;; *************** function _send_data *****************
  1087 ;; Defined at:
  1088 ;;		line 217 in file "motore.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;		None               void
  1095 ;; Registers used:
  1096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1102 ;;      Params:         0       0       0       0
  1103 ;;      Locals:         0       0       0       0
  1104 ;;      Temps:          0       0       0       0
  1105 ;;      Totals:         0       0       0       0
  1106 ;;Total ram usage:        0 bytes
  1107 ;; Hardware stack levels used:    1
  1108 ;; Hardware stack levels required when called:    3
  1109 ;; This function calls:
  1110 ;;		_CANisTxReady
  1111 ;;		_CANsendMessage
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text1
  1118  00238E                     __ptext1:
  1119                           	opt stack 0
  1120  00238E                     _send_data:
  1121                           	opt stack 27
  1122                           
  1123                           ;motore.c: 218: if (CANisTxReady()) {
  1124                           
  1125                           ;incstack = 0
  1126  00238E  EC97  F012         	call	_CANisTxReady	;wreg free
  1127  002392  0900               	iorlw	0
  1128  002394  A4D8               	btfss	status,2,c
  1129                           
  1130                           ;motore.c: 219: if (remote_frame == 1) {
  1131  002396  AC38               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1132  002398  D017               	goto	l4798
  1133                           
  1134                           ;motore.c: 220: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1135  00239A  C028  F0AB         	movff	_id,CANsendMessage@identifier	;volatile
  1136  00239E  C029  F0AC         	movff	_id+1,CANsendMessage@identifier+1	;volatile
  1137  0023A2  C02A  F0AD         	movff	_id+2,CANsendMessage@identifier+2	;volatile
  1138  0023A6  C02B  F0AE         	movff	_id+3,CANsendMessage@identifier+3	;volatile
  1139  0023AA  0E9B               	movlw	low _data_array
  1140  0023AC  0100               	movlb	0	; () banked
  1141  0023AE  6FAF               	movwf	CANsendMessage@data& (0+255),b
  1142  0023B0  0E00               	movlw	high _data_array
  1143  0023B2  0100               	movlb	0	; () banked
  1144  0023B4  6FB0               	movwf	(CANsendMessage@data+1)& (0+255),b
  1145  0023B6  0E08               	movlw	8
  1146  0023B8  0100               	movlb	0	; () banked
  1147  0023BA  6FB1               	movwf	CANsendMessage@dataLength& (0+255),b
  1148  0023BC  0EBC               	movlw	188
  1149  0023BE  0100               	movlb	0	; () banked
  1150  0023C0  6FB2               	movwf	CANsendMessage@flags& (0+255),b
  1151  0023C2  ECC2  F005         	call	_CANsendMessage	;wreg free
  1152                           
  1153                           ;motore.c: 221: remote_frame = 0;
  1154  0023C6  9C38               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  1155  0023C8                     l4798:
  1156                           
  1157                           ;motore.c: 222: }
  1158                           ;motore.c: 223: }
  1159                           ;motore.c: 224: if ((TXB0CONbits.TXABT) || (TXB1CONbits.TXABT)) {
  1160  0023C8  010F               	movlb	15	; () banked
  1161  0023CA  BD40               	btfsc	64,6,b	;volatile
  1162  0023CC  D003               	goto	l702
  1163                           
  1164                           ; BSR set to: 15
  1165  0023CE  010F               	movlb	15	; () banked
  1166  0023D0  AD30               	btfss	48,6,b	;volatile
  1167  0023D2  D002               	goto	l700
  1168  0023D4                     l702:
  1169                           
  1170                           ; BSR set to: 15
  1171                           ;motore.c: 225: can_retry = 1;
  1172  0023D4  8038               	bsf	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
  1173                           
  1174                           ;motore.c: 226: } else {
  1175  0023D6  0012               	return	
  1176  0023D8                     l700:
  1177                           
  1178                           ; BSR set to: 15
  1179                           ;motore.c: 227: can_retry = 0;
  1180  0023D8  9038               	bcf	_can_retry/(0+8),_can_retry& (0+7),c	;volatile
  1181  0023DA  0012               	return	
  1182  0023DC                     __end_of_send_data:
  1183                           	opt stack 0
  1184                           tblptru	equ	0xFF8
  1185                           tblptrh	equ	0xFF7
  1186                           tblptrl	equ	0xFF6
  1187                           tablat	equ	0xFF5
  1188                           postinc0	equ	0xFEE
  1189                           wreg	equ	0xFE8
  1190                           postdec1	equ	0xFE5
  1191                           fsr1l	equ	0xFE1
  1192                           status	equ	0xFD8
  1193                           
  1194 ;; *************** function _rampe *****************
  1195 ;; Defined at:
  1196 ;;		line 178 in file "motore.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;		None               void
  1203 ;; Registers used:
  1204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1210 ;;      Params:         0       0       0       0
  1211 ;;      Locals:         0       0       0       0
  1212 ;;      Temps:          0       8       0       0
  1213 ;;      Totals:         0       8       0       0
  1214 ;;Total ram usage:        8 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:    3
  1217 ;; This function calls:
  1218 ;;		_CANisTxReady
  1219 ;;		_CANsendMessage
  1220 ;;		_SetDCEPWM1
  1221 ;;		_SetOutputEPWM1
  1222 ;;		___lwdiv
  1223 ;;		_abs
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text2
  1230  001B62                     __ptext2:
  1231                           	opt stack 0
  1232  001B62                     _rampe:
  1233                           	opt stack 27
  1234  001B62                     l4744:
  1235  001B62  EC97  F012         	call	_CANisTxReady	;wreg free
  1236  001B66  06E8               	decf	wreg,f,c
  1237  001B68  A4D8               	btfss	status,2,c
  1238  001B6A  D7FB               	goto	l4744
  1239                           
  1240                           ;motore.c: 180: CANsendMessage(0b00000000110, data_array_debug, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1241  001B6C  0E06               	movlw	6
  1242  001B6E  0100               	movlb	0	; () banked
  1243  001B70  6FAB               	movwf	CANsendMessage@identifier& (0+255),b
  1244  001B72  0E00               	movlw	0
  1245  001B74  6FAC               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1246  001B76  0E00               	movlw	0
  1247  001B78  6FAD               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1248  001B7A  0E00               	movlw	0
  1249  001B7C  6FAE               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1250  001B7E  0EA3               	movlw	low _data_array_debug
  1251  001B80  0100               	movlb	0	; () banked
  1252  001B82  6FAF               	movwf	CANsendMessage@data& (0+255),b
  1253  001B84  0E00               	movlw	high _data_array_debug
  1254  001B86  0100               	movlb	0	; () banked
  1255  001B88  6FB0               	movwf	(CANsendMessage@data+1)& (0+255),b
  1256  001B8A  0E08               	movlw	8
  1257  001B8C  0100               	movlb	0	; () banked
  1258  001B8E  6FB1               	movwf	CANsendMessage@dataLength& (0+255),b
  1259  001B90  0EFC               	movlw	252
  1260  001B92  0100               	movlb	0	; () banked
  1261  001B94  6FB2               	movwf	CANsendMessage@flags& (0+255),b
  1262  001B96  ECC2  F005         	call	_CANsendMessage	;wreg free
  1263                           
  1264                           ;motore.c: 181: if (speed_fetched == 1) {
  1265  001B9A  A239               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1266  001B9C  D102               	goto	l4786
  1267                           
  1268                           ;motore.c: 182: if (dir == 1) {
  1269  001B9E  043E               	decf	_dir,w,c	;volatile
  1270  001BA0  103F               	iorwf	_dir+1,w,c	;volatile
  1271  001BA2  A4D8               	btfss	status,2,c
  1272  001BA4  D005               	goto	l4754
  1273                           
  1274                           ;motore.c: 183: SetOutputEPWM1(0b01111111, 0b11111100);
  1275  001BA6  0EFC               	movlw	252
  1276  001BA8  6E1F               	movwf	SetOutputEPWM1@outputmode,c
  1277  001BAA  0E7F               	movlw	127
  1278  001BAC  EC13  F012         	call	_SetOutputEPWM1
  1279  001BB0                     l4754:
  1280                           
  1281                           ;motore.c: 184: }
  1282                           ;motore.c: 185: if (dir == 0) {
  1283  001BB0  503E               	movf	_dir,w,c	;volatile
  1284  001BB2  103F               	iorwf	_dir+1,w,c	;volatile
  1285  001BB4  A4D8               	btfss	status,2,c
  1286  001BB6  D005               	goto	l4758
  1287                           
  1288                           ;motore.c: 186: SetOutputEPWM1(0b11111111, 0b11111100);
  1289  001BB8  0EFC               	movlw	252
  1290  001BBA  6E1F               	movwf	SetOutputEPWM1@outputmode,c
  1291  001BBC  0EFF               	movlw	255
  1292  001BBE  EC13  F012         	call	_SetOutputEPWM1
  1293  001BC2                     l4758:
  1294                           
  1295                           ;motore.c: 187: }
  1296                           ;motore.c: 188: speed_fetched = 0;
  1297  001BC2  9239               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  1298                           
  1299                           ;motore.c: 189: currentSpeed = ((left_speed + right_speed) / 2);
  1300  001BC4  5034               	movf	_right_speed,w,c	;volatile
  1301  001BC6  2430               	addwf	_left_speed,w,c	;volatile
  1302  001BC8  0100               	movlb	0	; () banked
  1303  001BCA  6FB7               	movwf	??_rampe& (0+255),b
  1304  001BCC  5035               	movf	_right_speed+1,w,c	;volatile
  1305  001BCE  2031               	addwfc	_left_speed+1,w,c	;volatile
  1306  001BD0  0100               	movlb	0	; () banked
  1307  001BD2  6FB8               	movwf	(??_rampe+1)& (0+255),b
  1308  001BD4  90D8               	bcf	status,0,c
  1309  001BD6  0100               	movlb	0	; () banked
  1310  001BD8  31B8               	rrcf	(??_rampe+1)& (0+255),w,b
  1311  001BDA  0100               	movlb	0	; () banked
  1312  001BDC  6FBA               	movwf	(??_rampe+3)& (0+255),b
  1313  001BDE  0100               	movlb	0	; () banked
  1314  001BE0  31B7               	rrcf	??_rampe& (0+255),w,b
  1315  001BE2  0100               	movlb	0	; () banked
  1316  001BE4  6FB9               	movwf	(??_rampe+2)& (0+255),b
  1317  001BE6  C0B9  F03A         	movff	??_rampe+2,_currentSpeed	;volatile
  1318  001BEA  C0BA  F03B         	movff	??_rampe+3,_currentSpeed+1	;volatile
  1319  001BEE  6A3C               	clrf	_currentSpeed+2,c	;volatile
  1320  001BF0  6A3D               	clrf	_currentSpeed+3,c	;volatile
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;motore.c: 190: errore = abs((currentSpeed - requestSpeed));
  1324  001BF2  C02C  F0B7         	movff	_requestSpeed,??_rampe	;volatile
  1325  001BF6  C02D  F0B8         	movff	_requestSpeed+1,??_rampe+1	;volatile
  1326  001BFA  0100               	movlb	0	; () banked
  1327  001BFC  1FB7               	comf	??_rampe& (0+255),f,b
  1328  001BFE  1FB8               	comf	(??_rampe+1)& (0+255),f,b
  1329  001C00  4BB7               	infsnz	??_rampe& (0+255),f,b
  1330  001C02  2BB8               	incf	(??_rampe+1)& (0+255),f,b
  1331  001C04  503A               	movf	_currentSpeed,w,c	;volatile
  1332  001C06  0100               	movlb	0	; () banked
  1333  001C08  25B7               	addwf	??_rampe& (0+255),w,b
  1334  001C0A  6E1F               	movwf	abs@a,c
  1335  001C0C  503B               	movf	_currentSpeed+1,w,c	;volatile
  1336  001C0E  0100               	movlb	0	; () banked
  1337  001C10  21B8               	addwfc	(??_rampe+1)& (0+255),w,b
  1338  001C12  6E20               	movwf	abs@a+1,c
  1339  001C14  EC83  F012         	call	_abs	;wreg free
  1340  001C18  C01F  F088         	movff	?_abs,_errore
  1341  001C1C  C020  F089         	movff	?_abs+1,_errore+1
  1342                           
  1343                           ;motore.c: 192: correzione = errore / 20 ;
  1344  001C20  C088  F01F         	movff	_errore,___lwdiv@dividend
  1345  001C24  C089  F020         	movff	_errore+1,___lwdiv@dividend+1
  1346  001C28  0E00               	movlw	0
  1347  001C2A  6E22               	movwf	___lwdiv@divisor+1,c
  1348  001C2C  0E14               	movlw	20
  1349  001C2E  6E21               	movwf	___lwdiv@divisor,c
  1350  001C30  EC98  F011         	call	___lwdiv	;wreg free
  1351  001C34  C01F  F070         	movff	?___lwdiv,_correzione
  1352  001C38  C020  F071         	movff	?___lwdiv+1,_correzione+1
  1353  001C3C  0100               	movlb	0	; () banked
  1354  001C3E  6B72               	clrf	(_correzione+2)& (0+255),b
  1355  001C40  6B73               	clrf	(_correzione+3)& (0+255),b
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;motore.c: 193: if (correzione > 200){
  1359  001C42  0100               	movlb	0	; () banked
  1360  001C44  BF73               	btfsc	(_correzione+3)& (0+255),7,b
  1361  001C46  D015               	goto	l4770
  1362  001C48  0100               	movlb	0	; () banked
  1363  001C4A  5173               	movf	(_correzione+3)& (0+255),w,b
  1364  001C4C  0100               	movlb	0	; () banked
  1365  001C4E  1172               	iorwf	(_correzione+2)& (0+255),w,b
  1366  001C50  0100               	movlb	0	; () banked
  1367  001C52  1171               	iorwf	(_correzione+1)& (0+255),w,b
  1368  001C54  E105               	bnz	u5940
  1369  001C56  0EC9               	movlw	201
  1370  001C58  0100               	movlb	0	; () banked
  1371  001C5A  5D70               	subwf	_correzione& (0+255),w,b
  1372  001C5C  A0D8               	btfss	status,0,c
  1373  001C5E  D009               	goto	l4770
  1374  001C60                     u5940:
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;motore.c: 194: correzione = 200;
  1378  001C60  0EC8               	movlw	200
  1379  001C62  0100               	movlb	0	; () banked
  1380  001C64  6F70               	movwf	_correzione& (0+255),b
  1381  001C66  0E00               	movlw	0
  1382  001C68  6F71               	movwf	(_correzione+1)& (0+255),b
  1383  001C6A  0E00               	movlw	0
  1384  001C6C  6F72               	movwf	(_correzione+2)& (0+255),b
  1385  001C6E  0E00               	movlw	0
  1386  001C70  6F73               	movwf	(_correzione+3)& (0+255),b
  1387  001C72                     l4770:
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;motore.c: 195: }
  1391                           ;motore.c: 196: if (correzione > 10) {
  1392  001C72  0100               	movlb	0	; () banked
  1393  001C74  BF73               	btfsc	(_correzione+3)& (0+255),7,b
  1394  001C76  D08B               	goto	l4782
  1395  001C78  0100               	movlb	0	; () banked
  1396  001C7A  5173               	movf	(_correzione+3)& (0+255),w,b
  1397  001C7C  0100               	movlb	0	; () banked
  1398  001C7E  1172               	iorwf	(_correzione+2)& (0+255),w,b
  1399  001C80  0100               	movlb	0	; () banked
  1400  001C82  1171               	iorwf	(_correzione+1)& (0+255),w,b
  1401  001C84  E105               	bnz	u5950
  1402  001C86  0E0B               	movlw	11
  1403  001C88  0100               	movlb	0	; () banked
  1404  001C8A  5D70               	subwf	_correzione& (0+255),w,b
  1405  001C8C  A0D8               	btfss	status,0,c
  1406  001C8E  D07F               	goto	l4782
  1407  001C90                     u5950:
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;motore.c: 197: if (currentSpeed - requestSpeed > 0) {
  1411  001C90  C02C  F0B7         	movff	_requestSpeed,??_rampe	;volatile
  1412  001C94  C02D  F0B8         	movff	_requestSpeed+1,??_rampe+1	;volatile
  1413  001C98  C02E  F0B9         	movff	_requestSpeed+2,??_rampe+2	;volatile
  1414  001C9C  C02F  F0BA         	movff	_requestSpeed+3,??_rampe+3	;volatile
  1415  001CA0  0100               	movlb	0	; () banked
  1416  001CA2  1FB7               	comf	??_rampe& (0+255),f,b
  1417  001CA4  1FB8               	comf	(??_rampe+1)& (0+255),f,b
  1418  001CA6  1FB9               	comf	(??_rampe+2)& (0+255),f,b
  1419  001CA8  1FBA               	comf	(??_rampe+3)& (0+255),f,b
  1420  001CAA  2BB7               	incf	??_rampe& (0+255),f,b
  1421  001CAC  0E00               	movlw	0
  1422  001CAE  23B8               	addwfc	(??_rampe+1)& (0+255),f,b
  1423  001CB0  23B9               	addwfc	(??_rampe+2)& (0+255),f,b
  1424  001CB2  23BA               	addwfc	(??_rampe+3)& (0+255),f,b
  1425  001CB4  503A               	movf	_currentSpeed,w,c	;volatile
  1426  001CB6  0100               	movlb	0	; () banked
  1427  001CB8  25B7               	addwf	??_rampe& (0+255),w,b
  1428  001CBA  0100               	movlb	0	; () banked
  1429  001CBC  6FBB               	movwf	(??_rampe+4)& (0+255),b
  1430  001CBE  503B               	movf	_currentSpeed+1,w,c	;volatile
  1431  001CC0  0100               	movlb	0	; () banked
  1432  001CC2  21B8               	addwfc	(??_rampe+1)& (0+255),w,b
  1433  001CC4  0100               	movlb	0	; () banked
  1434  001CC6  6FBC               	movwf	(??_rampe+5)& (0+255),b
  1435  001CC8  503C               	movf	_currentSpeed+2,w,c	;volatile
  1436  001CCA  0100               	movlb	0	; () banked
  1437  001CCC  21B9               	addwfc	(??_rampe+2)& (0+255),w,b
  1438  001CCE  0100               	movlb	0	; () banked
  1439  001CD0  6FBD               	movwf	(??_rampe+6)& (0+255),b
  1440  001CD2  503D               	movf	_currentSpeed+3,w,c	;volatile
  1441  001CD4  0100               	movlb	0	; () banked
  1442  001CD6  21BA               	addwfc	(??_rampe+3)& (0+255),w,b
  1443  001CD8  0100               	movlb	0	; () banked
  1444  001CDA  6FBE               	movwf	(??_rampe+7)& (0+255),b
  1445  001CDC  0100               	movlb	0	; () banked
  1446  001CDE  BFBE               	btfsc	(??_rampe+7)& (0+255),7,b
  1447  001CE0  D033               	goto	l4778
  1448  001CE2  0100               	movlb	0	; () banked
  1449  001CE4  51BE               	movf	(??_rampe+7)& (0+255),w,b
  1450  001CE6  0100               	movlb	0	; () banked
  1451  001CE8  11BD               	iorwf	(??_rampe+6)& (0+255),w,b
  1452  001CEA  0100               	movlb	0	; () banked
  1453  001CEC  11BC               	iorwf	(??_rampe+5)& (0+255),w,b
  1454  001CEE  E104               	bnz	u5960
  1455  001CF0  0100               	movlb	0	; () banked
  1456  001CF2  05BB               	decf	(??_rampe+4)& (0+255),w,b
  1457  001CF4  A0D8               	btfss	status,0,c
  1458  001CF6  D028               	goto	l4778
  1459  001CF8                     u5960:
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;motore.c: 198: duty_set = previousPwm - correzione;
  1463  001CF8  C070  F0B7         	movff	_correzione,??_rampe
  1464  001CFC  C071  F0B8         	movff	_correzione+1,??_rampe+1
  1465  001D00  C072  F0B9         	movff	_correzione+2,??_rampe+2
  1466  001D04  C073  F0BA         	movff	_correzione+3,??_rampe+3
  1467  001D08  0100               	movlb	0	; () banked
  1468  001D0A  1FB7               	comf	??_rampe& (0+255),f,b
  1469  001D0C  1FB8               	comf	(??_rampe+1)& (0+255),f,b
  1470  001D0E  1FB9               	comf	(??_rampe+2)& (0+255),f,b
  1471  001D10  1FBA               	comf	(??_rampe+3)& (0+255),f,b
  1472  001D12  2BB7               	incf	??_rampe& (0+255),f,b
  1473  001D14  0E00               	movlw	0
  1474  001D16  23B8               	addwfc	(??_rampe+1)& (0+255),f,b
  1475  001D18  23B9               	addwfc	(??_rampe+2)& (0+255),f,b
  1476  001D1A  23BA               	addwfc	(??_rampe+3)& (0+255),f,b
  1477  001D1C  5032               	movf	_previousPwm,w,c
  1478  001D1E  0100               	movlb	0	; () banked
  1479  001D20  25B7               	addwf	??_rampe& (0+255),w,b
  1480  001D22  6E24               	movwf	_duty_set,c
  1481  001D24  5033               	movf	_previousPwm+1,w,c
  1482  001D26  0100               	movlb	0	; () banked
  1483  001D28  21B8               	addwfc	(??_rampe+1)& (0+255),w,b
  1484  001D2A  6E25               	movwf	_duty_set+1,c
  1485  001D2C  0E00               	movlw	0
  1486  001D2E  0100               	movlb	0	; () banked
  1487  001D30  21B9               	addwfc	(??_rampe+2)& (0+255),w,b
  1488  001D32  6E26               	movwf	_duty_set+2,c
  1489  001D34  0E00               	movlw	0
  1490  001D36  0100               	movlb	0	; () banked
  1491  001D38  21BA               	addwfc	(??_rampe+3)& (0+255),w,b
  1492  001D3A  6E27               	movwf	_duty_set+3,c
  1493                           
  1494                           ;motore.c: 199: if (duty_set < 0) {
  1495  001D3C  AE27               	btfss	_duty_set+3,7,c
  1496  001D3E  D02D               	goto	l4784
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;motore.c: 200: duty_set = 0;
  1500  001D40  0E00               	movlw	0
  1501  001D42  6E24               	movwf	_duty_set,c
  1502  001D44  0E00               	movlw	0
  1503  001D46  D01D               	goto	L1
  1504  001D48                     l4778:
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;motore.c: 203: duty_set = previousPwm + correzione;
  1508  001D48  5032               	movf	_previousPwm,w,c
  1509  001D4A  0100               	movlb	0	; () banked
  1510  001D4C  2570               	addwf	_correzione& (0+255),w,b
  1511  001D4E  6E24               	movwf	_duty_set,c
  1512  001D50  5033               	movf	_previousPwm+1,w,c
  1513  001D52  0100               	movlb	0	; () banked
  1514  001D54  2171               	addwfc	(_correzione+1)& (0+255),w,b
  1515  001D56  6E25               	movwf	_duty_set+1,c
  1516  001D58  0E00               	movlw	0
  1517  001D5A  0100               	movlb	0	; () banked
  1518  001D5C  2172               	addwfc	(_correzione+2)& (0+255),w,b
  1519  001D5E  6E26               	movwf	_duty_set+2,c
  1520  001D60  0E00               	movlw	0
  1521  001D62  0100               	movlb	0	; () banked
  1522  001D64  2173               	addwfc	(_correzione+3)& (0+255),w,b
  1523  001D66  6E27               	movwf	_duty_set+3,c
  1524                           
  1525                           ;motore.c: 204: if (duty_set > 1024) {
  1526  001D68  BE27               	btfsc	_duty_set+3,7,c
  1527  001D6A  D017               	goto	l4784
  1528  001D6C  5027               	movf	_duty_set+3,w,c
  1529  001D6E  1026               	iorwf	_duty_set+2,w,c
  1530  001D70  E105               	bnz	u5980
  1531  001D72  0424               	decf	_duty_set,w,c
  1532  001D74  0E04               	movlw	4
  1533  001D76  5825               	subwfb	_duty_set+1,w,c
  1534  001D78  A0D8               	btfss	status,0,c
  1535  001D7A  D00F               	goto	l4784
  1536  001D7C                     u5980:
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;motore.c: 205: duty_set = 1023;
  1540  001D7C  0EFF               	movlw	255
  1541  001D7E  6E24               	movwf	_duty_set,c
  1542  001D80  0E03               	movlw	3
  1543  001D82                     L1:
  1544  001D82  6E25               	movwf	_duty_set+1,c
  1545  001D84  0E00               	movlw	0
  1546  001D86  6E26               	movwf	_duty_set+2,c
  1547  001D88  0E00               	movlw	0
  1548  001D8A  6E27               	movwf	_duty_set+3,c
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;motore.c: 206: }
  1552                           ;motore.c: 207: }
  1553                           ;motore.c: 208: } else {
  1554                           
  1555                           ; BSR set to: 0
  1556  001D8C  D006               	goto	l4784
  1557  001D8E                     l4782:
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;motore.c: 209: duty_set = previousPwm;
  1561  001D8E  C032  F024         	movff	_previousPwm,_duty_set
  1562  001D92  C033  F025         	movff	_previousPwm+1,_duty_set+1
  1563  001D96  6A26               	clrf	_duty_set+2,c
  1564  001D98  6A27               	clrf	_duty_set+3,c
  1565  001D9A                     l4784:
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;motore.c: 210: }
  1569                           ;motore.c: 211: previousPwm = duty_set;
  1570  001D9A  C024  F032         	movff	_duty_set,_previousPwm
  1571  001D9E  C025  F033         	movff	_duty_set+1,_previousPwm+1
  1572  001DA2                     l4786:
  1573                           
  1574                           ;motore.c: 212: }
  1575                           ;motore.c: 213: previousTimeCounter1 = timeCounter;
  1576  001DA2  C080  F078         	movff	_timeCounter,_previousTimeCounter1	;volatile
  1577  001DA6  C081  F079         	movff	_timeCounter+1,_previousTimeCounter1+1	;volatile
  1578  001DAA  C082  F07A         	movff	_timeCounter+2,_previousTimeCounter1+2	;volatile
  1579  001DAE  C083  F07B         	movff	_timeCounter+3,_previousTimeCounter1+3	;volatile
  1580                           
  1581                           ;motore.c: 214: SetDCEPWM1(duty_set);
  1582  001DB2  C024  F01F         	movff	_duty_set,SetDCEPWM1@dutycycle
  1583  001DB6  C025  F020         	movff	_duty_set+1,SetDCEPWM1@dutycycle+1
  1584  001DBA  EC35  F012         	call	_SetDCEPWM1	;wreg free
  1585  001DBE  0012               	return		;funcret
  1586  001DC0                     __end_of_rampe:
  1587                           	opt stack 0
  1588                           tblptru	equ	0xFF8
  1589                           tblptrh	equ	0xFF7
  1590                           tblptrl	equ	0xFF6
  1591                           tablat	equ	0xFF5
  1592                           postinc0	equ	0xFEE
  1593                           wreg	equ	0xFE8
  1594                           postdec1	equ	0xFE5
  1595                           fsr1l	equ	0xFE1
  1596                           status	equ	0xFD8
  1597                           
  1598 ;; *************** function _abs *****************
  1599 ;; Defined at:
  1600 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  a               2   30[COMRAM] int 
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  2   30[COMRAM] int 
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, status,0
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1614 ;;      Params:         2       0       0       0
  1615 ;;      Locals:         0       0       0       0
  1616 ;;      Temps:          2       0       0       0
  1617 ;;      Totals:         4       0       0       0
  1618 ;;Total ram usage:        4 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    2
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		_rampe
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text3
  1629  002506                     __ptext3:
  1630                           	opt stack 0
  1631  002506                     _abs:
  1632                           	opt stack 27
  1633                           
  1634                           ;incstack = 0
  1635  002506  AE20               	btfss	abs@a+1,7,c
  1636  002508  D00D               	goto	l816
  1637  00250A  C01F  F021         	movff	abs@a,??_abs
  1638  00250E  C020  F022         	movff	abs@a+1,??_abs+1
  1639  002512  1E21               	comf	??_abs,f,c
  1640  002514  1E22               	comf	??_abs+1,f,c
  1641  002516  4A21               	infsnz	??_abs,f,c
  1642  002518  2A22               	incf	??_abs+1,f,c
  1643  00251A  C021  F01F         	movff	??_abs,?_abs
  1644  00251E  C022  F020         	movff	??_abs+1,?_abs+1
  1645  002522  0012               	return	
  1646  002524                     l816:
  1647  002524  C01F  F01F         	movff	abs@a,?_abs
  1648  002528  C020  F020         	movff	abs@a+1,?_abs+1
  1649  00252C  0012               	return		;funcret
  1650  00252E                     __end_of_abs:
  1651                           	opt stack 0
  1652                           tblptru	equ	0xFF8
  1653                           tblptrh	equ	0xFF7
  1654                           tblptrl	equ	0xFF6
  1655                           tablat	equ	0xFF5
  1656                           postinc0	equ	0xFEE
  1657                           wreg	equ	0xFE8
  1658                           postdec1	equ	0xFE5
  1659                           fsr1l	equ	0xFE1
  1660                           status	equ	0xFD8
  1661                           
  1662 ;; *************** function ___lwdiv *****************
  1663 ;; Defined at:
  1664 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  dividend        2   30[COMRAM] unsigned int 
  1667 ;;  divisor         2   32[COMRAM] unsigned int 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  quotient        2    1[BANK0 ] unsigned int 
  1670 ;;  counter         1    0[BANK0 ] unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  2   30[COMRAM] unsigned int 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2, status,0
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1680 ;;      Params:         4       0       0       0
  1681 ;;      Locals:         0       3       0       0
  1682 ;;      Temps:          0       0       0       0
  1683 ;;      Totals:         4       3       0       0
  1684 ;;Total ram usage:        7 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; Hardware stack levels required when called:    2
  1687 ;; This function calls:
  1688 ;;		Nothing
  1689 ;; This function is called by:
  1690 ;;		_rampe
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text4
  1695  002330                     __ptext4:
  1696                           	opt stack 0
  1697  002330                     ___lwdiv:
  1698                           	opt stack 27
  1699                           
  1700                           ;incstack = 0
  1701  002330  0E00               	movlw	0
  1702  002332  0100               	movlb	0	; () banked
  1703  002334  6FAD               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1704  002336  0E00               	movlw	0
  1705  002338  6FAC               	movwf	___lwdiv@quotient& (0+255),b
  1706                           
  1707                           ; BSR set to: 0
  1708  00233A  5021               	movf	___lwdiv@divisor,w,c
  1709  00233C  1022               	iorwf	___lwdiv@divisor+1,w,c
  1710  00233E  B4D8               	btfsc	status,2,c
  1711  002340  D021               	goto	l1173
  1712                           
  1713                           ; BSR set to: 0
  1714  002342  0E01               	movlw	1
  1715  002344  0100               	movlb	0	; () banked
  1716  002346  6FAB               	movwf	___lwdiv@counter& (0+255),b
  1717  002348  D005               	goto	l4634
  1718  00234A                     l4632:
  1719                           
  1720                           ; BSR set to: 0
  1721  00234A  90D8               	bcf	status,0,c
  1722  00234C  3621               	rlcf	___lwdiv@divisor,f,c
  1723  00234E  3622               	rlcf	___lwdiv@divisor+1,f,c
  1724  002350  0100               	movlb	0	; () banked
  1725  002352  2BAB               	incf	___lwdiv@counter& (0+255),f,b
  1726  002354                     l4634:
  1727                           
  1728                           ; BSR set to: 0
  1729  002354  AE22               	btfss	___lwdiv@divisor+1,7,c
  1730  002356  D7F9               	goto	l4632
  1731  002358                     l4636:
  1732                           
  1733                           ; BSR set to: 0
  1734  002358  0100               	movlb	0	; () banked
  1735  00235A  90D8               	bcf	status,0,c
  1736  00235C  37AC               	rlcf	___lwdiv@quotient& (0+255),f,b
  1737  00235E  37AD               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1738                           
  1739                           ; BSR set to: 0
  1740  002360  5021               	movf	___lwdiv@divisor,w,c
  1741  002362  5C1F               	subwf	___lwdiv@dividend,w,c
  1742  002364  5022               	movf	___lwdiv@divisor+1,w,c
  1743  002366  5820               	subwfb	___lwdiv@dividend+1,w,c
  1744  002368  A0D8               	btfss	status,0,c
  1745  00236A  D006               	goto	l4644
  1746                           
  1747                           ; BSR set to: 0
  1748  00236C  5021               	movf	___lwdiv@divisor,w,c
  1749  00236E  5E1F               	subwf	___lwdiv@dividend,f,c
  1750  002370  5022               	movf	___lwdiv@divisor+1,w,c
  1751  002372  5A20               	subwfb	___lwdiv@dividend+1,f,c
  1752                           
  1753                           ; BSR set to: 0
  1754  002374  0100               	movlb	0	; () banked
  1755  002376  81AC               	bsf	___lwdiv@quotient& (0+255),0,b
  1756  002378                     l4644:
  1757                           
  1758                           ; BSR set to: 0
  1759  002378  90D8               	bcf	status,0,c
  1760  00237A  3222               	rrcf	___lwdiv@divisor+1,f,c
  1761  00237C  3221               	rrcf	___lwdiv@divisor,f,c
  1762                           
  1763                           ; BSR set to: 0
  1764  00237E  0100               	movlb	0	; () banked
  1765  002380  2FAB               	decfsz	___lwdiv@counter& (0+255),f,b
  1766  002382  D7EA               	goto	l4636
  1767  002384                     l1173:
  1768                           
  1769                           ; BSR set to: 0
  1770  002384  C0AC  F01F         	movff	___lwdiv@quotient,?___lwdiv
  1771  002388  C0AD  F020         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1772                           
  1773                           ; BSR set to: 0
  1774  00238C  0012               	return		;funcret
  1775  00238E                     __end_of___lwdiv:
  1776                           	opt stack 0
  1777                           tblptru	equ	0xFF8
  1778                           tblptrh	equ	0xFF7
  1779                           tblptrl	equ	0xFF6
  1780                           tablat	equ	0xFF5
  1781                           postinc0	equ	0xFEE
  1782                           wreg	equ	0xFE8
  1783                           postdec1	equ	0xFE5
  1784                           fsr1l	equ	0xFE1
  1785                           status	equ	0xFD8
  1786                           
  1787 ;; *************** function _SetDCEPWM1 *****************
  1788 ;; Defined at:
  1789 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;  dutycycle       2   30[COMRAM] unsigned int 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  DCycle          2    0[BANK0 ] struct PWMDC
  1794 ;; Return value:  Size  Location     Type
  1795 ;;		None               void
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1803 ;;      Params:         2       0       0       0
  1804 ;;      Locals:         0       2       0       0
  1805 ;;      Temps:          2       0       0       0
  1806 ;;      Totals:         4       2       0       0
  1807 ;;Total ram usage:        6 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    2
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;;		_rampe
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text5
  1819  00246A                     __ptext5:
  1820                           	opt stack 0
  1821  00246A                     _SetDCEPWM1:
  1822                           	opt stack 27
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;incstack = 0
  1826  00246A  C01F  F021         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  1827  00246E  C020  F022         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  1828  002472  0E06               	movlw	6
  1829  002474                     u5865:
  1830  002474  90D8               	bcf	status,0,c
  1831  002476  3621               	rlcf	??_SetDCEPWM1,f,c
  1832  002478  3622               	rlcf	??_SetDCEPWM1+1,f,c
  1833  00247A  2EE8               	decfsz	wreg,f,c
  1834  00247C  D7FB               	goto	u5865
  1835  00247E  C021  F0AB         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  1836  002482  C022  F0AC         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  1837  002486  C0AC  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  1838  00248A  C0AB  F021         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  1839  00248E  90D8               	bcf	status,0,c
  1840  002490  3221               	rrcf	??_SetDCEPWM1,f,c
  1841  002492  90D8               	bcf	status,0,c
  1842  002494  3221               	rrcf	??_SetDCEPWM1,f,c
  1843  002496  0E30               	movlw	48
  1844  002498  1621               	andwf	??_SetDCEPWM1,f,c
  1845  00249A  50BA               	movf	4026,w,c	;volatile
  1846  00249C  0BCF               	andlw	207
  1847  00249E  1021               	iorwf	??_SetDCEPWM1,w,c
  1848  0024A0  6EBA               	movwf	4026,c	;volatile
  1849  0024A2  0012               	return		;funcret
  1850  0024A4                     __end_of_SetDCEPWM1:
  1851                           	opt stack 0
  1852                           tblptru	equ	0xFF8
  1853                           tblptrh	equ	0xFF7
  1854                           tblptrl	equ	0xFF6
  1855                           tablat	equ	0xFF5
  1856                           postinc0	equ	0xFEE
  1857                           wreg	equ	0xFE8
  1858                           postdec1	equ	0xFE5
  1859                           fsr1l	equ	0xFE1
  1860                           status	equ	0xFD8
  1861                           
  1862 ;; *************** function _CANsendMessage *****************
  1863 ;; Defined at:
  1864 ;;		line 294 in file "CANlib.h"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  identifier      4    0[BANK0 ] unsigned long 
  1867 ;;  data            2    4[BANK0 ] PTR unsigned char 
  1868 ;;		 -> data_array_debug(8), data_array(8), 
  1869 ;;  dataLength      1    6[BANK0 ] unsigned char 
  1870 ;;  flags           1    7[BANK0 ] enum E16866
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  tamp            4    8[BANK0 ] unsigned long 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;		None               void
  1875 ;; Registers used:
  1876 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1882 ;;      Params:         0       8       0       0
  1883 ;;      Locals:         0       4       0       0
  1884 ;;      Temps:          4       0       0       0
  1885 ;;      Totals:         4      12       0       0
  1886 ;;Total ram usage:       16 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    2
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_main
  1893 ;;		_rampe
  1894 ;;		_send_data
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text6
  1899  000B84                     __ptext6:
  1900                           	opt stack 0
  1901  000B84                     _CANsendMessage:
  1902                           	opt stack 27
  1903                           
  1904                           ;CANlib.h: 296: unsigned long tamp;
  1905                           ;CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1906                           
  1907                           ;incstack = 0
  1908  000B84  010F               	movlb	15	; () banked
  1909  000B86  B740               	btfsc	64,3,b	;volatile
  1910  000B88  D13B               	goto	l365
  1911                           
  1912                           ; BSR set to: 15
  1913                           ;CANlib.h: 299: { TXB0DLC = dataLength;
  1914  000B8A  C0B1  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1915                           
  1916                           ;CANlib.h: 300: if (0b01000000 & flags)
  1917  000B8E  0100               	movlb	0	; () banked
  1918  000B90  ADB2               	btfss	CANsendMessage@flags& (0+255),6,b
  1919  000B92  D003               	goto	l366
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1923  000B94  010F               	movlb	15	; () banked
  1924  000B96  8D45               	bsf	69,6,b	;volatile
  1925  000B98  D002               	goto	l367
  1926  000B9A                     l366:
  1927                           
  1928                           ; BSR set to: 0
  1929                           ;CANlib.h: 302: else
  1930                           ;CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1931  000B9A  010F               	movlb	15	; () banked
  1932  000B9C  9D45               	bcf	69,6,b	;volatile
  1933  000B9E                     l367:
  1934                           
  1935                           ; BSR set to: 15
  1936                           ;CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1937  000B9E  0100               	movlb	0	; () banked
  1938  000BA0  A7B2               	btfss	CANsendMessage@flags& (0+255),3,b
  1939  000BA2  D077               	goto	l368
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;CANlib.h: 306: {
  1943                           ;CANlib.h: 308: tamp = identifier & 0x000000FF;
  1944  000BA4  0100               	movlb	0	; () banked
  1945  000BA6  51AB               	movf	CANsendMessage@identifier& (0+255),w,b
  1946  000BA8  0100               	movlb	0	; () banked
  1947  000BAA  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  1948  000BAC  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1949  000BAE  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1950  000BB0  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1954  000BB2  C0B3  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1958  000BB6  0E00               	movlw	0
  1959  000BB8  0100               	movlb	0	; () banked
  1960  000BBA  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  1961  000BBC  0100               	movlb	0	; () banked
  1962  000BBE  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  1963  000BC0  0EFF               	movlw	255
  1964  000BC2  0100               	movlb	0	; () banked
  1965  000BC4  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1966  000BC6  0100               	movlb	0	; () banked
  1967  000BC8  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1968  000BCA  0E00               	movlw	0
  1969  000BCC  0100               	movlb	0	; () banked
  1970  000BCE  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1971  000BD0  0100               	movlb	0	; () banked
  1972  000BD2  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1973  000BD4  0E00               	movlw	0
  1974  000BD6  0100               	movlb	0	; () banked
  1975  000BD8  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1976  000BDA  0100               	movlb	0	; () banked
  1977  000BDC  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;CANlib.h: 312: tamp = tamp >> 8;
  1981  000BDE  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  1982  000BE2  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1983  000BE6  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1984  000BEA  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1985  000BEE  C020  F01F         	movff	??_CANsendMessage+1,??_CANsendMessage
  1986  000BF2  C021  F020         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1987  000BF6  C022  F021         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1988  000BFA  6A22               	clrf	??_CANsendMessage+3,c
  1989  000BFC  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  1990  000C00  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1991  000C04  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1992  000C08  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1996  000C0C  C0B3  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;CANlib.h: 315: TXB0SIDL = 0x00;
  2000  000C10  0E00               	movlw	0
  2001  000C12  010F               	movlb	15	; () banked
  2002  000C14  6F42               	movwf	66,b	;volatile
  2003                           
  2004                           ; BSR set to: 15
  2005                           ;CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  2006  000C16  010F               	movlb	15	; () banked
  2007  000C18  8742               	bsf	66,3,b	;volatile
  2008                           
  2009                           ; BSR set to: 15
  2010                           ;CANlib.h: 318: if (identifier & 0x00010000)
  2011  000C1A  0100               	movlb	0	; () banked
  2012  000C1C  A1AD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2013  000C1E  D002               	goto	l369
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  2017  000C20  010F               	movlb	15	; () banked
  2018  000C22  8142               	bsf	66,0,b	;volatile
  2019  000C24                     l369:
  2020                           
  2021                           ;CANlib.h: 320: if (identifier & 0x00020000)
  2022  000C24  0100               	movlb	0	; () banked
  2023  000C26  A3AD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2024  000C28  D002               	goto	l370
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  2028  000C2A  010F               	movlb	15	; () banked
  2029  000C2C  8342               	bsf	66,1,b	;volatile
  2030  000C2E                     l370:
  2031                           
  2032                           ;CANlib.h: 322: if (identifier & 0x00040000)
  2033  000C2E  0100               	movlb	0	; () banked
  2034  000C30  A5AD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2035  000C32  D002               	goto	l371
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  2039  000C34  010F               	movlb	15	; () banked
  2040  000C36  8B42               	bsf	66,5,b	;volatile
  2041  000C38                     l371:
  2042                           
  2043                           ;CANlib.h: 324: if (identifier & 0x00080000)
  2044  000C38  0100               	movlb	0	; () banked
  2045  000C3A  A7AD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2046  000C3C  D002               	goto	l372
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  2050  000C3E  010F               	movlb	15	; () banked
  2051  000C40  8D42               	bsf	66,6,b	;volatile
  2052  000C42                     l372:
  2053                           
  2054                           ;CANlib.h: 326: if (identifier & 0x00100000)
  2055  000C42  0100               	movlb	0	; () banked
  2056  000C44  A9AD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2057  000C46  D002               	goto	l4418
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  2061  000C48  010F               	movlb	15	; () banked
  2062  000C4A  8F42               	bsf	66,7,b	;volatile
  2063  000C4C                     l4418:
  2064                           
  2065                           ;CANlib.h: 329: tamp = (identifier >> 21);
  2066  000C4C  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  2067  000C50  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2068  000C54  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2069  000C58  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2070  000C5C  0E16               	movlw	22
  2071  000C5E  D005               	goto	u5540
  2072  000C60                     u5545:
  2073  000C60  90D8               	bcf	status,0,c
  2074  000C62  3222               	rrcf	??_CANsendMessage+3,f,c
  2075  000C64  3221               	rrcf	??_CANsendMessage+2,f,c
  2076  000C66  3220               	rrcf	??_CANsendMessage+1,f,c
  2077  000C68  321F               	rrcf	??_CANsendMessage,f,c
  2078  000C6A                     u5540:
  2079  000C6A  2EE8               	decfsz	wreg,f,c
  2080  000C6C  D7F9               	goto	u5545
  2081  000C6E  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2082  000C72  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2083  000C76  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2084  000C7A  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2085                           
  2086                           ;CANlib.h: 330: tamp = tamp & 0x000000FF;
  2087  000C7E  0100               	movlb	0	; () banked
  2088  000C80  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  2089  000C82  0100               	movlb	0	; () banked
  2090  000C84  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2091  000C86  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2092  000C88  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2093  000C8A  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  2097  000C8C  C0B3  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  2098                           
  2099                           ;CANlib.h: 332: }
  2100  000C90  D057               	goto	l4438
  2101  000C92                     l368:
  2102                           
  2103                           ; BSR set to: 0
  2104                           ;CANlib.h: 334: else
  2105                           ;CANlib.h: 336: {
  2106                           ;CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  2107  000C92  010F               	movlb	15	; () banked
  2108  000C94  9742               	bcf	66,3,b	;volatile
  2109                           
  2110                           ; BSR set to: 15
  2111                           ;CANlib.h: 339: tamp = (identifier >> 3);
  2112  000C96  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  2113  000C9A  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2114  000C9E  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2115  000CA2  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2116  000CA6  0E04               	movlw	4
  2117  000CA8  D005               	goto	u5550
  2118  000CAA                     u5555:
  2119  000CAA  90D8               	bcf	status,0,c
  2120  000CAC  3222               	rrcf	??_CANsendMessage+3,f,c
  2121  000CAE  3221               	rrcf	??_CANsendMessage+2,f,c
  2122  000CB0  3220               	rrcf	??_CANsendMessage+1,f,c
  2123  000CB2  321F               	rrcf	??_CANsendMessage,f,c
  2124  000CB4                     u5550:
  2125  000CB4  2EE8               	decfsz	wreg,f,c
  2126  000CB6  D7F9               	goto	u5555
  2127  000CB8  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2128  000CBC  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2129  000CC0  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2130  000CC4  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2131                           
  2132                           ; BSR set to: 15
  2133                           ;CANlib.h: 340: tamp = tamp & 0x000000FF;
  2134  000CC8  0100               	movlb	0	; () banked
  2135  000CCA  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  2136  000CCC  0100               	movlb	0	; () banked
  2137  000CCE  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2138  000CD0  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2139  000CD2  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2140  000CD4  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2141                           
  2142                           ; BSR set to: 0
  2143                           ;CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  2144  000CD6  C0B3  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;CANlib.h: 343: tamp = identifier & 0x00000007;
  2148  000CDA  0E07               	movlw	7
  2149  000CDC  0100               	movlb	0	; () banked
  2150  000CDE  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  2151  000CE0  0100               	movlb	0	; () banked
  2152  000CE2  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2153  000CE4  0E00               	movlw	0
  2154  000CE6  0100               	movlb	0	; () banked
  2155  000CE8  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2156  000CEA  0100               	movlb	0	; () banked
  2157  000CEC  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2158  000CEE  0E00               	movlw	0
  2159  000CF0  0100               	movlb	0	; () banked
  2160  000CF2  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2161  000CF4  0100               	movlb	0	; () banked
  2162  000CF6  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2163  000CF8  0E00               	movlw	0
  2164  000CFA  0100               	movlb	0	; () banked
  2165  000CFC  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2166  000CFE  0100               	movlb	0	; () banked
  2167  000D00  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;CANlib.h: 344: tamp = tamp << 5;
  2171  000D02  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  2172  000D06  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2173  000D0A  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2174  000D0E  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2175  000D12  0E05               	movlw	5
  2176  000D14                     u5565:
  2177  000D14  90D8               	bcf	status,0,c
  2178  000D16  361F               	rlcf	??_CANsendMessage,f,c
  2179  000D18  3620               	rlcf	??_CANsendMessage+1,f,c
  2180  000D1A  3621               	rlcf	??_CANsendMessage+2,f,c
  2181  000D1C  3622               	rlcf	??_CANsendMessage+3,f,c
  2182  000D1E  2EE8               	decfsz	wreg,f,c
  2183  000D20  D7F9               	goto	u5565
  2184  000D22  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2185  000D26  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2186  000D2A  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2187  000D2E  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  2191  000D32  010F               	movlb	15	; () banked
  2192  000D34  5142               	movf	66,w,b	;volatile
  2193  000D36  0B1F               	andlw	31
  2194  000D38  010F               	movlb	15	; () banked
  2195  000D3A  6F42               	movwf	66,b	;volatile
  2196                           
  2197                           ; BSR set to: 15
  2198                           ;CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  2199  000D3C  C0B3  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  2200  000D40                     l4438:
  2201                           
  2202                           ;CANlib.h: 347: }
  2203                           ;CANlib.h: 349: if (0b00000001 & flags)
  2204  000D40  0100               	movlb	0	; () banked
  2205  000D42  A1B2               	btfss	CANsendMessage@flags& (0+255),0,b
  2206  000D44  D003               	goto	l375
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  2210  000D46  010F               	movlb	15	; () banked
  2211  000D48  8140               	bsf	64,0,b	;volatile
  2212  000D4A  D002               	goto	l376
  2213  000D4C                     l375:
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;CANlib.h: 351: else
  2217                           ;CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  2218  000D4C  010F               	movlb	15	; () banked
  2219  000D4E  9140               	bcf	64,0,b	;volatile
  2220  000D50                     l376:
  2221                           
  2222                           ; BSR set to: 15
  2223                           ;CANlib.h: 353: if (0b00000010 & flags)
  2224  000D50  0100               	movlb	0	; () banked
  2225  000D52  A3B2               	btfss	CANsendMessage@flags& (0+255),1,b
  2226  000D54  D003               	goto	l377
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  2230  000D56  010F               	movlb	15	; () banked
  2231  000D58  8340               	bsf	64,1,b	;volatile
  2232  000D5A  D002               	goto	l4444
  2233  000D5C                     l377:
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;CANlib.h: 355: else
  2237                           ;CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  2238  000D5C  010F               	movlb	15	; () banked
  2239  000D5E  9340               	bcf	64,1,b	;volatile
  2240  000D60                     l4444:
  2241                           
  2242                           ; BSR set to: 15
  2243                           ;CANlib.h: 358: TXB0D0 = data[0];
  2244  000D60  C0AF  FFD9         	movff	CANsendMessage@data,fsr2l
  2245  000D64  C0B0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2246  000D68  50DF               	movf	indf2,w,c
  2247  000D6A  010F               	movlb	15	; () banked
  2248  000D6C  6F46               	movwf	70,b	;volatile
  2249                           
  2250                           ; BSR set to: 15
  2251                           ;CANlib.h: 359: TXB0D1 = data[1];
  2252  000D6E  0100               	movlb	0	; () banked
  2253  000D70  EE20 F001          	lfsr	2,1
  2254  000D74  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2255  000D76  26D9               	addwf	fsr2l,f,c
  2256  000D78  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2257  000D7A  22DA               	addwfc	fsr2h,f,c
  2258  000D7C  50DF               	movf	indf2,w,c
  2259  000D7E  010F               	movlb	15	; () banked
  2260  000D80  6F47               	movwf	71,b	;volatile
  2261                           
  2262                           ; BSR set to: 15
  2263                           ;CANlib.h: 360: TXB0D2 = data[2];
  2264  000D82  0100               	movlb	0	; () banked
  2265  000D84  EE20 F002          	lfsr	2,2
  2266  000D88  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2267  000D8A  26D9               	addwf	fsr2l,f,c
  2268  000D8C  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2269  000D8E  22DA               	addwfc	fsr2h,f,c
  2270  000D90  50DF               	movf	indf2,w,c
  2271  000D92  010F               	movlb	15	; () banked
  2272  000D94  6F48               	movwf	72,b	;volatile
  2273                           
  2274                           ; BSR set to: 15
  2275                           ;CANlib.h: 361: TXB0D3 = data[3];
  2276  000D96  0100               	movlb	0	; () banked
  2277  000D98  EE20 F003          	lfsr	2,3
  2278  000D9C  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2279  000D9E  26D9               	addwf	fsr2l,f,c
  2280  000DA0  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2281  000DA2  22DA               	addwfc	fsr2h,f,c
  2282  000DA4  50DF               	movf	indf2,w,c
  2283  000DA6  010F               	movlb	15	; () banked
  2284  000DA8  6F49               	movwf	73,b	;volatile
  2285                           
  2286                           ; BSR set to: 15
  2287                           ;CANlib.h: 362: TXB0D4 = data[4];
  2288  000DAA  0100               	movlb	0	; () banked
  2289  000DAC  EE20 F004          	lfsr	2,4
  2290  000DB0  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2291  000DB2  26D9               	addwf	fsr2l,f,c
  2292  000DB4  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2293  000DB6  22DA               	addwfc	fsr2h,f,c
  2294  000DB8  50DF               	movf	indf2,w,c
  2295  000DBA  010F               	movlb	15	; () banked
  2296  000DBC  6F4A               	movwf	74,b	;volatile
  2297                           
  2298                           ; BSR set to: 15
  2299                           ;CANlib.h: 363: TXB0D5 = data[5];
  2300  000DBE  0100               	movlb	0	; () banked
  2301  000DC0  EE20 F005          	lfsr	2,5
  2302  000DC4  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2303  000DC6  26D9               	addwf	fsr2l,f,c
  2304  000DC8  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2305  000DCA  22DA               	addwfc	fsr2h,f,c
  2306  000DCC  50DF               	movf	indf2,w,c
  2307  000DCE  010F               	movlb	15	; () banked
  2308  000DD0  6F4B               	movwf	75,b	;volatile
  2309                           
  2310                           ; BSR set to: 15
  2311                           ;CANlib.h: 364: TXB0D6 = data[6];
  2312  000DD2  0100               	movlb	0	; () banked
  2313  000DD4  EE20 F006          	lfsr	2,6
  2314  000DD8  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2315  000DDA  26D9               	addwf	fsr2l,f,c
  2316  000DDC  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2317  000DDE  22DA               	addwfc	fsr2h,f,c
  2318  000DE0  50DF               	movf	indf2,w,c
  2319  000DE2  010F               	movlb	15	; () banked
  2320  000DE4  6F4C               	movwf	76,b	;volatile
  2321                           
  2322                           ; BSR set to: 15
  2323                           ;CANlib.h: 365: TXB0D7 = data[7];
  2324  000DE6  0100               	movlb	0	; () banked
  2325  000DE8  EE20 F007          	lfsr	2,7
  2326  000DEC  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2327  000DEE  26D9               	addwf	fsr2l,f,c
  2328  000DF0  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2329  000DF2  22DA               	addwfc	fsr2h,f,c
  2330  000DF4  50DF               	movf	indf2,w,c
  2331  000DF6  010F               	movlb	15	; () banked
  2332  000DF8  6F4D               	movwf	77,b	;volatile
  2333                           
  2334                           ; BSR set to: 15
  2335                           ;CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  2336  000DFA  010F               	movlb	15	; () banked
  2337  000DFC  8740               	bsf	64,3,b	;volatile
  2338                           
  2339                           ; BSR set to: 15
  2340                           ;CANlib.h: 368: return;
  2341  000DFE  0012               	return	
  2342  000E00                     l365:
  2343                           
  2344                           ; BSR set to: 15
  2345                           ;CANlib.h: 369: }
  2346                           ;CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  2347  000E00  010F               	movlb	15	; () banked
  2348  000E02  B730               	btfsc	48,3,b	;volatile
  2349  000E04  D13B               	goto	l380
  2350                           
  2351                           ; BSR set to: 15
  2352                           ;CANlib.h: 374: { TXB1DLC = dataLength;
  2353  000E06  C0B1  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  2354                           
  2355                           ;CANlib.h: 376: if (0b01000000 & flags)
  2356  000E0A  0100               	movlb	0	; () banked
  2357  000E0C  ADB2               	btfss	CANsendMessage@flags& (0+255),6,b
  2358  000E0E  D003               	goto	l381
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  2362  000E10  010F               	movlb	15	; () banked
  2363  000E12  8D35               	bsf	53,6,b	;volatile
  2364  000E14  D002               	goto	l382
  2365  000E16                     l381:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;CANlib.h: 378: else
  2369                           ;CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  2370  000E16  010F               	movlb	15	; () banked
  2371  000E18  9D35               	bcf	53,6,b	;volatile
  2372  000E1A                     l382:
  2373                           
  2374                           ; BSR set to: 15
  2375                           ;CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  2376  000E1A  0100               	movlb	0	; () banked
  2377  000E1C  A7B2               	btfss	CANsendMessage@flags& (0+255),3,b
  2378  000E1E  D077               	goto	l383
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;CANlib.h: 382: {
  2382                           ;CANlib.h: 383: tamp = identifier & 0x000000FF;
  2383  000E20  0100               	movlb	0	; () banked
  2384  000E22  51AB               	movf	CANsendMessage@identifier& (0+255),w,b
  2385  000E24  0100               	movlb	0	; () banked
  2386  000E26  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2387  000E28  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2388  000E2A  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2389  000E2C  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  2393  000E2E  C0B3  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;CANlib.h: 386: tamp = identifier & 0x0000FF00;
  2397  000E32  0E00               	movlw	0
  2398  000E34  0100               	movlb	0	; () banked
  2399  000E36  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  2400  000E38  0100               	movlb	0	; () banked
  2401  000E3A  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2402  000E3C  0EFF               	movlw	255
  2403  000E3E  0100               	movlb	0	; () banked
  2404  000E40  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2405  000E42  0100               	movlb	0	; () banked
  2406  000E44  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2407  000E46  0E00               	movlw	0
  2408  000E48  0100               	movlb	0	; () banked
  2409  000E4A  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2410  000E4C  0100               	movlb	0	; () banked
  2411  000E4E  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2412  000E50  0E00               	movlw	0
  2413  000E52  0100               	movlb	0	; () banked
  2414  000E54  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2415  000E56  0100               	movlb	0	; () banked
  2416  000E58  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;CANlib.h: 387: tamp = tamp >> 8;
  2420  000E5A  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  2421  000E5E  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2422  000E62  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2423  000E66  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2424  000E6A  C020  F01F         	movff	??_CANsendMessage+1,??_CANsendMessage
  2425  000E6E  C021  F020         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2426  000E72  C022  F021         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2427  000E76  6A22               	clrf	??_CANsendMessage+3,c
  2428  000E78  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2429  000E7C  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2430  000E80  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2431  000E84  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  2435  000E88  C0B3  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;CANlib.h: 390: TXB1SIDL = 0x00;
  2439  000E8C  0E00               	movlw	0
  2440  000E8E  010F               	movlb	15	; () banked
  2441  000E90  6F32               	movwf	50,b	;volatile
  2442                           
  2443                           ; BSR set to: 15
  2444                           ;CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2445  000E92  010F               	movlb	15	; () banked
  2446  000E94  8732               	bsf	50,3,b	;volatile
  2447                           
  2448                           ; BSR set to: 15
  2449                           ;CANlib.h: 393: if (identifier & 0x00010000)
  2450  000E96  0100               	movlb	0	; () banked
  2451  000E98  A1AD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2452  000E9A  D002               	goto	l384
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2456  000E9C  010F               	movlb	15	; () banked
  2457  000E9E  8132               	bsf	50,0,b	;volatile
  2458  000EA0                     l384:
  2459                           
  2460                           ;CANlib.h: 395: if (identifier & 0x00020000)
  2461  000EA0  0100               	movlb	0	; () banked
  2462  000EA2  A3AD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2463  000EA4  D002               	goto	l385
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2467  000EA6  010F               	movlb	15	; () banked
  2468  000EA8  8332               	bsf	50,1,b	;volatile
  2469  000EAA                     l385:
  2470                           
  2471                           ;CANlib.h: 397: if (identifier & 0x00040000)
  2472  000EAA  0100               	movlb	0	; () banked
  2473  000EAC  A5AD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2474  000EAE  D002               	goto	l386
  2475                           
  2476                           ; BSR set to: 0
  2477                           ;CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2478  000EB0  010F               	movlb	15	; () banked
  2479  000EB2  8B32               	bsf	50,5,b	;volatile
  2480  000EB4                     l386:
  2481                           
  2482                           ;CANlib.h: 399: if (identifier & 0x00080000)
  2483  000EB4  0100               	movlb	0	; () banked
  2484  000EB6  A7AD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2485  000EB8  D002               	goto	l387
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2489  000EBA  010F               	movlb	15	; () banked
  2490  000EBC  8D32               	bsf	50,6,b	;volatile
  2491  000EBE                     l387:
  2492                           
  2493                           ;CANlib.h: 401: if (identifier & 0x00100000)
  2494  000EBE  0100               	movlb	0	; () banked
  2495  000EC0  A9AD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2496  000EC2  D002               	goto	l4494
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2500  000EC4  010F               	movlb	15	; () banked
  2501  000EC6  8F32               	bsf	50,7,b	;volatile
  2502  000EC8                     l4494:
  2503                           
  2504                           ;CANlib.h: 404: tamp = (identifier >> 21);
  2505  000EC8  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  2506  000ECC  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2507  000ED0  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2508  000ED4  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2509  000ED8  0E16               	movlw	22
  2510  000EDA  D005               	goto	u5670
  2511  000EDC                     u5675:
  2512  000EDC  90D8               	bcf	status,0,c
  2513  000EDE  3222               	rrcf	??_CANsendMessage+3,f,c
  2514  000EE0  3221               	rrcf	??_CANsendMessage+2,f,c
  2515  000EE2  3220               	rrcf	??_CANsendMessage+1,f,c
  2516  000EE4  321F               	rrcf	??_CANsendMessage,f,c
  2517  000EE6                     u5670:
  2518  000EE6  2EE8               	decfsz	wreg,f,c
  2519  000EE8  D7F9               	goto	u5675
  2520  000EEA  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2521  000EEE  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2522  000EF2  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2523  000EF6  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2524                           
  2525                           ;CANlib.h: 405: tamp = tamp & 0x000000FF;
  2526  000EFA  0100               	movlb	0	; () banked
  2527  000EFC  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  2528  000EFE  0100               	movlb	0	; () banked
  2529  000F00  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2530  000F02  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2531  000F04  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2532  000F06  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2536  000F08  C0B3  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2537                           
  2538                           ;CANlib.h: 407: }
  2539  000F0C  D057               	goto	l4514
  2540  000F0E                     l383:
  2541                           
  2542                           ; BSR set to: 0
  2543                           ;CANlib.h: 409: else
  2544                           ;CANlib.h: 411: {
  2545                           ;CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2546  000F0E  010F               	movlb	15	; () banked
  2547  000F10  9732               	bcf	50,3,b	;volatile
  2548                           
  2549                           ; BSR set to: 15
  2550                           ;CANlib.h: 414: tamp = (identifier >> 3);
  2551  000F12  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  2552  000F16  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2553  000F1A  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2554  000F1E  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2555  000F22  0E04               	movlw	4
  2556  000F24  D005               	goto	u5680
  2557  000F26                     u5685:
  2558  000F26  90D8               	bcf	status,0,c
  2559  000F28  3222               	rrcf	??_CANsendMessage+3,f,c
  2560  000F2A  3221               	rrcf	??_CANsendMessage+2,f,c
  2561  000F2C  3220               	rrcf	??_CANsendMessage+1,f,c
  2562  000F2E  321F               	rrcf	??_CANsendMessage,f,c
  2563  000F30                     u5680:
  2564  000F30  2EE8               	decfsz	wreg,f,c
  2565  000F32  D7F9               	goto	u5685
  2566  000F34  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2567  000F38  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2568  000F3C  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2569  000F40  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2570                           
  2571                           ; BSR set to: 15
  2572                           ;CANlib.h: 415: tamp = tamp & 0x000000FF;
  2573  000F44  0100               	movlb	0	; () banked
  2574  000F46  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  2575  000F48  0100               	movlb	0	; () banked
  2576  000F4A  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2577  000F4C  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2578  000F4E  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2579  000F50  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2583  000F52  C0B3  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;CANlib.h: 418: tamp = identifier & 0x00000007;
  2587  000F56  0E07               	movlw	7
  2588  000F58  0100               	movlb	0	; () banked
  2589  000F5A  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  2590  000F5C  0100               	movlb	0	; () banked
  2591  000F5E  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2592  000F60  0E00               	movlw	0
  2593  000F62  0100               	movlb	0	; () banked
  2594  000F64  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2595  000F66  0100               	movlb	0	; () banked
  2596  000F68  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2597  000F6A  0E00               	movlw	0
  2598  000F6C  0100               	movlb	0	; () banked
  2599  000F6E  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2600  000F70  0100               	movlb	0	; () banked
  2601  000F72  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2602  000F74  0E00               	movlw	0
  2603  000F76  0100               	movlb	0	; () banked
  2604  000F78  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2605  000F7A  0100               	movlb	0	; () banked
  2606  000F7C  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;CANlib.h: 419: tamp = tamp << 5;
  2610  000F7E  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  2611  000F82  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2612  000F86  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2613  000F8A  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2614  000F8E  0E05               	movlw	5
  2615  000F90                     u5695:
  2616  000F90  90D8               	bcf	status,0,c
  2617  000F92  361F               	rlcf	??_CANsendMessage,f,c
  2618  000F94  3620               	rlcf	??_CANsendMessage+1,f,c
  2619  000F96  3621               	rlcf	??_CANsendMessage+2,f,c
  2620  000F98  3622               	rlcf	??_CANsendMessage+3,f,c
  2621  000F9A  2EE8               	decfsz	wreg,f,c
  2622  000F9C  D7F9               	goto	u5695
  2623  000F9E  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2624  000FA2  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2625  000FA6  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2626  000FAA  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2630  000FAE  010F               	movlb	15	; () banked
  2631  000FB0  5132               	movf	50,w,b	;volatile
  2632  000FB2  0B1F               	andlw	31
  2633  000FB4  010F               	movlb	15	; () banked
  2634  000FB6  6F32               	movwf	50,b	;volatile
  2635                           
  2636                           ; BSR set to: 15
  2637                           ;CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2638  000FB8  C0B3  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2639  000FBC                     l4514:
  2640                           
  2641                           ;CANlib.h: 422: }
  2642                           ;CANlib.h: 424: if (0b00000001 & flags)
  2643  000FBC  0100               	movlb	0	; () banked
  2644  000FBE  A1B2               	btfss	CANsendMessage@flags& (0+255),0,b
  2645  000FC0  D003               	goto	l390
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2649  000FC2  010F               	movlb	15	; () banked
  2650  000FC4  8130               	bsf	48,0,b	;volatile
  2651  000FC6  D002               	goto	l391
  2652  000FC8                     l390:
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;CANlib.h: 426: else
  2656                           ;CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2657  000FC8  010F               	movlb	15	; () banked
  2658  000FCA  9130               	bcf	48,0,b	;volatile
  2659  000FCC                     l391:
  2660                           
  2661                           ; BSR set to: 15
  2662                           ;CANlib.h: 428: if (0b00000010 & flags)
  2663  000FCC  0100               	movlb	0	; () banked
  2664  000FCE  A3B2               	btfss	CANsendMessage@flags& (0+255),1,b
  2665  000FD0  D003               	goto	l392
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2669  000FD2  010F               	movlb	15	; () banked
  2670  000FD4  8330               	bsf	48,1,b	;volatile
  2671  000FD6  D002               	goto	l4520
  2672  000FD8                     l392:
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;CANlib.h: 430: else
  2676                           ;CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2677  000FD8  010F               	movlb	15	; () banked
  2678  000FDA  9330               	bcf	48,1,b	;volatile
  2679  000FDC                     l4520:
  2680                           
  2681                           ; BSR set to: 15
  2682                           ;CANlib.h: 433: TXB1D0 = data[0];
  2683  000FDC  C0AF  FFD9         	movff	CANsendMessage@data,fsr2l
  2684  000FE0  C0B0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2685  000FE4  50DF               	movf	indf2,w,c
  2686  000FE6  010F               	movlb	15	; () banked
  2687  000FE8  6F36               	movwf	54,b	;volatile
  2688                           
  2689                           ; BSR set to: 15
  2690                           ;CANlib.h: 434: TXB1D1 = data[1];
  2691  000FEA  0100               	movlb	0	; () banked
  2692  000FEC  EE20 F001          	lfsr	2,1
  2693  000FF0  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2694  000FF2  26D9               	addwf	fsr2l,f,c
  2695  000FF4  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2696  000FF6  22DA               	addwfc	fsr2h,f,c
  2697  000FF8  50DF               	movf	indf2,w,c
  2698  000FFA  010F               	movlb	15	; () banked
  2699  000FFC  6F37               	movwf	55,b	;volatile
  2700                           
  2701                           ; BSR set to: 15
  2702                           ;CANlib.h: 435: TXB1D2 = data[2];
  2703  000FFE  0100               	movlb	0	; () banked
  2704  001000  EE20 F002          	lfsr	2,2
  2705  001004  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2706  001006  26D9               	addwf	fsr2l,f,c
  2707  001008  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2708  00100A  22DA               	addwfc	fsr2h,f,c
  2709  00100C  50DF               	movf	indf2,w,c
  2710  00100E  010F               	movlb	15	; () banked
  2711  001010  6F38               	movwf	56,b	;volatile
  2712                           
  2713                           ; BSR set to: 15
  2714                           ;CANlib.h: 436: TXB1D3 = data[3];
  2715  001012  0100               	movlb	0	; () banked
  2716  001014  EE20 F003          	lfsr	2,3
  2717  001018  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2718  00101A  26D9               	addwf	fsr2l,f,c
  2719  00101C  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2720  00101E  22DA               	addwfc	fsr2h,f,c
  2721  001020  50DF               	movf	indf2,w,c
  2722  001022  010F               	movlb	15	; () banked
  2723  001024  6F39               	movwf	57,b	;volatile
  2724                           
  2725                           ; BSR set to: 15
  2726                           ;CANlib.h: 437: TXB1D4 = data[4];
  2727  001026  0100               	movlb	0	; () banked
  2728  001028  EE20 F004          	lfsr	2,4
  2729  00102C  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2730  00102E  26D9               	addwf	fsr2l,f,c
  2731  001030  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2732  001032  22DA               	addwfc	fsr2h,f,c
  2733  001034  50DF               	movf	indf2,w,c
  2734  001036  010F               	movlb	15	; () banked
  2735  001038  6F3A               	movwf	58,b	;volatile
  2736                           
  2737                           ; BSR set to: 15
  2738                           ;CANlib.h: 438: TXB1D5 = data[5];
  2739  00103A  0100               	movlb	0	; () banked
  2740  00103C  EE20 F005          	lfsr	2,5
  2741  001040  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2742  001042  26D9               	addwf	fsr2l,f,c
  2743  001044  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2744  001046  22DA               	addwfc	fsr2h,f,c
  2745  001048  50DF               	movf	indf2,w,c
  2746  00104A  010F               	movlb	15	; () banked
  2747  00104C  6F3B               	movwf	59,b	;volatile
  2748                           
  2749                           ; BSR set to: 15
  2750                           ;CANlib.h: 439: TXB1D6 = data[6];
  2751  00104E  0100               	movlb	0	; () banked
  2752  001050  EE20 F006          	lfsr	2,6
  2753  001054  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2754  001056  26D9               	addwf	fsr2l,f,c
  2755  001058  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2756  00105A  22DA               	addwfc	fsr2h,f,c
  2757  00105C  50DF               	movf	indf2,w,c
  2758  00105E  010F               	movlb	15	; () banked
  2759  001060  6F3C               	movwf	60,b	;volatile
  2760                           
  2761                           ; BSR set to: 15
  2762                           ;CANlib.h: 440: TXB1D7 = data[7];
  2763  001062  0100               	movlb	0	; () banked
  2764  001064  EE20 F007          	lfsr	2,7
  2765  001068  51AF               	movf	CANsendMessage@data& (0+255),w,b
  2766  00106A  26D9               	addwf	fsr2l,f,c
  2767  00106C  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2768  00106E  22DA               	addwfc	fsr2h,f,c
  2769  001070  50DF               	movf	indf2,w,c
  2770  001072  010F               	movlb	15	; () banked
  2771  001074  6F3D               	movwf	61,b	;volatile
  2772                           
  2773                           ; BSR set to: 15
  2774                           ;CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2775  001076  010F               	movlb	15	; () banked
  2776  001078  8730               	bsf	48,3,b	;volatile
  2777                           
  2778                           ; BSR set to: 15
  2779                           ;CANlib.h: 444: return;
  2780  00107A  0012               	return	
  2781  00107C                     l380:
  2782                           
  2783                           ; BSR set to: 15
  2784                           ;CANlib.h: 445: }
  2785                           ;CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2786  00107C  010F               	movlb	15	; () banked
  2787  00107E  B720               	btfsc	32,3,b	;volatile
  2788  001080  0012               	return	
  2789                           
  2790                           ; BSR set to: 15
  2791                           ;CANlib.h: 450: { TXB2DLC = dataLength;
  2792  001082  C0B1  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2793                           
  2794                           ;CANlib.h: 452: if (0b01000000 & flags)
  2795  001086  0100               	movlb	0	; () banked
  2796  001088  ADB2               	btfss	CANsendMessage@flags& (0+255),6,b
  2797  00108A  D003               	goto	l395
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2801  00108C  010F               	movlb	15	; () banked
  2802  00108E  8D25               	bsf	37,6,b	;volatile
  2803  001090  D002               	goto	l396
  2804  001092                     l395:
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;CANlib.h: 454: else
  2808                           ;CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2809  001092  010F               	movlb	15	; () banked
  2810  001094  9D25               	bcf	37,6,b	;volatile
  2811  001096                     l396:
  2812                           
  2813                           ; BSR set to: 15
  2814                           ;CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2815  001096  0100               	movlb	0	; () banked
  2816  001098  A7B2               	btfss	CANsendMessage@flags& (0+255),3,b
  2817  00109A  D077               	goto	l397
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;CANlib.h: 458: {
  2821                           ;CANlib.h: 459: tamp = identifier & 0x000000FF;
  2822  00109C  0100               	movlb	0	; () banked
  2823  00109E  51AB               	movf	CANsendMessage@identifier& (0+255),w,b
  2824  0010A0  0100               	movlb	0	; () banked
  2825  0010A2  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2826  0010A4  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2827  0010A6  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2828  0010A8  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2832  0010AA  C0B3  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2836  0010AE  0E00               	movlw	0
  2837  0010B0  0100               	movlb	0	; () banked
  2838  0010B2  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  2839  0010B4  0100               	movlb	0	; () banked
  2840  0010B6  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2841  0010B8  0EFF               	movlw	255
  2842  0010BA  0100               	movlb	0	; () banked
  2843  0010BC  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2844  0010BE  0100               	movlb	0	; () banked
  2845  0010C0  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2846  0010C2  0E00               	movlw	0
  2847  0010C4  0100               	movlb	0	; () banked
  2848  0010C6  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2849  0010C8  0100               	movlb	0	; () banked
  2850  0010CA  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2851  0010CC  0E00               	movlw	0
  2852  0010CE  0100               	movlb	0	; () banked
  2853  0010D0  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2854  0010D2  0100               	movlb	0	; () banked
  2855  0010D4  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;CANlib.h: 463: tamp = tamp >> 8;
  2859  0010D6  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  2860  0010DA  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2861  0010DE  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2862  0010E2  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2863  0010E6  C020  F01F         	movff	??_CANsendMessage+1,??_CANsendMessage
  2864  0010EA  C021  F020         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2865  0010EE  C022  F021         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2866  0010F2  6A22               	clrf	??_CANsendMessage+3,c
  2867  0010F4  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2868  0010F8  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2869  0010FC  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2870  001100  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2874  001104  C0B3  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;CANlib.h: 466: TXB2SIDL = 0x00;
  2878  001108  0E00               	movlw	0
  2879  00110A  010F               	movlb	15	; () banked
  2880  00110C  6F22               	movwf	34,b	;volatile
  2881                           
  2882                           ; BSR set to: 15
  2883                           ;CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2884  00110E  010F               	movlb	15	; () banked
  2885  001110  8722               	bsf	34,3,b	;volatile
  2886                           
  2887                           ; BSR set to: 15
  2888                           ;CANlib.h: 469: if (identifier & 0x00010000)
  2889  001112  0100               	movlb	0	; () banked
  2890  001114  A1AD               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2891  001116  D002               	goto	l398
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2895  001118  010F               	movlb	15	; () banked
  2896  00111A  8122               	bsf	34,0,b	;volatile
  2897  00111C                     l398:
  2898                           
  2899                           ;CANlib.h: 471: if (identifier & 0x00020000)
  2900  00111C  0100               	movlb	0	; () banked
  2901  00111E  A3AD               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2902  001120  D002               	goto	l399
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2906  001122  010F               	movlb	15	; () banked
  2907  001124  8322               	bsf	34,1,b	;volatile
  2908  001126                     l399:
  2909                           
  2910                           ;CANlib.h: 473: if (identifier & 0x00040000)
  2911  001126  0100               	movlb	0	; () banked
  2912  001128  A5AD               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2913  00112A  D002               	goto	l400
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2917  00112C  010F               	movlb	15	; () banked
  2918  00112E  8B22               	bsf	34,5,b	;volatile
  2919  001130                     l400:
  2920                           
  2921                           ;CANlib.h: 475: if (identifier & 0x00080000)
  2922  001130  0100               	movlb	0	; () banked
  2923  001132  A7AD               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2924  001134  D002               	goto	l401
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2928  001136  010F               	movlb	15	; () banked
  2929  001138  8D22               	bsf	34,6,b	;volatile
  2930  00113A                     l401:
  2931                           
  2932                           ;CANlib.h: 477: if (identifier & 0x00100000)
  2933  00113A  0100               	movlb	0	; () banked
  2934  00113C  A9AD               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2935  00113E  D002               	goto	l4570
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2939  001140  010F               	movlb	15	; () banked
  2940  001142  8F22               	bsf	34,7,b	;volatile
  2941  001144                     l4570:
  2942                           
  2943                           ;CANlib.h: 480: tamp = (identifier >> 21);
  2944  001144  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  2945  001148  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2946  00114C  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2947  001150  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2948  001154  0E16               	movlw	22
  2949  001156  D005               	goto	u5800
  2950  001158                     u5805:
  2951  001158  90D8               	bcf	status,0,c
  2952  00115A  3222               	rrcf	??_CANsendMessage+3,f,c
  2953  00115C  3221               	rrcf	??_CANsendMessage+2,f,c
  2954  00115E  3220               	rrcf	??_CANsendMessage+1,f,c
  2955  001160  321F               	rrcf	??_CANsendMessage,f,c
  2956  001162                     u5800:
  2957  001162  2EE8               	decfsz	wreg,f,c
  2958  001164  D7F9               	goto	u5805
  2959  001166  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  2960  00116A  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2961  00116E  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2962  001172  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2963                           
  2964                           ;CANlib.h: 481: tamp = tamp & 0x000000FF;
  2965  001176  0100               	movlb	0	; () banked
  2966  001178  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  2967  00117A  0100               	movlb	0	; () banked
  2968  00117C  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  2969  00117E  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2970  001180  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2971  001182  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2972                           
  2973                           ; BSR set to: 0
  2974                           ;CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2975  001184  C0B3  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2976                           
  2977                           ;CANlib.h: 483: }
  2978  001188  D057               	goto	l4590
  2979  00118A                     l397:
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;CANlib.h: 485: else
  2983                           ;CANlib.h: 487: {
  2984                           ;CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2985  00118A  010F               	movlb	15	; () banked
  2986  00118C  9722               	bcf	34,3,b	;volatile
  2987                           
  2988                           ; BSR set to: 15
  2989                           ;CANlib.h: 490: tamp = (identifier >> 3);
  2990  00118E  C0AB  F01F         	movff	CANsendMessage@identifier,??_CANsendMessage
  2991  001192  C0AC  F020         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2992  001196  C0AD  F021         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2993  00119A  C0AE  F022         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2994  00119E  0E04               	movlw	4
  2995  0011A0  D005               	goto	u5810
  2996  0011A2                     u5815:
  2997  0011A2  90D8               	bcf	status,0,c
  2998  0011A4  3222               	rrcf	??_CANsendMessage+3,f,c
  2999  0011A6  3221               	rrcf	??_CANsendMessage+2,f,c
  3000  0011A8  3220               	rrcf	??_CANsendMessage+1,f,c
  3001  0011AA  321F               	rrcf	??_CANsendMessage,f,c
  3002  0011AC                     u5810:
  3003  0011AC  2EE8               	decfsz	wreg,f,c
  3004  0011AE  D7F9               	goto	u5815
  3005  0011B0  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  3006  0011B4  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3007  0011B8  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3008  0011BC  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3009                           
  3010                           ; BSR set to: 15
  3011                           ;CANlib.h: 491: tamp = tamp & 0x000000FF;
  3012  0011C0  0100               	movlb	0	; () banked
  3013  0011C2  51B3               	movf	CANsendMessage@tamp& (0+255),w,b
  3014  0011C4  0100               	movlb	0	; () banked
  3015  0011C6  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  3016  0011C8  6BB4               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3017  0011CA  6BB5               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3018  0011CC  6BB6               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  3022  0011CE  C0B3  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;CANlib.h: 494: tamp = identifier & 0x00000007;
  3026  0011D2  0E07               	movlw	7
  3027  0011D4  0100               	movlb	0	; () banked
  3028  0011D6  15AB               	andwf	CANsendMessage@identifier& (0+255),w,b
  3029  0011D8  0100               	movlb	0	; () banked
  3030  0011DA  6FB3               	movwf	CANsendMessage@tamp& (0+255),b
  3031  0011DC  0E00               	movlw	0
  3032  0011DE  0100               	movlb	0	; () banked
  3033  0011E0  15AC               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3034  0011E2  0100               	movlb	0	; () banked
  3035  0011E4  6FB4               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3036  0011E6  0E00               	movlw	0
  3037  0011E8  0100               	movlb	0	; () banked
  3038  0011EA  15AD               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3039  0011EC  0100               	movlb	0	; () banked
  3040  0011EE  6FB5               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3041  0011F0  0E00               	movlw	0
  3042  0011F2  0100               	movlb	0	; () banked
  3043  0011F4  15AE               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3044  0011F6  0100               	movlb	0	; () banked
  3045  0011F8  6FB6               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;CANlib.h: 495: tamp = tamp << 5;
  3049  0011FA  C0B3  F01F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3050  0011FE  C0B4  F020         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3051  001202  C0B5  F021         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3052  001206  C0B6  F022         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3053  00120A  0E05               	movlw	5
  3054  00120C                     u5825:
  3055  00120C  90D8               	bcf	status,0,c
  3056  00120E  361F               	rlcf	??_CANsendMessage,f,c
  3057  001210  3620               	rlcf	??_CANsendMessage+1,f,c
  3058  001212  3621               	rlcf	??_CANsendMessage+2,f,c
  3059  001214  3622               	rlcf	??_CANsendMessage+3,f,c
  3060  001216  2EE8               	decfsz	wreg,f,c
  3061  001218  D7F9               	goto	u5825
  3062  00121A  C01F  F0B3         	movff	??_CANsendMessage,CANsendMessage@tamp
  3063  00121E  C020  F0B4         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3064  001222  C021  F0B5         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3065  001226  C022  F0B6         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  3069  00122A  010F               	movlb	15	; () banked
  3070  00122C  5122               	movf	34,w,b	;volatile
  3071  00122E  0B1F               	andlw	31
  3072  001230  010F               	movlb	15	; () banked
  3073  001232  6F22               	movwf	34,b	;volatile
  3074                           
  3075                           ; BSR set to: 15
  3076                           ;CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  3077  001234  C0B3  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  3078  001238                     l4590:
  3079                           
  3080                           ;CANlib.h: 498: }
  3081                           ;CANlib.h: 500: if (0b00000001 & flags)
  3082  001238  0100               	movlb	0	; () banked
  3083  00123A  A1B2               	btfss	CANsendMessage@flags& (0+255),0,b
  3084  00123C  D003               	goto	l404
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  3088  00123E  010F               	movlb	15	; () banked
  3089  001240  8120               	bsf	32,0,b	;volatile
  3090  001242  D002               	goto	l405
  3091  001244                     l404:
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;CANlib.h: 502: else
  3095                           ;CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  3096  001244  010F               	movlb	15	; () banked
  3097  001246  9120               	bcf	32,0,b	;volatile
  3098  001248                     l405:
  3099                           
  3100                           ; BSR set to: 15
  3101                           ;CANlib.h: 504: if (0b00000010 & flags)
  3102  001248  0100               	movlb	0	; () banked
  3103  00124A  A3B2               	btfss	CANsendMessage@flags& (0+255),1,b
  3104  00124C  D003               	goto	l406
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  3108  00124E  010F               	movlb	15	; () banked
  3109  001250  8320               	bsf	32,1,b	;volatile
  3110  001252  D002               	goto	l4596
  3111  001254                     l406:
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;CANlib.h: 506: else
  3115                           ;CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  3116  001254  010F               	movlb	15	; () banked
  3117  001256  9320               	bcf	32,1,b	;volatile
  3118  001258                     l4596:
  3119                           
  3120                           ; BSR set to: 15
  3121                           ;CANlib.h: 509: TXB2D0 = data[0];
  3122  001258  C0AF  FFD9         	movff	CANsendMessage@data,fsr2l
  3123  00125C  C0B0  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3124  001260  50DF               	movf	indf2,w,c
  3125  001262  010F               	movlb	15	; () banked
  3126  001264  6F26               	movwf	38,b	;volatile
  3127                           
  3128                           ; BSR set to: 15
  3129                           ;CANlib.h: 510: TXB2D1 = data[1];
  3130  001266  0100               	movlb	0	; () banked
  3131  001268  EE20 F001          	lfsr	2,1
  3132  00126C  51AF               	movf	CANsendMessage@data& (0+255),w,b
  3133  00126E  26D9               	addwf	fsr2l,f,c
  3134  001270  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3135  001272  22DA               	addwfc	fsr2h,f,c
  3136  001274  50DF               	movf	indf2,w,c
  3137  001276  010F               	movlb	15	; () banked
  3138  001278  6F27               	movwf	39,b	;volatile
  3139                           
  3140                           ; BSR set to: 15
  3141                           ;CANlib.h: 511: TXB2D2 = data[2];
  3142  00127A  0100               	movlb	0	; () banked
  3143  00127C  EE20 F002          	lfsr	2,2
  3144  001280  51AF               	movf	CANsendMessage@data& (0+255),w,b
  3145  001282  26D9               	addwf	fsr2l,f,c
  3146  001284  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3147  001286  22DA               	addwfc	fsr2h,f,c
  3148  001288  50DF               	movf	indf2,w,c
  3149  00128A  010F               	movlb	15	; () banked
  3150  00128C  6F28               	movwf	40,b	;volatile
  3151                           
  3152                           ; BSR set to: 15
  3153                           ;CANlib.h: 512: TXB2D3 = data[3];
  3154  00128E  0100               	movlb	0	; () banked
  3155  001290  EE20 F003          	lfsr	2,3
  3156  001294  51AF               	movf	CANsendMessage@data& (0+255),w,b
  3157  001296  26D9               	addwf	fsr2l,f,c
  3158  001298  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3159  00129A  22DA               	addwfc	fsr2h,f,c
  3160  00129C  50DF               	movf	indf2,w,c
  3161  00129E  010F               	movlb	15	; () banked
  3162  0012A0  6F29               	movwf	41,b	;volatile
  3163                           
  3164                           ; BSR set to: 15
  3165                           ;CANlib.h: 513: TXB2D4 = data[4];
  3166  0012A2  0100               	movlb	0	; () banked
  3167  0012A4  EE20 F004          	lfsr	2,4
  3168  0012A8  51AF               	movf	CANsendMessage@data& (0+255),w,b
  3169  0012AA  26D9               	addwf	fsr2l,f,c
  3170  0012AC  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3171  0012AE  22DA               	addwfc	fsr2h,f,c
  3172  0012B0  50DF               	movf	indf2,w,c
  3173  0012B2  010F               	movlb	15	; () banked
  3174  0012B4  6F2A               	movwf	42,b	;volatile
  3175                           
  3176                           ; BSR set to: 15
  3177                           ;CANlib.h: 514: TXB2D5 = data[5];
  3178  0012B6  0100               	movlb	0	; () banked
  3179  0012B8  EE20 F005          	lfsr	2,5
  3180  0012BC  51AF               	movf	CANsendMessage@data& (0+255),w,b
  3181  0012BE  26D9               	addwf	fsr2l,f,c
  3182  0012C0  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3183  0012C2  22DA               	addwfc	fsr2h,f,c
  3184  0012C4  50DF               	movf	indf2,w,c
  3185  0012C6  010F               	movlb	15	; () banked
  3186  0012C8  6F2B               	movwf	43,b	;volatile
  3187                           
  3188                           ; BSR set to: 15
  3189                           ;CANlib.h: 515: TXB2D6 = data[6];
  3190  0012CA  0100               	movlb	0	; () banked
  3191  0012CC  EE20 F006          	lfsr	2,6
  3192  0012D0  51AF               	movf	CANsendMessage@data& (0+255),w,b
  3193  0012D2  26D9               	addwf	fsr2l,f,c
  3194  0012D4  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3195  0012D6  22DA               	addwfc	fsr2h,f,c
  3196  0012D8  50DF               	movf	indf2,w,c
  3197  0012DA  010F               	movlb	15	; () banked
  3198  0012DC  6F2C               	movwf	44,b	;volatile
  3199                           
  3200                           ; BSR set to: 15
  3201                           ;CANlib.h: 516: TXB2D7 = data[7];
  3202  0012DE  0100               	movlb	0	; () banked
  3203  0012E0  EE20 F007          	lfsr	2,7
  3204  0012E4  51AF               	movf	CANsendMessage@data& (0+255),w,b
  3205  0012E6  26D9               	addwf	fsr2l,f,c
  3206  0012E8  51B0               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3207  0012EA  22DA               	addwfc	fsr2h,f,c
  3208  0012EC  50DF               	movf	indf2,w,c
  3209  0012EE  010F               	movlb	15	; () banked
  3210  0012F0  6F2D               	movwf	45,b	;volatile
  3211                           
  3212                           ; BSR set to: 15
  3213                           ;CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  3214  0012F2  010F               	movlb	15	; () banked
  3215  0012F4  8720               	bsf	32,3,b	;volatile
  3216                           
  3217                           ; BSR set to: 15
  3218                           ;CANlib.h: 520: return;
  3219  0012F6  0012               	return	
  3220  0012F8                     __end_of_CANsendMessage:
  3221                           	opt stack 0
  3222                           tblptru	equ	0xFF8
  3223                           tblptrh	equ	0xFF7
  3224                           tblptrl	equ	0xFF6
  3225                           tablat	equ	0xFF5
  3226                           postinc0	equ	0xFEE
  3227                           wreg	equ	0xFE8
  3228                           postdec1	equ	0xFE5
  3229                           fsr1l	equ	0xFE1
  3230                           indf2	equ	0xFDF
  3231                           fsr2h	equ	0xFDA
  3232                           fsr2l	equ	0xFD9
  3233                           status	equ	0xFD8
  3234                           
  3235 ;; *************** function _CANisTxReady *****************
  3236 ;; Defined at:
  3237 ;;		line 1154 in file "CANlib.h"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;		None
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;		None
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      unsigned char 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3251 ;;      Params:         0       0       0       0
  3252 ;;      Locals:         1       0       0       0
  3253 ;;      Temps:          0       0       0       0
  3254 ;;      Totals:         1       0       0       0
  3255 ;;Total ram usage:        1 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    2
  3258 ;; This function calls:
  3259 ;;		Nothing
  3260 ;; This function is called by:
  3261 ;;		_main
  3262 ;;		_rampe
  3263 ;;		_send_data
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text7
  3268  00252E                     __ptext7:
  3269                           	opt stack 0
  3270  00252E                     _CANisTxReady:
  3271                           	opt stack 27
  3272                           
  3273                           ;CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TXREQ)
      +                          ;
  3274                           
  3275                           ; BSR set to: 15
  3276                           ;incstack = 0
  3277  00252E  0E01               	movlw	1
  3278  002530  6E1F               	movwf	_CANisTxReady$3000,c
  3279  002532  010F               	movlb	15	; () banked
  3280  002534  A740               	btfss	64,3,b	;volatile
  3281  002536  D008               	goto	l558
  3282                           
  3283                           ; BSR set to: 15
  3284  002538  010F               	movlb	15	; () banked
  3285  00253A  A730               	btfss	48,3,b	;volatile
  3286  00253C  D005               	goto	l558
  3287                           
  3288                           ; BSR set to: 15
  3289  00253E  010F               	movlb	15	; () banked
  3290  002540  A720               	btfss	32,3,b	;volatile
  3291  002542  D002               	goto	l558
  3292                           
  3293                           ; BSR set to: 15
  3294  002544  0E00               	movlw	0
  3295  002546  6E1F               	movwf	_CANisTxReady$3000,c
  3296  002548                     l558:
  3297                           
  3298                           ; BSR set to: 15
  3299  002548  501F               	movf	_CANisTxReady$3000,w,c
  3300  00254A  0012               	return	
  3301  00254C                     __end_of_CANisTxReady:
  3302                           	opt stack 0
  3303                           tblptru	equ	0xFF8
  3304                           tblptrh	equ	0xFF7
  3305                           tblptrl	equ	0xFF6
  3306                           tablat	equ	0xFF5
  3307                           postinc0	equ	0xFEE
  3308                           wreg	equ	0xFE8
  3309                           postdec1	equ	0xFE5
  3310                           fsr1l	equ	0xFE1
  3311                           indf2	equ	0xFDF
  3312                           fsr2h	equ	0xFDA
  3313                           fsr2l	equ	0xFD9
  3314                           status	equ	0xFD8
  3315                           
  3316 ;; *************** function _configurazione_iniziale *****************
  3317 ;; Defined at:
  3318 ;;		line 291 in file "motore.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;		None
  3323 ;; Return value:  Size  Location     Type
  3324 ;;		None               void
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3332 ;;      Params:         0       0       0       0
  3333 ;;      Locals:         0       0       0       0
  3334 ;;      Temps:          0       0       0       0
  3335 ;;      Totals:         0       0       0       0
  3336 ;;Total ram usage:        0 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    4
  3339 ;; This function calls:
  3340 ;;		_CANInitialize
  3341 ;;		_SetOutputEPWM1
  3342 ;;		_delay_ms
  3343 ;; This function is called by:
  3344 ;;		_main
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text8
  3349  002282                     __ptext8:
  3350                           	opt stack 0
  3351  002282                     _configurazione_iniziale:
  3352                           	opt stack 26
  3353                           
  3354                           ;motore.c: 294: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3355                           
  3356                           ; BSR set to: 15
  3357                           ;incstack = 0
  3358  002282  0E06               	movlw	6
  3359  002284  0100               	movlb	0	; () banked
  3360  002286  6FB4               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3361  002288  0E05               	movlw	5
  3362  00228A  0100               	movlb	0	; () banked
  3363  00228C  6FB5               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3364  00228E  0E01               	movlw	1
  3365  002290  0100               	movlb	0	; () banked
  3366  002292  6FB6               	movwf	CANInitialize@SJW& (0+255),b
  3367  002294  0E03               	movlw	3
  3368  002296  0100               	movlb	0	; () banked
  3369  002298  6FB7               	movwf	CANInitialize@BRP& (0+255),b
  3370  00229A  0E9D               	movlw	157
  3371  00229C  0100               	movlb	0	; () banked
  3372  00229E  6FB8               	movwf	CANInitialize@flags& (0+255),b
  3373  0022A0  0E04               	movlw	4
  3374  0022A2  EC01  F010         	call	_CANInitialize
  3375                           
  3376                           ;motore.c: 295: RCONbits.IPEN = 1;
  3377  0022A6  8ED0               	bsf	4048,7,c	;volatile
  3378                           
  3379                           ;motore.c: 296: INTCONbits.INT0IF = 0;
  3380  0022A8  92F2               	bcf	intcon,1,c	;volatile
  3381                           
  3382                           ;motore.c: 297: PIR3bits.RXB1IF = 0;
  3383  0022AA  92A4               	bcf	4004,1,c	;volatile
  3384                           
  3385                           ;motore.c: 298: PIR3bits.RXB0IF = 0;
  3386  0022AC  90A4               	bcf	4004,0,c	;volatile
  3387                           
  3388                           ;motore.c: 300: IPR3bits.RXB1IP = 0;
  3389  0022AE  92A5               	bcf	4005,1,c	;volatile
  3390                           
  3391                           ;motore.c: 301: IPR3bits.RXB0IP = 0;
  3392  0022B0  90A5               	bcf	4005,0,c	;volatile
  3393                           
  3394                           ;motore.c: 302: INTCONbits.GIEH = 1;
  3395  0022B2  8EF2               	bsf	intcon,7,c	;volatile
  3396                           
  3397                           ;motore.c: 303: INTCONbits.GIEL = 1;
  3398  0022B4  8CF2               	bsf	intcon,6,c	;volatile
  3399                           
  3400                           ;motore.c: 306: T3CON = 0x01;
  3401  0022B6  0E01               	movlw	1
  3402  0022B8  6EB1               	movwf	4017,c	;volatile
  3403                           
  3404                           ;motore.c: 307: PIR2bits.TMR3IF = 0;
  3405  0022BA  92A1               	bcf	4001,1,c	;volatile
  3406                           
  3407                           ;motore.c: 308: IPR2bits.TMR3IP = 0;
  3408  0022BC  92A2               	bcf	4002,1,c	;volatile
  3409                           
  3410                           ;motore.c: 309: TMR3H = 0x63;
  3411  0022BE  0E63               	movlw	99
  3412  0022C0  6EB3               	movwf	4019,c	;volatile
  3413                           
  3414                           ;motore.c: 310: TMR3L = 0xC0;
  3415  0022C2  0EC0               	movlw	192
  3416  0022C4  6EB2               	movwf	4018,c	;volatile
  3417                           
  3418                           ;motore.c: 315: ADCON0bits.ADON = 1;
  3419  0022C6  80C2               	bsf	4034,0,c	;volatile
  3420                           
  3421                           ;motore.c: 316: ADCON0bits.CHS0 = 0;
  3422  0022C8  94C2               	bcf	4034,2,c	;volatile
  3423                           
  3424                           ;motore.c: 317: ADCON0bits.CHS1 = 0;
  3425  0022CA  96C2               	bcf	4034,3,c	;volatile
  3426                           
  3427                           ;motore.c: 318: ADCON0bits.CHS2 = 0;
  3428  0022CC  98C2               	bcf	4034,4,c	;volatile
  3429                           
  3430                           ;motore.c: 319: ADCON0bits.CHS3 = 0;
  3431  0022CE  9AC2               	bcf	4034,5,c	;volatile
  3432                           
  3433                           ;motore.c: 320: ADCON1bits.PCFG0 = 0;
  3434  0022D0  90C1               	bcf	4033,0,c	;volatile
  3435                           
  3436                           ;motore.c: 321: ADCON1bits.PCFG1 = 1;
  3437  0022D2  82C1               	bsf	4033,1,c	;volatile
  3438                           
  3439                           ;motore.c: 322: ADCON1bits.PCFG2 = 1;
  3440  0022D4  84C1               	bsf	4033,2,c	;volatile
  3441                           
  3442                           ;motore.c: 323: ADCON1bits.PCFG3 = 1;
  3443  0022D6  86C1               	bsf	4033,3,c	;volatile
  3444                           
  3445                           ;motore.c: 324: ADCON1bits.VCFG0 = 0;
  3446  0022D8  98C1               	bcf	4033,4,c	;volatile
  3447                           
  3448                           ;motore.c: 325: ADCON1bits.VCFG1 = 0;
  3449  0022DA  9AC1               	bcf	4033,5,c	;volatile
  3450                           
  3451                           ;motore.c: 326: ADCON2bits.ADCS0 = 1;
  3452  0022DC  80C0               	bsf	4032,0,c	;volatile
  3453                           
  3454                           ;motore.c: 327: ADCON2bits.ADCS1 = 0;
  3455  0022DE  92C0               	bcf	4032,1,c	;volatile
  3456                           
  3457                           ;motore.c: 328: ADCON2bits.ADCS2 = 1;
  3458  0022E0  84C0               	bsf	4032,2,c	;volatile
  3459                           
  3460                           ;motore.c: 329: ADCON2bits.ACQT0 = 0;
  3461  0022E2  96C0               	bcf	4032,3,c	;volatile
  3462                           
  3463                           ;motore.c: 330: ADCON2bits.ACQT1 = 1;
  3464  0022E4  88C0               	bsf	4032,4,c	;volatile
  3465                           
  3466                           ;motore.c: 331: ADCON2bits.ACQT2 = 1;
  3467  0022E6  8AC0               	bsf	4032,5,c	;volatile
  3468                           
  3469                           ;motore.c: 332: ADCON2bits.ADFM = 0;
  3470  0022E8  9EC0               	bcf	4032,7,c	;volatile
  3471                           
  3472                           ;motore.c: 335: PIE3bits.RXB1IE = 1;
  3473  0022EA  82A3               	bsf	4003,1,c	;volatile
  3474                           
  3475                           ;motore.c: 336: PIE3bits.RXB0IE = 1;
  3476  0022EC  80A3               	bsf	4003,0,c	;volatile
  3477                           
  3478                           ;motore.c: 337: PIE2bits.TMR3IE = 1;
  3479  0022EE  82A0               	bsf	4000,1,c	;volatile
  3480                           
  3481                           ;motore.c: 339: LATA = 0x00;
  3482  0022F0  0E00               	movlw	0
  3483  0022F2  6E89               	movwf	3977,c	;volatile
  3484                           
  3485                           ;motore.c: 340: TRISA = 0b01111101;
  3486  0022F4  0E7D               	movlw	125
  3487  0022F6  6E92               	movwf	3986,c	;volatile
  3488                           
  3489                           ;motore.c: 342: LATB = 0x00;
  3490  0022F8  0E00               	movlw	0
  3491  0022FA  6E8A               	movwf	3978,c	;volatile
  3492                           
  3493                           ;motore.c: 343: TRISB = 0b11111011;
  3494  0022FC  0EFB               	movlw	251
  3495  0022FE  6E93               	movwf	3987,c	;volatile
  3496                           
  3497                           ;motore.c: 345: LATC = 0x00;
  3498  002300  0E00               	movlw	0
  3499  002302  6E8B               	movwf	3979,c	;volatile
  3500                           
  3501                           ;motore.c: 346: TRISC = 0x00;
  3502  002304  0E00               	movlw	0
  3503  002306  6E94               	movwf	3988,c	;volatile
  3504                           
  3505                           ;motore.c: 348: LATD = 0x00;
  3506  002308  0E00               	movlw	0
  3507  00230A  6E8C               	movwf	3980,c	;volatile
  3508                           
  3509                           ;motore.c: 349: TRISD = 0x00;
  3510  00230C  0E00               	movlw	0
  3511  00230E  6E95               	movwf	3989,c	;volatile
  3512                           
  3513                           ;motore.c: 351: LATE = 0x00;
  3514  002310  0E00               	movlw	0
  3515  002312  6E8D               	movwf	3981,c	;volatile
  3516                           
  3517                           ;motore.c: 352: TRISE = 0xFF;
  3518  002314  6896               	setf	3990,c	;volatile
  3519                           
  3520                           ;motore.c: 353: delay_ms(2);
  3521  002316  0E00               	movlw	0
  3522  002318  0100               	movlb	0	; () banked
  3523  00231A  6FAE               	movwf	(delay_ms@value_ms+1)& (0+255),b
  3524  00231C  0E02               	movlw	2
  3525  00231E  6FAD               	movwf	delay_ms@value_ms& (0+255),b
  3526  002320  EC52  F012         	call	_delay_ms	;wreg free
  3527                           
  3528                           ;motore.c: 354: SetOutputEPWM1(0b01111111, 0b11111100);
  3529  002324  0EFC               	movlw	252
  3530  002326  6E1F               	movwf	SetOutputEPWM1@outputmode,c
  3531  002328  0E7F               	movlw	127
  3532  00232A  EC13  F012         	call	_SetOutputEPWM1
  3533  00232E  0012               	return		;funcret
  3534  002330                     __end_of_configurazione_iniziale:
  3535                           	opt stack 0
  3536                           tblptru	equ	0xFF8
  3537                           tblptrh	equ	0xFF7
  3538                           tblptrl	equ	0xFF6
  3539                           tablat	equ	0xFF5
  3540                           intcon	equ	0xFF2
  3541                           postinc0	equ	0xFEE
  3542                           wreg	equ	0xFE8
  3543                           postdec1	equ	0xFE5
  3544                           fsr1l	equ	0xFE1
  3545                           indf2	equ	0xFDF
  3546                           fsr2h	equ	0xFDA
  3547                           fsr2l	equ	0xFD9
  3548                           status	equ	0xFD8
  3549                           
  3550 ;; *************** function _delay_ms *****************
  3551 ;; Defined at:
  3552 ;;		line 61 in file "delay.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;  value_ms        2    2[BANK0 ] unsigned int 
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;		None               void
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3566 ;;      Params:         0       2       0       0
  3567 ;;      Locals:         0       0       0       0
  3568 ;;      Temps:          0       0       0       0
  3569 ;;      Totals:         0       2       0       0
  3570 ;;Total ram usage:        2 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:    3
  3573 ;; This function calls:
  3574 ;;		___wmul
  3575 ;; This function is called by:
  3576 ;;		_main
  3577 ;;		_configurazione_iniziale
  3578 ;;		_delay_s
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text9
  3583  0024A4                     __ptext9:
  3584                           	opt stack 0
  3585  0024A4                     _delay_ms:
  3586                           	opt stack 27
  3587                           
  3588                           ;delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  3589                           
  3590                           ;incstack = 0
  3591  0024A4  C040  F01F         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  3592  0024A8  6A20               	clrf	___wmul@multiplier+1,c
  3593  0024AA  C0AD  F021         	movff	delay_ms@value_ms,___wmul@multiplicand
  3594  0024AE  C0AE  F022         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  3595  0024B2  EC6E  F012         	call	___wmul	;wreg free
  3596  0024B6  C01F  F084         	movff	?___wmul,_clock_counter_reference	;volatile
  3597  0024BA  C020  F085         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  3598                           
  3599                           ;delay.c: 75: while (clock_counter_reference) {
  3600  0024BE  D007               	goto	l571
  3601  0024C0                     l4618:
  3602                           
  3603                           ;delay.c: 85: _delay(240);
  3604  0024C0  0E50               	movlw	80
  3605  0024C2                     u6157:
  3606  0024C2  2EE8               	decfsz	wreg,f,c
  3607  0024C4  D7FE               	goto	u6157
  3608                           
  3609                           ;delay.c: 88: clock_counter_reference--;
  3610  0024C6  0100               	movlb	0	; () banked
  3611  0024C8  0784               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  3612  0024CA  A0D8               	btfss	status,0,c
  3613  0024CC  0785               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  3614  0024CE                     l571:
  3615  0024CE  0100               	movlb	0	; () banked
  3616  0024D0  5184               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  3617  0024D2  0100               	movlb	0	; () banked
  3618  0024D4  1185               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  3619  0024D6  B4D8               	btfsc	status,2,c
  3620  0024D8  0012               	return	
  3621  0024DA  D7F2               	goto	l4618
  3622  0024DC                     __end_of_delay_ms:
  3623                           	opt stack 0
  3624                           tblptru	equ	0xFF8
  3625                           tblptrh	equ	0xFF7
  3626                           tblptrl	equ	0xFF6
  3627                           tablat	equ	0xFF5
  3628                           intcon	equ	0xFF2
  3629                           postinc0	equ	0xFEE
  3630                           wreg	equ	0xFE8
  3631                           postdec1	equ	0xFE5
  3632                           fsr1l	equ	0xFE1
  3633                           indf2	equ	0xFDF
  3634                           fsr2h	equ	0xFDA
  3635                           fsr2l	equ	0xFD9
  3636                           status	equ	0xFD8
  3637                           
  3638 ;; *************** function ___wmul *****************
  3639 ;; Defined at:
  3640 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  multiplier      2   30[COMRAM] unsigned int 
  3643 ;;  multiplicand    2   32[COMRAM] unsigned int 
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;  product         2    0[BANK0 ] unsigned int 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  2   30[COMRAM] unsigned int 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2, status,0, prodl, prodh
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3655 ;;      Params:         4       0       0       0
  3656 ;;      Locals:         0       2       0       0
  3657 ;;      Temps:          0       0       0       0
  3658 ;;      Totals:         4       2       0       0
  3659 ;;Total ram usage:        6 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    2
  3662 ;; This function calls:
  3663 ;;		Nothing
  3664 ;; This function is called by:
  3665 ;;		_delay_ms
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text10
  3670  0024DC                     __ptext10:
  3671                           	opt stack 0
  3672  0024DC                     ___wmul:
  3673                           	opt stack 27
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;incstack = 0
  3677  0024DC  501F               	movf	___wmul@multiplier,w,c
  3678  0024DE  0221               	mulwf	___wmul@multiplicand,c
  3679  0024E0  CFF3 F0AB          	movff	prodl,___wmul@product
  3680  0024E4  CFF4 F0AC          	movff	prodh,___wmul@product+1
  3681  0024E8  501F               	movf	___wmul@multiplier,w,c
  3682  0024EA  0222               	mulwf	___wmul@multiplicand+1,c
  3683  0024EC  50F3               	movf	prodl,w,c
  3684  0024EE  0100               	movlb	0	; () banked
  3685  0024F0  27AC               	addwf	(___wmul@product+1)& (0+255),f,b
  3686  0024F2  5020               	movf	___wmul@multiplier+1,w,c
  3687  0024F4  0221               	mulwf	___wmul@multiplicand,c
  3688  0024F6  50F3               	movf	prodl,w,c
  3689  0024F8  0100               	movlb	0	; () banked
  3690  0024FA  27AC               	addwf	(___wmul@product+1)& (0+255),f,b
  3691                           
  3692                           ; BSR set to: 0
  3693  0024FC  C0AB  F01F         	movff	___wmul@product,?___wmul
  3694  002500  C0AC  F020         	movff	___wmul@product+1,?___wmul+1
  3695  002504  0012               	return	
  3696  002506                     __end_of___wmul:
  3697                           	opt stack 0
  3698                           tblptru	equ	0xFF8
  3699                           tblptrh	equ	0xFF7
  3700                           tblptrl	equ	0xFF6
  3701                           tablat	equ	0xFF5
  3702                           prodh	equ	0xFF4
  3703                           prodl	equ	0xFF3
  3704                           intcon	equ	0xFF2
  3705                           postinc0	equ	0xFEE
  3706                           wreg	equ	0xFE8
  3707                           postdec1	equ	0xFE5
  3708                           fsr1l	equ	0xFE1
  3709                           indf2	equ	0xFDF
  3710                           fsr2h	equ	0xFDA
  3711                           fsr2l	equ	0xFD9
  3712                           status	equ	0xFD8
  3713                           
  3714 ;; *************** function _SetOutputEPWM1 *****************
  3715 ;; Defined at:
  3716 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  outputconfig    1    wreg     unsigned char 
  3719 ;;  outputmode      1   30[COMRAM] unsigned char 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  outputconfig    1   31[COMRAM] unsigned char 
  3722 ;; Return value:  Size  Location     Type
  3723 ;;		None               void
  3724 ;; Registers used:
  3725 ;;		wreg, status,2, status,0
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3731 ;;      Params:         1       0       0       0
  3732 ;;      Locals:         1       0       0       0
  3733 ;;      Temps:          0       0       0       0
  3734 ;;      Totals:         2       0       0       0
  3735 ;;Total ram usage:        2 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; Hardware stack levels required when called:    2
  3738 ;; This function calls:
  3739 ;;		Nothing
  3740 ;; This function is called by:
  3741 ;;		_main
  3742 ;;		_rampe
  3743 ;;		_configurazione_iniziale
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text11
  3748  002426                     __ptext11:
  3749                           	opt stack 0
  3750  002426                     _SetOutputEPWM1:
  3751                           	opt stack 27
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;incstack = 0
  3755                           ;SetOutputEPWM1@outputconfig stored from wreg
  3756  002426  6E20               	movwf	SetOutputEPWM1@outputconfig,c
  3757  002428  50BA               	movf	4026,w,c	;volatile
  3758  00242A  09C0               	iorlw	192
  3759  00242C  1420               	andwf	SetOutputEPWM1@outputconfig,w,c
  3760  00242E  6EBA               	movwf	4026,c	;volatile
  3761  002430  50BA               	movf	4026,w,c	;volatile
  3762  002432  090F               	iorlw	15
  3763  002434  141F               	andwf	SetOutputEPWM1@outputmode,w,c
  3764  002436  6EBA               	movwf	4026,c	;volatile
  3765  002438  0E3F               	movlw	63
  3766  00243A  1820               	xorwf	SetOutputEPWM1@outputconfig,w,c
  3767  00243C  A4D8               	btfss	status,2,c
  3768  00243E  D002               	goto	l3388
  3769  002440  9895               	bcf	3989,4,c	;volatile
  3770  002442  0012               	return	
  3771  002444                     l3388:
  3772  002444  0EBF               	movlw	191
  3773  002446  1820               	xorwf	SetOutputEPWM1@outputconfig,w,c
  3774  002448  A4D8               	btfss	status,2,c
  3775  00244A  D003               	goto	l3392
  3776  00244C  9895               	bcf	3989,4,c	;volatile
  3777  00244E  9A95               	bcf	3989,5,c	;volatile
  3778  002450  0012               	return	
  3779  002452                     l3392:
  3780  002452  0E7F               	movlw	127
  3781  002454  1820               	xorwf	SetOutputEPWM1@outputconfig,w,c
  3782  002456  B4D8               	btfsc	status,2,c
  3783  002458  D003               	goto	l750
  3784  00245A  2820               	incf	SetOutputEPWM1@outputconfig,w,c
  3785  00245C  A4D8               	btfss	status,2,c
  3786  00245E  0012               	return	
  3787  002460                     l750:
  3788  002460  9895               	bcf	3989,4,c	;volatile
  3789  002462  9A95               	bcf	3989,5,c	;volatile
  3790  002464  9C95               	bcf	3989,6,c	;volatile
  3791  002466  9E95               	bcf	3989,7,c	;volatile
  3792  002468  0012               	return	
  3793  00246A                     __end_of_SetOutputEPWM1:
  3794                           	opt stack 0
  3795                           tblptru	equ	0xFF8
  3796                           tblptrh	equ	0xFF7
  3797                           tblptrl	equ	0xFF6
  3798                           tablat	equ	0xFF5
  3799                           prodh	equ	0xFF4
  3800                           prodl	equ	0xFF3
  3801                           intcon	equ	0xFF2
  3802                           postinc0	equ	0xFEE
  3803                           wreg	equ	0xFE8
  3804                           postdec1	equ	0xFE5
  3805                           fsr1l	equ	0xFE1
  3806                           indf2	equ	0xFDF
  3807                           fsr2h	equ	0xFDA
  3808                           fsr2l	equ	0xFD9
  3809                           status	equ	0xFD8
  3810                           
  3811 ;; *************** function _CANInitialize *****************
  3812 ;; Defined at:
  3813 ;;		line 218 in file "CANlib.h"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;  propSeg         1    wreg     unsigned char 
  3816 ;;  phaseSeg1       1    9[BANK0 ] unsigned char 
  3817 ;;  phaseSeg2       1   10[BANK0 ] unsigned char 
  3818 ;;  SJW             1   11[BANK0 ] unsigned char 
  3819 ;;  BRP             1   12[BANK0 ] unsigned char 
  3820 ;;  flags           1   13[BANK0 ] enum E16844
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;  propSeg         1   18[BANK0 ] unsigned char 
  3823 ;;  FilterConfig    1   20[BANK0 ] unsigned char 
  3824 ;;  FilterConfig    1   19[BANK0 ] unsigned char 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;		None               void
  3827 ;; Registers used:
  3828 ;;		wreg, status,2, status,0, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3834 ;;      Params:         0       5       0       0
  3835 ;;      Locals:         0       3       0       0
  3836 ;;      Temps:          0       4       0       0
  3837 ;;      Totals:         0      12       0       0
  3838 ;;Total ram usage:       12 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:    3
  3841 ;; This function calls:
  3842 ;;		_CANOperationMode
  3843 ;;		_CANSetFilter
  3844 ;;		_CANSetMask
  3845 ;; This function is called by:
  3846 ;;		_configurazione_iniziale
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text12
  3851  002002                     __ptext12:
  3852                           	opt stack 0
  3853  002002                     _CANInitialize:
  3854                           	opt stack 26
  3855                           
  3856                           ;incstack = 0
  3857                           ;CANInitialize@propSeg stored from wreg
  3858  002002  0100               	movlb	0	; () banked
  3859  002004  6FBD               	movwf	CANInitialize@propSeg& (0+255),b
  3860                           
  3861                           ;CANlib.h: 220: BYTE FilterConfig1;
  3862                           ;CANlib.h: 221: BYTE FilterConfig2;
  3863                           ;CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3864  002006  0E80               	movlw	128
  3865  002008  ECBF  F012         	call	_CANOperationMode
  3866                           
  3867                           ;CANlib.h: 225: BRGCON1 = 0x00;
  3868  00200C  0E00               	movlw	0
  3869  00200E  6E70               	movwf	3952,c	;volatile
  3870                           
  3871                           ;CANlib.h: 226: BRGCON2 = 0x00;
  3872  002010  0E00               	movlw	0
  3873  002012  6E71               	movwf	3953,c	;volatile
  3874                           
  3875                           ;CANlib.h: 227: BRGCON3 = 0x00;
  3876  002014  0E00               	movlw	0
  3877  002016  6E72               	movwf	3954,c	;volatile
  3878                           
  3879                           ;CANlib.h: 229: SJW= SJW << 6;
  3880  002018  0100               	movlb	0	; () banked
  3881  00201A  41B6               	rrncf	CANInitialize@SJW& (0+255),w,b
  3882  00201C  42E8               	rrncf	wreg,f,c
  3883  00201E  0BC0               	andlw	192
  3884  002020  0100               	movlb	0	; () banked
  3885  002022  6FB6               	movwf	CANInitialize@SJW& (0+255),b
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;CANlib.h: 230: BRGCON1 |= SJW;
  3889  002024  0100               	movlb	0	; () banked
  3890  002026  51B6               	movf	CANInitialize@SJW& (0+255),w,b
  3891  002028  1270               	iorwf	3952,f,c	;volatile
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;CANlib.h: 231: BRGCON1 |= BRP;
  3895  00202A  0100               	movlb	0	; () banked
  3896  00202C  51B7               	movf	CANInitialize@BRP& (0+255),w,b
  3897  00202E  1270               	iorwf	3952,f,c	;volatile
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;CANlib.h: 233: BRGCON2 |= propSeg;
  3901  002030  0100               	movlb	0	; () banked
  3902  002032  51BD               	movf	CANInitialize@propSeg& (0+255),w,b
  3903  002034  1271               	iorwf	3953,f,c	;volatile
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3907  002036  0100               	movlb	0	; () banked
  3908  002038  39B4               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3909  00203A  42E8               	rrncf	wreg,f,c
  3910  00203C  0BF8               	andlw	248
  3911  00203E  0100               	movlb	0	; () banked
  3912  002040  6FB4               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3916  002042  0100               	movlb	0	; () banked
  3917  002044  51B4               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3918  002046  1271               	iorwf	3953,f,c	;volatile
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3922  002048  0100               	movlb	0	; () banked
  3923  00204A  A5B8               	btfss	CANInitialize@flags& (0+255),2,b
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;CANlib.h: 238: BRGCON2bits.SAM= 1;
  3927  00204C  8C71               	bsf	3953,6,c	;volatile
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3931  00204E  0100               	movlb	0	; () banked
  3932  002050  B1B8               	btfsc	CANInitialize@flags& (0+255),0,b
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3936  002052  8E71               	bsf	3953,7,c	;volatile
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3940                           
  3941                           ; BSR set to: 0
  3942  002054  0100               	movlb	0	; () banked
  3943  002056  51B5               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3944  002058  1272               	iorwf	3954,f,c	;volatile
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3948  00205A  0100               	movlb	0	; () banked
  3949  00205C  B3B8               	btfsc	CANInitialize@flags& (0+255),1,b
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3953  00205E  8C72               	bsf	3954,6,c	;volatile
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3957                           
  3958                           ; BSR set to: 0
  3959  002060  0100               	movlb	0	; () banked
  3960  002062  51B8               	movf	CANInitialize@flags& (0+255),w,b
  3961  002064  0B60               	andlw	96
  3962  002066  6E60               	movwf	3936,c	;volatile
  3963                           
  3964                           ;CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON )
  3965  002068  0100               	movlb	0	; () banked
  3966  00206A  51B8               	movf	CANInitialize@flags& (0+255),w,b
  3967  00206C  0B10               	andlw	16
  3968  00206E  0AFF               	xorlw	255
  3969  002070  B4D8               	btfsc	status,2,c
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3973  002072  8460               	bsf	3936,2,c	;volatile
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;CANlib.h: 255: RXB1CON = RXB0CON;
  3977  002074  CF60 FF50          	movff	3936,3920	;volatile
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3981  002078  0E00               	movlw	0
  3982  00207A  6E1F               	movwf	CANSetMask@mask,c
  3983  00207C  0E00               	movlw	0
  3984  00207E  6E20               	movwf	CANSetMask@mask+1,c
  3985  002080  0E00               	movlw	0
  3986  002082  6E21               	movwf	CANSetMask@mask+2,c
  3987  002084  0E00               	movlw	0
  3988  002086  6E22               	movwf	CANSetMask@mask+3,c
  3989  002088  0EF7               	movlw	247
  3990  00208A  6E23               	movwf	CANSetMask@type,c
  3991  00208C  0E01               	movlw	1
  3992  00208E  EC02  F00C         	call	_CANSetMask
  3993                           
  3994                           ;CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3995  002092  0E00               	movlw	0
  3996  002094  6E1F               	movwf	CANSetMask@mask,c
  3997  002096  0E00               	movlw	0
  3998  002098  6E20               	movwf	CANSetMask@mask+1,c
  3999  00209A  0E00               	movlw	0
  4000  00209C  6E21               	movwf	CANSetMask@mask+2,c
  4001  00209E  0E00               	movlw	0
  4002  0020A0  6E22               	movwf	CANSetMask@mask+3,c
  4003  0020A2  0EF7               	movlw	247
  4004  0020A4  6E23               	movwf	CANSetMask@type,c
  4005  0020A6  0E02               	movlw	2
  4006  0020A8  EC02  F00C         	call	_CANSetMask
  4007                           
  4008                           ;CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  4009  0020AC  D00F               	goto	l4378
  4010  0020AE                     l4372:
  4011                           
  4012                           ;CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  4013  0020AE  0EF7               	movlw	247
  4014  0020B0  0100               	movlb	0	; () banked
  4015  0020B2  6FBE               	movwf	CANInitialize@FilterConfig1& (0+255),b
  4016  0020B4  D007               	goto	l4374
  4017  0020B6                     l360:
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  4021  0020B6  0100               	movlb	0	; () banked
  4022  0020B8  69BE               	setf	CANInitialize@FilterConfig1& (0+255),b
  4023                           
  4024                           ;CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  4025  0020BA  0100               	movlb	0	; () banked
  4026  0020BC  69BF               	setf	CANInitialize@FilterConfig2& (0+255),b
  4027                           
  4028                           ;CANlib.h: 273: break;
  4029  0020BE  D028               	goto	l4380
  4030  0020C0                     l361:
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  4034  0020C0  0100               	movlb	0	; () banked
  4035  0020C2  69BE               	setf	CANInitialize@FilterConfig1& (0+255),b
  4036  0020C4                     l4374:
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  4040  0020C4  0EF7               	movlw	247
  4041  0020C6  0100               	movlb	0	; () banked
  4042  0020C8  6FBF               	movwf	CANInitialize@FilterConfig2& (0+255),b
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;CANlib.h: 278: }
  4046                           
  4047                           ;CANlib.h: 277: break;
  4048  0020CA  D022               	goto	l4380
  4049  0020CC                     l4378:
  4050  0020CC  0E9F               	movlw	159
  4051  0020CE  0100               	movlb	0	; () banked
  4052  0020D0  6FB9               	movwf	??_CANInitialize& (0+255),b
  4053  0020D2  0EFF               	movlw	255
  4054  0020D4  0100               	movlb	0	; () banked
  4055  0020D6  6FBA               	movwf	(??_CANInitialize+1)& (0+255),b
  4056  0020D8  0100               	movlb	0	; () banked
  4057  0020DA  51B8               	movf	CANInitialize@flags& (0+255),w,b
  4058  0020DC  0B60               	andlw	96
  4059  0020DE  0100               	movlb	0	; () banked
  4060  0020E0  6FBB               	movwf	(??_CANInitialize+2)& (0+255),b
  4061  0020E2  6BBC               	clrf	(??_CANInitialize+3)& (0+255),b
  4062  0020E4  0100               	movlb	0	; () banked
  4063  0020E6  51B9               	movf	??_CANInitialize& (0+255),w,b
  4064  0020E8  0100               	movlb	0	; () banked
  4065  0020EA  13BB               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  4066  0020EC  0100               	movlb	0	; () banked
  4067  0020EE  51BA               	movf	(??_CANInitialize+1)& (0+255),w,b
  4068  0020F0  0100               	movlb	0	; () banked
  4069  0020F2  13BC               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  4070                           
  4071                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4072                           ; Switch size 1, requested type "space"
  4073                           ; Number of cases is 1, Range of values is 0 to 0
  4074                           ; switch strategies available:
  4075                           ; Name         Instructions Cycles
  4076                           ; simple_byte            4     3 (average)
  4077                           ;	Chosen strategy is simple_byte
  4078  0020F4  0100               	movlb	0	; () banked
  4079  0020F6  51BC               	movf	(??_CANInitialize+3)& (0+255),w,b
  4080  0020F8  0A00               	xorlw	0	; case 0
  4081  0020FA  A4D8               	btfss	status,2,c
  4082  0020FC  D7E1               	goto	l361
  4083                           
  4084                           ; BSR set to: 0
  4085                           ; Switch size 1, requested type "space"
  4086                           ; Number of cases is 2, Range of values is 191 to 223
  4087                           ; switch strategies available:
  4088                           ; Name         Instructions Cycles
  4089                           ; simple_byte            7     4 (average)
  4090                           ;	Chosen strategy is simple_byte
  4091  0020FE  0100               	movlb	0	; () banked
  4092  002100  51BB               	movf	(??_CANInitialize+2)& (0+255),w,b
  4093  002102  0ABF               	xorlw	191	; case 191
  4094  002104  B4D8               	btfsc	status,2,c
  4095  002106  D7D7               	goto	l360
  4096  002108  0A60               	xorlw	96	; case 223
  4097  00210A  B4D8               	btfsc	status,2,c
  4098  00210C  D7D0               	goto	l4372
  4099  00210E  D7D8               	goto	l361
  4100  002110                     l4380:
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  4104  002110  0E00               	movlw	0
  4105  002112  6E1F               	movwf	CANSetFilter@filter,c
  4106  002114  0E00               	movlw	0
  4107  002116  6E20               	movwf	CANSetFilter@filter+1,c
  4108  002118  0E00               	movlw	0
  4109  00211A  6E21               	movwf	CANSetFilter@filter+2,c
  4110  00211C  0E00               	movlw	0
  4111  00211E  6E22               	movwf	CANSetFilter@filter+3,c
  4112  002120  C0BE  F023         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  4113  002124  0E00               	movlw	0
  4114  002126  EC9F  F000         	call	_CANSetFilter
  4115                           
  4116                           ;CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  4117  00212A  0E00               	movlw	0
  4118  00212C  6E1F               	movwf	CANSetFilter@filter,c
  4119  00212E  0E00               	movlw	0
  4120  002130  6E20               	movwf	CANSetFilter@filter+1,c
  4121  002132  0E00               	movlw	0
  4122  002134  6E21               	movwf	CANSetFilter@filter+2,c
  4123  002136  0E00               	movlw	0
  4124  002138  6E22               	movwf	CANSetFilter@filter+3,c
  4125  00213A  C0BE  F023         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  4126  00213E  0E01               	movlw	1
  4127  002140  EC9F  F000         	call	_CANSetFilter
  4128                           
  4129                           ;CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  4130  002144  0E00               	movlw	0
  4131  002146  6E1F               	movwf	CANSetFilter@filter,c
  4132  002148  0E00               	movlw	0
  4133  00214A  6E20               	movwf	CANSetFilter@filter+1,c
  4134  00214C  0E00               	movlw	0
  4135  00214E  6E21               	movwf	CANSetFilter@filter+2,c
  4136  002150  0E00               	movlw	0
  4137  002152  6E22               	movwf	CANSetFilter@filter+3,c
  4138  002154  C0BF  F023         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4139  002158  0E02               	movlw	2
  4140  00215A  EC9F  F000         	call	_CANSetFilter
  4141                           
  4142                           ;CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  4143  00215E  0E00               	movlw	0
  4144  002160  6E1F               	movwf	CANSetFilter@filter,c
  4145  002162  0E00               	movlw	0
  4146  002164  6E20               	movwf	CANSetFilter@filter+1,c
  4147  002166  0E00               	movlw	0
  4148  002168  6E21               	movwf	CANSetFilter@filter+2,c
  4149  00216A  0E00               	movlw	0
  4150  00216C  6E22               	movwf	CANSetFilter@filter+3,c
  4151  00216E  C0BF  F023         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4152  002172  0E03               	movlw	3
  4153  002174  EC9F  F000         	call	_CANSetFilter
  4154                           
  4155                           ;CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  4156  002178  0E00               	movlw	0
  4157  00217A  6E1F               	movwf	CANSetFilter@filter,c
  4158  00217C  0E00               	movlw	0
  4159  00217E  6E20               	movwf	CANSetFilter@filter+1,c
  4160  002180  0E00               	movlw	0
  4161  002182  6E21               	movwf	CANSetFilter@filter+2,c
  4162  002184  0E00               	movlw	0
  4163  002186  6E22               	movwf	CANSetFilter@filter+3,c
  4164  002188  C0BF  F023         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4165  00218C  0E04               	movlw	4
  4166  00218E  EC9F  F000         	call	_CANSetFilter
  4167                           
  4168                           ;CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  4169  002192  0E00               	movlw	0
  4170  002194  6E1F               	movwf	CANSetFilter@filter,c
  4171  002196  0E00               	movlw	0
  4172  002198  6E20               	movwf	CANSetFilter@filter+1,c
  4173  00219A  0E00               	movlw	0
  4174  00219C  6E21               	movwf	CANSetFilter@filter+2,c
  4175  00219E  0E00               	movlw	0
  4176  0021A0  6E22               	movwf	CANSetFilter@filter+3,c
  4177  0021A2  C0BF  F023         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  4178  0021A6  0E05               	movlw	5
  4179  0021A8  EC9F  F000         	call	_CANSetFilter
  4180                           
  4181                           ;CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  4182  0021AC  0E00               	movlw	0
  4183  0021AE  ECBF  F012         	call	_CANOperationMode
  4184  0021B2  0012               	return		;funcret
  4185  0021B4                     __end_of_CANInitialize:
  4186                           	opt stack 0
  4187                           tblptru	equ	0xFF8
  4188                           tblptrh	equ	0xFF7
  4189                           tblptrl	equ	0xFF6
  4190                           tablat	equ	0xFF5
  4191                           prodh	equ	0xFF4
  4192                           prodl	equ	0xFF3
  4193                           intcon	equ	0xFF2
  4194                           postinc0	equ	0xFEE
  4195                           wreg	equ	0xFE8
  4196                           postdec1	equ	0xFE5
  4197                           fsr1l	equ	0xFE1
  4198                           indf2	equ	0xFDF
  4199                           fsr2h	equ	0xFDA
  4200                           fsr2l	equ	0xFD9
  4201                           status	equ	0xFD8
  4202                           
  4203 ;; *************** function _CANSetMask *****************
  4204 ;; Defined at:
  4205 ;;		line 640 in file "CANlib.h"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;  numBuffer       1    wreg     enum E16878
  4208 ;;  mask            4   30[COMRAM] unsigned long 
  4209 ;;  type            1   34[COMRAM] enum E16844
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;  numBuffer       1    4[BANK0 ] enum E16878
  4212 ;;  tamp            4    5[BANK0 ] unsigned long 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;		None               void
  4215 ;; Registers used:
  4216 ;;		wreg, status,2, status,0
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4222 ;;      Params:         5       0       0       0
  4223 ;;      Locals:         0       5       0       0
  4224 ;;      Temps:          0       4       0       0
  4225 ;;      Totals:         5       9       0       0
  4226 ;;Total ram usage:       14 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; Hardware stack levels required when called:    2
  4229 ;; This function calls:
  4230 ;;		Nothing
  4231 ;; This function is called by:
  4232 ;;		_CANInitialize
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text13
  4237  001804                     __ptext13:
  4238                           	opt stack 0
  4239  001804                     _CANSetMask:
  4240                           	opt stack 26
  4241                           
  4242                           ;incstack = 0
  4243                           ;CANSetMask@numBuffer stored from wreg
  4244  001804  0100               	movlb	0	; () banked
  4245  001806  6FAF               	movwf	CANSetMask@numBuffer& (0+255),b
  4246                           
  4247                           ;CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  4248  001808  0100               	movlb	0	; () banked
  4249  00180A  05AF               	decf	CANSetMask@numBuffer& (0+255),w,b
  4250  00180C  A4D8               	btfss	status,2,c
  4251  00180E  D051               	goto	l3936
  4252                           
  4253                           ; BSR set to: 0
  4254  001810  2823               	incf	CANSetMask@type,w,c
  4255  001812  A4D8               	btfss	status,2,c
  4256  001814  D04E               	goto	l3936
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;CANlib.h: 644: {
  4260                           ;CANlib.h: 645: tamp = (mask >> 3);
  4261  001816  C01F  F0AB         	movff	CANSetMask@mask,??_CANSetMask
  4262  00181A  C020  F0AC         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4263  00181E  C021  F0AD         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4264  001822  C022  F0AE         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4265  001826  0E04               	movlw	4
  4266  001828  D006               	goto	u4480
  4267  00182A                     u4485:
  4268  00182A  0100               	movlb	0	; () banked
  4269  00182C  90D8               	bcf	status,0,c
  4270  00182E  33AE               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4271  001830  33AD               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4272  001832  33AC               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4273  001834  33AB               	rrcf	??_CANSetMask& (0+255),f,b
  4274  001836                     u4480:
  4275  001836  2EE8               	decfsz	wreg,f,c
  4276  001838  D7F8               	goto	u4485
  4277  00183A  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  4278  00183E  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4279  001842  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4280  001846  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;CANlib.h: 646: tamp = tamp & 0x000000FF;
  4284  00184A  0100               	movlb	0	; () banked
  4285  00184C  51B0               	movf	CANSetMask@tamp& (0+255),w,b
  4286  00184E  0100               	movlb	0	; () banked
  4287  001850  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4288  001852  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4289  001854  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4290  001856  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  4294  001858  C0B0  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;CANlib.h: 649: tamp = mask & 0x00000007;
  4298  00185C  0E07               	movlw	7
  4299  00185E  141F               	andwf	CANSetMask@mask,w,c
  4300  001860  0100               	movlb	0	; () banked
  4301  001862  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4302  001864  0E00               	movlw	0
  4303  001866  1420               	andwf	CANSetMask@mask+1,w,c
  4304  001868  0100               	movlb	0	; () banked
  4305  00186A  6FB1               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4306  00186C  0E00               	movlw	0
  4307  00186E  1421               	andwf	CANSetMask@mask+2,w,c
  4308  001870  0100               	movlb	0	; () banked
  4309  001872  6FB2               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4310  001874  0E00               	movlw	0
  4311  001876  1422               	andwf	CANSetMask@mask+3,w,c
  4312  001878  0100               	movlb	0	; () banked
  4313  00187A  6FB3               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;CANlib.h: 650: tamp = tamp << 5;
  4317  00187C  C0B0  F0AB         	movff	CANSetMask@tamp,??_CANSetMask
  4318  001880  C0B1  F0AC         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4319  001884  C0B2  F0AD         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4320  001888  C0B3  F0AE         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4321  00188C  0E05               	movlw	5
  4322  00188E                     u4495:
  4323  00188E  90D8               	bcf	status,0,c
  4324  001890  0100               	movlb	0	; () banked
  4325  001892  37AB               	rlcf	??_CANSetMask& (0+255),f,b
  4326  001894  37AC               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4327  001896  37AD               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4328  001898  37AE               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4329  00189A  2EE8               	decfsz	wreg,f,c
  4330  00189C  D7F8               	goto	u4495
  4331  00189E  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  4332  0018A2  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4333  0018A6  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4334  0018AA  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  4338  0018AE  C0B0  FF19         	movff	CANSetMask@tamp,3865	;volatile
  4339  0018B2                     l3936:
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;CANlib.h: 652: }
  4343                           ;CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  4344  0018B2  0E02               	movlw	2
  4345  0018B4  0100               	movlb	0	; () banked
  4346  0018B6  19AF               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4347  0018B8  A4D8               	btfss	status,2,c
  4348  0018BA  D051               	goto	l3952
  4349                           
  4350                           ; BSR set to: 0
  4351  0018BC  2823               	incf	CANSetMask@type,w,c
  4352  0018BE  A4D8               	btfss	status,2,c
  4353  0018C0  D04E               	goto	l3952
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;CANlib.h: 655: {
  4357                           ;CANlib.h: 656: tamp = (mask >> 3);
  4358  0018C2  C01F  F0AB         	movff	CANSetMask@mask,??_CANSetMask
  4359  0018C6  C020  F0AC         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4360  0018CA  C021  F0AD         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4361  0018CE  C022  F0AE         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4362  0018D2  0E04               	movlw	4
  4363  0018D4  D006               	goto	u4520
  4364  0018D6                     u4525:
  4365  0018D6  0100               	movlb	0	; () banked
  4366  0018D8  90D8               	bcf	status,0,c
  4367  0018DA  33AE               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4368  0018DC  33AD               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4369  0018DE  33AC               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4370  0018E0  33AB               	rrcf	??_CANSetMask& (0+255),f,b
  4371  0018E2                     u4520:
  4372  0018E2  2EE8               	decfsz	wreg,f,c
  4373  0018E4  D7F8               	goto	u4525
  4374  0018E6  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  4375  0018EA  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4376  0018EE  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4377  0018F2  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;CANlib.h: 657: tamp = tamp & 0x000000FF;
  4381  0018F6  0100               	movlb	0	; () banked
  4382  0018F8  51B0               	movf	CANSetMask@tamp& (0+255),w,b
  4383  0018FA  0100               	movlb	0	; () banked
  4384  0018FC  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4385  0018FE  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4386  001900  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4387  001902  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4391  001904  C0B0  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;CANlib.h: 660: tamp = mask & 0x00000007;
  4395  001908  0E07               	movlw	7
  4396  00190A  141F               	andwf	CANSetMask@mask,w,c
  4397  00190C  0100               	movlb	0	; () banked
  4398  00190E  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4399  001910  0E00               	movlw	0
  4400  001912  1420               	andwf	CANSetMask@mask+1,w,c
  4401  001914  0100               	movlb	0	; () banked
  4402  001916  6FB1               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4403  001918  0E00               	movlw	0
  4404  00191A  1421               	andwf	CANSetMask@mask+2,w,c
  4405  00191C  0100               	movlb	0	; () banked
  4406  00191E  6FB2               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4407  001920  0E00               	movlw	0
  4408  001922  1422               	andwf	CANSetMask@mask+3,w,c
  4409  001924  0100               	movlb	0	; () banked
  4410  001926  6FB3               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;CANlib.h: 661: tamp = tamp << 5;
  4414  001928  C0B0  F0AB         	movff	CANSetMask@tamp,??_CANSetMask
  4415  00192C  C0B1  F0AC         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4416  001930  C0B2  F0AD         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4417  001934  C0B3  F0AE         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4418  001938  0E05               	movlw	5
  4419  00193A                     u4535:
  4420  00193A  90D8               	bcf	status,0,c
  4421  00193C  0100               	movlb	0	; () banked
  4422  00193E  37AB               	rlcf	??_CANSetMask& (0+255),f,b
  4423  001940  37AC               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4424  001942  37AD               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4425  001944  37AE               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4426  001946  2EE8               	decfsz	wreg,f,c
  4427  001948  D7F8               	goto	u4535
  4428  00194A  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  4429  00194E  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4430  001952  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4431  001956  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4435  00195A  C0B0  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4436  00195E                     l3952:
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;CANlib.h: 663: }
  4440                           ;CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4441  00195E  0100               	movlb	0	; () banked
  4442  001960  05AF               	decf	CANSetMask@numBuffer& (0+255),w,b
  4443  001962  A4D8               	btfss	status,2,c
  4444  001964  D07C               	goto	l3984
  4445                           
  4446                           ; BSR set to: 0
  4447  001966  0EF7               	movlw	247
  4448  001968  1823               	xorwf	CANSetMask@type,w,c
  4449  00196A  A4D8               	btfss	status,2,c
  4450  00196C  D078               	goto	l3984
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;CANlib.h: 666: {
  4454                           ;CANlib.h: 667: tamp = mask & 0x000000FF;
  4455  00196E  501F               	movf	CANSetMask@mask,w,c
  4456  001970  0100               	movlb	0	; () banked
  4457  001972  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4458  001974  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4459  001976  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4460  001978  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4464  00197A  C0B0  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;CANlib.h: 670: tamp = mask & 0x0000FF00;
  4468  00197E  0E00               	movlw	0
  4469  001980  141F               	andwf	CANSetMask@mask,w,c
  4470  001982  0100               	movlb	0	; () banked
  4471  001984  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4472  001986  0EFF               	movlw	255
  4473  001988  1420               	andwf	CANSetMask@mask+1,w,c
  4474  00198A  0100               	movlb	0	; () banked
  4475  00198C  6FB1               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4476  00198E  0E00               	movlw	0
  4477  001990  1421               	andwf	CANSetMask@mask+2,w,c
  4478  001992  0100               	movlb	0	; () banked
  4479  001994  6FB2               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4480  001996  0E00               	movlw	0
  4481  001998  1422               	andwf	CANSetMask@mask+3,w,c
  4482  00199A  0100               	movlb	0	; () banked
  4483  00199C  6FB3               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;CANlib.h: 671: tamp = tamp >> 8;
  4487  00199E  C0B0  F0AB         	movff	CANSetMask@tamp,??_CANSetMask
  4488  0019A2  C0B1  F0AC         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4489  0019A6  C0B2  F0AD         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4490  0019AA  C0B3  F0AE         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4491  0019AE  C0AC  F0AB         	movff	??_CANSetMask+1,??_CANSetMask
  4492  0019B2  C0AD  F0AC         	movff	??_CANSetMask+2,??_CANSetMask+1
  4493  0019B6  C0AE  F0AD         	movff	??_CANSetMask+3,??_CANSetMask+2
  4494  0019BA  0100               	movlb	0	; () banked
  4495  0019BC  6BAE               	clrf	(??_CANSetMask+3)& (0+255),b
  4496  0019BE  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  4497  0019C2  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4498  0019C6  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4499  0019CA  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4503  0019CE  C0B0  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;CANlib.h: 674: if (mask & 0x00010000)
  4507  0019D2  A021               	btfss	CANSetMask@mask+2,0,c
  4508  0019D4  D003               	goto	l434
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4512  0019D6  010F               	movlb	15	; () banked
  4513  0019D8  8119               	bsf	25,0,b	;volatile
  4514  0019DA  D002               	goto	l435
  4515  0019DC                     l434:
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;CANlib.h: 676: else
  4519                           ;CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4520  0019DC  010F               	movlb	15	; () banked
  4521  0019DE  9119               	bcf	25,0,b	;volatile
  4522  0019E0                     l435:
  4523                           
  4524                           ; BSR set to: 15
  4525                           ;CANlib.h: 679: if (mask & 0x00020000)
  4526  0019E0  A221               	btfss	CANSetMask@mask+2,1,c
  4527  0019E2  D003               	goto	l436
  4528                           
  4529                           ; BSR set to: 15
  4530                           ;CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4531  0019E4  010F               	movlb	15	; () banked
  4532  0019E6  8319               	bsf	25,1,b	;volatile
  4533  0019E8  D002               	goto	l437
  4534  0019EA                     l436:
  4535                           
  4536                           ; BSR set to: 15
  4537                           ;CANlib.h: 681: else
  4538                           ;CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4539  0019EA  010F               	movlb	15	; () banked
  4540  0019EC  9319               	bcf	25,1,b	;volatile
  4541  0019EE                     l437:
  4542                           
  4543                           ; BSR set to: 15
  4544                           ;CANlib.h: 684: if (mask & 0x00040000)
  4545  0019EE  A421               	btfss	CANSetMask@mask+2,2,c
  4546  0019F0  D003               	goto	l438
  4547                           
  4548                           ; BSR set to: 15
  4549                           ;CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4550  0019F2  010F               	movlb	15	; () banked
  4551  0019F4  8B19               	bsf	25,5,b	;volatile
  4552  0019F6  D002               	goto	l439
  4553  0019F8                     l438:
  4554                           
  4555                           ; BSR set to: 15
  4556                           ;CANlib.h: 686: else
  4557                           ;CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4558  0019F8  010F               	movlb	15	; () banked
  4559  0019FA  9B19               	bcf	25,5,b	;volatile
  4560  0019FC                     l439:
  4561                           
  4562                           ; BSR set to: 15
  4563                           ;CANlib.h: 689: if (mask & 0x00080000)
  4564  0019FC  A621               	btfss	CANSetMask@mask+2,3,c
  4565  0019FE  D003               	goto	l440
  4566                           
  4567                           ; BSR set to: 15
  4568                           ;CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4569  001A00  010F               	movlb	15	; () banked
  4570  001A02  8D19               	bsf	25,6,b	;volatile
  4571  001A04  D002               	goto	l441
  4572  001A06                     l440:
  4573                           
  4574                           ; BSR set to: 15
  4575                           ;CANlib.h: 691: else
  4576                           ;CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4577  001A06  010F               	movlb	15	; () banked
  4578  001A08  9D19               	bcf	25,6,b	;volatile
  4579  001A0A                     l441:
  4580                           
  4581                           ; BSR set to: 15
  4582                           ;CANlib.h: 694: if (mask & 0x00100000)
  4583  001A0A  A821               	btfss	CANSetMask@mask+2,4,c
  4584  001A0C  D003               	goto	l442
  4585                           
  4586                           ; BSR set to: 15
  4587                           ;CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4588  001A0E  010F               	movlb	15	; () banked
  4589  001A10  8F19               	bsf	25,7,b	;volatile
  4590  001A12  D002               	goto	l3978
  4591  001A14                     l442:
  4592                           
  4593                           ; BSR set to: 15
  4594                           ;CANlib.h: 696: else
  4595                           ;CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4596  001A14  010F               	movlb	15	; () banked
  4597  001A16  9F19               	bcf	25,7,b	;volatile
  4598  001A18                     l3978:
  4599                           
  4600                           ; BSR set to: 15
  4601                           ;CANlib.h: 699: tamp = (mask >> 21);
  4602  001A18  C01F  F0AB         	movff	CANSetMask@mask,??_CANSetMask
  4603  001A1C  C020  F0AC         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4604  001A20  C021  F0AD         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4605  001A24  C022  F0AE         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4606  001A28  0E16               	movlw	22
  4607  001A2A  D006               	goto	u4610
  4608  001A2C                     u4615:
  4609  001A2C  0100               	movlb	0	; () banked
  4610  001A2E  90D8               	bcf	status,0,c
  4611  001A30  33AE               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4612  001A32  33AD               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4613  001A34  33AC               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4614  001A36  33AB               	rrcf	??_CANSetMask& (0+255),f,b
  4615  001A38                     u4610:
  4616  001A38  2EE8               	decfsz	wreg,f,c
  4617  001A3A  D7F8               	goto	u4615
  4618  001A3C  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  4619  001A40  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4620  001A44  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4621  001A48  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;CANlib.h: 700: tamp = tamp & 0x000000FF;
  4625  001A4C  0100               	movlb	0	; () banked
  4626  001A4E  51B0               	movf	CANSetMask@tamp& (0+255),w,b
  4627  001A50  0100               	movlb	0	; () banked
  4628  001A52  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4629  001A54  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4630  001A56  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4631  001A58  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4635  001A5A  C0B0  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4636  001A5E                     l3984:
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;CANlib.h: 702: }
  4640                           ;CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4641  001A5E  0E02               	movlw	2
  4642  001A60  0100               	movlb	0	; () banked
  4643  001A62  19AF               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4644  001A64  A4D8               	btfss	status,2,c
  4645  001A66  0012               	return	
  4646                           
  4647                           ; BSR set to: 0
  4648  001A68  0EF7               	movlw	247
  4649  001A6A  1823               	xorwf	CANSetMask@type,w,c
  4650  001A6C  A4D8               	btfss	status,2,c
  4651  001A6E  0012               	return	
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;CANlib.h: 705: {
  4655                           ;CANlib.h: 706: tamp = mask & 0x000000FF;
  4656  001A70  501F               	movf	CANSetMask@mask,w,c
  4657  001A72  0100               	movlb	0	; () banked
  4658  001A74  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4659  001A76  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4660  001A78  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4661  001A7A  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4665  001A7C  C0B0  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;CANlib.h: 709: tamp = mask & 0x0000FF00;
  4669  001A80  0E00               	movlw	0
  4670  001A82  141F               	andwf	CANSetMask@mask,w,c
  4671  001A84  0100               	movlb	0	; () banked
  4672  001A86  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4673  001A88  0EFF               	movlw	255
  4674  001A8A  1420               	andwf	CANSetMask@mask+1,w,c
  4675  001A8C  0100               	movlb	0	; () banked
  4676  001A8E  6FB1               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4677  001A90  0E00               	movlw	0
  4678  001A92  1421               	andwf	CANSetMask@mask+2,w,c
  4679  001A94  0100               	movlb	0	; () banked
  4680  001A96  6FB2               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4681  001A98  0E00               	movlw	0
  4682  001A9A  1422               	andwf	CANSetMask@mask+3,w,c
  4683  001A9C  0100               	movlb	0	; () banked
  4684  001A9E  6FB3               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;CANlib.h: 710: tamp = tamp >> 8;
  4688  001AA0  C0B0  F0AB         	movff	CANSetMask@tamp,??_CANSetMask
  4689  001AA4  C0B1  F0AC         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4690  001AA8  C0B2  F0AD         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4691  001AAC  C0B3  F0AE         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4692  001AB0  C0AC  F0AB         	movff	??_CANSetMask+1,??_CANSetMask
  4693  001AB4  C0AD  F0AC         	movff	??_CANSetMask+2,??_CANSetMask+1
  4694  001AB8  C0AE  F0AD         	movff	??_CANSetMask+3,??_CANSetMask+2
  4695  001ABC  0100               	movlb	0	; () banked
  4696  001ABE  6BAE               	clrf	(??_CANSetMask+3)& (0+255),b
  4697  001AC0  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  4698  001AC4  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4699  001AC8  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4700  001ACC  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4704  001AD0  C0B0  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;CANlib.h: 713: if (mask & 0x00010000)
  4708  001AD4  A021               	btfss	CANSetMask@mask+2,0,c
  4709  001AD6  D003               	goto	l445
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4713  001AD8  010F               	movlb	15	; () banked
  4714  001ADA  811D               	bsf	29,0,b	;volatile
  4715  001ADC  D002               	goto	l446
  4716  001ADE                     l445:
  4717                           
  4718                           ; BSR set to: 0
  4719                           ;CANlib.h: 715: else
  4720                           ;CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4721  001ADE  010F               	movlb	15	; () banked
  4722  001AE0  911D               	bcf	29,0,b	;volatile
  4723  001AE2                     l446:
  4724                           
  4725                           ; BSR set to: 15
  4726                           ;CANlib.h: 718: if (mask & 0x00020000)
  4727  001AE2  A221               	btfss	CANSetMask@mask+2,1,c
  4728  001AE4  D003               	goto	l447
  4729                           
  4730                           ; BSR set to: 15
  4731                           ;CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4732  001AE6  010F               	movlb	15	; () banked
  4733  001AE8  831D               	bsf	29,1,b	;volatile
  4734  001AEA  D002               	goto	l448
  4735  001AEC                     l447:
  4736                           
  4737                           ; BSR set to: 15
  4738                           ;CANlib.h: 720: else
  4739                           ;CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4740  001AEC  010F               	movlb	15	; () banked
  4741  001AEE  931D               	bcf	29,1,b	;volatile
  4742  001AF0                     l448:
  4743                           
  4744                           ; BSR set to: 15
  4745                           ;CANlib.h: 723: if (mask & 0x00040000)
  4746  001AF0  A421               	btfss	CANSetMask@mask+2,2,c
  4747  001AF2  D003               	goto	l449
  4748                           
  4749                           ; BSR set to: 15
  4750                           ;CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4751  001AF4  010F               	movlb	15	; () banked
  4752  001AF6  8B1D               	bsf	29,5,b	;volatile
  4753  001AF8  D002               	goto	l450
  4754  001AFA                     l449:
  4755                           
  4756                           ; BSR set to: 15
  4757                           ;CANlib.h: 725: else
  4758                           ;CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4759  001AFA  010F               	movlb	15	; () banked
  4760  001AFC  9B1D               	bcf	29,5,b	;volatile
  4761  001AFE                     l450:
  4762                           
  4763                           ; BSR set to: 15
  4764                           ;CANlib.h: 728: if (mask & 0x00080000)
  4765  001AFE  A621               	btfss	CANSetMask@mask+2,3,c
  4766  001B00  D003               	goto	l451
  4767                           
  4768                           ; BSR set to: 15
  4769                           ;CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4770  001B02  010F               	movlb	15	; () banked
  4771  001B04  8D1D               	bsf	29,6,b	;volatile
  4772  001B06  D002               	goto	l452
  4773  001B08                     l451:
  4774                           
  4775                           ; BSR set to: 15
  4776                           ;CANlib.h: 730: else
  4777                           ;CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4778  001B08  010F               	movlb	15	; () banked
  4779  001B0A  9D1D               	bcf	29,6,b	;volatile
  4780  001B0C                     l452:
  4781                           
  4782                           ; BSR set to: 15
  4783                           ;CANlib.h: 733: if (mask & 0x00100000)
  4784  001B0C  A821               	btfss	CANSetMask@mask+2,4,c
  4785  001B0E  D003               	goto	l453
  4786                           
  4787                           ; BSR set to: 15
  4788                           ;CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4789  001B10  010F               	movlb	15	; () banked
  4790  001B12  8F1D               	bsf	29,7,b	;volatile
  4791  001B14  D002               	goto	l4010
  4792  001B16                     l453:
  4793                           
  4794                           ; BSR set to: 15
  4795                           ;CANlib.h: 735: else
  4796                           ;CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4797  001B16  010F               	movlb	15	; () banked
  4798  001B18  9F1D               	bcf	29,7,b	;volatile
  4799  001B1A                     l4010:
  4800                           
  4801                           ; BSR set to: 15
  4802                           ;CANlib.h: 738: tamp = (mask >> 21);
  4803  001B1A  C01F  F0AB         	movff	CANSetMask@mask,??_CANSetMask
  4804  001B1E  C020  F0AC         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4805  001B22  C021  F0AD         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4806  001B26  C022  F0AE         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4807  001B2A  0E16               	movlw	22
  4808  001B2C  D006               	goto	u4690
  4809  001B2E                     u4695:
  4810  001B2E  0100               	movlb	0	; () banked
  4811  001B30  90D8               	bcf	status,0,c
  4812  001B32  33AE               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4813  001B34  33AD               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4814  001B36  33AC               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4815  001B38  33AB               	rrcf	??_CANSetMask& (0+255),f,b
  4816  001B3A                     u4690:
  4817  001B3A  2EE8               	decfsz	wreg,f,c
  4818  001B3C  D7F8               	goto	u4695
  4819  001B3E  C0AB  F0B0         	movff	??_CANSetMask,CANSetMask@tamp
  4820  001B42  C0AC  F0B1         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4821  001B46  C0AD  F0B2         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4822  001B4A  C0AE  F0B3         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;CANlib.h: 739: tamp = tamp & 0x000000FF;
  4826  001B4E  0100               	movlb	0	; () banked
  4827  001B50  51B0               	movf	CANSetMask@tamp& (0+255),w,b
  4828  001B52  0100               	movlb	0	; () banked
  4829  001B54  6FB0               	movwf	CANSetMask@tamp& (0+255),b
  4830  001B56  6BB1               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4831  001B58  6BB2               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4832  001B5A  6BB3               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4836  001B5C  C0B0  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4837  001B60  0012               	return	
  4838  001B62                     __end_of_CANSetMask:
  4839                           	opt stack 0
  4840                           tblptru	equ	0xFF8
  4841                           tblptrh	equ	0xFF7
  4842                           tblptrl	equ	0xFF6
  4843                           tablat	equ	0xFF5
  4844                           prodh	equ	0xFF4
  4845                           prodl	equ	0xFF3
  4846                           intcon	equ	0xFF2
  4847                           postinc0	equ	0xFEE
  4848                           wreg	equ	0xFE8
  4849                           postdec1	equ	0xFE5
  4850                           fsr1l	equ	0xFE1
  4851                           indf2	equ	0xFDF
  4852                           fsr2h	equ	0xFDA
  4853                           fsr2l	equ	0xFD9
  4854                           status	equ	0xFD8
  4855                           
  4856 ;; *************** function _CANSetFilter *****************
  4857 ;; Defined at:
  4858 ;;		line 748 in file "CANlib.h"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  numBuffer       1    wreg     enum E16881
  4861 ;;  filter          4   30[COMRAM] unsigned long 
  4862 ;;  type            1   34[COMRAM] enum E16844
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  numBuffer       1    4[BANK0 ] enum E16881
  4865 ;;  tamp            4    5[BANK0 ] unsigned long 
  4866 ;; Return value:  Size  Location     Type
  4867 ;;		None               void
  4868 ;; Registers used:
  4869 ;;		wreg, status,2, status,0
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4875 ;;      Params:         5       0       0       0
  4876 ;;      Locals:         0       5       0       0
  4877 ;;      Temps:          0       4       0       0
  4878 ;;      Totals:         5       9       0       0
  4879 ;;Total ram usage:       14 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; Hardware stack levels required when called:    2
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		_CANInitialize
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889                           	psect	text14
  4890  00013E                     __ptext14:
  4891                           	opt stack 0
  4892  00013E                     _CANSetFilter:
  4893                           	opt stack 26
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;incstack = 0
  4897                           ;CANSetFilter@numBuffer stored from wreg
  4898  00013E  0100               	movlb	0	; () banked
  4899  000140  6FAF               	movwf	CANSetFilter@numBuffer& (0+255),b
  4900                           
  4901                           ;CANlib.h: 750: unsigned long tamp;
  4902                           ;CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4903  000142  0100               	movlb	0	; () banked
  4904  000144  51AF               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4905  000146  0100               	movlb	0	; () banked
  4906  000148  A4D8               	btfss	status,2,c
  4907  00014A  D053               	goto	l4034
  4908                           
  4909                           ; BSR set to: 0
  4910  00014C  2823               	incf	CANSetFilter@type,w,c
  4911  00014E  A4D8               	btfss	status,2,c
  4912  000150  D050               	goto	l4034
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;CANlib.h: 753: {
  4916                           ;CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4917  000152  010F               	movlb	15	; () banked
  4918  000154  9701               	bcf	1,3,b	;volatile
  4919                           
  4920                           ; BSR set to: 15
  4921                           ;CANlib.h: 756: tamp = (filter >> 3);
  4922  000156  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  4923  00015A  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4924  00015E  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4925  000162  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4926  000166  0E04               	movlw	4
  4927  000168  D006               	goto	u4720
  4928  00016A                     u4725:
  4929  00016A  0100               	movlb	0	; () banked
  4930  00016C  90D8               	bcf	status,0,c
  4931  00016E  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4932  000170  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4933  000172  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4934  000174  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  4935  000176                     u4720:
  4936  000176  2EE8               	decfsz	wreg,f,c
  4937  000178  D7F8               	goto	u4725
  4938  00017A  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  4939  00017E  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4940  000182  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4941  000186  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;CANlib.h: 757: tamp = tamp & 0x000000FF;
  4945  00018A  0100               	movlb	0	; () banked
  4946  00018C  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  4947  00018E  0100               	movlb	0	; () banked
  4948  000190  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4949  000192  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4950  000194  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4951  000196  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4952                           
  4953                           ; BSR set to: 0
  4954                           ;CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4955  000198  C0B0  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;CANlib.h: 760: tamp = filter & 0x00000007;
  4959  00019C  0E07               	movlw	7
  4960  00019E  141F               	andwf	CANSetFilter@filter,w,c
  4961  0001A0  0100               	movlb	0	; () banked
  4962  0001A2  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  4963  0001A4  0E00               	movlw	0
  4964  0001A6  1420               	andwf	CANSetFilter@filter+1,w,c
  4965  0001A8  0100               	movlb	0	; () banked
  4966  0001AA  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4967  0001AC  0E00               	movlw	0
  4968  0001AE  1421               	andwf	CANSetFilter@filter+2,w,c
  4969  0001B0  0100               	movlb	0	; () banked
  4970  0001B2  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4971  0001B4  0E00               	movlw	0
  4972  0001B6  1422               	andwf	CANSetFilter@filter+3,w,c
  4973  0001B8  0100               	movlb	0	; () banked
  4974  0001BA  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;CANlib.h: 761: tamp = tamp << 5;
  4978  0001BC  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  4979  0001C0  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4980  0001C4  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4981  0001C8  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4982  0001CC  0E05               	movlw	5
  4983  0001CE                     u4735:
  4984  0001CE  90D8               	bcf	status,0,c
  4985  0001D0  0100               	movlb	0	; () banked
  4986  0001D2  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  4987  0001D4  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4988  0001D6  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4989  0001D8  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4990  0001DA  2EE8               	decfsz	wreg,f,c
  4991  0001DC  D7F8               	goto	u4735
  4992  0001DE  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  4993  0001E2  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4994  0001E6  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4995  0001EA  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4999  0001EE  C0B0  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  5000  0001F2                     l4034:
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;CANlib.h: 763: }
  5004                           ;CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  5005  0001F2  0100               	movlb	0	; () banked
  5006  0001F4  05AF               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5007  0001F6  A4D8               	btfss	status,2,c
  5008  0001F8  D053               	goto	l4052
  5009                           
  5010                           ; BSR set to: 0
  5011  0001FA  2823               	incf	CANSetFilter@type,w,c
  5012  0001FC  A4D8               	btfss	status,2,c
  5013  0001FE  D050               	goto	l4052
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;CANlib.h: 766: {
  5017                           ;CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  5018  000200  010F               	movlb	15	; () banked
  5019  000202  9705               	bcf	5,3,b	;volatile
  5020                           
  5021                           ; BSR set to: 15
  5022                           ;CANlib.h: 769: tamp = (filter >> 3);
  5023  000204  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  5024  000208  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5025  00020C  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5026  000210  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5027  000214  0E04               	movlw	4
  5028  000216  D006               	goto	u4760
  5029  000218                     u4765:
  5030  000218  0100               	movlb	0	; () banked
  5031  00021A  90D8               	bcf	status,0,c
  5032  00021C  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5033  00021E  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5034  000220  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5035  000222  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  5036  000224                     u4760:
  5037  000224  2EE8               	decfsz	wreg,f,c
  5038  000226  D7F8               	goto	u4765
  5039  000228  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5040  00022C  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5041  000230  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5042  000234  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;CANlib.h: 770: tamp = tamp & 0x000000FF;
  5046  000238  0100               	movlb	0	; () banked
  5047  00023A  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  5048  00023C  0100               	movlb	0	; () banked
  5049  00023E  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5050  000240  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5051  000242  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5052  000244  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  5056  000246  C0B0  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;CANlib.h: 773: tamp = filter & 0x00000007;
  5060  00024A  0E07               	movlw	7
  5061  00024C  141F               	andwf	CANSetFilter@filter,w,c
  5062  00024E  0100               	movlb	0	; () banked
  5063  000250  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5064  000252  0E00               	movlw	0
  5065  000254  1420               	andwf	CANSetFilter@filter+1,w,c
  5066  000256  0100               	movlb	0	; () banked
  5067  000258  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5068  00025A  0E00               	movlw	0
  5069  00025C  1421               	andwf	CANSetFilter@filter+2,w,c
  5070  00025E  0100               	movlb	0	; () banked
  5071  000260  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5072  000262  0E00               	movlw	0
  5073  000264  1422               	andwf	CANSetFilter@filter+3,w,c
  5074  000266  0100               	movlb	0	; () banked
  5075  000268  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;CANlib.h: 774: tamp = tamp << 5;
  5079  00026A  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  5080  00026E  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5081  000272  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5082  000276  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5083  00027A  0E05               	movlw	5
  5084  00027C                     u4775:
  5085  00027C  90D8               	bcf	status,0,c
  5086  00027E  0100               	movlb	0	; () banked
  5087  000280  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  5088  000282  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5089  000284  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5090  000286  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5091  000288  2EE8               	decfsz	wreg,f,c
  5092  00028A  D7F8               	goto	u4775
  5093  00028C  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5094  000290  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5095  000294  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5096  000298  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  5100  00029C  C0B0  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  5101  0002A0                     l4052:
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;CANlib.h: 776: }
  5105                           ;CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  5106  0002A0  0E02               	movlw	2
  5107  0002A2  0100               	movlb	0	; () banked
  5108  0002A4  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5109  0002A6  A4D8               	btfss	status,2,c
  5110  0002A8  D053               	goto	l4070
  5111                           
  5112                           ; BSR set to: 0
  5113  0002AA  2823               	incf	CANSetFilter@type,w,c
  5114  0002AC  A4D8               	btfss	status,2,c
  5115  0002AE  D050               	goto	l4070
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;CANlib.h: 779: {
  5119                           ;CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  5120  0002B0  010F               	movlb	15	; () banked
  5121  0002B2  9709               	bcf	9,3,b	;volatile
  5122                           
  5123                           ; BSR set to: 15
  5124                           ;CANlib.h: 782: tamp = (filter >> 3);
  5125  0002B4  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  5126  0002B8  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5127  0002BC  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5128  0002C0  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5129  0002C4  0E04               	movlw	4
  5130  0002C6  D006               	goto	u4800
  5131  0002C8                     u4805:
  5132  0002C8  0100               	movlb	0	; () banked
  5133  0002CA  90D8               	bcf	status,0,c
  5134  0002CC  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5135  0002CE  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5136  0002D0  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5137  0002D2  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  5138  0002D4                     u4800:
  5139  0002D4  2EE8               	decfsz	wreg,f,c
  5140  0002D6  D7F8               	goto	u4805
  5141  0002D8  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5142  0002DC  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5143  0002E0  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5144  0002E4  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;CANlib.h: 783: tamp = tamp & 0x000000FF;
  5148  0002E8  0100               	movlb	0	; () banked
  5149  0002EA  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  5150  0002EC  0100               	movlb	0	; () banked
  5151  0002EE  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5152  0002F0  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5153  0002F2  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5154  0002F4  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5155                           
  5156                           ; BSR set to: 0
  5157                           ;CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  5158  0002F6  C0B0  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5159                           
  5160                           ; BSR set to: 0
  5161                           ;CANlib.h: 786: tamp = filter & 0x00000007;
  5162  0002FA  0E07               	movlw	7
  5163  0002FC  141F               	andwf	CANSetFilter@filter,w,c
  5164  0002FE  0100               	movlb	0	; () banked
  5165  000300  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5166  000302  0E00               	movlw	0
  5167  000304  1420               	andwf	CANSetFilter@filter+1,w,c
  5168  000306  0100               	movlb	0	; () banked
  5169  000308  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5170  00030A  0E00               	movlw	0
  5171  00030C  1421               	andwf	CANSetFilter@filter+2,w,c
  5172  00030E  0100               	movlb	0	; () banked
  5173  000310  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5174  000312  0E00               	movlw	0
  5175  000314  1422               	andwf	CANSetFilter@filter+3,w,c
  5176  000316  0100               	movlb	0	; () banked
  5177  000318  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5178                           
  5179                           ; BSR set to: 0
  5180                           ;CANlib.h: 787: tamp = tamp << 5;
  5181  00031A  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  5182  00031E  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5183  000322  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5184  000326  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5185  00032A  0E05               	movlw	5
  5186  00032C                     u4815:
  5187  00032C  90D8               	bcf	status,0,c
  5188  00032E  0100               	movlb	0	; () banked
  5189  000330  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  5190  000332  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5191  000334  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5192  000336  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5193  000338  2EE8               	decfsz	wreg,f,c
  5194  00033A  D7F8               	goto	u4815
  5195  00033C  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5196  000340  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5197  000344  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5198  000348  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5199                           
  5200                           ; BSR set to: 0
  5201                           ;CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  5202  00034C  C0B0  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  5203  000350                     l4070:
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;CANlib.h: 789: }
  5207                           ;CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  5208  000350  0E03               	movlw	3
  5209  000352  0100               	movlb	0	; () banked
  5210  000354  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5211  000356  A4D8               	btfss	status,2,c
  5212  000358  D053               	goto	l4088
  5213                           
  5214                           ; BSR set to: 0
  5215  00035A  2823               	incf	CANSetFilter@type,w,c
  5216  00035C  A4D8               	btfss	status,2,c
  5217  00035E  D050               	goto	l4088
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;CANlib.h: 792: {
  5221                           ;CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  5222  000360  010F               	movlb	15	; () banked
  5223  000362  970D               	bcf	13,3,b	;volatile
  5224                           
  5225                           ; BSR set to: 15
  5226                           ;CANlib.h: 795: tamp = (filter >> 3);
  5227  000364  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  5228  000368  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5229  00036C  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5230  000370  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5231  000374  0E04               	movlw	4
  5232  000376  D006               	goto	u4840
  5233  000378                     u4845:
  5234  000378  0100               	movlb	0	; () banked
  5235  00037A  90D8               	bcf	status,0,c
  5236  00037C  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5237  00037E  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5238  000380  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5239  000382  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  5240  000384                     u4840:
  5241  000384  2EE8               	decfsz	wreg,f,c
  5242  000386  D7F8               	goto	u4845
  5243  000388  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5244  00038C  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5245  000390  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5246  000394  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;CANlib.h: 796: tamp = tamp & 0x000000FF;
  5250  000398  0100               	movlb	0	; () banked
  5251  00039A  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  5252  00039C  0100               	movlb	0	; () banked
  5253  00039E  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5254  0003A0  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5255  0003A2  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5256  0003A4  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  5260  0003A6  C0B0  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;CANlib.h: 799: tamp = filter & 0x00000007;
  5264  0003AA  0E07               	movlw	7
  5265  0003AC  141F               	andwf	CANSetFilter@filter,w,c
  5266  0003AE  0100               	movlb	0	; () banked
  5267  0003B0  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5268  0003B2  0E00               	movlw	0
  5269  0003B4  1420               	andwf	CANSetFilter@filter+1,w,c
  5270  0003B6  0100               	movlb	0	; () banked
  5271  0003B8  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5272  0003BA  0E00               	movlw	0
  5273  0003BC  1421               	andwf	CANSetFilter@filter+2,w,c
  5274  0003BE  0100               	movlb	0	; () banked
  5275  0003C0  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5276  0003C2  0E00               	movlw	0
  5277  0003C4  1422               	andwf	CANSetFilter@filter+3,w,c
  5278  0003C6  0100               	movlb	0	; () banked
  5279  0003C8  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;CANlib.h: 800: tamp = tamp << 5;
  5283  0003CA  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  5284  0003CE  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5285  0003D2  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5286  0003D6  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5287  0003DA  0E05               	movlw	5
  5288  0003DC                     u4855:
  5289  0003DC  90D8               	bcf	status,0,c
  5290  0003DE  0100               	movlb	0	; () banked
  5291  0003E0  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  5292  0003E2  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5293  0003E4  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5294  0003E6  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5295  0003E8  2EE8               	decfsz	wreg,f,c
  5296  0003EA  D7F8               	goto	u4855
  5297  0003EC  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5298  0003F0  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5299  0003F4  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5300  0003F8  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  5304  0003FC  C0B0  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  5305  000400                     l4088:
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;CANlib.h: 802: }
  5309                           ;CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  5310  000400  0E04               	movlw	4
  5311  000402  0100               	movlb	0	; () banked
  5312  000404  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5313  000406  A4D8               	btfss	status,2,c
  5314  000408  D053               	goto	l4106
  5315                           
  5316                           ; BSR set to: 0
  5317  00040A  2823               	incf	CANSetFilter@type,w,c
  5318  00040C  A4D8               	btfss	status,2,c
  5319  00040E  D050               	goto	l4106
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;CANlib.h: 805: {
  5323                           ;CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5324  000410  010F               	movlb	15	; () banked
  5325  000412  9711               	bcf	17,3,b	;volatile
  5326                           
  5327                           ; BSR set to: 15
  5328                           ;CANlib.h: 808: tamp = (filter >> 3);
  5329  000414  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  5330  000418  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5331  00041C  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5332  000420  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5333  000424  0E04               	movlw	4
  5334  000426  D006               	goto	u4880
  5335  000428                     u4885:
  5336  000428  0100               	movlb	0	; () banked
  5337  00042A  90D8               	bcf	status,0,c
  5338  00042C  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5339  00042E  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5340  000430  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5341  000432  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  5342  000434                     u4880:
  5343  000434  2EE8               	decfsz	wreg,f,c
  5344  000436  D7F8               	goto	u4885
  5345  000438  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5346  00043C  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5347  000440  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5348  000444  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;CANlib.h: 809: tamp = tamp & 0x000000FF;
  5352  000448  0100               	movlb	0	; () banked
  5353  00044A  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  5354  00044C  0100               	movlb	0	; () banked
  5355  00044E  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5356  000450  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5357  000452  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5358  000454  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5359                           
  5360                           ; BSR set to: 0
  5361                           ;CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5362  000456  C0B0  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;CANlib.h: 812: tamp = filter & 0x00000007;
  5366  00045A  0E07               	movlw	7
  5367  00045C  141F               	andwf	CANSetFilter@filter,w,c
  5368  00045E  0100               	movlb	0	; () banked
  5369  000460  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5370  000462  0E00               	movlw	0
  5371  000464  1420               	andwf	CANSetFilter@filter+1,w,c
  5372  000466  0100               	movlb	0	; () banked
  5373  000468  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5374  00046A  0E00               	movlw	0
  5375  00046C  1421               	andwf	CANSetFilter@filter+2,w,c
  5376  00046E  0100               	movlb	0	; () banked
  5377  000470  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5378  000472  0E00               	movlw	0
  5379  000474  1422               	andwf	CANSetFilter@filter+3,w,c
  5380  000476  0100               	movlb	0	; () banked
  5381  000478  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;CANlib.h: 813: tamp = tamp << 5;
  5385  00047A  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  5386  00047E  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5387  000482  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5388  000486  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5389  00048A  0E05               	movlw	5
  5390  00048C                     u4895:
  5391  00048C  90D8               	bcf	status,0,c
  5392  00048E  0100               	movlb	0	; () banked
  5393  000490  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  5394  000492  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5395  000494  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5396  000496  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5397  000498  2EE8               	decfsz	wreg,f,c
  5398  00049A  D7F8               	goto	u4895
  5399  00049C  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5400  0004A0  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5401  0004A4  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5402  0004A8  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5406  0004AC  C0B0  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5407  0004B0                     l4106:
  5408                           
  5409                           ; BSR set to: 0
  5410                           ;CANlib.h: 815: }
  5411                           ;CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5412  0004B0  0E05               	movlw	5
  5413  0004B2  0100               	movlb	0	; () banked
  5414  0004B4  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5415  0004B6  A4D8               	btfss	status,2,c
  5416  0004B8  D053               	goto	l4124
  5417                           
  5418                           ; BSR set to: 0
  5419  0004BA  2823               	incf	CANSetFilter@type,w,c
  5420  0004BC  A4D8               	btfss	status,2,c
  5421  0004BE  D050               	goto	l4124
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;CANlib.h: 818: {
  5425                           ;CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5426  0004C0  010F               	movlb	15	; () banked
  5427  0004C2  9715               	bcf	21,3,b	;volatile
  5428                           
  5429                           ; BSR set to: 15
  5430                           ;CANlib.h: 821: tamp = (filter >> 3);
  5431  0004C4  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  5432  0004C8  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5433  0004CC  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5434  0004D0  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5435  0004D4  0E04               	movlw	4
  5436  0004D6  D006               	goto	u4920
  5437  0004D8                     u4925:
  5438  0004D8  0100               	movlb	0	; () banked
  5439  0004DA  90D8               	bcf	status,0,c
  5440  0004DC  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5441  0004DE  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5442  0004E0  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5443  0004E2  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  5444  0004E4                     u4920:
  5445  0004E4  2EE8               	decfsz	wreg,f,c
  5446  0004E6  D7F8               	goto	u4925
  5447  0004E8  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5448  0004EC  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5449  0004F0  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5450  0004F4  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;CANlib.h: 822: tamp = tamp & 0x000000FF;
  5454  0004F8  0100               	movlb	0	; () banked
  5455  0004FA  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  5456  0004FC  0100               	movlb	0	; () banked
  5457  0004FE  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5458  000500  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5459  000502  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5460  000504  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5464  000506  C0B0  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;CANlib.h: 825: tamp = filter & 0x00000007;
  5468  00050A  0E07               	movlw	7
  5469  00050C  141F               	andwf	CANSetFilter@filter,w,c
  5470  00050E  0100               	movlb	0	; () banked
  5471  000510  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5472  000512  0E00               	movlw	0
  5473  000514  1420               	andwf	CANSetFilter@filter+1,w,c
  5474  000516  0100               	movlb	0	; () banked
  5475  000518  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5476  00051A  0E00               	movlw	0
  5477  00051C  1421               	andwf	CANSetFilter@filter+2,w,c
  5478  00051E  0100               	movlb	0	; () banked
  5479  000520  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5480  000522  0E00               	movlw	0
  5481  000524  1422               	andwf	CANSetFilter@filter+3,w,c
  5482  000526  0100               	movlb	0	; () banked
  5483  000528  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;CANlib.h: 826: tamp = tamp << 5;
  5487  00052A  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  5488  00052E  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5489  000532  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5490  000536  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5491  00053A  0E05               	movlw	5
  5492  00053C                     u4935:
  5493  00053C  90D8               	bcf	status,0,c
  5494  00053E  0100               	movlb	0	; () banked
  5495  000540  37AB               	rlcf	??_CANSetFilter& (0+255),f,b
  5496  000542  37AC               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5497  000544  37AD               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5498  000546  37AE               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5499  000548  2EE8               	decfsz	wreg,f,c
  5500  00054A  D7F8               	goto	u4935
  5501  00054C  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5502  000550  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5503  000554  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5504  000558  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5505                           
  5506                           ; BSR set to: 0
  5507                           ;CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5508  00055C  C0B0  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5509  000560                     l4124:
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;CANlib.h: 828: }
  5513                           ;CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5514  000560  0100               	movlb	0	; () banked
  5515  000562  51AF               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5516  000564  0100               	movlb	0	; () banked
  5517  000566  A4D8               	btfss	status,2,c
  5518  000568  D07E               	goto	l4158
  5519                           
  5520                           ; BSR set to: 0
  5521  00056A  0EF7               	movlw	247
  5522  00056C  1823               	xorwf	CANSetFilter@type,w,c
  5523  00056E  A4D8               	btfss	status,2,c
  5524  000570  D07A               	goto	l4158
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;CANlib.h: 832: {
  5528                           ;CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5529  000572  010F               	movlb	15	; () banked
  5530  000574  8701               	bsf	1,3,b	;volatile
  5531                           
  5532                           ; BSR set to: 15
  5533                           ;CANlib.h: 835: tamp = filter & 0x000000FF;
  5534  000576  501F               	movf	CANSetFilter@filter,w,c
  5535  000578  0100               	movlb	0	; () banked
  5536  00057A  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5537  00057C  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5538  00057E  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5539  000580  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5543  000582  C0B0  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;CANlib.h: 838: tamp = filter & 0x0000FF00;
  5547  000586  0E00               	movlw	0
  5548  000588  141F               	andwf	CANSetFilter@filter,w,c
  5549  00058A  0100               	movlb	0	; () banked
  5550  00058C  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5551  00058E  0EFF               	movlw	255
  5552  000590  1420               	andwf	CANSetFilter@filter+1,w,c
  5553  000592  0100               	movlb	0	; () banked
  5554  000594  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5555  000596  0E00               	movlw	0
  5556  000598  1421               	andwf	CANSetFilter@filter+2,w,c
  5557  00059A  0100               	movlb	0	; () banked
  5558  00059C  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5559  00059E  0E00               	movlw	0
  5560  0005A0  1422               	andwf	CANSetFilter@filter+3,w,c
  5561  0005A2  0100               	movlb	0	; () banked
  5562  0005A4  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;CANlib.h: 839: tamp = tamp >> 8;
  5566  0005A6  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  5567  0005AA  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5568  0005AE  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5569  0005B2  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5570  0005B6  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  5571  0005BA  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5572  0005BE  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5573  0005C2  0100               	movlb	0	; () banked
  5574  0005C4  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  5575  0005C6  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5576  0005CA  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5577  0005CE  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5578  0005D2  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5582  0005D6  C0B0  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;CANlib.h: 842: if (filter & 0x00010000)
  5586  0005DA  A021               	btfss	CANSetFilter@filter+2,0,c
  5587  0005DC  D003               	goto	l465
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5591  0005DE  010F               	movlb	15	; () banked
  5592  0005E0  8101               	bsf	1,0,b	;volatile
  5593  0005E2  D002               	goto	l466
  5594  0005E4                     l465:
  5595                           
  5596                           ; BSR set to: 0
  5597                           ;CANlib.h: 844: else
  5598                           ;CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5599  0005E4  010F               	movlb	15	; () banked
  5600  0005E6  9101               	bcf	1,0,b	;volatile
  5601  0005E8                     l466:
  5602                           
  5603                           ; BSR set to: 15
  5604                           ;CANlib.h: 847: if (filter & 0x00020000)
  5605  0005E8  A221               	btfss	CANSetFilter@filter+2,1,c
  5606  0005EA  D003               	goto	l467
  5607                           
  5608                           ; BSR set to: 15
  5609                           ;CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5610  0005EC  010F               	movlb	15	; () banked
  5611  0005EE  8301               	bsf	1,1,b	;volatile
  5612  0005F0  D002               	goto	l468
  5613  0005F2                     l467:
  5614                           
  5615                           ; BSR set to: 15
  5616                           ;CANlib.h: 849: else
  5617                           ;CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5618  0005F2  010F               	movlb	15	; () banked
  5619  0005F4  9301               	bcf	1,1,b	;volatile
  5620  0005F6                     l468:
  5621                           
  5622                           ; BSR set to: 15
  5623                           ;CANlib.h: 852: if (filter & 0x00040000)
  5624  0005F6  A421               	btfss	CANSetFilter@filter+2,2,c
  5625  0005F8  D003               	goto	l469
  5626                           
  5627                           ; BSR set to: 15
  5628                           ;CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5629  0005FA  010F               	movlb	15	; () banked
  5630  0005FC  8B01               	bsf	1,5,b	;volatile
  5631  0005FE  D002               	goto	l470
  5632  000600                     l469:
  5633                           
  5634                           ; BSR set to: 15
  5635                           ;CANlib.h: 854: else
  5636                           ;CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5637  000600  010F               	movlb	15	; () banked
  5638  000602  9B01               	bcf	1,5,b	;volatile
  5639  000604                     l470:
  5640                           
  5641                           ; BSR set to: 15
  5642                           ;CANlib.h: 857: if (filter & 0x00080000)
  5643  000604  A621               	btfss	CANSetFilter@filter+2,3,c
  5644  000606  D003               	goto	l471
  5645                           
  5646                           ; BSR set to: 15
  5647                           ;CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5648  000608  010F               	movlb	15	; () banked
  5649  00060A  8D01               	bsf	1,6,b	;volatile
  5650  00060C  D002               	goto	l472
  5651  00060E                     l471:
  5652                           
  5653                           ; BSR set to: 15
  5654                           ;CANlib.h: 859: else
  5655                           ;CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5656  00060E  010F               	movlb	15	; () banked
  5657  000610  9D01               	bcf	1,6,b	;volatile
  5658  000612                     l472:
  5659                           
  5660                           ; BSR set to: 15
  5661                           ;CANlib.h: 862: if (filter & 0x00100000)
  5662  000612  A821               	btfss	CANSetFilter@filter+2,4,c
  5663  000614  D003               	goto	l473
  5664                           
  5665                           ; BSR set to: 15
  5666                           ;CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5667  000616  010F               	movlb	15	; () banked
  5668  000618  8F01               	bsf	1,7,b	;volatile
  5669  00061A  D002               	goto	l4152
  5670  00061C                     l473:
  5671                           
  5672                           ; BSR set to: 15
  5673                           ;CANlib.h: 864: else
  5674                           ;CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5675  00061C  010F               	movlb	15	; () banked
  5676  00061E  9F01               	bcf	1,7,b	;volatile
  5677  000620                     l4152:
  5678                           
  5679                           ; BSR set to: 15
  5680                           ;CANlib.h: 867: tamp = (filter >> 21);
  5681  000620  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  5682  000624  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5683  000628  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5684  00062C  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5685  000630  0E16               	movlw	22
  5686  000632  D006               	goto	u5010
  5687  000634                     u5015:
  5688  000634  0100               	movlb	0	; () banked
  5689  000636  90D8               	bcf	status,0,c
  5690  000638  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5691  00063A  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5692  00063C  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5693  00063E  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  5694  000640                     u5010:
  5695  000640  2EE8               	decfsz	wreg,f,c
  5696  000642  D7F8               	goto	u5015
  5697  000644  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5698  000648  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5699  00064C  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5700  000650  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;CANlib.h: 868: tamp = tamp & 0x000000FF;
  5704  000654  0100               	movlb	0	; () banked
  5705  000656  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  5706  000658  0100               	movlb	0	; () banked
  5707  00065A  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5708  00065C  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5709  00065E  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5710  000660  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5714  000662  C0B0  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5715  000666                     l4158:
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;CANlib.h: 870: }
  5719                           ;CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5720  000666  0100               	movlb	0	; () banked
  5721  000668  05AF               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5722  00066A  A4D8               	btfss	status,2,c
  5723  00066C  D07E               	goto	l4192
  5724                           
  5725                           ; BSR set to: 0
  5726  00066E  0EF7               	movlw	247
  5727  000670  1823               	xorwf	CANSetFilter@type,w,c
  5728  000672  A4D8               	btfss	status,2,c
  5729  000674  D07A               	goto	l4192
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;CANlib.h: 873: {
  5733                           ;CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5734  000676  010F               	movlb	15	; () banked
  5735  000678  8705               	bsf	5,3,b	;volatile
  5736                           
  5737                           ; BSR set to: 15
  5738                           ;CANlib.h: 876: tamp = filter & 0x000000FF;
  5739  00067A  501F               	movf	CANSetFilter@filter,w,c
  5740  00067C  0100               	movlb	0	; () banked
  5741  00067E  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5742  000680  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5743  000682  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5744  000684  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5748  000686  C0B0  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5749                           
  5750                           ; BSR set to: 0
  5751                           ;CANlib.h: 879: tamp = filter & 0x0000FF00;
  5752  00068A  0E00               	movlw	0
  5753  00068C  141F               	andwf	CANSetFilter@filter,w,c
  5754  00068E  0100               	movlb	0	; () banked
  5755  000690  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5756  000692  0EFF               	movlw	255
  5757  000694  1420               	andwf	CANSetFilter@filter+1,w,c
  5758  000696  0100               	movlb	0	; () banked
  5759  000698  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5760  00069A  0E00               	movlw	0
  5761  00069C  1421               	andwf	CANSetFilter@filter+2,w,c
  5762  00069E  0100               	movlb	0	; () banked
  5763  0006A0  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5764  0006A2  0E00               	movlw	0
  5765  0006A4  1422               	andwf	CANSetFilter@filter+3,w,c
  5766  0006A6  0100               	movlb	0	; () banked
  5767  0006A8  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;CANlib.h: 880: tamp = tamp >> 8;
  5771  0006AA  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  5772  0006AE  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5773  0006B2  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5774  0006B6  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5775  0006BA  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  5776  0006BE  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5777  0006C2  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5778  0006C6  0100               	movlb	0	; () banked
  5779  0006C8  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  5780  0006CA  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5781  0006CE  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5782  0006D2  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5783  0006D6  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5787  0006DA  C0B0  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;CANlib.h: 883: if (filter & 0x00010000)
  5791  0006DE  A021               	btfss	CANSetFilter@filter+2,0,c
  5792  0006E0  D003               	goto	l476
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5796  0006E2  010F               	movlb	15	; () banked
  5797  0006E4  8105               	bsf	5,0,b	;volatile
  5798  0006E6  D002               	goto	l477
  5799  0006E8                     l476:
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;CANlib.h: 885: else
  5803                           ;CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5804  0006E8  010F               	movlb	15	; () banked
  5805  0006EA  9105               	bcf	5,0,b	;volatile
  5806  0006EC                     l477:
  5807                           
  5808                           ; BSR set to: 15
  5809                           ;CANlib.h: 888: if (filter & 0x00020000)
  5810  0006EC  A221               	btfss	CANSetFilter@filter+2,1,c
  5811  0006EE  D003               	goto	l478
  5812                           
  5813                           ; BSR set to: 15
  5814                           ;CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5815  0006F0  010F               	movlb	15	; () banked
  5816  0006F2  8305               	bsf	5,1,b	;volatile
  5817  0006F4  D002               	goto	l479
  5818  0006F6                     l478:
  5819                           
  5820                           ; BSR set to: 15
  5821                           ;CANlib.h: 890: else
  5822                           ;CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5823  0006F6  010F               	movlb	15	; () banked
  5824  0006F8  9305               	bcf	5,1,b	;volatile
  5825  0006FA                     l479:
  5826                           
  5827                           ; BSR set to: 15
  5828                           ;CANlib.h: 893: if (filter & 0x00040000)
  5829  0006FA  A421               	btfss	CANSetFilter@filter+2,2,c
  5830  0006FC  D003               	goto	l480
  5831                           
  5832                           ; BSR set to: 15
  5833                           ;CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5834  0006FE  010F               	movlb	15	; () banked
  5835  000700  8B05               	bsf	5,5,b	;volatile
  5836  000702  D002               	goto	l481
  5837  000704                     l480:
  5838                           
  5839                           ; BSR set to: 15
  5840                           ;CANlib.h: 895: else
  5841                           ;CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5842  000704  010F               	movlb	15	; () banked
  5843  000706  9B05               	bcf	5,5,b	;volatile
  5844  000708                     l481:
  5845                           
  5846                           ; BSR set to: 15
  5847                           ;CANlib.h: 898: if (filter & 0x00080000)
  5848  000708  A621               	btfss	CANSetFilter@filter+2,3,c
  5849  00070A  D003               	goto	l482
  5850                           
  5851                           ; BSR set to: 15
  5852                           ;CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5853  00070C  010F               	movlb	15	; () banked
  5854  00070E  8D05               	bsf	5,6,b	;volatile
  5855  000710  D002               	goto	l483
  5856  000712                     l482:
  5857                           
  5858                           ; BSR set to: 15
  5859                           ;CANlib.h: 900: else
  5860                           ;CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5861  000712  010F               	movlb	15	; () banked
  5862  000714  9D05               	bcf	5,6,b	;volatile
  5863  000716                     l483:
  5864                           
  5865                           ; BSR set to: 15
  5866                           ;CANlib.h: 903: if (filter & 0x00100000)
  5867  000716  A821               	btfss	CANSetFilter@filter+2,4,c
  5868  000718  D003               	goto	l484
  5869                           
  5870                           ; BSR set to: 15
  5871                           ;CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5872  00071A  010F               	movlb	15	; () banked
  5873  00071C  8F05               	bsf	5,7,b	;volatile
  5874  00071E  D002               	goto	l4186
  5875  000720                     l484:
  5876                           
  5877                           ; BSR set to: 15
  5878                           ;CANlib.h: 905: else
  5879                           ;CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5880  000720  010F               	movlb	15	; () banked
  5881  000722  9F05               	bcf	5,7,b	;volatile
  5882  000724                     l4186:
  5883                           
  5884                           ; BSR set to: 15
  5885                           ;CANlib.h: 908: tamp = (filter >> 21);
  5886  000724  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  5887  000728  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5888  00072C  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5889  000730  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5890  000734  0E16               	movlw	22
  5891  000736  D006               	goto	u5090
  5892  000738                     u5095:
  5893  000738  0100               	movlb	0	; () banked
  5894  00073A  90D8               	bcf	status,0,c
  5895  00073C  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5896  00073E  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5897  000740  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5898  000742  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  5899  000744                     u5090:
  5900  000744  2EE8               	decfsz	wreg,f,c
  5901  000746  D7F8               	goto	u5095
  5902  000748  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5903  00074C  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5904  000750  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5905  000754  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;CANlib.h: 909: tamp = tamp & 0x000000FF;
  5909  000758  0100               	movlb	0	; () banked
  5910  00075A  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  5911  00075C  0100               	movlb	0	; () banked
  5912  00075E  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5913  000760  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5914  000762  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5915  000764  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5919  000766  C0B0  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5920  00076A                     l4192:
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;CANlib.h: 911: }
  5924                           ;CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5925  00076A  0E02               	movlw	2
  5926  00076C  0100               	movlb	0	; () banked
  5927  00076E  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5928  000770  A4D8               	btfss	status,2,c
  5929  000772  D07E               	goto	l4226
  5930                           
  5931                           ; BSR set to: 0
  5932  000774  0EF7               	movlw	247
  5933  000776  1823               	xorwf	CANSetFilter@type,w,c
  5934  000778  A4D8               	btfss	status,2,c
  5935  00077A  D07A               	goto	l4226
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;CANlib.h: 915: {
  5939                           ;CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5940  00077C  010F               	movlb	15	; () banked
  5941  00077E  8709               	bsf	9,3,b	;volatile
  5942                           
  5943                           ; BSR set to: 15
  5944                           ;CANlib.h: 918: tamp = filter & 0x000000FF;
  5945  000780  501F               	movf	CANSetFilter@filter,w,c
  5946  000782  0100               	movlb	0	; () banked
  5947  000784  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5948  000786  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5949  000788  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5950  00078A  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5954  00078C  C0B0  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;CANlib.h: 921: tamp = filter & 0x0000FF00;
  5958  000790  0E00               	movlw	0
  5959  000792  141F               	andwf	CANSetFilter@filter,w,c
  5960  000794  0100               	movlb	0	; () banked
  5961  000796  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  5962  000798  0EFF               	movlw	255
  5963  00079A  1420               	andwf	CANSetFilter@filter+1,w,c
  5964  00079C  0100               	movlb	0	; () banked
  5965  00079E  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5966  0007A0  0E00               	movlw	0
  5967  0007A2  1421               	andwf	CANSetFilter@filter+2,w,c
  5968  0007A4  0100               	movlb	0	; () banked
  5969  0007A6  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5970  0007A8  0E00               	movlw	0
  5971  0007AA  1422               	andwf	CANSetFilter@filter+3,w,c
  5972  0007AC  0100               	movlb	0	; () banked
  5973  0007AE  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;CANlib.h: 922: tamp = tamp >> 8;
  5977  0007B0  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  5978  0007B4  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5979  0007B8  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5980  0007BC  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5981  0007C0  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  5982  0007C4  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5983  0007C8  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5984  0007CC  0100               	movlb	0	; () banked
  5985  0007CE  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  5986  0007D0  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  5987  0007D4  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5988  0007D8  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5989  0007DC  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5993  0007E0  C0B0  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;CANlib.h: 925: if (filter & 0x00010000)
  5997  0007E4  A021               	btfss	CANSetFilter@filter+2,0,c
  5998  0007E6  D003               	goto	l487
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  6002  0007E8  010F               	movlb	15	; () banked
  6003  0007EA  8109               	bsf	9,0,b	;volatile
  6004  0007EC  D002               	goto	l488
  6005  0007EE                     l487:
  6006                           
  6007                           ; BSR set to: 0
  6008                           ;CANlib.h: 927: else
  6009                           ;CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  6010  0007EE  010F               	movlb	15	; () banked
  6011  0007F0  9109               	bcf	9,0,b	;volatile
  6012  0007F2                     l488:
  6013                           
  6014                           ; BSR set to: 15
  6015                           ;CANlib.h: 930: if (filter & 0x00020000)
  6016  0007F2  A221               	btfss	CANSetFilter@filter+2,1,c
  6017  0007F4  D003               	goto	l489
  6018                           
  6019                           ; BSR set to: 15
  6020                           ;CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  6021  0007F6  010F               	movlb	15	; () banked
  6022  0007F8  8309               	bsf	9,1,b	;volatile
  6023  0007FA  D002               	goto	l490
  6024  0007FC                     l489:
  6025                           
  6026                           ; BSR set to: 15
  6027                           ;CANlib.h: 932: else
  6028                           ;CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  6029  0007FC  010F               	movlb	15	; () banked
  6030  0007FE  9309               	bcf	9,1,b	;volatile
  6031  000800                     l490:
  6032                           
  6033                           ; BSR set to: 15
  6034                           ;CANlib.h: 935: if (filter & 0x00040000)
  6035  000800  A421               	btfss	CANSetFilter@filter+2,2,c
  6036  000802  D003               	goto	l491
  6037                           
  6038                           ; BSR set to: 15
  6039                           ;CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  6040  000804  010F               	movlb	15	; () banked
  6041  000806  8B09               	bsf	9,5,b	;volatile
  6042  000808  D002               	goto	l492
  6043  00080A                     l491:
  6044                           
  6045                           ; BSR set to: 15
  6046                           ;CANlib.h: 937: else
  6047                           ;CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  6048  00080A  010F               	movlb	15	; () banked
  6049  00080C  9B09               	bcf	9,5,b	;volatile
  6050  00080E                     l492:
  6051                           
  6052                           ; BSR set to: 15
  6053                           ;CANlib.h: 940: if (filter & 0x00080000)
  6054  00080E  A621               	btfss	CANSetFilter@filter+2,3,c
  6055  000810  D003               	goto	l493
  6056                           
  6057                           ; BSR set to: 15
  6058                           ;CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  6059  000812  010F               	movlb	15	; () banked
  6060  000814  8D09               	bsf	9,6,b	;volatile
  6061  000816  D002               	goto	l494
  6062  000818                     l493:
  6063                           
  6064                           ; BSR set to: 15
  6065                           ;CANlib.h: 942: else
  6066                           ;CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  6067  000818  010F               	movlb	15	; () banked
  6068  00081A  9D09               	bcf	9,6,b	;volatile
  6069  00081C                     l494:
  6070                           
  6071                           ; BSR set to: 15
  6072                           ;CANlib.h: 945: if (filter & 0x00100000)
  6073  00081C  A821               	btfss	CANSetFilter@filter+2,4,c
  6074  00081E  D003               	goto	l495
  6075                           
  6076                           ; BSR set to: 15
  6077                           ;CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  6078  000820  010F               	movlb	15	; () banked
  6079  000822  8F09               	bsf	9,7,b	;volatile
  6080  000824  D002               	goto	l4220
  6081  000826                     l495:
  6082                           
  6083                           ; BSR set to: 15
  6084                           ;CANlib.h: 947: else
  6085                           ;CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  6086  000826  010F               	movlb	15	; () banked
  6087  000828  9F09               	bcf	9,7,b	;volatile
  6088  00082A                     l4220:
  6089                           
  6090                           ; BSR set to: 15
  6091                           ;CANlib.h: 950: tamp = (filter >> 21);
  6092  00082A  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  6093  00082E  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6094  000832  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6095  000836  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6096  00083A  0E16               	movlw	22
  6097  00083C  D006               	goto	u5170
  6098  00083E                     u5175:
  6099  00083E  0100               	movlb	0	; () banked
  6100  000840  90D8               	bcf	status,0,c
  6101  000842  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6102  000844  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6103  000846  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6104  000848  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  6105  00084A                     u5170:
  6106  00084A  2EE8               	decfsz	wreg,f,c
  6107  00084C  D7F8               	goto	u5175
  6108  00084E  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  6109  000852  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6110  000856  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6111  00085A  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;CANlib.h: 951: tamp = tamp & 0x000000FF;
  6115  00085E  0100               	movlb	0	; () banked
  6116  000860  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  6117  000862  0100               	movlb	0	; () banked
  6118  000864  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6119  000866  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6120  000868  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6121  00086A  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6122                           
  6123                           ; BSR set to: 0
  6124                           ;CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  6125  00086C  C0B0  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  6126  000870                     l4226:
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;CANlib.h: 953: }
  6130                           ;CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  6131  000870  0E03               	movlw	3
  6132  000872  0100               	movlb	0	; () banked
  6133  000874  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6134  000876  A4D8               	btfss	status,2,c
  6135  000878  D07E               	goto	l4260
  6136                           
  6137                           ; BSR set to: 0
  6138  00087A  0EF7               	movlw	247
  6139  00087C  1823               	xorwf	CANSetFilter@type,w,c
  6140  00087E  A4D8               	btfss	status,2,c
  6141  000880  D07A               	goto	l4260
  6142                           
  6143                           ; BSR set to: 0
  6144                           ;CANlib.h: 956: {
  6145                           ;CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  6146  000882  010F               	movlb	15	; () banked
  6147  000884  870D               	bsf	13,3,b	;volatile
  6148                           
  6149                           ; BSR set to: 15
  6150                           ;CANlib.h: 959: tamp = filter & 0x000000FF;
  6151  000886  501F               	movf	CANSetFilter@filter,w,c
  6152  000888  0100               	movlb	0	; () banked
  6153  00088A  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6154  00088C  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6155  00088E  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6156  000890  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6157                           
  6158                           ; BSR set to: 0
  6159                           ;CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  6160  000892  C0B0  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;CANlib.h: 962: tamp = filter & 0x0000FF00;
  6164  000896  0E00               	movlw	0
  6165  000898  141F               	andwf	CANSetFilter@filter,w,c
  6166  00089A  0100               	movlb	0	; () banked
  6167  00089C  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6168  00089E  0EFF               	movlw	255
  6169  0008A0  1420               	andwf	CANSetFilter@filter+1,w,c
  6170  0008A2  0100               	movlb	0	; () banked
  6171  0008A4  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6172  0008A6  0E00               	movlw	0
  6173  0008A8  1421               	andwf	CANSetFilter@filter+2,w,c
  6174  0008AA  0100               	movlb	0	; () banked
  6175  0008AC  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6176  0008AE  0E00               	movlw	0
  6177  0008B0  1422               	andwf	CANSetFilter@filter+3,w,c
  6178  0008B2  0100               	movlb	0	; () banked
  6179  0008B4  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6180                           
  6181                           ; BSR set to: 0
  6182                           ;CANlib.h: 963: tamp = tamp >> 8;
  6183  0008B6  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  6184  0008BA  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6185  0008BE  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6186  0008C2  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6187  0008C6  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  6188  0008CA  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6189  0008CE  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6190  0008D2  0100               	movlb	0	; () banked
  6191  0008D4  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  6192  0008D6  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  6193  0008DA  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6194  0008DE  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6195  0008E2  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  6199  0008E6  C0B0  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;CANlib.h: 966: if (filter & 0x00010000)
  6203  0008EA  A021               	btfss	CANSetFilter@filter+2,0,c
  6204  0008EC  D003               	goto	l498
  6205                           
  6206                           ; BSR set to: 0
  6207                           ;CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  6208  0008EE  010F               	movlb	15	; () banked
  6209  0008F0  810D               	bsf	13,0,b	;volatile
  6210  0008F2  D002               	goto	l499
  6211  0008F4                     l498:
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;CANlib.h: 968: else
  6215                           ;CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  6216  0008F4  010F               	movlb	15	; () banked
  6217  0008F6  910D               	bcf	13,0,b	;volatile
  6218  0008F8                     l499:
  6219                           
  6220                           ; BSR set to: 15
  6221                           ;CANlib.h: 971: if (filter & 0x00020000)
  6222  0008F8  A221               	btfss	CANSetFilter@filter+2,1,c
  6223  0008FA  D003               	goto	l500
  6224                           
  6225                           ; BSR set to: 15
  6226                           ;CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  6227  0008FC  010F               	movlb	15	; () banked
  6228  0008FE  830D               	bsf	13,1,b	;volatile
  6229  000900  D002               	goto	l501
  6230  000902                     l500:
  6231                           
  6232                           ; BSR set to: 15
  6233                           ;CANlib.h: 973: else
  6234                           ;CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  6235  000902  010F               	movlb	15	; () banked
  6236  000904  930D               	bcf	13,1,b	;volatile
  6237  000906                     l501:
  6238                           
  6239                           ; BSR set to: 15
  6240                           ;CANlib.h: 976: if (filter & 0x00040000)
  6241  000906  A421               	btfss	CANSetFilter@filter+2,2,c
  6242  000908  D003               	goto	l502
  6243                           
  6244                           ; BSR set to: 15
  6245                           ;CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  6246  00090A  010F               	movlb	15	; () banked
  6247  00090C  8B0D               	bsf	13,5,b	;volatile
  6248  00090E  D002               	goto	l503
  6249  000910                     l502:
  6250                           
  6251                           ; BSR set to: 15
  6252                           ;CANlib.h: 978: else
  6253                           ;CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  6254  000910  010F               	movlb	15	; () banked
  6255  000912  9B0D               	bcf	13,5,b	;volatile
  6256  000914                     l503:
  6257                           
  6258                           ; BSR set to: 15
  6259                           ;CANlib.h: 981: if (filter & 0x00080000)
  6260  000914  A621               	btfss	CANSetFilter@filter+2,3,c
  6261  000916  D003               	goto	l504
  6262                           
  6263                           ; BSR set to: 15
  6264                           ;CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  6265  000918  010F               	movlb	15	; () banked
  6266  00091A  8D0D               	bsf	13,6,b	;volatile
  6267  00091C  D002               	goto	l505
  6268  00091E                     l504:
  6269                           
  6270                           ; BSR set to: 15
  6271                           ;CANlib.h: 983: else
  6272                           ;CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6273  00091E  010F               	movlb	15	; () banked
  6274  000920  9D0D               	bcf	13,6,b	;volatile
  6275  000922                     l505:
  6276                           
  6277                           ; BSR set to: 15
  6278                           ;CANlib.h: 986: if (filter & 0x00100000)
  6279  000922  A821               	btfss	CANSetFilter@filter+2,4,c
  6280  000924  D003               	goto	l506
  6281                           
  6282                           ; BSR set to: 15
  6283                           ;CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6284  000926  010F               	movlb	15	; () banked
  6285  000928  8F0D               	bsf	13,7,b	;volatile
  6286  00092A  D002               	goto	l4254
  6287  00092C                     l506:
  6288                           
  6289                           ; BSR set to: 15
  6290                           ;CANlib.h: 988: else
  6291                           ;CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6292  00092C  010F               	movlb	15	; () banked
  6293  00092E  9F0D               	bcf	13,7,b	;volatile
  6294  000930                     l4254:
  6295                           
  6296                           ; BSR set to: 15
  6297                           ;CANlib.h: 991: tamp = (filter >> 21);
  6298  000930  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  6299  000934  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6300  000938  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6301  00093C  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6302  000940  0E16               	movlw	22
  6303  000942  D006               	goto	u5250
  6304  000944                     u5255:
  6305  000944  0100               	movlb	0	; () banked
  6306  000946  90D8               	bcf	status,0,c
  6307  000948  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6308  00094A  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6309  00094C  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6310  00094E  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  6311  000950                     u5250:
  6312  000950  2EE8               	decfsz	wreg,f,c
  6313  000952  D7F8               	goto	u5255
  6314  000954  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  6315  000958  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6316  00095C  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6317  000960  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;CANlib.h: 992: tamp = tamp & 0x000000FF;
  6321  000964  0100               	movlb	0	; () banked
  6322  000966  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  6323  000968  0100               	movlb	0	; () banked
  6324  00096A  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6325  00096C  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6326  00096E  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6327  000970  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6328                           
  6329                           ; BSR set to: 0
  6330                           ;CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6331  000972  C0B0  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6332  000976                     l4260:
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;CANlib.h: 994: }
  6336                           ;CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6337  000976  0E04               	movlw	4
  6338  000978  0100               	movlb	0	; () banked
  6339  00097A  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6340  00097C  A4D8               	btfss	status,2,c
  6341  00097E  D07E               	goto	l4294
  6342                           
  6343                           ; BSR set to: 0
  6344  000980  0EF7               	movlw	247
  6345  000982  1823               	xorwf	CANSetFilter@type,w,c
  6346  000984  A4D8               	btfss	status,2,c
  6347  000986  D07A               	goto	l4294
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;CANlib.h: 997: {
  6351                           ;CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6352  000988  010F               	movlb	15	; () banked
  6353  00098A  8711               	bsf	17,3,b	;volatile
  6354                           
  6355                           ; BSR set to: 15
  6356                           ;CANlib.h: 1000: tamp = filter & 0x000000FF;
  6357  00098C  501F               	movf	CANSetFilter@filter,w,c
  6358  00098E  0100               	movlb	0	; () banked
  6359  000990  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6360  000992  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6361  000994  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6362  000996  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6363                           
  6364                           ; BSR set to: 0
  6365                           ;CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6366  000998  C0B0  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6370  00099C  0E00               	movlw	0
  6371  00099E  141F               	andwf	CANSetFilter@filter,w,c
  6372  0009A0  0100               	movlb	0	; () banked
  6373  0009A2  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6374  0009A4  0EFF               	movlw	255
  6375  0009A6  1420               	andwf	CANSetFilter@filter+1,w,c
  6376  0009A8  0100               	movlb	0	; () banked
  6377  0009AA  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6378  0009AC  0E00               	movlw	0
  6379  0009AE  1421               	andwf	CANSetFilter@filter+2,w,c
  6380  0009B0  0100               	movlb	0	; () banked
  6381  0009B2  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6382  0009B4  0E00               	movlw	0
  6383  0009B6  1422               	andwf	CANSetFilter@filter+3,w,c
  6384  0009B8  0100               	movlb	0	; () banked
  6385  0009BA  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;CANlib.h: 1004: tamp = tamp >> 8;
  6389  0009BC  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  6390  0009C0  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6391  0009C4  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6392  0009C8  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6393  0009CC  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  6394  0009D0  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6395  0009D4  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6396  0009D8  0100               	movlb	0	; () banked
  6397  0009DA  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  6398  0009DC  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  6399  0009E0  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6400  0009E4  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6401  0009E8  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6402                           
  6403                           ; BSR set to: 0
  6404                           ;CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6405  0009EC  C0B0  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6406                           
  6407                           ; BSR set to: 0
  6408                           ;CANlib.h: 1007: if (filter & 0x00010000)
  6409  0009F0  A021               	btfss	CANSetFilter@filter+2,0,c
  6410  0009F2  D003               	goto	l509
  6411                           
  6412                           ; BSR set to: 0
  6413                           ;CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6414  0009F4  010F               	movlb	15	; () banked
  6415  0009F6  8111               	bsf	17,0,b	;volatile
  6416  0009F8  D002               	goto	l510
  6417  0009FA                     l509:
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;CANlib.h: 1009: else
  6421                           ;CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6422  0009FA  010F               	movlb	15	; () banked
  6423  0009FC  9111               	bcf	17,0,b	;volatile
  6424  0009FE                     l510:
  6425                           
  6426                           ; BSR set to: 15
  6427                           ;CANlib.h: 1012: if (filter & 0x00020000)
  6428  0009FE  A221               	btfss	CANSetFilter@filter+2,1,c
  6429  000A00  D003               	goto	l511
  6430                           
  6431                           ; BSR set to: 15
  6432                           ;CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6433  000A02  010F               	movlb	15	; () banked
  6434  000A04  8311               	bsf	17,1,b	;volatile
  6435  000A06  D002               	goto	l512
  6436  000A08                     l511:
  6437                           
  6438                           ; BSR set to: 15
  6439                           ;CANlib.h: 1014: else
  6440                           ;CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6441  000A08  010F               	movlb	15	; () banked
  6442  000A0A  9311               	bcf	17,1,b	;volatile
  6443  000A0C                     l512:
  6444                           
  6445                           ; BSR set to: 15
  6446                           ;CANlib.h: 1017: if (filter & 0x00040000)
  6447  000A0C  A421               	btfss	CANSetFilter@filter+2,2,c
  6448  000A0E  D003               	goto	l513
  6449                           
  6450                           ; BSR set to: 15
  6451                           ;CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6452  000A10  010F               	movlb	15	; () banked
  6453  000A12  8B11               	bsf	17,5,b	;volatile
  6454  000A14  D002               	goto	l514
  6455  000A16                     l513:
  6456                           
  6457                           ; BSR set to: 15
  6458                           ;CANlib.h: 1019: else
  6459                           ;CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6460  000A16  010F               	movlb	15	; () banked
  6461  000A18  9B11               	bcf	17,5,b	;volatile
  6462  000A1A                     l514:
  6463                           
  6464                           ; BSR set to: 15
  6465                           ;CANlib.h: 1022: if (filter & 0x00080000)
  6466  000A1A  A621               	btfss	CANSetFilter@filter+2,3,c
  6467  000A1C  D003               	goto	l515
  6468                           
  6469                           ; BSR set to: 15
  6470                           ;CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6471  000A1E  010F               	movlb	15	; () banked
  6472  000A20  8D11               	bsf	17,6,b	;volatile
  6473  000A22  D002               	goto	l516
  6474  000A24                     l515:
  6475                           
  6476                           ; BSR set to: 15
  6477                           ;CANlib.h: 1024: else
  6478                           ;CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6479  000A24  010F               	movlb	15	; () banked
  6480  000A26  9D11               	bcf	17,6,b	;volatile
  6481  000A28                     l516:
  6482                           
  6483                           ; BSR set to: 15
  6484                           ;CANlib.h: 1027: if (filter & 0x00100000)
  6485  000A28  A821               	btfss	CANSetFilter@filter+2,4,c
  6486  000A2A  D003               	goto	l517
  6487                           
  6488                           ; BSR set to: 15
  6489                           ;CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6490  000A2C  010F               	movlb	15	; () banked
  6491  000A2E  8F11               	bsf	17,7,b	;volatile
  6492  000A30  D002               	goto	l4288
  6493  000A32                     l517:
  6494                           
  6495                           ; BSR set to: 15
  6496                           ;CANlib.h: 1029: else
  6497                           ;CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6498  000A32  010F               	movlb	15	; () banked
  6499  000A34  9F11               	bcf	17,7,b	;volatile
  6500  000A36                     l4288:
  6501                           
  6502                           ; BSR set to: 15
  6503                           ;CANlib.h: 1032: tamp = (filter >> 21);
  6504  000A36  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  6505  000A3A  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6506  000A3E  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6507  000A42  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6508  000A46  0E16               	movlw	22
  6509  000A48  D006               	goto	u5330
  6510  000A4A                     u5335:
  6511  000A4A  0100               	movlb	0	; () banked
  6512  000A4C  90D8               	bcf	status,0,c
  6513  000A4E  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6514  000A50  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6515  000A52  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6516  000A54  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  6517  000A56                     u5330:
  6518  000A56  2EE8               	decfsz	wreg,f,c
  6519  000A58  D7F8               	goto	u5335
  6520  000A5A  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  6521  000A5E  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6522  000A62  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6523  000A66  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6524                           
  6525                           ; BSR set to: 0
  6526                           ;CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6527  000A6A  0100               	movlb	0	; () banked
  6528  000A6C  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  6529  000A6E  0100               	movlb	0	; () banked
  6530  000A70  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6531  000A72  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6532  000A74  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6533  000A76  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6537  000A78  C0B0  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6538  000A7C                     l4294:
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;CANlib.h: 1035: }
  6542                           ;CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6543  000A7C  0E05               	movlw	5
  6544  000A7E  0100               	movlb	0	; () banked
  6545  000A80  19AF               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6546  000A82  A4D8               	btfss	status,2,c
  6547  000A84  0012               	return	
  6548                           
  6549                           ; BSR set to: 0
  6550  000A86  0EF7               	movlw	247
  6551  000A88  1823               	xorwf	CANSetFilter@type,w,c
  6552  000A8A  A4D8               	btfss	status,2,c
  6553  000A8C  0012               	return	
  6554                           
  6555                           ; BSR set to: 0
  6556                           ;CANlib.h: 1038: {
  6557                           ;CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6558  000A8E  010F               	movlb	15	; () banked
  6559  000A90  8715               	bsf	21,3,b	;volatile
  6560                           
  6561                           ; BSR set to: 15
  6562                           ;CANlib.h: 1041: tamp = filter & 0x000000FF;
  6563  000A92  501F               	movf	CANSetFilter@filter,w,c
  6564  000A94  0100               	movlb	0	; () banked
  6565  000A96  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6566  000A98  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6567  000A9A  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6568  000A9C  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6569                           
  6570                           ; BSR set to: 0
  6571                           ;CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6572  000A9E  C0B0  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6576  000AA2  0E00               	movlw	0
  6577  000AA4  141F               	andwf	CANSetFilter@filter,w,c
  6578  000AA6  0100               	movlb	0	; () banked
  6579  000AA8  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6580  000AAA  0EFF               	movlw	255
  6581  000AAC  1420               	andwf	CANSetFilter@filter+1,w,c
  6582  000AAE  0100               	movlb	0	; () banked
  6583  000AB0  6FB1               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6584  000AB2  0E00               	movlw	0
  6585  000AB4  1421               	andwf	CANSetFilter@filter+2,w,c
  6586  000AB6  0100               	movlb	0	; () banked
  6587  000AB8  6FB2               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6588  000ABA  0E00               	movlw	0
  6589  000ABC  1422               	andwf	CANSetFilter@filter+3,w,c
  6590  000ABE  0100               	movlb	0	; () banked
  6591  000AC0  6FB3               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6592                           
  6593                           ; BSR set to: 0
  6594                           ;CANlib.h: 1045: tamp = tamp >> 8;
  6595  000AC2  C0B0  F0AB         	movff	CANSetFilter@tamp,??_CANSetFilter
  6596  000AC6  C0B1  F0AC         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6597  000ACA  C0B2  F0AD         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6598  000ACE  C0B3  F0AE         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6599  000AD2  C0AC  F0AB         	movff	??_CANSetFilter+1,??_CANSetFilter
  6600  000AD6  C0AD  F0AC         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6601  000ADA  C0AE  F0AD         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6602  000ADE  0100               	movlb	0	; () banked
  6603  000AE0  6BAE               	clrf	(??_CANSetFilter+3)& (0+255),b
  6604  000AE2  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  6605  000AE6  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6606  000AEA  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6607  000AEE  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6611  000AF2  C0B0  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6612                           
  6613                           ; BSR set to: 0
  6614                           ;CANlib.h: 1048: if (filter & 0x00010000)
  6615  000AF6  A021               	btfss	CANSetFilter@filter+2,0,c
  6616  000AF8  D003               	goto	l520
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6620  000AFA  010F               	movlb	15	; () banked
  6621  000AFC  8115               	bsf	21,0,b	;volatile
  6622  000AFE  D002               	goto	l521
  6623  000B00                     l520:
  6624                           
  6625                           ; BSR set to: 0
  6626                           ;CANlib.h: 1050: else
  6627                           ;CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6628  000B00  010F               	movlb	15	; () banked
  6629  000B02  9115               	bcf	21,0,b	;volatile
  6630  000B04                     l521:
  6631                           
  6632                           ; BSR set to: 15
  6633                           ;CANlib.h: 1053: if (filter & 0x00020000)
  6634  000B04  A221               	btfss	CANSetFilter@filter+2,1,c
  6635  000B06  D003               	goto	l522
  6636                           
  6637                           ; BSR set to: 15
  6638                           ;CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6639  000B08  010F               	movlb	15	; () banked
  6640  000B0A  8315               	bsf	21,1,b	;volatile
  6641  000B0C  D002               	goto	l523
  6642  000B0E                     l522:
  6643                           
  6644                           ; BSR set to: 15
  6645                           ;CANlib.h: 1055: else
  6646                           ;CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6647  000B0E  010F               	movlb	15	; () banked
  6648  000B10  9315               	bcf	21,1,b	;volatile
  6649  000B12                     l523:
  6650                           
  6651                           ; BSR set to: 15
  6652                           ;CANlib.h: 1058: if (filter & 0x00040000)
  6653  000B12  A421               	btfss	CANSetFilter@filter+2,2,c
  6654  000B14  D003               	goto	l524
  6655                           
  6656                           ; BSR set to: 15
  6657                           ;CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6658  000B16  010F               	movlb	15	; () banked
  6659  000B18  8B15               	bsf	21,5,b	;volatile
  6660  000B1A  D002               	goto	l525
  6661  000B1C                     l524:
  6662                           
  6663                           ; BSR set to: 15
  6664                           ;CANlib.h: 1060: else
  6665                           ;CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6666  000B1C  010F               	movlb	15	; () banked
  6667  000B1E  9B15               	bcf	21,5,b	;volatile
  6668  000B20                     l525:
  6669                           
  6670                           ; BSR set to: 15
  6671                           ;CANlib.h: 1063: if (filter & 0x00080000)
  6672  000B20  A621               	btfss	CANSetFilter@filter+2,3,c
  6673  000B22  D003               	goto	l526
  6674                           
  6675                           ; BSR set to: 15
  6676                           ;CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6677  000B24  010F               	movlb	15	; () banked
  6678  000B26  8D15               	bsf	21,6,b	;volatile
  6679  000B28  D002               	goto	l527
  6680  000B2A                     l526:
  6681                           
  6682                           ; BSR set to: 15
  6683                           ;CANlib.h: 1065: else
  6684                           ;CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6685  000B2A  010F               	movlb	15	; () banked
  6686  000B2C  9D15               	bcf	21,6,b	;volatile
  6687  000B2E                     l527:
  6688                           
  6689                           ; BSR set to: 15
  6690                           ;CANlib.h: 1068: if (filter & 0x00100000)
  6691  000B2E  A821               	btfss	CANSetFilter@filter+2,4,c
  6692  000B30  D003               	goto	l528
  6693                           
  6694                           ; BSR set to: 15
  6695                           ;CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6696  000B32  010F               	movlb	15	; () banked
  6697  000B34  8F15               	bsf	21,7,b	;volatile
  6698  000B36  D002               	goto	l4322
  6699  000B38                     l528:
  6700                           
  6701                           ; BSR set to: 15
  6702                           ;CANlib.h: 1070: else
  6703                           ;CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6704  000B38  010F               	movlb	15	; () banked
  6705  000B3A  9F15               	bcf	21,7,b	;volatile
  6706  000B3C                     l4322:
  6707                           
  6708                           ; BSR set to: 15
  6709                           ;CANlib.h: 1073: tamp = (filter >> 21);
  6710  000B3C  C01F  F0AB         	movff	CANSetFilter@filter,??_CANSetFilter
  6711  000B40  C020  F0AC         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6712  000B44  C021  F0AD         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6713  000B48  C022  F0AE         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6714  000B4C  0E16               	movlw	22
  6715  000B4E  D006               	goto	u5410
  6716  000B50                     u5415:
  6717  000B50  0100               	movlb	0	; () banked
  6718  000B52  90D8               	bcf	status,0,c
  6719  000B54  33AE               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6720  000B56  33AD               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6721  000B58  33AC               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6722  000B5A  33AB               	rrcf	??_CANSetFilter& (0+255),f,b
  6723  000B5C                     u5410:
  6724  000B5C  2EE8               	decfsz	wreg,f,c
  6725  000B5E  D7F8               	goto	u5415
  6726  000B60  C0AB  F0B0         	movff	??_CANSetFilter,CANSetFilter@tamp
  6727  000B64  C0AC  F0B1         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6728  000B68  C0AD  F0B2         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6729  000B6C  C0AE  F0B3         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6733  000B70  0100               	movlb	0	; () banked
  6734  000B72  51B0               	movf	CANSetFilter@tamp& (0+255),w,b
  6735  000B74  0100               	movlb	0	; () banked
  6736  000B76  6FB0               	movwf	CANSetFilter@tamp& (0+255),b
  6737  000B78  6BB1               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6738  000B7A  6BB2               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6739  000B7C  6BB3               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6743  000B7E  C0B0  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6744  000B82  0012               	return	
  6745  000B84                     __end_of_CANSetFilter:
  6746                           	opt stack 0
  6747                           tblptru	equ	0xFF8
  6748                           tblptrh	equ	0xFF7
  6749                           tblptrl	equ	0xFF6
  6750                           tablat	equ	0xFF5
  6751                           prodh	equ	0xFF4
  6752                           prodl	equ	0xFF3
  6753                           intcon	equ	0xFF2
  6754                           postinc0	equ	0xFEE
  6755                           wreg	equ	0xFE8
  6756                           postdec1	equ	0xFE5
  6757                           fsr1l	equ	0xFE1
  6758                           indf2	equ	0xFDF
  6759                           fsr2h	equ	0xFDA
  6760                           fsr2l	equ	0xFD9
  6761                           status	equ	0xFD8
  6762                           
  6763 ;; *************** function _CANOperationMode *****************
  6764 ;; Defined at:
  6765 ;;		line 206 in file "CANlib.h"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  mode            1    wreg     enum E16838
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  mode            1   30[COMRAM] enum E16838
  6770 ;; Return value:  Size  Location     Type
  6771 ;;		None               void
  6772 ;; Registers used:
  6773 ;;		wreg, status,2, status,0
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6779 ;;      Params:         0       0       0       0
  6780 ;;      Locals:         1       0       0       0
  6781 ;;      Temps:          0       0       0       0
  6782 ;;      Totals:         1       0       0       0
  6783 ;;Total ram usage:        1 bytes
  6784 ;; Hardware stack levels used:    1
  6785 ;; Hardware stack levels required when called:    2
  6786 ;; This function calls:
  6787 ;;		Nothing
  6788 ;; This function is called by:
  6789 ;;		_CANInitialize
  6790 ;; This function uses a non-reentrant model
  6791 ;;
  6792                           
  6793                           	psect	text15
  6794  00257E                     __ptext15:
  6795                           	opt stack 0
  6796  00257E                     _CANOperationMode:
  6797                           	opt stack 26
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;incstack = 0
  6801                           ;CANOperationMode@mode stored from wreg
  6802  00257E  6E1F               	movwf	CANOperationMode@mode,c
  6803                           
  6804                           ;CANlib.h: 208: CANCON = mode;
  6805  002580  C01F  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6806  002584                     l3918:
  6807  002584  506E               	movf	3950,w,c	;volatile
  6808  002586  0BE0               	andlw	224
  6809  002588  181F               	xorwf	CANOperationMode@mode,w,c
  6810  00258A  B4D8               	btfsc	status,2,c
  6811  00258C  0012               	return	
  6812  00258E  D7FA               	goto	l3918
  6813  002590                     __end_of_CANOperationMode:
  6814                           	opt stack 0
  6815                           tblptru	equ	0xFF8
  6816                           tblptrh	equ	0xFF7
  6817                           tblptrl	equ	0xFF6
  6818                           tablat	equ	0xFF5
  6819                           prodh	equ	0xFF4
  6820                           prodl	equ	0xFF3
  6821                           intcon	equ	0xFF2
  6822                           postinc0	equ	0xFEE
  6823                           wreg	equ	0xFE8
  6824                           postdec1	equ	0xFE5
  6825                           fsr1l	equ	0xFE1
  6826                           indf2	equ	0xFDF
  6827                           fsr2h	equ	0xFDA
  6828                           fsr2l	equ	0xFD9
  6829                           status	equ	0xFD8
  6830                           
  6831 ;; *************** function _can_interpreter *****************
  6832 ;; Defined at:
  6833 ;;		line 245 in file "motore.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;		None
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;		None
  6838 ;; Return value:  Size  Location     Type
  6839 ;;		None               void
  6840 ;; Registers used:
  6841 ;;		wreg, status,2, status,0
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6847 ;;      Params:         0       0       0       0
  6848 ;;      Locals:         0       0       0       0
  6849 ;;      Temps:          4       0       0       0
  6850 ;;      Totals:         4       0       0       0
  6851 ;;Total ram usage:        4 bytes
  6852 ;; Hardware stack levels used:    1
  6853 ;; Hardware stack levels required when called:    2
  6854 ;; This function calls:
  6855 ;;		Nothing
  6856 ;; This function is called by:
  6857 ;;		_main
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           
  6861                           	psect	text16
  6862  0021B4                     __ptext16:
  6863                           	opt stack 0
  6864  0021B4                     _can_interpreter:
  6865                           	opt stack 28
  6866                           
  6867                           ;motore.c: 246: if (new_message == 1) {
  6868                           
  6869                           ;incstack = 0
  6870  0021B4  AA38               	btfss	_new_message/(0+8),_new_message& (0+7),c	;volatile
  6871  0021B6  D063               	goto	l710
  6872                           
  6873                           ;motore.c: 247: if (id == 0b00000000011) {
  6874  0021B8  0E03               	movlw	3
  6875  0021BA  1828               	xorwf	_id,w,c	;volatile
  6876  0021BC  1029               	iorwf	_id+1,w,c	;volatile
  6877  0021BE  102A               	iorwf	_id+2,w,c	;volatile
  6878  0021C0  102B               	iorwf	_id+3,w,c	;volatile
  6879  0021C2  A4D8               	btfss	status,2,c
  6880  0021C4  D01A               	goto	l3694
  6881                           
  6882                           ;motore.c: 248: requestSpeed = data_array[1];
  6883  0021C6  0100               	movlb	0	; () banked
  6884  0021C8  519C               	movf	(_data_array+1)& (0+255),w,b
  6885  0021CA  6E2C               	movwf	_requestSpeed,c	;volatile
  6886  0021CC  6A2D               	clrf	_requestSpeed+1,c	;volatile
  6887  0021CE  6A2E               	clrf	_requestSpeed+2,c	;volatile
  6888  0021D0  6A2F               	clrf	_requestSpeed+3,c	;volatile
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;motore.c: 249: requestSpeed = ((requestSpeed << 8) | msg.data[0]);
  6892  0021D2  0100               	movlb	0	; () banked
  6893  0021D4  5190               	movf	(_msg+4)& (0+255),w,b
  6894  0021D6  C02C  F020         	movff	_requestSpeed,??_can_interpreter+1	;volatile
  6895  0021DA  C02D  F021         	movff	_requestSpeed+1,??_can_interpreter+2	;volatile
  6896  0021DE  C02E  F022         	movff	_requestSpeed+2,??_can_interpreter+3	;volatile
  6897  0021E2  6A1F               	clrf	??_can_interpreter& (0+255),c
  6898  0021E4  101F               	iorwf	??_can_interpreter,w,c
  6899  0021E6  6E2C               	movwf	_requestSpeed,c	;volatile
  6900  0021E8  5020               	movf	??_can_interpreter+1,w,c
  6901  0021EA  6E2D               	movwf	_requestSpeed+1,c	;volatile
  6902  0021EC  5021               	movf	??_can_interpreter+2,w,c
  6903  0021EE  6E2E               	movwf	_requestSpeed+2,c	;volatile
  6904  0021F0  5022               	movf	??_can_interpreter+3,w,c
  6905  0021F2  6E2F               	movwf	_requestSpeed+3,c	;volatile
  6906                           
  6907                           ; BSR set to: 0
  6908                           ;motore.c: 250: dir = data_array[2];
  6909  0021F4  C09D  F03E         	movff	_data_array+2,_dir	;volatile
  6910  0021F8  6A3F               	clrf	_dir+1,c	;volatile
  6911  0021FA                     l3694:
  6912                           
  6913                           ;motore.c: 252: }
  6914                           ;motore.c: 254: if (id == 0b00000000001) {
  6915  0021FA  0428               	decf	_id,w,c	;volatile
  6916  0021FC  1029               	iorwf	_id+1,w,c	;volatile
  6917  0021FE  102A               	iorwf	_id+2,w,c	;volatile
  6918  002200  102B               	iorwf	_id+3,w,c	;volatile
  6919  002202  A4D8               	btfss	status,2,c
  6920  002204  D009               	goto	l3700
  6921                           
  6922                           ;motore.c: 255: requestSpeed = 0;
  6923  002206  0E00               	movlw	0
  6924  002208  6E2C               	movwf	_requestSpeed,c	;volatile
  6925  00220A  0E00               	movlw	0
  6926  00220C  6E2D               	movwf	_requestSpeed+1,c	;volatile
  6927  00220E  0E00               	movlw	0
  6928  002210  6E2E               	movwf	_requestSpeed+2,c	;volatile
  6929  002212  0E00               	movlw	0
  6930  002214  6E2F               	movwf	_requestSpeed+3,c	;volatile
  6931                           
  6932                           ;motore.c: 256: PORTAbits.RA1 = 1;
  6933  002216  8280               	bsf	3968,1,c	;volatile
  6934  002218                     l3700:
  6935                           
  6936                           ;motore.c: 257: }
  6937                           ;motore.c: 259: if (id == 0b00000000110) {
  6938  002218  0E06               	movlw	6
  6939  00221A  1828               	xorwf	_id,w,c	;volatile
  6940  00221C  1029               	iorwf	_id+1,w,c	;volatile
  6941  00221E  102A               	iorwf	_id+2,w,c	;volatile
  6942  002220  102B               	iorwf	_id+3,w,c	;volatile
  6943  002222  A4D8               	btfss	status,2,c
  6944  002224  D015               	goto	l3710
  6945                           
  6946                           ;motore.c: 265: left_speed = data_array[1];
  6947  002226  C09C  F030         	movff	_data_array+1,_left_speed	;volatile
  6948  00222A  6A31               	clrf	_left_speed+1,c	;volatile
  6949                           
  6950                           ;motore.c: 266: left_speed = ((left_speed << 8) | (data_array[0]));
  6951  00222C  5030               	movf	_left_speed,w,c	;volatile
  6952  00222E  6E1F               	movwf	??_can_interpreter& (0+255),c
  6953  002230  0100               	movlb	0	; () banked
  6954  002232  519B               	movf	_data_array& (0+255),w,b
  6955  002234  6E30               	movwf	_left_speed,c	;volatile
  6956  002236  C01F  F031         	movff	??_can_interpreter,_left_speed+1	;volatile
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;motore.c: 267: right_speed = data_array[3];
  6960  00223A  C09E  F034         	movff	_data_array+3,_right_speed	;volatile
  6961  00223E  6A35               	clrf	_right_speed+1,c	;volatile
  6962                           
  6963                           ;motore.c: 268: right_speed = ((right_speed << 8) | (data_array[2]));
  6964  002240  5034               	movf	_right_speed,w,c	;volatile
  6965  002242  6E1F               	movwf	??_can_interpreter& (0+255),c
  6966  002244  0100               	movlb	0	; () banked
  6967  002246  519D               	movf	(_data_array+2)& (0+255),w,b
  6968  002248  6E34               	movwf	_right_speed,c	;volatile
  6969  00224A  C01F  F035         	movff	??_can_interpreter,_right_speed+1	;volatile
  6970                           
  6971                           ; BSR set to: 0
  6972                           ;motore.c: 269: speed_fetched = 1;
  6973  00224E  8239               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c	;volatile
  6974  002250                     l3710:
  6975                           
  6976                           ;motore.c: 270: }
  6977                           ;motore.c: 272: if (id == 0b00000000010) {
  6978  002250  0E02               	movlw	2
  6979  002252  1828               	xorwf	_id,w,c	;volatile
  6980  002254  1029               	iorwf	_id+1,w,c	;volatile
  6981  002256  102A               	iorwf	_id+2,w,c	;volatile
  6982  002258  102B               	iorwf	_id+3,w,c	;volatile
  6983  00225A  A4D8               	btfss	status,2,c
  6984  00225C  D010               	goto	l710
  6985                           
  6986                           ;motore.c: 273: if (data_array[0] == 0x01) {
  6987  00225E  0100               	movlb	0	; () banked
  6988  002260  059B               	decf	_data_array& (0+255),w,b
  6989  002262  B4D8               	btfsc	status,2,c
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;motore.c: 274: centralina_abs = 1;
  6993  002264  8238               	bsf	_centralina_abs/(0+8),_centralina_abs& (0+7),c	;volatile
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;motore.c: 276: }
  6997                           ;motore.c: 277: if (data_array[0] == 0x02) {
  6998                           
  6999                           ; BSR set to: 0
  7000  002266  0E02               	movlw	2
  7001  002268  0100               	movlb	0	; () banked
  7002  00226A  199B               	xorwf	_data_array& (0+255),w,b
  7003  00226C  A4D8               	btfss	status,2,c
  7004  00226E  D002               	goto	l3720
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;motore.c: 278: centralina_sterzo = 1;
  7008  002270  8638               	bsf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c	;volatile
  7009                           
  7010                           ;motore.c: 279: centralina_comando = 1;
  7011  002272  8438               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  7012  002274                     l3720:
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;motore.c: 282: }
  7016                           ;motore.c: 283: if (data_array[0] == 0x03) {
  7017  002274  0E03               	movlw	3
  7018  002276  0100               	movlb	0	; () banked
  7019  002278  199B               	xorwf	_data_array& (0+255),w,b
  7020  00227A  B4D8               	btfsc	status,2,c
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;motore.c: 284: centralina_comando = 1;
  7024  00227C  8438               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c	;volatile
  7025  00227E                     l710:
  7026                           
  7027                           ;motore.c: 285: }
  7028                           ;motore.c: 286: }
  7029                           ;motore.c: 287: }
  7030                           ;motore.c: 288: new_message = 0;
  7031  00227E  9A38               	bcf	_new_message/(0+8),_new_message& (0+7),c	;volatile
  7032  002280  0012               	return		;funcret
  7033  002282                     __end_of_can_interpreter:
  7034                           	opt stack 0
  7035                           tblptru	equ	0xFF8
  7036                           tblptrh	equ	0xFF7
  7037                           tblptrl	equ	0xFF6
  7038                           tablat	equ	0xFF5
  7039                           prodh	equ	0xFF4
  7040                           prodl	equ	0xFF3
  7041                           intcon	equ	0xFF2
  7042                           postinc0	equ	0xFEE
  7043                           wreg	equ	0xFE8
  7044                           postdec1	equ	0xFE5
  7045                           fsr1l	equ	0xFE1
  7046                           indf2	equ	0xFDF
  7047                           fsr2h	equ	0xFDA
  7048                           fsr2l	equ	0xFD9
  7049                           status	equ	0xFD8
  7050                           
  7051 ;; *************** function _battery_measure *****************
  7052 ;; Defined at:
  7053 ;;		line 231 in file "motore.c"
  7054 ;; Parameters:    Size  Location     Type
  7055 ;;		None
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;		None
  7058 ;; Return value:  Size  Location     Type
  7059 ;;		None               void
  7060 ;; Registers used:
  7061 ;;		None
  7062 ;; Tracked objects:
  7063 ;;		On entry : 0/0
  7064 ;;		On exit  : 0/0
  7065 ;;		Unchanged: 0/0
  7066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7067 ;;      Params:         0       0       0       0
  7068 ;;      Locals:         0       0       0       0
  7069 ;;      Temps:          0       0       0       0
  7070 ;;      Totals:         0       0       0       0
  7071 ;;Total ram usage:        0 bytes
  7072 ;; Hardware stack levels used:    1
  7073 ;; Hardware stack levels required when called:    2
  7074 ;; This function calls:
  7075 ;;		Nothing
  7076 ;; This function is called by:
  7077 ;;		_main
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           	psect	text17
  7082  0025A8                     __ptext17:
  7083                           	opt stack 0
  7084  0025A8                     _battery_measure:
  7085                           	opt stack 28
  7086                           
  7087                           ;incstack = 0
  7088  0025A8  0012               	return		;funcret
  7089  0025AA                     __end_of_battery_measure:
  7090                           	opt stack 0
  7091                           tblptru	equ	0xFF8
  7092                           tblptrh	equ	0xFF7
  7093                           tblptrl	equ	0xFF6
  7094                           tablat	equ	0xFF5
  7095                           prodh	equ	0xFF4
  7096                           prodl	equ	0xFF3
  7097                           intcon	equ	0xFF2
  7098                           postinc0	equ	0xFEE
  7099                           wreg	equ	0xFE8
  7100                           postdec1	equ	0xFE5
  7101                           fsr1l	equ	0xFE1
  7102                           indf2	equ	0xFDF
  7103                           fsr2h	equ	0xFDA
  7104                           fsr2l	equ	0xFD9
  7105                           status	equ	0xFD8
  7106                           
  7107 ;; *************** function _OpenTimer2 *****************
  7108 ;; Defined at:
  7109 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
  7110 ;; Parameters:    Size  Location     Type
  7111 ;;  config          1    wreg     unsigned char 
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;  config          1   30[COMRAM] unsigned char 
  7114 ;; Return value:  Size  Location     Type
  7115 ;;		None               void
  7116 ;; Registers used:
  7117 ;;		wreg, status,2, status,0
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7123 ;;      Params:         0       0       0       0
  7124 ;;      Locals:         1       0       0       0
  7125 ;;      Temps:          0       0       0       0
  7126 ;;      Totals:         1       0       0       0
  7127 ;;Total ram usage:        1 bytes
  7128 ;; Hardware stack levels used:    1
  7129 ;; Hardware stack levels required when called:    2
  7130 ;; This function calls:
  7131 ;;		Nothing
  7132 ;; This function is called by:
  7133 ;;		_main
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           	psect	text18
  7138  00254C                     __ptext18:
  7139                           	opt stack 0
  7140  00254C                     _OpenTimer2:
  7141                           	opt stack 28
  7142                           
  7143                           ;incstack = 0
  7144                           ;OpenTimer2@config stored from wreg
  7145  00254C  6E1F               	movwf	OpenTimer2@config,c
  7146  00254E  501F               	movf	OpenTimer2@config,w,c
  7147  002550  0BFB               	andlw	251
  7148  002552  6ECA               	movwf	4042,c	;volatile
  7149  002554  0E00               	movlw	0
  7150  002556  6ECC               	movwf	4044,c	;volatile
  7151  002558  929E               	bcf	3998,1,c	;volatile
  7152  00255A  AE1F               	btfss	OpenTimer2@config,7,c
  7153  00255C  D002               	goto	l764
  7154  00255E  829D               	bsf	3997,1,c	;volatile
  7155  002560  D001               	goto	l765
  7156  002562                     l764:
  7157  002562  929D               	bcf	3997,1,c	;volatile
  7158  002564                     l765:
  7159  002564  84CA               	bsf	4042,2,c	;volatile
  7160  002566  0012               	return		;funcret
  7161  002568                     __end_of_OpenTimer2:
  7162                           	opt stack 0
  7163                           tblptru	equ	0xFF8
  7164                           tblptrh	equ	0xFF7
  7165                           tblptrl	equ	0xFF6
  7166                           tablat	equ	0xFF5
  7167                           prodh	equ	0xFF4
  7168                           prodl	equ	0xFF3
  7169                           intcon	equ	0xFF2
  7170                           postinc0	equ	0xFEE
  7171                           wreg	equ	0xFE8
  7172                           postdec1	equ	0xFE5
  7173                           fsr1l	equ	0xFE1
  7174                           indf2	equ	0xFDF
  7175                           fsr2h	equ	0xFDA
  7176                           fsr2l	equ	0xFD9
  7177                           status	equ	0xFD8
  7178                           
  7179 ;; *************** function _OpenEPWM1 *****************
  7180 ;; Defined at:
  7181 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  period          1    wreg     unsigned char 
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;  period          1   30[COMRAM] unsigned char 
  7186 ;; Return value:  Size  Location     Type
  7187 ;;		None               void
  7188 ;; Registers used:
  7189 ;;		wreg, status,2
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7195 ;;      Params:         0       0       0       0
  7196 ;;      Locals:         1       0       0       0
  7197 ;;      Temps:          0       0       0       0
  7198 ;;      Totals:         1       0       0       0
  7199 ;;Total ram usage:        1 bytes
  7200 ;; Hardware stack levels used:    1
  7201 ;; Hardware stack levels required when called:    2
  7202 ;; This function calls:
  7203 ;;		Nothing
  7204 ;; This function is called by:
  7205 ;;		_main
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209                           	psect	text19
  7210  002590                     __ptext19:
  7211                           	opt stack 0
  7212  002590                     _OpenEPWM1:
  7213                           	opt stack 28
  7214                           
  7215                           ;incstack = 0
  7216                           ;OpenEPWM1@period stored from wreg
  7217  002590  6E1F               	movwf	OpenEPWM1@period,c
  7218  002592  0E0C               	movlw	12
  7219  002594  6EBA               	movwf	4026,c	;volatile
  7220  002596  94CA               	bcf	4042,2,c	;volatile
  7221  002598  C01F  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  7222  00259C  84CA               	bsf	4042,2,c	;volatile
  7223  00259E  0012               	return		;funcret
  7224  0025A0                     __end_of_OpenEPWM1:
  7225                           	opt stack 0
  7226                           tblptru	equ	0xFF8
  7227                           tblptrh	equ	0xFF7
  7228                           tblptrl	equ	0xFF6
  7229                           tablat	equ	0xFF5
  7230                           prodh	equ	0xFF4
  7231                           prodl	equ	0xFF3
  7232                           intcon	equ	0xFF2
  7233                           postinc0	equ	0xFEE
  7234                           wreg	equ	0xFE8
  7235                           postdec1	equ	0xFE5
  7236                           fsr1l	equ	0xFE1
  7237                           indf2	equ	0xFDF
  7238                           fsr2h	equ	0xFDA
  7239                           fsr2l	equ	0xFD9
  7240                           status	equ	0xFD8
  7241                           
  7242 ;; *************** function _ISR_bassa *****************
  7243 ;; Defined at:
  7244 ;;		line 92 in file "motore.c"
  7245 ;; Parameters:    Size  Location     Type
  7246 ;;		None
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;  i               1   29[COMRAM] unsigned char 
  7249 ;; Return value:  Size  Location     Type
  7250 ;;		None               void
  7251 ;; Registers used:
  7252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7258 ;;      Params:         0       0       0       0
  7259 ;;      Locals:         1       0       0       0
  7260 ;;      Temps:         17       0       0       0
  7261 ;;      Totals:        18       0       0       0
  7262 ;;Total ram usage:       18 bytes
  7263 ;; Hardware stack levels used:    1
  7264 ;; Hardware stack levels required when called:    1
  7265 ;; This function calls:
  7266 ;;		_CANisRxReady
  7267 ;;		_CANreceiveMessage
  7268 ;; This function is called by:
  7269 ;;		Interrupt level 1
  7270 ;; This function uses a non-reentrant model
  7271 ;;
  7272                           
  7273                           	psect	intcodelo
  7274  000018                     __pintcodelo:
  7275                           	opt stack 0
  7276  000018                     _ISR_bassa:
  7277                           	opt stack 26
  7278                           
  7279                           ;incstack = 0
  7280  000018  8041               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7281  00001A  CFD8 F00D          	movff	status,??_ISR_bassa
  7282  00001E  CFE8 F00E          	movff	wreg,??_ISR_bassa+1
  7283  000022  CFE0 F00F          	movff	bsr,??_ISR_bassa+2
  7284  000026  CFFA F010          	movff	pclath,??_ISR_bassa+3
  7285  00002A  CFFB F011          	movff	pclatu,??_ISR_bassa+4
  7286  00002E  CFE9 F012          	movff	fsr0l,??_ISR_bassa+5
  7287  000032  CFEA F013          	movff	fsr0h,??_ISR_bassa+6
  7288  000036  CFE1 F014          	movff	fsr1l,??_ISR_bassa+7
  7289  00003A  CFE2 F015          	movff	fsr1h,??_ISR_bassa+8
  7290  00003E  CFD9 F016          	movff	fsr2l,??_ISR_bassa+9
  7291  000042  CFDA F017          	movff	fsr2h,??_ISR_bassa+10
  7292  000046  CFF3 F018          	movff	prodl,??_ISR_bassa+11
  7293  00004A  CFF4 F019          	movff	prodh,??_ISR_bassa+12
  7294  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_bassa+13
  7295  000052  CFF7 F01B          	movff	tblptrh,??_ISR_bassa+14
  7296  000056  CFF8 F01C          	movff	tblptru,??_ISR_bassa+15
  7297  00005A  CFF5 F01D          	movff	tablat,??_ISR_bassa+16
  7298                           
  7299                           ;motore.c: 93: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7300  00005E  B0A4               	btfsc	4004,0,c	;volatile
  7301  000060  D002               	goto	i1l654
  7302  000062  A2A4               	btfss	4004,1,c	;volatile
  7303  000064  D038               	goto	i1l652
  7304  000066                     i1l654:
  7305                           
  7306                           ;motore.c: 94: if (PIR3bits.RXB0IF ==1){
  7307  000066  B0A4               	btfsc	4004,0,c	;volatile
  7308                           
  7309                           ;motore.c: 95: PORTCbits.RC1 = 1;
  7310  000068  8282               	bsf	3970,1,c	;volatile
  7311                           
  7312                           ;motore.c: 96: }
  7313                           ;motore.c: 97: if (CANisRxReady()) {
  7314  00006A  ECB4  F012         	call	_CANisRxReady	;wreg free
  7315  00006E  0900               	iorlw	0
  7316  000070  B4D8               	btfsc	status,2,c
  7317  000072  D02F               	goto	i1l656
  7318                           
  7319                           ;motore.c: 98: CANreceiveMessage(&msg);
  7320  000074  0E8C               	movlw	low _msg
  7321  000076  6E01               	movwf	CANreceiveMessage@msg,c
  7322  000078  0E00               	movlw	high _msg
  7323  00007A  6E02               	movwf	CANreceiveMessage@msg+1,c
  7324  00007C  EC7C  F009         	call	_CANreceiveMessage	;wreg free
  7325                           
  7326                           ;motore.c: 99: remote_frame = msg.RTR;
  7327  000080  0100               	movlb	0	; () banked
  7328  000082  A19A               	btfss	(_msg+14)& (0+255),0,b
  7329  000084  D002               	goto	i1u429_20
  7330  000086  8C38               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  7331  000088  D001               	goto	i1l3804
  7332  00008A                     i1u429_20:
  7333  00008A  9C38               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c	;volatile
  7334  00008C                     i1l3804:
  7335                           
  7336                           ;motore.c: 100: id = msg.identifier;
  7337  00008C  C08C  F028         	movff	_msg,_id	;volatile
  7338  000090  C08D  F029         	movff	_msg+1,_id+1	;volatile
  7339  000094  C08E  F02A         	movff	_msg+2,_id+2	;volatile
  7340  000098  C08F  F02B         	movff	_msg+3,_id+3	;volatile
  7341                           
  7342                           ;motore.c: 101: for (char i = 0; i < 8; i++) {
  7343  00009C  0E00               	movlw	0
  7344  00009E  6E1E               	movwf	ISR_bassa@i,c
  7345  0000A0                     i1l3808:
  7346  0000A0  0E07               	movlw	7
  7347  0000A2  641E               	cpfsgt	ISR_bassa@i,c
  7348  0000A4  D001               	goto	i1l3812
  7349  0000A6  D014               	goto	i1l658
  7350  0000A8                     i1l3812:
  7351                           
  7352                           ;motore.c: 102: data_array[i] = msg.data[i];
  7353  0000A8  501E               	movf	ISR_bassa@i,w,c
  7354  0000AA  0D01               	mullw	1
  7355  0000AC  0E90               	movlw	low (_msg+4)
  7356  0000AE  24F3               	addwf	prodl,w,c
  7357  0000B0  6ED9               	movwf	fsr2l,c
  7358  0000B2  0E00               	movlw	high (_msg+4)
  7359  0000B4  20F4               	addwfc	prodh,w,c
  7360  0000B6  6EDA               	movwf	fsr2h,c
  7361  0000B8  501E               	movf	ISR_bassa@i,w,c
  7362  0000BA  0D01               	mullw	1
  7363  0000BC  0E9B               	movlw	low _data_array
  7364  0000BE  24F3               	addwf	prodl,w,c
  7365  0000C0  6EE1               	movwf	fsr1l,c
  7366  0000C2  0E00               	movlw	high _data_array
  7367  0000C4  20F4               	addwfc	prodh,w,c
  7368  0000C6  6EE2               	movwf	fsr1h,c
  7369  0000C8  CFDF FFE7          	movff	indf2,indf1
  7370  0000CC  2A1E               	incf	ISR_bassa@i,f,c
  7371  0000CE  D7E8               	goto	i1l3808
  7372  0000D0                     i1l658:
  7373                           
  7374                           ;motore.c: 103: }
  7375                           ;motore.c: 104: new_message = 1;
  7376  0000D0  8A38               	bsf	_new_message/(0+8),_new_message& (0+7),c	;volatile
  7377  0000D2                     i1l656:
  7378                           
  7379                           ;motore.c: 105: }
  7380                           ;motore.c: 106: PIR3bits.RXB0IF = 0;
  7381  0000D2  90A4               	bcf	4004,0,c	;volatile
  7382                           
  7383                           ;motore.c: 107: PIR3bits.RXB1IF = 0;
  7384  0000D4  92A4               	bcf	4004,1,c	;volatile
  7385  0000D6                     i1l652:
  7386                           
  7387                           ;motore.c: 108: }
  7388                           ;motore.c: 110: if (PIR2bits.TMR3IF) {
  7389  0000D6  A2A1               	btfss	4001,1,c	;volatile
  7390  0000D8  D00C               	goto	i1l660
  7391                           
  7392                           ;motore.c: 111: timeCounter++;
  7393  0000DA  0E01               	movlw	1
  7394  0000DC  0100               	movlb	0	; () banked
  7395  0000DE  2780               	addwf	_timeCounter& (0+255),f,b	;volatile
  7396  0000E0  0E00               	movlw	0
  7397  0000E2  2381               	addwfc	(_timeCounter+1)& (0+255),f,b	;volatile
  7398  0000E4  2382               	addwfc	(_timeCounter+2)& (0+255),f,b	;volatile
  7399  0000E6  2383               	addwfc	(_timeCounter+3)& (0+255),f,b	;volatile
  7400                           
  7401                           ; BSR set to: 0
  7402                           ;motore.c: 112: TMR3H = 0x63;
  7403  0000E8  0E63               	movlw	99
  7404  0000EA  6EB3               	movwf	4019,c	;volatile
  7405                           
  7406                           ; BSR set to: 0
  7407                           ;motore.c: 113: TMR3L = 0xC0;
  7408  0000EC  0EC0               	movlw	192
  7409  0000EE  6EB2               	movwf	4018,c	;volatile
  7410                           
  7411                           ; BSR set to: 0
  7412                           ;motore.c: 114: PIR2bits.TMR3IF = 0;
  7413  0000F0  92A1               	bcf	4001,1,c	;volatile
  7414  0000F2                     i1l660:
  7415  0000F2  C01D  FFF5         	movff	??_ISR_bassa+16,tablat
  7416  0000F6  C01C  FFF8         	movff	??_ISR_bassa+15,tblptru
  7417  0000FA  C01B  FFF7         	movff	??_ISR_bassa+14,tblptrh
  7418  0000FE  C01A  FFF6         	movff	??_ISR_bassa+13,tblptrl
  7419  000102  C019  FFF4         	movff	??_ISR_bassa+12,prodh
  7420  000106  C018  FFF3         	movff	??_ISR_bassa+11,prodl
  7421  00010A  C017  FFDA         	movff	??_ISR_bassa+10,fsr2h
  7422  00010E  C016  FFD9         	movff	??_ISR_bassa+9,fsr2l
  7423  000112  C015  FFE2         	movff	??_ISR_bassa+8,fsr1h
  7424  000116  C014  FFE1         	movff	??_ISR_bassa+7,fsr1l
  7425  00011A  C013  FFEA         	movff	??_ISR_bassa+6,fsr0h
  7426  00011E  C012  FFE9         	movff	??_ISR_bassa+5,fsr0l
  7427  000122  C011  FFFB         	movff	??_ISR_bassa+4,pclatu
  7428  000126  C010  FFFA         	movff	??_ISR_bassa+3,pclath
  7429  00012A  C00F  FFE0         	movff	??_ISR_bassa+2,bsr
  7430  00012E  C00E  FFE8         	movff	??_ISR_bassa+1,wreg
  7431  000132  C00D  FFD8         	movff	??_ISR_bassa,status
  7432  000136  9041               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7433  000138  0010               	retfie	
  7434  00013A                     __end_of_ISR_bassa:
  7435                           	opt stack 0
  7436                           pclatu	equ	0xFFB
  7437                           pclath	equ	0xFFA
  7438                           tblptru	equ	0xFF8
  7439                           tblptrh	equ	0xFF7
  7440                           tblptrl	equ	0xFF6
  7441                           tablat	equ	0xFF5
  7442                           prodh	equ	0xFF4
  7443                           prodl	equ	0xFF3
  7444                           intcon	equ	0xFF2
  7445                           postinc0	equ	0xFEE
  7446                           fsr0h	equ	0xFEA
  7447                           fsr0l	equ	0xFE9
  7448                           wreg	equ	0xFE8
  7449                           indf1	equ	0xFE7
  7450                           postdec1	equ	0xFE5
  7451                           fsr1h	equ	0xFE2
  7452                           fsr1l	equ	0xFE1
  7453                           bsr	equ	0xFE0
  7454                           indf2	equ	0xFDF
  7455                           fsr2h	equ	0xFDA
  7456                           fsr2l	equ	0xFD9
  7457                           status	equ	0xFD8
  7458                           
  7459 ;; *************** function _CANreceiveMessage *****************
  7460 ;; Defined at:
  7461 ;;		line 528 in file "CANlib.h"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;  msg             2    0[COMRAM] PTR struct .
  7464 ;;		 -> msg(15), 
  7465 ;; Auto vars:     Size  Location     Type
  7466 ;;  tamp            1   11[COMRAM] unsigned char 
  7467 ;;  error           1   10[COMRAM] unsigned char 
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  1    wreg      unsigned char 
  7470 ;; Registers used:
  7471 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7477 ;;      Params:         2       0       0       0
  7478 ;;      Locals:         2       0       0       0
  7479 ;;      Temps:          8       0       0       0
  7480 ;;      Totals:        12       0       0       0
  7481 ;;Total ram usage:       12 bytes
  7482 ;; Hardware stack levels used:    1
  7483 ;; This function calls:
  7484 ;;		Nothing
  7485 ;; This function is called by:
  7486 ;;		_ISR_bassa
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           	psect	text21
  7491  0012F8                     __ptext21:
  7492                           	opt stack 0
  7493  0012F8                     _CANreceiveMessage:
  7494                           	opt stack 26
  7495                           
  7496                           ;CANlib.h: 530: BYTE tamp;
  7497                           ;CANlib.h: 531: BYTE error = 0;
  7498                           
  7499                           ;incstack = 0
  7500  0012F8  0E00               	movlw	0
  7501  0012FA  6E0B               	movwf	CANreceiveMessage@error,c
  7502                           
  7503                           ;CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7504  0012FC  BE74               	btfsc	3956,7,c	;volatile
  7505                           
  7506                           ;CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7507  0012FE  800B               	bsf	CANreceiveMessage@error,0,c
  7508                           
  7509                           ;CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7510  001300  BC74               	btfsc	3956,6,c	;volatile
  7511                           
  7512                           ;CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7513  001302  820B               	bsf	CANreceiveMessage@error,1,c
  7514                           
  7515                           ;CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7516  001304  010F               	movlb	15	; () banked
  7517  001306  AF50               	btfss	80,7,b	;volatile
  7518  001308  D143               	goto	i1l412
  7519                           
  7520                           ; BSR set to: 15
  7521                           ;CANlib.h: 541: {
  7522                           ;CANlib.h: 542: msg->identifier = 0;
  7523  00130A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7524  00130E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7525  001312  6ADE               	clrf	postinc2,c
  7526  001314  6ADE               	clrf	postinc2,c
  7527  001316  6ADE               	clrf	postinc2,c
  7528  001318  6ADD               	clrf	postdec2,c
  7529                           
  7530                           ; BSR set to: 15
  7531                           ;CANlib.h: 543: msg->data[0] =RXB1D0;
  7532  00131A  EE20 F004          	lfsr	2,4
  7533  00131E  5001               	movf	CANreceiveMessage@msg,w,c
  7534  001320  26D9               	addwf	fsr2l,f,c
  7535  001322  5002               	movf	CANreceiveMessage@msg+1,w,c
  7536  001324  22DA               	addwfc	fsr2h,f,c
  7537  001326  CF56 FFDF          	movff	3926,indf2	;volatile
  7538                           
  7539                           ; BSR set to: 15
  7540                           ;CANlib.h: 544: msg->data[1] =RXB1D1;
  7541  00132A  EE20 F005          	lfsr	2,5
  7542  00132E  5001               	movf	CANreceiveMessage@msg,w,c
  7543  001330  26D9               	addwf	fsr2l,f,c
  7544  001332  5002               	movf	CANreceiveMessage@msg+1,w,c
  7545  001334  22DA               	addwfc	fsr2h,f,c
  7546  001336  CF57 FFDF          	movff	3927,indf2	;volatile
  7547                           
  7548                           ; BSR set to: 15
  7549                           ;CANlib.h: 545: msg->data[2] =RXB1D2;
  7550  00133A  EE20 F006          	lfsr	2,6
  7551  00133E  5001               	movf	CANreceiveMessage@msg,w,c
  7552  001340  26D9               	addwf	fsr2l,f,c
  7553  001342  5002               	movf	CANreceiveMessage@msg+1,w,c
  7554  001344  22DA               	addwfc	fsr2h,f,c
  7555  001346  CF58 FFDF          	movff	3928,indf2	;volatile
  7556                           
  7557                           ; BSR set to: 15
  7558                           ;CANlib.h: 546: msg->data[3] =RXB1D3;
  7559  00134A  EE20 F007          	lfsr	2,7
  7560  00134E  5001               	movf	CANreceiveMessage@msg,w,c
  7561  001350  26D9               	addwf	fsr2l,f,c
  7562  001352  5002               	movf	CANreceiveMessage@msg+1,w,c
  7563  001354  22DA               	addwfc	fsr2h,f,c
  7564  001356  CF59 FFDF          	movff	3929,indf2	;volatile
  7565                           
  7566                           ; BSR set to: 15
  7567                           ;CANlib.h: 547: msg->data[4] =RXB1D4;
  7568  00135A  EE20 F008          	lfsr	2,8
  7569  00135E  5001               	movf	CANreceiveMessage@msg,w,c
  7570  001360  26D9               	addwf	fsr2l,f,c
  7571  001362  5002               	movf	CANreceiveMessage@msg+1,w,c
  7572  001364  22DA               	addwfc	fsr2h,f,c
  7573  001366  CF5A FFDF          	movff	3930,indf2	;volatile
  7574                           
  7575                           ; BSR set to: 15
  7576                           ;CANlib.h: 548: msg->data[5] =RXB1D5;
  7577  00136A  EE20 F009          	lfsr	2,9
  7578  00136E  5001               	movf	CANreceiveMessage@msg,w,c
  7579  001370  26D9               	addwf	fsr2l,f,c
  7580  001372  5002               	movf	CANreceiveMessage@msg+1,w,c
  7581  001374  22DA               	addwfc	fsr2h,f,c
  7582  001376  CF5B FFDF          	movff	3931,indf2	;volatile
  7583                           
  7584                           ; BSR set to: 15
  7585                           ;CANlib.h: 549: msg->data[6] =RXB1D6;
  7586  00137A  EE20 F00A          	lfsr	2,10
  7587  00137E  5001               	movf	CANreceiveMessage@msg,w,c
  7588  001380  26D9               	addwf	fsr2l,f,c
  7589  001382  5002               	movf	CANreceiveMessage@msg+1,w,c
  7590  001384  22DA               	addwfc	fsr2h,f,c
  7591  001386  CF5C FFDF          	movff	3932,indf2	;volatile
  7592                           
  7593                           ; BSR set to: 15
  7594                           ;CANlib.h: 550: msg->data[7] =RXB1D7;
  7595  00138A  EE20 F00B          	lfsr	2,11
  7596  00138E  5001               	movf	CANreceiveMessage@msg,w,c
  7597  001390  26D9               	addwf	fsr2l,f,c
  7598  001392  5002               	movf	CANreceiveMessage@msg+1,w,c
  7599  001394  22DA               	addwfc	fsr2h,f,c
  7600  001396  CF5D FFDF          	movff	3933,indf2	;volatile
  7601                           
  7602                           ; BSR set to: 15
  7603                           ;CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7604  00139A  EE20 F00E          	lfsr	2,14
  7605  00139E  5001               	movf	CANreceiveMessage@msg,w,c
  7606  0013A0  26D9               	addwf	fsr2l,f,c
  7607  0013A2  5002               	movf	CANreceiveMessage@msg+1,w,c
  7608  0013A4  22DA               	addwfc	fsr2h,f,c
  7609  0013A6  010F               	movlb	15	; () banked
  7610  0013A8  AD55               	btfss	85,6,b	;volatile
  7611  0013AA  D002               	goto	i1u379_20
  7612  0013AC  0E01               	movlw	1
  7613  0013AE  D001               	goto	i1u379_26
  7614  0013B0                     i1u379_20:
  7615  0013B0  0E00               	movlw	0
  7616  0013B2                     i1u379_26:
  7617  0013B2  6EDF               	movwf	indf2,c
  7618                           
  7619                           ; BSR set to: 15
  7620                           ;CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7621  0013B4  EE20 F00D          	lfsr	2,13
  7622  0013B8  5001               	movf	CANreceiveMessage@msg,w,c
  7623  0013BA  26D9               	addwf	fsr2l,f,c
  7624  0013BC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7625  0013BE  22DA               	addwfc	fsr2h,f,c
  7626  0013C0  010F               	movlb	15	; () banked
  7627  0013C2  5155               	movf	85,w,b	;volatile
  7628  0013C4  0B0F               	andlw	15
  7629  0013C6  6EDF               	movwf	indf2,c
  7630                           
  7631                           ; BSR set to: 15
  7632                           ;CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7633  0013C8  EE20 F00C          	lfsr	2,12
  7634  0013CC  5001               	movf	CANreceiveMessage@msg,w,c
  7635  0013CE  26D9               	addwf	fsr2l,f,c
  7636  0013D0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7637  0013D2  22DA               	addwfc	fsr2h,f,c
  7638  0013D4  010F               	movlb	15	; () banked
  7639  0013D6  A752               	btfss	82,3,b	;volatile
  7640  0013D8  D002               	goto	i1u380_20
  7641  0013DA  0E01               	movlw	1
  7642  0013DC  D001               	goto	i1u380_26
  7643  0013DE                     i1u380_20:
  7644  0013DE  0E00               	movlw	0
  7645  0013E0                     i1u380_26:
  7646  0013E0  6EDF               	movwf	indf2,c
  7647                           
  7648                           ; BSR set to: 15
  7649                           ;CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7650  0013E2  010F               	movlb	15	; () banked
  7651  0013E4  B752               	btfsc	82,3,b	;volatile
  7652  0013E6  D044               	goto	i1l3470
  7653                           
  7654                           ; BSR set to: 15
  7655                           ;CANlib.h: 559: {
  7656                           ;CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7657  0013E8  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7658  0013EC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7659  0013EE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7660  0013F0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7661  0013F2  0E03               	movlw	3
  7662  0013F4                     i1u382_25:
  7663  0013F4  90D8               	bcf	status,0,c
  7664  0013F6  3603               	rlcf	??_CANreceiveMessage,f,c
  7665  0013F8  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7666  0013FA  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7667  0013FC  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7668  0013FE  2EE8               	decfsz	wreg,f,c
  7669  001400  D7F9               	goto	i1u382_25
  7670  001402  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7671  001406  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7672  00140A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7673  00140E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7674  001412  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7675  001416  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7676                           
  7677                           ; BSR set to: 15
  7678                           ;CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7679  00141A  010F               	movlb	15	; () banked
  7680  00141C  3952               	swapf	82,w,b	;volatile
  7681  00141E  42E8               	rrncf	wreg,f,c
  7682  001420  0B07               	andlw	7
  7683  001422  0B07               	andlw	7
  7684  001424  6E0C               	movwf	CANreceiveMessage@tamp,c
  7685                           
  7686                           ; BSR set to: 15
  7687                           ;CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7688  001426  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7689  00142A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7690  00142E  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  7691  001432  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  7692  001436  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  7693  00143A  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  7694  00143E  500C               	movf	CANreceiveMessage@tamp,w,c
  7695  001440  2403               	addwf	??_CANreceiveMessage,w,c
  7696  001442  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7697  001444  0E00               	movlw	0
  7698  001446  2004               	addwfc	??_CANreceiveMessage+1,w,c
  7699  001448  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7700  00144A  0E00               	movlw	0
  7701  00144C  2005               	addwfc	??_CANreceiveMessage+2,w,c
  7702  00144E  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7703  001450  0E00               	movlw	0
  7704  001452  2006               	addwfc	??_CANreceiveMessage+3,w,c
  7705  001454  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7706  001456  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7707  00145A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7708  00145E  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7709  001462  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7710  001466  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7711  00146A  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7712                           
  7713                           ;CANlib.h: 563: }
  7714  00146E  D08D               	goto	i1l3496
  7715  001470                     i1l3470:
  7716                           
  7717                           ; BSR set to: 15
  7718                           ;CANlib.h: 564: else
  7719                           ;CANlib.h: 565: {
  7720                           ;CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7721  001470  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  7722  001474  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7723  001476  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7724  001478  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7725  00147A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7726  00147E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7727  001482  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7728  001486  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7729  00148A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7730  00148E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7731                           
  7732                           ; BSR set to: 15
  7733                           ;CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7734  001492  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  7735  001496  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7736  001498  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7737  00149A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7738  00149C  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7739  0014A0  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7740  0014A4  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7741  0014A8  6A03               	clrf	??_CANreceiveMessage,c
  7742  0014AA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7743  0014AE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7744  0014B2  5003               	movf	??_CANreceiveMessage,w,c
  7745  0014B4  26DE               	addwf	postinc2,f,c
  7746  0014B6  5004               	movf	??_CANreceiveMessage+1,w,c
  7747  0014B8  22DE               	addwfc	postinc2,f,c
  7748  0014BA  5005               	movf	??_CANreceiveMessage+2,w,c
  7749  0014BC  22DE               	addwfc	postinc2,f,c
  7750  0014BE  5006               	movf	??_CANreceiveMessage+3,w,c
  7751  0014C0  22DE               	addwfc	postinc2,f,c
  7752                           
  7753                           ; BSR set to: 15
  7754                           ;CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7755  0014C2  010F               	movlb	15	; () banked
  7756  0014C4  A152               	btfss	82,0,b	;volatile
  7757  0014C6  D00C               	goto	i1l3478
  7758                           
  7759                           ; BSR set to: 15
  7760                           ;CANlib.h: 570: msg->identifier |= 0x00010000;
  7761  0014C8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7762  0014CC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7763  0014D0  0E00               	movlw	0
  7764  0014D2  12DE               	iorwf	postinc2,f,c
  7765  0014D4  0E00               	movlw	0
  7766  0014D6  12DE               	iorwf	postinc2,f,c
  7767  0014D8  0E01               	movlw	1
  7768  0014DA  12DE               	iorwf	postinc2,f,c
  7769  0014DC  0E00               	movlw	0
  7770  0014DE  12DE               	iorwf	postinc2,f,c
  7771  0014E0                     i1l3478:
  7772                           
  7773                           ; BSR set to: 15
  7774                           ;CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7775  0014E0  010F               	movlb	15	; () banked
  7776  0014E2  A352               	btfss	82,1,b	;volatile
  7777  0014E4  D00C               	goto	i1l3482
  7778                           
  7779                           ; BSR set to: 15
  7780                           ;CANlib.h: 572: msg->identifier |= 0x00020000;
  7781  0014E6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7782  0014EA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7783  0014EE  0E00               	movlw	0
  7784  0014F0  12DE               	iorwf	postinc2,f,c
  7785  0014F2  0E00               	movlw	0
  7786  0014F4  12DE               	iorwf	postinc2,f,c
  7787  0014F6  0E02               	movlw	2
  7788  0014F8  12DE               	iorwf	postinc2,f,c
  7789  0014FA  0E00               	movlw	0
  7790  0014FC  12DE               	iorwf	postinc2,f,c
  7791  0014FE                     i1l3482:
  7792                           
  7793                           ; BSR set to: 15
  7794                           ;CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7795  0014FE  010F               	movlb	15	; () banked
  7796  001500  AB52               	btfss	82,5,b	;volatile
  7797  001502  D00C               	goto	i1l3486
  7798                           
  7799                           ; BSR set to: 15
  7800                           ;CANlib.h: 574: msg->identifier |= 0x00040000;
  7801  001504  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7802  001508  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7803  00150C  0E00               	movlw	0
  7804  00150E  12DE               	iorwf	postinc2,f,c
  7805  001510  0E00               	movlw	0
  7806  001512  12DE               	iorwf	postinc2,f,c
  7807  001514  0E04               	movlw	4
  7808  001516  12DE               	iorwf	postinc2,f,c
  7809  001518  0E00               	movlw	0
  7810  00151A  12DE               	iorwf	postinc2,f,c
  7811  00151C                     i1l3486:
  7812                           
  7813                           ; BSR set to: 15
  7814                           ;CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7815  00151C  010F               	movlb	15	; () banked
  7816  00151E  AD52               	btfss	82,6,b	;volatile
  7817  001520  D00C               	goto	i1l3490
  7818                           
  7819                           ; BSR set to: 15
  7820                           ;CANlib.h: 576: msg->identifier |= 0x00080000;
  7821  001522  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7822  001526  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7823  00152A  0E00               	movlw	0
  7824  00152C  12DE               	iorwf	postinc2,f,c
  7825  00152E  0E00               	movlw	0
  7826  001530  12DE               	iorwf	postinc2,f,c
  7827  001532  0E08               	movlw	8
  7828  001534  12DE               	iorwf	postinc2,f,c
  7829  001536  0E00               	movlw	0
  7830  001538  12DE               	iorwf	postinc2,f,c
  7831  00153A                     i1l3490:
  7832                           
  7833                           ; BSR set to: 15
  7834                           ;CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7835  00153A  010F               	movlb	15	; () banked
  7836  00153C  AF52               	btfss	82,7,b	;volatile
  7837  00153E  D00C               	goto	i1l3494
  7838                           
  7839                           ; BSR set to: 15
  7840                           ;CANlib.h: 578: msg->identifier |= 0x00100000;
  7841  001540  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7842  001544  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7843  001548  0E00               	movlw	0
  7844  00154A  12DE               	iorwf	postinc2,f,c
  7845  00154C  0E00               	movlw	0
  7846  00154E  12DE               	iorwf	postinc2,f,c
  7847  001550  0E10               	movlw	16
  7848  001552  12DE               	iorwf	postinc2,f,c
  7849  001554  0E00               	movlw	0
  7850  001556  12DE               	iorwf	postinc2,f,c
  7851  001558                     i1l3494:
  7852                           
  7853                           ; BSR set to: 15
  7854                           ;CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7855  001558  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7856  00155C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7857  00155E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7858  001560  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7859  001562  0E15               	movlw	21
  7860  001564                     i1u388_25:
  7861  001564  90D8               	bcf	status,0,c
  7862  001566  3603               	rlcf	??_CANreceiveMessage,f,c
  7863  001568  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7864  00156A  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7865  00156C  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7866  00156E  2EE8               	decfsz	wreg,f,c
  7867  001570  D7F9               	goto	i1u388_25
  7868  001572  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7869  001576  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7870  00157A  5003               	movf	??_CANreceiveMessage,w,c
  7871  00157C  12DE               	iorwf	postinc2,f,c
  7872  00157E  5004               	movf	??_CANreceiveMessage+1,w,c
  7873  001580  12DE               	iorwf	postinc2,f,c
  7874  001582  5005               	movf	??_CANreceiveMessage+2,w,c
  7875  001584  12DE               	iorwf	postinc2,f,c
  7876  001586  5006               	movf	??_CANreceiveMessage+3,w,c
  7877  001588  12DE               	iorwf	postinc2,f,c
  7878  00158A                     i1l3496:
  7879                           
  7880                           ; BSR set to: 15
  7881                           ;CANlib.h: 581: }
  7882                           ;CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7883  00158A  010F               	movlb	15	; () banked
  7884  00158C  9F50               	bcf	80,7,b	;volatile
  7885                           
  7886                           ; BSR set to: 15
  7887                           ;CANlib.h: 584: return (error);
  7888                           ;	Return value of _CANreceiveMessage is never used
  7889  00158E  0012               	return	
  7890  001590                     i1l412:
  7891                           
  7892                           ; BSR set to: 15
  7893                           ;CANlib.h: 585: }
  7894                           ;CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  7895  001590  AE60               	btfss	3936,7,c	;volatile
  7896  001592  0012               	return	
  7897                           
  7898                           ; BSR set to: 15
  7899                           ;CANlib.h: 588: {
  7900                           ;CANlib.h: 589: msg->identifier = 0;
  7901  001594  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7902  001598  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7903  00159C  6ADE               	clrf	postinc2,c
  7904  00159E  6ADE               	clrf	postinc2,c
  7905  0015A0  6ADE               	clrf	postinc2,c
  7906  0015A2  6ADD               	clrf	postdec2,c
  7907                           
  7908                           ; BSR set to: 15
  7909                           ;CANlib.h: 590: msg->data[0] =RXB0D0;
  7910  0015A4  EE20 F004          	lfsr	2,4
  7911  0015A8  5001               	movf	CANreceiveMessage@msg,w,c
  7912  0015AA  26D9               	addwf	fsr2l,f,c
  7913  0015AC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7914  0015AE  22DA               	addwfc	fsr2h,f,c
  7915  0015B0  CF66 FFDF          	movff	3942,indf2	;volatile
  7916                           
  7917                           ; BSR set to: 15
  7918                           ;CANlib.h: 591: msg->data[1] =RXB0D1;
  7919  0015B4  EE20 F005          	lfsr	2,5
  7920  0015B8  5001               	movf	CANreceiveMessage@msg,w,c
  7921  0015BA  26D9               	addwf	fsr2l,f,c
  7922  0015BC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7923  0015BE  22DA               	addwfc	fsr2h,f,c
  7924  0015C0  CF67 FFDF          	movff	3943,indf2	;volatile
  7925                           
  7926                           ; BSR set to: 15
  7927                           ;CANlib.h: 592: msg->data[2] =RXB0D2;
  7928  0015C4  EE20 F006          	lfsr	2,6
  7929  0015C8  5001               	movf	CANreceiveMessage@msg,w,c
  7930  0015CA  26D9               	addwf	fsr2l,f,c
  7931  0015CC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7932  0015CE  22DA               	addwfc	fsr2h,f,c
  7933  0015D0  CF68 FFDF          	movff	3944,indf2	;volatile
  7934                           
  7935                           ; BSR set to: 15
  7936                           ;CANlib.h: 593: msg->data[3] =RXB0D3;
  7937  0015D4  EE20 F007          	lfsr	2,7
  7938  0015D8  5001               	movf	CANreceiveMessage@msg,w,c
  7939  0015DA  26D9               	addwf	fsr2l,f,c
  7940  0015DC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7941  0015DE  22DA               	addwfc	fsr2h,f,c
  7942  0015E0  CF69 FFDF          	movff	3945,indf2	;volatile
  7943                           
  7944                           ; BSR set to: 15
  7945                           ;CANlib.h: 594: msg->data[4] =RXB0D4;
  7946  0015E4  EE20 F008          	lfsr	2,8
  7947  0015E8  5001               	movf	CANreceiveMessage@msg,w,c
  7948  0015EA  26D9               	addwf	fsr2l,f,c
  7949  0015EC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7950  0015EE  22DA               	addwfc	fsr2h,f,c
  7951  0015F0  CF6A FFDF          	movff	3946,indf2	;volatile
  7952                           
  7953                           ; BSR set to: 15
  7954                           ;CANlib.h: 595: msg->data[5] =RXB0D5;
  7955  0015F4  EE20 F009          	lfsr	2,9
  7956  0015F8  5001               	movf	CANreceiveMessage@msg,w,c
  7957  0015FA  26D9               	addwf	fsr2l,f,c
  7958  0015FC  5002               	movf	CANreceiveMessage@msg+1,w,c
  7959  0015FE  22DA               	addwfc	fsr2h,f,c
  7960  001600  CF6B FFDF          	movff	3947,indf2	;volatile
  7961                           
  7962                           ; BSR set to: 15
  7963                           ;CANlib.h: 596: msg->data[6] =RXB0D6;
  7964  001604  EE20 F00A          	lfsr	2,10
  7965  001608  5001               	movf	CANreceiveMessage@msg,w,c
  7966  00160A  26D9               	addwf	fsr2l,f,c
  7967  00160C  5002               	movf	CANreceiveMessage@msg+1,w,c
  7968  00160E  22DA               	addwfc	fsr2h,f,c
  7969  001610  CF6C FFDF          	movff	3948,indf2	;volatile
  7970                           
  7971                           ; BSR set to: 15
  7972                           ;CANlib.h: 597: msg->data[7] =RXB0D7;
  7973  001614  EE20 F00B          	lfsr	2,11
  7974  001618  5001               	movf	CANreceiveMessage@msg,w,c
  7975  00161A  26D9               	addwf	fsr2l,f,c
  7976  00161C  5002               	movf	CANreceiveMessage@msg+1,w,c
  7977  00161E  22DA               	addwfc	fsr2h,f,c
  7978  001620  CF6D FFDF          	movff	3949,indf2	;volatile
  7979                           
  7980                           ; BSR set to: 15
  7981                           ;CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  7982  001624  EE20 F00E          	lfsr	2,14
  7983  001628  5001               	movf	CANreceiveMessage@msg,w,c
  7984  00162A  26D9               	addwf	fsr2l,f,c
  7985  00162C  5002               	movf	CANreceiveMessage@msg+1,w,c
  7986  00162E  22DA               	addwfc	fsr2h,f,c
  7987  001630  AC65               	btfss	3941,6,c	;volatile
  7988  001632  D002               	goto	i1u390_20
  7989  001634  0E01               	movlw	1
  7990  001636  D001               	goto	i1u390_26
  7991  001638                     i1u390_20:
  7992  001638  0E00               	movlw	0
  7993  00163A                     i1u390_26:
  7994  00163A  6EDF               	movwf	indf2,c
  7995                           
  7996                           ; BSR set to: 15
  7997                           ;CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  7998  00163C  EE20 F00D          	lfsr	2,13
  7999  001640  5001               	movf	CANreceiveMessage@msg,w,c
  8000  001642  26D9               	addwf	fsr2l,f,c
  8001  001644  5002               	movf	CANreceiveMessage@msg+1,w,c
  8002  001646  22DA               	addwfc	fsr2h,f,c
  8003  001648  5065               	movf	3941,w,c	;volatile
  8004  00164A  0B0F               	andlw	15
  8005  00164C  6EDF               	movwf	indf2,c
  8006                           
  8007                           ; BSR set to: 15
  8008                           ;CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8009  00164E  EE20 F00C          	lfsr	2,12
  8010  001652  5001               	movf	CANreceiveMessage@msg,w,c
  8011  001654  26D9               	addwf	fsr2l,f,c
  8012  001656  5002               	movf	CANreceiveMessage@msg+1,w,c
  8013  001658  22DA               	addwfc	fsr2h,f,c
  8014  00165A  A662               	btfss	3938,3,c	;volatile
  8015  00165C  D002               	goto	i1u391_20
  8016  00165E  0E01               	movlw	1
  8017  001660  D001               	goto	i1u391_26
  8018  001662                     i1u391_20:
  8019  001662  0E00               	movlw	0
  8020  001664                     i1u391_26:
  8021  001664  6EDF               	movwf	indf2,c
  8022                           
  8023                           ; BSR set to: 15
  8024                           ;CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8025  001666  B662               	btfsc	3938,3,c	;volatile
  8026  001668  D043               	goto	i1l3532
  8027                           
  8028                           ; BSR set to: 15
  8029                           ;CANlib.h: 606: {
  8030                           ;CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8031  00166A  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8032  00166E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8033  001670  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8034  001672  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8035  001674  0E03               	movlw	3
  8036  001676                     i1u393_25:
  8037  001676  90D8               	bcf	status,0,c
  8038  001678  3603               	rlcf	??_CANreceiveMessage,f,c
  8039  00167A  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8040  00167C  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8041  00167E  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8042  001680  2EE8               	decfsz	wreg,f,c
  8043  001682  D7F9               	goto	i1u393_25
  8044  001684  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8045  001688  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8046  00168C  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8047  001690  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8048  001694  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8049  001698  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8050                           
  8051                           ; BSR set to: 15
  8052                           ;CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8053  00169C  3862               	swapf	3938,w,c	;volatile
  8054  00169E  42E8               	rrncf	wreg,f,c
  8055  0016A0  0B07               	andlw	7
  8056  0016A2  0B07               	andlw	7
  8057  0016A4  6E0C               	movwf	CANreceiveMessage@tamp,c
  8058                           
  8059                           ; BSR set to: 15
  8060                           ;CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8061  0016A6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8062  0016AA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8063  0016AE  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8064  0016B2  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8065  0016B6  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8066  0016BA  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8067  0016BE  500C               	movf	CANreceiveMessage@tamp,w,c
  8068  0016C0  2403               	addwf	??_CANreceiveMessage,w,c
  8069  0016C2  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8070  0016C4  0E00               	movlw	0
  8071  0016C6  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8072  0016C8  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8073  0016CA  0E00               	movlw	0
  8074  0016CC  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8075  0016CE  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8076  0016D0  0E00               	movlw	0
  8077  0016D2  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8078  0016D4  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8079  0016D6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8080  0016DA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8081  0016DE  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8082  0016E2  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8083  0016E6  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8084  0016EA  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8085                           
  8086                           ;CANlib.h: 610: }
  8087  0016EE  D088               	goto	i1l3558
  8088  0016F0                     i1l3532:
  8089                           
  8090                           ; BSR set to: 15
  8091                           ;CANlib.h: 611: else
  8092                           ;CANlib.h: 612: {
  8093                           ;CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8094  0016F0  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8095  0016F4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8096  0016F6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8097  0016F8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8098  0016FA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8099  0016FE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8100  001702  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8101  001706  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8102  00170A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8103  00170E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8104                           
  8105                           ; BSR set to: 15
  8106                           ;CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8107  001712  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8108  001716  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8109  001718  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8110  00171A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8111  00171C  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8112  001720  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8113  001724  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8114  001728  6A03               	clrf	??_CANreceiveMessage,c
  8115  00172A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8116  00172E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8117  001732  5003               	movf	??_CANreceiveMessage,w,c
  8118  001734  26DE               	addwf	postinc2,f,c
  8119  001736  5004               	movf	??_CANreceiveMessage+1,w,c
  8120  001738  22DE               	addwfc	postinc2,f,c
  8121  00173A  5005               	movf	??_CANreceiveMessage+2,w,c
  8122  00173C  22DE               	addwfc	postinc2,f,c
  8123  00173E  5006               	movf	??_CANreceiveMessage+3,w,c
  8124  001740  22DE               	addwfc	postinc2,f,c
  8125                           
  8126                           ; BSR set to: 15
  8127                           ;CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8128  001742  A062               	btfss	3938,0,c	;volatile
  8129  001744  D00C               	goto	i1l3540
  8130                           
  8131                           ; BSR set to: 15
  8132                           ;CANlib.h: 617: msg->identifier |= 0x00010000;
  8133  001746  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8134  00174A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8135  00174E  0E00               	movlw	0
  8136  001750  12DE               	iorwf	postinc2,f,c
  8137  001752  0E00               	movlw	0
  8138  001754  12DE               	iorwf	postinc2,f,c
  8139  001756  0E01               	movlw	1
  8140  001758  12DE               	iorwf	postinc2,f,c
  8141  00175A  0E00               	movlw	0
  8142  00175C  12DE               	iorwf	postinc2,f,c
  8143  00175E                     i1l3540:
  8144                           
  8145                           ; BSR set to: 15
  8146                           ;CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8147  00175E  A262               	btfss	3938,1,c	;volatile
  8148  001760  D00C               	goto	i1l3544
  8149                           
  8150                           ; BSR set to: 15
  8151                           ;CANlib.h: 619: msg->identifier |= 0x00020000;
  8152  001762  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8153  001766  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8154  00176A  0E00               	movlw	0
  8155  00176C  12DE               	iorwf	postinc2,f,c
  8156  00176E  0E00               	movlw	0
  8157  001770  12DE               	iorwf	postinc2,f,c
  8158  001772  0E02               	movlw	2
  8159  001774  12DE               	iorwf	postinc2,f,c
  8160  001776  0E00               	movlw	0
  8161  001778  12DE               	iorwf	postinc2,f,c
  8162  00177A                     i1l3544:
  8163                           
  8164                           ; BSR set to: 15
  8165                           ;CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8166  00177A  AA62               	btfss	3938,5,c	;volatile
  8167  00177C  D00C               	goto	i1l3548
  8168                           
  8169                           ; BSR set to: 15
  8170                           ;CANlib.h: 621: msg->identifier |= 0x00040000;
  8171  00177E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8172  001782  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8173  001786  0E00               	movlw	0
  8174  001788  12DE               	iorwf	postinc2,f,c
  8175  00178A  0E00               	movlw	0
  8176  00178C  12DE               	iorwf	postinc2,f,c
  8177  00178E  0E04               	movlw	4
  8178  001790  12DE               	iorwf	postinc2,f,c
  8179  001792  0E00               	movlw	0
  8180  001794  12DE               	iorwf	postinc2,f,c
  8181  001796                     i1l3548:
  8182                           
  8183                           ; BSR set to: 15
  8184                           ;CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8185  001796  AC62               	btfss	3938,6,c	;volatile
  8186  001798  D00C               	goto	i1l3552
  8187                           
  8188                           ; BSR set to: 15
  8189                           ;CANlib.h: 623: msg->identifier |= 0x00080000;
  8190  00179A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8191  00179E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8192  0017A2  0E00               	movlw	0
  8193  0017A4  12DE               	iorwf	postinc2,f,c
  8194  0017A6  0E00               	movlw	0
  8195  0017A8  12DE               	iorwf	postinc2,f,c
  8196  0017AA  0E08               	movlw	8
  8197  0017AC  12DE               	iorwf	postinc2,f,c
  8198  0017AE  0E00               	movlw	0
  8199  0017B0  12DE               	iorwf	postinc2,f,c
  8200  0017B2                     i1l3552:
  8201                           
  8202                           ; BSR set to: 15
  8203                           ;CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8204  0017B2  AE62               	btfss	3938,7,c	;volatile
  8205  0017B4  D00C               	goto	i1l3556
  8206                           
  8207                           ; BSR set to: 15
  8208                           ;CANlib.h: 625: msg->identifier |= 0x00100000;
  8209  0017B6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8210  0017BA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8211  0017BE  0E00               	movlw	0
  8212  0017C0  12DE               	iorwf	postinc2,f,c
  8213  0017C2  0E00               	movlw	0
  8214  0017C4  12DE               	iorwf	postinc2,f,c
  8215  0017C6  0E10               	movlw	16
  8216  0017C8  12DE               	iorwf	postinc2,f,c
  8217  0017CA  0E00               	movlw	0
  8218  0017CC  12DE               	iorwf	postinc2,f,c
  8219  0017CE                     i1l3556:
  8220                           
  8221                           ; BSR set to: 15
  8222                           ;CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8223  0017CE  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8224  0017D2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8225  0017D4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8226  0017D6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8227  0017D8  0E15               	movlw	21
  8228  0017DA                     i1u399_25:
  8229  0017DA  90D8               	bcf	status,0,c
  8230  0017DC  3603               	rlcf	??_CANreceiveMessage,f,c
  8231  0017DE  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8232  0017E0  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8233  0017E2  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8234  0017E4  2EE8               	decfsz	wreg,f,c
  8235  0017E6  D7F9               	goto	i1u399_25
  8236  0017E8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8237  0017EC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8238  0017F0  5003               	movf	??_CANreceiveMessage,w,c
  8239  0017F2  12DE               	iorwf	postinc2,f,c
  8240  0017F4  5004               	movf	??_CANreceiveMessage+1,w,c
  8241  0017F6  12DE               	iorwf	postinc2,f,c
  8242  0017F8  5005               	movf	??_CANreceiveMessage+2,w,c
  8243  0017FA  12DE               	iorwf	postinc2,f,c
  8244  0017FC  5006               	movf	??_CANreceiveMessage+3,w,c
  8245  0017FE  12DE               	iorwf	postinc2,f,c
  8246  001800                     i1l3558:
  8247                           
  8248                           ; BSR set to: 15
  8249                           ;CANlib.h: 629: }
  8250                           ;CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8251  001800  9E60               	bcf	3936,7,c	;volatile
  8252                           
  8253                           ; BSR set to: 15
  8254                           ;CANlib.h: 632: return (error);
  8255                           ;	Return value of _CANreceiveMessage is never used
  8256  001802  0012               	return	
  8257  001804                     __end_of_CANreceiveMessage:
  8258                           	opt stack 0
  8259                           pclatu	equ	0xFFB
  8260                           pclath	equ	0xFFA
  8261                           tblptru	equ	0xFF8
  8262                           tblptrh	equ	0xFF7
  8263                           tblptrl	equ	0xFF6
  8264                           tablat	equ	0xFF5
  8265                           prodh	equ	0xFF4
  8266                           prodl	equ	0xFF3
  8267                           intcon	equ	0xFF2
  8268                           postinc0	equ	0xFEE
  8269                           fsr0h	equ	0xFEA
  8270                           fsr0l	equ	0xFE9
  8271                           wreg	equ	0xFE8
  8272                           indf1	equ	0xFE7
  8273                           postdec1	equ	0xFE5
  8274                           fsr1h	equ	0xFE2
  8275                           fsr1l	equ	0xFE1
  8276                           bsr	equ	0xFE0
  8277                           indf2	equ	0xFDF
  8278                           postinc2	equ	0xFDE
  8279                           postdec2	equ	0xFDD
  8280                           fsr2h	equ	0xFDA
  8281                           fsr2l	equ	0xFD9
  8282                           status	equ	0xFD8
  8283                           
  8284 ;; *************** function _CANisRxReady *****************
  8285 ;; Defined at:
  8286 ;;		line 1163 in file "CANlib.h"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;		None
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;		None
  8291 ;; Return value:  Size  Location     Type
  8292 ;;                  1    wreg      unsigned char 
  8293 ;; Registers used:
  8294 ;;		wreg, status,2
  8295 ;; Tracked objects:
  8296 ;;		On entry : 0/0
  8297 ;;		On exit  : 0/0
  8298 ;;		Unchanged: 0/0
  8299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8300 ;;      Params:         0       0       0       0
  8301 ;;      Locals:         1       0       0       0
  8302 ;;      Temps:          0       0       0       0
  8303 ;;      Totals:         1       0       0       0
  8304 ;;Total ram usage:        1 bytes
  8305 ;; Hardware stack levels used:    1
  8306 ;; This function calls:
  8307 ;;		Nothing
  8308 ;; This function is called by:
  8309 ;;		_ISR_bassa
  8310 ;; This function uses a non-reentrant model
  8311 ;;
  8312                           
  8313                           	psect	text22
  8314  002568                     __ptext22:
  8315                           	opt stack 0
  8316  002568                     _CANisRxReady:
  8317                           	opt stack 26
  8318                           
  8319                           ;CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8320                           
  8321                           ; BSR set to: 15
  8322                           ;incstack = 0
  8323  002568  0E01               	movlw	1
  8324  00256A  6E01               	movwf	_CANisRxReady$3002,c
  8325  00256C  BE60               	btfsc	3936,7,c	;volatile
  8326  00256E  D005               	goto	i1l563
  8327  002570  010F               	movlb	15	; () banked
  8328  002572  BF50               	btfsc	80,7,b	;volatile
  8329  002574  D002               	goto	i1l563
  8330                           
  8331                           ; BSR set to: 15
  8332  002576  0E00               	movlw	0
  8333  002578  6E01               	movwf	_CANisRxReady$3002,c
  8334  00257A                     i1l563:
  8335  00257A  5001               	movf	_CANisRxReady$3002,w,c
  8336  00257C  0012               	return	
  8337  00257E                     __end_of_CANisRxReady:
  8338                           	opt stack 0
  8339  0000                     pclatu	equ	0xFFB
  8340                           pclath	equ	0xFFA
  8341                           tblptru	equ	0xFF8
  8342                           tblptrh	equ	0xFF7
  8343                           tblptrl	equ	0xFF6
  8344                           tablat	equ	0xFF5
  8345                           prodh	equ	0xFF4
  8346                           prodl	equ	0xFF3
  8347                           intcon	equ	0xFF2
  8348                           postinc0	equ	0xFEE
  8349                           fsr0h	equ	0xFEA
  8350                           fsr0l	equ	0xFE9
  8351                           wreg	equ	0xFE8
  8352                           indf1	equ	0xFE7
  8353                           postdec1	equ	0xFE5
  8354                           fsr1h	equ	0xFE2
  8355                           fsr1l	equ	0xFE1
  8356                           bsr	equ	0xFE0
  8357                           indf2	equ	0xFDF
  8358                           postinc2	equ	0xFDE
  8359                           postdec2	equ	0xFDD
  8360                           fsr2h	equ	0xFDA
  8361                           fsr2l	equ	0xFD9
  8362                           status	equ	0xFD8
  8363                           pclatu	equ	0xFFB
  8364                           pclath	equ	0xFFA
  8365                           tblptru	equ	0xFF8
  8366                           tblptrh	equ	0xFF7
  8367                           tblptrl	equ	0xFF6
  8368                           tablat	equ	0xFF5
  8369                           prodh	equ	0xFF4
  8370                           prodl	equ	0xFF3
  8371                           intcon	equ	0xFF2
  8372                           postinc0	equ	0xFEE
  8373                           fsr0h	equ	0xFEA
  8374                           fsr0l	equ	0xFE9
  8375                           wreg	equ	0xFE8
  8376                           indf1	equ	0xFE7
  8377                           postdec1	equ	0xFE5
  8378                           fsr1h	equ	0xFE2
  8379                           fsr1l	equ	0xFE1
  8380                           bsr	equ	0xFE0
  8381                           indf2	equ	0xFDF
  8382                           postinc2	equ	0xFDE
  8383                           postdec2	equ	0xFDD
  8384                           fsr2h	equ	0xFDA
  8385                           fsr2l	equ	0xFD9
  8386                           status	equ	0xFD8
  8387                           
  8388                           	psect	rparam
  8389  0000                     pclatu	equ	0xFFB
  8390                           pclath	equ	0xFFA
  8391                           tblptru	equ	0xFF8
  8392                           tblptrh	equ	0xFF7
  8393                           tblptrl	equ	0xFF6
  8394                           tablat	equ	0xFF5
  8395                           prodh	equ	0xFF4
  8396                           prodl	equ	0xFF3
  8397                           intcon	equ	0xFF2
  8398                           postinc0	equ	0xFEE
  8399                           fsr0h	equ	0xFEA
  8400                           fsr0l	equ	0xFE9
  8401                           wreg	equ	0xFE8
  8402                           indf1	equ	0xFE7
  8403                           postdec1	equ	0xFE5
  8404                           fsr1h	equ	0xFE2
  8405                           fsr1l	equ	0xFE1
  8406                           bsr	equ	0xFE0
  8407                           indf2	equ	0xFDF
  8408                           postinc2	equ	0xFDE
  8409                           postdec2	equ	0xFDD
  8410                           fsr2h	equ	0xFDA
  8411                           fsr2l	equ	0xFD9
  8412                           status	equ	0xFD8
  8413                           
  8414                           	psect	temp
  8415  000041                     btemp:
  8416                           	opt stack 0
  8417  000041                     	ds	1
  8418  0000                     int$flags	set	btemp
  8419                           pclatu	equ	0xFFB
  8420                           pclath	equ	0xFFA
  8421                           tblptru	equ	0xFF8
  8422                           tblptrh	equ	0xFF7
  8423                           tblptrl	equ	0xFF6
  8424                           tablat	equ	0xFF5
  8425                           prodh	equ	0xFF4
  8426                           prodl	equ	0xFF3
  8427                           intcon	equ	0xFF2
  8428                           postinc0	equ	0xFEE
  8429                           fsr0h	equ	0xFEA
  8430                           fsr0l	equ	0xFE9
  8431                           wreg	equ	0xFE8
  8432                           indf1	equ	0xFE7
  8433                           postdec1	equ	0xFE5
  8434                           fsr1h	equ	0xFE2
  8435                           fsr1l	equ	0xFE1
  8436                           bsr	equ	0xFE0
  8437                           indf2	equ	0xFDF
  8438                           postinc2	equ	0xFDE
  8439                           postdec2	equ	0xFDD
  8440                           fsr2h	equ	0xFDA
  8441                           fsr2l	equ	0xFD9
  8442                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         95
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      64
    BANK0           160     30     105
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array_debug(BANK0[8]), data_array(BANK0[8]), 


Critical Paths under _main in COMRAM

    _send_data->_CANsendMessage
    _rampe->_CANsendMessage
    _rampe->_SetDCEPWM1
    _rampe->___lwdiv
    _rampe->_abs
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _rampe->_CANsendMessage
    _configurazione_iniziale->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   24126
                                             21 BANK0      9     9      0
                       _CANisTxReady
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                    _battery_measure
                    _can_interpreter
            _configurazione_iniziale
                           _delay_ms
                              _rampe
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    4005
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (1) _rampe                                                8     8      0    5171
                                             12 BANK0      8     8      0
                       _CANisTxReady
                     _CANsendMessage
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___lwdiv
                                _abs
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     130
                                             30 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     395
                                             30 COMRAM     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _SetDCEPWM1                                           6     4      2     253
                                             30 COMRAM     4     2      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    3981
                                             30 COMRAM     4     4      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    9402
                      _CANInitialize
                     _SetOutputEPWM1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     802
                                              2 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     386
                                             30 COMRAM     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _SetOutputEPWM1                                       2     1      1     388
                                             30 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                              9 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             30 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             30 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             30 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      44
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      22
                                             30 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           18    18      0    1251
                                             12 COMRAM    18    18      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   _battery_measure
   _can_interpreter
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _SetOutputEPWM1
     _delay_ms
       ___wmul
   _delay_ms
     ___wmul
   _rampe
     _CANisTxReady
     _CANsendMessage
     _SetDCEPWM1
     _SetOutputEPWM1
     ___lwdiv
     _abs
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1E      69       4       65.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     23      40       1       68.1%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A9       9        0.0%
DATA                 0      0      A9      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Mar 25 10:19:57 2016

            __end_of_CANSetFilter 0B84                                _id 0028  
                              bsr 000FE0               ___wmul@multiplicand 0021  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 2426  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000              _previousTimeCounter1 0078  
            _previousTimeCounter2 007C                               l400 1130  
                             l401 113A                               l500 0902  
                             l404 1244                               l501 0906  
                             l405 1248                               l510 09FE  
                             l502 0910                               l406 1254  
                             l511 0A08                               l503 0914  
                             l520 0B00                               l512 0A0C  
                             l504 091E                               l440 1A06  
                             l360 20B6                               l521 0B04  
                             l513 0A16                               l505 0922  
                             l441 1A0A                               l361 20C0  
                             l522 0B0E                               l514 0A1A  
                             l506 092C                               l450 1AFE  
                             l442 1A14                               l434 19DC  
                             l370 0C2E                               l523 0B12  
                             l515 0A24                               l451 1B08  
                             l435 19E0                               l371 0C38  
                             l524 0B1C                               l516 0A28  
                             l452 1B0C                               l436 19EA  
                             l380 107C                               l372 0C42  
                             l700 23D8                               l525 0B20  
                             l517 0A32                               l509 09FA  
                             l453 1B16                               l445 1ADE  
                             l437 19EE                               l381 0E16  
                             l365 0E00                               l710 227E  
                             l526 0B2A                               l470 0604  
                             l446 1AE2                               l438 19F8  
                             l390 0FC8                               l382 0E1A  
                             l366 0B9A                               l702 23D4  
                             l527 0B2E                               l471 060E  
                             l447 1AEC                               l439 19FC  
                             l391 0FCC                               l383 0F0E  
                             l375 0D4C                               l367 0B9E  
                             l528 0B38                               l480 0704  
                             l472 0612                               l448 1AF0  
                             l392 0FD8                               l384 0EA0  
                             l376 0D50                               l368 0C92  
                             l481 0708                               l473 061C  
                             l465 05E4                               l449 1AFA  
                             l385 0EAA                               l377 0D5C  
                             l369 0C24                               l490 0800  
                             l482 0712                               l466 05E8  
                             l386 0EB4                               l491 080A  
                             l483 0716                               l467 05F2  
                             l571 24CE                               l395 1092  
                             l387 0EBE                               l492 080E  
                             l484 0720                               l476 06E8  
                             l468 05F6                               l396 1096  
                             l493 0818                               l477 06EC  
                             l469 0600                               l397 118A  
                             l494 081C                               l478 06F6  
                             l750 2460                               l558 2548  
                             l398 111C                               l495 0826  
                             l487 07EE                               l479 06FA  
                             l399 1126                               l488 07F2  
                             l816 2524                               l489 07FC  
                             l498 08F4                               l674 1F4C  
                             l499 08F8                               l764 2562  
                             l765 2564                               l669 1F38  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                               _abs 2506  
                             _dir 003E                               _msg 008C  
                             prod 000FF3                               wreg 000FE8  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
                            ?_abs 001F                              l1173 2384  
                            l4010 1B1A                              l4106 04B0  
                            l4034 01F2                              l4220 082A  
                            l4124 0560                              l4052 02A0  
                            l4070 0350                              l4152 0620  
                            l4322 0B3C                              l4226 0870  
                            l3700 2218                              l4260 0976  
                            l3710 2250                              l4254 0930  
                            l4158 0666                              l3720 2274  
                            l4192 076A                              l4088 0400  
                            l3392 2452                              l4520 0FDC  
                            l4186 0724                              l4514 0FBC  
                            l4418 0C4C                              l4380 2110  
                            l4372 20AE                              l3388 2444  
                            l4444 0D60                              l4294 0A7C  
                            l4374 20C4                              l4438 0D40  
                            l4288 0A36                              l4632 234A  
                            l4378 20CC                              l4618 24C0  
                            l4570 1144                              l4634 2354  
                            l4644 2378                              l4636 2358  
                            l3694 21FA                              l3918 2584  
                            l4590 1238                              l4494 0EC8  
                            l4830 1DFA                              l3952 195E  
                            l3936 18B2                              l4744 1B62  
                            l4840 1E80                              l4770 1C72  
                            l4754 1BB0                              l4596 1258  
                            l4852 1EFC                              l4782 1D8E  
                            l4758 1BC2                              l4870 1F6E  
                            l4846 1E8A                              l4838 1E74  
                            l3984 1A5E                              l4784 1D9A  
                            l4872 1F70                              l3978 1A18  
                            l4778 1D48                              l4786 1DA2  
                            l4874 1F80                              l4798 23C8  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            _LATE 000F8D                              u5010 0640  
                            u5015 0634                              u4520 18E2  
                            u5410 0B5C                              u5330 0A56  
                            u5250 0950                              u5170 084A  
                            u5090 0744                              u4610 1A38  
                            u6050 1E6E                              u6140 1FEC  
                            u4525 18D6                              u5415 0B50  
                            u5335 0A4A                              u5255 0944  
                            u5175 083E                              u5095 0738  
                            u4615 1A2C                              u4535 193A  
                            u4800 02D4                              u4720 0176  
                            u4480 1836                              u6080 1EF8  
                            u5540 0C6A                              u4805 02C8  
                            u4725 016A                              u4485 182A  
                            u6157 24C2                              u5550 0CB4  
                            u4815 032C                              u4735 01CE  
                            u4495 188E                              u4920 04E4  
                            u4840 0384                              u4760 0224  
                            u5800 1162                              u5545 0C60  
                            u4690 1B3A                              u5810 11AC  
                            u5555 0CAA                              u4925 04D8  
                            u4845 0378                              u4765 0218  
                            u5805 1158                              u5565 0D14  
                            u5670 0EE6                              u4935 053C  
                            u4855 03DC                              u4775 027C  
                            u4695 1B2E                              u5815 11A2  
                            u4880 0434                              u5680 0F30  
                            u5825 120C                              u5675 0EDC  
                            u5940 1C60                              u4885 0428  
                            u5685 0F26                              u5950 1C90  
                            u4895 048C                              u5695 0F90  
                            u5960 1CF8                              u5865 2474  
                            u5980 1D7C                              _TMR2 000FCC  
             __size_of_CANSetMask 035E                              abs@a 001F  
                            _main 1DC0                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 0041  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 013A  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000010                  _CANOperationMode 257E  
          __end_of_SetOutputEPWM1 246A                             ??_abs 0021  
      __size_of_CANreceiveMessage 050C                             ?_main 0001  
                           _T2CON 000FCA                             _T3CON 000FB1  
                 __end_of___lwdiv 238E                             i1l412 1590  
                           i1l563 257A                             i1l660 00F2  
                           i1l652 00D6                             i1l654 0066  
                           i1l656 00D2                             i1l658 00D0  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
               _CANisRxReady$3002 0001                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                __size_of_ISR_bassa 0122  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                CANInitialize@flags 00B8  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           _vBatt 008A                             _rampe 1B62  
                  __pbitbssCOMRAM 01C0              __end_of_CANisRxReady 257E  
                           tablat 000FF5              __end_of_CANisTxReady 254C  
                           status 000FD8                    __CFG_PBADEN$ON 000000  
                      _SetDCEPWM1 246A                   __initialization 23DC  
        __size_of_battery_measure 0002                      __end_of_main 2002  
                 ?_SetOutputEPWM1 001F                            ??_main 00C0  
                   __activetblptr 000002                 _CANisTxReady$3000 001F  
                   _counter_array 0060                            _CANCON 000F6F  
                          ?_rampe 0001                   __CFG_BBSIZ$1024 000000  
                          i1l3540 175E                            i1l3532 16F0  
                          i1l3470 1470                            i1l3552 17B2  
                          i1l3544 177A                            i1l3490 153A  
                          i1l3482 14FE                            i1l3556 17CE  
                          i1l3548 1796                            i1l3812 00A8  
                          i1l3804 008C                            i1l3558 1800  
                          i1l3494 1558                            i1l3486 151C  
                          i1l3478 14E0                            i1l3496 158A  
                          i1l3808 00A0                        _OpenTimer2 254C  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 00AF                CANsendMessage@tamp 00B3  
                __end_of_delay_ms 24DC             __size_of_CANSetFilter 0A46  
                  __CFG_XINST$OFF 000000                __size_of_OpenEPWM1 0010  
               __end_of_ISR_bassa 013A                            ___wmul 24DC  
                  __CFG_STVREN$ON 000000                         ??___lwdiv 0023  
                    ??_CANSetMask 00AB                            _errore 0088  
                OpenTimer2@config 001F                            clear_0 23E2  
                          clear_1 23F2          ?_configurazione_iniziale 0001  
                 __CFG_BOREN$BOHW 000000                      __pdataCOMRAM 003A  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                      _CANSetFilter 013E  
                      __accesstop 0060           __end_of__initialization 2418  
              __end_of_CANSetMask 1B62                     ___rparam_used 000001  
                     ?_SetDCEPWM1 001F                    __pcstackCOMRAM 0001  
                   __end_of_rampe 1DC0                 ??_battery_measure 001F  
           CANSetFilter@numBuffer 00AF                   OpenEPWM1@period 001F  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 001E  
               __end_of_OpenEPWM1 25A0                           ??_rampe 00B7  
        __end_of_CANOperationMode 2590                        __pbssBANK0 0060  
                     ?_OpenTimer2 0001                        _data_array 009B  
         __size_of_CANsendMessage 0774          __size_of_can_interpreter 00CE  
                         ?___wmul 001F                __size_of_send_data 004E  
                    _CANisRxReady 2568                           _ECCPR1L 000FBB  
                         _CANSTAT 000F6E                      _CANisTxReady 252E  
                         _BRGCON1 000F70                           _BRGCON2 000F71  
                         _BRGCON3 000F72            __size_of_CANInitialize 01B2  
                       ?_delay_ms 00AD                           _RXB0DLC 000F65  
                         _RXB1DLC 000F55                           _RXB0CON 000F60  
             __size_of_SetDCEPWM1 003A                           _RXB1CON 000F50  
                         _TXB0DLC 000F45                           _TXB1DLC 000F35  
                         _TXB2DLC 000F25               CANsendMessage@flags 00B2  
                _data_array_debug 00A3          SetOutputEPWM1@outputmode 001F  
                      _correzione 0070                  ??_SetOutputEPWM1 0020  
                         __Hparam 0000                        _left_speed 0030  
                         __Lparam 0000                  delay_ms@value_ms 00AD  
                 __size_of___wmul 002A                           ___lwdiv 2330  
            CANInitialize@propSeg 00BD                           __pcinit 23DC  
                         __ramtop 0300               __size_of_OpenTimer2 001C  
                         __ptext0 1DC0                           __ptext1 238E  
                         __ptext2 1B62                           __ptext3 2506  
                         __ptext4 2330                           __ptext5 246A  
                         __ptext6 0B84                           __ptext7 252E  
                         __ptext8 2282                           __ptext9 24A4  
                       _T2CONbits 000FCA                      __size_of_abs 0028  
                         _current 0036                        _duty_cycle 0086  
                      ??_delay_ms 0023            CANreceiveMessage@error 000B  
            end_of_initialization 2418                 __end_of_send_data 23DC  
                   __Lmediumconst 0000                     _CANInitialize 2002  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
                       _ISR_bassa 0018                 ??_can_interpreter 001F  
                       _PORTAbits 000F80                    CANSetMask@mask 001F  
                       _PORTCbits 000F82                    CANSetMask@tamp 00B0  
                  _centralina_abs 01C1                    CANSetMask@type 0023  
                       _TRISDbits 000F95  __size_of_configurazione_iniziale 00AE  
             _previousTimeCounter 0074           _clock_counter_reference 0084  
                  _CANsendMessage 0B84                  CANInitialize@BRP 00B7  
                CANInitialize@SJW 00B6                    ?_CANInitialize 00B4  
                      main@period 00C8                      ??_SetDCEPWM1 0021  
                 _battery_measure 25A8                        ?_ISR_bassa 0001  
                  __end_of___wmul 2506                     __pidataCOMRAM 25A0  
             start_initialization 23DC                       __end_of_abs 252E  
              __end_of_SetDCEPWM1 24A4               CANSetMask@numBuffer 00AF  
          __end_of_CANsendMessage 12F8                 ?_CANOperationMode 0001  
                    ??_OpenTimer2 001F                         _OpenEPWM1 2590  
              ??_CANOperationMode 001F        CANInitialize@FilterConfig1 00BE  
      CANInitialize@FilterConfig2 00BF                          ??___wmul 0023  
                __CFG_LPT1OSC$OFF 000000                __end_of_OpenTimer2 2568  
          CANInitialize@phaseSeg1 00B4            CANInitialize@phaseSeg2 00B5  
                     __pbssCOMRAM 0024                     __pcstackBANK0 00AB  
                     _BRGCON2bits 000F71                       _BRGCON3bits 000F72  
             SetDCEPWM1@dutycycle 001F                 __size_of_delay_ms 0038  
                 ?_CANsendMessage 00AB                        ?_OpenEPWM1 0001  
         __end_of_battery_measure 25AA                   ??_CANInitialize 00B9  
                       _can_retry 01C0                      _currentSpeed 003A  
              CANSetFilter@filter 001F                  ___lwdiv@dividend 001F  
                        ?___lwdiv 001F                       ??_ISR_bassa 000D  
                     __pintcodelo 0018                          _ECCP1CON 000FBA  
                     _COMSTATbits 000F74        SetOutputEPWM1@outputconfig 0020  
                      ISR_bassa@i 001E                     _remote_frame1 01C7  
                ___lwdiv@quotient 00AC           _configurazione_iniziale 2282  
                  __size_of_rampe 025E                      _message_sent 01C4  
           CANreceiveMessage@tamp 000C                    ___wmul@product 00AB  
                 _can_interpreter 21B4                          _IPR2bits 000FA2  
    _delay_quartz_frequency_value 0040                          _PIE1bits 000F9D  
                        _IPR3bits 000FA5                          _PIE2bits 000FA0  
                       _send_data 238E                          _PIE3bits 000FA3  
                        i1u380_20 13DE                          i1u380_26 13E0  
                        i1u429_20 008A                          i1u390_20 1638  
                        i1u382_25 13F4                          i1u390_26 163A  
                        i1u391_20 1662                          i1u391_26 1664  
                        i1u393_25 1676                          i1u379_20 13B0  
                        i1u379_26 13B2                          i1u388_25 1564  
                        i1u399_25 17DA                          _PIR1bits 000F9E  
                        _PIR2bits 000FA1                          _PIR3bits 000FA4  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                        _RXB0SIDH 000F61                         _scrittura 0037  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
                        _TXERRCNT 000F76                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                        _ADCON2bits 000FC0  
               ___wmul@multiplier 001F                     ?_CANSetFilter 001F  
                       copy_data0 240C                        _CANCONbits 000F6F  
                     ??_OpenEPWM1 001F                  ?_battery_measure 0001  
                      ?_send_data 0001                          __Hrparam 0000  
                    _RXB0SIDLbits 000F62                  SetDCEPWM1@DCycle 00AB  
                        __Lrparam 0000                      _RXB1SIDLbits 000F52  
              _centralina_comando 01C2                        _CANSetMask 1804  
                __size_of___lwdiv 005E           __size_of_SetOutputEPWM1 0044  
              _currentSpeed_array 0068         ??_configurazione_iniziale 0024  
                    _RXF0SIDLbits 000F01                          _delay_ms 24A4  
                 ___lwdiv@divisor 0021                      _RXF1SIDLbits 000F05  
                 ___lwdiv@counter 00AB                    ??_CANSetFilter 00AB  
                        __ptext10 24DC                          __ptext11 2426  
                        __ptext12 2002                          __ptext21 12F8  
                        __ptext13 1804                          __ptext22 2568  
                        __ptext14 013E                          __ptext15 257E  
                        __ptext16 21B4                          __ptext17 25A8  
                        __ptext18 254C                          __ptext19 2590  
                    _RXF2SIDLbits 000F09           __end_of_can_interpreter 2282  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                   _speed_fetched 01C9                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 00B1                      _remote_frame 01C6  
                   __size_of_main 0242                          _duty_set 0024  
            CANreceiveMessage@msg 0001                      _TXB0SIDLbits 000F42  
                     _new_message 01C5                      _TXB1SIDLbits 000F32  
                    _TXB2SIDLbits 000F22                          int$flags 0041  
       __size_of_CANOperationMode 0012                     ?_CANisRxReady 0001  
                   ?_CANisTxReady 0001                       _RXB0DLCbits 000F65  
                     _RXB1DLCbits 000F55                      _RXM0SIDLbits 000F19  
                     _RXB0CONbits 000F60                       _RXB1CONbits 000F50  
               _CANreceiveMessage 12F8                      _RXM1SIDLbits 000F1D  
                      _INTCONbits 000FF2                  ??_CANsendMessage 001F  
                    _requestSpeed 002C                ?_CANreceiveMessage 0001  
                    _request_sent 01C8          CANsendMessage@identifier 00AB  
                        intlevel1 0000                 _centralina_sterzo 01C3  
                CANSetFilter@tamp 00B0                  CANSetFilter@type 0023  
             ??_CANreceiveMessage 0003                       _TXB0DLCbits 000F45  
                     _right_speed 0034                       _TXB1DLCbits 000F35  
                     _TXB0CONbits 000F40                       ??_send_data 0023  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 2330  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
                     _timeCounter 0080              CANOperationMode@mode 001F  
                  ??_CANisRxReady 0001                       ?_CANSetMask 001F  
                  ??_CANisTxReady 001F         __end_of_CANreceiveMessage 1804  
                ?_can_interpreter 0001                       _previousPwm 0032  
           __end_of_CANInitialize 21B4  
