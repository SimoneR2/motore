

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Jan 31 21:11:27 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataCOMRAM
    42  002682                     __pidataCOMRAM:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _dir
    46  002682  0001               	dw	1
    47                           
    48                           ;initializer for _duty_set
    49  002684  00C8               	dw	200
    50                           
    51                           ;initializer for _previousPwm
    52  002686  00C8               	dw	200
    53                           
    54                           ;initializer for _currentSpeed
    55  002688  01                 	db	1
    56                           
    57                           ;initializer for _delay_quartz_frequency_value
    58  002689  10                 	db	16
    59  0000                     _RXB1CON	set	3920
    60  0000                     _RXB1CONbits	set	3920
    61  0000                     _RXB1D0	set	3926
    62  0000                     _RXB1D1	set	3927
    63  0000                     _RXB1D2	set	3928
    64  0000                     _RXB1D3	set	3929
    65  0000                     _RXB1D4	set	3930
    66  0000                     _RXB1D5	set	3931
    67  0000                     _RXB1D6	set	3932
    68  0000                     _RXB1D7	set	3933
    69  0000                     _RXB1DLC	set	3925
    70  0000                     _RXB1DLCbits	set	3925
    71  0000                     _RXB1EIDH	set	3923
    72  0000                     _RXB1EIDL	set	3924
    73  0000                     _RXB1SIDH	set	3921
    74  0000                     _RXB1SIDL	set	3922
    75  0000                     _RXB1SIDLbits	set	3922
    76  0000                     _RXF0EIDH	set	3842
    77  0000                     _RXF0EIDL	set	3843
    78  0000                     _RXF0SIDH	set	3840
    79  0000                     _RXF0SIDL	set	3841
    80  0000                     _RXF0SIDLbits	set	3841
    81  0000                     _RXF1EIDH	set	3846
    82  0000                     _RXF1EIDL	set	3847
    83  0000                     _RXF1SIDH	set	3844
    84  0000                     _RXF1SIDL	set	3845
    85  0000                     _RXF1SIDLbits	set	3845
    86  0000                     _RXF2EIDH	set	3850
    87  0000                     _RXF2EIDL	set	3851
    88  0000                     _RXF2SIDH	set	3848
    89  0000                     _RXF2SIDL	set	3849
    90  0000                     _RXF2SIDLbits	set	3849
    91  0000                     _RXF3EIDH	set	3854
    92  0000                     _RXF3EIDL	set	3855
    93  0000                     _RXF3SIDH	set	3852
    94  0000                     _RXF3SIDL	set	3853
    95  0000                     _RXF3SIDLbits	set	3853
    96  0000                     _RXF4EIDH	set	3858
    97  0000                     _RXF4EIDL	set	3859
    98  0000                     _RXF4SIDH	set	3856
    99  0000                     _RXF4SIDL	set	3857
   100  0000                     _RXF4SIDLbits	set	3857
   101  0000                     _RXF5EIDH	set	3862
   102  0000                     _RXF5EIDL	set	3863
   103  0000                     _RXF5SIDH	set	3860
   104  0000                     _RXF5SIDL	set	3861
   105  0000                     _RXF5SIDLbits	set	3861
   106  0000                     _RXM0EIDH	set	3866
   107  0000                     _RXM0EIDL	set	3867
   108  0000                     _RXM0SIDH	set	3864
   109  0000                     _RXM0SIDL	set	3865
   110  0000                     _RXM0SIDLbits	set	3865
   111  0000                     _RXM1EIDH	set	3870
   112  0000                     _RXM1EIDL	set	3871
   113  0000                     _RXM1SIDH	set	3868
   114  0000                     _RXM1SIDL	set	3869
   115  0000                     _RXM1SIDLbits	set	3869
   116  0000                     _TXB0CONbits	set	3904
   117  0000                     _TXB0D0	set	3910
   118  0000                     _TXB0D1	set	3911
   119  0000                     _TXB0D2	set	3912
   120  0000                     _TXB0D3	set	3913
   121  0000                     _TXB0D4	set	3914
   122  0000                     _TXB0D5	set	3915
   123  0000                     _TXB0D6	set	3916
   124  0000                     _TXB0D7	set	3917
   125  0000                     _TXB0DLC	set	3909
   126  0000                     _TXB0DLCbits	set	3909
   127  0000                     _TXB0EIDH	set	3907
   128  0000                     _TXB0EIDL	set	3908
   129  0000                     _TXB0SIDH	set	3905
   130  0000                     _TXB0SIDL	set	3906
   131  0000                     _TXB0SIDLbits	set	3906
   132  0000                     _TXB1CONbits	set	3888
   133  0000                     _TXB1D0	set	3894
   134  0000                     _TXB1D1	set	3895
   135  0000                     _TXB1D2	set	3896
   136  0000                     _TXB1D3	set	3897
   137  0000                     _TXB1D4	set	3898
   138  0000                     _TXB1D5	set	3899
   139  0000                     _TXB1D6	set	3900
   140  0000                     _TXB1D7	set	3901
   141  0000                     _TXB1DLC	set	3893
   142  0000                     _TXB1DLCbits	set	3893
   143  0000                     _TXB1EIDH	set	3891
   144  0000                     _TXB1EIDL	set	3892
   145  0000                     _TXB1SIDH	set	3889
   146  0000                     _TXB1SIDL	set	3890
   147  0000                     _TXB1SIDLbits	set	3890
   148  0000                     _TXB2CONbits	set	3872
   149  0000                     _TXB2D0	set	3878
   150  0000                     _TXB2D1	set	3879
   151  0000                     _TXB2D2	set	3880
   152  0000                     _TXB2D3	set	3881
   153  0000                     _TXB2D4	set	3882
   154  0000                     _TXB2D5	set	3883
   155  0000                     _TXB2D6	set	3884
   156  0000                     _TXB2D7	set	3885
   157  0000                     _TXB2DLC	set	3877
   158  0000                     _TXB2DLCbits	set	3877
   159  0000                     _TXB2EIDH	set	3875
   160  0000                     _TXB2EIDL	set	3876
   161  0000                     _TXB2SIDH	set	3873
   162  0000                     _TXB2SIDL	set	3874
   163  0000                     _TXB2SIDLbits	set	3874
   164  0000                     _ADCON0bits	set	4034
   165  0000                     _ADCON1bits	set	4033
   166  0000                     _ADCON2bits	set	4032
   167  0000                     _ADRESH	set	4036
   168  0000                     _BRGCON1	set	3952
   169  0000                     _BRGCON2	set	3953
   170  0000                     _BRGCON2bits	set	3953
   171  0000                     _BRGCON3	set	3954
   172  0000                     _BRGCON3bits	set	3954
   173  0000                     _CANCON	set	3951
   174  0000                     _CANCONbits	set	3951
   175  0000                     _CANSTAT	set	3950
   176  0000                     _COMSTATbits	set	3956
   177  0000                     _ECCP1CON	set	4026
   178  0000                     _ECCPR1L	set	4027
   179  0000                     _INTCONbits	set	4082
   180  0000                     _IPR2bits	set	4002
   181  0000                     _IPR3bits	set	4005
   182  0000                     _LATA	set	3977
   183  0000                     _LATB	set	3978
   184  0000                     _LATC	set	3979
   185  0000                     _LATD	set	3980
   186  0000                     _LATE	set	3981
   187  0000                     _PIE1bits	set	3997
   188  0000                     _PIE2bits	set	4000
   189  0000                     _PIE3bits	set	4003
   190  0000                     _PIR1bits	set	3998
   191  0000                     _PIR2bits	set	4001
   192  0000                     _PIR3bits	set	4004
   193  0000                     _PORTAbits	set	3968
   194  0000                     _PORTCbits	set	3970
   195  0000                     _PR2	set	4043
   196  0000                     _RCONbits	set	4048
   197  0000                     _RXB0CON	set	3936
   198  0000                     _RXB0CONbits	set	3936
   199  0000                     _RXB0D0	set	3942
   200  0000                     _RXB0D1	set	3943
   201  0000                     _RXB0D2	set	3944
   202  0000                     _RXB0D3	set	3945
   203  0000                     _RXB0D4	set	3946
   204  0000                     _RXB0D5	set	3947
   205  0000                     _RXB0D6	set	3948
   206  0000                     _RXB0D7	set	3949
   207  0000                     _RXB0DLC	set	3941
   208  0000                     _RXB0DLCbits	set	3941
   209  0000                     _RXB0EIDH	set	3939
   210  0000                     _RXB0EIDL	set	3940
   211  0000                     _RXB0SIDH	set	3937
   212  0000                     _RXB0SIDL	set	3938
   213  0000                     _RXB0SIDLbits	set	3938
   214  0000                     _RXERRCNT	set	3957
   215  0000                     _T2CON	set	4042
   216  0000                     _T2CONbits	set	4042
   217  0000                     _T3CON	set	4017
   218  0000                     _TMR2	set	4044
   219  0000                     _TMR3H	set	4019
   220  0000                     _TMR3L	set	4018
   221  0000                     _TRISA	set	3986
   222  0000                     _TRISB	set	3987
   223  0000                     _TRISC	set	3988
   224  0000                     _TRISD	set	3989
   225  0000                     _TRISDbits	set	3989
   226  0000                     _TRISE	set	3990
   227  0000                     _TXERRCNT	set	3958
   228                           
   229                           ; #config settings
   230  0000                     
   231                           	psect	cinit
   232  00245A                     __pcinit:
   233                           	opt stack 0
   234  00245A                     start_initialization:
   235                           	opt stack 0
   236  00245A                     __initialization:
   237                           	opt stack 0
   238                           
   239                           ; Clear objects allocated to BANK0 (77 bytes)
   240  00245A  EE00  F060         	lfsr	0,__pbssBANK0
   241  00245E  0E4D               	movlw	77
   242  002460                     clear_0:
   243  002460  6AEE               	clrf	postinc0,c
   244  002462  06E8               	decf	wreg,f,c
   245  002464  E1FD               	bnz	clear_0
   246                           
   247                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   248  002466  6A39               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   249  002468  6A38               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   250                           
   251                           ; Clear objects allocated to COMRAM (19 bytes)
   252  00246A  EE00  F025         	lfsr	0,__pbssCOMRAM
   253  00246E  0E13               	movlw	19
   254  002470                     clear_1:
   255  002470  6AEE               	clrf	postinc0,c
   256  002472  06E8               	decf	wreg,f,c
   257  002474  E1FD               	bnz	clear_1
   258                           
   259                           ; Initialize objects allocated to COMRAM (8 bytes)
   260                           ; load TBLPTR registers with __pidataCOMRAM
   261  002476  0E82               	movlw	low __pidataCOMRAM
   262  002478  6EF6               	movwf	tblptrl,c
   263  00247A  0E26               	movlw	high __pidataCOMRAM
   264  00247C  6EF7               	movwf	tblptrh,c
   265  00247E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   266  002480  6EF8               	movwf	tblptru,c
   267  002482  EE00  F03A         	lfsr	0,__pdataCOMRAM
   268  002486  EE10 F008          	lfsr	1,8
   269  00248A                     copy_data0:
   270  00248A  0009               	tblrd		*+
   271  00248C  CFF5 FFEE          	movff	tablat,postinc0
   272  002490  50E5               	movf	postdec1,w,c
   273  002492  50E1               	movf	fsr1l,w,c
   274  002494  E1FA               	bnz	copy_data0
   275  002496                     end_of_initialization:
   276                           	opt stack 0
   277  002496                     __end_of__initialization:
   278                           	opt stack 0
   279  002496  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   280  002498  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   281  00249A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   282  00249C  6EF8               	movwf	tblptru,c
   283  00249E  0100               	movlb	0
   284  0024A0  EF31  F00C         	goto	_main	;jump to C main() function
   285                           tblptru	equ	0xFF8
   286                           tblptrh	equ	0xFF7
   287                           tblptrl	equ	0xFF6
   288                           tablat	equ	0xFF5
   289                           postinc0	equ	0xFEE
   290                           wreg	equ	0xFE8
   291                           postdec1	equ	0xFE5
   292                           fsr1l	equ	0xFE1
   293                           
   294                           	psect	bitbssCOMRAM
   295  0001C0                     __pbitbssCOMRAM:
   296                           	opt stack 0
   297  0001C0                     _can_retry:
   298                           	opt stack 0
   299  0001C0                     	ds	1
   300  0001C1                     _centralina_abs:
   301                           	opt stack 0
   302  0001C1                     	ds	1
   303  0001C2                     _centralina_comando:
   304                           	opt stack 0
   305  0001C2                     	ds	1
   306  0001C3                     _centralina_sterzo:
   307                           	opt stack 0
   308  0001C3                     	ds	1
   309  0001C4                     _message_sent:
   310                           	opt stack 0
   311  0001C4                     	ds	1
   312  0001C5                     _remote_frame:
   313                           	opt stack 0
   314  0001C5                     	ds	1
   315  0001C6                     _remote_frame1:
   316                           	opt stack 0
   317  0001C6                     	ds	1
   318  0001C7                     _request_sent:
   319                           	opt stack 0
   320  0001C7                     	ds	1
   321  0001C8                     _speed_fetched:
   322                           	opt stack 0
   323  0001C8                     	ds	1
   324                           tblptru	equ	0xFF8
   325                           tblptrh	equ	0xFF7
   326                           tblptrl	equ	0xFF6
   327                           tablat	equ	0xFF5
   328                           postinc0	equ	0xFEE
   329                           wreg	equ	0xFE8
   330                           postdec1	equ	0xFE5
   331                           fsr1l	equ	0xFE1
   332                           
   333                           	psect	bssCOMRAM
   334  000025                     __pbssCOMRAM:
   335                           	opt stack 0
   336  000025                     _id:
   337                           	opt stack 0
   338  000025                     	ds	4
   339  000029                     _timeCounter:
   340                           	opt stack 0
   341  000029                     	ds	4
   342  00002D                     _clock_counter_reference:
   343                           	opt stack 0
   344  00002D                     	ds	2
   345  00002F                     _correzione:
   346                           	opt stack 0
   347  00002F                     	ds	2
   348  000031                     _errore:
   349                           	opt stack 0
   350  000031                     	ds	2
   351  000033                     _vBatt:
   352                           	opt stack 0
   353  000033                     	ds	2
   354  000035                     _left_speed:
   355                           	opt stack 0
   356  000035                     	ds	1
   357  000036                     _requestSpeed:
   358                           	opt stack 0
   359  000036                     	ds	1
   360  000037                     _right_speed:
   361                           	opt stack 0
   362  000037                     	ds	1
   363                           tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           postdec1	equ	0xFE5
   370                           fsr1l	equ	0xFE1
   371                           
   372                           	psect	dataCOMRAM
   373  00003A                     __pdataCOMRAM:
   374                           	opt stack 0
   375  00003A                     _dir:
   376                           	opt stack 0
   377  00003A                     	ds	2
   378  00003C                     _duty_set:
   379                           	opt stack 0
   380  00003C                     	ds	2
   381  00003E                     _previousPwm:
   382                           	opt stack 0
   383  00003E                     	ds	2
   384  000040                     _currentSpeed:
   385                           	opt stack 0
   386  000040                     	ds	1
   387  000041                     _delay_quartz_frequency_value:
   388                           	opt stack 0
   389  000041                     	ds	1
   390                           tblptru	equ	0xFF8
   391                           tblptrh	equ	0xFF7
   392                           tblptrl	equ	0xFF6
   393                           tablat	equ	0xFF5
   394                           postinc0	equ	0xFEE
   395                           wreg	equ	0xFE8
   396                           postdec1	equ	0xFE5
   397                           fsr1l	equ	0xFE1
   398                           
   399                           	psect	bssBANK0
   400  000060                     __pbssBANK0:
   401                           	opt stack 0
   402  000060                     _counter_array:
   403                           	opt stack 0
   404  000060                     	ds	8
   405  000068                     _currentSpeed_array:
   406                           	opt stack 0
   407  000068                     	ds	8
   408  000070                     _counter:
   409                           	opt stack 0
   410  000070                     	ds	4
   411  000074                     _id1:
   412                           	opt stack 0
   413  000074                     	ds	4
   414  000078                     _previousTimeCounter:
   415                           	opt stack 0
   416  000078                     	ds	4
   417  00007C                     _previousTimeCounter1:
   418                           	opt stack 0
   419  00007C                     	ds	4
   420  000080                     _previousTimeCounter2:
   421                           	opt stack 0
   422  000080                     	ds	4
   423  000084                     _duty_cycle:
   424                           	opt stack 0
   425  000084                     	ds	2
   426  000086                     _msg:
   427                           	opt stack 0
   428  000086                     	ds	15
   429  000095                     _data_array:
   430                           	opt stack 0
   431  000095                     	ds	8
   432  00009D                     _data_array1:
   433                           	opt stack 0
   434  00009D                     	ds	8
   435  0000A5                     _data_array_debug:
   436                           	opt stack 0
   437  0000A5                     	ds	8
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           postdec1	equ	0xFE5
   445                           fsr1l	equ	0xFE1
   446                           
   447                           	psect	cstackBANK0
   448  0000AD                     __pcstackBANK0:
   449                           	opt stack 0
   450  0000AD                     ??_CANSetMask:
   451  0000AD                     ??_CANSetFilter:
   452  0000AD                     ___awdiv@counter:
   453                           	opt stack 0
   454  0000AD                     CANsendMessage@identifier:
   455                           	opt stack 0
   456                           
   457                           ; 4 bytes @ 0x0
   458  0000AD                     	ds	1
   459  0000AE                     ___awdiv@sign:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0x1
   463  0000AE                     	ds	1
   464  0000AF                     ___awdiv@quotient:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x2
   468  0000AF                     	ds	2
   469  0000B1                     ?___wmul:
   470                           	opt stack 0
   471  0000B1                     CANSetMask@numBuffer:
   472                           	opt stack 0
   473  0000B1                     CANSetFilter@numBuffer:
   474                           	opt stack 0
   475  0000B1                     CANsendMessage@data:
   476                           	opt stack 0
   477  0000B1                     ___wmul@multiplier:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x4
   481  0000B1                     	ds	1
   482  0000B2                     CANSetMask@tamp:
   483                           	opt stack 0
   484  0000B2                     CANSetFilter@tamp:
   485                           	opt stack 0
   486                           
   487                           ; 4 bytes @ 0x5
   488  0000B2                     	ds	1
   489  0000B3                     CANsendMessage@dataLength:
   490                           	opt stack 0
   491  0000B3                     ___wmul@multiplicand:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x6
   495  0000B3                     	ds	1
   496  0000B4                     CANsendMessage@flags:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x7
   500  0000B4                     	ds	1
   501  0000B5                     ?_abs:
   502                           	opt stack 0
   503  0000B5                     delay_ms@value_ms:
   504                           	opt stack 0
   505  0000B5                     abs@a:
   506                           	opt stack 0
   507  0000B5                     CANsendMessage@tamp:
   508                           	opt stack 0
   509                           
   510                           ; 4 bytes @ 0x8
   511  0000B5                     	ds	1
   512  0000B6                     CANInitialize@phaseSeg1:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x9
   516  0000B6                     	ds	1
   517  0000B7                     ??_abs:
   518  0000B7                     CANInitialize@phaseSeg2:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0xA
   522  0000B7                     	ds	1
   523  0000B8                     CANInitialize@SJW:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0xB
   527  0000B8                     	ds	1
   528  0000B9                     CANInitialize@BRP:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0xC
   532  0000B9                     	ds	1
   533  0000BA                     CANInitialize@flags:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0xD
   537  0000BA                     	ds	1
   538  0000BB                     ??_CANInitialize:
   539                           
   540                           ; 0 bytes @ 0xE
   541  0000BB                     	ds	4
   542  0000BF                     CANInitialize@propSeg:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x12
   546  0000BF                     	ds	1
   547  0000C0                     CANInitialize@FilterConfig1:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x13
   551  0000C0                     	ds	1
   552  0000C1                     CANInitialize@FilterConfig2:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x14
   556  0000C1                     	ds	1
   557  0000C2                     ??_main:
   558                           
   559                           ; 0 bytes @ 0x15
   560  0000C2                     	ds	8
   561                           tblptru	equ	0xFF8
   562                           tblptrh	equ	0xFF7
   563                           tblptrl	equ	0xFF6
   564                           tablat	equ	0xFF5
   565                           postinc0	equ	0xFEE
   566                           wreg	equ	0xFE8
   567                           postdec1	equ	0xFE5
   568                           fsr1l	equ	0xFE1
   569                           
   570                           	psect	cstackCOMRAM
   571  000001                     __pcstackCOMRAM:
   572                           	opt stack 0
   573  000001                     _CANisRxReady$2995:
   574                           	opt stack 0
   575  000001                     i1SetOutputEPWM1@outputmode:
   576                           	opt stack 0
   577  000001                     CANreceiveMessage@msg:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x0
   581  000001                     	ds	1
   582  000002                     i1SetOutputEPWM1@outputconfig:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x1
   586  000002                     	ds	1
   587  000003                     ??_CANreceiveMessage:
   588                           
   589                           ; 0 bytes @ 0x2
   590  000003                     	ds	8
   591  00000B                     CANreceiveMessage@error:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0xA
   595  00000B                     	ds	1
   596  00000C                     CANreceiveMessage@tamp:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0xB
   600  00000C                     	ds	1
   601  00000D                     ??_ISR_bassa:
   602                           
   603                           ; 0 bytes @ 0xC
   604  00000D                     	ds	17
   605  00001E                     ??_CANsendMessage:
   606  00001E                     ?___awdiv:
   607                           	opt stack 0
   608  00001E                     CANOperationMode@mode:
   609                           	opt stack 0
   610  00001E                     _CANisTxReady$2993:
   611                           	opt stack 0
   612  00001E                     OpenEPWM1@period:
   613                           	opt stack 0
   614  00001E                     SetOutputEPWM1@outputmode:
   615                           	opt stack 0
   616  00001E                     OpenTimer2@config:
   617                           	opt stack 0
   618  00001E                     SetDCEPWM1@dutycycle:
   619                           	opt stack 0
   620  00001E                     ___awdiv@dividend:
   621                           	opt stack 0
   622  00001E                     CANSetMask@mask:
   623                           	opt stack 0
   624  00001E                     CANSetFilter@filter:
   625                           	opt stack 0
   626                           
   627                           ; 4 bytes @ 0x1D
   628  00001E                     	ds	1
   629  00001F                     SetOutputEPWM1@outputconfig:
   630                           	opt stack 0
   631                           
   632                           ; 1 bytes @ 0x1E
   633  00001F                     	ds	1
   634  000020                     ??_SetDCEPWM1:
   635  000020                     ___awdiv@divisor:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x1F
   639  000020                     	ds	2
   640  000022                     CANSetMask@type:
   641                           	opt stack 0
   642  000022                     CANSetFilter@type:
   643                           	opt stack 0
   644  000022                     send_data@i:
   645                           	opt stack 0
   646  000022                     SetDCEPWM1@DCycle:
   647                           	opt stack 0
   648  000022                     ___wmul@product:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x21
   652  000022                     	ds	2
   653  000024                     main@period:
   654                           	opt stack 0
   655                           
   656                           ; 1 bytes @ 0x23
   657  000024                     	ds	1
   658                           tblptru	equ	0xFF8
   659                           tblptrh	equ	0xFF7
   660                           tblptrl	equ	0xFF6
   661                           tablat	equ	0xFF5
   662                           postinc0	equ	0xFEE
   663                           wreg	equ	0xFE8
   664                           postdec1	equ	0xFE5
   665                           fsr1l	equ	0xFE1
   666                           
   667 ;;
   668 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   669 ;;
   670 ;; *************** function _main *****************
   671 ;; Defined at:
   672 ;;		line 151 in file "motore.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;  period          1   35[COMRAM] unsigned char 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  2  668[None  ] int 
   679 ;; Registers used:
   680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   686 ;;      Params:         0       0       0       0
   687 ;;      Locals:         1       0       0       0
   688 ;;      Temps:          0       8       0       0
   689 ;;      Totals:         1       8       0       0
   690 ;;Total ram usage:        9 bytes
   691 ;; Hardware stack levels required when called:    5
   692 ;; This function calls:
   693 ;;		_CANisRXwarningON
   694 ;;		_CANisTXwarningON
   695 ;;		_CANsendMessage
   696 ;;		_OpenEPWM1
   697 ;;		_OpenTimer2
   698 ;;		_SetDCEPWM1
   699 ;;		_SetOutputEPWM1
   700 ;;		___awdiv
   701 ;;		___wmul
   702 ;;		_abs
   703 ;;		_battery_measure
   704 ;;		_configurazione_iniziale
   705 ;;		_delay_ms
   706 ;;		_send_data
   707 ;; This function is called by:
   708 ;;		Startup code after reset
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text0
   713  001862                     __ptext0:
   714                           	opt stack 0
   715  001862                     _main:
   716                           	opt stack 26
   717                           
   718                           ;motore.c: 152: unsigned char period;
   719                           ;motore.c: 153: configurazione_iniziale();
   720                           
   721                           ;incstack = 0
   722  001862  EC42  F011         	call	_configurazione_iniziale	;wreg free
   723                           
   724                           ;motore.c: 154: PORTAbits.RA1 = 1;
   725  001866  8280               	bsf	3968,1,c	;volatile
   726                           
   727                           ;motore.c: 155: PORTCbits.RC1 = 1;
   728  001868  8282               	bsf	3970,1,c	;volatile
   729                           
   730                           ;motore.c: 156: delay_ms(500);
   731  00186A  0E01               	movlw	1
   732  00186C  0100               	movlb	0	; () banked
   733  00186E  6FB6               	movwf	(delay_ms@value_ms+1)& (0+255),b
   734  001870  0EF4               	movlw	244
   735  001872  6FB5               	movwf	delay_ms@value_ms& (0+255),b
   736  001874  ECB3  F012         	call	_delay_ms	;wreg free
   737                           
   738                           ;motore.c: 157: PORTAbits.RA1 = 0;
   739  001878  9280               	bcf	3968,1,c	;volatile
   740                           
   741                           ;motore.c: 158: PORTCbits.RC1 = 0;
   742  00187A  9282               	bcf	3970,1,c	;volatile
   743                           
   744                           ;motore.c: 159: OpenTimer2(0b01111111 & 0b11111110 & 0b10000111);
   745  00187C  0E06               	movlw	6
   746  00187E  EC0B  F013         	call	_OpenTimer2
   747                           
   748                           ;motore.c: 160: period = 0xFE;
   749  001882  0EFE               	movlw	254
   750  001884  6E24               	movwf	main@period,c
   751                           
   752                           ;motore.c: 161: OpenEPWM1(period);
   753  001886  5024               	movf	main@period,w,c
   754  001888  EC2D  F013         	call	_OpenEPWM1
   755                           
   756                           ;motore.c: 162: speed_fetched = 1;
   757  00188C  8039               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   758                           
   759                           ;motore.c: 163: SetOutputEPWM1(0b01111111, 0b11111100);
   760  00188E  0EFC               	movlw	252
   761  001890  6E1E               	movwf	SetOutputEPWM1@outputmode,c
   762  001892  0E7F               	movlw	127
   763  001894  EC52  F012         	call	_SetOutputEPWM1
   764                           
   765                           ;motore.c: 164: SetDCEPWM1 (300);
   766  001898  0E01               	movlw	1
   767  00189A  6E1F               	movwf	SetDCEPWM1@dutycycle+1,c
   768  00189C  0E2C               	movlw	44
   769  00189E  6E1E               	movwf	SetDCEPWM1@dutycycle,c
   770  0018A0  EC96  F012         	call	_SetDCEPWM1	;wreg free
   771                           
   772                           ;motore.c: 165: delay_ms(500);
   773  0018A4  0E01               	movlw	1
   774  0018A6  0100               	movlb	0	; () banked
   775  0018A8  6FB6               	movwf	(delay_ms@value_ms+1)& (0+255),b
   776  0018AA  0EF4               	movlw	244
   777  0018AC  6FB5               	movwf	delay_ms@value_ms& (0+255),b
   778  0018AE  ECB3  F012         	call	_delay_ms	;wreg free
   779  0018B2                     l669:
   780                           
   781                           ;motore.c: 173: if ((timeCounter - previousTimeCounter1 >= 15)) {
   782  0018B2  C07C  F0C2         	movff	_previousTimeCounter1,??_main
   783  0018B6  C07D  F0C3         	movff	_previousTimeCounter1+1,??_main+1
   784  0018BA  C07E  F0C4         	movff	_previousTimeCounter1+2,??_main+2
   785  0018BE  C07F  F0C5         	movff	_previousTimeCounter1+3,??_main+3
   786  0018C2  0100               	movlb	0	; () banked
   787  0018C4  1FC2               	comf	??_main& (0+255),f,b
   788  0018C6  1FC3               	comf	(??_main+1)& (0+255),f,b
   789  0018C8  1FC4               	comf	(??_main+2)& (0+255),f,b
   790  0018CA  1FC5               	comf	(??_main+3)& (0+255),f,b
   791  0018CC  2BC2               	incf	??_main& (0+255),f,b
   792  0018CE  0E00               	movlw	0
   793  0018D0  23C3               	addwfc	(??_main+1)& (0+255),f,b
   794  0018D2  23C4               	addwfc	(??_main+2)& (0+255),f,b
   795  0018D4  23C5               	addwfc	(??_main+3)& (0+255),f,b
   796  0018D6  5029               	movf	_timeCounter,w,c
   797  0018D8  0100               	movlb	0	; () banked
   798  0018DA  25C2               	addwf	??_main& (0+255),w,b
   799  0018DC  0100               	movlb	0	; () banked
   800  0018DE  6FC6               	movwf	(??_main+4)& (0+255),b
   801  0018E0  502A               	movf	_timeCounter+1,w,c
   802  0018E2  0100               	movlb	0	; () banked
   803  0018E4  21C3               	addwfc	(??_main+1)& (0+255),w,b
   804  0018E6  0100               	movlb	0	; () banked
   805  0018E8  6FC7               	movwf	(??_main+5)& (0+255),b
   806  0018EA  502B               	movf	_timeCounter+2,w,c
   807  0018EC  0100               	movlb	0	; () banked
   808  0018EE  21C4               	addwfc	(??_main+2)& (0+255),w,b
   809  0018F0  0100               	movlb	0	; () banked
   810  0018F2  6FC8               	movwf	(??_main+6)& (0+255),b
   811  0018F4  502C               	movf	_timeCounter+3,w,c
   812  0018F6  0100               	movlb	0	; () banked
   813  0018F8  21C5               	addwfc	(??_main+3)& (0+255),w,b
   814  0018FA  0100               	movlb	0	; () banked
   815  0018FC  6FC9               	movwf	(??_main+7)& (0+255),b
   816  0018FE  0100               	movlb	0	; () banked
   817  001900  51C9               	movf	(??_main+7)& (0+255),w,b
   818  001902  0100               	movlb	0	; () banked
   819  001904  11C8               	iorwf	(??_main+6)& (0+255),w,b
   820  001906  0100               	movlb	0	; () banked
   821  001908  11C7               	iorwf	(??_main+5)& (0+255),w,b
   822  00190A  E105               	bnz	u6310
   823  00190C  0E0F               	movlw	15
   824  00190E  0100               	movlb	0	; () banked
   825  001910  5DC6               	subwf	(??_main+4)& (0+255),w,b
   826  001912  A0D8               	btfss	status,0,c
   827  001914  D0E6               	goto	l4934
   828  001916                     u6310:
   829                           
   830                           ; BSR set to: 0
   831                           ;motore.c: 175: CANsendMessage(0b00000000000000000000000000110, data_array_debug, 8, CAN
      +                          _CONFIG_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   832  001916  0E06               	movlw	6
   833  001918  0100               	movlb	0	; () banked
   834  00191A  6FAD               	movwf	CANsendMessage@identifier& (0+255),b
   835  00191C  0E00               	movlw	0
   836  00191E  6FAE               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   837  001920  0E00               	movlw	0
   838  001922  6FAF               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   839  001924  0E00               	movlw	0
   840  001926  6FB0               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   841  001928  0EA5               	movlw	low _data_array_debug
   842  00192A  0100               	movlb	0	; () banked
   843  00192C  6FB1               	movwf	CANsendMessage@data& (0+255),b
   844  00192E  0E00               	movlw	high _data_array_debug
   845  001930  0100               	movlb	0	; () banked
   846  001932  6FB2               	movwf	(CANsendMessage@data+1)& (0+255),b
   847  001934  0E08               	movlw	8
   848  001936  0100               	movlb	0	; () banked
   849  001938  6FB3               	movwf	CANsendMessage@dataLength& (0+255),b
   850  00193A  0EFC               	movlw	252
   851  00193C  0100               	movlb	0	; () banked
   852  00193E  6FB4               	movwf	CANsendMessage@flags& (0+255),b
   853  001940  ECF1  F005         	call	_CANsendMessage	;wreg free
   854                           
   855                           ;motore.c: 176: if (speed_fetched == 1) {
   856  001944  A039               	btfss	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   857  001946  D0BF               	goto	l671
   858                           
   859                           ;motore.c: 177: PORTCbits.RC1 = ~PORTCbits.RC1;
   860  001948  A282               	btfss	3970,1,c	;volatile
   861  00194A  D002               	goto	u6330
   862  00194C  0E01               	movlw	1
   863  00194E  D001               	goto	u6336
   864  001950                     u6330:
   865  001950  0E00               	movlw	0
   866  001952                     u6336:
   867  001952  0AFF               	xorlw	255
   868  001954  0100               	movlb	0	; () banked
   869  001956  6FC2               	movwf	??_main& (0+255),b
   870  001958  0100               	movlb	0	; () banked
   871  00195A  47C2               	rlncf	??_main& (0+255),f,b
   872  00195C  5082               	movf	3970,w,c	;volatile
   873  00195E  0100               	movlb	0	; () banked
   874  001960  19C2               	xorwf	??_main& (0+255),w,b
   875  001962  0BFD               	andlw	-3
   876  001964  19C2               	xorwf	??_main& (0+255),w,b
   877  001966  6E82               	movwf	3970,c	;volatile
   878                           
   879                           ; BSR set to: 0
   880                           ;motore.c: 178: speed_fetched = 0;
   881  001968  9039               	bcf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
   882                           
   883                           ; BSR set to: 0
   884                           ;motore.c: 179: currentSpeed = ((left_speed + right_speed) / 2);
   885  00196A  5035               	movf	_left_speed,w,c
   886  00196C  2437               	addwf	_right_speed,w,c
   887  00196E  6E1E               	movwf	___awdiv@dividend,c
   888  001970  6A1F               	clrf	___awdiv@dividend+1,c
   889  001972  361F               	rlcf	___awdiv@dividend+1,f,c
   890  001974  0E00               	movlw	0
   891  001976  6E21               	movwf	___awdiv@divisor+1,c
   892  001978  0E02               	movlw	2
   893  00197A  6E20               	movwf	___awdiv@divisor,c
   894  00197C  EC99  F011         	call	___awdiv	;wreg free
   895  001980  501E               	movf	?___awdiv,w,c
   896  001982  6E40               	movwf	_currentSpeed,c	;volatile
   897                           
   898                           ;motore.c: 181: requestSpeed = 25;
   899  001984  0E19               	movlw	25
   900  001986  6E36               	movwf	_requestSpeed,c	;volatile
   901                           
   902                           ;motore.c: 183: errore = abs((currentSpeed - requestSpeed)*10);
   903  001988  5036               	movf	_requestSpeed,w,c	;volatile
   904  00198A  0100               	movlb	0	; () banked
   905  00198C  6FC2               	movwf	??_main& (0+255),b
   906  00198E  6BC3               	clrf	(??_main+1)& (0+255),b
   907  001990  0100               	movlb	0	; () banked
   908  001992  1FC2               	comf	??_main& (0+255),f,b
   909  001994  1FC3               	comf	(??_main+1)& (0+255),f,b
   910  001996  4BC2               	infsnz	??_main& (0+255),f,b
   911  001998  2BC3               	incf	(??_main+1)& (0+255),f,b
   912  00199A  5040               	movf	_currentSpeed,w,c	;volatile
   913  00199C  0100               	movlb	0	; () banked
   914  00199E  25C2               	addwf	??_main& (0+255),w,b
   915  0019A0  0100               	movlb	0	; () banked
   916  0019A2  6FB1               	movwf	___wmul@multiplier& (0+255),b
   917  0019A4  0E00               	movlw	0
   918  0019A6  0100               	movlb	0	; () banked
   919  0019A8  21C3               	addwfc	(??_main+1)& (0+255),w,b
   920  0019AA  0100               	movlb	0	; () banked
   921  0019AC  6FB2               	movwf	(___wmul@multiplier+1)& (0+255),b
   922  0019AE  0E00               	movlw	0
   923  0019B0  0100               	movlb	0	; () banked
   924  0019B2  6FB4               	movwf	(___wmul@multiplicand+1)& (0+255),b
   925  0019B4  0E0A               	movlw	10
   926  0019B6  6FB3               	movwf	___wmul@multiplicand& (0+255),b
   927  0019B8  ECCD  F012         	call	___wmul	;wreg free
   928  0019BC  C0B1  F0B5         	movff	?___wmul,abs@a
   929  0019C0  C0B2  F0B6         	movff	?___wmul+1,abs@a+1
   930  0019C4  ECE6  F012         	call	_abs	;wreg free
   931  0019C8  C0B5  F031         	movff	?_abs,_errore
   932  0019CC  C0B6  F032         	movff	?_abs+1,_errore+1
   933                           
   934                           ;motore.c: 184: correzione = ((errore / 17)*(errore / 17))*2;
   935  0019D0  0E00               	movlw	0
   936  0019D2  6E21               	movwf	___awdiv@divisor+1,c
   937  0019D4  0E11               	movlw	17
   938  0019D6  6E20               	movwf	___awdiv@divisor,c
   939  0019D8  C031  F01E         	movff	_errore,___awdiv@dividend
   940  0019DC  C032  F01F         	movff	_errore+1,___awdiv@dividend+1
   941  0019E0  EC99  F011         	call	___awdiv	;wreg free
   942  0019E4  C01E  F0B1         	movff	?___awdiv,___wmul@multiplier
   943  0019E8  C01F  F0B2         	movff	?___awdiv+1,___wmul@multiplier+1
   944  0019EC  0E00               	movlw	0
   945  0019EE  6E21               	movwf	___awdiv@divisor+1,c
   946  0019F0  0E11               	movlw	17
   947  0019F2  6E20               	movwf	___awdiv@divisor,c
   948  0019F4  C031  F01E         	movff	_errore,___awdiv@dividend
   949  0019F8  C032  F01F         	movff	_errore+1,___awdiv@dividend+1
   950  0019FC  EC99  F011         	call	___awdiv	;wreg free
   951  001A00  C01E  F0B3         	movff	?___awdiv,___wmul@multiplicand
   952  001A04  C01F  F0B4         	movff	?___awdiv+1,___wmul@multiplicand+1
   953  001A08  ECCD  F012         	call	___wmul	;wreg free
   954  001A0C  90D8               	bcf	status,0,c
   955  001A0E  0100               	movlb	0	; () banked
   956  001A10  35B1               	rlcf	?___wmul& (0+255),w,b
   957  001A12  6E2F               	movwf	_correzione,c
   958  001A14  0100               	movlb	0	; () banked
   959  001A16  35B2               	rlcf	(?___wmul+1)& (0+255),w,b
   960  001A18  6E30               	movwf	_correzione+1,c
   961                           
   962                           ; BSR set to: 0
   963                           ;motore.c: 185: if (correzione > 3) {
   964  001A1A  5030               	movf	_correzione+1,w,c
   965  001A1C  E104               	bnz	u6340
   966  001A1E  0E04               	movlw	4
   967  001A20  5C2F               	subwf	_correzione,w,c
   968  001A22  A0D8               	btfss	status,0,c
   969  001A24  D048               	goto	l672
   970  001A26                     u6340:
   971                           
   972                           ; BSR set to: 0
   973                           ;motore.c: 187: if ((currentSpeed - requestSpeed) > 0) {
   974  001A26  5036               	movf	_requestSpeed,w,c	;volatile
   975  001A28  0100               	movlb	0	; () banked
   976  001A2A  6FC2               	movwf	??_main& (0+255),b
   977  001A2C  6BC3               	clrf	(??_main+1)& (0+255),b
   978  001A2E  0100               	movlb	0	; () banked
   979  001A30  1FC2               	comf	??_main& (0+255),f,b
   980  001A32  1FC3               	comf	(??_main+1)& (0+255),f,b
   981  001A34  4BC2               	infsnz	??_main& (0+255),f,b
   982  001A36  2BC3               	incf	(??_main+1)& (0+255),f,b
   983  001A38  5040               	movf	_currentSpeed,w,c	;volatile
   984  001A3A  0100               	movlb	0	; () banked
   985  001A3C  6FC4               	movwf	(??_main+2)& (0+255),b
   986  001A3E  6BC5               	clrf	(??_main+3)& (0+255),b
   987  001A40  0100               	movlb	0	; () banked
   988  001A42  51C2               	movf	??_main& (0+255),w,b
   989  001A44  0100               	movlb	0	; () banked
   990  001A46  27C4               	addwf	(??_main+2)& (0+255),f,b
   991  001A48  0100               	movlb	0	; () banked
   992  001A4A  51C3               	movf	(??_main+1)& (0+255),w,b
   993  001A4C  0100               	movlb	0	; () banked
   994  001A4E  23C5               	addwfc	(??_main+3)& (0+255),f,b
   995  001A50  0100               	movlb	0	; () banked
   996  001A52  BFC5               	btfsc	(??_main+3)& (0+255),7,b
   997  001A54  D01F               	goto	l4928
   998  001A56  0100               	movlb	0	; () banked
   999  001A58  51C5               	movf	(??_main+3)& (0+255),w,b
  1000  001A5A  E104               	bnz	u6350
  1001  001A5C  0100               	movlb	0	; () banked
  1002  001A5E  05C4               	decf	(??_main+2)& (0+255),w,b
  1003  001A60  A0D8               	btfss	status,0,c
  1004  001A62  D018               	goto	l4928
  1005  001A64                     u6350:
  1006                           
  1007                           ; BSR set to: 0
  1008                           ;motore.c: 188: duty_set = previousPwm - correzione;
  1009  001A64  C02F  F0C2         	movff	_correzione,??_main
  1010  001A68  C030  F0C3         	movff	_correzione+1,??_main+1
  1011  001A6C  0100               	movlb	0	; () banked
  1012  001A6E  1FC2               	comf	??_main& (0+255),f,b
  1013  001A70  1FC3               	comf	(??_main+1)& (0+255),f,b
  1014  001A72  4BC2               	infsnz	??_main& (0+255),f,b
  1015  001A74  2BC3               	incf	(??_main+1)& (0+255),f,b
  1016  001A76  503E               	movf	_previousPwm,w,c
  1017  001A78  0100               	movlb	0	; () banked
  1018  001A7A  25C2               	addwf	??_main& (0+255),w,b
  1019  001A7C  6E3C               	movwf	_duty_set,c
  1020  001A7E  503F               	movf	_previousPwm+1,w,c
  1021  001A80  0100               	movlb	0	; () banked
  1022  001A82  21C3               	addwfc	(??_main+1)& (0+255),w,b
  1023  001A84  6E3D               	movwf	_duty_set+1,c
  1024                           
  1025                           ;motore.c: 189: if (duty_set < 0) {
  1026  001A86  AE3D               	btfss	_duty_set+1,7,c
  1027  001A88  D01A               	goto	l677
  1028                           
  1029                           ; BSR set to: 0
  1030                           ;motore.c: 190: duty_set = 0;
  1031  001A8A  0E00               	movlw	0
  1032  001A8C  6E3D               	movwf	_duty_set+1,c
  1033  001A8E  0E00               	movlw	0
  1034  001A90  6E3C               	movwf	_duty_set,c
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;motore.c: 191: }
  1038                           ;motore.c: 192: }
  1039  001A92  D015               	goto	l677
  1040  001A94                     l4928:
  1041                           
  1042                           ; BSR set to: 0
  1043                           ;motore.c: 193: else {
  1044                           ;motore.c: 194: duty_set = previousPwm + correzione;
  1045  001A94  502F               	movf	_correzione,w,c
  1046  001A96  243E               	addwf	_previousPwm,w,c
  1047  001A98  6E3C               	movwf	_duty_set,c
  1048  001A9A  5030               	movf	_correzione+1,w,c
  1049  001A9C  203F               	addwfc	_previousPwm+1,w,c
  1050  001A9E  6E3D               	movwf	_duty_set+1,c
  1051                           
  1052                           ;motore.c: 195: if (duty_set > 1024){
  1053  001AA0  BE3D               	btfsc	_duty_set+1,7,c
  1054  001AA2  D00D               	goto	l677
  1055  001AA4  043C               	decf	_duty_set,w,c
  1056  001AA6  0E04               	movlw	4
  1057  001AA8  583D               	subwfb	_duty_set+1,w,c
  1058  001AAA  A0D8               	btfss	status,0,c
  1059  001AAC  D008               	goto	l677
  1060                           
  1061                           ; BSR set to: 0
  1062                           ;motore.c: 196: duty_set = 1023;
  1063  001AAE  0E03               	movlw	3
  1064  001AB0  6E3D               	movwf	_duty_set+1,c
  1065  001AB2  683C               	setf	_duty_set,c
  1066                           
  1067                           ; BSR set to: 0
  1068                           ;motore.c: 197: }
  1069                           ;motore.c: 198: }
  1070                           ;motore.c: 200: }
  1071                           
  1072                           ; BSR set to: 0
  1073  001AB4  D004               	goto	l677
  1074  001AB6                     l672:
  1075                           
  1076                           ; BSR set to: 0
  1077                           ;motore.c: 201: else {
  1078                           ;motore.c: 202: duty_set = previousPwm;
  1079  001AB6  C03E  F03C         	movff	_previousPwm,_duty_set
  1080  001ABA  C03F  F03D         	movff	_previousPwm+1,_duty_set+1
  1081  001ABE                     l677:
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;motore.c: 203: }
  1085                           ;motore.c: 204: previousPwm = duty_set;
  1086  001ABE  C03C  F03E         	movff	_duty_set,_previousPwm
  1087  001AC2  C03D  F03F         	movff	_duty_set+1,_previousPwm+1
  1088  001AC6                     l671:
  1089                           
  1090                           ;motore.c: 205: }
  1091                           ;motore.c: 206: previousTimeCounter1 = timeCounter;
  1092  001AC6  C029  F07C         	movff	_timeCounter,_previousTimeCounter1
  1093  001ACA  C02A  F07D         	movff	_timeCounter+1,_previousTimeCounter1+1
  1094  001ACE  C02B  F07E         	movff	_timeCounter+2,_previousTimeCounter1+2
  1095  001AD2  C02C  F07F         	movff	_timeCounter+3,_previousTimeCounter1+3
  1096                           
  1097                           ;motore.c: 207: SetDCEPWM1(duty_set);
  1098  001AD6  C03C  F01E         	movff	_duty_set,SetDCEPWM1@dutycycle
  1099  001ADA  C03D  F01F         	movff	_duty_set+1,SetDCEPWM1@dutycycle+1
  1100  001ADE  EC96  F012         	call	_SetDCEPWM1	;wreg free
  1101  001AE2                     l4934:
  1102                           
  1103                           ;motore.c: 208: }
  1104                           ;motore.c: 210: if ((remote_frame == 1) || (can_retry == 1)) {
  1105  001AE2  AA38               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1106  001AE4  B038               	btfsc	_can_retry/(0+8),_can_retry& (0+7),c
  1107  001AE6  D001               	goto	l4938
  1108  001AE8  D002               	goto	l4940
  1109  001AEA                     l4938:
  1110                           
  1111                           ;motore.c: 211: send_data();
  1112  001AEA  ECC4  F010         	call	_send_data	;wreg free
  1113  001AEE                     l4940:
  1114                           
  1115                           ;motore.c: 212: }
  1116                           ;motore.c: 213: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
  1117  001AEE  EC35  F013         	call	_CANisTXwarningON	;wreg free
  1118  001AF2  06E8               	decf	wreg,f,c
  1119  001AF4  B4D8               	btfsc	status,2,c
  1120  001AF6  D005               	goto	l683
  1121  001AF8  EC3B  F013         	call	_CANisRXwarningON	;wreg free
  1122  001AFC  06E8               	decf	wreg,f,c
  1123  001AFE  A4D8               	btfss	status,2,c
  1124  001B00  D014               	goto	l681
  1125  001B02                     l683:
  1126                           
  1127                           ;motore.c: 215: PORTAbits.RA1 = 1;
  1128  001B02  8280               	bsf	3968,1,c	;volatile
  1129                           
  1130                           ;motore.c: 216: delay_ms(200);
  1131  001B04  0E00               	movlw	0
  1132  001B06  0100               	movlb	0	; () banked
  1133  001B08  6FB6               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1134  001B0A  0EC8               	movlw	200
  1135  001B0C  6FB5               	movwf	delay_ms@value_ms& (0+255),b
  1136  001B0E  ECB3  F012         	call	_delay_ms	;wreg free
  1137                           
  1138                           ;motore.c: 217: PORTAbits.RA1 = 0;
  1139  001B12  9280               	bcf	3968,1,c	;volatile
  1140                           
  1141                           ;motore.c: 218: delay_ms(200);
  1142  001B14  0E00               	movlw	0
  1143  001B16  0100               	movlb	0	; () banked
  1144  001B18  6FB6               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1145  001B1A  0EC8               	movlw	200
  1146  001B1C  6FB5               	movwf	delay_ms@value_ms& (0+255),b
  1147  001B1E  ECB3  F012         	call	_delay_ms	;wreg free
  1148                           
  1149                           ;motore.c: 219: PORTAbits.RA1 = 1;
  1150  001B22  8280               	bsf	3968,1,c	;volatile
  1151                           
  1152                           ;motore.c: 220: COMSTATbits.TXWARN = 0;
  1153  001B24  9474               	bcf	3956,2,c	;volatile
  1154                           
  1155                           ;motore.c: 221: COMSTATbits.RXWARN = 0;
  1156  001B26  9274               	bcf	3956,1,c	;volatile
  1157                           
  1158                           ;motore.c: 222: } else {
  1159  001B28  D001               	goto	l4954
  1160  001B2A                     l681:
  1161                           
  1162                           ;motore.c: 223: PORTAbits.RA1 = 0;
  1163  001B2A  9280               	bcf	3968,1,c	;volatile
  1164  001B2C                     l4954:
  1165                           
  1166                           ;motore.c: 224: }
  1167                           ;motore.c: 227: if ((timeCounter - previousTimeCounter) > 500) {
  1168  001B2C  C078  F0C2         	movff	_previousTimeCounter,??_main
  1169  001B30  C079  F0C3         	movff	_previousTimeCounter+1,??_main+1
  1170  001B34  C07A  F0C4         	movff	_previousTimeCounter+2,??_main+2
  1171  001B38  C07B  F0C5         	movff	_previousTimeCounter+3,??_main+3
  1172  001B3C  0100               	movlb	0	; () banked
  1173  001B3E  1FC2               	comf	??_main& (0+255),f,b
  1174  001B40  1FC3               	comf	(??_main+1)& (0+255),f,b
  1175  001B42  1FC4               	comf	(??_main+2)& (0+255),f,b
  1176  001B44  1FC5               	comf	(??_main+3)& (0+255),f,b
  1177  001B46  2BC2               	incf	??_main& (0+255),f,b
  1178  001B48  0E00               	movlw	0
  1179  001B4A  23C3               	addwfc	(??_main+1)& (0+255),f,b
  1180  001B4C  23C4               	addwfc	(??_main+2)& (0+255),f,b
  1181  001B4E  23C5               	addwfc	(??_main+3)& (0+255),f,b
  1182  001B50  5029               	movf	_timeCounter,w,c
  1183  001B52  0100               	movlb	0	; () banked
  1184  001B54  25C2               	addwf	??_main& (0+255),w,b
  1185  001B56  0100               	movlb	0	; () banked
  1186  001B58  6FC6               	movwf	(??_main+4)& (0+255),b
  1187  001B5A  502A               	movf	_timeCounter+1,w,c
  1188  001B5C  0100               	movlb	0	; () banked
  1189  001B5E  21C3               	addwfc	(??_main+1)& (0+255),w,b
  1190  001B60  0100               	movlb	0	; () banked
  1191  001B62  6FC7               	movwf	(??_main+5)& (0+255),b
  1192  001B64  502B               	movf	_timeCounter+2,w,c
  1193  001B66  0100               	movlb	0	; () banked
  1194  001B68  21C4               	addwfc	(??_main+2)& (0+255),w,b
  1195  001B6A  0100               	movlb	0	; () banked
  1196  001B6C  6FC8               	movwf	(??_main+6)& (0+255),b
  1197  001B6E  502C               	movf	_timeCounter+3,w,c
  1198  001B70  0100               	movlb	0	; () banked
  1199  001B72  21C5               	addwfc	(??_main+3)& (0+255),w,b
  1200  001B74  0100               	movlb	0	; () banked
  1201  001B76  6FC9               	movwf	(??_main+7)& (0+255),b
  1202  001B78  0100               	movlb	0	; () banked
  1203  001B7A  51C9               	movf	(??_main+7)& (0+255),w,b
  1204  001B7C  0100               	movlb	0	; () banked
  1205  001B7E  11C8               	iorwf	(??_main+6)& (0+255),w,b
  1206  001B80  E108               	bnz	u6420
  1207  001B82  0EF5               	movlw	245
  1208  001B84  0100               	movlb	0	; () banked
  1209  001B86  5DC6               	subwf	(??_main+4)& (0+255),w,b
  1210  001B88  0E01               	movlw	1
  1211  001B8A  0100               	movlb	0	; () banked
  1212  001B8C  59C7               	subwfb	(??_main+5)& (0+255),w,b
  1213  001B8E  A0D8               	btfss	status,0,c
  1214  001B90  D036               	goto	l4976
  1215  001B92                     u6420:
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;motore.c: 228: if (request_sent == 0) {
  1219  001B92  BE38               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c
  1220  001B94  D018               	goto	l4962
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;motore.c: 229: CANsendMessage(0b00000000000000000000000000010, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1224  001B96  0E02               	movlw	2
  1225  001B98  0100               	movlb	0	; () banked
  1226  001B9A  6FAD               	movwf	CANsendMessage@identifier& (0+255),b
  1227  001B9C  0E00               	movlw	0
  1228  001B9E  6FAE               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1229  001BA0  0E00               	movlw	0
  1230  001BA2  6FAF               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1231  001BA4  0E00               	movlw	0
  1232  001BA6  6FB0               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1233  001BA8  0E95               	movlw	low _data_array
  1234  001BAA  0100               	movlb	0	; () banked
  1235  001BAC  6FB1               	movwf	CANsendMessage@data& (0+255),b
  1236  001BAE  0E00               	movlw	high _data_array
  1237  001BB0  0100               	movlb	0	; () banked
  1238  001BB2  6FB2               	movwf	(CANsendMessage@data+1)& (0+255),b
  1239  001BB4  0E08               	movlw	8
  1240  001BB6  0100               	movlb	0	; () banked
  1241  001BB8  6FB3               	movwf	CANsendMessage@dataLength& (0+255),b
  1242  001BBA  0EFC               	movlw	252
  1243  001BBC  0100               	movlb	0	; () banked
  1244  001BBE  6FB4               	movwf	CANsendMessage@flags& (0+255),b
  1245  001BC0  ECF1  F005         	call	_CANsendMessage	;wreg free
  1246                           
  1247                           ;motore.c: 230: request_sent = 1;
  1248  001BC4  8E38               	bsf	_request_sent/(0+8),_request_sent& (0+7),c
  1249  001BC6                     l4962:
  1250                           
  1251                           ;motore.c: 231: }
  1252                           ;motore.c: 232: if (request_sent == 1) {
  1253  001BC6  AE38               	btfss	_request_sent/(0+8),_request_sent& (0+7),c
  1254  001BC8  D012               	goto	l4974
  1255                           
  1256                           ;motore.c: 234: if ((centralina_abs == 1)&&(centralina_sterzo == 1)&&(centralina_comando
      +                           == 1)) {
  1257  001BCA  B238               	btfsc	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1258  001BCC  A638               	btfss	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1259  001BCE  D007               	goto	l688
  1260  001BD0  A438               	btfss	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1261  001BD2  D005               	goto	l688
  1262                           
  1263                           ;motore.c: 235: centralina_abs = 0;
  1264  001BD4  9238               	bcf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  1265                           
  1266                           ;motore.c: 236: centralina_sterzo = 0;
  1267  001BD6  9638               	bcf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  1268                           
  1269                           ;motore.c: 237: centralina_comando = 0;
  1270  001BD8  9438               	bcf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  1271                           
  1272                           ;motore.c: 238: PORTAbits.RA1 = 0;
  1273  001BDA  9280               	bcf	3968,1,c	;volatile
  1274                           
  1275                           ;motore.c: 239: } else {
  1276  001BDC  D008               	goto	l4974
  1277  001BDE                     l688:
  1278                           
  1279                           ;motore.c: 241: PORTAbits.RA1 = 1;
  1280  001BDE  8280               	bsf	3968,1,c	;volatile
  1281                           
  1282                           ;motore.c: 242: delay_ms(200);
  1283  001BE0  0E00               	movlw	0
  1284  001BE2  0100               	movlb	0	; () banked
  1285  001BE4  6FB6               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1286  001BE6  0EC8               	movlw	200
  1287  001BE8  6FB5               	movwf	delay_ms@value_ms& (0+255),b
  1288  001BEA  ECB3  F012         	call	_delay_ms	;wreg free
  1289  001BEE                     l4974:
  1290                           
  1291                           ;motore.c: 243: }
  1292                           ;motore.c: 244: }
  1293                           ;motore.c: 245: previousTimeCounter = timeCounter;
  1294  001BEE  C029  F078         	movff	_timeCounter,_previousTimeCounter
  1295  001BF2  C02A  F079         	movff	_timeCounter+1,_previousTimeCounter+1
  1296  001BF6  C02B  F07A         	movff	_timeCounter+2,_previousTimeCounter+2
  1297  001BFA  C02C  F07B         	movff	_timeCounter+3,_previousTimeCounter+3
  1298  001BFE                     l4976:
  1299                           
  1300                           ;motore.c: 246: }
  1301                           ;motore.c: 247: if ((timeCounter - previousTimeCounter2 >= 100)) {
  1302  001BFE  C080  F0C2         	movff	_previousTimeCounter2,??_main
  1303  001C02  C081  F0C3         	movff	_previousTimeCounter2+1,??_main+1
  1304  001C06  C082  F0C4         	movff	_previousTimeCounter2+2,??_main+2
  1305  001C0A  C083  F0C5         	movff	_previousTimeCounter2+3,??_main+3
  1306  001C0E  0100               	movlb	0	; () banked
  1307  001C10  1FC2               	comf	??_main& (0+255),f,b
  1308  001C12  1FC3               	comf	(??_main+1)& (0+255),f,b
  1309  001C14  1FC4               	comf	(??_main+2)& (0+255),f,b
  1310  001C16  1FC5               	comf	(??_main+3)& (0+255),f,b
  1311  001C18  2BC2               	incf	??_main& (0+255),f,b
  1312  001C1A  0E00               	movlw	0
  1313  001C1C  23C3               	addwfc	(??_main+1)& (0+255),f,b
  1314  001C1E  23C4               	addwfc	(??_main+2)& (0+255),f,b
  1315  001C20  23C5               	addwfc	(??_main+3)& (0+255),f,b
  1316  001C22  5029               	movf	_timeCounter,w,c
  1317  001C24  0100               	movlb	0	; () banked
  1318  001C26  25C2               	addwf	??_main& (0+255),w,b
  1319  001C28  0100               	movlb	0	; () banked
  1320  001C2A  6FC6               	movwf	(??_main+4)& (0+255),b
  1321  001C2C  502A               	movf	_timeCounter+1,w,c
  1322  001C2E  0100               	movlb	0	; () banked
  1323  001C30  21C3               	addwfc	(??_main+1)& (0+255),w,b
  1324  001C32  0100               	movlb	0	; () banked
  1325  001C34  6FC7               	movwf	(??_main+5)& (0+255),b
  1326  001C36  502B               	movf	_timeCounter+2,w,c
  1327  001C38  0100               	movlb	0	; () banked
  1328  001C3A  21C4               	addwfc	(??_main+2)& (0+255),w,b
  1329  001C3C  0100               	movlb	0	; () banked
  1330  001C3E  6FC8               	movwf	(??_main+6)& (0+255),b
  1331  001C40  502C               	movf	_timeCounter+3,w,c
  1332  001C42  0100               	movlb	0	; () banked
  1333  001C44  21C5               	addwfc	(??_main+3)& (0+255),w,b
  1334  001C46  0100               	movlb	0	; () banked
  1335  001C48  6FC9               	movwf	(??_main+7)& (0+255),b
  1336  001C4A  0100               	movlb	0	; () banked
  1337  001C4C  51C9               	movf	(??_main+7)& (0+255),w,b
  1338  001C4E  0100               	movlb	0	; () banked
  1339  001C50  11C8               	iorwf	(??_main+6)& (0+255),w,b
  1340  001C52  0100               	movlb	0	; () banked
  1341  001C54  11C7               	iorwf	(??_main+5)& (0+255),w,b
  1342  001C56  E105               	bnz	u6480
  1343  001C58  0E64               	movlw	100
  1344  001C5A  0100               	movlb	0	; () banked
  1345  001C5C  5DC6               	subwf	(??_main+4)& (0+255),w,b
  1346  001C5E  A0D8               	btfss	status,0,c
  1347  001C60  D628               	goto	l669
  1348  001C62                     u6480:
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;motore.c: 249: battery_measure();
  1352  001C62  ECE7  F011         	call	_battery_measure	;wreg free
  1353                           
  1354                           ;motore.c: 250: previousTimeCounter2 = timeCounter;
  1355  001C66  C029  F080         	movff	_timeCounter,_previousTimeCounter2
  1356  001C6A  C02A  F081         	movff	_timeCounter+1,_previousTimeCounter2+1
  1357  001C6E  C02B  F082         	movff	_timeCounter+2,_previousTimeCounter2+2
  1358  001C72  C02C  F083         	movff	_timeCounter+3,_previousTimeCounter2+3
  1359  001C76  D61D               	goto	l669
  1360  001C78                     __end_of_main:
  1361                           	opt stack 0
  1362                           tblptru	equ	0xFF8
  1363                           tblptrh	equ	0xFF7
  1364                           tblptrl	equ	0xFF6
  1365                           tablat	equ	0xFF5
  1366                           postinc0	equ	0xFEE
  1367                           wreg	equ	0xFE8
  1368                           postdec1	equ	0xFE5
  1369                           fsr1l	equ	0xFE1
  1370                           status	equ	0xFD8
  1371                           
  1372 ;; *************** function _send_data *****************
  1373 ;; Defined at:
  1374 ;;		line 254 in file "motore.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  i               1   33[COMRAM] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;		None               void
  1381 ;; Registers used:
  1382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1388 ;;      Params:         0       0       0       0
  1389 ;;      Locals:         1       0       0       0
  1390 ;;      Temps:          0       0       0       0
  1391 ;;      Totals:         1       0       0       0
  1392 ;;Total ram usage:        1 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    3
  1395 ;; This function calls:
  1396 ;;		_CANisTxReady
  1397 ;;		_CANsendMessage
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text1
  1404  002188                     __ptext1:
  1405                           	opt stack 0
  1406  002188                     _send_data:
  1407                           	opt stack 27
  1408                           
  1409                           ;motore.c: 255: if (CANisTxReady()) {
  1410                           
  1411                           ;incstack = 0
  1412  002188  ECFC  F012         	call	_CANisTxReady	;wreg free
  1413  00218C  0900               	iorlw	0
  1414  00218E  B4D8               	btfsc	status,2,c
  1415  002190  D031               	goto	l4836
  1416                           
  1417                           ;motore.c: 256: if (remote_frame == 1) {
  1418  002192  AA38               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1419  002194  D017               	goto	l4832
  1420                           
  1421                           ;motore.c: 257: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1422  002196  C025  F0AD         	movff	_id,CANsendMessage@identifier
  1423  00219A  C026  F0AE         	movff	_id+1,CANsendMessage@identifier+1
  1424  00219E  C027  F0AF         	movff	_id+2,CANsendMessage@identifier+2
  1425  0021A2  C028  F0B0         	movff	_id+3,CANsendMessage@identifier+3
  1426  0021A6  0E95               	movlw	low _data_array
  1427  0021A8  0100               	movlb	0	; () banked
  1428  0021AA  6FB1               	movwf	CANsendMessage@data& (0+255),b
  1429  0021AC  0E00               	movlw	high _data_array
  1430  0021AE  0100               	movlb	0	; () banked
  1431  0021B0  6FB2               	movwf	(CANsendMessage@data+1)& (0+255),b
  1432  0021B2  0E08               	movlw	8
  1433  0021B4  0100               	movlb	0	; () banked
  1434  0021B6  6FB3               	movwf	CANsendMessage@dataLength& (0+255),b
  1435  0021B8  0EBC               	movlw	188
  1436  0021BA  0100               	movlb	0	; () banked
  1437  0021BC  6FB4               	movwf	CANsendMessage@flags& (0+255),b
  1438  0021BE  ECF1  F005         	call	_CANsendMessage	;wreg free
  1439                           
  1440                           ;motore.c: 258: remote_frame = 0;
  1441  0021C2  9A38               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1442  0021C4                     l4832:
  1443                           
  1444                           ;motore.c: 259: }
  1445                           ;motore.c: 260: if (can_retry == 1) {
  1446  0021C4  A038               	btfss	_can_retry/(0+8),_can_retry& (0+7),c
  1447  0021C6  D016               	goto	l4836
  1448                           
  1449                           ;motore.c: 261: CANsendMessage(id1, data_array1, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_F
      +                          RAME & CAN_TX_PRIORITY_0);
  1450  0021C8  C074  F0AD         	movff	_id1,CANsendMessage@identifier
  1451  0021CC  C075  F0AE         	movff	_id1+1,CANsendMessage@identifier+1
  1452  0021D0  C076  F0AF         	movff	_id1+2,CANsendMessage@identifier+2
  1453  0021D4  C077  F0B0         	movff	_id1+3,CANsendMessage@identifier+3
  1454  0021D8  0E9D               	movlw	low _data_array1
  1455  0021DA  0100               	movlb	0	; () banked
  1456  0021DC  6FB1               	movwf	CANsendMessage@data& (0+255),b
  1457  0021DE  0E00               	movlw	high _data_array1
  1458  0021E0  0100               	movlb	0	; () banked
  1459  0021E2  6FB2               	movwf	(CANsendMessage@data+1)& (0+255),b
  1460  0021E4  0E08               	movlw	8
  1461  0021E6  0100               	movlb	0	; () banked
  1462  0021E8  6FB3               	movwf	CANsendMessage@dataLength& (0+255),b
  1463  0021EA  0EBC               	movlw	188
  1464  0021EC  0100               	movlb	0	; () banked
  1465  0021EE  6FB4               	movwf	CANsendMessage@flags& (0+255),b
  1466  0021F0  ECF1  F005         	call	_CANsendMessage	;wreg free
  1467  0021F4                     l4836:
  1468                           
  1469                           ;motore.c: 262: }
  1470                           ;motore.c: 263: }
  1471                           ;motore.c: 264: if ((TXB0CONbits.TXABT) || (TXB1CONbits.TXABT)) {
  1472  0021F4  010F               	movlb	15	; () banked
  1473  0021F6  BD40               	btfsc	64,6,b	;volatile
  1474  0021F8  D003               	goto	l701
  1475                           
  1476                           ; BSR set to: 15
  1477  0021FA  010F               	movlb	15	; () banked
  1478  0021FC  AD30               	btfss	48,6,b	;volatile
  1479  0021FE  D02C               	goto	l699
  1480  002200                     l701:
  1481                           
  1482                           ; BSR set to: 15
  1483                           ;motore.c: 265: can_retry = 1;
  1484  002200  8038               	bsf	_can_retry/(0+8),_can_retry& (0+7),c
  1485                           
  1486                           ;motore.c: 266: id1 = id;
  1487  002202  C025  F074         	movff	_id,_id1
  1488  002206  C026  F075         	movff	_id+1,_id1+1
  1489  00220A  C027  F076         	movff	_id+2,_id1+2
  1490  00220E  C028  F077         	movff	_id+3,_id1+3
  1491                           
  1492                           ;motore.c: 267: remote_frame1 = remote_frame;
  1493  002212  AA38               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1494  002214  D002               	goto	u6200
  1495  002216  8C38               	bsf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1496  002218  D001               	goto	l4840
  1497  00221A                     u6200:
  1498  00221A  9C38               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1499  00221C                     l4840:
  1500                           
  1501                           ;motore.c: 268: for (char i = 0; i < 8; i++) {
  1502  00221C  0E00               	movlw	0
  1503  00221E  6E22               	movwf	send_data@i,c
  1504  002220                     l4842:
  1505  002220  0E07               	movlw	7
  1506  002222  6422               	cpfsgt	send_data@i,c
  1507  002224  D001               	goto	l4846
  1508  002226  D02C               	goto	l704
  1509  002228                     l4846:
  1510                           
  1511                           ;motore.c: 269: data_array1[i] = data_array[i];
  1512  002228  5022               	movf	send_data@i,w,c
  1513  00222A  0D01               	mullw	1
  1514  00222C  0E95               	movlw	low _data_array
  1515  00222E  24F3               	addwf	prodl,w,c
  1516  002230  6ED9               	movwf	fsr2l,c
  1517  002232  0E00               	movlw	high _data_array
  1518  002234  20F4               	addwfc	prodh,w,c
  1519  002236  6EDA               	movwf	fsr2h,c
  1520  002238  5022               	movf	send_data@i,w,c
  1521  00223A  0D01               	mullw	1
  1522  00223C  0E9D               	movlw	low _data_array1
  1523  00223E  24F3               	addwf	prodl,w,c
  1524  002240  6EE1               	movwf	fsr1l,c
  1525  002242  0E00               	movlw	high _data_array1
  1526  002244  20F4               	addwfc	prodh,w,c
  1527  002246  6EE2               	movwf	fsr1h,c
  1528  002248  CFDF FFE7          	movff	indf2,indf1
  1529                           
  1530                           ;motore.c: 270: TXB0CONbits.TXABT = 0;
  1531  00224C  010F               	movlb	15	; () banked
  1532  00224E  9D40               	bcf	64,6,b	;volatile
  1533                           
  1534                           ; BSR set to: 15
  1535                           ;motore.c: 271: TXB1CONbits.TXABT = 0;
  1536  002250  010F               	movlb	15	; () banked
  1537  002252  9D30               	bcf	48,6,b	;volatile
  1538                           
  1539                           ; BSR set to: 15
  1540  002254  2A22               	incf	send_data@i,f,c
  1541  002256  D7E4               	goto	l4842
  1542  002258                     l699:
  1543                           
  1544                           ; BSR set to: 15
  1545                           ;motore.c: 274: can_retry = 0;
  1546  002258  9038               	bcf	_can_retry/(0+8),_can_retry& (0+7),c
  1547                           
  1548                           ;motore.c: 275: if (remote_frame1 != 0) {
  1549  00225A  AC38               	btfss	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1550  00225C  D010               	goto	l705
  1551                           
  1552                           ; BSR set to: 15
  1553                           ;motore.c: 276: remote_frame = remote_frame1;
  1554  00225E  AC38               	btfss	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1555  002260  D002               	goto	u6250
  1556  002262  8A38               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1557  002264  D001               	goto	u6265
  1558  002266                     u6250:
  1559  002266  9A38               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1560  002268                     u6265:
  1561                           
  1562                           ;motore.c: 277: id = id1;
  1563  002268  C074  F025         	movff	_id1,_id
  1564  00226C  C075  F026         	movff	_id1+1,_id+1
  1565  002270  C076  F027         	movff	_id1+2,_id+2
  1566  002274  C077  F028         	movff	_id1+3,_id+3
  1567                           
  1568                           ;motore.c: 278: message_sent = 1;
  1569  002278  8838               	bsf	_message_sent/(0+8),_message_sent& (0+7),c
  1570                           
  1571                           ;motore.c: 279: remote_frame1 = 0;
  1572  00227A  9C38               	bcf	_remote_frame1/(0+8),_remote_frame1& (0+7),c
  1573                           
  1574                           ;motore.c: 280: } else {
  1575  00227C  D001               	goto	l704
  1576  00227E                     l705:
  1577                           
  1578                           ; BSR set to: 15
  1579                           ;motore.c: 282: message_sent = 0;
  1580  00227E  9838               	bcf	_message_sent/(0+8),_message_sent& (0+7),c
  1581  002280                     l704:
  1582                           
  1583                           ;motore.c: 283: }
  1584                           ;motore.c: 284: }
  1585                           ;motore.c: 285: remote_frame = 0;
  1586  002280  9A38               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1587  002282  0012               	return		;funcret
  1588  002284                     __end_of_send_data:
  1589                           	opt stack 0
  1590                           tblptru	equ	0xFF8
  1591                           tblptrh	equ	0xFF7
  1592                           tblptrl	equ	0xFF6
  1593                           tablat	equ	0xFF5
  1594                           prodh	equ	0xFF4
  1595                           prodl	equ	0xFF3
  1596                           postinc0	equ	0xFEE
  1597                           wreg	equ	0xFE8
  1598                           indf1	equ	0xFE7
  1599                           postdec1	equ	0xFE5
  1600                           fsr1h	equ	0xFE2
  1601                           fsr1l	equ	0xFE1
  1602                           indf2	equ	0xFDF
  1603                           fsr2h	equ	0xFDA
  1604                           fsr2l	equ	0xFD9
  1605                           status	equ	0xFD8
  1606                           
  1607 ;; *************** function _configurazione_iniziale *****************
  1608 ;; Defined at:
  1609 ;;		line 307 in file "motore.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;		None               void
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1623 ;;      Params:         0       0       0       0
  1624 ;;      Locals:         0       0       0       0
  1625 ;;      Temps:          0       0       0       0
  1626 ;;      Totals:         0       0       0       0
  1627 ;;Total ram usage:        0 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    4
  1630 ;; This function calls:
  1631 ;;		_CANInitialize
  1632 ;;		_SetOutputEPWM1
  1633 ;;		_delay_ms
  1634 ;; This function is called by:
  1635 ;;		_main
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text2
  1640  002284                     __ptext2:
  1641                           	opt stack 0
  1642  002284                     _configurazione_iniziale:
  1643                           	opt stack 26
  1644                           
  1645                           ;motore.c: 310: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  1646                           
  1647                           ;incstack = 0
  1648  002284  0E06               	movlw	6
  1649  002286  0100               	movlb	0	; () banked
  1650  002288  6FB6               	movwf	CANInitialize@phaseSeg1& (0+255),b
  1651  00228A  0E05               	movlw	5
  1652  00228C  0100               	movlb	0	; () banked
  1653  00228E  6FB7               	movwf	CANInitialize@phaseSeg2& (0+255),b
  1654  002290  0E01               	movlw	1
  1655  002292  0100               	movlb	0	; () banked
  1656  002294  6FB8               	movwf	CANInitialize@SJW& (0+255),b
  1657  002296  0E03               	movlw	3
  1658  002298  0100               	movlb	0	; () banked
  1659  00229A  6FB9               	movwf	CANInitialize@BRP& (0+255),b
  1660  00229C  0E9D               	movlw	157
  1661  00229E  0100               	movlb	0	; () banked
  1662  0022A0  6FBA               	movwf	CANInitialize@flags& (0+255),b
  1663  0022A2  0E04               	movlw	4
  1664  0022A4  ECEB  F00F         	call	_CANInitialize
  1665                           
  1666                           ;motore.c: 311: RCONbits.IPEN = 1;
  1667  0022A8  8ED0               	bsf	4048,7,c	;volatile
  1668                           
  1669                           ;motore.c: 312: INTCONbits.INT0IF = 0;
  1670  0022AA  92F2               	bcf	intcon,1,c	;volatile
  1671                           
  1672                           ;motore.c: 313: PIR3bits.RXB1IF = 0;
  1673  0022AC  92A4               	bcf	4004,1,c	;volatile
  1674                           
  1675                           ;motore.c: 314: PIR3bits.RXB0IF = 0;
  1676  0022AE  90A4               	bcf	4004,0,c	;volatile
  1677                           
  1678                           ;motore.c: 316: IPR3bits.RXB1IP = 0;
  1679  0022B0  92A5               	bcf	4005,1,c	;volatile
  1680                           
  1681                           ;motore.c: 317: IPR3bits.RXB0IP = 0;
  1682  0022B2  90A5               	bcf	4005,0,c	;volatile
  1683                           
  1684                           ;motore.c: 318: INTCONbits.GIEH = 1;
  1685  0022B4  8EF2               	bsf	intcon,7,c	;volatile
  1686                           
  1687                           ;motore.c: 319: INTCONbits.GIEL = 1;
  1688  0022B6  8CF2               	bsf	intcon,6,c	;volatile
  1689                           
  1690                           ;motore.c: 322: T3CON = 0x01;
  1691  0022B8  0E01               	movlw	1
  1692  0022BA  6EB1               	movwf	4017,c	;volatile
  1693                           
  1694                           ;motore.c: 323: PIR2bits.TMR3IF = 0;
  1695  0022BC  92A1               	bcf	4001,1,c	;volatile
  1696                           
  1697                           ;motore.c: 324: IPR2bits.TMR3IP = 0;
  1698  0022BE  92A2               	bcf	4002,1,c	;volatile
  1699                           
  1700                           ;motore.c: 325: TMR3H = 0x63;
  1701  0022C0  0E63               	movlw	99
  1702  0022C2  6EB3               	movwf	4019,c	;volatile
  1703                           
  1704                           ;motore.c: 326: TMR3L = 0xC0;
  1705  0022C4  0EC0               	movlw	192
  1706  0022C6  6EB2               	movwf	4018,c	;volatile
  1707                           
  1708                           ;motore.c: 331: ADCON0bits.ADON = 1;
  1709  0022C8  80C2               	bsf	4034,0,c	;volatile
  1710                           
  1711                           ;motore.c: 332: ADCON0bits.CHS0 = 0;
  1712  0022CA  94C2               	bcf	4034,2,c	;volatile
  1713                           
  1714                           ;motore.c: 333: ADCON0bits.CHS1 = 0;
  1715  0022CC  96C2               	bcf	4034,3,c	;volatile
  1716                           
  1717                           ;motore.c: 334: ADCON0bits.CHS2 = 0;
  1718  0022CE  98C2               	bcf	4034,4,c	;volatile
  1719                           
  1720                           ;motore.c: 335: ADCON0bits.CHS3 = 0;
  1721  0022D0  9AC2               	bcf	4034,5,c	;volatile
  1722                           
  1723                           ;motore.c: 336: ADCON1bits.PCFG0 = 0;
  1724  0022D2  90C1               	bcf	4033,0,c	;volatile
  1725                           
  1726                           ;motore.c: 337: ADCON1bits.PCFG1 = 1;
  1727  0022D4  82C1               	bsf	4033,1,c	;volatile
  1728                           
  1729                           ;motore.c: 338: ADCON1bits.PCFG2 = 1;
  1730  0022D6  84C1               	bsf	4033,2,c	;volatile
  1731                           
  1732                           ;motore.c: 339: ADCON1bits.PCFG3 = 1;
  1733  0022D8  86C1               	bsf	4033,3,c	;volatile
  1734                           
  1735                           ;motore.c: 340: ADCON1bits.VCFG0 = 0;
  1736  0022DA  98C1               	bcf	4033,4,c	;volatile
  1737                           
  1738                           ;motore.c: 341: ADCON1bits.VCFG1 = 0;
  1739  0022DC  9AC1               	bcf	4033,5,c	;volatile
  1740                           
  1741                           ;motore.c: 342: ADCON2bits.ADCS0 = 1;
  1742  0022DE  80C0               	bsf	4032,0,c	;volatile
  1743                           
  1744                           ;motore.c: 343: ADCON2bits.ADCS1 = 0;
  1745  0022E0  92C0               	bcf	4032,1,c	;volatile
  1746                           
  1747                           ;motore.c: 344: ADCON2bits.ADCS2 = 1;
  1748  0022E2  84C0               	bsf	4032,2,c	;volatile
  1749                           
  1750                           ;motore.c: 345: ADCON2bits.ACQT0 = 0;
  1751  0022E4  96C0               	bcf	4032,3,c	;volatile
  1752                           
  1753                           ;motore.c: 346: ADCON2bits.ACQT1 = 1;
  1754  0022E6  88C0               	bsf	4032,4,c	;volatile
  1755                           
  1756                           ;motore.c: 347: ADCON2bits.ACQT2 = 1;
  1757  0022E8  8AC0               	bsf	4032,5,c	;volatile
  1758                           
  1759                           ;motore.c: 348: ADCON2bits.ADFM = 0;
  1760  0022EA  9EC0               	bcf	4032,7,c	;volatile
  1761                           
  1762                           ;motore.c: 351: PIE3bits.RXB1IE = 1;
  1763  0022EC  82A3               	bsf	4003,1,c	;volatile
  1764                           
  1765                           ;motore.c: 352: PIE3bits.RXB0IE = 1;
  1766  0022EE  80A3               	bsf	4003,0,c	;volatile
  1767                           
  1768                           ;motore.c: 353: PIE2bits.TMR3IE = 1;
  1769  0022F0  82A0               	bsf	4000,1,c	;volatile
  1770                           
  1771                           ;motore.c: 355: LATA = 0x00;
  1772  0022F2  0E00               	movlw	0
  1773  0022F4  6E89               	movwf	3977,c	;volatile
  1774                           
  1775                           ;motore.c: 356: TRISA = 0b01111101;
  1776  0022F6  0E7D               	movlw	125
  1777  0022F8  6E92               	movwf	3986,c	;volatile
  1778                           
  1779                           ;motore.c: 358: LATB = 0x00;
  1780  0022FA  0E00               	movlw	0
  1781  0022FC  6E8A               	movwf	3978,c	;volatile
  1782                           
  1783                           ;motore.c: 359: TRISB = 0b11111011;
  1784  0022FE  0EFB               	movlw	251
  1785  002300  6E93               	movwf	3987,c	;volatile
  1786                           
  1787                           ;motore.c: 361: LATC = 0x00;
  1788  002302  0E00               	movlw	0
  1789  002304  6E8B               	movwf	3979,c	;volatile
  1790                           
  1791                           ;motore.c: 362: TRISC = 0x00;
  1792  002306  0E00               	movlw	0
  1793  002308  6E94               	movwf	3988,c	;volatile
  1794                           
  1795                           ;motore.c: 364: LATD = 0x00;
  1796  00230A  0E00               	movlw	0
  1797  00230C  6E8C               	movwf	3980,c	;volatile
  1798                           
  1799                           ;motore.c: 365: TRISD = 0x00;
  1800  00230E  0E00               	movlw	0
  1801  002310  6E95               	movwf	3989,c	;volatile
  1802                           
  1803                           ;motore.c: 367: LATE = 0x00;
  1804  002312  0E00               	movlw	0
  1805  002314  6E8D               	movwf	3981,c	;volatile
  1806                           
  1807                           ;motore.c: 368: TRISE = 0xFF;
  1808  002316  6896               	setf	3990,c	;volatile
  1809                           
  1810                           ;motore.c: 369: delay_ms(2);
  1811  002318  0E00               	movlw	0
  1812  00231A  0100               	movlb	0	; () banked
  1813  00231C  6FB6               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1814  00231E  0E02               	movlw	2
  1815  002320  6FB5               	movwf	delay_ms@value_ms& (0+255),b
  1816  002322  ECB3  F012         	call	_delay_ms	;wreg free
  1817                           
  1818                           ;motore.c: 370: SetOutputEPWM1(0b01111111, 0b11111100);
  1819  002326  0EFC               	movlw	252
  1820  002328  6E1E               	movwf	SetOutputEPWM1@outputmode,c
  1821  00232A  0E7F               	movlw	127
  1822  00232C  EC52  F012         	call	_SetOutputEPWM1
  1823  002330  0012               	return		;funcret
  1824  002332                     __end_of_configurazione_iniziale:
  1825                           	opt stack 0
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           prodh	equ	0xFF4
  1831                           prodl	equ	0xFF3
  1832                           intcon	equ	0xFF2
  1833                           postinc0	equ	0xFEE
  1834                           wreg	equ	0xFE8
  1835                           indf1	equ	0xFE7
  1836                           postdec1	equ	0xFE5
  1837                           fsr1h	equ	0xFE2
  1838                           fsr1l	equ	0xFE1
  1839                           indf2	equ	0xFDF
  1840                           fsr2h	equ	0xFDA
  1841                           fsr2l	equ	0xFD9
  1842                           status	equ	0xFD8
  1843                           
  1844 ;; *************** function _delay_ms *****************
  1845 ;; Defined at:
  1846 ;;		line 61 in file "delay.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  value_ms        2    8[BANK0 ] unsigned int 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;		None               void
  1853 ;; Registers used:
  1854 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1860 ;;      Params:         0       2       0       0
  1861 ;;      Locals:         0       0       0       0
  1862 ;;      Temps:          0       0       0       0
  1863 ;;      Totals:         0       2       0       0
  1864 ;;Total ram usage:        2 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    3
  1867 ;; This function calls:
  1868 ;;		___wmul
  1869 ;; This function is called by:
  1870 ;;		_main
  1871 ;;		_configurazione_iniziale
  1872 ;;		_delay_s
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text3
  1877  002566                     __ptext3:
  1878                           	opt stack 0
  1879  002566                     _delay_ms:
  1880                           	opt stack 27
  1881                           
  1882                           ;delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  1883                           
  1884                           ;incstack = 0
  1885  002566  C041  F0B1         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  1886  00256A  0100               	movlb	0	; () banked
  1887  00256C  6BB2               	clrf	(___wmul@multiplier+1)& (0+255),b
  1888  00256E  C0B5  F0B3         	movff	delay_ms@value_ms,___wmul@multiplicand
  1889  002572  C0B6  F0B4         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  1890  002576  ECCD  F012         	call	___wmul	;wreg free
  1891  00257A  C0B1  F02D         	movff	?___wmul,_clock_counter_reference	;volatile
  1892  00257E  C0B2  F02E         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  1893                           
  1894                           ;delay.c: 75: while (clock_counter_reference) {
  1895  002582  D006               	goto	l569
  1896  002584                     l4678:
  1897                           
  1898                           ;delay.c: 85: _delay(240);
  1899  002584  0E50               	movlw	80
  1900  002586                     u6497:
  1901  002586  2EE8               	decfsz	wreg,f,c
  1902  002588  D7FE               	goto	u6497
  1903                           
  1904                           ;delay.c: 88: clock_counter_reference--;
  1905  00258A  062D               	decf	_clock_counter_reference,f,c	;volatile
  1906  00258C  A0D8               	btfss	status,0,c
  1907  00258E  062E               	decf	_clock_counter_reference+1,f,c	;volatile
  1908  002590                     l569:
  1909  002590  502D               	movf	_clock_counter_reference,w,c	;volatile
  1910  002592  102E               	iorwf	_clock_counter_reference+1,w,c	;volatile
  1911  002594  B4D8               	btfsc	status,2,c
  1912  002596  0012               	return	
  1913  002598  D7F5               	goto	l4678
  1914  00259A                     __end_of_delay_ms:
  1915                           	opt stack 0
  1916                           tblptru	equ	0xFF8
  1917                           tblptrh	equ	0xFF7
  1918                           tblptrl	equ	0xFF6
  1919                           tablat	equ	0xFF5
  1920                           prodh	equ	0xFF4
  1921                           prodl	equ	0xFF3
  1922                           intcon	equ	0xFF2
  1923                           postinc0	equ	0xFEE
  1924                           wreg	equ	0xFE8
  1925                           indf1	equ	0xFE7
  1926                           postdec1	equ	0xFE5
  1927                           fsr1h	equ	0xFE2
  1928                           fsr1l	equ	0xFE1
  1929                           indf2	equ	0xFDF
  1930                           fsr2h	equ	0xFDA
  1931                           fsr2l	equ	0xFD9
  1932                           status	equ	0xFD8
  1933                           
  1934 ;; *************** function _SetOutputEPWM1 *****************
  1935 ;; Defined at:
  1936 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  outputconfig    1    wreg     unsigned char 
  1939 ;;  outputmode      1   29[COMRAM] unsigned char 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  outputconfig    1   30[COMRAM] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;		None               void
  1944 ;; Registers used:
  1945 ;;		wreg, status,2, status,0
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1951 ;;      Params:         1       0       0       0
  1952 ;;      Locals:         1       0       0       0
  1953 ;;      Temps:          0       0       0       0
  1954 ;;      Totals:         2       0       0       0
  1955 ;;Total ram usage:        2 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    2
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;;		_configurazione_iniziale
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text4
  1967  0024A4                     __ptext4:
  1968                           	opt stack 0
  1969  0024A4                     _SetOutputEPWM1:
  1970                           	opt stack 27
  1971                           
  1972                           ;incstack = 0
  1973                           ;SetOutputEPWM1@outputconfig stored from wreg
  1974  0024A4  6E1F               	movwf	SetOutputEPWM1@outputconfig,c
  1975  0024A6  50BA               	movf	4026,w,c	;volatile
  1976  0024A8  09C0               	iorlw	192
  1977  0024AA  141F               	andwf	SetOutputEPWM1@outputconfig,w,c
  1978  0024AC  6EBA               	movwf	4026,c	;volatile
  1979  0024AE  50BA               	movf	4026,w,c	;volatile
  1980  0024B0  090F               	iorlw	15
  1981  0024B2  141E               	andwf	SetOutputEPWM1@outputmode,w,c
  1982  0024B4  6EBA               	movwf	4026,c	;volatile
  1983  0024B6  0E3F               	movlw	63
  1984  0024B8  181F               	xorwf	SetOutputEPWM1@outputconfig,w,c
  1985  0024BA  A4D8               	btfss	status,2,c
  1986  0024BC  D002               	goto	l3414
  1987  0024BE  9895               	bcf	3989,4,c	;volatile
  1988  0024C0  0012               	return	
  1989  0024C2                     l3414:
  1990  0024C2  0EBF               	movlw	191
  1991  0024C4  181F               	xorwf	SetOutputEPWM1@outputconfig,w,c
  1992  0024C6  A4D8               	btfss	status,2,c
  1993  0024C8  D003               	goto	l3418
  1994  0024CA  9895               	bcf	3989,4,c	;volatile
  1995  0024CC  9A95               	bcf	3989,5,c	;volatile
  1996  0024CE  0012               	return	
  1997  0024D0                     l3418:
  1998  0024D0  0E7F               	movlw	127
  1999  0024D2  181F               	xorwf	SetOutputEPWM1@outputconfig,w,c
  2000  0024D4  B4D8               	btfsc	status,2,c
  2001  0024D6  D003               	goto	l750
  2002  0024D8  281F               	incf	SetOutputEPWM1@outputconfig,w,c
  2003  0024DA  A4D8               	btfss	status,2,c
  2004  0024DC  0012               	return	
  2005  0024DE                     l750:
  2006  0024DE  9895               	bcf	3989,4,c	;volatile
  2007  0024E0  9A95               	bcf	3989,5,c	;volatile
  2008  0024E2  9C95               	bcf	3989,6,c	;volatile
  2009  0024E4  9E95               	bcf	3989,7,c	;volatile
  2010  0024E6  0012               	return	
  2011  0024E8                     __end_of_SetOutputEPWM1:
  2012                           	opt stack 0
  2013                           tblptru	equ	0xFF8
  2014                           tblptrh	equ	0xFF7
  2015                           tblptrl	equ	0xFF6
  2016                           tablat	equ	0xFF5
  2017                           prodh	equ	0xFF4
  2018                           prodl	equ	0xFF3
  2019                           intcon	equ	0xFF2
  2020                           postinc0	equ	0xFEE
  2021                           wreg	equ	0xFE8
  2022                           indf1	equ	0xFE7
  2023                           postdec1	equ	0xFE5
  2024                           fsr1h	equ	0xFE2
  2025                           fsr1l	equ	0xFE1
  2026                           indf2	equ	0xFDF
  2027                           fsr2h	equ	0xFDA
  2028                           fsr2l	equ	0xFD9
  2029                           status	equ	0xFD8
  2030                           
  2031 ;; *************** function _CANInitialize *****************
  2032 ;; Defined at:
  2033 ;;		line 218 in file "CANlib.h"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  propSeg         1    wreg     unsigned char 
  2036 ;;  phaseSeg1       1    9[BANK0 ] unsigned char 
  2037 ;;  phaseSeg2       1   10[BANK0 ] unsigned char 
  2038 ;;  SJW             1   11[BANK0 ] unsigned char 
  2039 ;;  BRP             1   12[BANK0 ] unsigned char 
  2040 ;;  flags           1   13[BANK0 ] enum E16844
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  propSeg         1   18[BANK0 ] unsigned char 
  2043 ;;  FilterConfig    1   20[BANK0 ] unsigned char 
  2044 ;;  FilterConfig    1   19[BANK0 ] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;		None               void
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, status,0, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2054 ;;      Params:         0       5       0       0
  2055 ;;      Locals:         0       3       0       0
  2056 ;;      Temps:          0       4       0       0
  2057 ;;      Totals:         0      12       0       0
  2058 ;;Total ram usage:       12 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    3
  2061 ;; This function calls:
  2062 ;;		_CANOperationMode
  2063 ;;		_CANSetFilter
  2064 ;;		_CANSetMask
  2065 ;; This function is called by:
  2066 ;;		_configurazione_iniziale
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text5
  2071  001FD6                     __ptext5:
  2072                           	opt stack 0
  2073  001FD6                     _CANInitialize:
  2074                           	opt stack 26
  2075                           
  2076                           ;incstack = 0
  2077                           ;CANInitialize@propSeg stored from wreg
  2078  001FD6  0100               	movlb	0	; () banked
  2079  001FD8  6FBF               	movwf	CANInitialize@propSeg& (0+255),b
  2080                           
  2081                           ;CANlib.h: 220: BYTE FilterConfig1;
  2082                           ;CANlib.h: 221: BYTE FilterConfig2;
  2083                           ;CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  2084  001FDA  0E80               	movlw	128
  2085  001FDC  EC24  F013         	call	_CANOperationMode
  2086                           
  2087                           ;CANlib.h: 225: BRGCON1 = 0x00;
  2088  001FE0  0E00               	movlw	0
  2089  001FE2  6E70               	movwf	3952,c	;volatile
  2090                           
  2091                           ;CANlib.h: 226: BRGCON2 = 0x00;
  2092  001FE4  0E00               	movlw	0
  2093  001FE6  6E71               	movwf	3953,c	;volatile
  2094                           
  2095                           ;CANlib.h: 227: BRGCON3 = 0x00;
  2096  001FE8  0E00               	movlw	0
  2097  001FEA  6E72               	movwf	3954,c	;volatile
  2098                           
  2099                           ;CANlib.h: 229: SJW= SJW << 6;
  2100  001FEC  0100               	movlb	0	; () banked
  2101  001FEE  41B8               	rrncf	CANInitialize@SJW& (0+255),w,b
  2102  001FF0  42E8               	rrncf	wreg,f,c
  2103  001FF2  0BC0               	andlw	192
  2104  001FF4  0100               	movlb	0	; () banked
  2105  001FF6  6FB8               	movwf	CANInitialize@SJW& (0+255),b
  2106                           
  2107                           ; BSR set to: 0
  2108                           ;CANlib.h: 230: BRGCON1 |= SJW;
  2109  001FF8  0100               	movlb	0	; () banked
  2110  001FFA  51B8               	movf	CANInitialize@SJW& (0+255),w,b
  2111  001FFC  1270               	iorwf	3952,f,c	;volatile
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;CANlib.h: 231: BRGCON1 |= BRP;
  2115  001FFE  0100               	movlb	0	; () banked
  2116  002000  51B9               	movf	CANInitialize@BRP& (0+255),w,b
  2117  002002  1270               	iorwf	3952,f,c	;volatile
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;CANlib.h: 233: BRGCON2 |= propSeg;
  2121  002004  0100               	movlb	0	; () banked
  2122  002006  51BF               	movf	CANInitialize@propSeg& (0+255),w,b
  2123  002008  1271               	iorwf	3953,f,c	;volatile
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  2127  00200A  0100               	movlb	0	; () banked
  2128  00200C  39B6               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  2129  00200E  42E8               	rrncf	wreg,f,c
  2130  002010  0BF8               	andlw	248
  2131  002012  0100               	movlb	0	; () banked
  2132  002014  6FB6               	movwf	CANInitialize@phaseSeg1& (0+255),b
  2133                           
  2134                           ; BSR set to: 0
  2135                           ;CANlib.h: 235: BRGCON2 |= phaseSeg1;
  2136  002016  0100               	movlb	0	; () banked
  2137  002018  51B6               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  2138  00201A  1271               	iorwf	3953,f,c	;volatile
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  2142  00201C  0100               	movlb	0	; () banked
  2143  00201E  A5BA               	btfss	CANInitialize@flags& (0+255),2,b
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;CANlib.h: 238: BRGCON2bits.SAM= 1;
  2147  002020  8C71               	bsf	3953,6,c	;volatile
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  2151  002022  0100               	movlb	0	; () banked
  2152  002024  B1BA               	btfsc	CANInitialize@flags& (0+255),0,b
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  2156  002026  8E71               	bsf	3953,7,c	;volatile
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;CANlib.h: 243: BRGCON3 |= phaseSeg2;
  2160                           
  2161                           ; BSR set to: 0
  2162  002028  0100               	movlb	0	; () banked
  2163  00202A  51B7               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  2164  00202C  1272               	iorwf	3954,f,c	;volatile
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  2168  00202E  0100               	movlb	0	; () banked
  2169  002030  B3BA               	btfsc	CANInitialize@flags& (0+255),1,b
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  2173  002032  8C72               	bsf	3954,6,c	;volatile
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  2177                           
  2178                           ; BSR set to: 0
  2179  002034  0100               	movlb	0	; () banked
  2180  002036  51BA               	movf	CANInitialize@flags& (0+255),w,b
  2181  002038  0B60               	andlw	96
  2182  00203A  6E60               	movwf	3936,c	;volatile
  2183                           
  2184                           ;CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON )
  2185  00203C  0100               	movlb	0	; () banked
  2186  00203E  51BA               	movf	CANInitialize@flags& (0+255),w,b
  2187  002040  0B10               	andlw	16
  2188  002042  0AFF               	xorlw	255
  2189  002044  B4D8               	btfsc	status,2,c
  2190                           
  2191                           ; BSR set to: 0
  2192                           ;CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  2193  002046  8460               	bsf	3936,2,c	;volatile
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;CANlib.h: 255: RXB1CON = RXB0CON;
  2197  002048  CF60 FF50          	movff	3936,3920	;volatile
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  2201  00204C  0E00               	movlw	0
  2202  00204E  6E1E               	movwf	CANSetMask@mask,c
  2203  002050  0E00               	movlw	0
  2204  002052  6E1F               	movwf	CANSetMask@mask+1,c
  2205  002054  0E00               	movlw	0
  2206  002056  6E20               	movwf	CANSetMask@mask+2,c
  2207  002058  0E00               	movlw	0
  2208  00205A  6E21               	movwf	CANSetMask@mask+3,c
  2209  00205C  0EF7               	movlw	247
  2210  00205E  6E22               	movwf	CANSetMask@type,c
  2211  002060  0E01               	movlw	1
  2212  002062  EC3C  F00E         	call	_CANSetMask
  2213                           
  2214                           ;CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  2215  002066  0E00               	movlw	0
  2216  002068  6E1E               	movwf	CANSetMask@mask,c
  2217  00206A  0E00               	movlw	0
  2218  00206C  6E1F               	movwf	CANSetMask@mask+1,c
  2219  00206E  0E00               	movlw	0
  2220  002070  6E20               	movwf	CANSetMask@mask+2,c
  2221  002072  0E00               	movlw	0
  2222  002074  6E21               	movwf	CANSetMask@mask+3,c
  2223  002076  0EF7               	movlw	247
  2224  002078  6E22               	movwf	CANSetMask@type,c
  2225  00207A  0E02               	movlw	2
  2226  00207C  EC3C  F00E         	call	_CANSetMask
  2227                           
  2228                           ;CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  2229  002080  D00F               	goto	l4438
  2230  002082                     l4432:
  2231                           
  2232                           ;CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  2233  002082  0EF7               	movlw	247
  2234  002084  0100               	movlb	0	; () banked
  2235  002086  6FC0               	movwf	CANInitialize@FilterConfig1& (0+255),b
  2236  002088  D007               	goto	l4434
  2237  00208A                     l358:
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2241  00208A  0100               	movlb	0	; () banked
  2242  00208C  69C0               	setf	CANInitialize@FilterConfig1& (0+255),b
  2243                           
  2244                           ;CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  2245  00208E  0100               	movlb	0	; () banked
  2246  002090  69C1               	setf	CANInitialize@FilterConfig2& (0+255),b
  2247                           
  2248                           ;CANlib.h: 273: break;
  2249  002092  D028               	goto	l4440
  2250  002094                     l359:
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  2254  002094  0100               	movlb	0	; () banked
  2255  002096  69C0               	setf	CANInitialize@FilterConfig1& (0+255),b
  2256  002098                     l4434:
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  2260  002098  0EF7               	movlw	247
  2261  00209A  0100               	movlb	0	; () banked
  2262  00209C  6FC1               	movwf	CANInitialize@FilterConfig2& (0+255),b
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;CANlib.h: 278: }
  2266                           
  2267                           ;CANlib.h: 277: break;
  2268  00209E  D022               	goto	l4440
  2269  0020A0                     l4438:
  2270  0020A0  0E9F               	movlw	159
  2271  0020A2  0100               	movlb	0	; () banked
  2272  0020A4  6FBB               	movwf	??_CANInitialize& (0+255),b
  2273  0020A6  0EFF               	movlw	255
  2274  0020A8  0100               	movlb	0	; () banked
  2275  0020AA  6FBC               	movwf	(??_CANInitialize+1)& (0+255),b
  2276  0020AC  0100               	movlb	0	; () banked
  2277  0020AE  51BA               	movf	CANInitialize@flags& (0+255),w,b
  2278  0020B0  0B60               	andlw	96
  2279  0020B2  0100               	movlb	0	; () banked
  2280  0020B4  6FBD               	movwf	(??_CANInitialize+2)& (0+255),b
  2281  0020B6  6BBE               	clrf	(??_CANInitialize+3)& (0+255),b
  2282  0020B8  0100               	movlb	0	; () banked
  2283  0020BA  51BB               	movf	??_CANInitialize& (0+255),w,b
  2284  0020BC  0100               	movlb	0	; () banked
  2285  0020BE  13BD               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  2286  0020C0  0100               	movlb	0	; () banked
  2287  0020C2  51BC               	movf	(??_CANInitialize+1)& (0+255),w,b
  2288  0020C4  0100               	movlb	0	; () banked
  2289  0020C6  13BE               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  2290                           
  2291                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2292                           ; Switch size 1, requested type "space"
  2293                           ; Number of cases is 1, Range of values is 0 to 0
  2294                           ; switch strategies available:
  2295                           ; Name         Instructions Cycles
  2296                           ; simple_byte            4     3 (average)
  2297                           ;	Chosen strategy is simple_byte
  2298  0020C8  0100               	movlb	0	; () banked
  2299  0020CA  51BE               	movf	(??_CANInitialize+3)& (0+255),w,b
  2300  0020CC  0A00               	xorlw	0	; case 0
  2301  0020CE  A4D8               	btfss	status,2,c
  2302  0020D0  D7E1               	goto	l359
  2303                           
  2304                           ; BSR set to: 0
  2305                           ; Switch size 1, requested type "space"
  2306                           ; Number of cases is 2, Range of values is 191 to 223
  2307                           ; switch strategies available:
  2308                           ; Name         Instructions Cycles
  2309                           ; simple_byte            7     4 (average)
  2310                           ;	Chosen strategy is simple_byte
  2311  0020D2  0100               	movlb	0	; () banked
  2312  0020D4  51BD               	movf	(??_CANInitialize+2)& (0+255),w,b
  2313  0020D6  0ABF               	xorlw	191	; case 191
  2314  0020D8  B4D8               	btfsc	status,2,c
  2315  0020DA  D7D7               	goto	l358
  2316  0020DC  0A60               	xorlw	96	; case 223
  2317  0020DE  B4D8               	btfsc	status,2,c
  2318  0020E0  D7D0               	goto	l4432
  2319  0020E2  D7D8               	goto	l359
  2320  0020E4                     l4440:
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  2324  0020E4  0E00               	movlw	0
  2325  0020E6  6E1E               	movwf	CANSetFilter@filter,c
  2326  0020E8  0E00               	movlw	0
  2327  0020EA  6E1F               	movwf	CANSetFilter@filter+1,c
  2328  0020EC  0E00               	movlw	0
  2329  0020EE  6E20               	movwf	CANSetFilter@filter+2,c
  2330  0020F0  0E00               	movlw	0
  2331  0020F2  6E21               	movwf	CANSetFilter@filter+3,c
  2332  0020F4  C0C0  F022         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2333  0020F8  0E00               	movlw	0
  2334  0020FA  ECCE  F000         	call	_CANSetFilter
  2335                           
  2336                           ;CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  2337  0020FE  0E00               	movlw	0
  2338  002100  6E1E               	movwf	CANSetFilter@filter,c
  2339  002102  0E00               	movlw	0
  2340  002104  6E1F               	movwf	CANSetFilter@filter+1,c
  2341  002106  0E00               	movlw	0
  2342  002108  6E20               	movwf	CANSetFilter@filter+2,c
  2343  00210A  0E00               	movlw	0
  2344  00210C  6E21               	movwf	CANSetFilter@filter+3,c
  2345  00210E  C0C0  F022         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  2346  002112  0E01               	movlw	1
  2347  002114  ECCE  F000         	call	_CANSetFilter
  2348                           
  2349                           ;CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  2350  002118  0E00               	movlw	0
  2351  00211A  6E1E               	movwf	CANSetFilter@filter,c
  2352  00211C  0E00               	movlw	0
  2353  00211E  6E1F               	movwf	CANSetFilter@filter+1,c
  2354  002120  0E00               	movlw	0
  2355  002122  6E20               	movwf	CANSetFilter@filter+2,c
  2356  002124  0E00               	movlw	0
  2357  002126  6E21               	movwf	CANSetFilter@filter+3,c
  2358  002128  C0C1  F022         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2359  00212C  0E02               	movlw	2
  2360  00212E  ECCE  F000         	call	_CANSetFilter
  2361                           
  2362                           ;CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  2363  002132  0E00               	movlw	0
  2364  002134  6E1E               	movwf	CANSetFilter@filter,c
  2365  002136  0E00               	movlw	0
  2366  002138  6E1F               	movwf	CANSetFilter@filter+1,c
  2367  00213A  0E00               	movlw	0
  2368  00213C  6E20               	movwf	CANSetFilter@filter+2,c
  2369  00213E  0E00               	movlw	0
  2370  002140  6E21               	movwf	CANSetFilter@filter+3,c
  2371  002142  C0C1  F022         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2372  002146  0E03               	movlw	3
  2373  002148  ECCE  F000         	call	_CANSetFilter
  2374                           
  2375                           ;CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  2376  00214C  0E00               	movlw	0
  2377  00214E  6E1E               	movwf	CANSetFilter@filter,c
  2378  002150  0E00               	movlw	0
  2379  002152  6E1F               	movwf	CANSetFilter@filter+1,c
  2380  002154  0E00               	movlw	0
  2381  002156  6E20               	movwf	CANSetFilter@filter+2,c
  2382  002158  0E00               	movlw	0
  2383  00215A  6E21               	movwf	CANSetFilter@filter+3,c
  2384  00215C  C0C1  F022         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2385  002160  0E04               	movlw	4
  2386  002162  ECCE  F000         	call	_CANSetFilter
  2387                           
  2388                           ;CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  2389  002166  0E00               	movlw	0
  2390  002168  6E1E               	movwf	CANSetFilter@filter,c
  2391  00216A  0E00               	movlw	0
  2392  00216C  6E1F               	movwf	CANSetFilter@filter+1,c
  2393  00216E  0E00               	movlw	0
  2394  002170  6E20               	movwf	CANSetFilter@filter+2,c
  2395  002172  0E00               	movlw	0
  2396  002174  6E21               	movwf	CANSetFilter@filter+3,c
  2397  002176  C0C1  F022         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  2398  00217A  0E05               	movlw	5
  2399  00217C  ECCE  F000         	call	_CANSetFilter
  2400                           
  2401                           ;CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  2402  002180  0E00               	movlw	0
  2403  002182  EC24  F013         	call	_CANOperationMode
  2404  002186  0012               	return		;funcret
  2405  002188                     __end_of_CANInitialize:
  2406                           	opt stack 0
  2407                           tblptru	equ	0xFF8
  2408                           tblptrh	equ	0xFF7
  2409                           tblptrl	equ	0xFF6
  2410                           tablat	equ	0xFF5
  2411                           prodh	equ	0xFF4
  2412                           prodl	equ	0xFF3
  2413                           intcon	equ	0xFF2
  2414                           postinc0	equ	0xFEE
  2415                           wreg	equ	0xFE8
  2416                           indf1	equ	0xFE7
  2417                           postdec1	equ	0xFE5
  2418                           fsr1h	equ	0xFE2
  2419                           fsr1l	equ	0xFE1
  2420                           indf2	equ	0xFDF
  2421                           fsr2h	equ	0xFDA
  2422                           fsr2l	equ	0xFD9
  2423                           status	equ	0xFD8
  2424                           
  2425 ;; *************** function _CANSetMask *****************
  2426 ;; Defined at:
  2427 ;;		line 640 in file "CANlib.h"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;  numBuffer       1    wreg     enum E16878
  2430 ;;  mask            4   29[COMRAM] unsigned long 
  2431 ;;  type            1   33[COMRAM] enum E16844
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  numBuffer       1    4[BANK0 ] enum E16878
  2434 ;;  tamp            4    5[BANK0 ] unsigned long 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;		None               void
  2437 ;; Registers used:
  2438 ;;		wreg, status,2, status,0
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2444 ;;      Params:         5       0       0       0
  2445 ;;      Locals:         0       5       0       0
  2446 ;;      Temps:          0       4       0       0
  2447 ;;      Totals:         5       9       0       0
  2448 ;;Total ram usage:       14 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    2
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_CANInitialize
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text6
  2459  001C78                     __ptext6:
  2460                           	opt stack 0
  2461  001C78                     _CANSetMask:
  2462                           	opt stack 26
  2463                           
  2464                           ;incstack = 0
  2465                           ;CANSetMask@numBuffer stored from wreg
  2466  001C78  0100               	movlb	0	; () banked
  2467  001C7A  6FB1               	movwf	CANSetMask@numBuffer& (0+255),b
  2468                           
  2469                           ;CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  2470  001C7C  0100               	movlb	0	; () banked
  2471  001C7E  05B1               	decf	CANSetMask@numBuffer& (0+255),w,b
  2472  001C80  A4D8               	btfss	status,2,c
  2473  001C82  D051               	goto	l3996
  2474                           
  2475                           ; BSR set to: 0
  2476  001C84  2822               	incf	CANSetMask@type,w,c
  2477  001C86  A4D8               	btfss	status,2,c
  2478  001C88  D04E               	goto	l3996
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;CANlib.h: 644: {
  2482                           ;CANlib.h: 645: tamp = (mask >> 3);
  2483  001C8A  C01E  F0AD         	movff	CANSetMask@mask,??_CANSetMask
  2484  001C8E  C01F  F0AE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2485  001C92  C020  F0AF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2486  001C96  C021  F0B0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2487  001C9A  0E04               	movlw	4
  2488  001C9C  D006               	goto	u4700
  2489  001C9E                     u4705:
  2490  001C9E  0100               	movlb	0	; () banked
  2491  001CA0  90D8               	bcf	status,0,c
  2492  001CA2  33B0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2493  001CA4  33AF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2494  001CA6  33AE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2495  001CA8  33AD               	rrcf	??_CANSetMask& (0+255),f,b
  2496  001CAA                     u4700:
  2497  001CAA  2EE8               	decfsz	wreg,f,c
  2498  001CAC  D7F8               	goto	u4705
  2499  001CAE  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2500  001CB2  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2501  001CB6  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2502  001CBA  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;CANlib.h: 646: tamp = tamp & 0x000000FF;
  2506  001CBE  0100               	movlb	0	; () banked
  2507  001CC0  51B2               	movf	CANSetMask@tamp& (0+255),w,b
  2508  001CC2  0100               	movlb	0	; () banked
  2509  001CC4  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2510  001CC6  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2511  001CC8  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2512  001CCA  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  2516  001CCC  C0B2  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;CANlib.h: 649: tamp = mask & 0x00000007;
  2520  001CD0  0E07               	movlw	7
  2521  001CD2  141E               	andwf	CANSetMask@mask,w,c
  2522  001CD4  0100               	movlb	0	; () banked
  2523  001CD6  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2524  001CD8  0E00               	movlw	0
  2525  001CDA  141F               	andwf	CANSetMask@mask+1,w,c
  2526  001CDC  0100               	movlb	0	; () banked
  2527  001CDE  6FB3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2528  001CE0  0E00               	movlw	0
  2529  001CE2  1420               	andwf	CANSetMask@mask+2,w,c
  2530  001CE4  0100               	movlb	0	; () banked
  2531  001CE6  6FB4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2532  001CE8  0E00               	movlw	0
  2533  001CEA  1421               	andwf	CANSetMask@mask+3,w,c
  2534  001CEC  0100               	movlb	0	; () banked
  2535  001CEE  6FB5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;CANlib.h: 650: tamp = tamp << 5;
  2539  001CF0  C0B2  F0AD         	movff	CANSetMask@tamp,??_CANSetMask
  2540  001CF4  C0B3  F0AE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2541  001CF8  C0B4  F0AF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2542  001CFC  C0B5  F0B0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2543  001D00  0E05               	movlw	5
  2544  001D02                     u4715:
  2545  001D02  90D8               	bcf	status,0,c
  2546  001D04  0100               	movlb	0	; () banked
  2547  001D06  37AD               	rlcf	??_CANSetMask& (0+255),f,b
  2548  001D08  37AE               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2549  001D0A  37AF               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2550  001D0C  37B0               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2551  001D0E  2EE8               	decfsz	wreg,f,c
  2552  001D10  D7F8               	goto	u4715
  2553  001D12  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2554  001D16  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2555  001D1A  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2556  001D1E  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  2560  001D22  C0B2  FF19         	movff	CANSetMask@tamp,3865	;volatile
  2561  001D26                     l3996:
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;CANlib.h: 652: }
  2565                           ;CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  2566  001D26  0E02               	movlw	2
  2567  001D28  0100               	movlb	0	; () banked
  2568  001D2A  19B1               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2569  001D2C  A4D8               	btfss	status,2,c
  2570  001D2E  D051               	goto	l4012
  2571                           
  2572                           ; BSR set to: 0
  2573  001D30  2822               	incf	CANSetMask@type,w,c
  2574  001D32  A4D8               	btfss	status,2,c
  2575  001D34  D04E               	goto	l4012
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;CANlib.h: 655: {
  2579                           ;CANlib.h: 656: tamp = (mask >> 3);
  2580  001D36  C01E  F0AD         	movff	CANSetMask@mask,??_CANSetMask
  2581  001D3A  C01F  F0AE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2582  001D3E  C020  F0AF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2583  001D42  C021  F0B0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2584  001D46  0E04               	movlw	4
  2585  001D48  D006               	goto	u4740
  2586  001D4A                     u4745:
  2587  001D4A  0100               	movlb	0	; () banked
  2588  001D4C  90D8               	bcf	status,0,c
  2589  001D4E  33B0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2590  001D50  33AF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2591  001D52  33AE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2592  001D54  33AD               	rrcf	??_CANSetMask& (0+255),f,b
  2593  001D56                     u4740:
  2594  001D56  2EE8               	decfsz	wreg,f,c
  2595  001D58  D7F8               	goto	u4745
  2596  001D5A  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2597  001D5E  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2598  001D62  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2599  001D66  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;CANlib.h: 657: tamp = tamp & 0x000000FF;
  2603  001D6A  0100               	movlb	0	; () banked
  2604  001D6C  51B2               	movf	CANSetMask@tamp& (0+255),w,b
  2605  001D6E  0100               	movlb	0	; () banked
  2606  001D70  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2607  001D72  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2608  001D74  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2609  001D76  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  2613  001D78  C0B2  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;CANlib.h: 660: tamp = mask & 0x00000007;
  2617  001D7C  0E07               	movlw	7
  2618  001D7E  141E               	andwf	CANSetMask@mask,w,c
  2619  001D80  0100               	movlb	0	; () banked
  2620  001D82  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2621  001D84  0E00               	movlw	0
  2622  001D86  141F               	andwf	CANSetMask@mask+1,w,c
  2623  001D88  0100               	movlb	0	; () banked
  2624  001D8A  6FB3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2625  001D8C  0E00               	movlw	0
  2626  001D8E  1420               	andwf	CANSetMask@mask+2,w,c
  2627  001D90  0100               	movlb	0	; () banked
  2628  001D92  6FB4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2629  001D94  0E00               	movlw	0
  2630  001D96  1421               	andwf	CANSetMask@mask+3,w,c
  2631  001D98  0100               	movlb	0	; () banked
  2632  001D9A  6FB5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2633                           
  2634                           ; BSR set to: 0
  2635                           ;CANlib.h: 661: tamp = tamp << 5;
  2636  001D9C  C0B2  F0AD         	movff	CANSetMask@tamp,??_CANSetMask
  2637  001DA0  C0B3  F0AE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2638  001DA4  C0B4  F0AF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2639  001DA8  C0B5  F0B0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2640  001DAC  0E05               	movlw	5
  2641  001DAE                     u4755:
  2642  001DAE  90D8               	bcf	status,0,c
  2643  001DB0  0100               	movlb	0	; () banked
  2644  001DB2  37AD               	rlcf	??_CANSetMask& (0+255),f,b
  2645  001DB4  37AE               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  2646  001DB6  37AF               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  2647  001DB8  37B0               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  2648  001DBA  2EE8               	decfsz	wreg,f,c
  2649  001DBC  D7F8               	goto	u4755
  2650  001DBE  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2651  001DC2  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2652  001DC6  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2653  001DCA  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  2657  001DCE  C0B2  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  2658  001DD2                     l4012:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;CANlib.h: 663: }
  2662                           ;CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  2663  001DD2  0100               	movlb	0	; () banked
  2664  001DD4  05B1               	decf	CANSetMask@numBuffer& (0+255),w,b
  2665  001DD6  A4D8               	btfss	status,2,c
  2666  001DD8  D07C               	goto	l4044
  2667                           
  2668                           ; BSR set to: 0
  2669  001DDA  0EF7               	movlw	247
  2670  001DDC  1822               	xorwf	CANSetMask@type,w,c
  2671  001DDE  A4D8               	btfss	status,2,c
  2672  001DE0  D078               	goto	l4044
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;CANlib.h: 666: {
  2676                           ;CANlib.h: 667: tamp = mask & 0x000000FF;
  2677  001DE2  501E               	movf	CANSetMask@mask,w,c
  2678  001DE4  0100               	movlb	0	; () banked
  2679  001DE6  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2680  001DE8  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2681  001DEA  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2682  001DEC  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  2686  001DEE  C0B2  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;CANlib.h: 670: tamp = mask & 0x0000FF00;
  2690  001DF2  0E00               	movlw	0
  2691  001DF4  141E               	andwf	CANSetMask@mask,w,c
  2692  001DF6  0100               	movlb	0	; () banked
  2693  001DF8  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2694  001DFA  0EFF               	movlw	255
  2695  001DFC  141F               	andwf	CANSetMask@mask+1,w,c
  2696  001DFE  0100               	movlb	0	; () banked
  2697  001E00  6FB3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2698  001E02  0E00               	movlw	0
  2699  001E04  1420               	andwf	CANSetMask@mask+2,w,c
  2700  001E06  0100               	movlb	0	; () banked
  2701  001E08  6FB4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2702  001E0A  0E00               	movlw	0
  2703  001E0C  1421               	andwf	CANSetMask@mask+3,w,c
  2704  001E0E  0100               	movlb	0	; () banked
  2705  001E10  6FB5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;CANlib.h: 671: tamp = tamp >> 8;
  2709  001E12  C0B2  F0AD         	movff	CANSetMask@tamp,??_CANSetMask
  2710  001E16  C0B3  F0AE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2711  001E1A  C0B4  F0AF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2712  001E1E  C0B5  F0B0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2713  001E22  C0AE  F0AD         	movff	??_CANSetMask+1,??_CANSetMask
  2714  001E26  C0AF  F0AE         	movff	??_CANSetMask+2,??_CANSetMask+1
  2715  001E2A  C0B0  F0AF         	movff	??_CANSetMask+3,??_CANSetMask+2
  2716  001E2E  0100               	movlb	0	; () banked
  2717  001E30  6BB0               	clrf	(??_CANSetMask+3)& (0+255),b
  2718  001E32  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2719  001E36  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2720  001E3A  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2721  001E3E  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  2725  001E42  C0B2  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;CANlib.h: 674: if (mask & 0x00010000)
  2729  001E46  A020               	btfss	CANSetMask@mask+2,0,c
  2730  001E48  D003               	goto	l432
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  2734  001E4A  010F               	movlb	15	; () banked
  2735  001E4C  8119               	bsf	25,0,b	;volatile
  2736  001E4E  D002               	goto	l433
  2737  001E50                     l432:
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;CANlib.h: 676: else
  2741                           ;CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  2742  001E50  010F               	movlb	15	; () banked
  2743  001E52  9119               	bcf	25,0,b	;volatile
  2744  001E54                     l433:
  2745                           
  2746                           ; BSR set to: 15
  2747                           ;CANlib.h: 679: if (mask & 0x00020000)
  2748  001E54  A220               	btfss	CANSetMask@mask+2,1,c
  2749  001E56  D003               	goto	l434
  2750                           
  2751                           ; BSR set to: 15
  2752                           ;CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  2753  001E58  010F               	movlb	15	; () banked
  2754  001E5A  8319               	bsf	25,1,b	;volatile
  2755  001E5C  D002               	goto	l435
  2756  001E5E                     l434:
  2757                           
  2758                           ; BSR set to: 15
  2759                           ;CANlib.h: 681: else
  2760                           ;CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  2761  001E5E  010F               	movlb	15	; () banked
  2762  001E60  9319               	bcf	25,1,b	;volatile
  2763  001E62                     l435:
  2764                           
  2765                           ; BSR set to: 15
  2766                           ;CANlib.h: 684: if (mask & 0x00040000)
  2767  001E62  A420               	btfss	CANSetMask@mask+2,2,c
  2768  001E64  D003               	goto	l436
  2769                           
  2770                           ; BSR set to: 15
  2771                           ;CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  2772  001E66  010F               	movlb	15	; () banked
  2773  001E68  8B19               	bsf	25,5,b	;volatile
  2774  001E6A  D002               	goto	l437
  2775  001E6C                     l436:
  2776                           
  2777                           ; BSR set to: 15
  2778                           ;CANlib.h: 686: else
  2779                           ;CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  2780  001E6C  010F               	movlb	15	; () banked
  2781  001E6E  9B19               	bcf	25,5,b	;volatile
  2782  001E70                     l437:
  2783                           
  2784                           ; BSR set to: 15
  2785                           ;CANlib.h: 689: if (mask & 0x00080000)
  2786  001E70  A620               	btfss	CANSetMask@mask+2,3,c
  2787  001E72  D003               	goto	l438
  2788                           
  2789                           ; BSR set to: 15
  2790                           ;CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  2791  001E74  010F               	movlb	15	; () banked
  2792  001E76  8D19               	bsf	25,6,b	;volatile
  2793  001E78  D002               	goto	l439
  2794  001E7A                     l438:
  2795                           
  2796                           ; BSR set to: 15
  2797                           ;CANlib.h: 691: else
  2798                           ;CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  2799  001E7A  010F               	movlb	15	; () banked
  2800  001E7C  9D19               	bcf	25,6,b	;volatile
  2801  001E7E                     l439:
  2802                           
  2803                           ; BSR set to: 15
  2804                           ;CANlib.h: 694: if (mask & 0x00100000)
  2805  001E7E  A820               	btfss	CANSetMask@mask+2,4,c
  2806  001E80  D003               	goto	l440
  2807                           
  2808                           ; BSR set to: 15
  2809                           ;CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  2810  001E82  010F               	movlb	15	; () banked
  2811  001E84  8F19               	bsf	25,7,b	;volatile
  2812  001E86  D002               	goto	l4038
  2813  001E88                     l440:
  2814                           
  2815                           ; BSR set to: 15
  2816                           ;CANlib.h: 696: else
  2817                           ;CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  2818  001E88  010F               	movlb	15	; () banked
  2819  001E8A  9F19               	bcf	25,7,b	;volatile
  2820  001E8C                     l4038:
  2821                           
  2822                           ; BSR set to: 15
  2823                           ;CANlib.h: 699: tamp = (mask >> 21);
  2824  001E8C  C01E  F0AD         	movff	CANSetMask@mask,??_CANSetMask
  2825  001E90  C01F  F0AE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  2826  001E94  C020  F0AF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  2827  001E98  C021  F0B0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  2828  001E9C  0E16               	movlw	22
  2829  001E9E  D006               	goto	u4830
  2830  001EA0                     u4835:
  2831  001EA0  0100               	movlb	0	; () banked
  2832  001EA2  90D8               	bcf	status,0,c
  2833  001EA4  33B0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  2834  001EA6  33AF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  2835  001EA8  33AE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  2836  001EAA  33AD               	rrcf	??_CANSetMask& (0+255),f,b
  2837  001EAC                     u4830:
  2838  001EAC  2EE8               	decfsz	wreg,f,c
  2839  001EAE  D7F8               	goto	u4835
  2840  001EB0  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2841  001EB4  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2842  001EB8  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2843  001EBC  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2844                           
  2845                           ; BSR set to: 0
  2846                           ;CANlib.h: 700: tamp = tamp & 0x000000FF;
  2847  001EC0  0100               	movlb	0	; () banked
  2848  001EC2  51B2               	movf	CANSetMask@tamp& (0+255),w,b
  2849  001EC4  0100               	movlb	0	; () banked
  2850  001EC6  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2851  001EC8  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2852  001ECA  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2853  001ECC  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  2857  001ECE  C0B2  FF18         	movff	CANSetMask@tamp,3864	;volatile
  2858  001ED2                     l4044:
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;CANlib.h: 702: }
  2862                           ;CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  2863  001ED2  0E02               	movlw	2
  2864  001ED4  0100               	movlb	0	; () banked
  2865  001ED6  19B1               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  2866  001ED8  A4D8               	btfss	status,2,c
  2867  001EDA  0012               	return	
  2868                           
  2869                           ; BSR set to: 0
  2870  001EDC  0EF7               	movlw	247
  2871  001EDE  1822               	xorwf	CANSetMask@type,w,c
  2872  001EE0  A4D8               	btfss	status,2,c
  2873  001EE2  0012               	return	
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;CANlib.h: 705: {
  2877                           ;CANlib.h: 706: tamp = mask & 0x000000FF;
  2878  001EE4  501E               	movf	CANSetMask@mask,w,c
  2879  001EE6  0100               	movlb	0	; () banked
  2880  001EE8  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2881  001EEA  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  2882  001EEC  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  2883  001EEE  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  2887  001EF0  C0B2  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;CANlib.h: 709: tamp = mask & 0x0000FF00;
  2891  001EF4  0E00               	movlw	0
  2892  001EF6  141E               	andwf	CANSetMask@mask,w,c
  2893  001EF8  0100               	movlb	0	; () banked
  2894  001EFA  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  2895  001EFC  0EFF               	movlw	255
  2896  001EFE  141F               	andwf	CANSetMask@mask+1,w,c
  2897  001F00  0100               	movlb	0	; () banked
  2898  001F02  6FB3               	movwf	(CANSetMask@tamp+1)& (0+255),b
  2899  001F04  0E00               	movlw	0
  2900  001F06  1420               	andwf	CANSetMask@mask+2,w,c
  2901  001F08  0100               	movlb	0	; () banked
  2902  001F0A  6FB4               	movwf	(CANSetMask@tamp+2)& (0+255),b
  2903  001F0C  0E00               	movlw	0
  2904  001F0E  1421               	andwf	CANSetMask@mask+3,w,c
  2905  001F10  0100               	movlb	0	; () banked
  2906  001F12  6FB5               	movwf	(CANSetMask@tamp+3)& (0+255),b
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;CANlib.h: 710: tamp = tamp >> 8;
  2910  001F14  C0B2  F0AD         	movff	CANSetMask@tamp,??_CANSetMask
  2911  001F18  C0B3  F0AE         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  2912  001F1C  C0B4  F0AF         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  2913  001F20  C0B5  F0B0         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  2914  001F24  C0AE  F0AD         	movff	??_CANSetMask+1,??_CANSetMask
  2915  001F28  C0AF  F0AE         	movff	??_CANSetMask+2,??_CANSetMask+1
  2916  001F2C  C0B0  F0AF         	movff	??_CANSetMask+3,??_CANSetMask+2
  2917  001F30  0100               	movlb	0	; () banked
  2918  001F32  6BB0               	clrf	(??_CANSetMask+3)& (0+255),b
  2919  001F34  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  2920  001F38  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  2921  001F3C  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  2922  001F40  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  2926  001F44  C0B2  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;CANlib.h: 713: if (mask & 0x00010000)
  2930  001F48  A020               	btfss	CANSetMask@mask+2,0,c
  2931  001F4A  D003               	goto	l443
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  2935  001F4C  010F               	movlb	15	; () banked
  2936  001F4E  811D               	bsf	29,0,b	;volatile
  2937  001F50  D002               	goto	l444
  2938  001F52                     l443:
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;CANlib.h: 715: else
  2942                           ;CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  2943  001F52  010F               	movlb	15	; () banked
  2944  001F54  911D               	bcf	29,0,b	;volatile
  2945  001F56                     l444:
  2946                           
  2947                           ; BSR set to: 15
  2948                           ;CANlib.h: 718: if (mask & 0x00020000)
  2949  001F56  A220               	btfss	CANSetMask@mask+2,1,c
  2950  001F58  D003               	goto	l445
  2951                           
  2952                           ; BSR set to: 15
  2953                           ;CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  2954  001F5A  010F               	movlb	15	; () banked
  2955  001F5C  831D               	bsf	29,1,b	;volatile
  2956  001F5E  D002               	goto	l446
  2957  001F60                     l445:
  2958                           
  2959                           ; BSR set to: 15
  2960                           ;CANlib.h: 720: else
  2961                           ;CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  2962  001F60  010F               	movlb	15	; () banked
  2963  001F62  931D               	bcf	29,1,b	;volatile
  2964  001F64                     l446:
  2965                           
  2966                           ; BSR set to: 15
  2967                           ;CANlib.h: 723: if (mask & 0x00040000)
  2968  001F64  A420               	btfss	CANSetMask@mask+2,2,c
  2969  001F66  D003               	goto	l447
  2970                           
  2971                           ; BSR set to: 15
  2972                           ;CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  2973  001F68  010F               	movlb	15	; () banked
  2974  001F6A  8B1D               	bsf	29,5,b	;volatile
  2975  001F6C  D002               	goto	l448
  2976  001F6E                     l447:
  2977                           
  2978                           ; BSR set to: 15
  2979                           ;CANlib.h: 725: else
  2980                           ;CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  2981  001F6E  010F               	movlb	15	; () banked
  2982  001F70  9B1D               	bcf	29,5,b	;volatile
  2983  001F72                     l448:
  2984                           
  2985                           ; BSR set to: 15
  2986                           ;CANlib.h: 728: if (mask & 0x00080000)
  2987  001F72  A620               	btfss	CANSetMask@mask+2,3,c
  2988  001F74  D003               	goto	l449
  2989                           
  2990                           ; BSR set to: 15
  2991                           ;CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  2992  001F76  010F               	movlb	15	; () banked
  2993  001F78  8D1D               	bsf	29,6,b	;volatile
  2994  001F7A  D002               	goto	l450
  2995  001F7C                     l449:
  2996                           
  2997                           ; BSR set to: 15
  2998                           ;CANlib.h: 730: else
  2999                           ;CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  3000  001F7C  010F               	movlb	15	; () banked
  3001  001F7E  9D1D               	bcf	29,6,b	;volatile
  3002  001F80                     l450:
  3003                           
  3004                           ; BSR set to: 15
  3005                           ;CANlib.h: 733: if (mask & 0x00100000)
  3006  001F80  A820               	btfss	CANSetMask@mask+2,4,c
  3007  001F82  D003               	goto	l451
  3008                           
  3009                           ; BSR set to: 15
  3010                           ;CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  3011  001F84  010F               	movlb	15	; () banked
  3012  001F86  8F1D               	bsf	29,7,b	;volatile
  3013  001F88  D002               	goto	l4070
  3014  001F8A                     l451:
  3015                           
  3016                           ; BSR set to: 15
  3017                           ;CANlib.h: 735: else
  3018                           ;CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  3019  001F8A  010F               	movlb	15	; () banked
  3020  001F8C  9F1D               	bcf	29,7,b	;volatile
  3021  001F8E                     l4070:
  3022                           
  3023                           ; BSR set to: 15
  3024                           ;CANlib.h: 738: tamp = (mask >> 21);
  3025  001F8E  C01E  F0AD         	movff	CANSetMask@mask,??_CANSetMask
  3026  001F92  C01F  F0AE         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3027  001F96  C020  F0AF         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3028  001F9A  C021  F0B0         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3029  001F9E  0E16               	movlw	22
  3030  001FA0  D006               	goto	u4910
  3031  001FA2                     u4915:
  3032  001FA2  0100               	movlb	0	; () banked
  3033  001FA4  90D8               	bcf	status,0,c
  3034  001FA6  33B0               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3035  001FA8  33AF               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3036  001FAA  33AE               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3037  001FAC  33AD               	rrcf	??_CANSetMask& (0+255),f,b
  3038  001FAE                     u4910:
  3039  001FAE  2EE8               	decfsz	wreg,f,c
  3040  001FB0  D7F8               	goto	u4915
  3041  001FB2  C0AD  F0B2         	movff	??_CANSetMask,CANSetMask@tamp
  3042  001FB6  C0AE  F0B3         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3043  001FBA  C0AF  F0B4         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3044  001FBE  C0B0  F0B5         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;CANlib.h: 739: tamp = tamp & 0x000000FF;
  3048  001FC2  0100               	movlb	0	; () banked
  3049  001FC4  51B2               	movf	CANSetMask@tamp& (0+255),w,b
  3050  001FC6  0100               	movlb	0	; () banked
  3051  001FC8  6FB2               	movwf	CANSetMask@tamp& (0+255),b
  3052  001FCA  6BB3               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3053  001FCC  6BB4               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3054  001FCE  6BB5               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  3058  001FD0  C0B2  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  3059  001FD4  0012               	return	
  3060  001FD6                     __end_of_CANSetMask:
  3061                           	opt stack 0
  3062                           tblptru	equ	0xFF8
  3063                           tblptrh	equ	0xFF7
  3064                           tblptrl	equ	0xFF6
  3065                           tablat	equ	0xFF5
  3066                           prodh	equ	0xFF4
  3067                           prodl	equ	0xFF3
  3068                           intcon	equ	0xFF2
  3069                           postinc0	equ	0xFEE
  3070                           wreg	equ	0xFE8
  3071                           indf1	equ	0xFE7
  3072                           postdec1	equ	0xFE5
  3073                           fsr1h	equ	0xFE2
  3074                           fsr1l	equ	0xFE1
  3075                           indf2	equ	0xFDF
  3076                           fsr2h	equ	0xFDA
  3077                           fsr2l	equ	0xFD9
  3078                           status	equ	0xFD8
  3079                           
  3080 ;; *************** function _CANSetFilter *****************
  3081 ;; Defined at:
  3082 ;;		line 748 in file "CANlib.h"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  numBuffer       1    wreg     enum E16881
  3085 ;;  filter          4   29[COMRAM] unsigned long 
  3086 ;;  type            1   33[COMRAM] enum E16844
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  numBuffer       1    4[BANK0 ] enum E16881
  3089 ;;  tamp            4    5[BANK0 ] unsigned long 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;		None               void
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3099 ;;      Params:         5       0       0       0
  3100 ;;      Locals:         0       5       0       0
  3101 ;;      Temps:          0       4       0       0
  3102 ;;      Totals:         5       9       0       0
  3103 ;;Total ram usage:       14 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    2
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_CANInitialize
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text7
  3114  00019C                     __ptext7:
  3115                           	opt stack 0
  3116  00019C                     _CANSetFilter:
  3117                           	opt stack 26
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;incstack = 0
  3121                           ;CANSetFilter@numBuffer stored from wreg
  3122  00019C  0100               	movlb	0	; () banked
  3123  00019E  6FB1               	movwf	CANSetFilter@numBuffer& (0+255),b
  3124                           
  3125                           ;CANlib.h: 750: unsigned long tamp;
  3126                           ;CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  3127  0001A0  0100               	movlb	0	; () banked
  3128  0001A2  51B1               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3129  0001A4  0100               	movlb	0	; () banked
  3130  0001A6  A4D8               	btfss	status,2,c
  3131  0001A8  D053               	goto	l4094
  3132                           
  3133                           ; BSR set to: 0
  3134  0001AA  2822               	incf	CANSetFilter@type,w,c
  3135  0001AC  A4D8               	btfss	status,2,c
  3136  0001AE  D050               	goto	l4094
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;CANlib.h: 753: {
  3140                           ;CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  3141  0001B0  010F               	movlb	15	; () banked
  3142  0001B2  9701               	bcf	1,3,b	;volatile
  3143                           
  3144                           ; BSR set to: 15
  3145                           ;CANlib.h: 756: tamp = (filter >> 3);
  3146  0001B4  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3147  0001B8  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3148  0001BC  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3149  0001C0  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3150  0001C4  0E04               	movlw	4
  3151  0001C6  D006               	goto	u4940
  3152  0001C8                     u4945:
  3153  0001C8  0100               	movlb	0	; () banked
  3154  0001CA  90D8               	bcf	status,0,c
  3155  0001CC  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3156  0001CE  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3157  0001D0  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3158  0001D2  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3159  0001D4                     u4940:
  3160  0001D4  2EE8               	decfsz	wreg,f,c
  3161  0001D6  D7F8               	goto	u4945
  3162  0001D8  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3163  0001DC  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3164  0001E0  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3165  0001E4  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;CANlib.h: 757: tamp = tamp & 0x000000FF;
  3169  0001E8  0100               	movlb	0	; () banked
  3170  0001EA  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3171  0001EC  0100               	movlb	0	; () banked
  3172  0001EE  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3173  0001F0  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3174  0001F2  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3175  0001F4  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  3179  0001F6  C0B2  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;CANlib.h: 760: tamp = filter & 0x00000007;
  3183  0001FA  0E07               	movlw	7
  3184  0001FC  141E               	andwf	CANSetFilter@filter,w,c
  3185  0001FE  0100               	movlb	0	; () banked
  3186  000200  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3187  000202  0E00               	movlw	0
  3188  000204  141F               	andwf	CANSetFilter@filter+1,w,c
  3189  000206  0100               	movlb	0	; () banked
  3190  000208  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3191  00020A  0E00               	movlw	0
  3192  00020C  1420               	andwf	CANSetFilter@filter+2,w,c
  3193  00020E  0100               	movlb	0	; () banked
  3194  000210  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3195  000212  0E00               	movlw	0
  3196  000214  1421               	andwf	CANSetFilter@filter+3,w,c
  3197  000216  0100               	movlb	0	; () banked
  3198  000218  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;CANlib.h: 761: tamp = tamp << 5;
  3202  00021A  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3203  00021E  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3204  000222  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3205  000226  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3206  00022A  0E05               	movlw	5
  3207  00022C                     u4955:
  3208  00022C  90D8               	bcf	status,0,c
  3209  00022E  0100               	movlb	0	; () banked
  3210  000230  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3211  000232  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3212  000234  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3213  000236  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3214  000238  2EE8               	decfsz	wreg,f,c
  3215  00023A  D7F8               	goto	u4955
  3216  00023C  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3217  000240  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3218  000244  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3219  000248  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  3223  00024C  C0B2  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  3224  000250                     l4094:
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;CANlib.h: 763: }
  3228                           ;CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  3229  000250  0100               	movlb	0	; () banked
  3230  000252  05B1               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3231  000254  A4D8               	btfss	status,2,c
  3232  000256  D053               	goto	l4112
  3233                           
  3234                           ; BSR set to: 0
  3235  000258  2822               	incf	CANSetFilter@type,w,c
  3236  00025A  A4D8               	btfss	status,2,c
  3237  00025C  D050               	goto	l4112
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;CANlib.h: 766: {
  3241                           ;CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  3242  00025E  010F               	movlb	15	; () banked
  3243  000260  9705               	bcf	5,3,b	;volatile
  3244                           
  3245                           ; BSR set to: 15
  3246                           ;CANlib.h: 769: tamp = (filter >> 3);
  3247  000262  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3248  000266  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3249  00026A  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3250  00026E  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3251  000272  0E04               	movlw	4
  3252  000274  D006               	goto	u4980
  3253  000276                     u4985:
  3254  000276  0100               	movlb	0	; () banked
  3255  000278  90D8               	bcf	status,0,c
  3256  00027A  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3257  00027C  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3258  00027E  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3259  000280  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3260  000282                     u4980:
  3261  000282  2EE8               	decfsz	wreg,f,c
  3262  000284  D7F8               	goto	u4985
  3263  000286  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3264  00028A  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3265  00028E  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3266  000292  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;CANlib.h: 770: tamp = tamp & 0x000000FF;
  3270  000296  0100               	movlb	0	; () banked
  3271  000298  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3272  00029A  0100               	movlb	0	; () banked
  3273  00029C  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3274  00029E  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3275  0002A0  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3276  0002A2  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  3280  0002A4  C0B2  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;CANlib.h: 773: tamp = filter & 0x00000007;
  3284  0002A8  0E07               	movlw	7
  3285  0002AA  141E               	andwf	CANSetFilter@filter,w,c
  3286  0002AC  0100               	movlb	0	; () banked
  3287  0002AE  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3288  0002B0  0E00               	movlw	0
  3289  0002B2  141F               	andwf	CANSetFilter@filter+1,w,c
  3290  0002B4  0100               	movlb	0	; () banked
  3291  0002B6  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3292  0002B8  0E00               	movlw	0
  3293  0002BA  1420               	andwf	CANSetFilter@filter+2,w,c
  3294  0002BC  0100               	movlb	0	; () banked
  3295  0002BE  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3296  0002C0  0E00               	movlw	0
  3297  0002C2  1421               	andwf	CANSetFilter@filter+3,w,c
  3298  0002C4  0100               	movlb	0	; () banked
  3299  0002C6  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;CANlib.h: 774: tamp = tamp << 5;
  3303  0002C8  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3304  0002CC  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3305  0002D0  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3306  0002D4  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3307  0002D8  0E05               	movlw	5
  3308  0002DA                     u4995:
  3309  0002DA  90D8               	bcf	status,0,c
  3310  0002DC  0100               	movlb	0	; () banked
  3311  0002DE  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3312  0002E0  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3313  0002E2  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3314  0002E4  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3315  0002E6  2EE8               	decfsz	wreg,f,c
  3316  0002E8  D7F8               	goto	u4995
  3317  0002EA  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3318  0002EE  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3319  0002F2  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3320  0002F6  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  3324  0002FA  C0B2  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  3325  0002FE                     l4112:
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;CANlib.h: 776: }
  3329                           ;CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  3330  0002FE  0E02               	movlw	2
  3331  000300  0100               	movlb	0	; () banked
  3332  000302  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3333  000304  A4D8               	btfss	status,2,c
  3334  000306  D053               	goto	l4130
  3335                           
  3336                           ; BSR set to: 0
  3337  000308  2822               	incf	CANSetFilter@type,w,c
  3338  00030A  A4D8               	btfss	status,2,c
  3339  00030C  D050               	goto	l4130
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;CANlib.h: 779: {
  3343                           ;CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  3344  00030E  010F               	movlb	15	; () banked
  3345  000310  9709               	bcf	9,3,b	;volatile
  3346                           
  3347                           ; BSR set to: 15
  3348                           ;CANlib.h: 782: tamp = (filter >> 3);
  3349  000312  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3350  000316  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3351  00031A  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3352  00031E  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3353  000322  0E04               	movlw	4
  3354  000324  D006               	goto	u5020
  3355  000326                     u5025:
  3356  000326  0100               	movlb	0	; () banked
  3357  000328  90D8               	bcf	status,0,c
  3358  00032A  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3359  00032C  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3360  00032E  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3361  000330  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3362  000332                     u5020:
  3363  000332  2EE8               	decfsz	wreg,f,c
  3364  000334  D7F8               	goto	u5025
  3365  000336  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3366  00033A  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3367  00033E  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3368  000342  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;CANlib.h: 783: tamp = tamp & 0x000000FF;
  3372  000346  0100               	movlb	0	; () banked
  3373  000348  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3374  00034A  0100               	movlb	0	; () banked
  3375  00034C  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3376  00034E  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3377  000350  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3378  000352  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  3382  000354  C0B2  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;CANlib.h: 786: tamp = filter & 0x00000007;
  3386  000358  0E07               	movlw	7
  3387  00035A  141E               	andwf	CANSetFilter@filter,w,c
  3388  00035C  0100               	movlb	0	; () banked
  3389  00035E  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3390  000360  0E00               	movlw	0
  3391  000362  141F               	andwf	CANSetFilter@filter+1,w,c
  3392  000364  0100               	movlb	0	; () banked
  3393  000366  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3394  000368  0E00               	movlw	0
  3395  00036A  1420               	andwf	CANSetFilter@filter+2,w,c
  3396  00036C  0100               	movlb	0	; () banked
  3397  00036E  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3398  000370  0E00               	movlw	0
  3399  000372  1421               	andwf	CANSetFilter@filter+3,w,c
  3400  000374  0100               	movlb	0	; () banked
  3401  000376  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;CANlib.h: 787: tamp = tamp << 5;
  3405  000378  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3406  00037C  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3407  000380  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3408  000384  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3409  000388  0E05               	movlw	5
  3410  00038A                     u5035:
  3411  00038A  90D8               	bcf	status,0,c
  3412  00038C  0100               	movlb	0	; () banked
  3413  00038E  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3414  000390  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3415  000392  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3416  000394  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3417  000396  2EE8               	decfsz	wreg,f,c
  3418  000398  D7F8               	goto	u5035
  3419  00039A  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3420  00039E  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3421  0003A2  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3422  0003A6  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  3426  0003AA  C0B2  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  3427  0003AE                     l4130:
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;CANlib.h: 789: }
  3431                           ;CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  3432  0003AE  0E03               	movlw	3
  3433  0003B0  0100               	movlb	0	; () banked
  3434  0003B2  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3435  0003B4  A4D8               	btfss	status,2,c
  3436  0003B6  D053               	goto	l4148
  3437                           
  3438                           ; BSR set to: 0
  3439  0003B8  2822               	incf	CANSetFilter@type,w,c
  3440  0003BA  A4D8               	btfss	status,2,c
  3441  0003BC  D050               	goto	l4148
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;CANlib.h: 792: {
  3445                           ;CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  3446  0003BE  010F               	movlb	15	; () banked
  3447  0003C0  970D               	bcf	13,3,b	;volatile
  3448                           
  3449                           ; BSR set to: 15
  3450                           ;CANlib.h: 795: tamp = (filter >> 3);
  3451  0003C2  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3452  0003C6  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3453  0003CA  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3454  0003CE  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3455  0003D2  0E04               	movlw	4
  3456  0003D4  D006               	goto	u5060
  3457  0003D6                     u5065:
  3458  0003D6  0100               	movlb	0	; () banked
  3459  0003D8  90D8               	bcf	status,0,c
  3460  0003DA  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3461  0003DC  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3462  0003DE  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3463  0003E0  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3464  0003E2                     u5060:
  3465  0003E2  2EE8               	decfsz	wreg,f,c
  3466  0003E4  D7F8               	goto	u5065
  3467  0003E6  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3468  0003EA  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3469  0003EE  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3470  0003F2  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;CANlib.h: 796: tamp = tamp & 0x000000FF;
  3474  0003F6  0100               	movlb	0	; () banked
  3475  0003F8  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3476  0003FA  0100               	movlb	0	; () banked
  3477  0003FC  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3478  0003FE  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3479  000400  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3480  000402  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  3484  000404  C0B2  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;CANlib.h: 799: tamp = filter & 0x00000007;
  3488  000408  0E07               	movlw	7
  3489  00040A  141E               	andwf	CANSetFilter@filter,w,c
  3490  00040C  0100               	movlb	0	; () banked
  3491  00040E  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3492  000410  0E00               	movlw	0
  3493  000412  141F               	andwf	CANSetFilter@filter+1,w,c
  3494  000414  0100               	movlb	0	; () banked
  3495  000416  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3496  000418  0E00               	movlw	0
  3497  00041A  1420               	andwf	CANSetFilter@filter+2,w,c
  3498  00041C  0100               	movlb	0	; () banked
  3499  00041E  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3500  000420  0E00               	movlw	0
  3501  000422  1421               	andwf	CANSetFilter@filter+3,w,c
  3502  000424  0100               	movlb	0	; () banked
  3503  000426  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;CANlib.h: 800: tamp = tamp << 5;
  3507  000428  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3508  00042C  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3509  000430  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3510  000434  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3511  000438  0E05               	movlw	5
  3512  00043A                     u5075:
  3513  00043A  90D8               	bcf	status,0,c
  3514  00043C  0100               	movlb	0	; () banked
  3515  00043E  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3516  000440  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3517  000442  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3518  000444  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3519  000446  2EE8               	decfsz	wreg,f,c
  3520  000448  D7F8               	goto	u5075
  3521  00044A  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3522  00044E  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3523  000452  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3524  000456  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  3528  00045A  C0B2  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  3529  00045E                     l4148:
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;CANlib.h: 802: }
  3533                           ;CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  3534  00045E  0E04               	movlw	4
  3535  000460  0100               	movlb	0	; () banked
  3536  000462  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3537  000464  A4D8               	btfss	status,2,c
  3538  000466  D053               	goto	l4166
  3539                           
  3540                           ; BSR set to: 0
  3541  000468  2822               	incf	CANSetFilter@type,w,c
  3542  00046A  A4D8               	btfss	status,2,c
  3543  00046C  D050               	goto	l4166
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;CANlib.h: 805: {
  3547                           ;CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  3548  00046E  010F               	movlb	15	; () banked
  3549  000470  9711               	bcf	17,3,b	;volatile
  3550                           
  3551                           ; BSR set to: 15
  3552                           ;CANlib.h: 808: tamp = (filter >> 3);
  3553  000472  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3554  000476  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3555  00047A  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3556  00047E  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3557  000482  0E04               	movlw	4
  3558  000484  D006               	goto	u5100
  3559  000486                     u5105:
  3560  000486  0100               	movlb	0	; () banked
  3561  000488  90D8               	bcf	status,0,c
  3562  00048A  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3563  00048C  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3564  00048E  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3565  000490  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3566  000492                     u5100:
  3567  000492  2EE8               	decfsz	wreg,f,c
  3568  000494  D7F8               	goto	u5105
  3569  000496  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3570  00049A  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3571  00049E  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3572  0004A2  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;CANlib.h: 809: tamp = tamp & 0x000000FF;
  3576  0004A6  0100               	movlb	0	; () banked
  3577  0004A8  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3578  0004AA  0100               	movlb	0	; () banked
  3579  0004AC  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3580  0004AE  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3581  0004B0  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3582  0004B2  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  3586  0004B4  C0B2  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;CANlib.h: 812: tamp = filter & 0x00000007;
  3590  0004B8  0E07               	movlw	7
  3591  0004BA  141E               	andwf	CANSetFilter@filter,w,c
  3592  0004BC  0100               	movlb	0	; () banked
  3593  0004BE  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3594  0004C0  0E00               	movlw	0
  3595  0004C2  141F               	andwf	CANSetFilter@filter+1,w,c
  3596  0004C4  0100               	movlb	0	; () banked
  3597  0004C6  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3598  0004C8  0E00               	movlw	0
  3599  0004CA  1420               	andwf	CANSetFilter@filter+2,w,c
  3600  0004CC  0100               	movlb	0	; () banked
  3601  0004CE  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3602  0004D0  0E00               	movlw	0
  3603  0004D2  1421               	andwf	CANSetFilter@filter+3,w,c
  3604  0004D4  0100               	movlb	0	; () banked
  3605  0004D6  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;CANlib.h: 813: tamp = tamp << 5;
  3609  0004D8  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3610  0004DC  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3611  0004E0  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3612  0004E4  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3613  0004E8  0E05               	movlw	5
  3614  0004EA                     u5115:
  3615  0004EA  90D8               	bcf	status,0,c
  3616  0004EC  0100               	movlb	0	; () banked
  3617  0004EE  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3618  0004F0  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3619  0004F2  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3620  0004F4  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3621  0004F6  2EE8               	decfsz	wreg,f,c
  3622  0004F8  D7F8               	goto	u5115
  3623  0004FA  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3624  0004FE  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3625  000502  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3626  000506  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  3630  00050A  C0B2  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  3631  00050E                     l4166:
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;CANlib.h: 815: }
  3635                           ;CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  3636  00050E  0E05               	movlw	5
  3637  000510  0100               	movlb	0	; () banked
  3638  000512  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  3639  000514  A4D8               	btfss	status,2,c
  3640  000516  D053               	goto	l4184
  3641                           
  3642                           ; BSR set to: 0
  3643  000518  2822               	incf	CANSetFilter@type,w,c
  3644  00051A  A4D8               	btfss	status,2,c
  3645  00051C  D050               	goto	l4184
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;CANlib.h: 818: {
  3649                           ;CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  3650  00051E  010F               	movlb	15	; () banked
  3651  000520  9715               	bcf	21,3,b	;volatile
  3652                           
  3653                           ; BSR set to: 15
  3654                           ;CANlib.h: 821: tamp = (filter >> 3);
  3655  000522  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3656  000526  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3657  00052A  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3658  00052E  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3659  000532  0E04               	movlw	4
  3660  000534  D006               	goto	u5140
  3661  000536                     u5145:
  3662  000536  0100               	movlb	0	; () banked
  3663  000538  90D8               	bcf	status,0,c
  3664  00053A  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3665  00053C  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3666  00053E  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3667  000540  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3668  000542                     u5140:
  3669  000542  2EE8               	decfsz	wreg,f,c
  3670  000544  D7F8               	goto	u5145
  3671  000546  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3672  00054A  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3673  00054E  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3674  000552  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;CANlib.h: 822: tamp = tamp & 0x000000FF;
  3678  000556  0100               	movlb	0	; () banked
  3679  000558  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3680  00055A  0100               	movlb	0	; () banked
  3681  00055C  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3682  00055E  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3683  000560  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3684  000562  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  3688  000564  C0B2  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;CANlib.h: 825: tamp = filter & 0x00000007;
  3692  000568  0E07               	movlw	7
  3693  00056A  141E               	andwf	CANSetFilter@filter,w,c
  3694  00056C  0100               	movlb	0	; () banked
  3695  00056E  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3696  000570  0E00               	movlw	0
  3697  000572  141F               	andwf	CANSetFilter@filter+1,w,c
  3698  000574  0100               	movlb	0	; () banked
  3699  000576  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3700  000578  0E00               	movlw	0
  3701  00057A  1420               	andwf	CANSetFilter@filter+2,w,c
  3702  00057C  0100               	movlb	0	; () banked
  3703  00057E  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3704  000580  0E00               	movlw	0
  3705  000582  1421               	andwf	CANSetFilter@filter+3,w,c
  3706  000584  0100               	movlb	0	; () banked
  3707  000586  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;CANlib.h: 826: tamp = tamp << 5;
  3711  000588  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3712  00058C  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3713  000590  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3714  000594  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3715  000598  0E05               	movlw	5
  3716  00059A                     u5155:
  3717  00059A  90D8               	bcf	status,0,c
  3718  00059C  0100               	movlb	0	; () banked
  3719  00059E  37AD               	rlcf	??_CANSetFilter& (0+255),f,b
  3720  0005A0  37AE               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  3721  0005A2  37AF               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  3722  0005A4  37B0               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  3723  0005A6  2EE8               	decfsz	wreg,f,c
  3724  0005A8  D7F8               	goto	u5155
  3725  0005AA  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3726  0005AE  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3727  0005B2  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3728  0005B6  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  3732  0005BA  C0B2  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  3733  0005BE                     l4184:
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;CANlib.h: 828: }
  3737                           ;CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  3738  0005BE  0100               	movlb	0	; () banked
  3739  0005C0  51B1               	movf	CANSetFilter@numBuffer& (0+255),w,b
  3740  0005C2  0100               	movlb	0	; () banked
  3741  0005C4  A4D8               	btfss	status,2,c
  3742  0005C6  D07E               	goto	l4218
  3743                           
  3744                           ; BSR set to: 0
  3745  0005C8  0EF7               	movlw	247
  3746  0005CA  1822               	xorwf	CANSetFilter@type,w,c
  3747  0005CC  A4D8               	btfss	status,2,c
  3748  0005CE  D07A               	goto	l4218
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;CANlib.h: 832: {
  3752                           ;CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  3753  0005D0  010F               	movlb	15	; () banked
  3754  0005D2  8701               	bsf	1,3,b	;volatile
  3755                           
  3756                           ; BSR set to: 15
  3757                           ;CANlib.h: 835: tamp = filter & 0x000000FF;
  3758  0005D4  501E               	movf	CANSetFilter@filter,w,c
  3759  0005D6  0100               	movlb	0	; () banked
  3760  0005D8  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3761  0005DA  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3762  0005DC  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3763  0005DE  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  3767  0005E0  C0B2  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;CANlib.h: 838: tamp = filter & 0x0000FF00;
  3771  0005E4  0E00               	movlw	0
  3772  0005E6  141E               	andwf	CANSetFilter@filter,w,c
  3773  0005E8  0100               	movlb	0	; () banked
  3774  0005EA  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3775  0005EC  0EFF               	movlw	255
  3776  0005EE  141F               	andwf	CANSetFilter@filter+1,w,c
  3777  0005F0  0100               	movlb	0	; () banked
  3778  0005F2  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3779  0005F4  0E00               	movlw	0
  3780  0005F6  1420               	andwf	CANSetFilter@filter+2,w,c
  3781  0005F8  0100               	movlb	0	; () banked
  3782  0005FA  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3783  0005FC  0E00               	movlw	0
  3784  0005FE  1421               	andwf	CANSetFilter@filter+3,w,c
  3785  000600  0100               	movlb	0	; () banked
  3786  000602  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;CANlib.h: 839: tamp = tamp >> 8;
  3790  000604  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3791  000608  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3792  00060C  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3793  000610  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3794  000614  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  3795  000618  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  3796  00061C  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  3797  000620  0100               	movlb	0	; () banked
  3798  000622  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  3799  000624  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3800  000628  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3801  00062C  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3802  000630  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  3806  000634  C0B2  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;CANlib.h: 842: if (filter & 0x00010000)
  3810  000638  A020               	btfss	CANSetFilter@filter+2,0,c
  3811  00063A  D003               	goto	l463
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  3815  00063C  010F               	movlb	15	; () banked
  3816  00063E  8101               	bsf	1,0,b	;volatile
  3817  000640  D002               	goto	l464
  3818  000642                     l463:
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;CANlib.h: 844: else
  3822                           ;CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  3823  000642  010F               	movlb	15	; () banked
  3824  000644  9101               	bcf	1,0,b	;volatile
  3825  000646                     l464:
  3826                           
  3827                           ; BSR set to: 15
  3828                           ;CANlib.h: 847: if (filter & 0x00020000)
  3829  000646  A220               	btfss	CANSetFilter@filter+2,1,c
  3830  000648  D003               	goto	l465
  3831                           
  3832                           ; BSR set to: 15
  3833                           ;CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  3834  00064A  010F               	movlb	15	; () banked
  3835  00064C  8301               	bsf	1,1,b	;volatile
  3836  00064E  D002               	goto	l466
  3837  000650                     l465:
  3838                           
  3839                           ; BSR set to: 15
  3840                           ;CANlib.h: 849: else
  3841                           ;CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  3842  000650  010F               	movlb	15	; () banked
  3843  000652  9301               	bcf	1,1,b	;volatile
  3844  000654                     l466:
  3845                           
  3846                           ; BSR set to: 15
  3847                           ;CANlib.h: 852: if (filter & 0x00040000)
  3848  000654  A420               	btfss	CANSetFilter@filter+2,2,c
  3849  000656  D003               	goto	l467
  3850                           
  3851                           ; BSR set to: 15
  3852                           ;CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  3853  000658  010F               	movlb	15	; () banked
  3854  00065A  8B01               	bsf	1,5,b	;volatile
  3855  00065C  D002               	goto	l468
  3856  00065E                     l467:
  3857                           
  3858                           ; BSR set to: 15
  3859                           ;CANlib.h: 854: else
  3860                           ;CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  3861  00065E  010F               	movlb	15	; () banked
  3862  000660  9B01               	bcf	1,5,b	;volatile
  3863  000662                     l468:
  3864                           
  3865                           ; BSR set to: 15
  3866                           ;CANlib.h: 857: if (filter & 0x00080000)
  3867  000662  A620               	btfss	CANSetFilter@filter+2,3,c
  3868  000664  D003               	goto	l469
  3869                           
  3870                           ; BSR set to: 15
  3871                           ;CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  3872  000666  010F               	movlb	15	; () banked
  3873  000668  8D01               	bsf	1,6,b	;volatile
  3874  00066A  D002               	goto	l470
  3875  00066C                     l469:
  3876                           
  3877                           ; BSR set to: 15
  3878                           ;CANlib.h: 859: else
  3879                           ;CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  3880  00066C  010F               	movlb	15	; () banked
  3881  00066E  9D01               	bcf	1,6,b	;volatile
  3882  000670                     l470:
  3883                           
  3884                           ; BSR set to: 15
  3885                           ;CANlib.h: 862: if (filter & 0x00100000)
  3886  000670  A820               	btfss	CANSetFilter@filter+2,4,c
  3887  000672  D003               	goto	l471
  3888                           
  3889                           ; BSR set to: 15
  3890                           ;CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  3891  000674  010F               	movlb	15	; () banked
  3892  000676  8F01               	bsf	1,7,b	;volatile
  3893  000678  D002               	goto	l4212
  3894  00067A                     l471:
  3895                           
  3896                           ; BSR set to: 15
  3897                           ;CANlib.h: 864: else
  3898                           ;CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  3899  00067A  010F               	movlb	15	; () banked
  3900  00067C  9F01               	bcf	1,7,b	;volatile
  3901  00067E                     l4212:
  3902                           
  3903                           ; BSR set to: 15
  3904                           ;CANlib.h: 867: tamp = (filter >> 21);
  3905  00067E  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  3906  000682  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  3907  000686  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  3908  00068A  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  3909  00068E  0E16               	movlw	22
  3910  000690  D006               	goto	u5230
  3911  000692                     u5235:
  3912  000692  0100               	movlb	0	; () banked
  3913  000694  90D8               	bcf	status,0,c
  3914  000696  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  3915  000698  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  3916  00069A  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  3917  00069C  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  3918  00069E                     u5230:
  3919  00069E  2EE8               	decfsz	wreg,f,c
  3920  0006A0  D7F8               	goto	u5235
  3921  0006A2  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  3922  0006A6  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  3923  0006AA  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  3924  0006AE  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;CANlib.h: 868: tamp = tamp & 0x000000FF;
  3928  0006B2  0100               	movlb	0	; () banked
  3929  0006B4  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  3930  0006B6  0100               	movlb	0	; () banked
  3931  0006B8  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3932  0006BA  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3933  0006BC  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3934  0006BE  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  3938  0006C0  C0B2  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  3939  0006C4                     l4218:
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;CANlib.h: 870: }
  3943                           ;CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  3944  0006C4  0100               	movlb	0	; () banked
  3945  0006C6  05B1               	decf	CANSetFilter@numBuffer& (0+255),w,b
  3946  0006C8  A4D8               	btfss	status,2,c
  3947  0006CA  D07E               	goto	l4252
  3948                           
  3949                           ; BSR set to: 0
  3950  0006CC  0EF7               	movlw	247
  3951  0006CE  1822               	xorwf	CANSetFilter@type,w,c
  3952  0006D0  A4D8               	btfss	status,2,c
  3953  0006D2  D07A               	goto	l4252
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;CANlib.h: 873: {
  3957                           ;CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  3958  0006D4  010F               	movlb	15	; () banked
  3959  0006D6  8705               	bsf	5,3,b	;volatile
  3960                           
  3961                           ; BSR set to: 15
  3962                           ;CANlib.h: 876: tamp = filter & 0x000000FF;
  3963  0006D8  501E               	movf	CANSetFilter@filter,w,c
  3964  0006DA  0100               	movlb	0	; () banked
  3965  0006DC  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3966  0006DE  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  3967  0006E0  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  3968  0006E2  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  3972  0006E4  C0B2  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;CANlib.h: 879: tamp = filter & 0x0000FF00;
  3976  0006E8  0E00               	movlw	0
  3977  0006EA  141E               	andwf	CANSetFilter@filter,w,c
  3978  0006EC  0100               	movlb	0	; () banked
  3979  0006EE  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  3980  0006F0  0EFF               	movlw	255
  3981  0006F2  141F               	andwf	CANSetFilter@filter+1,w,c
  3982  0006F4  0100               	movlb	0	; () banked
  3983  0006F6  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  3984  0006F8  0E00               	movlw	0
  3985  0006FA  1420               	andwf	CANSetFilter@filter+2,w,c
  3986  0006FC  0100               	movlb	0	; () banked
  3987  0006FE  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  3988  000700  0E00               	movlw	0
  3989  000702  1421               	andwf	CANSetFilter@filter+3,w,c
  3990  000704  0100               	movlb	0	; () banked
  3991  000706  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;CANlib.h: 880: tamp = tamp >> 8;
  3995  000708  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  3996  00070C  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  3997  000710  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  3998  000714  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  3999  000718  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  4000  00071C  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4001  000720  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4002  000724  0100               	movlb	0	; () banked
  4003  000726  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  4004  000728  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4005  00072C  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4006  000730  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4007  000734  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  4011  000738  C0B2  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;CANlib.h: 883: if (filter & 0x00010000)
  4015  00073C  A020               	btfss	CANSetFilter@filter+2,0,c
  4016  00073E  D003               	goto	l474
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  4020  000740  010F               	movlb	15	; () banked
  4021  000742  8105               	bsf	5,0,b	;volatile
  4022  000744  D002               	goto	l475
  4023  000746                     l474:
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;CANlib.h: 885: else
  4027                           ;CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  4028  000746  010F               	movlb	15	; () banked
  4029  000748  9105               	bcf	5,0,b	;volatile
  4030  00074A                     l475:
  4031                           
  4032                           ; BSR set to: 15
  4033                           ;CANlib.h: 888: if (filter & 0x00020000)
  4034  00074A  A220               	btfss	CANSetFilter@filter+2,1,c
  4035  00074C  D003               	goto	l476
  4036                           
  4037                           ; BSR set to: 15
  4038                           ;CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  4039  00074E  010F               	movlb	15	; () banked
  4040  000750  8305               	bsf	5,1,b	;volatile
  4041  000752  D002               	goto	l477
  4042  000754                     l476:
  4043                           
  4044                           ; BSR set to: 15
  4045                           ;CANlib.h: 890: else
  4046                           ;CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  4047  000754  010F               	movlb	15	; () banked
  4048  000756  9305               	bcf	5,1,b	;volatile
  4049  000758                     l477:
  4050                           
  4051                           ; BSR set to: 15
  4052                           ;CANlib.h: 893: if (filter & 0x00040000)
  4053  000758  A420               	btfss	CANSetFilter@filter+2,2,c
  4054  00075A  D003               	goto	l478
  4055                           
  4056                           ; BSR set to: 15
  4057                           ;CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  4058  00075C  010F               	movlb	15	; () banked
  4059  00075E  8B05               	bsf	5,5,b	;volatile
  4060  000760  D002               	goto	l479
  4061  000762                     l478:
  4062                           
  4063                           ; BSR set to: 15
  4064                           ;CANlib.h: 895: else
  4065                           ;CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  4066  000762  010F               	movlb	15	; () banked
  4067  000764  9B05               	bcf	5,5,b	;volatile
  4068  000766                     l479:
  4069                           
  4070                           ; BSR set to: 15
  4071                           ;CANlib.h: 898: if (filter & 0x00080000)
  4072  000766  A620               	btfss	CANSetFilter@filter+2,3,c
  4073  000768  D003               	goto	l480
  4074                           
  4075                           ; BSR set to: 15
  4076                           ;CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  4077  00076A  010F               	movlb	15	; () banked
  4078  00076C  8D05               	bsf	5,6,b	;volatile
  4079  00076E  D002               	goto	l481
  4080  000770                     l480:
  4081                           
  4082                           ; BSR set to: 15
  4083                           ;CANlib.h: 900: else
  4084                           ;CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  4085  000770  010F               	movlb	15	; () banked
  4086  000772  9D05               	bcf	5,6,b	;volatile
  4087  000774                     l481:
  4088                           
  4089                           ; BSR set to: 15
  4090                           ;CANlib.h: 903: if (filter & 0x00100000)
  4091  000774  A820               	btfss	CANSetFilter@filter+2,4,c
  4092  000776  D003               	goto	l482
  4093                           
  4094                           ; BSR set to: 15
  4095                           ;CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  4096  000778  010F               	movlb	15	; () banked
  4097  00077A  8F05               	bsf	5,7,b	;volatile
  4098  00077C  D002               	goto	l4246
  4099  00077E                     l482:
  4100                           
  4101                           ; BSR set to: 15
  4102                           ;CANlib.h: 905: else
  4103                           ;CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  4104  00077E  010F               	movlb	15	; () banked
  4105  000780  9F05               	bcf	5,7,b	;volatile
  4106  000782                     l4246:
  4107                           
  4108                           ; BSR set to: 15
  4109                           ;CANlib.h: 908: tamp = (filter >> 21);
  4110  000782  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  4111  000786  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4112  00078A  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4113  00078E  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4114  000792  0E16               	movlw	22
  4115  000794  D006               	goto	u5310
  4116  000796                     u5315:
  4117  000796  0100               	movlb	0	; () banked
  4118  000798  90D8               	bcf	status,0,c
  4119  00079A  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4120  00079C  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4121  00079E  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4122  0007A0  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  4123  0007A2                     u5310:
  4124  0007A2  2EE8               	decfsz	wreg,f,c
  4125  0007A4  D7F8               	goto	u5315
  4126  0007A6  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4127  0007AA  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4128  0007AE  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4129  0007B2  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;CANlib.h: 909: tamp = tamp & 0x000000FF;
  4133  0007B6  0100               	movlb	0	; () banked
  4134  0007B8  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  4135  0007BA  0100               	movlb	0	; () banked
  4136  0007BC  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4137  0007BE  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4138  0007C0  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4139  0007C2  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  4143  0007C4  C0B2  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4144  0007C8                     l4252:
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;CANlib.h: 911: }
  4148                           ;CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  4149  0007C8  0E02               	movlw	2
  4150  0007CA  0100               	movlb	0	; () banked
  4151  0007CC  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4152  0007CE  A4D8               	btfss	status,2,c
  4153  0007D0  D07E               	goto	l4286
  4154                           
  4155                           ; BSR set to: 0
  4156  0007D2  0EF7               	movlw	247
  4157  0007D4  1822               	xorwf	CANSetFilter@type,w,c
  4158  0007D6  A4D8               	btfss	status,2,c
  4159  0007D8  D07A               	goto	l4286
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;CANlib.h: 915: {
  4163                           ;CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  4164  0007DA  010F               	movlb	15	; () banked
  4165  0007DC  8709               	bsf	9,3,b	;volatile
  4166                           
  4167                           ; BSR set to: 15
  4168                           ;CANlib.h: 918: tamp = filter & 0x000000FF;
  4169  0007DE  501E               	movf	CANSetFilter@filter,w,c
  4170  0007E0  0100               	movlb	0	; () banked
  4171  0007E2  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4172  0007E4  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4173  0007E6  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4174  0007E8  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  4178  0007EA  C0B2  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;CANlib.h: 921: tamp = filter & 0x0000FF00;
  4182  0007EE  0E00               	movlw	0
  4183  0007F0  141E               	andwf	CANSetFilter@filter,w,c
  4184  0007F2  0100               	movlb	0	; () banked
  4185  0007F4  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4186  0007F6  0EFF               	movlw	255
  4187  0007F8  141F               	andwf	CANSetFilter@filter+1,w,c
  4188  0007FA  0100               	movlb	0	; () banked
  4189  0007FC  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4190  0007FE  0E00               	movlw	0
  4191  000800  1420               	andwf	CANSetFilter@filter+2,w,c
  4192  000802  0100               	movlb	0	; () banked
  4193  000804  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4194  000806  0E00               	movlw	0
  4195  000808  1421               	andwf	CANSetFilter@filter+3,w,c
  4196  00080A  0100               	movlb	0	; () banked
  4197  00080C  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;CANlib.h: 922: tamp = tamp >> 8;
  4201  00080E  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4202  000812  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4203  000816  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4204  00081A  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4205  00081E  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  4206  000822  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4207  000826  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4208  00082A  0100               	movlb	0	; () banked
  4209  00082C  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  4210  00082E  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4211  000832  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4212  000836  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4213  00083A  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  4217  00083E  C0B2  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;CANlib.h: 925: if (filter & 0x00010000)
  4221  000842  A020               	btfss	CANSetFilter@filter+2,0,c
  4222  000844  D003               	goto	l485
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  4226  000846  010F               	movlb	15	; () banked
  4227  000848  8109               	bsf	9,0,b	;volatile
  4228  00084A  D002               	goto	l486
  4229  00084C                     l485:
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;CANlib.h: 927: else
  4233                           ;CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  4234  00084C  010F               	movlb	15	; () banked
  4235  00084E  9109               	bcf	9,0,b	;volatile
  4236  000850                     l486:
  4237                           
  4238                           ; BSR set to: 15
  4239                           ;CANlib.h: 930: if (filter & 0x00020000)
  4240  000850  A220               	btfss	CANSetFilter@filter+2,1,c
  4241  000852  D003               	goto	l487
  4242                           
  4243                           ; BSR set to: 15
  4244                           ;CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  4245  000854  010F               	movlb	15	; () banked
  4246  000856  8309               	bsf	9,1,b	;volatile
  4247  000858  D002               	goto	l488
  4248  00085A                     l487:
  4249                           
  4250                           ; BSR set to: 15
  4251                           ;CANlib.h: 932: else
  4252                           ;CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  4253  00085A  010F               	movlb	15	; () banked
  4254  00085C  9309               	bcf	9,1,b	;volatile
  4255  00085E                     l488:
  4256                           
  4257                           ; BSR set to: 15
  4258                           ;CANlib.h: 935: if (filter & 0x00040000)
  4259  00085E  A420               	btfss	CANSetFilter@filter+2,2,c
  4260  000860  D003               	goto	l489
  4261                           
  4262                           ; BSR set to: 15
  4263                           ;CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  4264  000862  010F               	movlb	15	; () banked
  4265  000864  8B09               	bsf	9,5,b	;volatile
  4266  000866  D002               	goto	l490
  4267  000868                     l489:
  4268                           
  4269                           ; BSR set to: 15
  4270                           ;CANlib.h: 937: else
  4271                           ;CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  4272  000868  010F               	movlb	15	; () banked
  4273  00086A  9B09               	bcf	9,5,b	;volatile
  4274  00086C                     l490:
  4275                           
  4276                           ; BSR set to: 15
  4277                           ;CANlib.h: 940: if (filter & 0x00080000)
  4278  00086C  A620               	btfss	CANSetFilter@filter+2,3,c
  4279  00086E  D003               	goto	l491
  4280                           
  4281                           ; BSR set to: 15
  4282                           ;CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  4283  000870  010F               	movlb	15	; () banked
  4284  000872  8D09               	bsf	9,6,b	;volatile
  4285  000874  D002               	goto	l492
  4286  000876                     l491:
  4287                           
  4288                           ; BSR set to: 15
  4289                           ;CANlib.h: 942: else
  4290                           ;CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  4291  000876  010F               	movlb	15	; () banked
  4292  000878  9D09               	bcf	9,6,b	;volatile
  4293  00087A                     l492:
  4294                           
  4295                           ; BSR set to: 15
  4296                           ;CANlib.h: 945: if (filter & 0x00100000)
  4297  00087A  A820               	btfss	CANSetFilter@filter+2,4,c
  4298  00087C  D003               	goto	l493
  4299                           
  4300                           ; BSR set to: 15
  4301                           ;CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  4302  00087E  010F               	movlb	15	; () banked
  4303  000880  8F09               	bsf	9,7,b	;volatile
  4304  000882  D002               	goto	l4280
  4305  000884                     l493:
  4306                           
  4307                           ; BSR set to: 15
  4308                           ;CANlib.h: 947: else
  4309                           ;CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  4310  000884  010F               	movlb	15	; () banked
  4311  000886  9F09               	bcf	9,7,b	;volatile
  4312  000888                     l4280:
  4313                           
  4314                           ; BSR set to: 15
  4315                           ;CANlib.h: 950: tamp = (filter >> 21);
  4316  000888  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  4317  00088C  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4318  000890  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4319  000894  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4320  000898  0E16               	movlw	22
  4321  00089A  D006               	goto	u5390
  4322  00089C                     u5395:
  4323  00089C  0100               	movlb	0	; () banked
  4324  00089E  90D8               	bcf	status,0,c
  4325  0008A0  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4326  0008A2  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4327  0008A4  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4328  0008A6  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  4329  0008A8                     u5390:
  4330  0008A8  2EE8               	decfsz	wreg,f,c
  4331  0008AA  D7F8               	goto	u5395
  4332  0008AC  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4333  0008B0  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4334  0008B4  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4335  0008B8  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;CANlib.h: 951: tamp = tamp & 0x000000FF;
  4339  0008BC  0100               	movlb	0	; () banked
  4340  0008BE  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  4341  0008C0  0100               	movlb	0	; () banked
  4342  0008C2  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4343  0008C4  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4344  0008C6  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4345  0008C8  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  4349  0008CA  C0B2  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4350  0008CE                     l4286:
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;CANlib.h: 953: }
  4354                           ;CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  4355  0008CE  0E03               	movlw	3
  4356  0008D0  0100               	movlb	0	; () banked
  4357  0008D2  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4358  0008D4  A4D8               	btfss	status,2,c
  4359  0008D6  D07E               	goto	l4320
  4360                           
  4361                           ; BSR set to: 0
  4362  0008D8  0EF7               	movlw	247
  4363  0008DA  1822               	xorwf	CANSetFilter@type,w,c
  4364  0008DC  A4D8               	btfss	status,2,c
  4365  0008DE  D07A               	goto	l4320
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;CANlib.h: 956: {
  4369                           ;CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  4370  0008E0  010F               	movlb	15	; () banked
  4371  0008E2  870D               	bsf	13,3,b	;volatile
  4372                           
  4373                           ; BSR set to: 15
  4374                           ;CANlib.h: 959: tamp = filter & 0x000000FF;
  4375  0008E4  501E               	movf	CANSetFilter@filter,w,c
  4376  0008E6  0100               	movlb	0	; () banked
  4377  0008E8  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4378  0008EA  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4379  0008EC  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4380  0008EE  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  4384  0008F0  C0B2  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;CANlib.h: 962: tamp = filter & 0x0000FF00;
  4388  0008F4  0E00               	movlw	0
  4389  0008F6  141E               	andwf	CANSetFilter@filter,w,c
  4390  0008F8  0100               	movlb	0	; () banked
  4391  0008FA  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4392  0008FC  0EFF               	movlw	255
  4393  0008FE  141F               	andwf	CANSetFilter@filter+1,w,c
  4394  000900  0100               	movlb	0	; () banked
  4395  000902  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4396  000904  0E00               	movlw	0
  4397  000906  1420               	andwf	CANSetFilter@filter+2,w,c
  4398  000908  0100               	movlb	0	; () banked
  4399  00090A  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4400  00090C  0E00               	movlw	0
  4401  00090E  1421               	andwf	CANSetFilter@filter+3,w,c
  4402  000910  0100               	movlb	0	; () banked
  4403  000912  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;CANlib.h: 963: tamp = tamp >> 8;
  4407  000914  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4408  000918  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4409  00091C  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4410  000920  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4411  000924  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  4412  000928  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4413  00092C  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4414  000930  0100               	movlb	0	; () banked
  4415  000932  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  4416  000934  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4417  000938  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4418  00093C  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4419  000940  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  4423  000944  C0B2  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;CANlib.h: 966: if (filter & 0x00010000)
  4427  000948  A020               	btfss	CANSetFilter@filter+2,0,c
  4428  00094A  D003               	goto	l496
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  4432  00094C  010F               	movlb	15	; () banked
  4433  00094E  810D               	bsf	13,0,b	;volatile
  4434  000950  D002               	goto	l497
  4435  000952                     l496:
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;CANlib.h: 968: else
  4439                           ;CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  4440  000952  010F               	movlb	15	; () banked
  4441  000954  910D               	bcf	13,0,b	;volatile
  4442  000956                     l497:
  4443                           
  4444                           ; BSR set to: 15
  4445                           ;CANlib.h: 971: if (filter & 0x00020000)
  4446  000956  A220               	btfss	CANSetFilter@filter+2,1,c
  4447  000958  D003               	goto	l498
  4448                           
  4449                           ; BSR set to: 15
  4450                           ;CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  4451  00095A  010F               	movlb	15	; () banked
  4452  00095C  830D               	bsf	13,1,b	;volatile
  4453  00095E  D002               	goto	l499
  4454  000960                     l498:
  4455                           
  4456                           ; BSR set to: 15
  4457                           ;CANlib.h: 973: else
  4458                           ;CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  4459  000960  010F               	movlb	15	; () banked
  4460  000962  930D               	bcf	13,1,b	;volatile
  4461  000964                     l499:
  4462                           
  4463                           ; BSR set to: 15
  4464                           ;CANlib.h: 976: if (filter & 0x00040000)
  4465  000964  A420               	btfss	CANSetFilter@filter+2,2,c
  4466  000966  D003               	goto	l500
  4467                           
  4468                           ; BSR set to: 15
  4469                           ;CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  4470  000968  010F               	movlb	15	; () banked
  4471  00096A  8B0D               	bsf	13,5,b	;volatile
  4472  00096C  D002               	goto	l501
  4473  00096E                     l500:
  4474                           
  4475                           ; BSR set to: 15
  4476                           ;CANlib.h: 978: else
  4477                           ;CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  4478  00096E  010F               	movlb	15	; () banked
  4479  000970  9B0D               	bcf	13,5,b	;volatile
  4480  000972                     l501:
  4481                           
  4482                           ; BSR set to: 15
  4483                           ;CANlib.h: 981: if (filter & 0x00080000)
  4484  000972  A620               	btfss	CANSetFilter@filter+2,3,c
  4485  000974  D003               	goto	l502
  4486                           
  4487                           ; BSR set to: 15
  4488                           ;CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  4489  000976  010F               	movlb	15	; () banked
  4490  000978  8D0D               	bsf	13,6,b	;volatile
  4491  00097A  D002               	goto	l503
  4492  00097C                     l502:
  4493                           
  4494                           ; BSR set to: 15
  4495                           ;CANlib.h: 983: else
  4496                           ;CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  4497  00097C  010F               	movlb	15	; () banked
  4498  00097E  9D0D               	bcf	13,6,b	;volatile
  4499  000980                     l503:
  4500                           
  4501                           ; BSR set to: 15
  4502                           ;CANlib.h: 986: if (filter & 0x00100000)
  4503  000980  A820               	btfss	CANSetFilter@filter+2,4,c
  4504  000982  D003               	goto	l504
  4505                           
  4506                           ; BSR set to: 15
  4507                           ;CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  4508  000984  010F               	movlb	15	; () banked
  4509  000986  8F0D               	bsf	13,7,b	;volatile
  4510  000988  D002               	goto	l4314
  4511  00098A                     l504:
  4512                           
  4513                           ; BSR set to: 15
  4514                           ;CANlib.h: 988: else
  4515                           ;CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  4516  00098A  010F               	movlb	15	; () banked
  4517  00098C  9F0D               	bcf	13,7,b	;volatile
  4518  00098E                     l4314:
  4519                           
  4520                           ; BSR set to: 15
  4521                           ;CANlib.h: 991: tamp = (filter >> 21);
  4522  00098E  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  4523  000992  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4524  000996  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4525  00099A  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4526  00099E  0E16               	movlw	22
  4527  0009A0  D006               	goto	u5470
  4528  0009A2                     u5475:
  4529  0009A2  0100               	movlb	0	; () banked
  4530  0009A4  90D8               	bcf	status,0,c
  4531  0009A6  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4532  0009A8  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4533  0009AA  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4534  0009AC  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  4535  0009AE                     u5470:
  4536  0009AE  2EE8               	decfsz	wreg,f,c
  4537  0009B0  D7F8               	goto	u5475
  4538  0009B2  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4539  0009B6  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4540  0009BA  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4541  0009BE  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;CANlib.h: 992: tamp = tamp & 0x000000FF;
  4545  0009C2  0100               	movlb	0	; () banked
  4546  0009C4  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  4547  0009C6  0100               	movlb	0	; () banked
  4548  0009C8  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4549  0009CA  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4550  0009CC  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4551  0009CE  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  4555  0009D0  C0B2  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4556  0009D4                     l4320:
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;CANlib.h: 994: }
  4560                           ;CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  4561  0009D4  0E04               	movlw	4
  4562  0009D6  0100               	movlb	0	; () banked
  4563  0009D8  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4564  0009DA  A4D8               	btfss	status,2,c
  4565  0009DC  D07E               	goto	l4354
  4566                           
  4567                           ; BSR set to: 0
  4568  0009DE  0EF7               	movlw	247
  4569  0009E0  1822               	xorwf	CANSetFilter@type,w,c
  4570  0009E2  A4D8               	btfss	status,2,c
  4571  0009E4  D07A               	goto	l4354
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;CANlib.h: 997: {
  4575                           ;CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  4576  0009E6  010F               	movlb	15	; () banked
  4577  0009E8  8711               	bsf	17,3,b	;volatile
  4578                           
  4579                           ; BSR set to: 15
  4580                           ;CANlib.h: 1000: tamp = filter & 0x000000FF;
  4581  0009EA  501E               	movf	CANSetFilter@filter,w,c
  4582  0009EC  0100               	movlb	0	; () banked
  4583  0009EE  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4584  0009F0  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4585  0009F2  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4586  0009F4  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  4590  0009F6  C0B2  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;CANlib.h: 1003: tamp = filter & 0x0000FF00;
  4594  0009FA  0E00               	movlw	0
  4595  0009FC  141E               	andwf	CANSetFilter@filter,w,c
  4596  0009FE  0100               	movlb	0	; () banked
  4597  000A00  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4598  000A02  0EFF               	movlw	255
  4599  000A04  141F               	andwf	CANSetFilter@filter+1,w,c
  4600  000A06  0100               	movlb	0	; () banked
  4601  000A08  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4602  000A0A  0E00               	movlw	0
  4603  000A0C  1420               	andwf	CANSetFilter@filter+2,w,c
  4604  000A0E  0100               	movlb	0	; () banked
  4605  000A10  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4606  000A12  0E00               	movlw	0
  4607  000A14  1421               	andwf	CANSetFilter@filter+3,w,c
  4608  000A16  0100               	movlb	0	; () banked
  4609  000A18  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;CANlib.h: 1004: tamp = tamp >> 8;
  4613  000A1A  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4614  000A1E  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4615  000A22  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4616  000A26  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4617  000A2A  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  4618  000A2E  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4619  000A32  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4620  000A36  0100               	movlb	0	; () banked
  4621  000A38  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  4622  000A3A  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4623  000A3E  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4624  000A42  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4625  000A46  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  4629  000A4A  C0B2  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;CANlib.h: 1007: if (filter & 0x00010000)
  4633  000A4E  A020               	btfss	CANSetFilter@filter+2,0,c
  4634  000A50  D003               	goto	l507
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  4638  000A52  010F               	movlb	15	; () banked
  4639  000A54  8111               	bsf	17,0,b	;volatile
  4640  000A56  D002               	goto	l508
  4641  000A58                     l507:
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;CANlib.h: 1009: else
  4645                           ;CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  4646  000A58  010F               	movlb	15	; () banked
  4647  000A5A  9111               	bcf	17,0,b	;volatile
  4648  000A5C                     l508:
  4649                           
  4650                           ; BSR set to: 15
  4651                           ;CANlib.h: 1012: if (filter & 0x00020000)
  4652  000A5C  A220               	btfss	CANSetFilter@filter+2,1,c
  4653  000A5E  D003               	goto	l509
  4654                           
  4655                           ; BSR set to: 15
  4656                           ;CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  4657  000A60  010F               	movlb	15	; () banked
  4658  000A62  8311               	bsf	17,1,b	;volatile
  4659  000A64  D002               	goto	l510
  4660  000A66                     l509:
  4661                           
  4662                           ; BSR set to: 15
  4663                           ;CANlib.h: 1014: else
  4664                           ;CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  4665  000A66  010F               	movlb	15	; () banked
  4666  000A68  9311               	bcf	17,1,b	;volatile
  4667  000A6A                     l510:
  4668                           
  4669                           ; BSR set to: 15
  4670                           ;CANlib.h: 1017: if (filter & 0x00040000)
  4671  000A6A  A420               	btfss	CANSetFilter@filter+2,2,c
  4672  000A6C  D003               	goto	l511
  4673                           
  4674                           ; BSR set to: 15
  4675                           ;CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  4676  000A6E  010F               	movlb	15	; () banked
  4677  000A70  8B11               	bsf	17,5,b	;volatile
  4678  000A72  D002               	goto	l512
  4679  000A74                     l511:
  4680                           
  4681                           ; BSR set to: 15
  4682                           ;CANlib.h: 1019: else
  4683                           ;CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  4684  000A74  010F               	movlb	15	; () banked
  4685  000A76  9B11               	bcf	17,5,b	;volatile
  4686  000A78                     l512:
  4687                           
  4688                           ; BSR set to: 15
  4689                           ;CANlib.h: 1022: if (filter & 0x00080000)
  4690  000A78  A620               	btfss	CANSetFilter@filter+2,3,c
  4691  000A7A  D003               	goto	l513
  4692                           
  4693                           ; BSR set to: 15
  4694                           ;CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  4695  000A7C  010F               	movlb	15	; () banked
  4696  000A7E  8D11               	bsf	17,6,b	;volatile
  4697  000A80  D002               	goto	l514
  4698  000A82                     l513:
  4699                           
  4700                           ; BSR set to: 15
  4701                           ;CANlib.h: 1024: else
  4702                           ;CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  4703  000A82  010F               	movlb	15	; () banked
  4704  000A84  9D11               	bcf	17,6,b	;volatile
  4705  000A86                     l514:
  4706                           
  4707                           ; BSR set to: 15
  4708                           ;CANlib.h: 1027: if (filter & 0x00100000)
  4709  000A86  A820               	btfss	CANSetFilter@filter+2,4,c
  4710  000A88  D003               	goto	l515
  4711                           
  4712                           ; BSR set to: 15
  4713                           ;CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  4714  000A8A  010F               	movlb	15	; () banked
  4715  000A8C  8F11               	bsf	17,7,b	;volatile
  4716  000A8E  D002               	goto	l4348
  4717  000A90                     l515:
  4718                           
  4719                           ; BSR set to: 15
  4720                           ;CANlib.h: 1029: else
  4721                           ;CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  4722  000A90  010F               	movlb	15	; () banked
  4723  000A92  9F11               	bcf	17,7,b	;volatile
  4724  000A94                     l4348:
  4725                           
  4726                           ; BSR set to: 15
  4727                           ;CANlib.h: 1032: tamp = (filter >> 21);
  4728  000A94  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  4729  000A98  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4730  000A9C  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4731  000AA0  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4732  000AA4  0E16               	movlw	22
  4733  000AA6  D006               	goto	u5550
  4734  000AA8                     u5555:
  4735  000AA8  0100               	movlb	0	; () banked
  4736  000AAA  90D8               	bcf	status,0,c
  4737  000AAC  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4738  000AAE  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4739  000AB0  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4740  000AB2  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  4741  000AB4                     u5550:
  4742  000AB4  2EE8               	decfsz	wreg,f,c
  4743  000AB6  D7F8               	goto	u5555
  4744  000AB8  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4745  000ABC  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4746  000AC0  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4747  000AC4  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;CANlib.h: 1033: tamp = tamp & 0x000000FF;
  4751  000AC8  0100               	movlb	0	; () banked
  4752  000ACA  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  4753  000ACC  0100               	movlb	0	; () banked
  4754  000ACE  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4755  000AD0  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4756  000AD2  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4757  000AD4  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4758                           
  4759                           ; BSR set to: 0
  4760                           ;CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  4761  000AD6  C0B2  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  4762  000ADA                     l4354:
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;CANlib.h: 1035: }
  4766                           ;CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  4767  000ADA  0E05               	movlw	5
  4768  000ADC  0100               	movlb	0	; () banked
  4769  000ADE  19B1               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4770  000AE0  A4D8               	btfss	status,2,c
  4771  000AE2  0012               	return	
  4772                           
  4773                           ; BSR set to: 0
  4774  000AE4  0EF7               	movlw	247
  4775  000AE6  1822               	xorwf	CANSetFilter@type,w,c
  4776  000AE8  A4D8               	btfss	status,2,c
  4777  000AEA  0012               	return	
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;CANlib.h: 1038: {
  4781                           ;CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  4782  000AEC  010F               	movlb	15	; () banked
  4783  000AEE  8715               	bsf	21,3,b	;volatile
  4784                           
  4785                           ; BSR set to: 15
  4786                           ;CANlib.h: 1041: tamp = filter & 0x000000FF;
  4787  000AF0  501E               	movf	CANSetFilter@filter,w,c
  4788  000AF2  0100               	movlb	0	; () banked
  4789  000AF4  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4790  000AF6  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4791  000AF8  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4792  000AFA  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  4796  000AFC  C0B2  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;CANlib.h: 1044: tamp = filter & 0x0000FF00;
  4800  000B00  0E00               	movlw	0
  4801  000B02  141E               	andwf	CANSetFilter@filter,w,c
  4802  000B04  0100               	movlb	0	; () banked
  4803  000B06  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4804  000B08  0EFF               	movlw	255
  4805  000B0A  141F               	andwf	CANSetFilter@filter+1,w,c
  4806  000B0C  0100               	movlb	0	; () banked
  4807  000B0E  6FB3               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4808  000B10  0E00               	movlw	0
  4809  000B12  1420               	andwf	CANSetFilter@filter+2,w,c
  4810  000B14  0100               	movlb	0	; () banked
  4811  000B16  6FB4               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4812  000B18  0E00               	movlw	0
  4813  000B1A  1421               	andwf	CANSetFilter@filter+3,w,c
  4814  000B1C  0100               	movlb	0	; () banked
  4815  000B1E  6FB5               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;CANlib.h: 1045: tamp = tamp >> 8;
  4819  000B20  C0B2  F0AD         	movff	CANSetFilter@tamp,??_CANSetFilter
  4820  000B24  C0B3  F0AE         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4821  000B28  C0B4  F0AF         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4822  000B2C  C0B5  F0B0         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4823  000B30  C0AE  F0AD         	movff	??_CANSetFilter+1,??_CANSetFilter
  4824  000B34  C0AF  F0AE         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  4825  000B38  C0B0  F0AF         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  4826  000B3C  0100               	movlb	0	; () banked
  4827  000B3E  6BB0               	clrf	(??_CANSetFilter+3)& (0+255),b
  4828  000B40  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4829  000B44  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4830  000B48  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4831  000B4C  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  4835  000B50  C0B2  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;CANlib.h: 1048: if (filter & 0x00010000)
  4839  000B54  A020               	btfss	CANSetFilter@filter+2,0,c
  4840  000B56  D003               	goto	l518
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  4844  000B58  010F               	movlb	15	; () banked
  4845  000B5A  8115               	bsf	21,0,b	;volatile
  4846  000B5C  D002               	goto	l519
  4847  000B5E                     l518:
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;CANlib.h: 1050: else
  4851                           ;CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  4852  000B5E  010F               	movlb	15	; () banked
  4853  000B60  9115               	bcf	21,0,b	;volatile
  4854  000B62                     l519:
  4855                           
  4856                           ; BSR set to: 15
  4857                           ;CANlib.h: 1053: if (filter & 0x00020000)
  4858  000B62  A220               	btfss	CANSetFilter@filter+2,1,c
  4859  000B64  D003               	goto	l520
  4860                           
  4861                           ; BSR set to: 15
  4862                           ;CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  4863  000B66  010F               	movlb	15	; () banked
  4864  000B68  8315               	bsf	21,1,b	;volatile
  4865  000B6A  D002               	goto	l521
  4866  000B6C                     l520:
  4867                           
  4868                           ; BSR set to: 15
  4869                           ;CANlib.h: 1055: else
  4870                           ;CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  4871  000B6C  010F               	movlb	15	; () banked
  4872  000B6E  9315               	bcf	21,1,b	;volatile
  4873  000B70                     l521:
  4874                           
  4875                           ; BSR set to: 15
  4876                           ;CANlib.h: 1058: if (filter & 0x00040000)
  4877  000B70  A420               	btfss	CANSetFilter@filter+2,2,c
  4878  000B72  D003               	goto	l522
  4879                           
  4880                           ; BSR set to: 15
  4881                           ;CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  4882  000B74  010F               	movlb	15	; () banked
  4883  000B76  8B15               	bsf	21,5,b	;volatile
  4884  000B78  D002               	goto	l523
  4885  000B7A                     l522:
  4886                           
  4887                           ; BSR set to: 15
  4888                           ;CANlib.h: 1060: else
  4889                           ;CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  4890  000B7A  010F               	movlb	15	; () banked
  4891  000B7C  9B15               	bcf	21,5,b	;volatile
  4892  000B7E                     l523:
  4893                           
  4894                           ; BSR set to: 15
  4895                           ;CANlib.h: 1063: if (filter & 0x00080000)
  4896  000B7E  A620               	btfss	CANSetFilter@filter+2,3,c
  4897  000B80  D003               	goto	l524
  4898                           
  4899                           ; BSR set to: 15
  4900                           ;CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  4901  000B82  010F               	movlb	15	; () banked
  4902  000B84  8D15               	bsf	21,6,b	;volatile
  4903  000B86  D002               	goto	l525
  4904  000B88                     l524:
  4905                           
  4906                           ; BSR set to: 15
  4907                           ;CANlib.h: 1065: else
  4908                           ;CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  4909  000B88  010F               	movlb	15	; () banked
  4910  000B8A  9D15               	bcf	21,6,b	;volatile
  4911  000B8C                     l525:
  4912                           
  4913                           ; BSR set to: 15
  4914                           ;CANlib.h: 1068: if (filter & 0x00100000)
  4915  000B8C  A820               	btfss	CANSetFilter@filter+2,4,c
  4916  000B8E  D003               	goto	l526
  4917                           
  4918                           ; BSR set to: 15
  4919                           ;CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  4920  000B90  010F               	movlb	15	; () banked
  4921  000B92  8F15               	bsf	21,7,b	;volatile
  4922  000B94  D002               	goto	l4382
  4923  000B96                     l526:
  4924                           
  4925                           ; BSR set to: 15
  4926                           ;CANlib.h: 1070: else
  4927                           ;CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  4928  000B96  010F               	movlb	15	; () banked
  4929  000B98  9F15               	bcf	21,7,b	;volatile
  4930  000B9A                     l4382:
  4931                           
  4932                           ; BSR set to: 15
  4933                           ;CANlib.h: 1073: tamp = (filter >> 21);
  4934  000B9A  C01E  F0AD         	movff	CANSetFilter@filter,??_CANSetFilter
  4935  000B9E  C01F  F0AE         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4936  000BA2  C020  F0AF         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4937  000BA6  C021  F0B0         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4938  000BAA  0E16               	movlw	22
  4939  000BAC  D006               	goto	u5630
  4940  000BAE                     u5635:
  4941  000BAE  0100               	movlb	0	; () banked
  4942  000BB0  90D8               	bcf	status,0,c
  4943  000BB2  33B0               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4944  000BB4  33AF               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4945  000BB6  33AE               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4946  000BB8  33AD               	rrcf	??_CANSetFilter& (0+255),f,b
  4947  000BBA                     u5630:
  4948  000BBA  2EE8               	decfsz	wreg,f,c
  4949  000BBC  D7F8               	goto	u5635
  4950  000BBE  C0AD  F0B2         	movff	??_CANSetFilter,CANSetFilter@tamp
  4951  000BC2  C0AE  F0B3         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4952  000BC6  C0AF  F0B4         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4953  000BCA  C0B0  F0B5         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;CANlib.h: 1074: tamp = tamp & 0x000000FF;
  4957  000BCE  0100               	movlb	0	; () banked
  4958  000BD0  51B2               	movf	CANSetFilter@tamp& (0+255),w,b
  4959  000BD2  0100               	movlb	0	; () banked
  4960  000BD4  6FB2               	movwf	CANSetFilter@tamp& (0+255),b
  4961  000BD6  6BB3               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4962  000BD8  6BB4               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4963  000BDA  6BB5               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  4967  000BDC  C0B2  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  4968  000BE0  0012               	return	
  4969  000BE2                     __end_of_CANSetFilter:
  4970                           	opt stack 0
  4971                           tblptru	equ	0xFF8
  4972                           tblptrh	equ	0xFF7
  4973                           tblptrl	equ	0xFF6
  4974                           tablat	equ	0xFF5
  4975                           prodh	equ	0xFF4
  4976                           prodl	equ	0xFF3
  4977                           intcon	equ	0xFF2
  4978                           postinc0	equ	0xFEE
  4979                           wreg	equ	0xFE8
  4980                           indf1	equ	0xFE7
  4981                           postdec1	equ	0xFE5
  4982                           fsr1h	equ	0xFE2
  4983                           fsr1l	equ	0xFE1
  4984                           indf2	equ	0xFDF
  4985                           fsr2h	equ	0xFDA
  4986                           fsr2l	equ	0xFD9
  4987                           status	equ	0xFD8
  4988                           
  4989 ;; *************** function _CANOperationMode *****************
  4990 ;; Defined at:
  4991 ;;		line 206 in file "CANlib.h"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  mode            1    wreg     enum E16838
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;  mode            1   29[COMRAM] enum E16838
  4996 ;; Return value:  Size  Location     Type
  4997 ;;		None               void
  4998 ;; Registers used:
  4999 ;;		wreg, status,2, status,0
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5005 ;;      Params:         0       0       0       0
  5006 ;;      Locals:         1       0       0       0
  5007 ;;      Temps:          0       0       0       0
  5008 ;;      Totals:         1       0       0       0
  5009 ;;Total ram usage:        1 bytes
  5010 ;; Hardware stack levels used:    1
  5011 ;; Hardware stack levels required when called:    2
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		_CANInitialize
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           	psect	text8
  5020  002648                     __ptext8:
  5021                           	opt stack 0
  5022  002648                     _CANOperationMode:
  5023                           	opt stack 26
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;incstack = 0
  5027                           ;CANOperationMode@mode stored from wreg
  5028  002648  6E1E               	movwf	CANOperationMode@mode,c
  5029                           
  5030                           ;CANlib.h: 208: CANCON = mode;
  5031  00264A  C01E  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  5032  00264E                     l3978:
  5033  00264E  506E               	movf	3950,w,c	;volatile
  5034  002650  0BE0               	andlw	224
  5035  002652  181E               	xorwf	CANOperationMode@mode,w,c
  5036  002654  B4D8               	btfsc	status,2,c
  5037  002656  0012               	return	
  5038  002658  D7FA               	goto	l3978
  5039  00265A                     __end_of_CANOperationMode:
  5040                           	opt stack 0
  5041                           tblptru	equ	0xFF8
  5042                           tblptrh	equ	0xFF7
  5043                           tblptrl	equ	0xFF6
  5044                           tablat	equ	0xFF5
  5045                           prodh	equ	0xFF4
  5046                           prodl	equ	0xFF3
  5047                           intcon	equ	0xFF2
  5048                           postinc0	equ	0xFEE
  5049                           wreg	equ	0xFE8
  5050                           indf1	equ	0xFE7
  5051                           postdec1	equ	0xFE5
  5052                           fsr1h	equ	0xFE2
  5053                           fsr1l	equ	0xFE1
  5054                           indf2	equ	0xFDF
  5055                           fsr2h	equ	0xFDA
  5056                           fsr2l	equ	0xFD9
  5057                           status	equ	0xFD8
  5058                           
  5059 ;; *************** function _battery_measure *****************
  5060 ;; Defined at:
  5061 ;;		line 288 in file "motore.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;		None
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;		None
  5066 ;; Return value:  Size  Location     Type
  5067 ;;		None               void
  5068 ;; Registers used:
  5069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5075 ;;      Params:         0       0       0       0
  5076 ;;      Locals:         0       0       0       0
  5077 ;;      Temps:          0       0       0       0
  5078 ;;      Totals:         0       0       0       0
  5079 ;;Total ram usage:        0 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    3
  5082 ;; This function calls:
  5083 ;;		_CANisTxReady
  5084 ;;		_CANsendMessage
  5085 ;;		___awdiv
  5086 ;;		___wmul
  5087 ;; This function is called by:
  5088 ;;		_main
  5089 ;; This function uses a non-reentrant model
  5090 ;;
  5091                           
  5092                           	psect	text9
  5093  0023CE                     __ptext9:
  5094                           	opt stack 0
  5095  0023CE                     _battery_measure:
  5096                           	opt stack 27
  5097                           
  5098                           ;motore.c: 289: ADCON0bits.GO = 1;
  5099                           
  5100                           ;incstack = 0
  5101  0023CE  82C2               	bsf	4034,1,c	;volatile
  5102  0023D0                     l710:
  5103  0023D0  B2C2               	btfsc	4034,1,c	;volatile
  5104  0023D2  D7FE               	goto	l710
  5105                           
  5106                           ;motore.c: 291: vBatt = ADRESH;
  5107  0023D4  CFC4 F033          	movff	4036,_vBatt	;volatile
  5108  0023D8  6A34               	clrf	_vBatt+1,c
  5109                           
  5110                           ;motore.c: 292: vBatt = (vBatt * 14) / 255;
  5111  0023DA  C033  F0B1         	movff	_vBatt,___wmul@multiplier
  5112  0023DE  C034  F0B2         	movff	_vBatt+1,___wmul@multiplier+1
  5113  0023E2  0E00               	movlw	0
  5114  0023E4  0100               	movlb	0	; () banked
  5115  0023E6  6FB4               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5116  0023E8  0E0E               	movlw	14
  5117  0023EA  6FB3               	movwf	___wmul@multiplicand& (0+255),b
  5118  0023EC  ECCD  F012         	call	___wmul	;wreg free
  5119  0023F0  C0B1  F01E         	movff	?___wmul,___awdiv@dividend
  5120  0023F4  C0B2  F01F         	movff	?___wmul+1,___awdiv@dividend+1
  5121  0023F8  0E00               	movlw	0
  5122  0023FA  6E21               	movwf	___awdiv@divisor+1,c
  5123  0023FC  6820               	setf	___awdiv@divisor,c
  5124  0023FE  EC99  F011         	call	___awdiv	;wreg free
  5125  002402  C01E  F033         	movff	?___awdiv,_vBatt
  5126  002406  C01F  F034         	movff	?___awdiv+1,_vBatt+1
  5127                           
  5128                           ;motore.c: 293: if (vBatt < 8) {
  5129  00240A  BE34               	btfsc	_vBatt+1,7,c
  5130  00240C  D006               	goto	l4866
  5131  00240E  5034               	movf	_vBatt+1,w,c
  5132  002410  E122               	bnz	l713
  5133  002412  0E08               	movlw	8
  5134  002414  5C33               	subwf	_vBatt,w,c
  5135  002416  B0D8               	btfsc	status,0,c
  5136  002418  D01E               	goto	l713
  5137  00241A                     l4866:
  5138  00241A  ECFC  F012         	call	_CANisTxReady	;wreg free
  5139  00241E  0900               	iorlw	0
  5140  002420  B4D8               	btfsc	status,2,c
  5141  002422  D7FB               	goto	l4866
  5142                           
  5143                           ;motore.c: 299: CANsendMessage(0b00000000000000000000000001001, data_array, 8, CAN_CONFI
      +                          G_STD_MSG & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  5144  002424  0E09               	movlw	9
  5145  002426  0100               	movlb	0	; () banked
  5146  002428  6FAD               	movwf	CANsendMessage@identifier& (0+255),b
  5147  00242A  0E00               	movlw	0
  5148  00242C  6FAE               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  5149  00242E  0E00               	movlw	0
  5150  002430  6FAF               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  5151  002432  0E00               	movlw	0
  5152  002434  6FB0               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  5153  002436  0E95               	movlw	low _data_array
  5154  002438  0100               	movlb	0	; () banked
  5155  00243A  6FB1               	movwf	CANsendMessage@data& (0+255),b
  5156  00243C  0E00               	movlw	high _data_array
  5157  00243E  0100               	movlb	0	; () banked
  5158  002440  6FB2               	movwf	(CANsendMessage@data+1)& (0+255),b
  5159  002442  0E08               	movlw	8
  5160  002444  0100               	movlb	0	; () banked
  5161  002446  6FB3               	movwf	CANsendMessage@dataLength& (0+255),b
  5162  002448  0EFC               	movlw	252
  5163  00244A  0100               	movlb	0	; () banked
  5164  00244C  6FB4               	movwf	CANsendMessage@flags& (0+255),b
  5165  00244E  ECF1  F005         	call	_CANsendMessage	;wreg free
  5166                           
  5167                           ;motore.c: 300: PORTCbits.RC1 = 1;
  5168  002452  8282               	bsf	3970,1,c	;volatile
  5169                           
  5170                           ;motore.c: 301: } else {
  5171  002454  0012               	return	
  5172  002456                     l713:
  5173                           
  5174                           ;motore.c: 302: PORTCbits.RC1 = 0;
  5175  002456  9282               	bcf	3970,1,c	;volatile
  5176  002458  0012               	return	
  5177  00245A                     __end_of_battery_measure:
  5178                           	opt stack 0
  5179                           tblptru	equ	0xFF8
  5180                           tblptrh	equ	0xFF7
  5181                           tblptrl	equ	0xFF6
  5182                           tablat	equ	0xFF5
  5183                           prodh	equ	0xFF4
  5184                           prodl	equ	0xFF3
  5185                           intcon	equ	0xFF2
  5186                           postinc0	equ	0xFEE
  5187                           wreg	equ	0xFE8
  5188                           indf1	equ	0xFE7
  5189                           postdec1	equ	0xFE5
  5190                           fsr1h	equ	0xFE2
  5191                           fsr1l	equ	0xFE1
  5192                           indf2	equ	0xFDF
  5193                           fsr2h	equ	0xFDA
  5194                           fsr2l	equ	0xFD9
  5195                           status	equ	0xFD8
  5196                           
  5197 ;; *************** function ___wmul *****************
  5198 ;; Defined at:
  5199 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;  multiplier      2    4[BANK0 ] unsigned int 
  5202 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;  product         2   33[COMRAM] unsigned int 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  2    4[BANK0 ] unsigned int 
  5207 ;; Registers used:
  5208 ;;		wreg, status,2, status,0, prodl, prodh
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5214 ;;      Params:         0       4       0       0
  5215 ;;      Locals:         2       0       0       0
  5216 ;;      Temps:          0       0       0       0
  5217 ;;      Totals:         2       4       0       0
  5218 ;;Total ram usage:        6 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:    2
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_delay_ms
  5225 ;;		_main
  5226 ;;		_battery_measure
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           	psect	text10
  5231  00259A                     __ptext10:
  5232                           	opt stack 0
  5233  00259A                     ___wmul:
  5234                           	opt stack 27
  5235                           
  5236                           ;incstack = 0
  5237  00259A  0100               	movlb	0	; () banked
  5238  00259C  51B1               	movf	___wmul@multiplier& (0+255),w,b
  5239  00259E  0100               	movlb	0	; () banked
  5240  0025A0  03B3               	mulwf	___wmul@multiplicand& (0+255),b
  5241  0025A2  CFF3 F022          	movff	prodl,___wmul@product
  5242  0025A6  CFF4 F023          	movff	prodh,___wmul@product+1
  5243  0025AA  0100               	movlb	0	; () banked
  5244  0025AC  51B1               	movf	___wmul@multiplier& (0+255),w,b
  5245  0025AE  0100               	movlb	0	; () banked
  5246  0025B0  03B4               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5247  0025B2  50F3               	movf	prodl,w,c
  5248  0025B4  2623               	addwf	___wmul@product+1,f,c
  5249  0025B6  0100               	movlb	0	; () banked
  5250  0025B8  51B2               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5251  0025BA  0100               	movlb	0	; () banked
  5252  0025BC  03B3               	mulwf	___wmul@multiplicand& (0+255),b
  5253  0025BE  50F3               	movf	prodl,w,c
  5254  0025C0  2623               	addwf	___wmul@product+1,f,c
  5255                           
  5256                           ; BSR set to: 0
  5257  0025C2  C022  F0B1         	movff	___wmul@product,?___wmul
  5258  0025C6  C023  F0B2         	movff	___wmul@product+1,?___wmul+1
  5259  0025CA  0012               	return	
  5260  0025CC                     __end_of___wmul:
  5261                           	opt stack 0
  5262                           tblptru	equ	0xFF8
  5263                           tblptrh	equ	0xFF7
  5264                           tblptrl	equ	0xFF6
  5265                           tablat	equ	0xFF5
  5266                           prodh	equ	0xFF4
  5267                           prodl	equ	0xFF3
  5268                           intcon	equ	0xFF2
  5269                           postinc0	equ	0xFEE
  5270                           wreg	equ	0xFE8
  5271                           indf1	equ	0xFE7
  5272                           postdec1	equ	0xFE5
  5273                           fsr1h	equ	0xFE2
  5274                           fsr1l	equ	0xFE1
  5275                           indf2	equ	0xFDF
  5276                           fsr2h	equ	0xFDA
  5277                           fsr2l	equ	0xFD9
  5278                           status	equ	0xFD8
  5279                           
  5280 ;; *************** function ___awdiv *****************
  5281 ;; Defined at:
  5282 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  dividend        2   29[COMRAM] int 
  5285 ;;  divisor         2   31[COMRAM] int 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  quotient        2    2[BANK0 ] int 
  5288 ;;  sign            1    1[BANK0 ] unsigned char 
  5289 ;;  counter         1    0[BANK0 ] unsigned char 
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  2   29[COMRAM] int 
  5292 ;; Registers used:
  5293 ;;		wreg, status,2, status,0
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5299 ;;      Params:         4       0       0       0
  5300 ;;      Locals:         0       4       0       0
  5301 ;;      Temps:          0       0       0       0
  5302 ;;      Totals:         4       4       0       0
  5303 ;;Total ram usage:        8 bytes
  5304 ;; Hardware stack levels used:    1
  5305 ;; Hardware stack levels required when called:    2
  5306 ;; This function calls:
  5307 ;;		Nothing
  5308 ;; This function is called by:
  5309 ;;		_main
  5310 ;;		_battery_measure
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314                           	psect	text11
  5315  002332                     __ptext11:
  5316                           	opt stack 0
  5317  002332                     ___awdiv:
  5318                           	opt stack 27
  5319                           
  5320                           ; BSR set to: 0
  5321                           ;incstack = 0
  5322  002332  0E00               	movlw	0
  5323  002334  0100               	movlb	0	; () banked
  5324  002336  6FAE               	movwf	___awdiv@sign& (0+255),b
  5325                           
  5326                           ; BSR set to: 0
  5327  002338  AE21               	btfss	___awdiv@divisor+1,7,c
  5328  00233A  D007               	goto	l4690
  5329                           
  5330                           ; BSR set to: 0
  5331  00233C  6C20               	negf	___awdiv@divisor,c
  5332  00233E  1E21               	comf	___awdiv@divisor+1,f,c
  5333  002340  B0D8               	btfsc	status,0,c
  5334  002342  2A21               	incf	___awdiv@divisor+1,f,c
  5335                           
  5336                           ; BSR set to: 0
  5337  002344  0E01               	movlw	1
  5338  002346  0100               	movlb	0	; () banked
  5339  002348  6FAE               	movwf	___awdiv@sign& (0+255),b
  5340  00234A                     l4690:
  5341                           
  5342                           ; BSR set to: 0
  5343  00234A  AE1F               	btfss	___awdiv@dividend+1,7,c
  5344  00234C  D007               	goto	l4696
  5345                           
  5346                           ; BSR set to: 0
  5347  00234E  6C1E               	negf	___awdiv@dividend,c
  5348  002350  1E1F               	comf	___awdiv@dividend+1,f,c
  5349  002352  B0D8               	btfsc	status,0,c
  5350  002354  2A1F               	incf	___awdiv@dividend+1,f,c
  5351                           
  5352                           ; BSR set to: 0
  5353  002356  0E01               	movlw	1
  5354  002358  0100               	movlb	0	; () banked
  5355  00235A  1BAE               	xorwf	___awdiv@sign& (0+255),f,b
  5356  00235C                     l4696:
  5357                           
  5358                           ; BSR set to: 0
  5359  00235C  0E00               	movlw	0
  5360  00235E  0100               	movlb	0	; () banked
  5361  002360  6FB0               	movwf	(___awdiv@quotient+1)& (0+255),b
  5362  002362  0E00               	movlw	0
  5363  002364  6FAF               	movwf	___awdiv@quotient& (0+255),b
  5364                           
  5365                           ; BSR set to: 0
  5366  002366  5020               	movf	___awdiv@divisor,w,c
  5367  002368  1021               	iorwf	___awdiv@divisor+1,w,c
  5368  00236A  B4D8               	btfsc	status,2,c
  5369  00236C  D021               	goto	l4718
  5370                           
  5371                           ; BSR set to: 0
  5372  00236E  0E01               	movlw	1
  5373  002370  0100               	movlb	0	; () banked
  5374  002372  6FAD               	movwf	___awdiv@counter& (0+255),b
  5375  002374  D005               	goto	l4704
  5376  002376                     l4702:
  5377                           
  5378                           ; BSR set to: 0
  5379  002376  90D8               	bcf	status,0,c
  5380  002378  3620               	rlcf	___awdiv@divisor,f,c
  5381  00237A  3621               	rlcf	___awdiv@divisor+1,f,c
  5382  00237C  0100               	movlb	0	; () banked
  5383  00237E  2BAD               	incf	___awdiv@counter& (0+255),f,b
  5384  002380                     l4704:
  5385                           
  5386                           ; BSR set to: 0
  5387  002380  AE21               	btfss	___awdiv@divisor+1,7,c
  5388  002382  D7F9               	goto	l4702
  5389  002384                     l4706:
  5390                           
  5391                           ; BSR set to: 0
  5392  002384  0100               	movlb	0	; () banked
  5393  002386  90D8               	bcf	status,0,c
  5394  002388  37AF               	rlcf	___awdiv@quotient& (0+255),f,b
  5395  00238A  37B0               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5396                           
  5397                           ; BSR set to: 0
  5398  00238C  5020               	movf	___awdiv@divisor,w,c
  5399  00238E  5C1E               	subwf	___awdiv@dividend,w,c
  5400  002390  5021               	movf	___awdiv@divisor+1,w,c
  5401  002392  581F               	subwfb	___awdiv@dividend+1,w,c
  5402  002394  A0D8               	btfss	status,0,c
  5403  002396  D006               	goto	l4714
  5404                           
  5405                           ; BSR set to: 0
  5406  002398  5020               	movf	___awdiv@divisor,w,c
  5407  00239A  5E1E               	subwf	___awdiv@dividend,f,c
  5408  00239C  5021               	movf	___awdiv@divisor+1,w,c
  5409  00239E  5A1F               	subwfb	___awdiv@dividend+1,f,c
  5410                           
  5411                           ; BSR set to: 0
  5412  0023A0  0100               	movlb	0	; () banked
  5413  0023A2  81AF               	bsf	___awdiv@quotient& (0+255),0,b
  5414  0023A4                     l4714:
  5415                           
  5416                           ; BSR set to: 0
  5417  0023A4  90D8               	bcf	status,0,c
  5418  0023A6  3221               	rrcf	___awdiv@divisor+1,f,c
  5419  0023A8  3220               	rrcf	___awdiv@divisor,f,c
  5420                           
  5421                           ; BSR set to: 0
  5422  0023AA  0100               	movlb	0	; () banked
  5423  0023AC  2FAD               	decfsz	___awdiv@counter& (0+255),f,b
  5424  0023AE  D7EA               	goto	l4706
  5425  0023B0                     l4718:
  5426                           
  5427                           ; BSR set to: 0
  5428  0023B0  0100               	movlb	0	; () banked
  5429  0023B2  51AE               	movf	___awdiv@sign& (0+255),w,b
  5430  0023B4  0100               	movlb	0	; () banked
  5431  0023B6  B4D8               	btfsc	status,2,c
  5432  0023B8  D005               	goto	l4722
  5433                           
  5434                           ; BSR set to: 0
  5435  0023BA  0100               	movlb	0	; () banked
  5436  0023BC  6DAF               	negf	___awdiv@quotient& (0+255),b
  5437  0023BE  1FB0               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5438  0023C0  B0D8               	btfsc	status,0,c
  5439  0023C2  2BB0               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5440  0023C4                     l4722:
  5441                           
  5442                           ; BSR set to: 0
  5443  0023C4  C0AF  F01E         	movff	___awdiv@quotient,?___awdiv
  5444  0023C8  C0B0  F01F         	movff	___awdiv@quotient+1,?___awdiv+1
  5445  0023CC  0012               	return	
  5446  0023CE                     __end_of___awdiv:
  5447                           	opt stack 0
  5448                           tblptru	equ	0xFF8
  5449                           tblptrh	equ	0xFF7
  5450                           tblptrl	equ	0xFF6
  5451                           tablat	equ	0xFF5
  5452                           prodh	equ	0xFF4
  5453                           prodl	equ	0xFF3
  5454                           intcon	equ	0xFF2
  5455                           postinc0	equ	0xFEE
  5456                           wreg	equ	0xFE8
  5457                           indf1	equ	0xFE7
  5458                           postdec1	equ	0xFE5
  5459                           fsr1h	equ	0xFE2
  5460                           fsr1l	equ	0xFE1
  5461                           indf2	equ	0xFDF
  5462                           fsr2h	equ	0xFDA
  5463                           fsr2l	equ	0xFD9
  5464                           status	equ	0xFD8
  5465                           
  5466 ;; *************** function _CANsendMessage *****************
  5467 ;; Defined at:
  5468 ;;		line 294 in file "CANlib.h"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;  identifier      4    0[BANK0 ] unsigned long 
  5471 ;;  data            2    4[BANK0 ] PTR unsigned char 
  5472 ;;		 -> data_array1(8), data_array(8), data_array_debug(8), 
  5473 ;;  dataLength      1    6[BANK0 ] unsigned char 
  5474 ;;  flags           1    7[BANK0 ] enum E16866
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;  tamp            4    8[BANK0 ] unsigned long 
  5477 ;; Return value:  Size  Location     Type
  5478 ;;		None               void
  5479 ;; Registers used:
  5480 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5486 ;;      Params:         0       8       0       0
  5487 ;;      Locals:         0       4       0       0
  5488 ;;      Temps:          4       0       0       0
  5489 ;;      Totals:         4      12       0       0
  5490 ;;Total ram usage:       16 bytes
  5491 ;; Hardware stack levels used:    1
  5492 ;; Hardware stack levels required when called:    2
  5493 ;; This function calls:
  5494 ;;		Nothing
  5495 ;; This function is called by:
  5496 ;;		_main
  5497 ;;		_send_data
  5498 ;;		_battery_measure
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           	psect	text12
  5503  000BE2                     __ptext12:
  5504                           	opt stack 0
  5505  000BE2                     _CANsendMessage:
  5506                           	opt stack 27
  5507                           
  5508                           ;CANlib.h: 296: unsigned long tamp;
  5509                           ;CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;incstack = 0
  5513  000BE2  010F               	movlb	15	; () banked
  5514  000BE4  B740               	btfsc	64,3,b	;volatile
  5515  000BE6  D13B               	goto	l363
  5516                           
  5517                           ; BSR set to: 15
  5518                           ;CANlib.h: 299: { TXB0DLC = dataLength;
  5519  000BE8  C0B3  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  5520                           
  5521                           ;CANlib.h: 300: if (0b01000000 & flags)
  5522  000BEC  0100               	movlb	0	; () banked
  5523  000BEE  ADB4               	btfss	CANsendMessage@flags& (0+255),6,b
  5524  000BF0  D003               	goto	l364
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  5528  000BF2  010F               	movlb	15	; () banked
  5529  000BF4  8D45               	bsf	69,6,b	;volatile
  5530  000BF6  D002               	goto	l365
  5531  000BF8                     l364:
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;CANlib.h: 302: else
  5535                           ;CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  5536  000BF8  010F               	movlb	15	; () banked
  5537  000BFA  9D45               	bcf	69,6,b	;volatile
  5538  000BFC                     l365:
  5539                           
  5540                           ; BSR set to: 15
  5541                           ;CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  5542  000BFC  0100               	movlb	0	; () banked
  5543  000BFE  A7B4               	btfss	CANsendMessage@flags& (0+255),3,b
  5544  000C00  D077               	goto	l366
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;CANlib.h: 306: {
  5548                           ;CANlib.h: 308: tamp = identifier & 0x000000FF;
  5549  000C02  0100               	movlb	0	; () banked
  5550  000C04  51AD               	movf	CANsendMessage@identifier& (0+255),w,b
  5551  000C06  0100               	movlb	0	; () banked
  5552  000C08  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  5553  000C0A  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5554  000C0C  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5555  000C0E  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  5559  000C10  C0B5  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;CANlib.h: 311: tamp = identifier & 0x0000FF00;
  5563  000C14  0E00               	movlw	0
  5564  000C16  0100               	movlb	0	; () banked
  5565  000C18  15AD               	andwf	CANsendMessage@identifier& (0+255),w,b
  5566  000C1A  0100               	movlb	0	; () banked
  5567  000C1C  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  5568  000C1E  0EFF               	movlw	255
  5569  000C20  0100               	movlb	0	; () banked
  5570  000C22  15AE               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5571  000C24  0100               	movlb	0	; () banked
  5572  000C26  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5573  000C28  0E00               	movlw	0
  5574  000C2A  0100               	movlb	0	; () banked
  5575  000C2C  15AF               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5576  000C2E  0100               	movlb	0	; () banked
  5577  000C30  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5578  000C32  0E00               	movlw	0
  5579  000C34  0100               	movlb	0	; () banked
  5580  000C36  15B0               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5581  000C38  0100               	movlb	0	; () banked
  5582  000C3A  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;CANlib.h: 312: tamp = tamp >> 8;
  5586  000C3C  C0B5  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  5587  000C40  C0B6  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5588  000C44  C0B7  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5589  000C48  C0B8  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5590  000C4C  C01F  F01E         	movff	??_CANsendMessage+1,??_CANsendMessage
  5591  000C50  C020  F01F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  5592  000C54  C021  F020         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  5593  000C58  6A21               	clrf	??_CANsendMessage+3,c
  5594  000C5A  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  5595  000C5E  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5596  000C62  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5597  000C66  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  5601  000C6A  C0B5  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  5602                           
  5603                           ; BSR set to: 0
  5604                           ;CANlib.h: 315: TXB0SIDL = 0x00;
  5605  000C6E  0E00               	movlw	0
  5606  000C70  010F               	movlb	15	; () banked
  5607  000C72  6F42               	movwf	66,b	;volatile
  5608                           
  5609                           ; BSR set to: 15
  5610                           ;CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  5611  000C74  010F               	movlb	15	; () banked
  5612  000C76  8742               	bsf	66,3,b	;volatile
  5613                           
  5614                           ; BSR set to: 15
  5615                           ;CANlib.h: 318: if (identifier & 0x00010000)
  5616  000C78  0100               	movlb	0	; () banked
  5617  000C7A  A1AF               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  5618  000C7C  D002               	goto	l367
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  5622  000C7E  010F               	movlb	15	; () banked
  5623  000C80  8142               	bsf	66,0,b	;volatile
  5624  000C82                     l367:
  5625                           
  5626                           ;CANlib.h: 320: if (identifier & 0x00020000)
  5627  000C82  0100               	movlb	0	; () banked
  5628  000C84  A3AF               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  5629  000C86  D002               	goto	l368
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  5633  000C88  010F               	movlb	15	; () banked
  5634  000C8A  8342               	bsf	66,1,b	;volatile
  5635  000C8C                     l368:
  5636                           
  5637                           ;CANlib.h: 322: if (identifier & 0x00040000)
  5638  000C8C  0100               	movlb	0	; () banked
  5639  000C8E  A5AF               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  5640  000C90  D002               	goto	l369
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  5644  000C92  010F               	movlb	15	; () banked
  5645  000C94  8B42               	bsf	66,5,b	;volatile
  5646  000C96                     l369:
  5647                           
  5648                           ;CANlib.h: 324: if (identifier & 0x00080000)
  5649  000C96  0100               	movlb	0	; () banked
  5650  000C98  A7AF               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  5651  000C9A  D002               	goto	l370
  5652                           
  5653                           ; BSR set to: 0
  5654                           ;CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  5655  000C9C  010F               	movlb	15	; () banked
  5656  000C9E  8D42               	bsf	66,6,b	;volatile
  5657  000CA0                     l370:
  5658                           
  5659                           ;CANlib.h: 326: if (identifier & 0x00100000)
  5660  000CA0  0100               	movlb	0	; () banked
  5661  000CA2  A9AF               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  5662  000CA4  D002               	goto	l4478
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  5666  000CA6  010F               	movlb	15	; () banked
  5667  000CA8  8F42               	bsf	66,7,b	;volatile
  5668  000CAA                     l4478:
  5669                           
  5670                           ;CANlib.h: 329: tamp = (identifier >> 21);
  5671  000CAA  C0AD  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  5672  000CAE  C0AE  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5673  000CB2  C0AF  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5674  000CB6  C0B0  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5675  000CBA  0E16               	movlw	22
  5676  000CBC  D005               	goto	u5760
  5677  000CBE                     u5765:
  5678  000CBE  90D8               	bcf	status,0,c
  5679  000CC0  3221               	rrcf	??_CANsendMessage+3,f,c
  5680  000CC2  3220               	rrcf	??_CANsendMessage+2,f,c
  5681  000CC4  321F               	rrcf	??_CANsendMessage+1,f,c
  5682  000CC6  321E               	rrcf	??_CANsendMessage,f,c
  5683  000CC8                     u5760:
  5684  000CC8  2EE8               	decfsz	wreg,f,c
  5685  000CCA  D7F9               	goto	u5765
  5686  000CCC  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  5687  000CD0  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5688  000CD4  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5689  000CD8  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5690                           
  5691                           ;CANlib.h: 330: tamp = tamp & 0x000000FF;
  5692  000CDC  0100               	movlb	0	; () banked
  5693  000CDE  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  5694  000CE0  0100               	movlb	0	; () banked
  5695  000CE2  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  5696  000CE4  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5697  000CE6  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5698  000CE8  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5699                           
  5700                           ; BSR set to: 0
  5701                           ;CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  5702  000CEA  C0B5  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5703                           
  5704                           ;CANlib.h: 332: }
  5705  000CEE  D057               	goto	l4498
  5706  000CF0                     l366:
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;CANlib.h: 334: else
  5710                           ;CANlib.h: 336: {
  5711                           ;CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  5712  000CF0  010F               	movlb	15	; () banked
  5713  000CF2  9742               	bcf	66,3,b	;volatile
  5714                           
  5715                           ; BSR set to: 15
  5716                           ;CANlib.h: 339: tamp = (identifier >> 3);
  5717  000CF4  C0AD  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  5718  000CF8  C0AE  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  5719  000CFC  C0AF  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  5720  000D00  C0B0  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  5721  000D04  0E04               	movlw	4
  5722  000D06  D005               	goto	u5770
  5723  000D08                     u5775:
  5724  000D08  90D8               	bcf	status,0,c
  5725  000D0A  3221               	rrcf	??_CANsendMessage+3,f,c
  5726  000D0C  3220               	rrcf	??_CANsendMessage+2,f,c
  5727  000D0E  321F               	rrcf	??_CANsendMessage+1,f,c
  5728  000D10  321E               	rrcf	??_CANsendMessage,f,c
  5729  000D12                     u5770:
  5730  000D12  2EE8               	decfsz	wreg,f,c
  5731  000D14  D7F9               	goto	u5775
  5732  000D16  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  5733  000D1A  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5734  000D1E  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5735  000D22  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5736                           
  5737                           ; BSR set to: 15
  5738                           ;CANlib.h: 340: tamp = tamp & 0x000000FF;
  5739  000D26  0100               	movlb	0	; () banked
  5740  000D28  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  5741  000D2A  0100               	movlb	0	; () banked
  5742  000D2C  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  5743  000D2E  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5744  000D30  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5745  000D32  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  5749  000D34  C0B5  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  5750                           
  5751                           ; BSR set to: 0
  5752                           ;CANlib.h: 343: tamp = identifier & 0x00000007;
  5753  000D38  0E07               	movlw	7
  5754  000D3A  0100               	movlb	0	; () banked
  5755  000D3C  15AD               	andwf	CANsendMessage@identifier& (0+255),w,b
  5756  000D3E  0100               	movlb	0	; () banked
  5757  000D40  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  5758  000D42  0E00               	movlw	0
  5759  000D44  0100               	movlb	0	; () banked
  5760  000D46  15AE               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  5761  000D48  0100               	movlb	0	; () banked
  5762  000D4A  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  5763  000D4C  0E00               	movlw	0
  5764  000D4E  0100               	movlb	0	; () banked
  5765  000D50  15AF               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  5766  000D52  0100               	movlb	0	; () banked
  5767  000D54  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  5768  000D56  0E00               	movlw	0
  5769  000D58  0100               	movlb	0	; () banked
  5770  000D5A  15B0               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  5771  000D5C  0100               	movlb	0	; () banked
  5772  000D5E  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;CANlib.h: 344: tamp = tamp << 5;
  5776  000D60  C0B5  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  5777  000D64  C0B6  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  5778  000D68  C0B7  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  5779  000D6C  C0B8  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  5780  000D70  0E05               	movlw	5
  5781  000D72                     u5785:
  5782  000D72  90D8               	bcf	status,0,c
  5783  000D74  361E               	rlcf	??_CANsendMessage,f,c
  5784  000D76  361F               	rlcf	??_CANsendMessage+1,f,c
  5785  000D78  3620               	rlcf	??_CANsendMessage+2,f,c
  5786  000D7A  3621               	rlcf	??_CANsendMessage+3,f,c
  5787  000D7C  2EE8               	decfsz	wreg,f,c
  5788  000D7E  D7F9               	goto	u5785
  5789  000D80  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  5790  000D84  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  5791  000D88  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  5792  000D8C  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  5796  000D90  010F               	movlb	15	; () banked
  5797  000D92  5142               	movf	66,w,b	;volatile
  5798  000D94  0B1F               	andlw	31
  5799  000D96  010F               	movlb	15	; () banked
  5800  000D98  6F42               	movwf	66,b	;volatile
  5801                           
  5802                           ; BSR set to: 15
  5803                           ;CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  5804  000D9A  C0B5  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  5805  000D9E                     l4498:
  5806                           
  5807                           ;CANlib.h: 347: }
  5808                           ;CANlib.h: 349: if (0b00000001 & flags)
  5809  000D9E  0100               	movlb	0	; () banked
  5810  000DA0  A1B4               	btfss	CANsendMessage@flags& (0+255),0,b
  5811  000DA2  D003               	goto	l373
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  5815  000DA4  010F               	movlb	15	; () banked
  5816  000DA6  8140               	bsf	64,0,b	;volatile
  5817  000DA8  D002               	goto	l374
  5818  000DAA                     l373:
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;CANlib.h: 351: else
  5822                           ;CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  5823  000DAA  010F               	movlb	15	; () banked
  5824  000DAC  9140               	bcf	64,0,b	;volatile
  5825  000DAE                     l374:
  5826                           
  5827                           ; BSR set to: 15
  5828                           ;CANlib.h: 353: if (0b00000010 & flags)
  5829  000DAE  0100               	movlb	0	; () banked
  5830  000DB0  A3B4               	btfss	CANsendMessage@flags& (0+255),1,b
  5831  000DB2  D003               	goto	l375
  5832                           
  5833                           ; BSR set to: 0
  5834                           ;CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  5835  000DB4  010F               	movlb	15	; () banked
  5836  000DB6  8340               	bsf	64,1,b	;volatile
  5837  000DB8  D002               	goto	l4504
  5838  000DBA                     l375:
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;CANlib.h: 355: else
  5842                           ;CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  5843  000DBA  010F               	movlb	15	; () banked
  5844  000DBC  9340               	bcf	64,1,b	;volatile
  5845  000DBE                     l4504:
  5846                           
  5847                           ; BSR set to: 15
  5848                           ;CANlib.h: 358: TXB0D0 = data[0];
  5849  000DBE  C0B1  FFD9         	movff	CANsendMessage@data,fsr2l
  5850  000DC2  C0B2  FFDA         	movff	CANsendMessage@data+1,fsr2h
  5851  000DC6  50DF               	movf	indf2,w,c
  5852  000DC8  010F               	movlb	15	; () banked
  5853  000DCA  6F46               	movwf	70,b	;volatile
  5854                           
  5855                           ; BSR set to: 15
  5856                           ;CANlib.h: 359: TXB0D1 = data[1];
  5857  000DCC  0100               	movlb	0	; () banked
  5858  000DCE  EE20 F001          	lfsr	2,1
  5859  000DD2  51B1               	movf	CANsendMessage@data& (0+255),w,b
  5860  000DD4  26D9               	addwf	fsr2l,f,c
  5861  000DD6  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5862  000DD8  22DA               	addwfc	fsr2h,f,c
  5863  000DDA  50DF               	movf	indf2,w,c
  5864  000DDC  010F               	movlb	15	; () banked
  5865  000DDE  6F47               	movwf	71,b	;volatile
  5866                           
  5867                           ; BSR set to: 15
  5868                           ;CANlib.h: 360: TXB0D2 = data[2];
  5869  000DE0  0100               	movlb	0	; () banked
  5870  000DE2  EE20 F002          	lfsr	2,2
  5871  000DE6  51B1               	movf	CANsendMessage@data& (0+255),w,b
  5872  000DE8  26D9               	addwf	fsr2l,f,c
  5873  000DEA  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5874  000DEC  22DA               	addwfc	fsr2h,f,c
  5875  000DEE  50DF               	movf	indf2,w,c
  5876  000DF0  010F               	movlb	15	; () banked
  5877  000DF2  6F48               	movwf	72,b	;volatile
  5878                           
  5879                           ; BSR set to: 15
  5880                           ;CANlib.h: 361: TXB0D3 = data[3];
  5881  000DF4  0100               	movlb	0	; () banked
  5882  000DF6  EE20 F003          	lfsr	2,3
  5883  000DFA  51B1               	movf	CANsendMessage@data& (0+255),w,b
  5884  000DFC  26D9               	addwf	fsr2l,f,c
  5885  000DFE  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5886  000E00  22DA               	addwfc	fsr2h,f,c
  5887  000E02  50DF               	movf	indf2,w,c
  5888  000E04  010F               	movlb	15	; () banked
  5889  000E06  6F49               	movwf	73,b	;volatile
  5890                           
  5891                           ; BSR set to: 15
  5892                           ;CANlib.h: 362: TXB0D4 = data[4];
  5893  000E08  0100               	movlb	0	; () banked
  5894  000E0A  EE20 F004          	lfsr	2,4
  5895  000E0E  51B1               	movf	CANsendMessage@data& (0+255),w,b
  5896  000E10  26D9               	addwf	fsr2l,f,c
  5897  000E12  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5898  000E14  22DA               	addwfc	fsr2h,f,c
  5899  000E16  50DF               	movf	indf2,w,c
  5900  000E18  010F               	movlb	15	; () banked
  5901  000E1A  6F4A               	movwf	74,b	;volatile
  5902                           
  5903                           ; BSR set to: 15
  5904                           ;CANlib.h: 363: TXB0D5 = data[5];
  5905  000E1C  0100               	movlb	0	; () banked
  5906  000E1E  EE20 F005          	lfsr	2,5
  5907  000E22  51B1               	movf	CANsendMessage@data& (0+255),w,b
  5908  000E24  26D9               	addwf	fsr2l,f,c
  5909  000E26  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5910  000E28  22DA               	addwfc	fsr2h,f,c
  5911  000E2A  50DF               	movf	indf2,w,c
  5912  000E2C  010F               	movlb	15	; () banked
  5913  000E2E  6F4B               	movwf	75,b	;volatile
  5914                           
  5915                           ; BSR set to: 15
  5916                           ;CANlib.h: 364: TXB0D6 = data[6];
  5917  000E30  0100               	movlb	0	; () banked
  5918  000E32  EE20 F006          	lfsr	2,6
  5919  000E36  51B1               	movf	CANsendMessage@data& (0+255),w,b
  5920  000E38  26D9               	addwf	fsr2l,f,c
  5921  000E3A  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5922  000E3C  22DA               	addwfc	fsr2h,f,c
  5923  000E3E  50DF               	movf	indf2,w,c
  5924  000E40  010F               	movlb	15	; () banked
  5925  000E42  6F4C               	movwf	76,b	;volatile
  5926                           
  5927                           ; BSR set to: 15
  5928                           ;CANlib.h: 365: TXB0D7 = data[7];
  5929  000E44  0100               	movlb	0	; () banked
  5930  000E46  EE20 F007          	lfsr	2,7
  5931  000E4A  51B1               	movf	CANsendMessage@data& (0+255),w,b
  5932  000E4C  26D9               	addwf	fsr2l,f,c
  5933  000E4E  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  5934  000E50  22DA               	addwfc	fsr2h,f,c
  5935  000E52  50DF               	movf	indf2,w,c
  5936  000E54  010F               	movlb	15	; () banked
  5937  000E56  6F4D               	movwf	77,b	;volatile
  5938                           
  5939                           ; BSR set to: 15
  5940                           ;CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  5941  000E58  010F               	movlb	15	; () banked
  5942  000E5A  8740               	bsf	64,3,b	;volatile
  5943                           
  5944                           ; BSR set to: 15
  5945                           ;CANlib.h: 368: return;
  5946  000E5C  0012               	return	
  5947  000E5E                     l363:
  5948                           
  5949                           ; BSR set to: 15
  5950                           ;CANlib.h: 369: }
  5951                           ;CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  5952  000E5E  010F               	movlb	15	; () banked
  5953  000E60  B730               	btfsc	48,3,b	;volatile
  5954  000E62  D13B               	goto	l378
  5955                           
  5956                           ; BSR set to: 15
  5957                           ;CANlib.h: 374: { TXB1DLC = dataLength;
  5958  000E64  C0B3  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  5959                           
  5960                           ;CANlib.h: 376: if (0b01000000 & flags)
  5961  000E68  0100               	movlb	0	; () banked
  5962  000E6A  ADB4               	btfss	CANsendMessage@flags& (0+255),6,b
  5963  000E6C  D003               	goto	l379
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  5967  000E6E  010F               	movlb	15	; () banked
  5968  000E70  8D35               	bsf	53,6,b	;volatile
  5969  000E72  D002               	goto	l380
  5970  000E74                     l379:
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;CANlib.h: 378: else
  5974                           ;CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  5975  000E74  010F               	movlb	15	; () banked
  5976  000E76  9D35               	bcf	53,6,b	;volatile
  5977  000E78                     l380:
  5978                           
  5979                           ; BSR set to: 15
  5980                           ;CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  5981  000E78  0100               	movlb	0	; () banked
  5982  000E7A  A7B4               	btfss	CANsendMessage@flags& (0+255),3,b
  5983  000E7C  D077               	goto	l381
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;CANlib.h: 382: {
  5987                           ;CANlib.h: 383: tamp = identifier & 0x000000FF;
  5988  000E7E  0100               	movlb	0	; () banked
  5989  000E80  51AD               	movf	CANsendMessage@identifier& (0+255),w,b
  5990  000E82  0100               	movlb	0	; () banked
  5991  000E84  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  5992  000E86  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  5993  000E88  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  5994  000E8A  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  5995                           
  5996                           ; BSR set to: 0
  5997                           ;CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  5998  000E8C  C0B5  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;CANlib.h: 386: tamp = identifier & 0x0000FF00;
  6002  000E90  0E00               	movlw	0
  6003  000E92  0100               	movlb	0	; () banked
  6004  000E94  15AD               	andwf	CANsendMessage@identifier& (0+255),w,b
  6005  000E96  0100               	movlb	0	; () banked
  6006  000E98  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6007  000E9A  0EFF               	movlw	255
  6008  000E9C  0100               	movlb	0	; () banked
  6009  000E9E  15AE               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6010  000EA0  0100               	movlb	0	; () banked
  6011  000EA2  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6012  000EA4  0E00               	movlw	0
  6013  000EA6  0100               	movlb	0	; () banked
  6014  000EA8  15AF               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6015  000EAA  0100               	movlb	0	; () banked
  6016  000EAC  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6017  000EAE  0E00               	movlw	0
  6018  000EB0  0100               	movlb	0	; () banked
  6019  000EB2  15B0               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6020  000EB4  0100               	movlb	0	; () banked
  6021  000EB6  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6022                           
  6023                           ; BSR set to: 0
  6024                           ;CANlib.h: 387: tamp = tamp >> 8;
  6025  000EB8  C0B5  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  6026  000EBC  C0B6  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6027  000EC0  C0B7  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6028  000EC4  C0B8  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6029  000EC8  C01F  F01E         	movff	??_CANsendMessage+1,??_CANsendMessage
  6030  000ECC  C020  F01F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6031  000ED0  C021  F020         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6032  000ED4  6A21               	clrf	??_CANsendMessage+3,c
  6033  000ED6  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6034  000EDA  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6035  000EDE  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6036  000EE2  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  6040  000EE6  C0B5  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  6041                           
  6042                           ; BSR set to: 0
  6043                           ;CANlib.h: 390: TXB1SIDL = 0x00;
  6044  000EEA  0E00               	movlw	0
  6045  000EEC  010F               	movlb	15	; () banked
  6046  000EEE  6F32               	movwf	50,b	;volatile
  6047                           
  6048                           ; BSR set to: 15
  6049                           ;CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  6050  000EF0  010F               	movlb	15	; () banked
  6051  000EF2  8732               	bsf	50,3,b	;volatile
  6052                           
  6053                           ; BSR set to: 15
  6054                           ;CANlib.h: 393: if (identifier & 0x00010000)
  6055  000EF4  0100               	movlb	0	; () banked
  6056  000EF6  A1AF               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6057  000EF8  D002               	goto	l382
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  6061  000EFA  010F               	movlb	15	; () banked
  6062  000EFC  8132               	bsf	50,0,b	;volatile
  6063  000EFE                     l382:
  6064                           
  6065                           ;CANlib.h: 395: if (identifier & 0x00020000)
  6066  000EFE  0100               	movlb	0	; () banked
  6067  000F00  A3AF               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6068  000F02  D002               	goto	l383
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  6072  000F04  010F               	movlb	15	; () banked
  6073  000F06  8332               	bsf	50,1,b	;volatile
  6074  000F08                     l383:
  6075                           
  6076                           ;CANlib.h: 397: if (identifier & 0x00040000)
  6077  000F08  0100               	movlb	0	; () banked
  6078  000F0A  A5AF               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6079  000F0C  D002               	goto	l384
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  6083  000F0E  010F               	movlb	15	; () banked
  6084  000F10  8B32               	bsf	50,5,b	;volatile
  6085  000F12                     l384:
  6086                           
  6087                           ;CANlib.h: 399: if (identifier & 0x00080000)
  6088  000F12  0100               	movlb	0	; () banked
  6089  000F14  A7AF               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6090  000F16  D002               	goto	l385
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  6094  000F18  010F               	movlb	15	; () banked
  6095  000F1A  8D32               	bsf	50,6,b	;volatile
  6096  000F1C                     l385:
  6097                           
  6098                           ;CANlib.h: 401: if (identifier & 0x00100000)
  6099  000F1C  0100               	movlb	0	; () banked
  6100  000F1E  A9AF               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6101  000F20  D002               	goto	l4554
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  6105  000F22  010F               	movlb	15	; () banked
  6106  000F24  8F32               	bsf	50,7,b	;volatile
  6107  000F26                     l4554:
  6108                           
  6109                           ;CANlib.h: 404: tamp = (identifier >> 21);
  6110  000F26  C0AD  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  6111  000F2A  C0AE  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6112  000F2E  C0AF  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6113  000F32  C0B0  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6114  000F36  0E16               	movlw	22
  6115  000F38  D005               	goto	u5890
  6116  000F3A                     u5895:
  6117  000F3A  90D8               	bcf	status,0,c
  6118  000F3C  3221               	rrcf	??_CANsendMessage+3,f,c
  6119  000F3E  3220               	rrcf	??_CANsendMessage+2,f,c
  6120  000F40  321F               	rrcf	??_CANsendMessage+1,f,c
  6121  000F42  321E               	rrcf	??_CANsendMessage,f,c
  6122  000F44                     u5890:
  6123  000F44  2EE8               	decfsz	wreg,f,c
  6124  000F46  D7F9               	goto	u5895
  6125  000F48  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6126  000F4C  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6127  000F50  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6128  000F54  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6129                           
  6130                           ;CANlib.h: 405: tamp = tamp & 0x000000FF;
  6131  000F58  0100               	movlb	0	; () banked
  6132  000F5A  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  6133  000F5C  0100               	movlb	0	; () banked
  6134  000F5E  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6135  000F60  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6136  000F62  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6137  000F64  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6138                           
  6139                           ; BSR set to: 0
  6140                           ;CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  6141  000F66  C0B5  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6142                           
  6143                           ;CANlib.h: 407: }
  6144  000F6A  D057               	goto	l4574
  6145  000F6C                     l381:
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;CANlib.h: 409: else
  6149                           ;CANlib.h: 411: {
  6150                           ;CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  6151  000F6C  010F               	movlb	15	; () banked
  6152  000F6E  9732               	bcf	50,3,b	;volatile
  6153                           
  6154                           ; BSR set to: 15
  6155                           ;CANlib.h: 414: tamp = (identifier >> 3);
  6156  000F70  C0AD  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  6157  000F74  C0AE  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6158  000F78  C0AF  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6159  000F7C  C0B0  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6160  000F80  0E04               	movlw	4
  6161  000F82  D005               	goto	u5900
  6162  000F84                     u5905:
  6163  000F84  90D8               	bcf	status,0,c
  6164  000F86  3221               	rrcf	??_CANsendMessage+3,f,c
  6165  000F88  3220               	rrcf	??_CANsendMessage+2,f,c
  6166  000F8A  321F               	rrcf	??_CANsendMessage+1,f,c
  6167  000F8C  321E               	rrcf	??_CANsendMessage,f,c
  6168  000F8E                     u5900:
  6169  000F8E  2EE8               	decfsz	wreg,f,c
  6170  000F90  D7F9               	goto	u5905
  6171  000F92  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6172  000F96  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6173  000F9A  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6174  000F9E  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6175                           
  6176                           ; BSR set to: 15
  6177                           ;CANlib.h: 415: tamp = tamp & 0x000000FF;
  6178  000FA2  0100               	movlb	0	; () banked
  6179  000FA4  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  6180  000FA6  0100               	movlb	0	; () banked
  6181  000FA8  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6182  000FAA  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6183  000FAC  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6184  000FAE  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6185                           
  6186                           ; BSR set to: 0
  6187                           ;CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  6188  000FB0  C0B5  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  6189                           
  6190                           ; BSR set to: 0
  6191                           ;CANlib.h: 418: tamp = identifier & 0x00000007;
  6192  000FB4  0E07               	movlw	7
  6193  000FB6  0100               	movlb	0	; () banked
  6194  000FB8  15AD               	andwf	CANsendMessage@identifier& (0+255),w,b
  6195  000FBA  0100               	movlb	0	; () banked
  6196  000FBC  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6197  000FBE  0E00               	movlw	0
  6198  000FC0  0100               	movlb	0	; () banked
  6199  000FC2  15AE               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6200  000FC4  0100               	movlb	0	; () banked
  6201  000FC6  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6202  000FC8  0E00               	movlw	0
  6203  000FCA  0100               	movlb	0	; () banked
  6204  000FCC  15AF               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6205  000FCE  0100               	movlb	0	; () banked
  6206  000FD0  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6207  000FD2  0E00               	movlw	0
  6208  000FD4  0100               	movlb	0	; () banked
  6209  000FD6  15B0               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6210  000FD8  0100               	movlb	0	; () banked
  6211  000FDA  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6212                           
  6213                           ; BSR set to: 0
  6214                           ;CANlib.h: 419: tamp = tamp << 5;
  6215  000FDC  C0B5  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  6216  000FE0  C0B6  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6217  000FE4  C0B7  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6218  000FE8  C0B8  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6219  000FEC  0E05               	movlw	5
  6220  000FEE                     u5915:
  6221  000FEE  90D8               	bcf	status,0,c
  6222  000FF0  361E               	rlcf	??_CANsendMessage,f,c
  6223  000FF2  361F               	rlcf	??_CANsendMessage+1,f,c
  6224  000FF4  3620               	rlcf	??_CANsendMessage+2,f,c
  6225  000FF6  3621               	rlcf	??_CANsendMessage+3,f,c
  6226  000FF8  2EE8               	decfsz	wreg,f,c
  6227  000FFA  D7F9               	goto	u5915
  6228  000FFC  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6229  001000  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6230  001004  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6231  001008  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  6235  00100C  010F               	movlb	15	; () banked
  6236  00100E  5132               	movf	50,w,b	;volatile
  6237  001010  0B1F               	andlw	31
  6238  001012  010F               	movlb	15	; () banked
  6239  001014  6F32               	movwf	50,b	;volatile
  6240                           
  6241                           ; BSR set to: 15
  6242                           ;CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  6243  001016  C0B5  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  6244  00101A                     l4574:
  6245                           
  6246                           ;CANlib.h: 422: }
  6247                           ;CANlib.h: 424: if (0b00000001 & flags)
  6248  00101A  0100               	movlb	0	; () banked
  6249  00101C  A1B4               	btfss	CANsendMessage@flags& (0+255),0,b
  6250  00101E  D003               	goto	l388
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  6254  001020  010F               	movlb	15	; () banked
  6255  001022  8130               	bsf	48,0,b	;volatile
  6256  001024  D002               	goto	l389
  6257  001026                     l388:
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;CANlib.h: 426: else
  6261                           ;CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  6262  001026  010F               	movlb	15	; () banked
  6263  001028  9130               	bcf	48,0,b	;volatile
  6264  00102A                     l389:
  6265                           
  6266                           ; BSR set to: 15
  6267                           ;CANlib.h: 428: if (0b00000010 & flags)
  6268  00102A  0100               	movlb	0	; () banked
  6269  00102C  A3B4               	btfss	CANsendMessage@flags& (0+255),1,b
  6270  00102E  D003               	goto	l390
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  6274  001030  010F               	movlb	15	; () banked
  6275  001032  8330               	bsf	48,1,b	;volatile
  6276  001034  D002               	goto	l4580
  6277  001036                     l390:
  6278                           
  6279                           ; BSR set to: 0
  6280                           ;CANlib.h: 430: else
  6281                           ;CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  6282  001036  010F               	movlb	15	; () banked
  6283  001038  9330               	bcf	48,1,b	;volatile
  6284  00103A                     l4580:
  6285                           
  6286                           ; BSR set to: 15
  6287                           ;CANlib.h: 433: TXB1D0 = data[0];
  6288  00103A  C0B1  FFD9         	movff	CANsendMessage@data,fsr2l
  6289  00103E  C0B2  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6290  001042  50DF               	movf	indf2,w,c
  6291  001044  010F               	movlb	15	; () banked
  6292  001046  6F36               	movwf	54,b	;volatile
  6293                           
  6294                           ; BSR set to: 15
  6295                           ;CANlib.h: 434: TXB1D1 = data[1];
  6296  001048  0100               	movlb	0	; () banked
  6297  00104A  EE20 F001          	lfsr	2,1
  6298  00104E  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6299  001050  26D9               	addwf	fsr2l,f,c
  6300  001052  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6301  001054  22DA               	addwfc	fsr2h,f,c
  6302  001056  50DF               	movf	indf2,w,c
  6303  001058  010F               	movlb	15	; () banked
  6304  00105A  6F37               	movwf	55,b	;volatile
  6305                           
  6306                           ; BSR set to: 15
  6307                           ;CANlib.h: 435: TXB1D2 = data[2];
  6308  00105C  0100               	movlb	0	; () banked
  6309  00105E  EE20 F002          	lfsr	2,2
  6310  001062  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6311  001064  26D9               	addwf	fsr2l,f,c
  6312  001066  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6313  001068  22DA               	addwfc	fsr2h,f,c
  6314  00106A  50DF               	movf	indf2,w,c
  6315  00106C  010F               	movlb	15	; () banked
  6316  00106E  6F38               	movwf	56,b	;volatile
  6317                           
  6318                           ; BSR set to: 15
  6319                           ;CANlib.h: 436: TXB1D3 = data[3];
  6320  001070  0100               	movlb	0	; () banked
  6321  001072  EE20 F003          	lfsr	2,3
  6322  001076  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6323  001078  26D9               	addwf	fsr2l,f,c
  6324  00107A  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6325  00107C  22DA               	addwfc	fsr2h,f,c
  6326  00107E  50DF               	movf	indf2,w,c
  6327  001080  010F               	movlb	15	; () banked
  6328  001082  6F39               	movwf	57,b	;volatile
  6329                           
  6330                           ; BSR set to: 15
  6331                           ;CANlib.h: 437: TXB1D4 = data[4];
  6332  001084  0100               	movlb	0	; () banked
  6333  001086  EE20 F004          	lfsr	2,4
  6334  00108A  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6335  00108C  26D9               	addwf	fsr2l,f,c
  6336  00108E  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6337  001090  22DA               	addwfc	fsr2h,f,c
  6338  001092  50DF               	movf	indf2,w,c
  6339  001094  010F               	movlb	15	; () banked
  6340  001096  6F3A               	movwf	58,b	;volatile
  6341                           
  6342                           ; BSR set to: 15
  6343                           ;CANlib.h: 438: TXB1D5 = data[5];
  6344  001098  0100               	movlb	0	; () banked
  6345  00109A  EE20 F005          	lfsr	2,5
  6346  00109E  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6347  0010A0  26D9               	addwf	fsr2l,f,c
  6348  0010A2  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6349  0010A4  22DA               	addwfc	fsr2h,f,c
  6350  0010A6  50DF               	movf	indf2,w,c
  6351  0010A8  010F               	movlb	15	; () banked
  6352  0010AA  6F3B               	movwf	59,b	;volatile
  6353                           
  6354                           ; BSR set to: 15
  6355                           ;CANlib.h: 439: TXB1D6 = data[6];
  6356  0010AC  0100               	movlb	0	; () banked
  6357  0010AE  EE20 F006          	lfsr	2,6
  6358  0010B2  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6359  0010B4  26D9               	addwf	fsr2l,f,c
  6360  0010B6  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6361  0010B8  22DA               	addwfc	fsr2h,f,c
  6362  0010BA  50DF               	movf	indf2,w,c
  6363  0010BC  010F               	movlb	15	; () banked
  6364  0010BE  6F3C               	movwf	60,b	;volatile
  6365                           
  6366                           ; BSR set to: 15
  6367                           ;CANlib.h: 440: TXB1D7 = data[7];
  6368  0010C0  0100               	movlb	0	; () banked
  6369  0010C2  EE20 F007          	lfsr	2,7
  6370  0010C6  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6371  0010C8  26D9               	addwf	fsr2l,f,c
  6372  0010CA  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6373  0010CC  22DA               	addwfc	fsr2h,f,c
  6374  0010CE  50DF               	movf	indf2,w,c
  6375  0010D0  010F               	movlb	15	; () banked
  6376  0010D2  6F3D               	movwf	61,b	;volatile
  6377                           
  6378                           ; BSR set to: 15
  6379                           ;CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  6380  0010D4  010F               	movlb	15	; () banked
  6381  0010D6  8730               	bsf	48,3,b	;volatile
  6382                           
  6383                           ; BSR set to: 15
  6384                           ;CANlib.h: 444: return;
  6385  0010D8  0012               	return	
  6386  0010DA                     l378:
  6387                           
  6388                           ; BSR set to: 15
  6389                           ;CANlib.h: 445: }
  6390                           ;CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  6391  0010DA  010F               	movlb	15	; () banked
  6392  0010DC  B720               	btfsc	32,3,b	;volatile
  6393  0010DE  0012               	return	
  6394                           
  6395                           ; BSR set to: 15
  6396                           ;CANlib.h: 450: { TXB2DLC = dataLength;
  6397  0010E0  C0B3  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  6398                           
  6399                           ;CANlib.h: 452: if (0b01000000 & flags)
  6400  0010E4  0100               	movlb	0	; () banked
  6401  0010E6  ADB4               	btfss	CANsendMessage@flags& (0+255),6,b
  6402  0010E8  D003               	goto	l393
  6403                           
  6404                           ; BSR set to: 0
  6405                           ;CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  6406  0010EA  010F               	movlb	15	; () banked
  6407  0010EC  8D25               	bsf	37,6,b	;volatile
  6408  0010EE  D002               	goto	l394
  6409  0010F0                     l393:
  6410                           
  6411                           ; BSR set to: 0
  6412                           ;CANlib.h: 454: else
  6413                           ;CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  6414  0010F0  010F               	movlb	15	; () banked
  6415  0010F2  9D25               	bcf	37,6,b	;volatile
  6416  0010F4                     l394:
  6417                           
  6418                           ; BSR set to: 15
  6419                           ;CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  6420  0010F4  0100               	movlb	0	; () banked
  6421  0010F6  A7B4               	btfss	CANsendMessage@flags& (0+255),3,b
  6422  0010F8  D077               	goto	l395
  6423                           
  6424                           ; BSR set to: 0
  6425                           ;CANlib.h: 458: {
  6426                           ;CANlib.h: 459: tamp = identifier & 0x000000FF;
  6427  0010FA  0100               	movlb	0	; () banked
  6428  0010FC  51AD               	movf	CANsendMessage@identifier& (0+255),w,b
  6429  0010FE  0100               	movlb	0	; () banked
  6430  001100  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6431  001102  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6432  001104  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6433  001106  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  6437  001108  C0B5  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;CANlib.h: 462: tamp = identifier & 0x0000FF00;
  6441  00110C  0E00               	movlw	0
  6442  00110E  0100               	movlb	0	; () banked
  6443  001110  15AD               	andwf	CANsendMessage@identifier& (0+255),w,b
  6444  001112  0100               	movlb	0	; () banked
  6445  001114  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6446  001116  0EFF               	movlw	255
  6447  001118  0100               	movlb	0	; () banked
  6448  00111A  15AE               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6449  00111C  0100               	movlb	0	; () banked
  6450  00111E  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6451  001120  0E00               	movlw	0
  6452  001122  0100               	movlb	0	; () banked
  6453  001124  15AF               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6454  001126  0100               	movlb	0	; () banked
  6455  001128  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6456  00112A  0E00               	movlw	0
  6457  00112C  0100               	movlb	0	; () banked
  6458  00112E  15B0               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6459  001130  0100               	movlb	0	; () banked
  6460  001132  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;CANlib.h: 463: tamp = tamp >> 8;
  6464  001134  C0B5  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  6465  001138  C0B6  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6466  00113C  C0B7  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6467  001140  C0B8  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6468  001144  C01F  F01E         	movff	??_CANsendMessage+1,??_CANsendMessage
  6469  001148  C020  F01F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6470  00114C  C021  F020         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6471  001150  6A21               	clrf	??_CANsendMessage+3,c
  6472  001152  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6473  001156  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6474  00115A  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6475  00115E  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6476                           
  6477                           ; BSR set to: 0
  6478                           ;CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  6479  001162  C0B5  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;CANlib.h: 466: TXB2SIDL = 0x00;
  6483  001166  0E00               	movlw	0
  6484  001168  010F               	movlb	15	; () banked
  6485  00116A  6F22               	movwf	34,b	;volatile
  6486                           
  6487                           ; BSR set to: 15
  6488                           ;CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  6489  00116C  010F               	movlb	15	; () banked
  6490  00116E  8722               	bsf	34,3,b	;volatile
  6491                           
  6492                           ; BSR set to: 15
  6493                           ;CANlib.h: 469: if (identifier & 0x00010000)
  6494  001170  0100               	movlb	0	; () banked
  6495  001172  A1AF               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6496  001174  D002               	goto	l396
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  6500  001176  010F               	movlb	15	; () banked
  6501  001178  8122               	bsf	34,0,b	;volatile
  6502  00117A                     l396:
  6503                           
  6504                           ;CANlib.h: 471: if (identifier & 0x00020000)
  6505  00117A  0100               	movlb	0	; () banked
  6506  00117C  A3AF               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6507  00117E  D002               	goto	l397
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  6511  001180  010F               	movlb	15	; () banked
  6512  001182  8322               	bsf	34,1,b	;volatile
  6513  001184                     l397:
  6514                           
  6515                           ;CANlib.h: 473: if (identifier & 0x00040000)
  6516  001184  0100               	movlb	0	; () banked
  6517  001186  A5AF               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6518  001188  D002               	goto	l398
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  6522  00118A  010F               	movlb	15	; () banked
  6523  00118C  8B22               	bsf	34,5,b	;volatile
  6524  00118E                     l398:
  6525                           
  6526                           ;CANlib.h: 475: if (identifier & 0x00080000)
  6527  00118E  0100               	movlb	0	; () banked
  6528  001190  A7AF               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6529  001192  D002               	goto	l399
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  6533  001194  010F               	movlb	15	; () banked
  6534  001196  8D22               	bsf	34,6,b	;volatile
  6535  001198                     l399:
  6536                           
  6537                           ;CANlib.h: 477: if (identifier & 0x00100000)
  6538  001198  0100               	movlb	0	; () banked
  6539  00119A  A9AF               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6540  00119C  D002               	goto	l4630
  6541                           
  6542                           ; BSR set to: 0
  6543                           ;CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  6544  00119E  010F               	movlb	15	; () banked
  6545  0011A0  8F22               	bsf	34,7,b	;volatile
  6546  0011A2                     l4630:
  6547                           
  6548                           ;CANlib.h: 480: tamp = (identifier >> 21);
  6549  0011A2  C0AD  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  6550  0011A6  C0AE  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6551  0011AA  C0AF  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6552  0011AE  C0B0  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6553  0011B2  0E16               	movlw	22
  6554  0011B4  D005               	goto	u6020
  6555  0011B6                     u6025:
  6556  0011B6  90D8               	bcf	status,0,c
  6557  0011B8  3221               	rrcf	??_CANsendMessage+3,f,c
  6558  0011BA  3220               	rrcf	??_CANsendMessage+2,f,c
  6559  0011BC  321F               	rrcf	??_CANsendMessage+1,f,c
  6560  0011BE  321E               	rrcf	??_CANsendMessage,f,c
  6561  0011C0                     u6020:
  6562  0011C0  2EE8               	decfsz	wreg,f,c
  6563  0011C2  D7F9               	goto	u6025
  6564  0011C4  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6565  0011C8  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6566  0011CC  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6567  0011D0  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6568                           
  6569                           ;CANlib.h: 481: tamp = tamp & 0x000000FF;
  6570  0011D4  0100               	movlb	0	; () banked
  6571  0011D6  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  6572  0011D8  0100               	movlb	0	; () banked
  6573  0011DA  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6574  0011DC  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6575  0011DE  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6576  0011E0  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6577                           
  6578                           ; BSR set to: 0
  6579                           ;CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  6580  0011E2  C0B5  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6581                           
  6582                           ;CANlib.h: 483: }
  6583  0011E6  D057               	goto	l4650
  6584  0011E8                     l395:
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;CANlib.h: 485: else
  6588                           ;CANlib.h: 487: {
  6589                           ;CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  6590  0011E8  010F               	movlb	15	; () banked
  6591  0011EA  9722               	bcf	34,3,b	;volatile
  6592                           
  6593                           ; BSR set to: 15
  6594                           ;CANlib.h: 490: tamp = (identifier >> 3);
  6595  0011EC  C0AD  F01E         	movff	CANsendMessage@identifier,??_CANsendMessage
  6596  0011F0  C0AE  F01F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6597  0011F4  C0AF  F020         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6598  0011F8  C0B0  F021         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6599  0011FC  0E04               	movlw	4
  6600  0011FE  D005               	goto	u6030
  6601  001200                     u6035:
  6602  001200  90D8               	bcf	status,0,c
  6603  001202  3221               	rrcf	??_CANsendMessage+3,f,c
  6604  001204  3220               	rrcf	??_CANsendMessage+2,f,c
  6605  001206  321F               	rrcf	??_CANsendMessage+1,f,c
  6606  001208  321E               	rrcf	??_CANsendMessage,f,c
  6607  00120A                     u6030:
  6608  00120A  2EE8               	decfsz	wreg,f,c
  6609  00120C  D7F9               	goto	u6035
  6610  00120E  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6611  001212  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6612  001216  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6613  00121A  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6614                           
  6615                           ; BSR set to: 15
  6616                           ;CANlib.h: 491: tamp = tamp & 0x000000FF;
  6617  00121E  0100               	movlb	0	; () banked
  6618  001220  51B5               	movf	CANsendMessage@tamp& (0+255),w,b
  6619  001222  0100               	movlb	0	; () banked
  6620  001224  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6621  001226  6BB6               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6622  001228  6BB7               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6623  00122A  6BB8               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6624                           
  6625                           ; BSR set to: 0
  6626                           ;CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  6627  00122C  C0B5  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  6628                           
  6629                           ; BSR set to: 0
  6630                           ;CANlib.h: 494: tamp = identifier & 0x00000007;
  6631  001230  0E07               	movlw	7
  6632  001232  0100               	movlb	0	; () banked
  6633  001234  15AD               	andwf	CANsendMessage@identifier& (0+255),w,b
  6634  001236  0100               	movlb	0	; () banked
  6635  001238  6FB5               	movwf	CANsendMessage@tamp& (0+255),b
  6636  00123A  0E00               	movlw	0
  6637  00123C  0100               	movlb	0	; () banked
  6638  00123E  15AE               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6639  001240  0100               	movlb	0	; () banked
  6640  001242  6FB6               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6641  001244  0E00               	movlw	0
  6642  001246  0100               	movlb	0	; () banked
  6643  001248  15AF               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6644  00124A  0100               	movlb	0	; () banked
  6645  00124C  6FB7               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6646  00124E  0E00               	movlw	0
  6647  001250  0100               	movlb	0	; () banked
  6648  001252  15B0               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6649  001254  0100               	movlb	0	; () banked
  6650  001256  6FB8               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6651                           
  6652                           ; BSR set to: 0
  6653                           ;CANlib.h: 495: tamp = tamp << 5;
  6654  001258  C0B5  F01E         	movff	CANsendMessage@tamp,??_CANsendMessage
  6655  00125C  C0B6  F01F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6656  001260  C0B7  F020         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6657  001264  C0B8  F021         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6658  001268  0E05               	movlw	5
  6659  00126A                     u6045:
  6660  00126A  90D8               	bcf	status,0,c
  6661  00126C  361E               	rlcf	??_CANsendMessage,f,c
  6662  00126E  361F               	rlcf	??_CANsendMessage+1,f,c
  6663  001270  3620               	rlcf	??_CANsendMessage+2,f,c
  6664  001272  3621               	rlcf	??_CANsendMessage+3,f,c
  6665  001274  2EE8               	decfsz	wreg,f,c
  6666  001276  D7F9               	goto	u6045
  6667  001278  C01E  F0B5         	movff	??_CANsendMessage,CANsendMessage@tamp
  6668  00127C  C01F  F0B6         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6669  001280  C020  F0B7         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6670  001284  C021  F0B8         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  6674  001288  010F               	movlb	15	; () banked
  6675  00128A  5122               	movf	34,w,b	;volatile
  6676  00128C  0B1F               	andlw	31
  6677  00128E  010F               	movlb	15	; () banked
  6678  001290  6F22               	movwf	34,b	;volatile
  6679                           
  6680                           ; BSR set to: 15
  6681                           ;CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  6682  001292  C0B5  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  6683  001296                     l4650:
  6684                           
  6685                           ;CANlib.h: 498: }
  6686                           ;CANlib.h: 500: if (0b00000001 & flags)
  6687  001296  0100               	movlb	0	; () banked
  6688  001298  A1B4               	btfss	CANsendMessage@flags& (0+255),0,b
  6689  00129A  D003               	goto	l402
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  6693  00129C  010F               	movlb	15	; () banked
  6694  00129E  8120               	bsf	32,0,b	;volatile
  6695  0012A0  D002               	goto	l403
  6696  0012A2                     l402:
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;CANlib.h: 502: else
  6700                           ;CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  6701  0012A2  010F               	movlb	15	; () banked
  6702  0012A4  9120               	bcf	32,0,b	;volatile
  6703  0012A6                     l403:
  6704                           
  6705                           ; BSR set to: 15
  6706                           ;CANlib.h: 504: if (0b00000010 & flags)
  6707  0012A6  0100               	movlb	0	; () banked
  6708  0012A8  A3B4               	btfss	CANsendMessage@flags& (0+255),1,b
  6709  0012AA  D003               	goto	l404
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  6713  0012AC  010F               	movlb	15	; () banked
  6714  0012AE  8320               	bsf	32,1,b	;volatile
  6715  0012B0  D002               	goto	l4656
  6716  0012B2                     l404:
  6717                           
  6718                           ; BSR set to: 0
  6719                           ;CANlib.h: 506: else
  6720                           ;CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  6721  0012B2  010F               	movlb	15	; () banked
  6722  0012B4  9320               	bcf	32,1,b	;volatile
  6723  0012B6                     l4656:
  6724                           
  6725                           ; BSR set to: 15
  6726                           ;CANlib.h: 509: TXB2D0 = data[0];
  6727  0012B6  C0B1  FFD9         	movff	CANsendMessage@data,fsr2l
  6728  0012BA  C0B2  FFDA         	movff	CANsendMessage@data+1,fsr2h
  6729  0012BE  50DF               	movf	indf2,w,c
  6730  0012C0  010F               	movlb	15	; () banked
  6731  0012C2  6F26               	movwf	38,b	;volatile
  6732                           
  6733                           ; BSR set to: 15
  6734                           ;CANlib.h: 510: TXB2D1 = data[1];
  6735  0012C4  0100               	movlb	0	; () banked
  6736  0012C6  EE20 F001          	lfsr	2,1
  6737  0012CA  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6738  0012CC  26D9               	addwf	fsr2l,f,c
  6739  0012CE  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6740  0012D0  22DA               	addwfc	fsr2h,f,c
  6741  0012D2  50DF               	movf	indf2,w,c
  6742  0012D4  010F               	movlb	15	; () banked
  6743  0012D6  6F27               	movwf	39,b	;volatile
  6744                           
  6745                           ; BSR set to: 15
  6746                           ;CANlib.h: 511: TXB2D2 = data[2];
  6747  0012D8  0100               	movlb	0	; () banked
  6748  0012DA  EE20 F002          	lfsr	2,2
  6749  0012DE  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6750  0012E0  26D9               	addwf	fsr2l,f,c
  6751  0012E2  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6752  0012E4  22DA               	addwfc	fsr2h,f,c
  6753  0012E6  50DF               	movf	indf2,w,c
  6754  0012E8  010F               	movlb	15	; () banked
  6755  0012EA  6F28               	movwf	40,b	;volatile
  6756                           
  6757                           ; BSR set to: 15
  6758                           ;CANlib.h: 512: TXB2D3 = data[3];
  6759  0012EC  0100               	movlb	0	; () banked
  6760  0012EE  EE20 F003          	lfsr	2,3
  6761  0012F2  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6762  0012F4  26D9               	addwf	fsr2l,f,c
  6763  0012F6  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6764  0012F8  22DA               	addwfc	fsr2h,f,c
  6765  0012FA  50DF               	movf	indf2,w,c
  6766  0012FC  010F               	movlb	15	; () banked
  6767  0012FE  6F29               	movwf	41,b	;volatile
  6768                           
  6769                           ; BSR set to: 15
  6770                           ;CANlib.h: 513: TXB2D4 = data[4];
  6771  001300  0100               	movlb	0	; () banked
  6772  001302  EE20 F004          	lfsr	2,4
  6773  001306  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6774  001308  26D9               	addwf	fsr2l,f,c
  6775  00130A  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6776  00130C  22DA               	addwfc	fsr2h,f,c
  6777  00130E  50DF               	movf	indf2,w,c
  6778  001310  010F               	movlb	15	; () banked
  6779  001312  6F2A               	movwf	42,b	;volatile
  6780                           
  6781                           ; BSR set to: 15
  6782                           ;CANlib.h: 514: TXB2D5 = data[5];
  6783  001314  0100               	movlb	0	; () banked
  6784  001316  EE20 F005          	lfsr	2,5
  6785  00131A  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6786  00131C  26D9               	addwf	fsr2l,f,c
  6787  00131E  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6788  001320  22DA               	addwfc	fsr2h,f,c
  6789  001322  50DF               	movf	indf2,w,c
  6790  001324  010F               	movlb	15	; () banked
  6791  001326  6F2B               	movwf	43,b	;volatile
  6792                           
  6793                           ; BSR set to: 15
  6794                           ;CANlib.h: 515: TXB2D6 = data[6];
  6795  001328  0100               	movlb	0	; () banked
  6796  00132A  EE20 F006          	lfsr	2,6
  6797  00132E  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6798  001330  26D9               	addwf	fsr2l,f,c
  6799  001332  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6800  001334  22DA               	addwfc	fsr2h,f,c
  6801  001336  50DF               	movf	indf2,w,c
  6802  001338  010F               	movlb	15	; () banked
  6803  00133A  6F2C               	movwf	44,b	;volatile
  6804                           
  6805                           ; BSR set to: 15
  6806                           ;CANlib.h: 516: TXB2D7 = data[7];
  6807  00133C  0100               	movlb	0	; () banked
  6808  00133E  EE20 F007          	lfsr	2,7
  6809  001342  51B1               	movf	CANsendMessage@data& (0+255),w,b
  6810  001344  26D9               	addwf	fsr2l,f,c
  6811  001346  51B2               	movf	(CANsendMessage@data+1)& (0+255),w,b
  6812  001348  22DA               	addwfc	fsr2h,f,c
  6813  00134A  50DF               	movf	indf2,w,c
  6814  00134C  010F               	movlb	15	; () banked
  6815  00134E  6F2D               	movwf	45,b	;volatile
  6816                           
  6817                           ; BSR set to: 15
  6818                           ;CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  6819  001350  010F               	movlb	15	; () banked
  6820  001352  8720               	bsf	32,3,b	;volatile
  6821                           
  6822                           ; BSR set to: 15
  6823                           ;CANlib.h: 520: return;
  6824  001354  0012               	return	
  6825  001356                     __end_of_CANsendMessage:
  6826                           	opt stack 0
  6827                           tblptru	equ	0xFF8
  6828                           tblptrh	equ	0xFF7
  6829                           tblptrl	equ	0xFF6
  6830                           tablat	equ	0xFF5
  6831                           prodh	equ	0xFF4
  6832                           prodl	equ	0xFF3
  6833                           intcon	equ	0xFF2
  6834                           postinc0	equ	0xFEE
  6835                           wreg	equ	0xFE8
  6836                           indf1	equ	0xFE7
  6837                           postdec1	equ	0xFE5
  6838                           fsr1h	equ	0xFE2
  6839                           fsr1l	equ	0xFE1
  6840                           indf2	equ	0xFDF
  6841                           fsr2h	equ	0xFDA
  6842                           fsr2l	equ	0xFD9
  6843                           status	equ	0xFD8
  6844                           
  6845 ;; *************** function _CANisTxReady *****************
  6846 ;; Defined at:
  6847 ;;		line 1154 in file "CANlib.h"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;		None
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;		None
  6852 ;; Return value:  Size  Location     Type
  6853 ;;                  1    wreg      unsigned char 
  6854 ;; Registers used:
  6855 ;;		wreg, status,2
  6856 ;; Tracked objects:
  6857 ;;		On entry : 0/0
  6858 ;;		On exit  : 0/0
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6861 ;;      Params:         0       0       0       0
  6862 ;;      Locals:         1       0       0       0
  6863 ;;      Temps:          0       0       0       0
  6864 ;;      Totals:         1       0       0       0
  6865 ;;Total ram usage:        1 bytes
  6866 ;; Hardware stack levels used:    1
  6867 ;; Hardware stack levels required when called:    2
  6868 ;; This function calls:
  6869 ;;		Nothing
  6870 ;; This function is called by:
  6871 ;;		_send_data
  6872 ;;		_battery_measure
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text13
  6877  0025F8                     __ptext13:
  6878                           	opt stack 0
  6879  0025F8                     _CANisTxReady:
  6880                           	opt stack 27
  6881                           
  6882                           ;CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TXREQ)
      +                          ;
  6883                           
  6884                           ; BSR set to: 15
  6885                           ;incstack = 0
  6886  0025F8  0E01               	movlw	1
  6887  0025FA  6E1E               	movwf	_CANisTxReady$2993,c
  6888  0025FC  010F               	movlb	15	; () banked
  6889  0025FE  A740               	btfss	64,3,b	;volatile
  6890  002600  D008               	goto	l556
  6891                           
  6892                           ; BSR set to: 15
  6893  002602  010F               	movlb	15	; () banked
  6894  002604  A730               	btfss	48,3,b	;volatile
  6895  002606  D005               	goto	l556
  6896                           
  6897                           ; BSR set to: 15
  6898  002608  010F               	movlb	15	; () banked
  6899  00260A  A720               	btfss	32,3,b	;volatile
  6900  00260C  D002               	goto	l556
  6901                           
  6902                           ; BSR set to: 15
  6903  00260E  0E00               	movlw	0
  6904  002610  6E1E               	movwf	_CANisTxReady$2993,c
  6905  002612                     l556:
  6906                           
  6907                           ; BSR set to: 15
  6908  002612  501E               	movf	_CANisTxReady$2993,w,c
  6909  002614  0012               	return	
  6910  002616                     __end_of_CANisTxReady:
  6911                           	opt stack 0
  6912                           tblptru	equ	0xFF8
  6913                           tblptrh	equ	0xFF7
  6914                           tblptrl	equ	0xFF6
  6915                           tablat	equ	0xFF5
  6916                           prodh	equ	0xFF4
  6917                           prodl	equ	0xFF3
  6918                           intcon	equ	0xFF2
  6919                           postinc0	equ	0xFEE
  6920                           wreg	equ	0xFE8
  6921                           indf1	equ	0xFE7
  6922                           postdec1	equ	0xFE5
  6923                           fsr1h	equ	0xFE2
  6924                           fsr1l	equ	0xFE1
  6925                           indf2	equ	0xFDF
  6926                           fsr2h	equ	0xFDA
  6927                           fsr2l	equ	0xFD9
  6928                           status	equ	0xFD8
  6929                           
  6930 ;; *************** function _abs *****************
  6931 ;; Defined at:
  6932 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;  a               2    8[BANK0 ] int 
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;		None
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  2    8[BANK0 ] int 
  6939 ;; Registers used:
  6940 ;;		wreg, status,2, status,0
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6946 ;;      Params:         0       2       0       0
  6947 ;;      Locals:         0       0       0       0
  6948 ;;      Temps:          0       2       0       0
  6949 ;;      Totals:         0       4       0       0
  6950 ;;Total ram usage:        4 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; Hardware stack levels required when called:    2
  6953 ;; This function calls:
  6954 ;;		Nothing
  6955 ;; This function is called by:
  6956 ;;		_main
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           
  6960                           	psect	text14
  6961  0025CC                     __ptext14:
  6962                           	opt stack 0
  6963  0025CC                     _abs:
  6964                           	opt stack 28
  6965                           
  6966                           ; BSR set to: 15
  6967                           ;incstack = 0
  6968  0025CC  0100               	movlb	0	; () banked
  6969  0025CE  AFB6               	btfss	(abs@a+1)& (0+255),7,b
  6970  0025D0  D00E               	goto	l816
  6971                           
  6972                           ; BSR set to: 0
  6973  0025D2  C0B5  F0B7         	movff	abs@a,??_abs
  6974  0025D6  C0B6  F0B8         	movff	abs@a+1,??_abs+1
  6975  0025DA  0100               	movlb	0	; () banked
  6976  0025DC  1FB7               	comf	??_abs& (0+255),f,b
  6977  0025DE  1FB8               	comf	(??_abs+1)& (0+255),f,b
  6978  0025E0  4BB7               	infsnz	??_abs& (0+255),f,b
  6979  0025E2  2BB8               	incf	(??_abs+1)& (0+255),f,b
  6980  0025E4  C0B7  F0B5         	movff	??_abs,?_abs
  6981  0025E8  C0B8  F0B6         	movff	??_abs+1,?_abs+1
  6982  0025EC  0012               	return	
  6983  0025EE                     l816:
  6984                           
  6985                           ; BSR set to: 0
  6986  0025EE  C0B5  F0B5         	movff	abs@a,?_abs
  6987  0025F2  C0B6  F0B6         	movff	abs@a+1,?_abs+1
  6988                           
  6989                           ; BSR set to: 0
  6990  0025F6  0012               	return		;funcret
  6991  0025F8                     __end_of_abs:
  6992                           	opt stack 0
  6993                           tblptru	equ	0xFF8
  6994                           tblptrh	equ	0xFF7
  6995                           tblptrl	equ	0xFF6
  6996                           tablat	equ	0xFF5
  6997                           prodh	equ	0xFF4
  6998                           prodl	equ	0xFF3
  6999                           intcon	equ	0xFF2
  7000                           postinc0	equ	0xFEE
  7001                           wreg	equ	0xFE8
  7002                           indf1	equ	0xFE7
  7003                           postdec1	equ	0xFE5
  7004                           fsr1h	equ	0xFE2
  7005                           fsr1l	equ	0xFE1
  7006                           indf2	equ	0xFDF
  7007                           fsr2h	equ	0xFDA
  7008                           fsr2l	equ	0xFD9
  7009                           status	equ	0xFD8
  7010                           
  7011 ;; *************** function _SetDCEPWM1 *****************
  7012 ;; Defined at:
  7013 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;  dutycycle       2   29[COMRAM] unsigned int 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;  DCycle          2   33[COMRAM] struct PWMDC
  7018 ;; Return value:  Size  Location     Type
  7019 ;;		None               void
  7020 ;; Registers used:
  7021 ;;		wreg, status,2, status,0
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7027 ;;      Params:         2       0       0       0
  7028 ;;      Locals:         2       0       0       0
  7029 ;;      Temps:          2       0       0       0
  7030 ;;      Totals:         6       0       0       0
  7031 ;;Total ram usage:        6 bytes
  7032 ;; Hardware stack levels used:    1
  7033 ;; Hardware stack levels required when called:    2
  7034 ;; This function calls:
  7035 ;;		Nothing
  7036 ;; This function is called by:
  7037 ;;		_main
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           	psect	text15
  7042  00252C                     __ptext15:
  7043                           	opt stack 0
  7044  00252C                     _SetDCEPWM1:
  7045                           	opt stack 28
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;incstack = 0
  7049  00252C  C01E  F020         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  7050  002530  C01F  F021         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  7051  002534  0E06               	movlw	6
  7052  002536                     u4175:
  7053  002536  90D8               	bcf	status,0,c
  7054  002538  3620               	rlcf	??_SetDCEPWM1,f,c
  7055  00253A  3621               	rlcf	??_SetDCEPWM1+1,f,c
  7056  00253C  2EE8               	decfsz	wreg,f,c
  7057  00253E  D7FB               	goto	u4175
  7058  002540  C020  F022         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  7059  002544  C021  F023         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  7060  002548  C023  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  7061  00254C  C022  F020         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  7062  002550  90D8               	bcf	status,0,c
  7063  002552  3220               	rrcf	??_SetDCEPWM1,f,c
  7064  002554  90D8               	bcf	status,0,c
  7065  002556  3220               	rrcf	??_SetDCEPWM1,f,c
  7066  002558  0E30               	movlw	48
  7067  00255A  1620               	andwf	??_SetDCEPWM1,f,c
  7068  00255C  50BA               	movf	4026,w,c	;volatile
  7069  00255E  0BCF               	andlw	207
  7070  002560  1020               	iorwf	??_SetDCEPWM1,w,c
  7071  002562  6EBA               	movwf	4026,c	;volatile
  7072  002564  0012               	return		;funcret
  7073  002566                     __end_of_SetDCEPWM1:
  7074                           	opt stack 0
  7075                           tblptru	equ	0xFF8
  7076                           tblptrh	equ	0xFF7
  7077                           tblptrl	equ	0xFF6
  7078                           tablat	equ	0xFF5
  7079                           prodh	equ	0xFF4
  7080                           prodl	equ	0xFF3
  7081                           intcon	equ	0xFF2
  7082                           postinc0	equ	0xFEE
  7083                           wreg	equ	0xFE8
  7084                           indf1	equ	0xFE7
  7085                           postdec1	equ	0xFE5
  7086                           fsr1h	equ	0xFE2
  7087                           fsr1l	equ	0xFE1
  7088                           indf2	equ	0xFDF
  7089                           fsr2h	equ	0xFDA
  7090                           fsr2l	equ	0xFD9
  7091                           status	equ	0xFD8
  7092                           
  7093 ;; *************** function _OpenTimer2 *****************
  7094 ;; Defined at:
  7095 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  config          1    wreg     unsigned char 
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;  config          1   29[COMRAM] unsigned char 
  7100 ;; Return value:  Size  Location     Type
  7101 ;;		None               void
  7102 ;; Registers used:
  7103 ;;		wreg, status,2, status,0
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7109 ;;      Params:         0       0       0       0
  7110 ;;      Locals:         1       0       0       0
  7111 ;;      Temps:          0       0       0       0
  7112 ;;      Totals:         1       0       0       0
  7113 ;;Total ram usage:        1 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; Hardware stack levels required when called:    2
  7116 ;; This function calls:
  7117 ;;		Nothing
  7118 ;; This function is called by:
  7119 ;;		_main
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           	psect	text16
  7124  002616                     __ptext16:
  7125                           	opt stack 0
  7126  002616                     _OpenTimer2:
  7127                           	opt stack 28
  7128                           
  7129                           ;incstack = 0
  7130                           ;OpenTimer2@config stored from wreg
  7131  002616  6E1E               	movwf	OpenTimer2@config,c
  7132  002618  501E               	movf	OpenTimer2@config,w,c
  7133  00261A  0BFB               	andlw	251
  7134  00261C  6ECA               	movwf	4042,c	;volatile
  7135  00261E  0E00               	movlw	0
  7136  002620  6ECC               	movwf	4044,c	;volatile
  7137  002622  929E               	bcf	3998,1,c	;volatile
  7138  002624  AE1E               	btfss	OpenTimer2@config,7,c
  7139  002626  D002               	goto	l764
  7140  002628  829D               	bsf	3997,1,c	;volatile
  7141  00262A  D001               	goto	l765
  7142  00262C                     l764:
  7143  00262C  929D               	bcf	3997,1,c	;volatile
  7144  00262E                     l765:
  7145  00262E  84CA               	bsf	4042,2,c	;volatile
  7146  002630  0012               	return		;funcret
  7147  002632                     __end_of_OpenTimer2:
  7148                           	opt stack 0
  7149                           tblptru	equ	0xFF8
  7150                           tblptrh	equ	0xFF7
  7151                           tblptrl	equ	0xFF6
  7152                           tablat	equ	0xFF5
  7153                           prodh	equ	0xFF4
  7154                           prodl	equ	0xFF3
  7155                           intcon	equ	0xFF2
  7156                           postinc0	equ	0xFEE
  7157                           wreg	equ	0xFE8
  7158                           indf1	equ	0xFE7
  7159                           postdec1	equ	0xFE5
  7160                           fsr1h	equ	0xFE2
  7161                           fsr1l	equ	0xFE1
  7162                           indf2	equ	0xFDF
  7163                           fsr2h	equ	0xFDA
  7164                           fsr2l	equ	0xFD9
  7165                           status	equ	0xFD8
  7166                           
  7167 ;; *************** function _OpenEPWM1 *****************
  7168 ;; Defined at:
  7169 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;  period          1    wreg     unsigned char 
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;  period          1   29[COMRAM] unsigned char 
  7174 ;; Return value:  Size  Location     Type
  7175 ;;		None               void
  7176 ;; Registers used:
  7177 ;;		wreg, status,2
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7183 ;;      Params:         0       0       0       0
  7184 ;;      Locals:         1       0       0       0
  7185 ;;      Temps:          0       0       0       0
  7186 ;;      Totals:         1       0       0       0
  7187 ;;Total ram usage:        1 bytes
  7188 ;; Hardware stack levels used:    1
  7189 ;; Hardware stack levels required when called:    2
  7190 ;; This function calls:
  7191 ;;		Nothing
  7192 ;; This function is called by:
  7193 ;;		_main
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           	psect	text17
  7198  00265A                     __ptext17:
  7199                           	opt stack 0
  7200  00265A                     _OpenEPWM1:
  7201                           	opt stack 28
  7202                           
  7203                           ;incstack = 0
  7204                           ;OpenEPWM1@period stored from wreg
  7205  00265A  6E1E               	movwf	OpenEPWM1@period,c
  7206  00265C  0E0C               	movlw	12
  7207  00265E  6EBA               	movwf	4026,c	;volatile
  7208  002660  94CA               	bcf	4042,2,c	;volatile
  7209  002662  C01E  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  7210  002666  84CA               	bsf	4042,2,c	;volatile
  7211  002668  0012               	return		;funcret
  7212  00266A                     __end_of_OpenEPWM1:
  7213                           	opt stack 0
  7214                           tblptru	equ	0xFF8
  7215                           tblptrh	equ	0xFF7
  7216                           tblptrl	equ	0xFF6
  7217                           tablat	equ	0xFF5
  7218                           prodh	equ	0xFF4
  7219                           prodl	equ	0xFF3
  7220                           intcon	equ	0xFF2
  7221                           postinc0	equ	0xFEE
  7222                           wreg	equ	0xFE8
  7223                           indf1	equ	0xFE7
  7224                           postdec1	equ	0xFE5
  7225                           fsr1h	equ	0xFE2
  7226                           fsr1l	equ	0xFE1
  7227                           indf2	equ	0xFDF
  7228                           fsr2h	equ	0xFDA
  7229                           fsr2l	equ	0xFD9
  7230                           status	equ	0xFD8
  7231                           
  7232 ;; *************** function _CANisTXwarningON *****************
  7233 ;; Defined at:
  7234 ;;		line 1119 in file "CANlib.h"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;		None
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;		None
  7239 ;; Return value:  Size  Location     Type
  7240 ;;                  1    wreg      unsigned char 
  7241 ;; Registers used:
  7242 ;;		wreg
  7243 ;; Tracked objects:
  7244 ;;		On entry : 0/0
  7245 ;;		On exit  : 0/0
  7246 ;;		Unchanged: 0/0
  7247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7248 ;;      Params:         0       0       0       0
  7249 ;;      Locals:         0       0       0       0
  7250 ;;      Temps:          0       0       0       0
  7251 ;;      Totals:         0       0       0       0
  7252 ;;Total ram usage:        0 bytes
  7253 ;; Hardware stack levels used:    1
  7254 ;; Hardware stack levels required when called:    2
  7255 ;; This function calls:
  7256 ;;		Nothing
  7257 ;; This function is called by:
  7258 ;;		_main
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text18
  7263  00266A                     __ptext18:
  7264                           	opt stack 0
  7265  00266A                     _CANisTXwarningON:
  7266                           	opt stack 28
  7267                           
  7268                           ;CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7269                           
  7270                           ;incstack = 0
  7271  00266A  A474               	btfss	3956,2,c	;volatile
  7272  00266C  D002               	goto	u4120
  7273  00266E  0E01               	movlw	1
  7274  002670  0012               	return	
  7275  002672                     u4120:
  7276  002672  0E00               	movlw	0
  7277  002674  0012               	return	
  7278  002676                     __end_of_CANisTXwarningON:
  7279                           	opt stack 0
  7280                           tblptru	equ	0xFF8
  7281                           tblptrh	equ	0xFF7
  7282                           tblptrl	equ	0xFF6
  7283                           tablat	equ	0xFF5
  7284                           prodh	equ	0xFF4
  7285                           prodl	equ	0xFF3
  7286                           intcon	equ	0xFF2
  7287                           postinc0	equ	0xFEE
  7288                           wreg	equ	0xFE8
  7289                           indf1	equ	0xFE7
  7290                           postdec1	equ	0xFE5
  7291                           fsr1h	equ	0xFE2
  7292                           fsr1l	equ	0xFE1
  7293                           indf2	equ	0xFDF
  7294                           fsr2h	equ	0xFDA
  7295                           fsr2l	equ	0xFD9
  7296                           status	equ	0xFD8
  7297                           
  7298 ;; *************** function _CANisRXwarningON *****************
  7299 ;; Defined at:
  7300 ;;		line 1127 in file "CANlib.h"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;		None
  7303 ;; Auto vars:     Size  Location     Type
  7304 ;;		None
  7305 ;; Return value:  Size  Location     Type
  7306 ;;                  1    wreg      unsigned char 
  7307 ;; Registers used:
  7308 ;;		wreg
  7309 ;; Tracked objects:
  7310 ;;		On entry : 0/0
  7311 ;;		On exit  : 0/0
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7314 ;;      Params:         0       0       0       0
  7315 ;;      Locals:         0       0       0       0
  7316 ;;      Temps:          0       0       0       0
  7317 ;;      Totals:         0       0       0       0
  7318 ;;Total ram usage:        0 bytes
  7319 ;; Hardware stack levels used:    1
  7320 ;; Hardware stack levels required when called:    2
  7321 ;; This function calls:
  7322 ;;		Nothing
  7323 ;; This function is called by:
  7324 ;;		_main
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           	psect	text19
  7329  002676                     __ptext19:
  7330                           	opt stack 0
  7331  002676                     _CANisRXwarningON:
  7332                           	opt stack 28
  7333                           
  7334                           ;CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7335                           
  7336                           ;incstack = 0
  7337  002676  A274               	btfss	3956,1,c	;volatile
  7338  002678  D002               	goto	u4130
  7339  00267A  0E01               	movlw	1
  7340  00267C  0012               	return	
  7341  00267E                     u4130:
  7342  00267E  0E00               	movlw	0
  7343  002680  0012               	return	
  7344  002682                     __end_of_CANisRXwarningON:
  7345                           	opt stack 0
  7346                           tblptru	equ	0xFF8
  7347                           tblptrh	equ	0xFF7
  7348                           tblptrl	equ	0xFF6
  7349                           tablat	equ	0xFF5
  7350                           prodh	equ	0xFF4
  7351                           prodl	equ	0xFF3
  7352                           intcon	equ	0xFF2
  7353                           postinc0	equ	0xFEE
  7354                           wreg	equ	0xFE8
  7355                           indf1	equ	0xFE7
  7356                           postdec1	equ	0xFE5
  7357                           fsr1h	equ	0xFE2
  7358                           fsr1l	equ	0xFE1
  7359                           indf2	equ	0xFDF
  7360                           fsr2h	equ	0xFDA
  7361                           fsr2l	equ	0xFD9
  7362                           status	equ	0xFD8
  7363                           
  7364 ;; *************** function _ISR_bassa *****************
  7365 ;; Defined at:
  7366 ;;		line 90 in file "motore.c"
  7367 ;; Parameters:    Size  Location     Type
  7368 ;;		None
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;		None
  7371 ;; Return value:  Size  Location     Type
  7372 ;;		None               void
  7373 ;; Registers used:
  7374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7375 ;; Tracked objects:
  7376 ;;		On entry : 0/0
  7377 ;;		On exit  : 0/0
  7378 ;;		Unchanged: 0/0
  7379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7380 ;;      Params:         0       0       0       0
  7381 ;;      Locals:         0       0       0       0
  7382 ;;      Temps:         17       0       0       0
  7383 ;;      Totals:        17       0       0       0
  7384 ;;Total ram usage:       17 bytes
  7385 ;; Hardware stack levels used:    1
  7386 ;; Hardware stack levels required when called:    1
  7387 ;; This function calls:
  7388 ;;		_CANisRxReady
  7389 ;;		_CANreceiveMessage
  7390 ;;		i1_SetOutputEPWM1
  7391 ;; This function is called by:
  7392 ;;		Interrupt level 1
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           	psect	intcodelo
  7397  000018                     __pintcodelo:
  7398                           	opt stack 0
  7399  000018                     _ISR_bassa:
  7400                           	opt stack 26
  7401                           
  7402                           ;incstack = 0
  7403  000018  8042               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7404  00001A  CFD8 F00D          	movff	status,??_ISR_bassa
  7405  00001E  CFE8 F00E          	movff	wreg,??_ISR_bassa+1
  7406  000022  CFE0 F00F          	movff	bsr,??_ISR_bassa+2
  7407  000026  CFFA F010          	movff	pclath,??_ISR_bassa+3
  7408  00002A  CFFB F011          	movff	pclatu,??_ISR_bassa+4
  7409  00002E  CFE9 F012          	movff	fsr0l,??_ISR_bassa+5
  7410  000032  CFEA F013          	movff	fsr0h,??_ISR_bassa+6
  7411  000036  CFE1 F014          	movff	fsr1l,??_ISR_bassa+7
  7412  00003A  CFE2 F015          	movff	fsr1h,??_ISR_bassa+8
  7413  00003E  CFD9 F016          	movff	fsr2l,??_ISR_bassa+9
  7414  000042  CFDA F017          	movff	fsr2h,??_ISR_bassa+10
  7415  000046  CFF3 F018          	movff	prodl,??_ISR_bassa+11
  7416  00004A  CFF4 F019          	movff	prodh,??_ISR_bassa+12
  7417  00004E  CFF6 F01A          	movff	tblptrl,??_ISR_bassa+13
  7418  000052  CFF7 F01B          	movff	tblptrh,??_ISR_bassa+14
  7419  000056  CFF8 F01C          	movff	tblptru,??_ISR_bassa+15
  7420  00005A  CFF5 F01D          	movff	tablat,??_ISR_bassa+16
  7421                           
  7422                           ;motore.c: 91: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7423  00005E  A0A4               	btfss	4004,0,c	;volatile
  7424  000060  B2A4               	btfsc	4004,1,c	;volatile
  7425  000062  D001               	goto	i1l3812
  7426  000064  D068               	goto	i1l650
  7427  000066                     i1l3812:
  7428                           
  7429                           ;motore.c: 96: if (CANisRxReady()) {
  7430  000066  EC19  F013         	call	_CANisRxReady	;wreg free
  7431  00006A  0900               	iorlw	0
  7432  00006C  B4D8               	btfsc	status,2,c
  7433  00006E  D061               	goto	i1l653
  7434                           
  7435                           ;motore.c: 97: CANreceiveMessage(&msg);
  7436  000070  0E86               	movlw	low _msg
  7437  000072  6E01               	movwf	CANreceiveMessage@msg,c
  7438  000074  0E00               	movlw	high _msg
  7439  000076  6E02               	movwf	CANreceiveMessage@msg+1,c
  7440  000078  ECAB  F009         	call	_CANreceiveMessage	;wreg free
  7441                           
  7442                           ;motore.c: 102: if (msg.identifier == 0b00000000000000000000000000011) {
  7443  00007C  0E03               	movlw	3
  7444  00007E  0100               	movlb	0	; () banked
  7445  000080  1986               	xorwf	_msg& (0+255),w,b
  7446  000082  0100               	movlb	0	; () banked
  7447  000084  1187               	iorwf	(_msg+1)& (0+255),w,b
  7448  000086  0100               	movlb	0	; () banked
  7449  000088  1188               	iorwf	(_msg+2)& (0+255),w,b
  7450  00008A  0100               	movlb	0	; () banked
  7451  00008C  1189               	iorwf	(_msg+3)& (0+255),w,b
  7452  00008E  A4D8               	btfss	status,2,c
  7453  000090  D017               	goto	i1l3828
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;motore.c: 104: requestSpeed = msg.data[0];
  7457  000092  C08A  F036         	movff	_msg+4,_requestSpeed	;volatile
  7458                           
  7459                           ;motore.c: 105: dir = msg.data[1];
  7460  000096  C08B  F03A         	movff	_msg+5,_dir	;volatile
  7461  00009A  6A3B               	clrf	_dir+1,c	;volatile
  7462                           
  7463                           ; BSR set to: 0
  7464                           ;motore.c: 106: if (dir == 1) {
  7465  00009C  043A               	decf	_dir,w,c	;volatile
  7466  00009E  103B               	iorwf	_dir+1,w,c	;volatile
  7467  0000A0  A4D8               	btfss	status,2,c
  7468  0000A2  D005               	goto	i1l3824
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;motore.c: 107: SetOutputEPWM1(0b01111111, 0b11111100);
  7472  0000A4  0EFC               	movlw	252
  7473  0000A6  6E01               	movwf	i1SetOutputEPWM1@outputmode,c
  7474  0000A8  0E7F               	movlw	127
  7475  0000AA  EC74  F012         	call	i1_SetOutputEPWM1
  7476  0000AE                     i1l3824:
  7477                           
  7478                           ;motore.c: 108: }
  7479                           ;motore.c: 109: if (dir == 0) {
  7480  0000AE  503A               	movf	_dir,w,c	;volatile
  7481  0000B0  103B               	iorwf	_dir+1,w,c	;volatile
  7482  0000B2  A4D8               	btfss	status,2,c
  7483  0000B4  D005               	goto	i1l3828
  7484                           
  7485                           ;motore.c: 110: SetOutputEPWM1(0b11111111, 0b11111100);
  7486  0000B6  0EFC               	movlw	252
  7487  0000B8  6E01               	movwf	i1SetOutputEPWM1@outputmode,c
  7488  0000BA  0EFF               	movlw	255
  7489  0000BC  EC74  F012         	call	i1_SetOutputEPWM1
  7490  0000C0                     i1l3828:
  7491                           
  7492                           ;motore.c: 111: }
  7493                           ;motore.c: 115: }
  7494                           ;motore.c: 116: if (msg.identifier == 0b00000000000000000000000000001) {
  7495  0000C0  0100               	movlb	0	; () banked
  7496  0000C2  0586               	decf	_msg& (0+255),w,b
  7497  0000C4  0100               	movlb	0	; () banked
  7498  0000C6  1187               	iorwf	(_msg+1)& (0+255),w,b
  7499  0000C8  0100               	movlb	0	; () banked
  7500  0000CA  1188               	iorwf	(_msg+2)& (0+255),w,b
  7501  0000CC  0100               	movlb	0	; () banked
  7502  0000CE  1189               	iorwf	(_msg+3)& (0+255),w,b
  7503  0000D0  A4D8               	btfss	status,2,c
  7504  0000D2  D003               	goto	i1l3834
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;motore.c: 117: requestSpeed = 0;
  7508  0000D4  0E00               	movlw	0
  7509  0000D6  6E36               	movwf	_requestSpeed,c	;volatile
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;motore.c: 118: PORTAbits.RA1 = 1;
  7513  0000D8  8280               	bsf	3968,1,c	;volatile
  7514  0000DA                     i1l3834:
  7515                           
  7516                           ; BSR set to: 0
  7517                           ;motore.c: 119: }
  7518                           ;motore.c: 120: if (msg.identifier == 0b00000000000000000000000000110) {
  7519  0000DA  0E06               	movlw	6
  7520  0000DC  0100               	movlb	0	; () banked
  7521  0000DE  1986               	xorwf	_msg& (0+255),w,b
  7522  0000E0  0100               	movlb	0	; () banked
  7523  0000E2  1187               	iorwf	(_msg+1)& (0+255),w,b
  7524  0000E4  0100               	movlb	0	; () banked
  7525  0000E6  1188               	iorwf	(_msg+2)& (0+255),w,b
  7526  0000E8  0100               	movlb	0	; () banked
  7527  0000EA  1189               	iorwf	(_msg+3)& (0+255),w,b
  7528  0000EC  A4D8               	btfss	status,2,c
  7529  0000EE  D005               	goto	i1l3838
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;motore.c: 122: left_speed = msg.data[0];
  7533  0000F0  C08A  F035         	movff	_msg+4,_left_speed
  7534                           
  7535                           ;motore.c: 123: right_speed = msg.data[1];
  7536  0000F4  C08B  F037         	movff	_msg+5,_right_speed
  7537                           
  7538                           ;motore.c: 124: speed_fetched = 1;
  7539  0000F8  8039               	bsf	_speed_fetched/(0+8),_speed_fetched& (0+7),c
  7540  0000FA                     i1l3838:
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;motore.c: 126: }
  7544                           ;motore.c: 127: if (msg.identifier == 0b00000000000000000000000000010) {
  7545  0000FA  0E02               	movlw	2
  7546  0000FC  0100               	movlb	0	; () banked
  7547  0000FE  1986               	xorwf	_msg& (0+255),w,b
  7548  000100  0100               	movlb	0	; () banked
  7549  000102  1187               	iorwf	(_msg+1)& (0+255),w,b
  7550  000104  0100               	movlb	0	; () banked
  7551  000106  1188               	iorwf	(_msg+2)& (0+255),w,b
  7552  000108  0100               	movlb	0	; () banked
  7553  00010A  1189               	iorwf	(_msg+3)& (0+255),w,b
  7554  00010C  B4D8               	btfsc	status,2,c
  7555  00010E  D006               	goto	i1l3844
  7556  000110  D010               	goto	i1l653
  7557  000112                     i1l661:
  7558                           
  7559                           ; BSR set to: 0
  7560  000112  8238               	bsf	_centralina_abs/(0+8),_centralina_abs& (0+7),c
  7561                           
  7562                           ;motore.c: 130: break;
  7563  000114  D00E               	goto	i1l653
  7564  000116                     i1l663:
  7565                           
  7566                           ; BSR set to: 0
  7567  000116  8638               	bsf	_centralina_sterzo/(0+8),_centralina_sterzo& (0+7),c
  7568  000118                     i1l664:
  7569                           
  7570                           ; BSR set to: 0
  7571  000118  8438               	bsf	_centralina_comando/(0+8),_centralina_comando& (0+7),c
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;motore.c: 136: }
  7575                           
  7576                           ;motore.c: 135: break;
  7577  00011A  D00B               	goto	i1l653
  7578  00011C                     i1l3844:
  7579                           
  7580                           ; BSR set to: 0
  7581  00011C  0100               	movlb	0	; () banked
  7582  00011E  518A               	movf	(_msg+4)& (0+255),w,b
  7583                           
  7584                           ; Switch size 1, requested type "space"
  7585                           ; Number of cases is 3, Range of values is 1 to 3
  7586                           ; switch strategies available:
  7587                           ; Name         Instructions Cycles
  7588                           ; simple_byte           10     6 (average)
  7589                           ;	Chosen strategy is simple_byte
  7590  000120  0A01               	xorlw	1	; case 1
  7591  000122  B4D8               	btfsc	status,2,c
  7592  000124  D7F6               	goto	i1l661
  7593  000126  0A03               	xorlw	3	; case 2
  7594  000128  B4D8               	btfsc	status,2,c
  7595  00012A  D7F5               	goto	i1l663
  7596  00012C  0A01               	xorlw	1	; case 3
  7597  00012E  B4D8               	btfsc	status,2,c
  7598  000130  D7F3               	goto	i1l664
  7599  000132                     i1l653:
  7600                           
  7601                           ;motore.c: 138: }
  7602                           ;motore.c: 139: }
  7603                           ;motore.c: 140: PIR3bits.RXB0IF = 0;
  7604  000132  90A4               	bcf	4004,0,c	;volatile
  7605                           
  7606                           ;motore.c: 141: PIR3bits.RXB1IF = 0;
  7607  000134  92A4               	bcf	4004,1,c	;volatile
  7608  000136                     i1l650:
  7609                           
  7610                           ;motore.c: 142: }
  7611                           ;motore.c: 143: if (PIR2bits.TMR3IF) {
  7612  000136  A2A1               	btfss	4001,1,c	;volatile
  7613  000138  D00B               	goto	i1l666
  7614                           
  7615                           ;motore.c: 144: timeCounter++;
  7616  00013A  0E01               	movlw	1
  7617  00013C  2629               	addwf	_timeCounter,f,c
  7618  00013E  0E00               	movlw	0
  7619  000140  222A               	addwfc	_timeCounter+1,f,c
  7620  000142  222B               	addwfc	_timeCounter+2,f,c
  7621  000144  222C               	addwfc	_timeCounter+3,f,c
  7622                           
  7623                           ;motore.c: 145: TMR3H = 0x63;
  7624  000146  0E63               	movlw	99
  7625  000148  6EB3               	movwf	4019,c	;volatile
  7626                           
  7627                           ;motore.c: 146: TMR3L = 0xC0;
  7628  00014A  0EC0               	movlw	192
  7629  00014C  6EB2               	movwf	4018,c	;volatile
  7630                           
  7631                           ;motore.c: 147: PIR2bits.TMR3IF = 0;
  7632  00014E  92A1               	bcf	4001,1,c	;volatile
  7633  000150                     i1l666:
  7634  000150  C01D  FFF5         	movff	??_ISR_bassa+16,tablat
  7635  000154  C01C  FFF8         	movff	??_ISR_bassa+15,tblptru
  7636  000158  C01B  FFF7         	movff	??_ISR_bassa+14,tblptrh
  7637  00015C  C01A  FFF6         	movff	??_ISR_bassa+13,tblptrl
  7638  000160  C019  FFF4         	movff	??_ISR_bassa+12,prodh
  7639  000164  C018  FFF3         	movff	??_ISR_bassa+11,prodl
  7640  000168  C017  FFDA         	movff	??_ISR_bassa+10,fsr2h
  7641  00016C  C016  FFD9         	movff	??_ISR_bassa+9,fsr2l
  7642  000170  C015  FFE2         	movff	??_ISR_bassa+8,fsr1h
  7643  000174  C014  FFE1         	movff	??_ISR_bassa+7,fsr1l
  7644  000178  C013  FFEA         	movff	??_ISR_bassa+6,fsr0h
  7645  00017C  C012  FFE9         	movff	??_ISR_bassa+5,fsr0l
  7646  000180  C011  FFFB         	movff	??_ISR_bassa+4,pclatu
  7647  000184  C010  FFFA         	movff	??_ISR_bassa+3,pclath
  7648  000188  C00F  FFE0         	movff	??_ISR_bassa+2,bsr
  7649  00018C  C00E  FFE8         	movff	??_ISR_bassa+1,wreg
  7650  000190  C00D  FFD8         	movff	??_ISR_bassa,status
  7651  000194  9042               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7652  000196  0010               	retfie	
  7653  000198                     __end_of_ISR_bassa:
  7654                           	opt stack 0
  7655                           pclatu	equ	0xFFB
  7656                           pclath	equ	0xFFA
  7657                           tblptru	equ	0xFF8
  7658                           tblptrh	equ	0xFF7
  7659                           tblptrl	equ	0xFF6
  7660                           tablat	equ	0xFF5
  7661                           prodh	equ	0xFF4
  7662                           prodl	equ	0xFF3
  7663                           intcon	equ	0xFF2
  7664                           postinc0	equ	0xFEE
  7665                           fsr0h	equ	0xFEA
  7666                           fsr0l	equ	0xFE9
  7667                           wreg	equ	0xFE8
  7668                           indf1	equ	0xFE7
  7669                           postdec1	equ	0xFE5
  7670                           fsr1h	equ	0xFE2
  7671                           fsr1l	equ	0xFE1
  7672                           bsr	equ	0xFE0
  7673                           indf2	equ	0xFDF
  7674                           fsr2h	equ	0xFDA
  7675                           fsr2l	equ	0xFD9
  7676                           status	equ	0xFD8
  7677                           
  7678 ;; *************** function i1_SetOutputEPWM1 *****************
  7679 ;; Defined at:
  7680 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  7681 ;; Parameters:    Size  Location     Type
  7682 ;;  outputconfig    1    wreg     unsigned char 
  7683 ;;  outputmode      1    0[COMRAM] unsigned char 
  7684 ;; Auto vars:     Size  Location     Type
  7685 ;;  outputconfig    1    1[COMRAM] unsigned char 
  7686 ;; Return value:  Size  Location     Type
  7687 ;;		None               void
  7688 ;; Registers used:
  7689 ;;		wreg, status,2, status,0
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 0/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7695 ;;      Params:         1       0       0       0
  7696 ;;      Locals:         1       0       0       0
  7697 ;;      Temps:          0       0       0       0
  7698 ;;      Totals:         2       0       0       0
  7699 ;;Total ram usage:        2 bytes
  7700 ;; Hardware stack levels used:    1
  7701 ;; This function calls:
  7702 ;;		Nothing
  7703 ;; This function is called by:
  7704 ;;		_ISR_bassa
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708                           	psect	text21
  7709  0024E8                     __ptext21:
  7710                           	opt stack 0
  7711  0024E8                     i1_SetOutputEPWM1:
  7712                           	opt stack 26
  7713                           
  7714                           ;incstack = 0
  7715                           ;i1SetOutputEPWM1@outputconfig stored from wreg
  7716  0024E8  6E02               	movwf	i1SetOutputEPWM1@outputconfig,c
  7717  0024EA  50BA               	movf	4026,w,c	;volatile
  7718  0024EC  09C0               	iorlw	192
  7719  0024EE  1402               	andwf	i1SetOutputEPWM1@outputconfig,w,c
  7720  0024F0  6EBA               	movwf	4026,c	;volatile
  7721  0024F2  50BA               	movf	4026,w,c	;volatile
  7722  0024F4  090F               	iorlw	15
  7723  0024F6  1401               	andwf	i1SetOutputEPWM1@outputmode,w,c
  7724  0024F8  6EBA               	movwf	4026,c	;volatile
  7725  0024FA  0E3F               	movlw	63
  7726  0024FC  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  7727  0024FE  A4D8               	btfss	status,2,c
  7728  002500  D002               	goto	i1l3792
  7729  002502  9895               	bcf	3989,4,c	;volatile
  7730  002504  0012               	return	
  7731  002506                     i1l3792:
  7732  002506  0EBF               	movlw	191
  7733  002508  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  7734  00250A  A4D8               	btfss	status,2,c
  7735  00250C  D003               	goto	i1l3796
  7736  00250E  9895               	bcf	3989,4,c	;volatile
  7737  002510  9A95               	bcf	3989,5,c	;volatile
  7738  002512  0012               	return	
  7739  002514                     i1l3796:
  7740  002514  0E7F               	movlw	127
  7741  002516  1802               	xorwf	i1SetOutputEPWM1@outputconfig,w,c
  7742  002518  B4D8               	btfsc	status,2,c
  7743  00251A  D003               	goto	i1l750
  7744  00251C  2802               	incf	i1SetOutputEPWM1@outputconfig,w,c
  7745  00251E  A4D8               	btfss	status,2,c
  7746  002520  0012               	return	
  7747  002522                     i1l750:
  7748  002522  9895               	bcf	3989,4,c	;volatile
  7749  002524  9A95               	bcf	3989,5,c	;volatile
  7750  002526  9C95               	bcf	3989,6,c	;volatile
  7751  002528  9E95               	bcf	3989,7,c	;volatile
  7752  00252A  0012               	return	
  7753  00252C                     __end_ofi1_SetOutputEPWM1:
  7754                           	opt stack 0
  7755                           pclatu	equ	0xFFB
  7756                           pclath	equ	0xFFA
  7757                           tblptru	equ	0xFF8
  7758                           tblptrh	equ	0xFF7
  7759                           tblptrl	equ	0xFF6
  7760                           tablat	equ	0xFF5
  7761                           prodh	equ	0xFF4
  7762                           prodl	equ	0xFF3
  7763                           intcon	equ	0xFF2
  7764                           postinc0	equ	0xFEE
  7765                           fsr0h	equ	0xFEA
  7766                           fsr0l	equ	0xFE9
  7767                           wreg	equ	0xFE8
  7768                           indf1	equ	0xFE7
  7769                           postdec1	equ	0xFE5
  7770                           fsr1h	equ	0xFE2
  7771                           fsr1l	equ	0xFE1
  7772                           bsr	equ	0xFE0
  7773                           indf2	equ	0xFDF
  7774                           fsr2h	equ	0xFDA
  7775                           fsr2l	equ	0xFD9
  7776                           status	equ	0xFD8
  7777                           
  7778 ;; *************** function _CANreceiveMessage *****************
  7779 ;; Defined at:
  7780 ;;		line 528 in file "CANlib.h"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;  msg             2    0[COMRAM] PTR struct .
  7783 ;;		 -> msg(15), 
  7784 ;; Auto vars:     Size  Location     Type
  7785 ;;  tamp            1   11[COMRAM] unsigned char 
  7786 ;;  error           1   10[COMRAM] unsigned char 
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  1    wreg      unsigned char 
  7789 ;; Registers used:
  7790 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7796 ;;      Params:         2       0       0       0
  7797 ;;      Locals:         2       0       0       0
  7798 ;;      Temps:          8       0       0       0
  7799 ;;      Totals:        12       0       0       0
  7800 ;;Total ram usage:       12 bytes
  7801 ;; Hardware stack levels used:    1
  7802 ;; This function calls:
  7803 ;;		Nothing
  7804 ;; This function is called by:
  7805 ;;		_ISR_bassa
  7806 ;; This function uses a non-reentrant model
  7807 ;;
  7808                           
  7809                           	psect	text22
  7810  001356                     __ptext22:
  7811                           	opt stack 0
  7812  001356                     _CANreceiveMessage:
  7813                           	opt stack 26
  7814                           
  7815                           ;CANlib.h: 530: BYTE tamp;
  7816                           ;CANlib.h: 531: BYTE error = 0;
  7817                           
  7818                           ;incstack = 0
  7819  001356  0E00               	movlw	0
  7820  001358  6E0B               	movwf	CANreceiveMessage@error,c
  7821                           
  7822                           ;CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7823  00135A  BE74               	btfsc	3956,7,c	;volatile
  7824                           
  7825                           ;CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7826  00135C  800B               	bsf	CANreceiveMessage@error,0,c
  7827                           
  7828                           ;CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7829  00135E  BC74               	btfsc	3956,6,c	;volatile
  7830                           
  7831                           ;CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7832  001360  820B               	bsf	CANreceiveMessage@error,1,c
  7833                           
  7834                           ;CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7835  001362  010F               	movlb	15	; () banked
  7836  001364  AF50               	btfss	80,7,b	;volatile
  7837  001366  D143               	goto	i1l410
  7838                           
  7839                           ; BSR set to: 15
  7840                           ;CANlib.h: 541: {
  7841                           ;CANlib.h: 542: msg->identifier = 0;
  7842  001368  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7843  00136C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7844  001370  6ADE               	clrf	postinc2,c
  7845  001372  6ADE               	clrf	postinc2,c
  7846  001374  6ADE               	clrf	postinc2,c
  7847  001376  6ADD               	clrf	postdec2,c
  7848                           
  7849                           ; BSR set to: 15
  7850                           ;CANlib.h: 543: msg->data[0] =RXB1D0;
  7851  001378  EE20 F004          	lfsr	2,4
  7852  00137C  5001               	movf	CANreceiveMessage@msg,w,c
  7853  00137E  26D9               	addwf	fsr2l,f,c
  7854  001380  5002               	movf	CANreceiveMessage@msg+1,w,c
  7855  001382  22DA               	addwfc	fsr2h,f,c
  7856  001384  CF56 FFDF          	movff	3926,indf2	;volatile
  7857                           
  7858                           ; BSR set to: 15
  7859                           ;CANlib.h: 544: msg->data[1] =RXB1D1;
  7860  001388  EE20 F005          	lfsr	2,5
  7861  00138C  5001               	movf	CANreceiveMessage@msg,w,c
  7862  00138E  26D9               	addwf	fsr2l,f,c
  7863  001390  5002               	movf	CANreceiveMessage@msg+1,w,c
  7864  001392  22DA               	addwfc	fsr2h,f,c
  7865  001394  CF57 FFDF          	movff	3927,indf2	;volatile
  7866                           
  7867                           ; BSR set to: 15
  7868                           ;CANlib.h: 545: msg->data[2] =RXB1D2;
  7869  001398  EE20 F006          	lfsr	2,6
  7870  00139C  5001               	movf	CANreceiveMessage@msg,w,c
  7871  00139E  26D9               	addwf	fsr2l,f,c
  7872  0013A0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7873  0013A2  22DA               	addwfc	fsr2h,f,c
  7874  0013A4  CF58 FFDF          	movff	3928,indf2	;volatile
  7875                           
  7876                           ; BSR set to: 15
  7877                           ;CANlib.h: 546: msg->data[3] =RXB1D3;
  7878  0013A8  EE20 F007          	lfsr	2,7
  7879  0013AC  5001               	movf	CANreceiveMessage@msg,w,c
  7880  0013AE  26D9               	addwf	fsr2l,f,c
  7881  0013B0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7882  0013B2  22DA               	addwfc	fsr2h,f,c
  7883  0013B4  CF59 FFDF          	movff	3929,indf2	;volatile
  7884                           
  7885                           ; BSR set to: 15
  7886                           ;CANlib.h: 547: msg->data[4] =RXB1D4;
  7887  0013B8  EE20 F008          	lfsr	2,8
  7888  0013BC  5001               	movf	CANreceiveMessage@msg,w,c
  7889  0013BE  26D9               	addwf	fsr2l,f,c
  7890  0013C0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7891  0013C2  22DA               	addwfc	fsr2h,f,c
  7892  0013C4  CF5A FFDF          	movff	3930,indf2	;volatile
  7893                           
  7894                           ; BSR set to: 15
  7895                           ;CANlib.h: 548: msg->data[5] =RXB1D5;
  7896  0013C8  EE20 F009          	lfsr	2,9
  7897  0013CC  5001               	movf	CANreceiveMessage@msg,w,c
  7898  0013CE  26D9               	addwf	fsr2l,f,c
  7899  0013D0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7900  0013D2  22DA               	addwfc	fsr2h,f,c
  7901  0013D4  CF5B FFDF          	movff	3931,indf2	;volatile
  7902                           
  7903                           ; BSR set to: 15
  7904                           ;CANlib.h: 549: msg->data[6] =RXB1D6;
  7905  0013D8  EE20 F00A          	lfsr	2,10
  7906  0013DC  5001               	movf	CANreceiveMessage@msg,w,c
  7907  0013DE  26D9               	addwf	fsr2l,f,c
  7908  0013E0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7909  0013E2  22DA               	addwfc	fsr2h,f,c
  7910  0013E4  CF5C FFDF          	movff	3932,indf2	;volatile
  7911                           
  7912                           ; BSR set to: 15
  7913                           ;CANlib.h: 550: msg->data[7] =RXB1D7;
  7914  0013E8  EE20 F00B          	lfsr	2,11
  7915  0013EC  5001               	movf	CANreceiveMessage@msg,w,c
  7916  0013EE  26D9               	addwf	fsr2l,f,c
  7917  0013F0  5002               	movf	CANreceiveMessage@msg+1,w,c
  7918  0013F2  22DA               	addwfc	fsr2h,f,c
  7919  0013F4  CF5D FFDF          	movff	3933,indf2	;volatile
  7920                           
  7921                           ; BSR set to: 15
  7922                           ;CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7923  0013F8  EE20 F00E          	lfsr	2,14
  7924  0013FC  5001               	movf	CANreceiveMessage@msg,w,c
  7925  0013FE  26D9               	addwf	fsr2l,f,c
  7926  001400  5002               	movf	CANreceiveMessage@msg+1,w,c
  7927  001402  22DA               	addwfc	fsr2h,f,c
  7928  001404  010F               	movlb	15	; () banked
  7929  001406  AD55               	btfss	85,6,b	;volatile
  7930  001408  D002               	goto	i1u391_20
  7931  00140A  0E01               	movlw	1
  7932  00140C  D001               	goto	i1u391_26
  7933  00140E                     i1u391_20:
  7934  00140E  0E00               	movlw	0
  7935  001410                     i1u391_26:
  7936  001410  6EDF               	movwf	indf2,c
  7937                           
  7938                           ; BSR set to: 15
  7939                           ;CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7940  001412  EE20 F00D          	lfsr	2,13
  7941  001416  5001               	movf	CANreceiveMessage@msg,w,c
  7942  001418  26D9               	addwf	fsr2l,f,c
  7943  00141A  5002               	movf	CANreceiveMessage@msg+1,w,c
  7944  00141C  22DA               	addwfc	fsr2h,f,c
  7945  00141E  010F               	movlb	15	; () banked
  7946  001420  5155               	movf	85,w,b	;volatile
  7947  001422  0B0F               	andlw	15
  7948  001424  6EDF               	movwf	indf2,c
  7949                           
  7950                           ; BSR set to: 15
  7951                           ;CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7952  001426  EE20 F00C          	lfsr	2,12
  7953  00142A  5001               	movf	CANreceiveMessage@msg,w,c
  7954  00142C  26D9               	addwf	fsr2l,f,c
  7955  00142E  5002               	movf	CANreceiveMessage@msg+1,w,c
  7956  001430  22DA               	addwfc	fsr2h,f,c
  7957  001432  010F               	movlb	15	; () banked
  7958  001434  A752               	btfss	82,3,b	;volatile
  7959  001436  D002               	goto	i1u392_20
  7960  001438  0E01               	movlw	1
  7961  00143A  D001               	goto	i1u392_26
  7962  00143C                     i1u392_20:
  7963  00143C  0E00               	movlw	0
  7964  00143E                     i1u392_26:
  7965  00143E  6EDF               	movwf	indf2,c
  7966                           
  7967                           ; BSR set to: 15
  7968                           ;CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7969  001440  010F               	movlb	15	; () banked
  7970  001442  B752               	btfsc	82,3,b	;volatile
  7971  001444  D044               	goto	i1l3510
  7972                           
  7973                           ; BSR set to: 15
  7974                           ;CANlib.h: 559: {
  7975                           ;CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7976  001446  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  7977  00144A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7978  00144C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7979  00144E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7980  001450  0E03               	movlw	3
  7981  001452                     i1u394_25:
  7982  001452  90D8               	bcf	status,0,c
  7983  001454  3603               	rlcf	??_CANreceiveMessage,f,c
  7984  001456  3604               	rlcf	??_CANreceiveMessage+1,f,c
  7985  001458  3605               	rlcf	??_CANreceiveMessage+2,f,c
  7986  00145A  3606               	rlcf	??_CANreceiveMessage+3,f,c
  7987  00145C  2EE8               	decfsz	wreg,f,c
  7988  00145E  D7F9               	goto	i1u394_25
  7989  001460  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7990  001464  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7991  001468  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  7992  00146C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7993  001470  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7994  001474  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7995                           
  7996                           ; BSR set to: 15
  7997                           ;CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7998  001478  010F               	movlb	15	; () banked
  7999  00147A  3952               	swapf	82,w,b	;volatile
  8000  00147C  42E8               	rrncf	wreg,f,c
  8001  00147E  0B07               	andlw	7
  8002  001480  0B07               	andlw	7
  8003  001482  6E0C               	movwf	CANreceiveMessage@tamp,c
  8004                           
  8005                           ; BSR set to: 15
  8006                           ;CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  8007  001484  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8008  001488  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8009  00148C  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8010  001490  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8011  001494  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8012  001498  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8013  00149C  500C               	movf	CANreceiveMessage@tamp,w,c
  8014  00149E  2403               	addwf	??_CANreceiveMessage,w,c
  8015  0014A0  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8016  0014A2  0E00               	movlw	0
  8017  0014A4  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8018  0014A6  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8019  0014A8  0E00               	movlw	0
  8020  0014AA  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8021  0014AC  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8022  0014AE  0E00               	movlw	0
  8023  0014B0  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8024  0014B2  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8025  0014B4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8026  0014B8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8027  0014BC  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8028  0014C0  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8029  0014C4  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8030  0014C8  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8031                           
  8032                           ;CANlib.h: 563: }
  8033  0014CC  D08D               	goto	i1l3536
  8034  0014CE                     i1l3510:
  8035                           
  8036                           ; BSR set to: 15
  8037                           ;CANlib.h: 564: else
  8038                           ;CANlib.h: 565: {
  8039                           ;CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  8040  0014CE  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
  8041  0014D2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8042  0014D4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8043  0014D6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8044  0014D8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8045  0014DC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8046  0014E0  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8047  0014E4  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8048  0014E8  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8049  0014EC  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8050                           
  8051                           ; BSR set to: 15
  8052                           ;CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  8053  0014F0  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
  8054  0014F4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8055  0014F6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8056  0014F8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8057  0014FA  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8058  0014FE  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8059  001502  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8060  001506  6A03               	clrf	??_CANreceiveMessage,c
  8061  001508  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8062  00150C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8063  001510  5003               	movf	??_CANreceiveMessage,w,c
  8064  001512  26DE               	addwf	postinc2,f,c
  8065  001514  5004               	movf	??_CANreceiveMessage+1,w,c
  8066  001516  22DE               	addwfc	postinc2,f,c
  8067  001518  5005               	movf	??_CANreceiveMessage+2,w,c
  8068  00151A  22DE               	addwfc	postinc2,f,c
  8069  00151C  5006               	movf	??_CANreceiveMessage+3,w,c
  8070  00151E  22DE               	addwfc	postinc2,f,c
  8071                           
  8072                           ; BSR set to: 15
  8073                           ;CANlib.h: 569: if (RXB1SIDLbits.EID16)
  8074  001520  010F               	movlb	15	; () banked
  8075  001522  A152               	btfss	82,0,b	;volatile
  8076  001524  D00C               	goto	i1l3518
  8077                           
  8078                           ; BSR set to: 15
  8079                           ;CANlib.h: 570: msg->identifier |= 0x00010000;
  8080  001526  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8081  00152A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8082  00152E  0E00               	movlw	0
  8083  001530  12DE               	iorwf	postinc2,f,c
  8084  001532  0E00               	movlw	0
  8085  001534  12DE               	iorwf	postinc2,f,c
  8086  001536  0E01               	movlw	1
  8087  001538  12DE               	iorwf	postinc2,f,c
  8088  00153A  0E00               	movlw	0
  8089  00153C  12DE               	iorwf	postinc2,f,c
  8090  00153E                     i1l3518:
  8091                           
  8092                           ; BSR set to: 15
  8093                           ;CANlib.h: 571: if (RXB1SIDLbits.EID17)
  8094  00153E  010F               	movlb	15	; () banked
  8095  001540  A352               	btfss	82,1,b	;volatile
  8096  001542  D00C               	goto	i1l3522
  8097                           
  8098                           ; BSR set to: 15
  8099                           ;CANlib.h: 572: msg->identifier |= 0x00020000;
  8100  001544  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8101  001548  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8102  00154C  0E00               	movlw	0
  8103  00154E  12DE               	iorwf	postinc2,f,c
  8104  001550  0E00               	movlw	0
  8105  001552  12DE               	iorwf	postinc2,f,c
  8106  001554  0E02               	movlw	2
  8107  001556  12DE               	iorwf	postinc2,f,c
  8108  001558  0E00               	movlw	0
  8109  00155A  12DE               	iorwf	postinc2,f,c
  8110  00155C                     i1l3522:
  8111                           
  8112                           ; BSR set to: 15
  8113                           ;CANlib.h: 573: if (RXB1SIDLbits.SID0)
  8114  00155C  010F               	movlb	15	; () banked
  8115  00155E  AB52               	btfss	82,5,b	;volatile
  8116  001560  D00C               	goto	i1l3526
  8117                           
  8118                           ; BSR set to: 15
  8119                           ;CANlib.h: 574: msg->identifier |= 0x00040000;
  8120  001562  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8121  001566  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8122  00156A  0E00               	movlw	0
  8123  00156C  12DE               	iorwf	postinc2,f,c
  8124  00156E  0E00               	movlw	0
  8125  001570  12DE               	iorwf	postinc2,f,c
  8126  001572  0E04               	movlw	4
  8127  001574  12DE               	iorwf	postinc2,f,c
  8128  001576  0E00               	movlw	0
  8129  001578  12DE               	iorwf	postinc2,f,c
  8130  00157A                     i1l3526:
  8131                           
  8132                           ; BSR set to: 15
  8133                           ;CANlib.h: 575: if (RXB1SIDLbits.SID1)
  8134  00157A  010F               	movlb	15	; () banked
  8135  00157C  AD52               	btfss	82,6,b	;volatile
  8136  00157E  D00C               	goto	i1l3530
  8137                           
  8138                           ; BSR set to: 15
  8139                           ;CANlib.h: 576: msg->identifier |= 0x00080000;
  8140  001580  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8141  001584  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8142  001588  0E00               	movlw	0
  8143  00158A  12DE               	iorwf	postinc2,f,c
  8144  00158C  0E00               	movlw	0
  8145  00158E  12DE               	iorwf	postinc2,f,c
  8146  001590  0E08               	movlw	8
  8147  001592  12DE               	iorwf	postinc2,f,c
  8148  001594  0E00               	movlw	0
  8149  001596  12DE               	iorwf	postinc2,f,c
  8150  001598                     i1l3530:
  8151                           
  8152                           ; BSR set to: 15
  8153                           ;CANlib.h: 577: if (RXB1SIDLbits.SID2)
  8154  001598  010F               	movlb	15	; () banked
  8155  00159A  AF52               	btfss	82,7,b	;volatile
  8156  00159C  D00C               	goto	i1l3534
  8157                           
  8158                           ; BSR set to: 15
  8159                           ;CANlib.h: 578: msg->identifier |= 0x00100000;
  8160  00159E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8161  0015A2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8162  0015A6  0E00               	movlw	0
  8163  0015A8  12DE               	iorwf	postinc2,f,c
  8164  0015AA  0E00               	movlw	0
  8165  0015AC  12DE               	iorwf	postinc2,f,c
  8166  0015AE  0E10               	movlw	16
  8167  0015B0  12DE               	iorwf	postinc2,f,c
  8168  0015B2  0E00               	movlw	0
  8169  0015B4  12DE               	iorwf	postinc2,f,c
  8170  0015B6                     i1l3534:
  8171                           
  8172                           ; BSR set to: 15
  8173                           ;CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  8174  0015B6  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
  8175  0015BA  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8176  0015BC  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8177  0015BE  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8178  0015C0  0E15               	movlw	21
  8179  0015C2                     i1u400_25:
  8180  0015C2  90D8               	bcf	status,0,c
  8181  0015C4  3603               	rlcf	??_CANreceiveMessage,f,c
  8182  0015C6  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8183  0015C8  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8184  0015CA  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8185  0015CC  2EE8               	decfsz	wreg,f,c
  8186  0015CE  D7F9               	goto	i1u400_25
  8187  0015D0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8188  0015D4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8189  0015D8  5003               	movf	??_CANreceiveMessage,w,c
  8190  0015DA  12DE               	iorwf	postinc2,f,c
  8191  0015DC  5004               	movf	??_CANreceiveMessage+1,w,c
  8192  0015DE  12DE               	iorwf	postinc2,f,c
  8193  0015E0  5005               	movf	??_CANreceiveMessage+2,w,c
  8194  0015E2  12DE               	iorwf	postinc2,f,c
  8195  0015E4  5006               	movf	??_CANreceiveMessage+3,w,c
  8196  0015E6  12DE               	iorwf	postinc2,f,c
  8197  0015E8                     i1l3536:
  8198                           
  8199                           ; BSR set to: 15
  8200                           ;CANlib.h: 581: }
  8201                           ;CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  8202  0015E8  010F               	movlb	15	; () banked
  8203  0015EA  9F50               	bcf	80,7,b	;volatile
  8204                           
  8205                           ; BSR set to: 15
  8206                           ;CANlib.h: 584: return (error);
  8207                           ;	Return value of _CANreceiveMessage is never used
  8208  0015EC  0012               	return	
  8209  0015EE                     i1l410:
  8210                           
  8211                           ; BSR set to: 15
  8212                           ;CANlib.h: 585: }
  8213                           ;CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  8214  0015EE  AE60               	btfss	3936,7,c	;volatile
  8215  0015F0  0012               	return	
  8216                           
  8217                           ; BSR set to: 15
  8218                           ;CANlib.h: 588: {
  8219                           ;CANlib.h: 589: msg->identifier = 0;
  8220  0015F2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8221  0015F6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8222  0015FA  6ADE               	clrf	postinc2,c
  8223  0015FC  6ADE               	clrf	postinc2,c
  8224  0015FE  6ADE               	clrf	postinc2,c
  8225  001600  6ADD               	clrf	postdec2,c
  8226                           
  8227                           ; BSR set to: 15
  8228                           ;CANlib.h: 590: msg->data[0] =RXB0D0;
  8229  001602  EE20 F004          	lfsr	2,4
  8230  001606  5001               	movf	CANreceiveMessage@msg,w,c
  8231  001608  26D9               	addwf	fsr2l,f,c
  8232  00160A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8233  00160C  22DA               	addwfc	fsr2h,f,c
  8234  00160E  CF66 FFDF          	movff	3942,indf2	;volatile
  8235                           
  8236                           ; BSR set to: 15
  8237                           ;CANlib.h: 591: msg->data[1] =RXB0D1;
  8238  001612  EE20 F005          	lfsr	2,5
  8239  001616  5001               	movf	CANreceiveMessage@msg,w,c
  8240  001618  26D9               	addwf	fsr2l,f,c
  8241  00161A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8242  00161C  22DA               	addwfc	fsr2h,f,c
  8243  00161E  CF67 FFDF          	movff	3943,indf2	;volatile
  8244                           
  8245                           ; BSR set to: 15
  8246                           ;CANlib.h: 592: msg->data[2] =RXB0D2;
  8247  001622  EE20 F006          	lfsr	2,6
  8248  001626  5001               	movf	CANreceiveMessage@msg,w,c
  8249  001628  26D9               	addwf	fsr2l,f,c
  8250  00162A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8251  00162C  22DA               	addwfc	fsr2h,f,c
  8252  00162E  CF68 FFDF          	movff	3944,indf2	;volatile
  8253                           
  8254                           ; BSR set to: 15
  8255                           ;CANlib.h: 593: msg->data[3] =RXB0D3;
  8256  001632  EE20 F007          	lfsr	2,7
  8257  001636  5001               	movf	CANreceiveMessage@msg,w,c
  8258  001638  26D9               	addwf	fsr2l,f,c
  8259  00163A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8260  00163C  22DA               	addwfc	fsr2h,f,c
  8261  00163E  CF69 FFDF          	movff	3945,indf2	;volatile
  8262                           
  8263                           ; BSR set to: 15
  8264                           ;CANlib.h: 594: msg->data[4] =RXB0D4;
  8265  001642  EE20 F008          	lfsr	2,8
  8266  001646  5001               	movf	CANreceiveMessage@msg,w,c
  8267  001648  26D9               	addwf	fsr2l,f,c
  8268  00164A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8269  00164C  22DA               	addwfc	fsr2h,f,c
  8270  00164E  CF6A FFDF          	movff	3946,indf2	;volatile
  8271                           
  8272                           ; BSR set to: 15
  8273                           ;CANlib.h: 595: msg->data[5] =RXB0D5;
  8274  001652  EE20 F009          	lfsr	2,9
  8275  001656  5001               	movf	CANreceiveMessage@msg,w,c
  8276  001658  26D9               	addwf	fsr2l,f,c
  8277  00165A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8278  00165C  22DA               	addwfc	fsr2h,f,c
  8279  00165E  CF6B FFDF          	movff	3947,indf2	;volatile
  8280                           
  8281                           ; BSR set to: 15
  8282                           ;CANlib.h: 596: msg->data[6] =RXB0D6;
  8283  001662  EE20 F00A          	lfsr	2,10
  8284  001666  5001               	movf	CANreceiveMessage@msg,w,c
  8285  001668  26D9               	addwf	fsr2l,f,c
  8286  00166A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8287  00166C  22DA               	addwfc	fsr2h,f,c
  8288  00166E  CF6C FFDF          	movff	3948,indf2	;volatile
  8289                           
  8290                           ; BSR set to: 15
  8291                           ;CANlib.h: 597: msg->data[7] =RXB0D7;
  8292  001672  EE20 F00B          	lfsr	2,11
  8293  001676  5001               	movf	CANreceiveMessage@msg,w,c
  8294  001678  26D9               	addwf	fsr2l,f,c
  8295  00167A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8296  00167C  22DA               	addwfc	fsr2h,f,c
  8297  00167E  CF6D FFDF          	movff	3949,indf2	;volatile
  8298                           
  8299                           ; BSR set to: 15
  8300                           ;CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8301  001682  EE20 F00E          	lfsr	2,14
  8302  001686  5001               	movf	CANreceiveMessage@msg,w,c
  8303  001688  26D9               	addwf	fsr2l,f,c
  8304  00168A  5002               	movf	CANreceiveMessage@msg+1,w,c
  8305  00168C  22DA               	addwfc	fsr2h,f,c
  8306  00168E  AC65               	btfss	3941,6,c	;volatile
  8307  001690  D002               	goto	i1u402_20
  8308  001692  0E01               	movlw	1
  8309  001694  D001               	goto	i1u402_26
  8310  001696                     i1u402_20:
  8311  001696  0E00               	movlw	0
  8312  001698                     i1u402_26:
  8313  001698  6EDF               	movwf	indf2,c
  8314                           
  8315                           ; BSR set to: 15
  8316                           ;CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8317  00169A  EE20 F00D          	lfsr	2,13
  8318  00169E  5001               	movf	CANreceiveMessage@msg,w,c
  8319  0016A0  26D9               	addwf	fsr2l,f,c
  8320  0016A2  5002               	movf	CANreceiveMessage@msg+1,w,c
  8321  0016A4  22DA               	addwfc	fsr2h,f,c
  8322  0016A6  5065               	movf	3941,w,c	;volatile
  8323  0016A8  0B0F               	andlw	15
  8324  0016AA  6EDF               	movwf	indf2,c
  8325                           
  8326                           ; BSR set to: 15
  8327                           ;CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8328  0016AC  EE20 F00C          	lfsr	2,12
  8329  0016B0  5001               	movf	CANreceiveMessage@msg,w,c
  8330  0016B2  26D9               	addwf	fsr2l,f,c
  8331  0016B4  5002               	movf	CANreceiveMessage@msg+1,w,c
  8332  0016B6  22DA               	addwfc	fsr2h,f,c
  8333  0016B8  A662               	btfss	3938,3,c	;volatile
  8334  0016BA  D002               	goto	i1u403_20
  8335  0016BC  0E01               	movlw	1
  8336  0016BE  D001               	goto	i1u403_26
  8337  0016C0                     i1u403_20:
  8338  0016C0  0E00               	movlw	0
  8339  0016C2                     i1u403_26:
  8340  0016C2  6EDF               	movwf	indf2,c
  8341                           
  8342                           ; BSR set to: 15
  8343                           ;CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8344  0016C4  B662               	btfsc	3938,3,c	;volatile
  8345  0016C6  D043               	goto	i1l3572
  8346                           
  8347                           ; BSR set to: 15
  8348                           ;CANlib.h: 606: {
  8349                           ;CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8350  0016C8  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8351  0016CC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8352  0016CE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8353  0016D0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8354  0016D2  0E03               	movlw	3
  8355  0016D4                     i1u405_25:
  8356  0016D4  90D8               	bcf	status,0,c
  8357  0016D6  3603               	rlcf	??_CANreceiveMessage,f,c
  8358  0016D8  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8359  0016DA  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8360  0016DC  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8361  0016DE  2EE8               	decfsz	wreg,f,c
  8362  0016E0  D7F9               	goto	i1u405_25
  8363  0016E2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8364  0016E6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8365  0016EA  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8366  0016EE  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8367  0016F2  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8368  0016F6  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8369                           
  8370                           ; BSR set to: 15
  8371                           ;CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8372  0016FA  3862               	swapf	3938,w,c	;volatile
  8373  0016FC  42E8               	rrncf	wreg,f,c
  8374  0016FE  0B07               	andlw	7
  8375  001700  0B07               	andlw	7
  8376  001702  6E0C               	movwf	CANreceiveMessage@tamp,c
  8377                           
  8378                           ; BSR set to: 15
  8379                           ;CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8380  001704  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8381  001708  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8382  00170C  CFDE F003          	movff	postinc2,??_CANreceiveMessage
  8383  001710  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
  8384  001714  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
  8385  001718  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
  8386  00171C  500C               	movf	CANreceiveMessage@tamp,w,c
  8387  00171E  2403               	addwf	??_CANreceiveMessage,w,c
  8388  001720  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8389  001722  0E00               	movlw	0
  8390  001724  2004               	addwfc	??_CANreceiveMessage+1,w,c
  8391  001726  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8392  001728  0E00               	movlw	0
  8393  00172A  2005               	addwfc	??_CANreceiveMessage+2,w,c
  8394  00172C  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8395  00172E  0E00               	movlw	0
  8396  001730  2006               	addwfc	??_CANreceiveMessage+3,w,c
  8397  001732  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8398  001734  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8399  001738  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8400  00173C  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8401  001740  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8402  001744  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8403  001748  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8404                           
  8405                           ;CANlib.h: 610: }
  8406  00174C  D088               	goto	i1l3598
  8407  00174E                     i1l3572:
  8408                           
  8409                           ; BSR set to: 15
  8410                           ;CANlib.h: 611: else
  8411                           ;CANlib.h: 612: {
  8412                           ;CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8413  00174E  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
  8414  001752  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8415  001754  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8416  001756  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8417  001758  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8418  00175C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8419  001760  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
  8420  001764  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8421  001768  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8422  00176C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8423                           
  8424                           ; BSR set to: 15
  8425                           ;CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8426  001770  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
  8427  001774  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8428  001776  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8429  001778  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8430  00177A  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8431  00177E  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8432  001782  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8433  001786  6A03               	clrf	??_CANreceiveMessage,c
  8434  001788  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8435  00178C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8436  001790  5003               	movf	??_CANreceiveMessage,w,c
  8437  001792  26DE               	addwf	postinc2,f,c
  8438  001794  5004               	movf	??_CANreceiveMessage+1,w,c
  8439  001796  22DE               	addwfc	postinc2,f,c
  8440  001798  5005               	movf	??_CANreceiveMessage+2,w,c
  8441  00179A  22DE               	addwfc	postinc2,f,c
  8442  00179C  5006               	movf	??_CANreceiveMessage+3,w,c
  8443  00179E  22DE               	addwfc	postinc2,f,c
  8444                           
  8445                           ; BSR set to: 15
  8446                           ;CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8447  0017A0  A062               	btfss	3938,0,c	;volatile
  8448  0017A2  D00C               	goto	i1l3580
  8449                           
  8450                           ; BSR set to: 15
  8451                           ;CANlib.h: 617: msg->identifier |= 0x00010000;
  8452  0017A4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8453  0017A8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8454  0017AC  0E00               	movlw	0
  8455  0017AE  12DE               	iorwf	postinc2,f,c
  8456  0017B0  0E00               	movlw	0
  8457  0017B2  12DE               	iorwf	postinc2,f,c
  8458  0017B4  0E01               	movlw	1
  8459  0017B6  12DE               	iorwf	postinc2,f,c
  8460  0017B8  0E00               	movlw	0
  8461  0017BA  12DE               	iorwf	postinc2,f,c
  8462  0017BC                     i1l3580:
  8463                           
  8464                           ; BSR set to: 15
  8465                           ;CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8466  0017BC  A262               	btfss	3938,1,c	;volatile
  8467  0017BE  D00C               	goto	i1l3584
  8468                           
  8469                           ; BSR set to: 15
  8470                           ;CANlib.h: 619: msg->identifier |= 0x00020000;
  8471  0017C0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8472  0017C4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8473  0017C8  0E00               	movlw	0
  8474  0017CA  12DE               	iorwf	postinc2,f,c
  8475  0017CC  0E00               	movlw	0
  8476  0017CE  12DE               	iorwf	postinc2,f,c
  8477  0017D0  0E02               	movlw	2
  8478  0017D2  12DE               	iorwf	postinc2,f,c
  8479  0017D4  0E00               	movlw	0
  8480  0017D6  12DE               	iorwf	postinc2,f,c
  8481  0017D8                     i1l3584:
  8482                           
  8483                           ; BSR set to: 15
  8484                           ;CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8485  0017D8  AA62               	btfss	3938,5,c	;volatile
  8486  0017DA  D00C               	goto	i1l3588
  8487                           
  8488                           ; BSR set to: 15
  8489                           ;CANlib.h: 621: msg->identifier |= 0x00040000;
  8490  0017DC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8491  0017E0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8492  0017E4  0E00               	movlw	0
  8493  0017E6  12DE               	iorwf	postinc2,f,c
  8494  0017E8  0E00               	movlw	0
  8495  0017EA  12DE               	iorwf	postinc2,f,c
  8496  0017EC  0E04               	movlw	4
  8497  0017EE  12DE               	iorwf	postinc2,f,c
  8498  0017F0  0E00               	movlw	0
  8499  0017F2  12DE               	iorwf	postinc2,f,c
  8500  0017F4                     i1l3588:
  8501                           
  8502                           ; BSR set to: 15
  8503                           ;CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8504  0017F4  AC62               	btfss	3938,6,c	;volatile
  8505  0017F6  D00C               	goto	i1l3592
  8506                           
  8507                           ; BSR set to: 15
  8508                           ;CANlib.h: 623: msg->identifier |= 0x00080000;
  8509  0017F8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8510  0017FC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8511  001800  0E00               	movlw	0
  8512  001802  12DE               	iorwf	postinc2,f,c
  8513  001804  0E00               	movlw	0
  8514  001806  12DE               	iorwf	postinc2,f,c
  8515  001808  0E08               	movlw	8
  8516  00180A  12DE               	iorwf	postinc2,f,c
  8517  00180C  0E00               	movlw	0
  8518  00180E  12DE               	iorwf	postinc2,f,c
  8519  001810                     i1l3592:
  8520                           
  8521                           ; BSR set to: 15
  8522                           ;CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8523  001810  AE62               	btfss	3938,7,c	;volatile
  8524  001812  D00C               	goto	i1l3596
  8525                           
  8526                           ; BSR set to: 15
  8527                           ;CANlib.h: 625: msg->identifier |= 0x00100000;
  8528  001814  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8529  001818  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8530  00181C  0E00               	movlw	0
  8531  00181E  12DE               	iorwf	postinc2,f,c
  8532  001820  0E00               	movlw	0
  8533  001822  12DE               	iorwf	postinc2,f,c
  8534  001824  0E10               	movlw	16
  8535  001826  12DE               	iorwf	postinc2,f,c
  8536  001828  0E00               	movlw	0
  8537  00182A  12DE               	iorwf	postinc2,f,c
  8538  00182C                     i1l3596:
  8539                           
  8540                           ; BSR set to: 15
  8541                           ;CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8542  00182C  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
  8543  001830  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8544  001832  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8545  001834  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8546  001836  0E15               	movlw	21
  8547  001838                     i1u411_25:
  8548  001838  90D8               	bcf	status,0,c
  8549  00183A  3603               	rlcf	??_CANreceiveMessage,f,c
  8550  00183C  3604               	rlcf	??_CANreceiveMessage+1,f,c
  8551  00183E  3605               	rlcf	??_CANreceiveMessage+2,f,c
  8552  001840  3606               	rlcf	??_CANreceiveMessage+3,f,c
  8553  001842  2EE8               	decfsz	wreg,f,c
  8554  001844  D7F9               	goto	i1u411_25
  8555  001846  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8556  00184A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8557  00184E  5003               	movf	??_CANreceiveMessage,w,c
  8558  001850  12DE               	iorwf	postinc2,f,c
  8559  001852  5004               	movf	??_CANreceiveMessage+1,w,c
  8560  001854  12DE               	iorwf	postinc2,f,c
  8561  001856  5005               	movf	??_CANreceiveMessage+2,w,c
  8562  001858  12DE               	iorwf	postinc2,f,c
  8563  00185A  5006               	movf	??_CANreceiveMessage+3,w,c
  8564  00185C  12DE               	iorwf	postinc2,f,c
  8565  00185E                     i1l3598:
  8566                           
  8567                           ; BSR set to: 15
  8568                           ;CANlib.h: 629: }
  8569                           ;CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8570  00185E  9E60               	bcf	3936,7,c	;volatile
  8571                           
  8572                           ; BSR set to: 15
  8573                           ;CANlib.h: 632: return (error);
  8574                           ;	Return value of _CANreceiveMessage is never used
  8575  001860  0012               	return	
  8576  001862                     __end_of_CANreceiveMessage:
  8577                           	opt stack 0
  8578                           pclatu	equ	0xFFB
  8579                           pclath	equ	0xFFA
  8580                           tblptru	equ	0xFF8
  8581                           tblptrh	equ	0xFF7
  8582                           tblptrl	equ	0xFF6
  8583                           tablat	equ	0xFF5
  8584                           prodh	equ	0xFF4
  8585                           prodl	equ	0xFF3
  8586                           intcon	equ	0xFF2
  8587                           postinc0	equ	0xFEE
  8588                           fsr0h	equ	0xFEA
  8589                           fsr0l	equ	0xFE9
  8590                           wreg	equ	0xFE8
  8591                           indf1	equ	0xFE7
  8592                           postdec1	equ	0xFE5
  8593                           fsr1h	equ	0xFE2
  8594                           fsr1l	equ	0xFE1
  8595                           bsr	equ	0xFE0
  8596                           indf2	equ	0xFDF
  8597                           postinc2	equ	0xFDE
  8598                           postdec2	equ	0xFDD
  8599                           fsr2h	equ	0xFDA
  8600                           fsr2l	equ	0xFD9
  8601                           status	equ	0xFD8
  8602                           
  8603 ;; *************** function _CANisRxReady *****************
  8604 ;; Defined at:
  8605 ;;		line 1163 in file "CANlib.h"
  8606 ;; Parameters:    Size  Location     Type
  8607 ;;		None
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;		None
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  1    wreg      unsigned char 
  8612 ;; Registers used:
  8613 ;;		wreg, status,2
  8614 ;; Tracked objects:
  8615 ;;		On entry : 0/0
  8616 ;;		On exit  : 0/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8619 ;;      Params:         0       0       0       0
  8620 ;;      Locals:         1       0       0       0
  8621 ;;      Temps:          0       0       0       0
  8622 ;;      Totals:         1       0       0       0
  8623 ;;Total ram usage:        1 bytes
  8624 ;; Hardware stack levels used:    1
  8625 ;; This function calls:
  8626 ;;		Nothing
  8627 ;; This function is called by:
  8628 ;;		_ISR_bassa
  8629 ;; This function uses a non-reentrant model
  8630 ;;
  8631                           
  8632                           	psect	text23
  8633  002632                     __ptext23:
  8634                           	opt stack 0
  8635  002632                     _CANisRxReady:
  8636                           	opt stack 26
  8637                           
  8638                           ;CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8639                           
  8640                           ; BSR set to: 15
  8641                           ;incstack = 0
  8642  002632  0E01               	movlw	1
  8643  002634  6E01               	movwf	_CANisRxReady$2995,c
  8644  002636  BE60               	btfsc	3936,7,c	;volatile
  8645  002638  D005               	goto	i1l561
  8646  00263A  010F               	movlb	15	; () banked
  8647  00263C  BF50               	btfsc	80,7,b	;volatile
  8648  00263E  D002               	goto	i1l561
  8649                           
  8650                           ; BSR set to: 15
  8651  002640  0E00               	movlw	0
  8652  002642  6E01               	movwf	_CANisRxReady$2995,c
  8653  002644                     i1l561:
  8654  002644  5001               	movf	_CANisRxReady$2995,w,c
  8655  002646  0012               	return	
  8656  002648                     __end_of_CANisRxReady:
  8657                           	opt stack 0
  8658  0000                     pclatu	equ	0xFFB
  8659                           pclath	equ	0xFFA
  8660                           tblptru	equ	0xFF8
  8661                           tblptrh	equ	0xFF7
  8662                           tblptrl	equ	0xFF6
  8663                           tablat	equ	0xFF5
  8664                           prodh	equ	0xFF4
  8665                           prodl	equ	0xFF3
  8666                           intcon	equ	0xFF2
  8667                           postinc0	equ	0xFEE
  8668                           fsr0h	equ	0xFEA
  8669                           fsr0l	equ	0xFE9
  8670                           wreg	equ	0xFE8
  8671                           indf1	equ	0xFE7
  8672                           postdec1	equ	0xFE5
  8673                           fsr1h	equ	0xFE2
  8674                           fsr1l	equ	0xFE1
  8675                           bsr	equ	0xFE0
  8676                           indf2	equ	0xFDF
  8677                           postinc2	equ	0xFDE
  8678                           postdec2	equ	0xFDD
  8679                           fsr2h	equ	0xFDA
  8680                           fsr2l	equ	0xFD9
  8681                           status	equ	0xFD8
  8682                           pclatu	equ	0xFFB
  8683                           pclath	equ	0xFFA
  8684                           tblptru	equ	0xFF8
  8685                           tblptrh	equ	0xFF7
  8686                           tblptrl	equ	0xFF6
  8687                           tablat	equ	0xFF5
  8688                           prodh	equ	0xFF4
  8689                           prodl	equ	0xFF3
  8690                           intcon	equ	0xFF2
  8691                           postinc0	equ	0xFEE
  8692                           fsr0h	equ	0xFEA
  8693                           fsr0l	equ	0xFE9
  8694                           wreg	equ	0xFE8
  8695                           indf1	equ	0xFE7
  8696                           postdec1	equ	0xFE5
  8697                           fsr1h	equ	0xFE2
  8698                           fsr1l	equ	0xFE1
  8699                           bsr	equ	0xFE0
  8700                           indf2	equ	0xFDF
  8701                           postinc2	equ	0xFDE
  8702                           postdec2	equ	0xFDD
  8703                           fsr2h	equ	0xFDA
  8704                           fsr2l	equ	0xFD9
  8705                           status	equ	0xFD8
  8706                           
  8707                           	psect	rparam
  8708  0000                     pclatu	equ	0xFFB
  8709                           pclath	equ	0xFFA
  8710                           tblptru	equ	0xFF8
  8711                           tblptrh	equ	0xFF7
  8712                           tblptrl	equ	0xFF6
  8713                           tablat	equ	0xFF5
  8714                           prodh	equ	0xFF4
  8715                           prodl	equ	0xFF3
  8716                           intcon	equ	0xFF2
  8717                           postinc0	equ	0xFEE
  8718                           fsr0h	equ	0xFEA
  8719                           fsr0l	equ	0xFE9
  8720                           wreg	equ	0xFE8
  8721                           indf1	equ	0xFE7
  8722                           postdec1	equ	0xFE5
  8723                           fsr1h	equ	0xFE2
  8724                           fsr1l	equ	0xFE1
  8725                           bsr	equ	0xFE0
  8726                           indf2	equ	0xFDF
  8727                           postinc2	equ	0xFDE
  8728                           postdec2	equ	0xFDD
  8729                           fsr2h	equ	0xFDA
  8730                           fsr2l	equ	0xFD9
  8731                           status	equ	0xFD8
  8732                           
  8733                           	psect	temp
  8734  000042                     btemp:
  8735                           	opt stack 0
  8736  000042                     	ds	1
  8737  0000                     int$flags	set	btemp
  8738                           pclatu	equ	0xFFB
  8739                           pclath	equ	0xFFA
  8740                           tblptru	equ	0xFF8
  8741                           tblptrh	equ	0xFF7
  8742                           tblptrl	equ	0xFF6
  8743                           tablat	equ	0xFF5
  8744                           prodh	equ	0xFF4
  8745                           prodl	equ	0xFF3
  8746                           intcon	equ	0xFF2
  8747                           postinc0	equ	0xFEE
  8748                           fsr0h	equ	0xFEA
  8749                           fsr0l	equ	0xFE9
  8750                           wreg	equ	0xFE8
  8751                           indf1	equ	0xFE7
  8752                           postdec1	equ	0xFE5
  8753                           fsr1h	equ	0xFE2
  8754                           fsr1l	equ	0xFE1
  8755                           bsr	equ	0xFE0
  8756                           indf2	equ	0xFDF
  8757                           postinc2	equ	0xFDE
  8758                           postdec2	equ	0xFDD
  8759                           fsr2h	equ	0xFDA
  8760                           fsr2l	equ	0xFD9
  8761                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      65
    BANK0           160     29     106
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK0[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_array1(BANK0[8]), data_array(BANK0[8]), data_array_debug(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_SetDCEPWM1
    _main->___wmul
    _send_data->_CANsendMessage
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->___wmul
    ___wmul->___awdiv
    _abs->___wmul

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _configurazione_iniziale->_CANInitialize
    _delay_ms->___wmul
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask
    _battery_measure->_CANsendMessage
    ___wmul->___awdiv
    _abs->___wmul

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   29973
                                             35 COMRAM     1     1      0
                                             21 BANK0      8     8      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___awdiv
                             ___wmul
                                _abs
                    _battery_measure
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            1     1      0    4751
                                             33 COMRAM     1     1      0
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    9966
                      _CANInitialize
                     _SetOutputEPWM1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2    1418
                                              8 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _SetOutputEPWM1                                       2     1      1     336
                                             29 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    8212
                                              9 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1788
                                             29 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    5364
                                             29 COMRAM     5     0      5
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _battery_measure                                      0     0      0    6530
                       _CANisTxReady
                     _CANsendMessage
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     848
                                             33 COMRAM     2     2      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1061
                                             29 COMRAM     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    4597
                                             29 COMRAM     4     4      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _abs                                                  4     2      2     170
                                              8 BANK0      4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SetDCEPWM1                                           6     4      2     196
                                             29 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      44
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      22
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           17    17      0    1345
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
                   i1_SetOutputEPWM1
 ---------------------------------------------------------------------------------
 (5) i1_SetOutputEPWM1                                     2     1      1     184
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   ___awdiv
   ___wmul
     ___awdiv (ARG)
   _abs
     ___wmul (ARG)
       ___awdiv (ARG)
   _battery_measure
     _CANisTxReady
     _CANsendMessage
     ___awdiv
     ___wmul
       ___awdiv (ARG)
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
     _SetOutputEPWM1
     _delay_ms
       ___wmul
         ___awdiv (ARG)
   _delay_ms
     ___wmul
       ___awdiv (ARG)
   _send_data
     _CANisTxReady
     _CANsendMessage

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage
   i1_SetOutputEPWM1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1D      6A       4       66.3%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     24      41       1       69.1%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AB       9        0.0%
DATA                 0      0      AB      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Jan 31 21:11:27 2016

              ??_CANisTXwarningON 001E              __end_of_CANSetFilter 0BE2  
                    ___awdiv@sign 00AE                                _id 0025  
                              bsr 000FE0               ___wmul@multiplicand 00B3  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 24A4  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000                       __CFG_LVP$ON 000000  
            _previousTimeCounter1 007C              _previousTimeCounter2 0080  
                             l402 12A2                               l403 12A6  
                             l404 12B2                               l500 096E  
                             l501 0972                               l510 0A6A  
                             l502 097C                               l511 0A74  
                             l503 0980                               l520 0B6C  
                             l512 0A78                               l504 098A  
                             l440 1E88                               l432 1E50  
                             l521 0B70                               l513 0A82  
                             l433 1E54                               l370 0CA0  
                             l522 0B7A                               l514 0A86  
                             l450 1F80                               l434 1E5E  
                             l363 0E5E                               l523 0B7E  
                             l515 0A90                               l507 0A58  
                             l451 1F8A                               l443 1F52  
                             l435 1E62                               l380 0E78  
                             l364 0BF8                               l524 0B88  
                             l508 0A5C                               l444 1F56  
                             l436 1E6C                               l381 0F6C  
                             l373 0DAA                               l365 0BFC  
                             l525 0B8C                               l509 0A66  
                             l445 1F60                               l437 1E70  
                             l701 2200                               l390 1036  
                             l382 0EFE                               l374 0DAE  
                             l366 0CF0                               l710 23D0  
                             l526 0B96                               l518 0B5E  
                             l470 0670                               l446 1F64  
                             l438 1E7A                               l358 208A  
                             l383 0F08                               l375 0DBA  
                             l367 0C82                               l519 0B62  
                             l471 067A                               l463 0642  
                             l447 1F6E                               l439 1E7E  
                             l359 2094                               l384 0F12  
                             l368 0C8C                               l480 0770  
                             l464 0646                               l448 1F72  
                             l704 2280                               l393 10F0  
                             l385 0F1C                               l369 0C96  
                             l713 2456                               l481 0774  
                             l465 0650                               l449 1F7C  
                             l705 227E                               l394 10F4  
                             l378 10DA                               l490 086C  
                             l482 077E                               l474 0746  
                             l466 0654                               l395 11E8  
                             l379 0E74                               l491 0876  
                             l475 074A                               l467 065E  
                             l556 2612                               l396 117A  
                             l388 1026                               l492 087A  
                             l476 0754                               l468 0662  
                             l397 1184                               l389 102A  
                             l493 0884                               l485 084C  
                             l477 0758                               l469 066C  
                             l398 118E                               l486 0850  
                             l478 0762                               l750 24DE  
                             l399 1198                               l487 085A  
                             l479 0766                               l671 1AC6  
                             l816 25EE                               l496 0952  
                             l488 085E                               l672 1AB6  
                             l497 0956                               l489 0868  
                             l569 2590                               l681 1B2A  
                             l498 0960                               l499 0964  
                             l683 1B02                               l764 262C  
                             l765 262E                               l677 1ABE  
                             l669 18B2                               l688 1BDE  
                             l699 2258                      __CFG_CPB$OFF 000000  
                             _PR2 000FCB                      __CFG_CPD$OFF 000000  
                             _id1 0074                               _abs 25CC  
                             _dir 003A                               _msg 0086  
                             prod 000FF3                               wreg 000FE8  
                    __CFG_WDT$OFF 000000                              ?_abs 00B5  
                            l4012 1DD2                              l4112 02FE  
                            l4130 03AE                              l4212 067E  
                            l4044 1ED2                              l4070 1F8E  
                            l4038 1E8C                              l3414 24C2  
                            l4320 09D4                              l4314 098E  
                            l4218 06C4                              l3418 24D0  
                            l4252 07C8                              l4148 045E  
                            l4246 0782                              l4166 050E  
                            l4094 0250                              l4504 0DBE  
                            l4280 0888                              l4184 05BE  
                            l4440 20E4                              l4432 2082  
                            l4354 0ADA                              l4434 2098  
                            l4348 0A94                              l4630 11A2  
                            l4702 2376                              l4382 0B9A  
                            l4286 08CE                              l4438 20A0  
                            l4704 2380                              l4650 1296  
                            l4554 0F26                              l4722 23C4  
                            l4714 23A4                              l4706 2384  
                            l4580 103A                              l4574 101A  
                            l4478 0CAA                              l4718 23B0  
                            l4656 12B6                              l4840 221C  
                            l4832 21C4                              l4498 0D9E  
                            l4690 234A                              l4842 2220  
                            l4836 21F4                              l4940 1AEE  
                            l4678 2584                              l4846 2228  
                            l4934 1AE2                              l4696 235C  
                            l4928 1A94                              l4866 241A  
                            l3978 264E                              l4962 1BC6  
                            l4954 1B2C                              l4938 1AEA  
                            l3996 1D26                              l4974 1BEE  
                            l4976 1BFE                              _LATA 000F89  
                            _LATB 000F8A                              _LATC 000F8B  
                            _LATD 000F8C                              _LATE 000F8D  
                            u4120 2672                              u4130 267E  
                            u5100 0492                              u5020 0332  
                            u5105 0486                              u5025 0326  
                            u5115 04EA                              u5035 038A  
                            u6020 11C0                              u5140 0542  
                            u5060 03E2                              u6030 120A  
                            u5310 07A2                              u5230 069E  
                            u4175 2536                              u6200 221A  
                            u6025 11B6                              u5145 0536  
                            u5065 03D6                              u6035 1200  
                            u5315 0796                              u5235 0692  
                            u5155 059A                              u5075 043A  
                            u4700 1CAA                              u6045 126A  
                            u6310 1916                              u4705 1C9E  
                            u6250 2266                              u6330 1950  
                            u4715 1D02                              u4740 1D56  
                            u6420 1B92                              u6340 1A26  
                            u5630 0BBA                              u5550 0AB4  
                            u5470 09AE                              u5390 08A8  
                            u4910 1FAE                              u4830 1EAC  
                            u6350 1A64                              u6336 1952  
                            u4745 1D4A                              u6265 2268  
                            u5635 0BAE                              u5555 0AA8  
                            u5475 09A2                              u5395 089C  
                            u4915 1FA2                              u4835 1EA0  
                            u4755 1DAE                              u5900 0F8E  
                            u4940 01D4                              u5760 0CC8  
                            u6480 1C62                              u5905 0F84  
                            u4945 01C8                              u5770 0D12  
                            u5915 0FEE                              u4955 022C  
                            u4980 0282                              u5765 0CBE  
                            u5775 0D08                              u5785 0D72  
                            u4985 0276                              u6497 2586  
                            u5890 0F44                              u4995 02DA  
                            u5895 0F3A                              _TMR2 000FCC  
             __size_of_CANSetMask 035E                              abs@a 00B5  
                            _main 1862                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 0042  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 0198  
                   __CFG_IESO$OFF 000000                     __CFG_MCLRE$ON 000000  
                    ___param_bank 000010                  _CANOperationMode 2648  
          __end_of_SetOutputEPWM1 24E8                             ??_abs 00B7  
      __size_of_CANreceiveMessage 050C                             ?_main 0001  
                 __end_of___awdiv 23CE                   ___awdiv@divisor 0020  
                           _T2CON 000FCA                             _T3CON 000FB1  
                           i1l410 15EE                             i1l561 2644  
                           i1l650 0136                             i1l661 0112  
                           i1l653 0132                             i1l750 2522  
                           i1l663 0116                             i1l664 0118  
                           i1l666 0150                   ___awdiv@counter 00AD  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                 _CANisRxReady$2995 0001  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                __size_of_ISR_bassa 0180  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                CANInitialize@flags 00BA  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                           _vBatt 0033                    __pbitbssCOMRAM 01C0  
            __end_of_CANisRxReady 2648         __size_ofi1_SetOutputEPWM1 0044  
                           tablat 000FF5              __end_of_CANisTxReady 2616  
                           status 000FD8                    __CFG_PBADEN$ON 000000  
                      _SetDCEPWM1 252C                   __initialization 245A  
        __size_of_battery_measure 008C                      __end_of_main 1C78  
                 ?_SetOutputEPWM1 001E                            ??_main 00C2  
                   __activetblptr 000002                 _CANisTxReady$2993 001E  
                   _counter_array 0060                            _CANCON 000F6F  
                          _ADRESH 000FC4                  ___awdiv@dividend 001E  
                 __CFG_BBSIZ$1024 000000                            i1l3510 14CE  
                          i1l3530 1598                            i1l3522 155C  
                          i1l3534 15B6                            i1l3526 157A  
                          i1l3518 153E                            i1l3536 15E8  
                          i1l3580 17BC                            i1l3572 174E  
                          i1l3812 0066                            i1l3592 1810  
                          i1l3584 17D8                            i1l3824 00AE  
                          i1l3834 00DA                            i1l3596 182C  
                          i1l3588 17F4                            i1l3844 011C  
                          i1l3828 00C0                            i1l3598 185E  
                          i1l3838 00FA                            i1l3792 2506  
                      _OpenTimer2 2616                            i1l3796 2514  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 00B1                CANsendMessage@tamp 00B5  
                __end_of_delay_ms 259A             __size_of_CANSetFilter 0A46  
                  __CFG_XINST$OFF 000000                __size_of_OpenEPWM1 0010  
               __end_of_ISR_bassa 0198                            ___wmul 259A  
                       ??___awdiv 0022                    __CFG_STVREN$ON 000000  
                    ??_CANSetMask 00AD                            _errore 0031  
                OpenTimer2@config 001E                            clear_0 2460  
                          clear_1 2470                  ___awdiv@quotient 00AF  
        ?_configurazione_iniziale 0001                   __CFG_BOREN$BOHW 000000  
                    __pdataCOMRAM 003A                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                    _CANSetFilter 019C                        __accesstop 0060  
         __end_of__initialization 2496                __end_of_CANSetMask 1FD6  
                   ___rparam_used 000001         __size_of_CANisRXwarningON 000C  
                     ?_SetDCEPWM1 001E                    __pcstackCOMRAM 0001  
               ??_battery_measure 0024             CANSetFilter@numBuffer 00B1  
                 OpenEPWM1@period 001E         __size_of_CANisTXwarningON 000C  
           __size_of_CANisRxReady 0016             __size_of_CANisTxReady 001E  
               __end_of_OpenEPWM1 266A          __end_of_CANOperationMode 265A  
                i1_SetOutputEPWM1 24E8                        __pbssBANK0 0060  
                     ?_OpenTimer2 0001                        _data_array 0095  
         __size_of_CANsendMessage 0774                           ?___wmul 00B1  
              __size_of_send_data 00FC                      _CANisRxReady 2632  
                         _ECCPR1L 000FBB                           _CANSTAT 000F6E  
                    _CANisTxReady 25F8                           _BRGCON1 000F70  
                         _BRGCON2 000F71                           _BRGCON3 000F72  
          __size_of_CANInitialize 01B2                         ?_delay_ms 00B5  
                         _RXB0DLC 000F65                           _RXB1DLC 000F55  
                         _RXB0CON 000F60               __size_of_SetDCEPWM1 003A  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 00B4                  _data_array_debug 00A5  
        SetOutputEPWM1@outputmode 001E                        _correzione 002F  
                ??_SetOutputEPWM1 001F                           __Hparam 0000  
                      _left_speed 0035                           __Lparam 0000  
                delay_ms@value_ms 00B5                           ___awdiv 2332  
                 __size_of___wmul 0032              CANInitialize@propSeg 00BF  
                         __pcinit 245A                           __ramtop 0300  
             __size_of_OpenTimer2 001C                           __ptext0 1862  
                         __ptext1 2188                           __ptext2 2284  
                         __ptext3 2566                           __ptext4 24A4  
                         __ptext5 1FD6                           __ptext6 1C78  
                         __ptext7 019C                           __ptext8 2648  
                         __ptext9 23CE                           _counter 0070  
                       _T2CONbits 000FCA                      __size_of_abs 002C  
      i1SetOutputEPWM1@outputmode 0001                        _duty_cycle 0084  
                      ??_delay_ms 0024            CANreceiveMessage@error 000B  
            end_of_initialization 2496                 __end_of_send_data 2284  
                   __Lmediumconst 0000                  _CANisRXwarningON 2676  
                   _CANInitialize 1FD6                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE      i1SetOutputEPWM1@outputconfig 0002  
                       _ISR_bassa 0018                         _PORTAbits 000F80  
                  CANSetMask@mask 001E                         _PORTCbits 000F82  
                  CANSetMask@tamp 00B2                    _centralina_abs 01C1  
                  CANSetMask@type 0022                  _CANisTXwarningON 266A  
                       _TRISDbits 000F95  __size_of_configurazione_iniziale 00AE  
             _previousTimeCounter 0078           _clock_counter_reference 002D  
                  _CANsendMessage 0BE2                  CANInitialize@BRP 00B9  
                CANInitialize@SJW 00B8                    ?_CANInitialize 00B6  
                      main@period 0024                      ??_SetDCEPWM1 0020  
                 _battery_measure 23CE                        ?_ISR_bassa 0001  
        __end_ofi1_SetOutputEPWM1 252C                    __end_of___wmul 25CC  
                   __pidataCOMRAM 2682               start_initialization 245A  
                     __end_of_abs 25F8                __end_of_SetDCEPWM1 2566  
             CANSetMask@numBuffer 00B1            __end_of_CANsendMessage 1356  
               ?_CANOperationMode 0001                      ??_OpenTimer2 001E  
                       _OpenEPWM1 265A                ??_CANOperationMode 001E  
      CANInitialize@FilterConfig1 00C0        CANInitialize@FilterConfig2 00C1  
                        ??___wmul 0022                  __CFG_LPT1OSC$OFF 000000  
              __end_of_OpenTimer2 2632            CANInitialize@phaseSeg1 00B6  
          CANInitialize@phaseSeg2 00B7                       __pbssCOMRAM 0025  
                   __pcstackBANK0 00AD                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72                       _data_array1 009D  
             SetDCEPWM1@dutycycle 001E                 __size_of_delay_ms 0034  
                 ?_CANsendMessage 00AD                        ?_OpenEPWM1 0001  
         __end_of_battery_measure 245A                   ??_CANInitialize 00BB  
                       _can_retry 01C0                      _currentSpeed 0040  
              CANSetFilter@filter 001E                          ?___awdiv 001E  
                     ??_ISR_bassa 000D                       __pintcodelo 0018  
                      send_data@i 0022                          _ECCP1CON 000FBA  
        __end_of_CANisRXwarningON 2682                       _COMSTATbits 000F74  
      SetOutputEPWM1@outputconfig 001F                     _remote_frame1 01C6  
         _configurazione_iniziale 2284                      _message_sent 01C4  
           CANreceiveMessage@tamp 000C                    ___wmul@product 0022  
                        _IPR2bits 000FA2      _delay_quartz_frequency_value 0041  
                        _PIE1bits 000F9D                          _IPR3bits 000FA5  
                        _PIE2bits 000FA0                         _send_data 2188  
                        _PIE3bits 000FA3          __end_of_CANisTXwarningON 2676  
                        i1u400_25 15C2                          i1u402_20 1696  
                        i1u402_26 1698                          i1u403_20 16C0  
                        i1u411_25 1838                          i1u403_26 16C2  
                        i1u405_25 16D4                          i1u391_20 140E  
                        i1u391_26 1410                          i1u392_20 143C  
                        i1u392_26 143E                          i1u394_25 1452  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          _RXB0EIDH 000F63  
                        _RXB0EIDL 000F64                          _RXB1EIDH 000F53  
                        _RXB1EIDL 000F54                          _RCONbits 000FD0  
                __CFG_WDTPS$32768 000000                          _RXB0SIDH 000F61  
                        _RXB0SIDL 000F62                          _RXF0EIDH 000F02  
                        _RXB1SIDH 000F51                          _RXF0EIDL 000F03  
                        _RXB1SIDL 000F52                          _RXF1EIDH 000F06  
                        _RXF1EIDL 000F07                          _RXF2EIDH 000F0A  
                        _RXF2EIDL 000F0B                          _RXF3EIDH 000F0E  
                        _RXF3EIDL 000F0F                          _RXF4EIDH 000F12  
                        _RXF4EIDL 000F13                          _RXF5EIDH 000F16  
                        _RXF5EIDL 000F17                          _RXF0SIDH 000F00  
                        _RXF0SIDL 000F01                          _TXB0EIDH 000F43  
                        _RXF1SIDH 000F04                          _TXB0EIDL 000F44  
                        _RXF1SIDL 000F05                          _TXB1EIDH 000F33  
                        _RXF2SIDH 000F08                          _TXB1EIDL 000F34  
                        _RXF2SIDL 000F09                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
                        _TXERRCNT 000F76                        _ADCON0bits 000FC2  
                      _ADCON1bits 000FC1                        _ADCON2bits 000FC0  
               ___wmul@multiplier 00B1                     ?_CANSetFilter 001E  
                       copy_data0 248A                        _CANCONbits 000F6F  
                     ??_OpenEPWM1 001E                  ?_battery_measure 0001  
                      ?_send_data 0001                          __Hrparam 0000  
                    _RXB0SIDLbits 000F62                  SetDCEPWM1@DCycle 0022  
                        __Lrparam 0000                      _RXB1SIDLbits 000F52  
              _centralina_comando 01C2                        _CANSetMask 1C78  
                __size_of___awdiv 009C                 ?i1_SetOutputEPWM1 0001  
         __size_of_SetOutputEPWM1 0044                ??i1_SetOutputEPWM1 0002  
              _currentSpeed_array 0068         ??_configurazione_iniziale 0024  
                    _RXF0SIDLbits 000F01                          _delay_ms 2566  
                    _RXF1SIDLbits 000F05                    ??_CANSetFilter 00AD  
                        __ptext10 259A                          __ptext11 2332  
                        __ptext12 0BE2                          __ptext21 24E8  
                        __ptext13 25F8                          __ptext22 1356  
                        __ptext14 25CC                          __ptext23 2632  
                        __ptext15 252C                          __ptext16 2616  
                        __ptext17 265A                          __ptext18 266A  
                        __ptext19 2676                      _RXF2SIDLbits 000F09  
                    _RXF3SIDLbits 000F0D                      _RXF4SIDLbits 000F11  
                   _speed_fetched 01C8                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 00B3                      _remote_frame 01C5  
                   __size_of_main 0416                          _duty_set 003C  
            CANreceiveMessage@msg 0001                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 0042         __size_of_CANOperationMode 0012  
                   ?_CANisRxReady 0001                     ?_CANisTxReady 0001  
                     _RXB0DLCbits 000F65                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 1356  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                ??_CANsendMessage 001E                      _requestSpeed 0036  
              ?_CANreceiveMessage 0001                      _request_sent 01C7  
        CANsendMessage@identifier 00AD                          intlevel1 0000  
               _centralina_sterzo 01C3                  CANSetFilter@tamp 00B2  
                CANSetFilter@type 0022               ??_CANreceiveMessage 0003  
                     _TXB0DLCbits 000F45                       _right_speed 0037  
                     _TXB1DLCbits 000F35                       _TXB0CONbits 000F40  
                     ??_send_data 0022                       _TXB2DLCbits 000F25  
 __end_of_configurazione_iniziale 2332                       _TXB1CONbits 000F30  
                     _TXB2CONbits 000F20                       _timeCounter 0029  
            CANOperationMode@mode 001E                    ??_CANisRxReady 0001  
                     ?_CANSetMask 001E                    ??_CANisTxReady 001E  
       __end_of_CANreceiveMessage 1862                 ?_CANisRXwarningON 0001  
              ??_CANisRXwarningON 001E                       _previousPwm 003E  
           __end_of_CANInitialize 2188                 ?_CANisTXwarningON 0001  
