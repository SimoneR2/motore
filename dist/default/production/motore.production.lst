

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Dec 06 15:27:52 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4480
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	param0,global,class=BANK0,space=1,delta=1
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  00289E                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _currentSpeed
    49  00289E  01                 	db	1
    50                           
    51                           	psect	idataBANK0
    52  00289F                     __pidataBANK0:
    53                           	opt stack 0
    54                           
    55                           ;initializer for _delay_quartz_frequency_value
    56  00289F  10                 	db	16
    57  0000                     _RXB1CON	set	3920
    58  0000                     _RXB1CONbits	set	3920
    59  0000                     _RXB1D0	set	3926
    60  0000                     _RXB1D1	set	3927
    61  0000                     _RXB1D2	set	3928
    62  0000                     _RXB1D3	set	3929
    63  0000                     _RXB1D4	set	3930
    64  0000                     _RXB1D5	set	3931
    65  0000                     _RXB1D6	set	3932
    66  0000                     _RXB1D7	set	3933
    67  0000                     _RXB1DLC	set	3925
    68  0000                     _RXB1DLCbits	set	3925
    69  0000                     _RXB1EIDH	set	3923
    70  0000                     _RXB1EIDL	set	3924
    71  0000                     _RXB1SIDH	set	3921
    72  0000                     _RXB1SIDL	set	3922
    73  0000                     _RXB1SIDLbits	set	3922
    74  0000                     _RXF0EIDH	set	3842
    75  0000                     _RXF0EIDL	set	3843
    76  0000                     _RXF0SIDH	set	3840
    77  0000                     _RXF0SIDL	set	3841
    78  0000                     _RXF0SIDLbits	set	3841
    79  0000                     _RXF1EIDH	set	3846
    80  0000                     _RXF1EIDL	set	3847
    81  0000                     _RXF1SIDH	set	3844
    82  0000                     _RXF1SIDL	set	3845
    83  0000                     _RXF1SIDLbits	set	3845
    84  0000                     _RXF2EIDH	set	3850
    85  0000                     _RXF2EIDL	set	3851
    86  0000                     _RXF2SIDH	set	3848
    87  0000                     _RXF2SIDL	set	3849
    88  0000                     _RXF2SIDLbits	set	3849
    89  0000                     _RXF3EIDH	set	3854
    90  0000                     _RXF3EIDL	set	3855
    91  0000                     _RXF3SIDH	set	3852
    92  0000                     _RXF3SIDL	set	3853
    93  0000                     _RXF3SIDLbits	set	3853
    94  0000                     _RXF4EIDH	set	3858
    95  0000                     _RXF4EIDL	set	3859
    96  0000                     _RXF4SIDH	set	3856
    97  0000                     _RXF4SIDL	set	3857
    98  0000                     _RXF4SIDLbits	set	3857
    99  0000                     _RXF5EIDH	set	3862
   100  0000                     _RXF5EIDL	set	3863
   101  0000                     _RXF5SIDH	set	3860
   102  0000                     _RXF5SIDL	set	3861
   103  0000                     _RXF5SIDLbits	set	3861
   104  0000                     _RXM0EIDH	set	3866
   105  0000                     _RXM0EIDL	set	3867
   106  0000                     _RXM0SIDH	set	3864
   107  0000                     _RXM0SIDL	set	3865
   108  0000                     _RXM0SIDLbits	set	3865
   109  0000                     _RXM1EIDH	set	3870
   110  0000                     _RXM1EIDL	set	3871
   111  0000                     _RXM1SIDH	set	3868
   112  0000                     _RXM1SIDL	set	3869
   113  0000                     _RXM1SIDLbits	set	3869
   114  0000                     _TXB0CONbits	set	3904
   115  0000                     _TXB0D0	set	3910
   116  0000                     _TXB0D1	set	3911
   117  0000                     _TXB0D2	set	3912
   118  0000                     _TXB0D3	set	3913
   119  0000                     _TXB0D4	set	3914
   120  0000                     _TXB0D5	set	3915
   121  0000                     _TXB0D6	set	3916
   122  0000                     _TXB0D7	set	3917
   123  0000                     _TXB0DLC	set	3909
   124  0000                     _TXB0DLCbits	set	3909
   125  0000                     _TXB0EIDH	set	3907
   126  0000                     _TXB0EIDL	set	3908
   127  0000                     _TXB0SIDH	set	3905
   128  0000                     _TXB0SIDL	set	3906
   129  0000                     _TXB0SIDLbits	set	3906
   130  0000                     _TXB1CONbits	set	3888
   131  0000                     _TXB1D0	set	3894
   132  0000                     _TXB1D1	set	3895
   133  0000                     _TXB1D2	set	3896
   134  0000                     _TXB1D3	set	3897
   135  0000                     _TXB1D4	set	3898
   136  0000                     _TXB1D5	set	3899
   137  0000                     _TXB1D6	set	3900
   138  0000                     _TXB1D7	set	3901
   139  0000                     _TXB1DLC	set	3893
   140  0000                     _TXB1DLCbits	set	3893
   141  0000                     _TXB1EIDH	set	3891
   142  0000                     _TXB1EIDL	set	3892
   143  0000                     _TXB1SIDH	set	3889
   144  0000                     _TXB1SIDL	set	3890
   145  0000                     _TXB1SIDLbits	set	3890
   146  0000                     _TXB2CONbits	set	3872
   147  0000                     _TXB2D0	set	3878
   148  0000                     _TXB2D1	set	3879
   149  0000                     _TXB2D2	set	3880
   150  0000                     _TXB2D3	set	3881
   151  0000                     _TXB2D4	set	3882
   152  0000                     _TXB2D5	set	3883
   153  0000                     _TXB2D6	set	3884
   154  0000                     _TXB2D7	set	3885
   155  0000                     _TXB2DLC	set	3877
   156  0000                     _TXB2DLCbits	set	3877
   157  0000                     _TXB2EIDH	set	3875
   158  0000                     _TXB2EIDL	set	3876
   159  0000                     _TXB2SIDH	set	3873
   160  0000                     _TXB2SIDL	set	3874
   161  0000                     _TXB2SIDLbits	set	3874
   162  0000                     _ADCON1	set	4033
   163  0000                     _BRGCON1	set	3952
   164  0000                     _BRGCON2	set	3953
   165  0000                     _BRGCON2bits	set	3953
   166  0000                     _BRGCON3	set	3954
   167  0000                     _BRGCON3bits	set	3954
   168  0000                     _CANCON	set	3951
   169  0000                     _CANCONbits	set	3951
   170  0000                     _CANSTAT	set	3950
   171  0000                     _COMSTATbits	set	3956
   172  0000                     _ECCP1CON	set	4026
   173  0000                     _ECCPR1L	set	4027
   174  0000                     _INTCON2bits	set	4081
   175  0000                     _INTCONbits	set	4082
   176  0000                     _IPR2bits	set	4002
   177  0000                     _IPR3bits	set	4005
   178  0000                     _LATA	set	3977
   179  0000                     _LATB	set	3978
   180  0000                     _LATC	set	3979
   181  0000                     _LATD	set	3980
   182  0000                     _LATE	set	3981
   183  0000                     _PIE1bits	set	3997
   184  0000                     _PIE2bits	set	4000
   185  0000                     _PIE3bits	set	4003
   186  0000                     _PIR1bits	set	3998
   187  0000                     _PIR2bits	set	4001
   188  0000                     _PIR3bits	set	4004
   189  0000                     _PORTAbits	set	3968
   190  0000                     _PORTD	set	3971
   191  0000                     _PR2	set	4043
   192  0000                     _RCONbits	set	4048
   193  0000                     _RXB0CON	set	3936
   194  0000                     _RXB0CONbits	set	3936
   195  0000                     _RXB0D0	set	3942
   196  0000                     _RXB0D1	set	3943
   197  0000                     _RXB0D2	set	3944
   198  0000                     _RXB0D3	set	3945
   199  0000                     _RXB0D4	set	3946
   200  0000                     _RXB0D5	set	3947
   201  0000                     _RXB0D6	set	3948
   202  0000                     _RXB0D7	set	3949
   203  0000                     _RXB0DLC	set	3941
   204  0000                     _RXB0DLCbits	set	3941
   205  0000                     _RXB0EIDH	set	3939
   206  0000                     _RXB0EIDL	set	3940
   207  0000                     _RXB0SIDH	set	3937
   208  0000                     _RXB0SIDL	set	3938
   209  0000                     _RXB0SIDLbits	set	3938
   210  0000                     _RXERRCNT	set	3957
   211  0000                     _T2CON	set	4042
   212  0000                     _T2CONbits	set	4042
   213  0000                     _T3CON	set	4017
   214  0000                     _TMR2	set	4044
   215  0000                     _TMR3H	set	4019
   216  0000                     _TMR3L	set	4018
   217  0000                     _TRISA	set	3986
   218  0000                     _TRISB	set	3987
   219  0000                     _TRISC	set	3988
   220  0000                     _TRISD	set	3989
   221  0000                     _TRISDbits	set	3989
   222  0000                     _TRISE	set	3990
   223  0000                     _TXERRCNT	set	3958
   224                           
   225                           ; #config settings
   226  0000                     
   227                           	psect	cinit
   228  002692                     __pcinit:
   229                           	opt stack 0
   230  002692                     start_initialization:
   231                           	opt stack 0
   232  002692                     __initialization:
   233                           	opt stack 0
   234                           
   235                           ; Clear objects allocated to BANK0 (31 bytes)
   236  002692  EE00  F099         	lfsr	0,__pbssBANK0
   237  002696  0E1F               	movlw	31
   238  002698                     clear_0:
   239  002698  6AEE               	clrf	postinc0,c
   240  00269A  06E8               	decf	wreg,f,c
   241  00269C  E1FD               	bnz	clear_0
   242                           
   243                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   244  00269E  6A45               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   245                           
   246                           ; Clear objects allocated to COMRAM (39 bytes)
   247  0026A0  EE00  F001         	lfsr	0,__pbssCOMRAM
   248  0026A4  0E27               	movlw	39
   249  0026A6                     clear_1:
   250  0026A6  6AEE               	clrf	postinc0,c
   251  0026A8  06E8               	decf	wreg,f,c
   252  0026AA  E1FD               	bnz	clear_1
   253                           
   254                           ; Initialize objects allocated to BANK0 (1 bytes)
   255                           ; load TBLPTR registers with __pidataBANK0
   256  0026AC  0E9F               	movlw	low __pidataBANK0
   257  0026AE  6EF6               	movwf	tblptrl,c
   258  0026B0  0E28               	movlw	high __pidataBANK0
   259  0026B2  6EF7               	movwf	tblptrh,c
   260  0026B4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   261  0026B6  6EF8               	movwf	tblptru,c
   262  0026B8  0009               	tblrd		*+	;fetch initializer
   263  0026BA  CFF5 F0B8          	movff	tablat,__pdataBANK0
   264                           
   265                           ; Initialize objects allocated to COMRAM (1 bytes)
   266                           ; load TBLPTR registers with __pidataCOMRAM
   267  0026BE  0E9E               	movlw	low __pidataCOMRAM
   268  0026C0  6EF6               	movwf	tblptrl,c
   269  0026C2  0E28               	movlw	high __pidataCOMRAM
   270  0026C4  6EF7               	movwf	tblptrh,c
   271  0026C6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   272  0026C8  6EF8               	movwf	tblptru,c
   273  0026CA  0009               	tblrd		*+	;fetch initializer
   274  0026CC  CFF5 F046          	movff	tablat,__pdataCOMRAM
   275  0026D0                     end_of_initialization:
   276                           	opt stack 0
   277  0026D0                     __end_of__initialization:
   278                           	opt stack 0
   279  0026D0  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   280  0026D2  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   281  0026D4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   282  0026D6  6EF8               	movwf	tblptru,c
   283  0026D8  0100               	movlb	0
   284  0026DA  EF1A  F00A         	goto	_main	;jump to C main() function
   285                           tblptru	equ	0xFF8
   286                           tblptrh	equ	0xFF7
   287                           tblptrl	equ	0xFF6
   288                           tablat	equ	0xFF5
   289                           postinc0	equ	0xFEE
   290                           wreg	equ	0xFE8
   291                           
   292                           	psect	bitbssCOMRAM
   293  000228                     __pbitbssCOMRAM:
   294                           	opt stack 0
   295  000228                     _misura:
   296                           	opt stack 0
   297  000228                     	ds	1
   298  000229                     _remote_frame:
   299                           	opt stack 0
   300  000229                     	ds	1
   301                           tblptru	equ	0xFF8
   302                           tblptrh	equ	0xFF7
   303                           tblptrl	equ	0xFF6
   304                           tablat	equ	0xFF5
   305                           postinc0	equ	0xFEE
   306                           wreg	equ	0xFE8
   307                           
   308                           	psect	bssCOMRAM
   309  000001                     __pbssCOMRAM:
   310                           	opt stack 0
   311  000001                     _counter_array:
   312                           	opt stack 0
   313  000001                     	ds	8
   314  000009                     _counter:
   315                           	opt stack 0
   316  000009                     	ds	4
   317  00000D                     _timeCounter:
   318                           	opt stack 0
   319  00000D                     	ds	4
   320  000011                     _msg:
   321                           	opt stack 0
   322  000011                     	ds	15
   323  000020                     _data_array:
   324                           	opt stack 0
   325  000020                     	ds	8
   326                           tblptru	equ	0xFF8
   327                           tblptrh	equ	0xFF7
   328                           tblptrl	equ	0xFF6
   329                           tablat	equ	0xFF5
   330                           postinc0	equ	0xFEE
   331                           wreg	equ	0xFE8
   332                           
   333                           	psect	dataCOMRAM
   334  000046                     __pdataCOMRAM:
   335                           	opt stack 0
   336  000046                     _currentSpeed:
   337                           	opt stack 0
   338  000046                     	ds	1
   339                           tblptru	equ	0xFF8
   340                           tblptrh	equ	0xFF7
   341                           tblptrl	equ	0xFF6
   342                           tablat	equ	0xFF5
   343                           postinc0	equ	0xFEE
   344                           wreg	equ	0xFE8
   345                           
   346                           	psect	bssBANK0
   347  000099                     __pbssBANK0:
   348                           	opt stack 0
   349  000099                     _currentSpeed_array:
   350                           	opt stack 0
   351  000099                     	ds	8
   352  0000A1                     _id:
   353                           	opt stack 0
   354  0000A1                     	ds	4
   355  0000A5                     _previousTimeCounter:
   356                           	opt stack 0
   357  0000A5                     	ds	4
   358  0000A9                     _previousTimeCounter1:
   359                           	opt stack 0
   360  0000A9                     	ds	4
   361  0000AD                     _clock_counter_reference:
   362                           	opt stack 0
   363  0000AD                     	ds	2
   364  0000AF                     _dir:
   365                           	opt stack 0
   366  0000AF                     	ds	2
   367  0000B1                     _duty_cycle:
   368                           	opt stack 0
   369  0000B1                     	ds	2
   370  0000B3                     _duty_set:
   371                           	opt stack 0
   372  0000B3                     	ds	1
   373  0000B4                     _left_speed:
   374                           	opt stack 0
   375  0000B4                     	ds	1
   376  0000B5                     _previousPwm:
   377                           	opt stack 0
   378  0000B5                     	ds	1
   379  0000B6                     _requestSpeed:
   380                           	opt stack 0
   381  0000B6                     	ds	1
   382  0000B7                     _right_speed:
   383                           	opt stack 0
   384  0000B7                     	ds	1
   385                           tblptru	equ	0xFF8
   386                           tblptrh	equ	0xFF7
   387                           tblptrl	equ	0xFF6
   388                           tablat	equ	0xFF5
   389                           postinc0	equ	0xFEE
   390                           wreg	equ	0xFE8
   391                           
   392                           	psect	dataBANK0
   393  0000B8                     __pdataBANK0:
   394                           	opt stack 0
   395  0000B8                     _delay_quartz_frequency_value:
   396                           	opt stack 0
   397  0000B8                     	ds	1
   398                           tblptru	equ	0xFF8
   399                           tblptrh	equ	0xFF7
   400                           tblptrl	equ	0xFF6
   401                           tablat	equ	0xFF5
   402                           postinc0	equ	0xFEE
   403                           wreg	equ	0xFE8
   404                           
   405                           	psect	cstackBANK0
   406  000060                     __pcstackBANK0:
   407                           	opt stack 0
   408  000060                     ?i2___wmul:
   409                           	opt stack 0
   410  000060                     i2___wmul@multiplier:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x0
   414  000060                     	ds	2
   415  000062                     i2___wmul@multiplicand:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x2
   419  000062                     	ds	2
   420  000064                     i2___wmul@product:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x4
   424  000064                     	ds	2
   425  000066                     i2delay_ms@value_ms:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x6
   429  000066                     	ds	2
   430  000068                     ??_ISR_alta:
   431  000068                     
   432                           ; 0 bytes @ 0x8
   433  000068                     	ds	14
   434  000076                     ?___wmul:
   435                           	opt stack 0
   436  000076                     ?___awdiv:
   437                           	opt stack 0
   438  000076                     CANOperationMode@mode:
   439                           	opt stack 0
   440  000076                     _CANisTxReady$2798:
   441                           	opt stack 0
   442  000076                     OpenEPWM1@period:
   443                           	opt stack 0
   444  000076                     SetOutputEPWM1@outputmode:
   445                           	opt stack 0
   446  000076                     OpenTimer2@config:
   447                           	opt stack 0
   448  000076                     SetDCEPWM1@dutycycle:
   449                           	opt stack 0
   450  000076                     ___wmul@multiplier:
   451                           	opt stack 0
   452  000076                     ___awdiv@dividend:
   453                           	opt stack 0
   454  000076                     CANsendMessage@identifier:
   455                           	opt stack 0
   456  000076                     CANSetMask@mask:
   457                           	opt stack 0
   458  000076                     CANSetFilter@filter:
   459                           	opt stack 0
   460                           
   461                           ; 4 bytes @ 0x16
   462  000076                     	ds	1
   463  000077                     SetOutputEPWM1@outputconfig:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x17
   467  000077                     	ds	1
   468  000078                     ??_SetDCEPWM1:
   469  000078                     ___wmul@multiplicand:
   470                           	opt stack 0
   471  000078                     ___awdiv@divisor:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x18
   475  000078                     	ds	2
   476  00007A                     CANSetMask@type:
   477                           	opt stack 0
   478  00007A                     CANSetFilter@type:
   479                           	opt stack 0
   480  00007A                     ___awdiv@counter:
   481                           	opt stack 0
   482  00007A                     CANsendMessage@data:
   483                           	opt stack 0
   484  00007A                     SetDCEPWM1@DCycle:
   485                           	opt stack 0
   486  00007A                     ___wmul@product:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x1A
   490  00007A                     	ds	1
   491  00007B                     ??_CANSetMask:
   492  00007B                     ??_CANSetFilter:
   493  00007B                     ___awdiv@sign:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x1B
   497  00007B                     	ds	1
   498  00007C                     CANsendMessage@dataLength:
   499                           	opt stack 0
   500  00007C                     delay_ms@value_ms:
   501                           	opt stack 0
   502  00007C                     ___awdiv@quotient:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x1C
   506  00007C                     	ds	1
   507  00007D                     CANsendMessage@flags:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x1D
   511  00007D                     	ds	1
   512  00007E                     ??_CANsendMessage:
   513  00007E                     
   514                           ; 0 bytes @ 0x1E
   515  00007E                     	ds	1
   516  00007F                     CANSetMask@numBuffer:
   517                           	opt stack 0
   518  00007F                     CANSetFilter@numBuffer:
   519                           	opt stack 0
   520                           
   521                           ; 1 bytes @ 0x1F
   522  00007F                     	ds	1
   523  000080                     CANSetMask@tamp:
   524                           	opt stack 0
   525  000080                     CANSetFilter@tamp:
   526                           	opt stack 0
   527                           
   528                           ; 4 bytes @ 0x20
   529  000080                     	ds	2
   530  000082                     CANsendMessage@tamp:
   531                           	opt stack 0
   532                           
   533                           ; 4 bytes @ 0x22
   534  000082                     	ds	2
   535  000084                     CANInitialize@phaseSeg1:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x24
   539  000084                     	ds	1
   540  000085                     CANInitialize@phaseSeg2:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0x25
   544  000085                     	ds	1
   545  000086                     CANInitialize@SJW:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x26
   549  000086                     	ds	1
   550  000087                     CANInitialize@BRP:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x27
   554  000087                     	ds	1
   555  000088                     CANInitialize@flags:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x28
   559  000088                     	ds	1
   560  000089                     ??_CANInitialize:
   561                           
   562                           ; 0 bytes @ 0x29
   563  000089                     	ds	4
   564  00008D                     CANInitialize@propSeg:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x2D
   568  00008D                     	ds	1
   569  00008E                     CANInitialize@FilterConfig1:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x2E
   573  00008E                     	ds	1
   574  00008F                     CANInitialize@FilterConfig2:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x2F
   578  00008F                     	ds	1
   579  000090                     ??_main:
   580                           
   581                           ; 0 bytes @ 0x30
   582  000090                     	ds	8
   583  000098                     main@period:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x38
   587  000098                     	ds	1
   588                           tblptru	equ	0xFF8
   589                           tblptrh	equ	0xFF7
   590                           tblptrl	equ	0xFF6
   591                           tablat	equ	0xFF5
   592                           postinc0	equ	0xFEE
   593                           wreg	equ	0xFE8
   594                           
   595                           	psect	cstackCOMRAM
   596  000028                     __pcstackCOMRAM:
   597                           	opt stack 0
   598  000028                     _CANisRxReady$2800:
   599                           	opt stack 0
   600  000028                     CANreceiveMessage@msg:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x0
   604  000028                     	ds	2
   605  00002A                     ??_CANreceiveMessage:
   606                           
   607                           ; 0 bytes @ 0x2
   608  00002A                     	ds	8
   609  000032                     CANreceiveMessage@error:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0xA
   613  000032                     	ds	1
   614  000033                     CANreceiveMessage@tamp:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0xB
   618  000033                     	ds	1
   619  000034                     ??_ISR_bassa:
   620                           
   621                           ; 0 bytes @ 0xC
   622  000034                     	ds	17
   623                           tblptru	equ	0xFF8
   624                           tblptrh	equ	0xFF7
   625                           tblptrl	equ	0xFF6
   626                           tablat	equ	0xFF5
   627                           postinc0	equ	0xFEE
   628                           wreg	equ	0xFE8
   629                           
   630 ;;
   631 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   632 ;;
   633 ;; *************** function _main *****************
   634 ;; Defined at:
   635 ;;		line 117 in file "motore.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;  period          1   56[BANK0 ] unsigned char 
   640 ;; Return value:  Size  Location     Type
   641 ;;                  2  633[None  ] int 
   642 ;; Registers used:
   643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   649 ;;      Params:         0       0       0       0
   650 ;;      Locals:         0       1       0       0
   651 ;;      Temps:          0       8       0       0
   652 ;;      Totals:         0       9       0       0
   653 ;;Total ram usage:        9 bytes
   654 ;; Hardware stack levels required when called:    8
   655 ;; This function calls:
   656 ;;		_CANisRXwarningON
   657 ;;		_CANisTXwarningON
   658 ;;		_CANsendMessage
   659 ;;		_OpenEPWM1
   660 ;;		_OpenTimer2
   661 ;;		_SetDCEPWM1
   662 ;;		_SetOutputEPWM1
   663 ;;		___awdiv
   664 ;;		_configurazione_iniziale
   665 ;;		_delay_ms
   666 ;;		_send_data
   667 ;; This function is called by:
   668 ;;		Startup code after reset
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           	psect	text0
   673  001434                     __ptext0:
   674                           	opt stack 0
   675  001434                     _main:
   676                           	opt stack 23
   677                           
   678                           ;motore.c: 118: unsigned char period;
   679                           ;motore.c: 120: configurazione_iniziale();
   680                           
   681                           ;incstack = 0
   682  001434  ECE4  F012         	call	_configurazione_iniziale	;wreg free
   683                           
   684                           ;motore.c: 121: OpenTimer2(0b01111111 & 0b11111100 & 0b10000111);
   685  001438  0E04               	movlw	4
   686  00143A  EC13  F014         	call	_OpenTimer2
   687                           
   688                           ;motore.c: 122: period = 249;
   689  00143E  0EF9               	movlw	249
   690  001440  0100               	movlb	0	; () banked
   691  001442  6F98               	movwf	main@period& (0+255),b
   692                           
   693                           ; BSR set to: 0
   694                           ;motore.c: 123: OpenEPWM1(period);
   695  001444  0100               	movlb	0	; () banked
   696  001446  5198               	movf	main@period& (0+255),w,b
   697  001448  EC3A  F014         	call	_OpenEPWM1
   698                           
   699                           ;motore.c: 126: PORTD = 0xFF;
   700  00144C  6883               	setf	3971,c	;volatile
   701                           
   702                           ;motore.c: 127: delay_ms(500);
   703  00144E  0E01               	movlw	1
   704  001450  0100               	movlb	0	; () banked
   705  001452  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
   706  001454  0EF4               	movlw	244
   707  001456  6F7C               	movwf	delay_ms@value_ms& (0+255),b
   708  001458  EC91  F013         	call	_delay_ms	;wreg free
   709                           
   710                           ;motore.c: 128: PORTD = 0x00;
   711  00145C  0E00               	movlw	0
   712  00145E  6E83               	movwf	3971,c	;volatile
   713                           
   714                           ;motore.c: 129: delay_ms(500);
   715  001460  0E01               	movlw	1
   716  001462  0100               	movlb	0	; () banked
   717  001464  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
   718  001466  0EF4               	movlw	244
   719  001468  6F7C               	movwf	delay_ms@value_ms& (0+255),b
   720  00146A  EC91  F013         	call	_delay_ms	;wreg free
   721                           
   722                           ;motore.c: 130: PORTD = 0xFF;
   723  00146E  6883               	setf	3971,c	;volatile
   724                           
   725                           ;motore.c: 131: delay_ms(500);
   726  001470  0E01               	movlw	1
   727  001472  0100               	movlb	0	; () banked
   728  001474  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
   729  001476  0EF4               	movlw	244
   730  001478  6F7C               	movwf	delay_ms@value_ms& (0+255),b
   731  00147A  EC91  F013         	call	_delay_ms	;wreg free
   732                           
   733                           ;motore.c: 132: PORTD = 0x00;
   734  00147E  0E00               	movlw	0
   735  001480  6E83               	movwf	3971,c	;volatile
   736                           
   737                           ;motore.c: 133: delay_ms(500);
   738  001482  0E01               	movlw	1
   739  001484  0100               	movlb	0	; () banked
   740  001486  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
   741  001488  0EF4               	movlw	244
   742  00148A  6F7C               	movwf	delay_ms@value_ms& (0+255),b
   743  00148C  EC91  F013         	call	_delay_ms	;wreg free
   744  001490                     l634:
   745                           
   746                           ;motore.c: 137: if (dir == 1) {
   747  001490  0100               	movlb	0	; () banked
   748  001492  05AF               	decf	_dir& (0+255),w,b
   749  001494  0100               	movlb	0	; () banked
   750  001496  11B0               	iorwf	(_dir+1)& (0+255),w,b
   751  001498  A4D8               	btfss	status,2,c
   752  00149A  D006               	goto	l3725
   753                           
   754                           ; BSR set to: 0
   755                           ;motore.c: 138: SetOutputEPWM1(0b01111111, 0b11111100);
   756  00149C  0EFC               	movlw	252
   757  00149E  0100               	movlb	0	; () banked
   758  0014A0  6F76               	movwf	SetOutputEPWM1@outputmode& (0+255),b
   759  0014A2  0E7F               	movlw	127
   760  0014A4  EC20  F013         	call	_SetOutputEPWM1
   761  0014A8                     l3725:
   762                           
   763                           ;motore.c: 139: }
   764                           ;motore.c: 140: if (dir == 0) {
   765  0014A8  0100               	movlb	0	; () banked
   766  0014AA  51AF               	movf	_dir& (0+255),w,b
   767  0014AC  0100               	movlb	0	; () banked
   768  0014AE  11B0               	iorwf	(_dir+1)& (0+255),w,b
   769  0014B0  A4D8               	btfss	status,2,c
   770  0014B2  D006               	goto	l3729
   771                           
   772                           ; BSR set to: 0
   773                           ;motore.c: 141: SetOutputEPWM1(0b11111111, 0b11111100);
   774  0014B4  0EFC               	movlw	252
   775  0014B6  0100               	movlb	0	; () banked
   776  0014B8  6F76               	movwf	SetOutputEPWM1@outputmode& (0+255),b
   777  0014BA  0EFF               	movlw	255
   778  0014BC  EC20  F013         	call	_SetOutputEPWM1
   779  0014C0                     l3729:
   780                           
   781                           ;motore.c: 142: }
   782                           ;motore.c: 143: if ((timeCounter - previousTimeCounter1 >= 10)) {
   783  0014C0  C0A9  F090         	movff	_previousTimeCounter1,??_main
   784  0014C4  C0AA  F091         	movff	_previousTimeCounter1+1,??_main+1
   785  0014C8  C0AB  F092         	movff	_previousTimeCounter1+2,??_main+2
   786  0014CC  C0AC  F093         	movff	_previousTimeCounter1+3,??_main+3
   787  0014D0  0100               	movlb	0	; () banked
   788  0014D2  1F90               	comf	??_main& (0+255),f,b
   789  0014D4  1F91               	comf	(??_main+1)& (0+255),f,b
   790  0014D6  1F92               	comf	(??_main+2)& (0+255),f,b
   791  0014D8  1F93               	comf	(??_main+3)& (0+255),f,b
   792  0014DA  2B90               	incf	??_main& (0+255),f,b
   793  0014DC  0E00               	movlw	0
   794  0014DE  2391               	addwfc	(??_main+1)& (0+255),f,b
   795  0014E0  2392               	addwfc	(??_main+2)& (0+255),f,b
   796  0014E2  2393               	addwfc	(??_main+3)& (0+255),f,b
   797  0014E4  500D               	movf	_timeCounter,w,c
   798  0014E6  0100               	movlb	0	; () banked
   799  0014E8  2590               	addwf	??_main& (0+255),w,b
   800  0014EA  0100               	movlb	0	; () banked
   801  0014EC  6F94               	movwf	(??_main+4)& (0+255),b
   802  0014EE  500E               	movf	_timeCounter+1,w,c
   803  0014F0  0100               	movlb	0	; () banked
   804  0014F2  2191               	addwfc	(??_main+1)& (0+255),w,b
   805  0014F4  0100               	movlb	0	; () banked
   806  0014F6  6F95               	movwf	(??_main+5)& (0+255),b
   807  0014F8  500F               	movf	_timeCounter+2,w,c
   808  0014FA  0100               	movlb	0	; () banked
   809  0014FC  2192               	addwfc	(??_main+2)& (0+255),w,b
   810  0014FE  0100               	movlb	0	; () banked
   811  001500  6F96               	movwf	(??_main+6)& (0+255),b
   812  001502  5010               	movf	_timeCounter+3,w,c
   813  001504  0100               	movlb	0	; () banked
   814  001506  2193               	addwfc	(??_main+3)& (0+255),w,b
   815  001508  0100               	movlb	0	; () banked
   816  00150A  6F97               	movwf	(??_main+7)& (0+255),b
   817  00150C  0100               	movlb	0	; () banked
   818  00150E  5197               	movf	(??_main+7)& (0+255),w,b
   819  001510  0100               	movlb	0	; () banked
   820  001512  1196               	iorwf	(??_main+6)& (0+255),w,b
   821  001514  0100               	movlb	0	; () banked
   822  001516  1195               	iorwf	(??_main+5)& (0+255),w,b
   823  001518  E105               	bnz	u4340
   824  00151A  0E0A               	movlw	10
   825  00151C  0100               	movlb	0	; () banked
   826  00151E  5D94               	subwf	(??_main+4)& (0+255),w,b
   827  001520  A0D8               	btfss	status,0,c
   828  001522  D1D1               	goto	l3785
   829  001524                     u4340:
   830                           
   831                           ; BSR set to: 0
   832                           ;motore.c: 145: CANsendMessage(0b00000000000000000000000000010, 0, 0, CAN_CONFIG_STD_MSG
      +                           & CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
   833  001524  0E02               	movlw	2
   834  001526  0100               	movlb	0	; () banked
   835  001528  6F76               	movwf	CANsendMessage@identifier& (0+255),b
   836  00152A  0E00               	movlw	0
   837  00152C  6F77               	movwf	(CANsendMessage@identifier+1)& (0+255),b
   838  00152E  0E00               	movlw	0
   839  001530  6F78               	movwf	(CANsendMessage@identifier+2)& (0+255),b
   840  001532  0E00               	movlw	0
   841  001534  6F79               	movwf	(CANsendMessage@identifier+3)& (0+255),b
   842  001536  0E00               	movlw	0
   843  001538  0100               	movlb	0	; () banked
   844  00153A  6F7A               	movwf	CANsendMessage@data& (0+255),b
   845  00153C  0E00               	movlw	0
   846  00153E  0100               	movlb	0	; () banked
   847  001540  6F7B               	movwf	(CANsendMessage@data+1)& (0+255),b
   848  001542  0E00               	movlw	0
   849  001544  0100               	movlb	0	; () banked
   850  001546  6F7C               	movwf	CANsendMessage@dataLength& (0+255),b
   851  001548  0EFC               	movlw	252
   852  00154A  0100               	movlb	0	; () banked
   853  00154C  6F7D               	movwf	CANsendMessage@flags& (0+255),b
   854  00154E  EC54  F006         	call	_CANsendMessage	;wreg free
   855                           
   856                           ;motore.c: 146: currentSpeed = ((left_speed + right_speed) / 2);
   857  001552  0100               	movlb	0	; () banked
   858  001554  51B4               	movf	_left_speed& (0+255),w,b
   859  001556  0100               	movlb	0	; () banked
   860  001558  25B7               	addwf	_right_speed& (0+255),w,b
   861  00155A  0100               	movlb	0	; () banked
   862  00155C  6F76               	movwf	___awdiv@dividend& (0+255),b
   863  00155E  0100               	movlb	0	; () banked
   864  001560  6B77               	clrf	(___awdiv@dividend+1)& (0+255),b
   865  001562  0100               	movlb	0	; () banked
   866  001564  3777               	rlcf	(___awdiv@dividend+1)& (0+255),f,b
   867  001566  0E00               	movlw	0
   868  001568  0100               	movlb	0	; () banked
   869  00156A  6F79               	movwf	(___awdiv@divisor+1)& (0+255),b
   870  00156C  0E02               	movlw	2
   871  00156E  6F78               	movwf	___awdiv@divisor& (0+255),b
   872  001570  ECF8  F011         	call	___awdiv	;wreg free
   873  001574  0100               	movlb	0	; () banked
   874  001576  5176               	movf	?___awdiv& (0+255),w,b
   875  001578  6E46               	movwf	_currentSpeed,c
   876                           
   877                           ; BSR set to: 0
   878                           ;motore.c: 148: if (currentSpeed - requestSpeed > 0) {
   879  00157A  0100               	movlb	0	; () banked
   880  00157C  51B6               	movf	_requestSpeed& (0+255),w,b
   881  00157E  0100               	movlb	0	; () banked
   882  001580  6F90               	movwf	??_main& (0+255),b
   883  001582  6B91               	clrf	(??_main+1)& (0+255),b
   884  001584  0100               	movlb	0	; () banked
   885  001586  1F90               	comf	??_main& (0+255),f,b
   886  001588  1F91               	comf	(??_main+1)& (0+255),f,b
   887  00158A  4B90               	infsnz	??_main& (0+255),f,b
   888  00158C  2B91               	incf	(??_main+1)& (0+255),f,b
   889  00158E  5046               	movf	_currentSpeed,w,c
   890  001590  0100               	movlb	0	; () banked
   891  001592  6F92               	movwf	(??_main+2)& (0+255),b
   892  001594  6B93               	clrf	(??_main+3)& (0+255),b
   893  001596  0100               	movlb	0	; () banked
   894  001598  5190               	movf	??_main& (0+255),w,b
   895  00159A  0100               	movlb	0	; () banked
   896  00159C  2792               	addwf	(??_main+2)& (0+255),f,b
   897  00159E  0100               	movlb	0	; () banked
   898  0015A0  5191               	movf	(??_main+1)& (0+255),w,b
   899  0015A2  0100               	movlb	0	; () banked
   900  0015A4  2393               	addwfc	(??_main+3)& (0+255),f,b
   901  0015A6  0100               	movlb	0	; () banked
   902  0015A8  BF93               	btfsc	(??_main+3)& (0+255),7,b
   903  0015AA  D18D               	goto	l3785
   904  0015AC  0100               	movlb	0	; () banked
   905  0015AE  5193               	movf	(??_main+3)& (0+255),w,b
   906  0015B0  E104               	bnz	u4350
   907  0015B2  0100               	movlb	0	; () banked
   908  0015B4  0592               	decf	(??_main+2)& (0+255),w,b
   909  0015B6  A0D8               	btfss	status,0,c
   910  0015B8  D186               	goto	l3785
   911  0015BA                     u4350:
   912                           
   913                           ; BSR set to: 0
   914                           ;motore.c: 149: duty_cycle = (requestSpeed * 4);
   915  0015BA  0100               	movlb	0	; () banked
   916  0015BC  51B6               	movf	_requestSpeed& (0+255),w,b
   917  0015BE  0D04               	mullw	4
   918  0015C0  CFF3 F0B1          	movff	prodl,_duty_cycle
   919  0015C4  CFF4 F0B2          	movff	prodh,_duty_cycle+1
   920                           
   921                           ; BSR set to: 0
   922                           ;motore.c: 150: if ((duty_cycle - previousPwm) > 0) {
   923  0015C8  0100               	movlb	0	; () banked
   924  0015CA  51B5               	movf	_previousPwm& (0+255),w,b
   925  0015CC  0100               	movlb	0	; () banked
   926  0015CE  6F90               	movwf	??_main& (0+255),b
   927  0015D0  6B91               	clrf	(??_main+1)& (0+255),b
   928  0015D2  0100               	movlb	0	; () banked
   929  0015D4  1F90               	comf	??_main& (0+255),f,b
   930  0015D6  1F91               	comf	(??_main+1)& (0+255),f,b
   931  0015D8  4B90               	infsnz	??_main& (0+255),f,b
   932  0015DA  2B91               	incf	(??_main+1)& (0+255),f,b
   933  0015DC  0100               	movlb	0	; () banked
   934  0015DE  51B1               	movf	_duty_cycle& (0+255),w,b
   935  0015E0  0100               	movlb	0	; () banked
   936  0015E2  2790               	addwf	??_main& (0+255),f,b
   937  0015E4  0100               	movlb	0	; () banked
   938  0015E6  51B2               	movf	(_duty_cycle+1)& (0+255),w,b
   939  0015E8  0100               	movlb	0	; () banked
   940  0015EA  2391               	addwfc	(??_main+1)& (0+255),f,b
   941  0015EC  0100               	movlb	0	; () banked
   942  0015EE  BF91               	btfsc	(??_main+1)& (0+255),7,b
   943  0015F0  D0A4               	goto	l3759
   944  0015F2  0100               	movlb	0	; () banked
   945  0015F4  5191               	movf	(??_main+1)& (0+255),w,b
   946  0015F6  E104               	bnz	u4360
   947  0015F8  0100               	movlb	0	; () banked
   948  0015FA  0590               	decf	??_main& (0+255),w,b
   949  0015FC  A0D8               	btfss	status,0,c
   950  0015FE  D09D               	goto	l3759
   951  001600                     u4360:
   952                           
   953                           ; BSR set to: 0
   954                           ;motore.c: 151: if ((duty_cycle - previousPwm) > 5) {
   955  001600  0100               	movlb	0	; () banked
   956  001602  51B5               	movf	_previousPwm& (0+255),w,b
   957  001604  0100               	movlb	0	; () banked
   958  001606  6F90               	movwf	??_main& (0+255),b
   959  001608  6B91               	clrf	(??_main+1)& (0+255),b
   960  00160A  0100               	movlb	0	; () banked
   961  00160C  1F90               	comf	??_main& (0+255),f,b
   962  00160E  1F91               	comf	(??_main+1)& (0+255),f,b
   963  001610  4B90               	infsnz	??_main& (0+255),f,b
   964  001612  2B91               	incf	(??_main+1)& (0+255),f,b
   965  001614  0100               	movlb	0	; () banked
   966  001616  51B1               	movf	_duty_cycle& (0+255),w,b
   967  001618  0100               	movlb	0	; () banked
   968  00161A  2790               	addwf	??_main& (0+255),f,b
   969  00161C  0100               	movlb	0	; () banked
   970  00161E  51B2               	movf	(_duty_cycle+1)& (0+255),w,b
   971  001620  0100               	movlb	0	; () banked
   972  001622  2391               	addwfc	(??_main+1)& (0+255),f,b
   973  001624  0100               	movlb	0	; () banked
   974  001626  BF91               	btfsc	(??_main+1)& (0+255),7,b
   975  001628  D00C               	goto	l3745
   976  00162A  0100               	movlb	0	; () banked
   977  00162C  5191               	movf	(??_main+1)& (0+255),w,b
   978  00162E  E105               	bnz	u4370
   979  001630  0E06               	movlw	6
   980  001632  0100               	movlb	0	; () banked
   981  001634  5D90               	subwf	??_main& (0+255),w,b
   982  001636  A0D8               	btfss	status,0,c
   983  001638  D004               	goto	l3745
   984  00163A                     u4370:
   985                           
   986                           ; BSR set to: 0
   987                           ;motore.c: 152: duty_set = previousPwm + 300;
   988  00163A  0100               	movlb	0	; () banked
   989  00163C  51B5               	movf	_previousPwm& (0+255),w,b
   990  00163E  0F2C               	addlw	44
   991  001640  D0EA               	goto	L5
   992  001642                     l3745:
   993                           
   994                           ; BSR set to: 0
   995  001642  0100               	movlb	0	; () banked
   996  001644  51B5               	movf	_previousPwm& (0+255),w,b
   997  001646  0100               	movlb	0	; () banked
   998  001648  6F90               	movwf	??_main& (0+255),b
   999  00164A  6B91               	clrf	(??_main+1)& (0+255),b
  1000  00164C  0100               	movlb	0	; () banked
  1001  00164E  1F90               	comf	??_main& (0+255),f,b
  1002  001650  1F91               	comf	(??_main+1)& (0+255),f,b
  1003  001652  4B90               	infsnz	??_main& (0+255),f,b
  1004  001654  2B91               	incf	(??_main+1)& (0+255),f,b
  1005  001656  0100               	movlb	0	; () banked
  1006  001658  51B1               	movf	_duty_cycle& (0+255),w,b
  1007  00165A  0100               	movlb	0	; () banked
  1008  00165C  2790               	addwf	??_main& (0+255),f,b
  1009  00165E  0100               	movlb	0	; () banked
  1010  001660  51B2               	movf	(_duty_cycle+1)& (0+255),w,b
  1011  001662  0100               	movlb	0	; () banked
  1012  001664  2391               	addwfc	(??_main+1)& (0+255),f,b
  1013  001666  0100               	movlb	0	; () banked
  1014  001668  BF91               	btfsc	(??_main+1)& (0+255),7,b
  1015  00166A  D00C               	goto	l3749
  1016  00166C  0100               	movlb	0	; () banked
  1017  00166E  5191               	movf	(??_main+1)& (0+255),w,b
  1018  001670  E105               	bnz	u4380
  1019  001672  0E0B               	movlw	11
  1020  001674  0100               	movlb	0	; () banked
  1021  001676  5D90               	subwf	??_main& (0+255),w,b
  1022  001678  A0D8               	btfss	status,0,c
  1023  00167A  D004               	goto	l3749
  1024  00167C                     u4380:
  1025                           
  1026                           ; BSR set to: 0
  1027                           ;motore.c: 154: duty_set = previousPwm + 80;
  1028  00167C  0100               	movlb	0	; () banked
  1029  00167E  51B5               	movf	_previousPwm& (0+255),w,b
  1030  001680  0F50               	addlw	80
  1031  001682  D0C9               	goto	L5
  1032  001684                     l3749:
  1033                           
  1034                           ; BSR set to: 0
  1035  001684  0100               	movlb	0	; () banked
  1036  001686  51B5               	movf	_previousPwm& (0+255),w,b
  1037  001688  0100               	movlb	0	; () banked
  1038  00168A  6F90               	movwf	??_main& (0+255),b
  1039  00168C  6B91               	clrf	(??_main+1)& (0+255),b
  1040  00168E  0100               	movlb	0	; () banked
  1041  001690  1F90               	comf	??_main& (0+255),f,b
  1042  001692  1F91               	comf	(??_main+1)& (0+255),f,b
  1043  001694  4B90               	infsnz	??_main& (0+255),f,b
  1044  001696  2B91               	incf	(??_main+1)& (0+255),f,b
  1045  001698  0100               	movlb	0	; () banked
  1046  00169A  51B1               	movf	_duty_cycle& (0+255),w,b
  1047  00169C  0100               	movlb	0	; () banked
  1048  00169E  2790               	addwf	??_main& (0+255),f,b
  1049  0016A0  0100               	movlb	0	; () banked
  1050  0016A2  51B2               	movf	(_duty_cycle+1)& (0+255),w,b
  1051  0016A4  0100               	movlb	0	; () banked
  1052  0016A6  2391               	addwfc	(??_main+1)& (0+255),f,b
  1053  0016A8  0100               	movlb	0	; () banked
  1054  0016AA  BF91               	btfsc	(??_main+1)& (0+255),7,b
  1055  0016AC  D00C               	goto	l3753
  1056  0016AE  0100               	movlb	0	; () banked
  1057  0016B0  5191               	movf	(??_main+1)& (0+255),w,b
  1058  0016B2  E105               	bnz	u4390
  1059  0016B4  0E1F               	movlw	31
  1060  0016B6  0100               	movlb	0	; () banked
  1061  0016B8  5D90               	subwf	??_main& (0+255),w,b
  1062  0016BA  A0D8               	btfss	status,0,c
  1063  0016BC  D004               	goto	l3753
  1064  0016BE                     u4390:
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;motore.c: 156: duty_set = previousPwm + 20;
  1068  0016BE  0100               	movlb	0	; () banked
  1069  0016C0  51B5               	movf	_previousPwm& (0+255),w,b
  1070  0016C2  0F14               	addlw	20
  1071  0016C4  D0A8               	goto	L5
  1072  0016C6                     l3753:
  1073                           
  1074                           ; BSR set to: 0
  1075  0016C6  0100               	movlb	0	; () banked
  1076  0016C8  51B5               	movf	_previousPwm& (0+255),w,b
  1077  0016CA  0100               	movlb	0	; () banked
  1078  0016CC  6F90               	movwf	??_main& (0+255),b
  1079  0016CE  6B91               	clrf	(??_main+1)& (0+255),b
  1080  0016D0  0100               	movlb	0	; () banked
  1081  0016D2  1F90               	comf	??_main& (0+255),f,b
  1082  0016D4  1F91               	comf	(??_main+1)& (0+255),f,b
  1083  0016D6  4B90               	infsnz	??_main& (0+255),f,b
  1084  0016D8  2B91               	incf	(??_main+1)& (0+255),f,b
  1085  0016DA  0100               	movlb	0	; () banked
  1086  0016DC  51B1               	movf	_duty_cycle& (0+255),w,b
  1087  0016DE  0100               	movlb	0	; () banked
  1088  0016E0  2790               	addwf	??_main& (0+255),f,b
  1089  0016E2  0100               	movlb	0	; () banked
  1090  0016E4  51B2               	movf	(_duty_cycle+1)& (0+255),w,b
  1091  0016E6  0100               	movlb	0	; () banked
  1092  0016E8  2391               	addwfc	(??_main+1)& (0+255),f,b
  1093  0016EA  0100               	movlb	0	; () banked
  1094  0016EC  BF91               	btfsc	(??_main+1)& (0+255),7,b
  1095  0016EE  D008               	goto	l3755
  1096  0016F0  0100               	movlb	0	; () banked
  1097  0016F2  5191               	movf	(??_main+1)& (0+255),w,b
  1098  0016F4  E104               	bnz	u4401
  1099  0016F6  0E32               	movlw	50
  1100  0016F8  0100               	movlb	0	; () banked
  1101  0016FA  5D90               	subwf	??_main& (0+255),w,b
  1102  0016FC  B0D8               	btfsc	status,0,c
  1103  0016FE                     u4401:
  1104  0016FE  D0D0               	goto	l647
  1105  001700                     l3755:
  1106                           
  1107                           ; BSR set to: 0
  1108  001700  0100               	movlb	0	; () banked
  1109  001702  51B5               	movf	_previousPwm& (0+255),w,b
  1110  001704  0100               	movlb	0	; () banked
  1111  001706  6F90               	movwf	??_main& (0+255),b
  1112  001708  6B91               	clrf	(??_main+1)& (0+255),b
  1113  00170A  0100               	movlb	0	; () banked
  1114  00170C  1F90               	comf	??_main& (0+255),f,b
  1115  00170E  1F91               	comf	(??_main+1)& (0+255),f,b
  1116  001710  4B90               	infsnz	??_main& (0+255),f,b
  1117  001712  2B91               	incf	(??_main+1)& (0+255),f,b
  1118  001714  0100               	movlb	0	; () banked
  1119  001716  51B1               	movf	_duty_cycle& (0+255),w,b
  1120  001718  0100               	movlb	0	; () banked
  1121  00171A  2790               	addwf	??_main& (0+255),f,b
  1122  00171C  0100               	movlb	0	; () banked
  1123  00171E  51B2               	movf	(_duty_cycle+1)& (0+255),w,b
  1124  001720  0100               	movlb	0	; () banked
  1125  001722  2391               	addwfc	(??_main+1)& (0+255),f,b
  1126  001724  0100               	movlb	0	; () banked
  1127  001726  BF91               	btfsc	(??_main+1)& (0+255),7,b
  1128  001728  D0BB               	goto	l647
  1129  00172A  0100               	movlb	0	; () banked
  1130  00172C  5191               	movf	(??_main+1)& (0+255),w,b
  1131  00172E  E104               	bnz	u4410
  1132  001730  0100               	movlb	0	; () banked
  1133  001732  0590               	decf	??_main& (0+255),w,b
  1134  001734  A0D8               	btfss	status,0,c
  1135  001736  D0B4               	goto	l647
  1136  001738                     u4410:
  1137  001738  D0B1               	goto	u4460
  1138  00173A                     l3759:
  1139                           
  1140                           ; BSR set to: 0
  1141                           ;motore.c: 161: if ((previousPwm - duty_cycle) > 5) {
  1142  00173A  C0B1  F090         	movff	_duty_cycle,??_main
  1143  00173E  C0B2  F091         	movff	_duty_cycle+1,??_main+1
  1144  001742  0100               	movlb	0	; () banked
  1145  001744  1F90               	comf	??_main& (0+255),f,b
  1146  001746  1F91               	comf	(??_main+1)& (0+255),f,b
  1147  001748  4B90               	infsnz	??_main& (0+255),f,b
  1148  00174A  2B91               	incf	(??_main+1)& (0+255),f,b
  1149  00174C  0100               	movlb	0	; () banked
  1150  00174E  51B5               	movf	_previousPwm& (0+255),w,b
  1151  001750  0100               	movlb	0	; () banked
  1152  001752  6F92               	movwf	(??_main+2)& (0+255),b
  1153  001754  6B93               	clrf	(??_main+3)& (0+255),b
  1154  001756  0100               	movlb	0	; () banked
  1155  001758  5190               	movf	??_main& (0+255),w,b
  1156  00175A  0100               	movlb	0	; () banked
  1157  00175C  2792               	addwf	(??_main+2)& (0+255),f,b
  1158  00175E  0100               	movlb	0	; () banked
  1159  001760  5191               	movf	(??_main+1)& (0+255),w,b
  1160  001762  0100               	movlb	0	; () banked
  1161  001764  2393               	addwfc	(??_main+3)& (0+255),f,b
  1162  001766  0100               	movlb	0	; () banked
  1163  001768  BF93               	btfsc	(??_main+3)& (0+255),7,b
  1164  00176A  D00C               	goto	l3763
  1165  00176C  0100               	movlb	0	; () banked
  1166  00176E  5193               	movf	(??_main+3)& (0+255),w,b
  1167  001770  E105               	bnz	u4420
  1168  001772  0E06               	movlw	6
  1169  001774  0100               	movlb	0	; () banked
  1170  001776  5D92               	subwf	(??_main+2)& (0+255),w,b
  1171  001778  A0D8               	btfss	status,0,c
  1172  00177A  D004               	goto	l3763
  1173  00177C                     u4420:
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;motore.c: 162: duty_set = previousPwm - 50;
  1177  00177C  0100               	movlb	0	; () banked
  1178  00177E  51B5               	movf	_previousPwm& (0+255),w,b
  1179  001780  0FCE               	addlw	206
  1180  001782  D049               	goto	L5
  1181  001784                     l3763:
  1182                           
  1183                           ; BSR set to: 0
  1184  001784  C0B1  F090         	movff	_duty_cycle,??_main
  1185  001788  C0B2  F091         	movff	_duty_cycle+1,??_main+1
  1186  00178C  0100               	movlb	0	; () banked
  1187  00178E  1F90               	comf	??_main& (0+255),f,b
  1188  001790  1F91               	comf	(??_main+1)& (0+255),f,b
  1189  001792  4B90               	infsnz	??_main& (0+255),f,b
  1190  001794  2B91               	incf	(??_main+1)& (0+255),f,b
  1191  001796  0100               	movlb	0	; () banked
  1192  001798  51B5               	movf	_previousPwm& (0+255),w,b
  1193  00179A  0100               	movlb	0	; () banked
  1194  00179C  6F92               	movwf	(??_main+2)& (0+255),b
  1195  00179E  6B93               	clrf	(??_main+3)& (0+255),b
  1196  0017A0  0100               	movlb	0	; () banked
  1197  0017A2  5190               	movf	??_main& (0+255),w,b
  1198  0017A4  0100               	movlb	0	; () banked
  1199  0017A6  2792               	addwf	(??_main+2)& (0+255),f,b
  1200  0017A8  0100               	movlb	0	; () banked
  1201  0017AA  5191               	movf	(??_main+1)& (0+255),w,b
  1202  0017AC  0100               	movlb	0	; () banked
  1203  0017AE  2393               	addwfc	(??_main+3)& (0+255),f,b
  1204  0017B0  0100               	movlb	0	; () banked
  1205  0017B2  BF93               	btfsc	(??_main+3)& (0+255),7,b
  1206  0017B4  D00C               	goto	l3767
  1207  0017B6  0100               	movlb	0	; () banked
  1208  0017B8  5193               	movf	(??_main+3)& (0+255),w,b
  1209  0017BA  E105               	bnz	u4430
  1210  0017BC  0E0B               	movlw	11
  1211  0017BE  0100               	movlb	0	; () banked
  1212  0017C0  5D92               	subwf	(??_main+2)& (0+255),w,b
  1213  0017C2  A0D8               	btfss	status,0,c
  1214  0017C4  D004               	goto	l3767
  1215  0017C6                     u4430:
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;motore.c: 164: duty_set = previousPwm - 30;
  1219  0017C6  0100               	movlb	0	; () banked
  1220  0017C8  51B5               	movf	_previousPwm& (0+255),w,b
  1221  0017CA  0FE2               	addlw	226
  1222  0017CC  D024               	goto	L5
  1223  0017CE                     l3767:
  1224                           
  1225                           ; BSR set to: 0
  1226  0017CE  C0B1  F090         	movff	_duty_cycle,??_main
  1227  0017D2  C0B2  F091         	movff	_duty_cycle+1,??_main+1
  1228  0017D6  0100               	movlb	0	; () banked
  1229  0017D8  1F90               	comf	??_main& (0+255),f,b
  1230  0017DA  1F91               	comf	(??_main+1)& (0+255),f,b
  1231  0017DC  4B90               	infsnz	??_main& (0+255),f,b
  1232  0017DE  2B91               	incf	(??_main+1)& (0+255),f,b
  1233  0017E0  0100               	movlb	0	; () banked
  1234  0017E2  51B5               	movf	_previousPwm& (0+255),w,b
  1235  0017E4  0100               	movlb	0	; () banked
  1236  0017E6  6F92               	movwf	(??_main+2)& (0+255),b
  1237  0017E8  6B93               	clrf	(??_main+3)& (0+255),b
  1238  0017EA  0100               	movlb	0	; () banked
  1239  0017EC  5190               	movf	??_main& (0+255),w,b
  1240  0017EE  0100               	movlb	0	; () banked
  1241  0017F0  2792               	addwf	(??_main+2)& (0+255),f,b
  1242  0017F2  0100               	movlb	0	; () banked
  1243  0017F4  5191               	movf	(??_main+1)& (0+255),w,b
  1244  0017F6  0100               	movlb	0	; () banked
  1245  0017F8  2393               	addwfc	(??_main+3)& (0+255),f,b
  1246  0017FA  0100               	movlb	0	; () banked
  1247  0017FC  BF93               	btfsc	(??_main+3)& (0+255),7,b
  1248  0017FE  D00E               	goto	l3771
  1249  001800  0100               	movlb	0	; () banked
  1250  001802  5193               	movf	(??_main+3)& (0+255),w,b
  1251  001804  E105               	bnz	u4440
  1252  001806  0E1F               	movlw	31
  1253  001808  0100               	movlb	0	; () banked
  1254  00180A  5D92               	subwf	(??_main+2)& (0+255),w,b
  1255  00180C  A0D8               	btfss	status,0,c
  1256  00180E  D006               	goto	l3771
  1257  001810                     u4440:
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;motore.c: 166: duty_set = previousPwm - 10;
  1261  001810  0100               	movlb	0	; () banked
  1262  001812  51B5               	movf	_previousPwm& (0+255),w,b
  1263  001814  0FF6               	addlw	246
  1264  001816                     L5:
  1265  001816  0100               	movlb	0	; () banked
  1266  001818  6FB3               	movwf	_duty_set& (0+255),b
  1267                           
  1268                           ;motore.c: 167: } else if (((previousPwm - duty_cycle) < 50)&&((previousPwm - duty_cycle
      +                          ) > 0)) {
  1269  00181A  D042               	goto	l647
  1270  00181C                     l3771:
  1271                           
  1272                           ; BSR set to: 0
  1273  00181C  C0B1  F090         	movff	_duty_cycle,??_main
  1274  001820  C0B2  F091         	movff	_duty_cycle+1,??_main+1
  1275  001824  0100               	movlb	0	; () banked
  1276  001826  1F90               	comf	??_main& (0+255),f,b
  1277  001828  1F91               	comf	(??_main+1)& (0+255),f,b
  1278  00182A  4B90               	infsnz	??_main& (0+255),f,b
  1279  00182C  2B91               	incf	(??_main+1)& (0+255),f,b
  1280  00182E  0100               	movlb	0	; () banked
  1281  001830  51B5               	movf	_previousPwm& (0+255),w,b
  1282  001832  0100               	movlb	0	; () banked
  1283  001834  6F92               	movwf	(??_main+2)& (0+255),b
  1284  001836  6B93               	clrf	(??_main+3)& (0+255),b
  1285  001838  0100               	movlb	0	; () banked
  1286  00183A  5190               	movf	??_main& (0+255),w,b
  1287  00183C  0100               	movlb	0	; () banked
  1288  00183E  2792               	addwf	(??_main+2)& (0+255),f,b
  1289  001840  0100               	movlb	0	; () banked
  1290  001842  5191               	movf	(??_main+1)& (0+255),w,b
  1291  001844  0100               	movlb	0	; () banked
  1292  001846  2393               	addwfc	(??_main+3)& (0+255),f,b
  1293  001848  0100               	movlb	0	; () banked
  1294  00184A  BF93               	btfsc	(??_main+3)& (0+255),7,b
  1295  00184C  D008               	goto	l3773
  1296  00184E  0100               	movlb	0	; () banked
  1297  001850  5193               	movf	(??_main+3)& (0+255),w,b
  1298  001852  E126               	bnz	l647
  1299  001854  0E32               	movlw	50
  1300  001856  0100               	movlb	0	; () banked
  1301  001858  5D92               	subwf	(??_main+2)& (0+255),w,b
  1302  00185A  B0D8               	btfsc	status,0,c
  1303  00185C  D021               	goto	l647
  1304  00185E                     l3773:
  1305                           
  1306                           ; BSR set to: 0
  1307  00185E  C0B1  F090         	movff	_duty_cycle,??_main
  1308  001862  C0B2  F091         	movff	_duty_cycle+1,??_main+1
  1309  001866  0100               	movlb	0	; () banked
  1310  001868  1F90               	comf	??_main& (0+255),f,b
  1311  00186A  1F91               	comf	(??_main+1)& (0+255),f,b
  1312  00186C  4B90               	infsnz	??_main& (0+255),f,b
  1313  00186E  2B91               	incf	(??_main+1)& (0+255),f,b
  1314  001870  0100               	movlb	0	; () banked
  1315  001872  51B5               	movf	_previousPwm& (0+255),w,b
  1316  001874  0100               	movlb	0	; () banked
  1317  001876  6F92               	movwf	(??_main+2)& (0+255),b
  1318  001878  6B93               	clrf	(??_main+3)& (0+255),b
  1319  00187A  0100               	movlb	0	; () banked
  1320  00187C  5190               	movf	??_main& (0+255),w,b
  1321  00187E  0100               	movlb	0	; () banked
  1322  001880  2792               	addwf	(??_main+2)& (0+255),f,b
  1323  001882  0100               	movlb	0	; () banked
  1324  001884  5191               	movf	(??_main+1)& (0+255),w,b
  1325  001886  0100               	movlb	0	; () banked
  1326  001888  2393               	addwfc	(??_main+3)& (0+255),f,b
  1327  00188A  0100               	movlb	0	; () banked
  1328  00188C  BF93               	btfsc	(??_main+3)& (0+255),7,b
  1329  00188E  D008               	goto	l647
  1330  001890  0100               	movlb	0	; () banked
  1331  001892  5193               	movf	(??_main+3)& (0+255),w,b
  1332  001894  E103               	bnz	u4460
  1333  001896  0100               	movlb	0	; () banked
  1334  001898  0592               	decf	(??_main+2)& (0+255),w,b
  1335  00189A  D74C               	goto	L6
  1336  00189C                     u4460:
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;motore.c: 168: duty_set = previousPwm;
  1340  00189C  C0B5  F0B3         	movff	_previousPwm,_duty_set
  1341  0018A0                     l647:
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;motore.c: 169: }
  1345                           ;motore.c: 170: }
  1346                           ;motore.c: 171: previousPwm = duty_set;
  1347  0018A0  C0B3  F0B5         	movff	_duty_set,_previousPwm
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;motore.c: 173: SetDCEPWM1(duty_set);
  1351  0018A4  C0B3  F076         	movff	_duty_set,SetDCEPWM1@dutycycle
  1352  0018A8  0100               	movlb	0	; () banked
  1353  0018AA  6B77               	clrf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1354  0018AC  EC6F  F013         	call	_SetDCEPWM1	;wreg free
  1355                           
  1356                           ;motore.c: 174: if (remote_frame == 1) {
  1357  0018B0  B245               	btfsc	_remote_frame/(0+8),_remote_frame& (0+7),c
  1358                           
  1359                           ;motore.c: 175: send_data();
  1360  0018B2  ECA0  F012         	call	_send_data	;wreg free
  1361                           
  1362                           ;motore.c: 176: }
  1363                           ;motore.c: 177: previousTimeCounter = timeCounter;
  1364  0018B6  C00D  F0A5         	movff	_timeCounter,_previousTimeCounter
  1365  0018BA  C00E  F0A6         	movff	_timeCounter+1,_previousTimeCounter+1
  1366  0018BE  C00F  F0A7         	movff	_timeCounter+2,_previousTimeCounter+2
  1367  0018C2  C010  F0A8         	movff	_timeCounter+3,_previousTimeCounter+3
  1368  0018C6                     l3785:
  1369                           
  1370                           ;motore.c: 178: }
  1371                           ;motore.c: 179: }
  1372                           ;motore.c: 180: if ((CANisTXwarningON() == 1) || (CANisRXwarningON() == 1)) {
  1373  0018C6  EC43  F014         	call	_CANisTXwarningON	;wreg free
  1374  0018CA  06E8               	decf	wreg,f,c
  1375  0018CC  B4D8               	btfsc	status,2,c
  1376  0018CE  D005               	goto	l3789
  1377  0018D0  EC49  F014         	call	_CANisRXwarningON	;wreg free
  1378  0018D4  06E8               	decf	wreg,f,c
  1379  0018D6  A4D8               	btfss	status,2,c
  1380  0018D8  D020               	goto	l3803
  1381  0018DA                     l3789:
  1382                           
  1383                           ;motore.c: 181: SetDCEPWM1(0);
  1384  0018DA  0E00               	movlw	0
  1385  0018DC  0100               	movlb	0	; () banked
  1386  0018DE  6F77               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1387  0018E0  0E00               	movlw	0
  1388  0018E2  6F76               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  1389  0018E4  EC6F  F013         	call	_SetDCEPWM1	;wreg free
  1390                           
  1391                           ;motore.c: 182: PORTAbits.RA0 = 1;
  1392  0018E8  8080               	bsf	3968,0,c	;volatile
  1393                           
  1394                           ;motore.c: 183: }
  1395                           ;motore.c: 190: while ((timeCounter - previousTimeCounter) > 100) {
  1396  0018EA  D017               	goto	l3803
  1397  0018EC                     l3793:
  1398                           
  1399                           ;motore.c: 191: SetDCEPWM1(0);
  1400  0018EC  0E00               	movlw	0
  1401  0018EE  0100               	movlb	0	; () banked
  1402  0018F0  6F77               	movwf	(SetDCEPWM1@dutycycle+1)& (0+255),b
  1403  0018F2  0E00               	movlw	0
  1404  0018F4  6F76               	movwf	SetDCEPWM1@dutycycle& (0+255),b
  1405  0018F6  EC6F  F013         	call	_SetDCEPWM1	;wreg free
  1406                           
  1407                           ;motore.c: 192: PORTAbits.RA0 = 1;
  1408  0018FA  8080               	bsf	3968,0,c	;volatile
  1409                           
  1410                           ;motore.c: 193: delay_ms(250);
  1411  0018FC  0E00               	movlw	0
  1412  0018FE  0100               	movlb	0	; () banked
  1413  001900  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1414  001902  0EFA               	movlw	250
  1415  001904  6F7C               	movwf	delay_ms@value_ms& (0+255),b
  1416  001906  EC91  F013         	call	_delay_ms	;wreg free
  1417                           
  1418                           ;motore.c: 194: PORTAbits.RA0 = 0;
  1419  00190A  9080               	bcf	3968,0,c	;volatile
  1420                           
  1421                           ;motore.c: 195: delay_ms(250);
  1422  00190C  0E00               	movlw	0
  1423  00190E  0100               	movlb	0	; () banked
  1424  001910  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1425  001912  0EFA               	movlw	250
  1426  001914  6F7C               	movwf	delay_ms@value_ms& (0+255),b
  1427  001916  EC91  F013         	call	_delay_ms	;wreg free
  1428  00191A                     l3803:
  1429  00191A  C0A5  F090         	movff	_previousTimeCounter,??_main
  1430  00191E  C0A6  F091         	movff	_previousTimeCounter+1,??_main+1
  1431  001922  C0A7  F092         	movff	_previousTimeCounter+2,??_main+2
  1432  001926  C0A8  F093         	movff	_previousTimeCounter+3,??_main+3
  1433  00192A  0100               	movlb	0	; () banked
  1434  00192C  1F90               	comf	??_main& (0+255),f,b
  1435  00192E  1F91               	comf	(??_main+1)& (0+255),f,b
  1436  001930  1F92               	comf	(??_main+2)& (0+255),f,b
  1437  001932  1F93               	comf	(??_main+3)& (0+255),f,b
  1438  001934  2B90               	incf	??_main& (0+255),f,b
  1439  001936  0E00               	movlw	0
  1440  001938  2391               	addwfc	(??_main+1)& (0+255),f,b
  1441  00193A  2392               	addwfc	(??_main+2)& (0+255),f,b
  1442  00193C  2393               	addwfc	(??_main+3)& (0+255),f,b
  1443  00193E  500D               	movf	_timeCounter,w,c
  1444  001940  0100               	movlb	0	; () banked
  1445  001942  2590               	addwf	??_main& (0+255),w,b
  1446  001944  0100               	movlb	0	; () banked
  1447  001946  6F94               	movwf	(??_main+4)& (0+255),b
  1448  001948  500E               	movf	_timeCounter+1,w,c
  1449  00194A  0100               	movlb	0	; () banked
  1450  00194C  2191               	addwfc	(??_main+1)& (0+255),w,b
  1451  00194E  0100               	movlb	0	; () banked
  1452  001950  6F95               	movwf	(??_main+5)& (0+255),b
  1453  001952  500F               	movf	_timeCounter+2,w,c
  1454  001954  0100               	movlb	0	; () banked
  1455  001956  2192               	addwfc	(??_main+2)& (0+255),w,b
  1456  001958  0100               	movlb	0	; () banked
  1457  00195A  6F96               	movwf	(??_main+6)& (0+255),b
  1458  00195C  5010               	movf	_timeCounter+3,w,c
  1459  00195E  0100               	movlb	0	; () banked
  1460  001960  2193               	addwfc	(??_main+3)& (0+255),w,b
  1461  001962  0100               	movlb	0	; () banked
  1462  001964  6F97               	movwf	(??_main+7)& (0+255),b
  1463  001966  0100               	movlb	0	; () banked
  1464  001968  5197               	movf	(??_main+7)& (0+255),w,b
  1465  00196A  0100               	movlb	0	; () banked
  1466  00196C  1196               	iorwf	(??_main+6)& (0+255),w,b
  1467  00196E  0100               	movlb	0	; () banked
  1468  001970  1195               	iorwf	(??_main+5)& (0+255),w,b
  1469  001972  E1BC               	bnz	l3793
  1470  001974  0E65               	movlw	101
  1471  001976  0100               	movlb	0	; () banked
  1472  001978  5D94               	subwf	(??_main+4)& (0+255),w,b
  1473  00197A  A0D8               	btfss	status,0,c
  1474  00197C  D589               	goto	l634
  1475  00197E  D7B6               	goto	l3793
  1476  001980                     __end_of_main:
  1477                           	opt stack 0
  1478                           tblptru	equ	0xFF8
  1479                           tblptrh	equ	0xFF7
  1480                           tblptrl	equ	0xFF6
  1481                           tablat	equ	0xFF5
  1482                           prodh	equ	0xFF4
  1483                           prodl	equ	0xFF3
  1484                           postinc0	equ	0xFEE
  1485                           wreg	equ	0xFE8
  1486                           status	equ	0xFD8
  1487                           
  1488 ;; *************** function _send_data *****************
  1489 ;; Defined at:
  1490 ;;		line 200 in file "motore.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;		None
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;		None
  1495 ;; Return value:  Size  Location     Type
  1496 ;;		None               void
  1497 ;; Registers used:
  1498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1504 ;;      Params:         0       0       0       0
  1505 ;;      Locals:         0       0       0       0
  1506 ;;      Temps:          0       0       0       0
  1507 ;;      Totals:         0       0       0       0
  1508 ;;Total ram usage:        0 bytes
  1509 ;; Hardware stack levels used:    1
  1510 ;; Hardware stack levels required when called:    7
  1511 ;; This function calls:
  1512 ;;		_CANisTxReady
  1513 ;;		_CANsendMessage
  1514 ;;		_delay_ms
  1515 ;; This function is called by:
  1516 ;;		_main
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text1
  1521  002540                     __ptext1:
  1522                           	opt stack 0
  1523  002540                     _send_data:
  1524                           	opt stack 23
  1525                           
  1526                           ;motore.c: 201: if (CANisTxReady()) {
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;incstack = 0
  1530  002540  EC01  F014         	call	_CANisTxReady	;wreg free
  1531  002544  0900               	iorlw	0
  1532  002546  A4D8               	btfss	status,2,c
  1533                           
  1534                           ;motore.c: 202: if (remote_frame == 1) {
  1535  002548  A245               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1536  00254A  D017               	goto	l3571
  1537                           
  1538                           ;motore.c: 203: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1539  00254C  C0A1  F076         	movff	_id,CANsendMessage@identifier
  1540  002550  C0A2  F077         	movff	_id+1,CANsendMessage@identifier+1
  1541  002554  C0A3  F078         	movff	_id+2,CANsendMessage@identifier+2
  1542  002558  C0A4  F079         	movff	_id+3,CANsendMessage@identifier+3
  1543  00255C  0E20               	movlw	low _data_array
  1544  00255E  0100               	movlb	0	; () banked
  1545  002560  6F7A               	movwf	CANsendMessage@data& (0+255),b
  1546  002562  0E00               	movlw	high _data_array
  1547  002564  0100               	movlb	0	; () banked
  1548  002566  6F7B               	movwf	(CANsendMessage@data+1)& (0+255),b
  1549  002568  0E08               	movlw	8
  1550  00256A  0100               	movlb	0	; () banked
  1551  00256C  6F7C               	movwf	CANsendMessage@dataLength& (0+255),b
  1552  00256E  0EBC               	movlw	188
  1553  002570  0100               	movlb	0	; () banked
  1554  002572  6F7D               	movwf	CANsendMessage@flags& (0+255),b
  1555  002574  EC54  F006         	call	_CANsendMessage	;wreg free
  1556                           
  1557                           ;motore.c: 204: remote_frame = 0;
  1558  002578  9245               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1559  00257A                     l3571:
  1560                           
  1561                           ;motore.c: 205: }
  1562                           ;motore.c: 206: }
  1563                           ;motore.c: 207: if ((TXB0CONbits.TXABT) || (TXB1CONbits.TXABT)) {
  1564  00257A  010F               	movlb	15	; () banked
  1565  00257C  BD40               	btfsc	64,6,b	;volatile
  1566  00257E  D003               	goto	l3575
  1567                           
  1568                           ; BSR set to: 15
  1569  002580  010F               	movlb	15	; () banked
  1570  002582  AD30               	btfss	48,6,b	;volatile
  1571  002584  0012               	return	
  1572  002586                     l3575:
  1573                           
  1574                           ; BSR set to: 15
  1575                           ;motore.c: 208: delay_ms(5);
  1576  002586  0E00               	movlw	0
  1577  002588  0100               	movlb	0	; () banked
  1578  00258A  6F7D               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1579  00258C  0E05               	movlw	5
  1580  00258E  6F7C               	movwf	delay_ms@value_ms& (0+255),b
  1581  002590  EC91  F013         	call	_delay_ms	;wreg free
  1582                           
  1583                           ;motore.c: 209: if (remote_frame == 1) {
  1584  002594  A245               	btfss	_remote_frame/(0+8),_remote_frame& (0+7),c
  1585  002596  0012               	return	
  1586                           
  1587                           ;motore.c: 210: CANsendMessage(id, data_array, 8, CAN_CONFIG_STD_MSG & CAN_NORMAL_TX_FRA
      +                          ME & CAN_TX_PRIORITY_0);
  1588  002598  C0A1  F076         	movff	_id,CANsendMessage@identifier
  1589  00259C  C0A2  F077         	movff	_id+1,CANsendMessage@identifier+1
  1590  0025A0  C0A3  F078         	movff	_id+2,CANsendMessage@identifier+2
  1591  0025A4  C0A4  F079         	movff	_id+3,CANsendMessage@identifier+3
  1592  0025A8  0E20               	movlw	low _data_array
  1593  0025AA  0100               	movlb	0	; () banked
  1594  0025AC  6F7A               	movwf	CANsendMessage@data& (0+255),b
  1595  0025AE  0E00               	movlw	high _data_array
  1596  0025B0  0100               	movlb	0	; () banked
  1597  0025B2  6F7B               	movwf	(CANsendMessage@data+1)& (0+255),b
  1598  0025B4  0E08               	movlw	8
  1599  0025B6  0100               	movlb	0	; () banked
  1600  0025B8  6F7C               	movwf	CANsendMessage@dataLength& (0+255),b
  1601  0025BA  0EBC               	movlw	188
  1602  0025BC  0100               	movlb	0	; () banked
  1603  0025BE  6F7D               	movwf	CANsendMessage@flags& (0+255),b
  1604  0025C0  EC54  F006         	call	_CANsendMessage	;wreg free
  1605                           
  1606                           ;motore.c: 211: remote_frame = 0;
  1607  0025C4  9245               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  1608  0025C6  0012               	return	
  1609  0025C8                     __end_of_send_data:
  1610                           	opt stack 0
  1611                           tblptru	equ	0xFF8
  1612                           tblptrh	equ	0xFF7
  1613                           tblptrl	equ	0xFF6
  1614                           tablat	equ	0xFF5
  1615                           prodh	equ	0xFF4
  1616                           prodl	equ	0xFF3
  1617                           postinc0	equ	0xFEE
  1618                           wreg	equ	0xFE8
  1619                           status	equ	0xFD8
  1620                           
  1621 ;; *************** function _delay_ms *****************
  1622 ;; Defined at:
  1623 ;;		line 61 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  value_ms        2   28[BANK0 ] unsigned int 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;		None               void
  1630 ;; Registers used:
  1631 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1637 ;;      Params:         0       2       0       0
  1638 ;;      Locals:         0       0       0       0
  1639 ;;      Temps:          0       0       0       0
  1640 ;;      Totals:         0       2       0       0
  1641 ;;Total ram usage:        2 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:    6
  1644 ;; This function calls:
  1645 ;;		___wmul
  1646 ;; This function is called by:
  1647 ;;		_main
  1648 ;;		_send_data
  1649 ;;		_delay_s
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text2
  1654  002722                     __ptext2:
  1655                           	opt stack 0
  1656  002722                     _delay_ms:
  1657                           	opt stack 23
  1658                           
  1659                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  1660                           
  1661                           ;incstack = 0
  1662  002722  C0B8  F076         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  1663  002726  0100               	movlb	0	; () banked
  1664  002728  6B77               	clrf	(___wmul@multiplier+1)& (0+255),b
  1665  00272A  C07C  F078         	movff	delay_ms@value_ms,___wmul@multiplicand
  1666  00272E  C07D  F079         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  1667  002732  ECCB  F013         	call	___wmul	;wreg free
  1668  002736  C076  F0AD         	movff	?___wmul,_clock_counter_reference	;volatile
  1669  00273A  C077  F0AE         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  1670                           
  1671                           ;src\delay.c: 75: while (clock_counter_reference) {
  1672  00273E  D007               	goto	l561
  1673  002740                     l3305:
  1674                           
  1675                           ;src\delay.c: 85: _delay(240);
  1676  002740  0E50               	movlw	80
  1677  002742                     u4547:
  1678  002742  2EE8               	decfsz	wreg,f,c
  1679  002744  D7FE               	goto	u4547
  1680                           
  1681                           ;src\delay.c: 88: clock_counter_reference--;
  1682  002746  0100               	movlb	0	; () banked
  1683  002748  07AD               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  1684  00274A  A0D8               	btfss	status,0,c
  1685  00274C  07AE               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  1686  00274E                     l561:
  1687  00274E  0100               	movlb	0	; () banked
  1688  002750  51AD               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  1689  002752  0100               	movlb	0	; () banked
  1690  002754  11AE               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  1691  002756  B4D8               	btfsc	status,2,c
  1692  002758  0012               	return	
  1693  00275A  D7F2               	goto	l3305
  1694  00275C                     __end_of_delay_ms:
  1695                           	opt stack 0
  1696                           tblptru	equ	0xFF8
  1697                           tblptrh	equ	0xFF7
  1698                           tblptrl	equ	0xFF6
  1699                           tablat	equ	0xFF5
  1700                           prodh	equ	0xFF4
  1701                           prodl	equ	0xFF3
  1702                           postinc0	equ	0xFEE
  1703                           wreg	equ	0xFE8
  1704                           status	equ	0xFD8
  1705                           
  1706 ;; *************** function ___wmul *****************
  1707 ;; Defined at:
  1708 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  multiplier      2   22[BANK0 ] unsigned int 
  1711 ;;  multiplicand    2   24[BANK0 ] unsigned int 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  product         2   26[BANK0 ] unsigned int 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  2   22[BANK0 ] unsigned int 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0, prodl, prodh
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1723 ;;      Params:         0       4       0       0
  1724 ;;      Locals:         0       2       0       0
  1725 ;;      Temps:          0       0       0       0
  1726 ;;      Totals:         0       6       0       0
  1727 ;;Total ram usage:        6 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; Hardware stack levels required when called:    5
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_delay_ms
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text3
  1738  002796                     __ptext3:
  1739                           	opt stack 0
  1740  002796                     ___wmul:
  1741                           	opt stack 23
  1742                           
  1743                           ; BSR set to: 0
  1744                           ;incstack = 0
  1745  002796  0100               	movlb	0	; () banked
  1746  002798  5176               	movf	___wmul@multiplier& (0+255),w,b
  1747  00279A  0100               	movlb	0	; () banked
  1748  00279C  0378               	mulwf	___wmul@multiplicand& (0+255),b
  1749  00279E  CFF3 F07A          	movff	prodl,___wmul@product
  1750  0027A2  CFF4 F07B          	movff	prodh,___wmul@product+1
  1751  0027A6  0100               	movlb	0	; () banked
  1752  0027A8  5176               	movf	___wmul@multiplier& (0+255),w,b
  1753  0027AA  0100               	movlb	0	; () banked
  1754  0027AC  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1755  0027AE  50F3               	movf	prodl,w,c
  1756  0027B0  0100               	movlb	0	; () banked
  1757  0027B2  277B               	addwf	(___wmul@product+1)& (0+255),f,b
  1758  0027B4  0100               	movlb	0	; () banked
  1759  0027B6  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1760  0027B8  0100               	movlb	0	; () banked
  1761  0027BA  0378               	mulwf	___wmul@multiplicand& (0+255),b
  1762  0027BC  50F3               	movf	prodl,w,c
  1763  0027BE  0100               	movlb	0	; () banked
  1764  0027C0  277B               	addwf	(___wmul@product+1)& (0+255),f,b
  1765                           
  1766                           ; BSR set to: 0
  1767  0027C2  C07A  F076         	movff	___wmul@product,?___wmul
  1768  0027C6  C07B  F077         	movff	___wmul@product+1,?___wmul+1
  1769  0027CA  0012               	return	
  1770  0027CC                     __end_of___wmul:
  1771                           	opt stack 0
  1772                           tblptru	equ	0xFF8
  1773                           tblptrh	equ	0xFF7
  1774                           tblptrl	equ	0xFF6
  1775                           tablat	equ	0xFF5
  1776                           prodh	equ	0xFF4
  1777                           prodl	equ	0xFF3
  1778                           postinc0	equ	0xFEE
  1779                           wreg	equ	0xFE8
  1780                           status	equ	0xFD8
  1781                           
  1782 ;; *************** function _CANsendMessage *****************
  1783 ;; Defined at:
  1784 ;;		line 294 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  identifier      4   22[BANK0 ] unsigned long 
  1787 ;;  data            2   26[BANK0 ] PTR unsigned char 
  1788 ;;		 -> NULL(0), data_array(8), 
  1789 ;;  dataLength      1   28[BANK0 ] unsigned char 
  1790 ;;  flags           1   29[BANK0 ] enum E16866
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  tamp            4   34[BANK0 ] unsigned long 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;		None               void
  1795 ;; Registers used:
  1796 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1802 ;;      Params:         0       8       0       0
  1803 ;;      Locals:         0       4       0       0
  1804 ;;      Temps:          0       4       0       0
  1805 ;;      Totals:         0      16       0       0
  1806 ;;Total ram usage:       16 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    5
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;;		_send_data
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text4
  1818  000CA8                     __ptext4:
  1819                           	opt stack 0
  1820  000CA8                     _CANsendMessage:
  1821                           	opt stack 24
  1822                           
  1823                           ;inc\CANlib.h: 296: unsigned long tamp;
  1824                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;incstack = 0
  1828  000CA8  010F               	movlb	15	; () banked
  1829  000CAA  B740               	btfsc	64,3,b	;volatile
  1830  000CAC  D13F               	goto	l355
  1831                           
  1832                           ; BSR set to: 15
  1833                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  1834  000CAE  C07C  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  1835                           
  1836                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  1837  000CB2  0100               	movlb	0	; () banked
  1838  000CB4  AD7D               	btfss	CANsendMessage@flags& (0+255),6,b
  1839  000CB6  D003               	goto	l356
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  1843  000CB8  010F               	movlb	15	; () banked
  1844  000CBA  8D45               	bsf	69,6,b	;volatile
  1845  000CBC  D002               	goto	l357
  1846  000CBE                     l356:
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;inc\CANlib.h: 302: else
  1850                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  1851  000CBE  010F               	movlb	15	; () banked
  1852  000CC0  9D45               	bcf	69,6,b	;volatile
  1853  000CC2                     l357:
  1854                           
  1855                           ; BSR set to: 15
  1856                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  1857  000CC2  0100               	movlb	0	; () banked
  1858  000CC4  A77D               	btfss	CANsendMessage@flags& (0+255),3,b
  1859  000CC6  D079               	goto	l358
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;inc\CANlib.h: 306: {
  1863                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  1864  000CC8  0100               	movlb	0	; () banked
  1865  000CCA  5176               	movf	CANsendMessage@identifier& (0+255),w,b
  1866  000CCC  0100               	movlb	0	; () banked
  1867  000CCE  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1868  000CD0  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  1869  000CD2  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  1870  000CD4  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  1874  000CD6  C082  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  1878  000CDA  0E00               	movlw	0
  1879  000CDC  0100               	movlb	0	; () banked
  1880  000CDE  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
  1881  000CE0  0100               	movlb	0	; () banked
  1882  000CE2  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  1883  000CE4  0EFF               	movlw	255
  1884  000CE6  0100               	movlb	0	; () banked
  1885  000CE8  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  1886  000CEA  0100               	movlb	0	; () banked
  1887  000CEC  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  1888  000CEE  0E00               	movlw	0
  1889  000CF0  0100               	movlb	0	; () banked
  1890  000CF2  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  1891  000CF4  0100               	movlb	0	; () banked
  1892  000CF6  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  1893  000CF8  0E00               	movlw	0
  1894  000CFA  0100               	movlb	0	; () banked
  1895  000CFC  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  1896  000CFE  0100               	movlb	0	; () banked
  1897  000D00  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  1901  000D02  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
  1902  000D06  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  1903  000D0A  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  1904  000D0E  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  1905  000D12  C07F  F07E         	movff	??_CANsendMessage+1,??_CANsendMessage
  1906  000D16  C080  F07F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  1907  000D1A  C081  F080         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  1908  000D1E  0100               	movlb	0	; () banked
  1909  000D20  6B81               	clrf	(??_CANsendMessage+3)& (0+255),b
  1910  000D22  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  1911  000D26  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  1912  000D2A  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  1913  000D2E  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  1917  000D32  C082  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  1921  000D36  0E00               	movlw	0
  1922  000D38  010F               	movlb	15	; () banked
  1923  000D3A  6F42               	movwf	66,b	;volatile
  1924                           
  1925                           ; BSR set to: 15
  1926                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  1927  000D3C  010F               	movlb	15	; () banked
  1928  000D3E  8742               	bsf	66,3,b	;volatile
  1929                           
  1930                           ; BSR set to: 15
  1931                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  1932  000D40  0100               	movlb	0	; () banked
  1933  000D42  A178               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  1934  000D44  D002               	goto	l359
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  1938  000D46  010F               	movlb	15	; () banked
  1939  000D48  8142               	bsf	66,0,b	;volatile
  1940  000D4A                     l359:
  1941                           
  1942                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  1943  000D4A  0100               	movlb	0	; () banked
  1944  000D4C  A378               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  1945  000D4E  D002               	goto	l360
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  1949  000D50  010F               	movlb	15	; () banked
  1950  000D52  8342               	bsf	66,1,b	;volatile
  1951  000D54                     l360:
  1952                           
  1953                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  1954  000D54  0100               	movlb	0	; () banked
  1955  000D56  A578               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  1956  000D58  D002               	goto	l361
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  1960  000D5A  010F               	movlb	15	; () banked
  1961  000D5C  8B42               	bsf	66,5,b	;volatile
  1962  000D5E                     l361:
  1963                           
  1964                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  1965  000D5E  0100               	movlb	0	; () banked
  1966  000D60  A778               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  1967  000D62  D002               	goto	l362
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  1971  000D64  010F               	movlb	15	; () banked
  1972  000D66  8D42               	bsf	66,6,b	;volatile
  1973  000D68                     l362:
  1974                           
  1975                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  1976  000D68  0100               	movlb	0	; () banked
  1977  000D6A  A978               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  1978  000D6C  D002               	goto	l3093
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  1982  000D6E  010F               	movlb	15	; () banked
  1983  000D70  8F42               	bsf	66,7,b	;volatile
  1984  000D72                     l3093:
  1985                           
  1986                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  1987  000D72  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  1988  000D76  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  1989  000D7A  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  1990  000D7E  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  1991  000D82  0E16               	movlw	22
  1992  000D84  D006               	goto	u3350
  1993  000D86                     u3355:
  1994  000D86  0100               	movlb	0	; () banked
  1995  000D88  90D8               	bcf	status,0,c
  1996  000D8A  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  1997  000D8C  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  1998  000D8E  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  1999  000D90  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  2000  000D92                     u3350:
  2001  000D92  2EE8               	decfsz	wreg,f,c
  2002  000D94  D7F8               	goto	u3355
  2003  000D96  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2004  000D9A  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2005  000D9E  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2006  000DA2  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  2010  000DA6  0100               	movlb	0	; () banked
  2011  000DA8  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  2012  000DAA  0100               	movlb	0	; () banked
  2013  000DAC  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2014  000DAE  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2015  000DB0  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2016  000DB2  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2017                           
  2018                           ; BSR set to: 0
  2019                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  2020  000DB4  C082  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  2021                           
  2022                           ;inc\CANlib.h: 332: }
  2023  000DB8  D059               	goto	l3113
  2024  000DBA                     l358:
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;inc\CANlib.h: 334: else
  2028                           ;inc\CANlib.h: 336: {
  2029                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  2030  000DBA  010F               	movlb	15	; () banked
  2031  000DBC  9742               	bcf	66,3,b	;volatile
  2032                           
  2033                           ; BSR set to: 15
  2034                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  2035  000DBE  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  2036  000DC2  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2037  000DC6  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2038  000DCA  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2039  000DCE  0E04               	movlw	4
  2040  000DD0  D006               	goto	u3360
  2041  000DD2                     u3365:
  2042  000DD2  0100               	movlb	0	; () banked
  2043  000DD4  90D8               	bcf	status,0,c
  2044  000DD6  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2045  000DD8  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2046  000DDA  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2047  000DDC  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  2048  000DDE                     u3360:
  2049  000DDE  2EE8               	decfsz	wreg,f,c
  2050  000DE0  D7F8               	goto	u3365
  2051  000DE2  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2052  000DE6  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2053  000DEA  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2054  000DEE  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  2058  000DF2  0100               	movlb	0	; () banked
  2059  000DF4  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  2060  000DF6  0100               	movlb	0	; () banked
  2061  000DF8  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2062  000DFA  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2063  000DFC  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2064  000DFE  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  2068  000E00  C082  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  2072  000E04  0E07               	movlw	7
  2073  000E06  0100               	movlb	0	; () banked
  2074  000E08  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
  2075  000E0A  0100               	movlb	0	; () banked
  2076  000E0C  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2077  000E0E  0E00               	movlw	0
  2078  000E10  0100               	movlb	0	; () banked
  2079  000E12  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2080  000E14  0100               	movlb	0	; () banked
  2081  000E16  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2082  000E18  0E00               	movlw	0
  2083  000E1A  0100               	movlb	0	; () banked
  2084  000E1C  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2085  000E1E  0100               	movlb	0	; () banked
  2086  000E20  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2087  000E22  0E00               	movlw	0
  2088  000E24  0100               	movlb	0	; () banked
  2089  000E26  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2090  000E28  0100               	movlb	0	; () banked
  2091  000E2A  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  2095  000E2C  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
  2096  000E30  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2097  000E34  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2098  000E38  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2099  000E3C  0E05               	movlw	5
  2100  000E3E                     u3375:
  2101  000E3E  90D8               	bcf	status,0,c
  2102  000E40  0100               	movlb	0	; () banked
  2103  000E42  377E               	rlcf	??_CANsendMessage& (0+255),f,b
  2104  000E44  377F               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2105  000E46  3780               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2106  000E48  3781               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2107  000E4A  2EE8               	decfsz	wreg,f,c
  2108  000E4C  D7F8               	goto	u3375
  2109  000E4E  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2110  000E52  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2111  000E56  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2112  000E5A  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  2116  000E5E  010F               	movlb	15	; () banked
  2117  000E60  5142               	movf	66,w,b	;volatile
  2118  000E62  0B1F               	andlw	31
  2119  000E64  010F               	movlb	15	; () banked
  2120  000E66  6F42               	movwf	66,b	;volatile
  2121                           
  2122                           ; BSR set to: 15
  2123                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  2124  000E68  C082  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  2125  000E6C                     l3113:
  2126                           
  2127                           ;inc\CANlib.h: 347: }
  2128                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  2129  000E6C  0100               	movlb	0	; () banked
  2130  000E6E  A17D               	btfss	CANsendMessage@flags& (0+255),0,b
  2131  000E70  D003               	goto	l365
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  2135  000E72  010F               	movlb	15	; () banked
  2136  000E74  8140               	bsf	64,0,b	;volatile
  2137  000E76  D002               	goto	l366
  2138  000E78                     l365:
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;inc\CANlib.h: 351: else
  2142                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  2143  000E78  010F               	movlb	15	; () banked
  2144  000E7A  9140               	bcf	64,0,b	;volatile
  2145  000E7C                     l366:
  2146                           
  2147                           ; BSR set to: 15
  2148                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  2149  000E7C  0100               	movlb	0	; () banked
  2150  000E7E  A37D               	btfss	CANsendMessage@flags& (0+255),1,b
  2151  000E80  D003               	goto	l367
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  2155  000E82  010F               	movlb	15	; () banked
  2156  000E84  8340               	bsf	64,1,b	;volatile
  2157  000E86  D002               	goto	l3119
  2158  000E88                     l367:
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;inc\CANlib.h: 355: else
  2162                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  2163  000E88  010F               	movlb	15	; () banked
  2164  000E8A  9340               	bcf	64,1,b	;volatile
  2165  000E8C                     l3119:
  2166                           
  2167                           ; BSR set to: 15
  2168                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  2169  000E8C  C07A  FFD9         	movff	CANsendMessage@data,fsr2l
  2170  000E90  C07B  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2171  000E94  50DF               	movf	indf2,w,c
  2172  000E96  010F               	movlb	15	; () banked
  2173  000E98  6F46               	movwf	70,b	;volatile
  2174                           
  2175                           ; BSR set to: 15
  2176                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  2177  000E9A  0100               	movlb	0	; () banked
  2178  000E9C  EE20 F001          	lfsr	2,1
  2179  000EA0  517A               	movf	CANsendMessage@data& (0+255),w,b
  2180  000EA2  26D9               	addwf	fsr2l,f,c
  2181  000EA4  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2182  000EA6  22DA               	addwfc	fsr2h,f,c
  2183  000EA8  50DF               	movf	indf2,w,c
  2184  000EAA  010F               	movlb	15	; () banked
  2185  000EAC  6F47               	movwf	71,b	;volatile
  2186                           
  2187                           ; BSR set to: 15
  2188                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  2189  000EAE  0100               	movlb	0	; () banked
  2190  000EB0  EE20 F002          	lfsr	2,2
  2191  000EB4  517A               	movf	CANsendMessage@data& (0+255),w,b
  2192  000EB6  26D9               	addwf	fsr2l,f,c
  2193  000EB8  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2194  000EBA  22DA               	addwfc	fsr2h,f,c
  2195  000EBC  50DF               	movf	indf2,w,c
  2196  000EBE  010F               	movlb	15	; () banked
  2197  000EC0  6F48               	movwf	72,b	;volatile
  2198                           
  2199                           ; BSR set to: 15
  2200                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  2201  000EC2  0100               	movlb	0	; () banked
  2202  000EC4  EE20 F003          	lfsr	2,3
  2203  000EC8  517A               	movf	CANsendMessage@data& (0+255),w,b
  2204  000ECA  26D9               	addwf	fsr2l,f,c
  2205  000ECC  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2206  000ECE  22DA               	addwfc	fsr2h,f,c
  2207  000ED0  50DF               	movf	indf2,w,c
  2208  000ED2  010F               	movlb	15	; () banked
  2209  000ED4  6F49               	movwf	73,b	;volatile
  2210                           
  2211                           ; BSR set to: 15
  2212                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  2213  000ED6  0100               	movlb	0	; () banked
  2214  000ED8  EE20 F004          	lfsr	2,4
  2215  000EDC  517A               	movf	CANsendMessage@data& (0+255),w,b
  2216  000EDE  26D9               	addwf	fsr2l,f,c
  2217  000EE0  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2218  000EE2  22DA               	addwfc	fsr2h,f,c
  2219  000EE4  50DF               	movf	indf2,w,c
  2220  000EE6  010F               	movlb	15	; () banked
  2221  000EE8  6F4A               	movwf	74,b	;volatile
  2222                           
  2223                           ; BSR set to: 15
  2224                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  2225  000EEA  0100               	movlb	0	; () banked
  2226  000EEC  EE20 F005          	lfsr	2,5
  2227  000EF0  517A               	movf	CANsendMessage@data& (0+255),w,b
  2228  000EF2  26D9               	addwf	fsr2l,f,c
  2229  000EF4  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2230  000EF6  22DA               	addwfc	fsr2h,f,c
  2231  000EF8  50DF               	movf	indf2,w,c
  2232  000EFA  010F               	movlb	15	; () banked
  2233  000EFC  6F4B               	movwf	75,b	;volatile
  2234                           
  2235                           ; BSR set to: 15
  2236                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  2237  000EFE  0100               	movlb	0	; () banked
  2238  000F00  EE20 F006          	lfsr	2,6
  2239  000F04  517A               	movf	CANsendMessage@data& (0+255),w,b
  2240  000F06  26D9               	addwf	fsr2l,f,c
  2241  000F08  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2242  000F0A  22DA               	addwfc	fsr2h,f,c
  2243  000F0C  50DF               	movf	indf2,w,c
  2244  000F0E  010F               	movlb	15	; () banked
  2245  000F10  6F4C               	movwf	76,b	;volatile
  2246                           
  2247                           ; BSR set to: 15
  2248                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  2249  000F12  0100               	movlb	0	; () banked
  2250  000F14  EE20 F007          	lfsr	2,7
  2251  000F18  517A               	movf	CANsendMessage@data& (0+255),w,b
  2252  000F1A  26D9               	addwf	fsr2l,f,c
  2253  000F1C  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2254  000F1E  22DA               	addwfc	fsr2h,f,c
  2255  000F20  50DF               	movf	indf2,w,c
  2256  000F22  010F               	movlb	15	; () banked
  2257  000F24  6F4D               	movwf	77,b	;volatile
  2258                           
  2259                           ; BSR set to: 15
  2260                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  2261  000F26  010F               	movlb	15	; () banked
  2262  000F28  8740               	bsf	64,3,b	;volatile
  2263                           
  2264                           ; BSR set to: 15
  2265                           ;inc\CANlib.h: 368: return;
  2266  000F2A  0012               	return	
  2267  000F2C                     l355:
  2268                           
  2269                           ; BSR set to: 15
  2270                           ;inc\CANlib.h: 369: }
  2271                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  2272  000F2C  010F               	movlb	15	; () banked
  2273  000F2E  B730               	btfsc	48,3,b	;volatile
  2274  000F30  D13F               	goto	l370
  2275                           
  2276                           ; BSR set to: 15
  2277                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  2278  000F32  C07C  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  2279                           
  2280                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  2281  000F36  0100               	movlb	0	; () banked
  2282  000F38  AD7D               	btfss	CANsendMessage@flags& (0+255),6,b
  2283  000F3A  D003               	goto	l371
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  2287  000F3C  010F               	movlb	15	; () banked
  2288  000F3E  8D35               	bsf	53,6,b	;volatile
  2289  000F40  D002               	goto	l372
  2290  000F42                     l371:
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;inc\CANlib.h: 378: else
  2294                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  2295  000F42  010F               	movlb	15	; () banked
  2296  000F44  9D35               	bcf	53,6,b	;volatile
  2297  000F46                     l372:
  2298                           
  2299                           ; BSR set to: 15
  2300                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  2301  000F46  0100               	movlb	0	; () banked
  2302  000F48  A77D               	btfss	CANsendMessage@flags& (0+255),3,b
  2303  000F4A  D079               	goto	l373
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;inc\CANlib.h: 382: {
  2307                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  2308  000F4C  0100               	movlb	0	; () banked
  2309  000F4E  5176               	movf	CANsendMessage@identifier& (0+255),w,b
  2310  000F50  0100               	movlb	0	; () banked
  2311  000F52  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2312  000F54  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2313  000F56  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2314  000F58  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  2318  000F5A  C082  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  2322  000F5E  0E00               	movlw	0
  2323  000F60  0100               	movlb	0	; () banked
  2324  000F62  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
  2325  000F64  0100               	movlb	0	; () banked
  2326  000F66  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2327  000F68  0EFF               	movlw	255
  2328  000F6A  0100               	movlb	0	; () banked
  2329  000F6C  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2330  000F6E  0100               	movlb	0	; () banked
  2331  000F70  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2332  000F72  0E00               	movlw	0
  2333  000F74  0100               	movlb	0	; () banked
  2334  000F76  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2335  000F78  0100               	movlb	0	; () banked
  2336  000F7A  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2337  000F7C  0E00               	movlw	0
  2338  000F7E  0100               	movlb	0	; () banked
  2339  000F80  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2340  000F82  0100               	movlb	0	; () banked
  2341  000F84  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  2345  000F86  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
  2346  000F8A  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2347  000F8E  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2348  000F92  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2349  000F96  C07F  F07E         	movff	??_CANsendMessage+1,??_CANsendMessage
  2350  000F9A  C080  F07F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2351  000F9E  C081  F080         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2352  000FA2  0100               	movlb	0	; () banked
  2353  000FA4  6B81               	clrf	(??_CANsendMessage+3)& (0+255),b
  2354  000FA6  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2355  000FAA  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2356  000FAE  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2357  000FB2  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  2361  000FB6  C082  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  2365  000FBA  0E00               	movlw	0
  2366  000FBC  010F               	movlb	15	; () banked
  2367  000FBE  6F32               	movwf	50,b	;volatile
  2368                           
  2369                           ; BSR set to: 15
  2370                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  2371  000FC0  010F               	movlb	15	; () banked
  2372  000FC2  8732               	bsf	50,3,b	;volatile
  2373                           
  2374                           ; BSR set to: 15
  2375                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  2376  000FC4  0100               	movlb	0	; () banked
  2377  000FC6  A178               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2378  000FC8  D002               	goto	l374
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  2382  000FCA  010F               	movlb	15	; () banked
  2383  000FCC  8132               	bsf	50,0,b	;volatile
  2384  000FCE                     l374:
  2385                           
  2386                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  2387  000FCE  0100               	movlb	0	; () banked
  2388  000FD0  A378               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2389  000FD2  D002               	goto	l375
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  2393  000FD4  010F               	movlb	15	; () banked
  2394  000FD6  8332               	bsf	50,1,b	;volatile
  2395  000FD8                     l375:
  2396                           
  2397                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  2398  000FD8  0100               	movlb	0	; () banked
  2399  000FDA  A578               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2400  000FDC  D002               	goto	l376
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  2404  000FDE  010F               	movlb	15	; () banked
  2405  000FE0  8B32               	bsf	50,5,b	;volatile
  2406  000FE2                     l376:
  2407                           
  2408                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  2409  000FE2  0100               	movlb	0	; () banked
  2410  000FE4  A778               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2411  000FE6  D002               	goto	l377
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  2415  000FE8  010F               	movlb	15	; () banked
  2416  000FEA  8D32               	bsf	50,6,b	;volatile
  2417  000FEC                     l377:
  2418                           
  2419                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  2420  000FEC  0100               	movlb	0	; () banked
  2421  000FEE  A978               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2422  000FF0  D002               	goto	l3169
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  2426  000FF2  010F               	movlb	15	; () banked
  2427  000FF4  8F32               	bsf	50,7,b	;volatile
  2428  000FF6                     l3169:
  2429                           
  2430                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  2431  000FF6  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  2432  000FFA  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2433  000FFE  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2434  001002  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2435  001006  0E16               	movlw	22
  2436  001008  D006               	goto	u3480
  2437  00100A                     u3485:
  2438  00100A  0100               	movlb	0	; () banked
  2439  00100C  90D8               	bcf	status,0,c
  2440  00100E  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2441  001010  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2442  001012  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2443  001014  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  2444  001016                     u3480:
  2445  001016  2EE8               	decfsz	wreg,f,c
  2446  001018  D7F8               	goto	u3485
  2447  00101A  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2448  00101E  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2449  001022  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2450  001026  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  2454  00102A  0100               	movlb	0	; () banked
  2455  00102C  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  2456  00102E  0100               	movlb	0	; () banked
  2457  001030  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2458  001032  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2459  001034  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2460  001036  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  2464  001038  C082  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2465                           
  2466                           ;inc\CANlib.h: 407: }
  2467  00103C  D059               	goto	l3189
  2468  00103E                     l373:
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;inc\CANlib.h: 409: else
  2472                           ;inc\CANlib.h: 411: {
  2473                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  2474  00103E  010F               	movlb	15	; () banked
  2475  001040  9732               	bcf	50,3,b	;volatile
  2476                           
  2477                           ; BSR set to: 15
  2478                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  2479  001042  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  2480  001046  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2481  00104A  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2482  00104E  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2483  001052  0E04               	movlw	4
  2484  001054  D006               	goto	u3490
  2485  001056                     u3495:
  2486  001056  0100               	movlb	0	; () banked
  2487  001058  90D8               	bcf	status,0,c
  2488  00105A  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2489  00105C  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2490  00105E  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2491  001060  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  2492  001062                     u3490:
  2493  001062  2EE8               	decfsz	wreg,f,c
  2494  001064  D7F8               	goto	u3495
  2495  001066  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2496  00106A  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2497  00106E  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2498  001072  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  2502  001076  0100               	movlb	0	; () banked
  2503  001078  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  2504  00107A  0100               	movlb	0	; () banked
  2505  00107C  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2506  00107E  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2507  001080  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2508  001082  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  2512  001084  C082  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  2516  001088  0E07               	movlw	7
  2517  00108A  0100               	movlb	0	; () banked
  2518  00108C  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
  2519  00108E  0100               	movlb	0	; () banked
  2520  001090  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2521  001092  0E00               	movlw	0
  2522  001094  0100               	movlb	0	; () banked
  2523  001096  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2524  001098  0100               	movlb	0	; () banked
  2525  00109A  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2526  00109C  0E00               	movlw	0
  2527  00109E  0100               	movlb	0	; () banked
  2528  0010A0  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2529  0010A2  0100               	movlb	0	; () banked
  2530  0010A4  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2531  0010A6  0E00               	movlw	0
  2532  0010A8  0100               	movlb	0	; () banked
  2533  0010AA  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2534  0010AC  0100               	movlb	0	; () banked
  2535  0010AE  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  2539  0010B0  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
  2540  0010B4  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2541  0010B8  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2542  0010BC  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2543  0010C0  0E05               	movlw	5
  2544  0010C2                     u3505:
  2545  0010C2  90D8               	bcf	status,0,c
  2546  0010C4  0100               	movlb	0	; () banked
  2547  0010C6  377E               	rlcf	??_CANsendMessage& (0+255),f,b
  2548  0010C8  377F               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2549  0010CA  3780               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2550  0010CC  3781               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2551  0010CE  2EE8               	decfsz	wreg,f,c
  2552  0010D0  D7F8               	goto	u3505
  2553  0010D2  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2554  0010D6  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2555  0010DA  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2556  0010DE  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  2560  0010E2  010F               	movlb	15	; () banked
  2561  0010E4  5132               	movf	50,w,b	;volatile
  2562  0010E6  0B1F               	andlw	31
  2563  0010E8  010F               	movlb	15	; () banked
  2564  0010EA  6F32               	movwf	50,b	;volatile
  2565                           
  2566                           ; BSR set to: 15
  2567                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  2568  0010EC  C082  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  2569  0010F0                     l3189:
  2570                           
  2571                           ;inc\CANlib.h: 422: }
  2572                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  2573  0010F0  0100               	movlb	0	; () banked
  2574  0010F2  A17D               	btfss	CANsendMessage@flags& (0+255),0,b
  2575  0010F4  D003               	goto	l380
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  2579  0010F6  010F               	movlb	15	; () banked
  2580  0010F8  8130               	bsf	48,0,b	;volatile
  2581  0010FA  D002               	goto	l381
  2582  0010FC                     l380:
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;inc\CANlib.h: 426: else
  2586                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  2587  0010FC  010F               	movlb	15	; () banked
  2588  0010FE  9130               	bcf	48,0,b	;volatile
  2589  001100                     l381:
  2590                           
  2591                           ; BSR set to: 15
  2592                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  2593  001100  0100               	movlb	0	; () banked
  2594  001102  A37D               	btfss	CANsendMessage@flags& (0+255),1,b
  2595  001104  D003               	goto	l382
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  2599  001106  010F               	movlb	15	; () banked
  2600  001108  8330               	bsf	48,1,b	;volatile
  2601  00110A  D002               	goto	l3195
  2602  00110C                     l382:
  2603                           
  2604                           ; BSR set to: 0
  2605                           ;inc\CANlib.h: 430: else
  2606                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  2607  00110C  010F               	movlb	15	; () banked
  2608  00110E  9330               	bcf	48,1,b	;volatile
  2609  001110                     l3195:
  2610                           
  2611                           ; BSR set to: 15
  2612                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  2613  001110  C07A  FFD9         	movff	CANsendMessage@data,fsr2l
  2614  001114  C07B  FFDA         	movff	CANsendMessage@data+1,fsr2h
  2615  001118  50DF               	movf	indf2,w,c
  2616  00111A  010F               	movlb	15	; () banked
  2617  00111C  6F36               	movwf	54,b	;volatile
  2618                           
  2619                           ; BSR set to: 15
  2620                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  2621  00111E  0100               	movlb	0	; () banked
  2622  001120  EE20 F001          	lfsr	2,1
  2623  001124  517A               	movf	CANsendMessage@data& (0+255),w,b
  2624  001126  26D9               	addwf	fsr2l,f,c
  2625  001128  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2626  00112A  22DA               	addwfc	fsr2h,f,c
  2627  00112C  50DF               	movf	indf2,w,c
  2628  00112E  010F               	movlb	15	; () banked
  2629  001130  6F37               	movwf	55,b	;volatile
  2630                           
  2631                           ; BSR set to: 15
  2632                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  2633  001132  0100               	movlb	0	; () banked
  2634  001134  EE20 F002          	lfsr	2,2
  2635  001138  517A               	movf	CANsendMessage@data& (0+255),w,b
  2636  00113A  26D9               	addwf	fsr2l,f,c
  2637  00113C  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2638  00113E  22DA               	addwfc	fsr2h,f,c
  2639  001140  50DF               	movf	indf2,w,c
  2640  001142  010F               	movlb	15	; () banked
  2641  001144  6F38               	movwf	56,b	;volatile
  2642                           
  2643                           ; BSR set to: 15
  2644                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  2645  001146  0100               	movlb	0	; () banked
  2646  001148  EE20 F003          	lfsr	2,3
  2647  00114C  517A               	movf	CANsendMessage@data& (0+255),w,b
  2648  00114E  26D9               	addwf	fsr2l,f,c
  2649  001150  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2650  001152  22DA               	addwfc	fsr2h,f,c
  2651  001154  50DF               	movf	indf2,w,c
  2652  001156  010F               	movlb	15	; () banked
  2653  001158  6F39               	movwf	57,b	;volatile
  2654                           
  2655                           ; BSR set to: 15
  2656                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  2657  00115A  0100               	movlb	0	; () banked
  2658  00115C  EE20 F004          	lfsr	2,4
  2659  001160  517A               	movf	CANsendMessage@data& (0+255),w,b
  2660  001162  26D9               	addwf	fsr2l,f,c
  2661  001164  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2662  001166  22DA               	addwfc	fsr2h,f,c
  2663  001168  50DF               	movf	indf2,w,c
  2664  00116A  010F               	movlb	15	; () banked
  2665  00116C  6F3A               	movwf	58,b	;volatile
  2666                           
  2667                           ; BSR set to: 15
  2668                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  2669  00116E  0100               	movlb	0	; () banked
  2670  001170  EE20 F005          	lfsr	2,5
  2671  001174  517A               	movf	CANsendMessage@data& (0+255),w,b
  2672  001176  26D9               	addwf	fsr2l,f,c
  2673  001178  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2674  00117A  22DA               	addwfc	fsr2h,f,c
  2675  00117C  50DF               	movf	indf2,w,c
  2676  00117E  010F               	movlb	15	; () banked
  2677  001180  6F3B               	movwf	59,b	;volatile
  2678                           
  2679                           ; BSR set to: 15
  2680                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  2681  001182  0100               	movlb	0	; () banked
  2682  001184  EE20 F006          	lfsr	2,6
  2683  001188  517A               	movf	CANsendMessage@data& (0+255),w,b
  2684  00118A  26D9               	addwf	fsr2l,f,c
  2685  00118C  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2686  00118E  22DA               	addwfc	fsr2h,f,c
  2687  001190  50DF               	movf	indf2,w,c
  2688  001192  010F               	movlb	15	; () banked
  2689  001194  6F3C               	movwf	60,b	;volatile
  2690                           
  2691                           ; BSR set to: 15
  2692                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  2693  001196  0100               	movlb	0	; () banked
  2694  001198  EE20 F007          	lfsr	2,7
  2695  00119C  517A               	movf	CANsendMessage@data& (0+255),w,b
  2696  00119E  26D9               	addwf	fsr2l,f,c
  2697  0011A0  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  2698  0011A2  22DA               	addwfc	fsr2h,f,c
  2699  0011A4  50DF               	movf	indf2,w,c
  2700  0011A6  010F               	movlb	15	; () banked
  2701  0011A8  6F3D               	movwf	61,b	;volatile
  2702                           
  2703                           ; BSR set to: 15
  2704                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  2705  0011AA  010F               	movlb	15	; () banked
  2706  0011AC  8730               	bsf	48,3,b	;volatile
  2707                           
  2708                           ; BSR set to: 15
  2709                           ;inc\CANlib.h: 444: return;
  2710  0011AE  0012               	return	
  2711  0011B0                     l370:
  2712                           
  2713                           ; BSR set to: 15
  2714                           ;inc\CANlib.h: 445: }
  2715                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  2716  0011B0  010F               	movlb	15	; () banked
  2717  0011B2  B720               	btfsc	32,3,b	;volatile
  2718  0011B4  0012               	return	
  2719                           
  2720                           ; BSR set to: 15
  2721                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  2722  0011B6  C07C  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  2723                           
  2724                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  2725  0011BA  0100               	movlb	0	; () banked
  2726  0011BC  AD7D               	btfss	CANsendMessage@flags& (0+255),6,b
  2727  0011BE  D003               	goto	l385
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  2731  0011C0  010F               	movlb	15	; () banked
  2732  0011C2  8D25               	bsf	37,6,b	;volatile
  2733  0011C4  D002               	goto	l386
  2734  0011C6                     l385:
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;inc\CANlib.h: 454: else
  2738                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  2739  0011C6  010F               	movlb	15	; () banked
  2740  0011C8  9D25               	bcf	37,6,b	;volatile
  2741  0011CA                     l386:
  2742                           
  2743                           ; BSR set to: 15
  2744                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  2745  0011CA  0100               	movlb	0	; () banked
  2746  0011CC  A77D               	btfss	CANsendMessage@flags& (0+255),3,b
  2747  0011CE  D079               	goto	l387
  2748                           
  2749                           ; BSR set to: 0
  2750                           ;inc\CANlib.h: 458: {
  2751                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  2752  0011D0  0100               	movlb	0	; () banked
  2753  0011D2  5176               	movf	CANsendMessage@identifier& (0+255),w,b
  2754  0011D4  0100               	movlb	0	; () banked
  2755  0011D6  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2756  0011D8  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2757  0011DA  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2758  0011DC  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  2762  0011DE  C082  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  2766  0011E2  0E00               	movlw	0
  2767  0011E4  0100               	movlb	0	; () banked
  2768  0011E6  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
  2769  0011E8  0100               	movlb	0	; () banked
  2770  0011EA  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2771  0011EC  0EFF               	movlw	255
  2772  0011EE  0100               	movlb	0	; () banked
  2773  0011F0  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2774  0011F2  0100               	movlb	0	; () banked
  2775  0011F4  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2776  0011F6  0E00               	movlw	0
  2777  0011F8  0100               	movlb	0	; () banked
  2778  0011FA  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2779  0011FC  0100               	movlb	0	; () banked
  2780  0011FE  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2781  001200  0E00               	movlw	0
  2782  001202  0100               	movlb	0	; () banked
  2783  001204  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2784  001206  0100               	movlb	0	; () banked
  2785  001208  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2786                           
  2787                           ; BSR set to: 0
  2788                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  2789  00120A  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
  2790  00120E  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2791  001212  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2792  001216  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2793  00121A  C07F  F07E         	movff	??_CANsendMessage+1,??_CANsendMessage
  2794  00121E  C080  F07F         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  2795  001222  C081  F080         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  2796  001226  0100               	movlb	0	; () banked
  2797  001228  6B81               	clrf	(??_CANsendMessage+3)& (0+255),b
  2798  00122A  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2799  00122E  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2800  001232  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2801  001236  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  2805  00123A  C082  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  2809  00123E  0E00               	movlw	0
  2810  001240  010F               	movlb	15	; () banked
  2811  001242  6F22               	movwf	34,b	;volatile
  2812                           
  2813                           ; BSR set to: 15
  2814                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  2815  001244  010F               	movlb	15	; () banked
  2816  001246  8722               	bsf	34,3,b	;volatile
  2817                           
  2818                           ; BSR set to: 15
  2819                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  2820  001248  0100               	movlb	0	; () banked
  2821  00124A  A178               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  2822  00124C  D002               	goto	l388
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  2826  00124E  010F               	movlb	15	; () banked
  2827  001250  8122               	bsf	34,0,b	;volatile
  2828  001252                     l388:
  2829                           
  2830                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  2831  001252  0100               	movlb	0	; () banked
  2832  001254  A378               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  2833  001256  D002               	goto	l389
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  2837  001258  010F               	movlb	15	; () banked
  2838  00125A  8322               	bsf	34,1,b	;volatile
  2839  00125C                     l389:
  2840                           
  2841                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  2842  00125C  0100               	movlb	0	; () banked
  2843  00125E  A578               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  2844  001260  D002               	goto	l390
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  2848  001262  010F               	movlb	15	; () banked
  2849  001264  8B22               	bsf	34,5,b	;volatile
  2850  001266                     l390:
  2851                           
  2852                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  2853  001266  0100               	movlb	0	; () banked
  2854  001268  A778               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  2855  00126A  D002               	goto	l391
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  2859  00126C  010F               	movlb	15	; () banked
  2860  00126E  8D22               	bsf	34,6,b	;volatile
  2861  001270                     l391:
  2862                           
  2863                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  2864  001270  0100               	movlb	0	; () banked
  2865  001272  A978               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  2866  001274  D002               	goto	l3245
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  2870  001276  010F               	movlb	15	; () banked
  2871  001278  8F22               	bsf	34,7,b	;volatile
  2872  00127A                     l3245:
  2873                           
  2874                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  2875  00127A  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  2876  00127E  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2877  001282  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2878  001286  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2879  00128A  0E16               	movlw	22
  2880  00128C  D006               	goto	u3610
  2881  00128E                     u3615:
  2882  00128E  0100               	movlb	0	; () banked
  2883  001290  90D8               	bcf	status,0,c
  2884  001292  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2885  001294  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2886  001296  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2887  001298  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  2888  00129A                     u3610:
  2889  00129A  2EE8               	decfsz	wreg,f,c
  2890  00129C  D7F8               	goto	u3615
  2891  00129E  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2892  0012A2  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2893  0012A6  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2894  0012AA  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  2898  0012AE  0100               	movlb	0	; () banked
  2899  0012B0  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  2900  0012B2  0100               	movlb	0	; () banked
  2901  0012B4  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2902  0012B6  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2903  0012B8  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2904  0012BA  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  2908  0012BC  C082  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2909                           
  2910                           ;inc\CANlib.h: 483: }
  2911  0012C0  D059               	goto	l3265
  2912  0012C2                     l387:
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;inc\CANlib.h: 485: else
  2916                           ;inc\CANlib.h: 487: {
  2917                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  2918  0012C2  010F               	movlb	15	; () banked
  2919  0012C4  9722               	bcf	34,3,b	;volatile
  2920                           
  2921                           ; BSR set to: 15
  2922                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  2923  0012C6  C076  F07E         	movff	CANsendMessage@identifier,??_CANsendMessage
  2924  0012CA  C077  F07F         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  2925  0012CE  C078  F080         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  2926  0012D2  C079  F081         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  2927  0012D6  0E04               	movlw	4
  2928  0012D8  D006               	goto	u3620
  2929  0012DA                     u3625:
  2930  0012DA  0100               	movlb	0	; () banked
  2931  0012DC  90D8               	bcf	status,0,c
  2932  0012DE  3381               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  2933  0012E0  3380               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  2934  0012E2  337F               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  2935  0012E4  337E               	rrcf	??_CANsendMessage& (0+255),f,b
  2936  0012E6                     u3620:
  2937  0012E6  2EE8               	decfsz	wreg,f,c
  2938  0012E8  D7F8               	goto	u3625
  2939  0012EA  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2940  0012EE  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2941  0012F2  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  2942  0012F6  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  2946  0012FA  0100               	movlb	0	; () banked
  2947  0012FC  5182               	movf	CANsendMessage@tamp& (0+255),w,b
  2948  0012FE  0100               	movlb	0	; () banked
  2949  001300  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2950  001302  6B83               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  2951  001304  6B84               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  2952  001306  6B85               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  2956  001308  C082  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  2957                           
  2958                           ; BSR set to: 0
  2959                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  2960  00130C  0E07               	movlw	7
  2961  00130E  0100               	movlb	0	; () banked
  2962  001310  1576               	andwf	CANsendMessage@identifier& (0+255),w,b
  2963  001312  0100               	movlb	0	; () banked
  2964  001314  6F82               	movwf	CANsendMessage@tamp& (0+255),b
  2965  001316  0E00               	movlw	0
  2966  001318  0100               	movlb	0	; () banked
  2967  00131A  1577               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  2968  00131C  0100               	movlb	0	; () banked
  2969  00131E  6F83               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  2970  001320  0E00               	movlw	0
  2971  001322  0100               	movlb	0	; () banked
  2972  001324  1578               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  2973  001326  0100               	movlb	0	; () banked
  2974  001328  6F84               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  2975  00132A  0E00               	movlw	0
  2976  00132C  0100               	movlb	0	; () banked
  2977  00132E  1579               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  2978  001330  0100               	movlb	0	; () banked
  2979  001332  6F85               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  2983  001334  C082  F07E         	movff	CANsendMessage@tamp,??_CANsendMessage
  2984  001338  C083  F07F         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  2985  00133C  C084  F080         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  2986  001340  C085  F081         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  2987  001344  0E05               	movlw	5
  2988  001346                     u3635:
  2989  001346  90D8               	bcf	status,0,c
  2990  001348  0100               	movlb	0	; () banked
  2991  00134A  377E               	rlcf	??_CANsendMessage& (0+255),f,b
  2992  00134C  377F               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  2993  00134E  3780               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  2994  001350  3781               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  2995  001352  2EE8               	decfsz	wreg,f,c
  2996  001354  D7F8               	goto	u3635
  2997  001356  C07E  F082         	movff	??_CANsendMessage,CANsendMessage@tamp
  2998  00135A  C07F  F083         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  2999  00135E  C080  F084         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3000  001362  C081  F085         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  3004  001366  010F               	movlb	15	; () banked
  3005  001368  5122               	movf	34,w,b	;volatile
  3006  00136A  0B1F               	andlw	31
  3007  00136C  010F               	movlb	15	; () banked
  3008  00136E  6F22               	movwf	34,b	;volatile
  3009                           
  3010                           ; BSR set to: 15
  3011                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  3012  001370  C082  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  3013  001374                     l3265:
  3014                           
  3015                           ;inc\CANlib.h: 498: }
  3016                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  3017  001374  0100               	movlb	0	; () banked
  3018  001376  A17D               	btfss	CANsendMessage@flags& (0+255),0,b
  3019  001378  D003               	goto	l394
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  3023  00137A  010F               	movlb	15	; () banked
  3024  00137C  8120               	bsf	32,0,b	;volatile
  3025  00137E  D002               	goto	l395
  3026  001380                     l394:
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;inc\CANlib.h: 502: else
  3030                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  3031  001380  010F               	movlb	15	; () banked
  3032  001382  9120               	bcf	32,0,b	;volatile
  3033  001384                     l395:
  3034                           
  3035                           ; BSR set to: 15
  3036                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  3037  001384  0100               	movlb	0	; () banked
  3038  001386  A37D               	btfss	CANsendMessage@flags& (0+255),1,b
  3039  001388  D003               	goto	l396
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  3043  00138A  010F               	movlb	15	; () banked
  3044  00138C  8320               	bsf	32,1,b	;volatile
  3045  00138E  D002               	goto	l3271
  3046  001390                     l396:
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;inc\CANlib.h: 506: else
  3050                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  3051  001390  010F               	movlb	15	; () banked
  3052  001392  9320               	bcf	32,1,b	;volatile
  3053  001394                     l3271:
  3054                           
  3055                           ; BSR set to: 15
  3056                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  3057  001394  C07A  FFD9         	movff	CANsendMessage@data,fsr2l
  3058  001398  C07B  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3059  00139C  50DF               	movf	indf2,w,c
  3060  00139E  010F               	movlb	15	; () banked
  3061  0013A0  6F26               	movwf	38,b	;volatile
  3062                           
  3063                           ; BSR set to: 15
  3064                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  3065  0013A2  0100               	movlb	0	; () banked
  3066  0013A4  EE20 F001          	lfsr	2,1
  3067  0013A8  517A               	movf	CANsendMessage@data& (0+255),w,b
  3068  0013AA  26D9               	addwf	fsr2l,f,c
  3069  0013AC  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3070  0013AE  22DA               	addwfc	fsr2h,f,c
  3071  0013B0  50DF               	movf	indf2,w,c
  3072  0013B2  010F               	movlb	15	; () banked
  3073  0013B4  6F27               	movwf	39,b	;volatile
  3074                           
  3075                           ; BSR set to: 15
  3076                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  3077  0013B6  0100               	movlb	0	; () banked
  3078  0013B8  EE20 F002          	lfsr	2,2
  3079  0013BC  517A               	movf	CANsendMessage@data& (0+255),w,b
  3080  0013BE  26D9               	addwf	fsr2l,f,c
  3081  0013C0  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3082  0013C2  22DA               	addwfc	fsr2h,f,c
  3083  0013C4  50DF               	movf	indf2,w,c
  3084  0013C6  010F               	movlb	15	; () banked
  3085  0013C8  6F28               	movwf	40,b	;volatile
  3086                           
  3087                           ; BSR set to: 15
  3088                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  3089  0013CA  0100               	movlb	0	; () banked
  3090  0013CC  EE20 F003          	lfsr	2,3
  3091  0013D0  517A               	movf	CANsendMessage@data& (0+255),w,b
  3092  0013D2  26D9               	addwf	fsr2l,f,c
  3093  0013D4  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3094  0013D6  22DA               	addwfc	fsr2h,f,c
  3095  0013D8  50DF               	movf	indf2,w,c
  3096  0013DA  010F               	movlb	15	; () banked
  3097  0013DC  6F29               	movwf	41,b	;volatile
  3098                           
  3099                           ; BSR set to: 15
  3100                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  3101  0013DE  0100               	movlb	0	; () banked
  3102  0013E0  EE20 F004          	lfsr	2,4
  3103  0013E4  517A               	movf	CANsendMessage@data& (0+255),w,b
  3104  0013E6  26D9               	addwf	fsr2l,f,c
  3105  0013E8  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3106  0013EA  22DA               	addwfc	fsr2h,f,c
  3107  0013EC  50DF               	movf	indf2,w,c
  3108  0013EE  010F               	movlb	15	; () banked
  3109  0013F0  6F2A               	movwf	42,b	;volatile
  3110                           
  3111                           ; BSR set to: 15
  3112                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  3113  0013F2  0100               	movlb	0	; () banked
  3114  0013F4  EE20 F005          	lfsr	2,5
  3115  0013F8  517A               	movf	CANsendMessage@data& (0+255),w,b
  3116  0013FA  26D9               	addwf	fsr2l,f,c
  3117  0013FC  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3118  0013FE  22DA               	addwfc	fsr2h,f,c
  3119  001400  50DF               	movf	indf2,w,c
  3120  001402  010F               	movlb	15	; () banked
  3121  001404  6F2B               	movwf	43,b	;volatile
  3122                           
  3123                           ; BSR set to: 15
  3124                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  3125  001406  0100               	movlb	0	; () banked
  3126  001408  EE20 F006          	lfsr	2,6
  3127  00140C  517A               	movf	CANsendMessage@data& (0+255),w,b
  3128  00140E  26D9               	addwf	fsr2l,f,c
  3129  001410  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3130  001412  22DA               	addwfc	fsr2h,f,c
  3131  001414  50DF               	movf	indf2,w,c
  3132  001416  010F               	movlb	15	; () banked
  3133  001418  6F2C               	movwf	44,b	;volatile
  3134                           
  3135                           ; BSR set to: 15
  3136                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  3137  00141A  0100               	movlb	0	; () banked
  3138  00141C  EE20 F007          	lfsr	2,7
  3139  001420  517A               	movf	CANsendMessage@data& (0+255),w,b
  3140  001422  26D9               	addwf	fsr2l,f,c
  3141  001424  517B               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3142  001426  22DA               	addwfc	fsr2h,f,c
  3143  001428  50DF               	movf	indf2,w,c
  3144  00142A  010F               	movlb	15	; () banked
  3145  00142C  6F2D               	movwf	45,b	;volatile
  3146                           
  3147                           ; BSR set to: 15
  3148                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  3149  00142E  010F               	movlb	15	; () banked
  3150  001430  8720               	bsf	32,3,b	;volatile
  3151                           
  3152                           ; BSR set to: 15
  3153                           ;inc\CANlib.h: 520: return;
  3154  001432  0012               	return	
  3155  001434                     __end_of_CANsendMessage:
  3156                           	opt stack 0
  3157                           tblptru	equ	0xFF8
  3158                           tblptrh	equ	0xFF7
  3159                           tblptrl	equ	0xFF6
  3160                           tablat	equ	0xFF5
  3161                           prodh	equ	0xFF4
  3162                           prodl	equ	0xFF3
  3163                           postinc0	equ	0xFEE
  3164                           wreg	equ	0xFE8
  3165                           indf2	equ	0xFDF
  3166                           fsr2h	equ	0xFDA
  3167                           fsr2l	equ	0xFD9
  3168                           status	equ	0xFD8
  3169                           
  3170 ;; *************** function _CANisTxReady *****************
  3171 ;; Defined at:
  3172 ;;		line 1154 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      unsigned char 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3186 ;;      Params:         0       0       0       0
  3187 ;;      Locals:         0       1       0       0
  3188 ;;      Temps:          0       0       0       0
  3189 ;;      Totals:         0       1       0       0
  3190 ;;Total ram usage:        1 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    5
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_send_data
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text5
  3201  002802                     __ptext5:
  3202                           	opt stack 0
  3203  002802                     _CANisTxReady:
  3204                           	opt stack 24
  3205                           
  3206                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  3207                           
  3208                           ; BSR set to: 15
  3209                           ;incstack = 0
  3210  002802  0E01               	movlw	1
  3211  002804  0100               	movlb	0	; () banked
  3212  002806  6F76               	movwf	_CANisTxReady$2798& (0+255),b
  3213                           
  3214                           ; BSR set to: 0
  3215  002808  010F               	movlb	15	; () banked
  3216  00280A  A740               	btfss	64,3,b	;volatile
  3217  00280C  D009               	goto	l548
  3218                           
  3219                           ; BSR set to: 15
  3220  00280E  010F               	movlb	15	; () banked
  3221  002810  A730               	btfss	48,3,b	;volatile
  3222  002812  D006               	goto	l548
  3223                           
  3224                           ; BSR set to: 15
  3225  002814  010F               	movlb	15	; () banked
  3226  002816  A720               	btfss	32,3,b	;volatile
  3227  002818  D003               	goto	l548
  3228                           
  3229                           ; BSR set to: 15
  3230  00281A  0E00               	movlw	0
  3231  00281C  0100               	movlb	0	; () banked
  3232  00281E  6F76               	movwf	_CANisTxReady$2798& (0+255),b
  3233  002820                     l548:
  3234  002820  0100               	movlb	0	; () banked
  3235  002822  5176               	movf	_CANisTxReady$2798& (0+255),w,b
  3236  002824  0012               	return	
  3237  002826                     __end_of_CANisTxReady:
  3238                           	opt stack 0
  3239                           tblptru	equ	0xFF8
  3240                           tblptrh	equ	0xFF7
  3241                           tblptrl	equ	0xFF6
  3242                           tablat	equ	0xFF5
  3243                           prodh	equ	0xFF4
  3244                           prodl	equ	0xFF3
  3245                           postinc0	equ	0xFEE
  3246                           wreg	equ	0xFE8
  3247                           indf2	equ	0xFDF
  3248                           fsr2h	equ	0xFDA
  3249                           fsr2l	equ	0xFD9
  3250                           status	equ	0xFD8
  3251                           
  3252 ;; *************** function _configurazione_iniziale *****************
  3253 ;; Defined at:
  3254 ;;		line 216 in file "motore.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;		None
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;		None               void
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3268 ;;      Params:         0       0       0       0
  3269 ;;      Locals:         0       0       0       0
  3270 ;;      Temps:          0       0       0       0
  3271 ;;      Totals:         0       0       0       0
  3272 ;;Total ram usage:        0 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    7
  3275 ;; This function calls:
  3276 ;;		_CANInitialize
  3277 ;; This function is called by:
  3278 ;;		_main
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text6
  3283  0025C8                     __ptext6:
  3284                           	opt stack 0
  3285  0025C8                     _configurazione_iniziale:
  3286                           	opt stack 23
  3287                           
  3288                           ;motore.c: 219: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG_SAM
      +                          PLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;incstack = 0
  3292  0025C8  0E06               	movlw	6
  3293  0025CA  0100               	movlb	0	; () banked
  3294  0025CC  6F84               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3295  0025CE  0E05               	movlw	5
  3296  0025D0  0100               	movlb	0	; () banked
  3297  0025D2  6F85               	movwf	CANInitialize@phaseSeg2& (0+255),b
  3298  0025D4  0E01               	movlw	1
  3299  0025D6  0100               	movlb	0	; () banked
  3300  0025D8  6F86               	movwf	CANInitialize@SJW& (0+255),b
  3301  0025DA  0E03               	movlw	3
  3302  0025DC  0100               	movlb	0	; () banked
  3303  0025DE  6F87               	movwf	CANInitialize@BRP& (0+255),b
  3304  0025E0  0E9D               	movlw	157
  3305  0025E2  0100               	movlb	0	; () banked
  3306  0025E4  6F88               	movwf	CANInitialize@flags& (0+255),b
  3307  0025E6  0E04               	movlw	4
  3308  0025E8  EC15  F011         	call	_CANInitialize
  3309                           
  3310                           ;motore.c: 220: RCONbits.IPEN = 1;
  3311  0025EC  8ED0               	bsf	4048,7,c	;volatile
  3312                           
  3313                           ;motore.c: 221: INTCONbits.INT0IF = 0;
  3314  0025EE  92F2               	bcf	intcon,1,c	;volatile
  3315                           
  3316                           ;motore.c: 222: INTCONbits.INT0IE = 1;
  3317  0025F0  88F2               	bsf	intcon,4,c	;volatile
  3318                           
  3319                           ;motore.c: 223: PIR3bits.RXB1IF = 0;
  3320  0025F2  92A4               	bcf	4004,1,c	;volatile
  3321                           
  3322                           ;motore.c: 224: PIR3bits.RXB0IF = 0;
  3323  0025F4  90A4               	bcf	4004,0,c	;volatile
  3324                           
  3325                           ;motore.c: 225: PIE3bits.RXB1IE = 1;
  3326  0025F6  82A3               	bsf	4003,1,c	;volatile
  3327                           
  3328                           ;motore.c: 226: PIE3bits.RXB0IE = 1;
  3329  0025F8  80A3               	bsf	4003,0,c	;volatile
  3330                           
  3331                           ;motore.c: 227: IPR3bits.RXB1IP = 0;
  3332  0025FA  92A5               	bcf	4005,1,c	;volatile
  3333                           
  3334                           ;motore.c: 228: IPR3bits.RXB0IP = 0;
  3335  0025FC  90A5               	bcf	4005,0,c	;volatile
  3336                           
  3337                           ;motore.c: 229: INTCONbits.GIEH = 1;
  3338  0025FE  8EF2               	bsf	intcon,7,c	;volatile
  3339                           
  3340                           ;motore.c: 230: INTCONbits.GIEL = 1;
  3341  002600  8CF2               	bsf	intcon,6,c	;volatile
  3342                           
  3343                           ;motore.c: 231: INTCON2bits.INTEDG0 = 1;
  3344  002602  8CF1               	bsf	intcon2,6,c	;volatile
  3345                           
  3346                           ;motore.c: 234: T3CON = 0x01;
  3347  002604  0E01               	movlw	1
  3348  002606  6EB1               	movwf	4017,c	;volatile
  3349                           
  3350                           ;motore.c: 235: PIR2bits.TMR3IF = 0;
  3351  002608  92A1               	bcf	4001,1,c	;volatile
  3352                           
  3353                           ;motore.c: 236: IPR2bits.TMR3IP = 0;
  3354  00260A  92A2               	bcf	4002,1,c	;volatile
  3355                           
  3356                           ;motore.c: 237: TMR3H = 0x63;
  3357  00260C  0E63               	movlw	99
  3358  00260E  6EB3               	movwf	4019,c	;volatile
  3359                           
  3360                           ;motore.c: 238: TMR3L = 0xC0;
  3361  002610  0EC0               	movlw	192
  3362  002612  6EB2               	movwf	4018,c	;volatile
  3363                           
  3364                           ;motore.c: 239: PIE2bits.TMR3IE = 1;
  3365  002614  82A0               	bsf	4000,1,c	;volatile
  3366                           
  3367                           ;motore.c: 242: LATA = 0x00;
  3368  002616  0E00               	movlw	0
  3369  002618  6E89               	movwf	3977,c	;volatile
  3370                           
  3371                           ;motore.c: 243: TRISA = 0b11111100;
  3372  00261A  0EFC               	movlw	252
  3373  00261C  6E92               	movwf	3986,c	;volatile
  3374                           
  3375                           ;motore.c: 245: LATB = 0x00;
  3376  00261E  0E00               	movlw	0
  3377  002620  6E8A               	movwf	3978,c	;volatile
  3378                           
  3379                           ;motore.c: 246: TRISB = 0b11111011;
  3380  002622  0EFB               	movlw	251
  3381  002624  6E93               	movwf	3987,c	;volatile
  3382                           
  3383                           ;motore.c: 248: LATC = 0x00;
  3384  002626  0E00               	movlw	0
  3385  002628  6E8B               	movwf	3979,c	;volatile
  3386                           
  3387                           ;motore.c: 249: TRISC = 0x00;
  3388  00262A  0E00               	movlw	0
  3389  00262C  6E94               	movwf	3988,c	;volatile
  3390                           
  3391                           ;motore.c: 251: LATD = 0x00;
  3392  00262E  0E00               	movlw	0
  3393  002630  6E8C               	movwf	3980,c	;volatile
  3394                           
  3395                           ;motore.c: 252: TRISD = 0b00000000;
  3396  002632  0E00               	movlw	0
  3397  002634  6E95               	movwf	3989,c	;volatile
  3398                           
  3399                           ;motore.c: 254: LATE = 0x00;
  3400  002636  0E00               	movlw	0
  3401  002638  6E8D               	movwf	3981,c	;volatile
  3402                           
  3403                           ;motore.c: 255: TRISE = 0xFF;
  3404  00263A  6896               	setf	3990,c	;volatile
  3405                           
  3406                           ;motore.c: 257: ADCON1 = 0xFF;
  3407  00263C  68C1               	setf	4033,c	;volatile
  3408  00263E  0012               	return		;funcret
  3409  002640                     __end_of_configurazione_iniziale:
  3410                           	opt stack 0
  3411                           tblptru	equ	0xFF8
  3412                           tblptrh	equ	0xFF7
  3413                           tblptrl	equ	0xFF6
  3414                           tablat	equ	0xFF5
  3415                           prodh	equ	0xFF4
  3416                           prodl	equ	0xFF3
  3417                           intcon	equ	0xFF2
  3418                           intcon2	equ	0xFF1
  3419                           postinc0	equ	0xFEE
  3420                           wreg	equ	0xFE8
  3421                           indf2	equ	0xFDF
  3422                           fsr2h	equ	0xFDA
  3423                           fsr2l	equ	0xFD9
  3424                           status	equ	0xFD8
  3425                           
  3426 ;; *************** function _CANInitialize *****************
  3427 ;; Defined at:
  3428 ;;		line 218 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;  propSeg         1    wreg     unsigned char 
  3431 ;;  phaseSeg1       1   36[BANK0 ] unsigned char 
  3432 ;;  phaseSeg2       1   37[BANK0 ] unsigned char 
  3433 ;;  SJW             1   38[BANK0 ] unsigned char 
  3434 ;;  BRP             1   39[BANK0 ] unsigned char 
  3435 ;;  flags           1   40[BANK0 ] enum E16844
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;  propSeg         1   45[BANK0 ] unsigned char 
  3438 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
  3439 ;;  FilterConfig    1   46[BANK0 ] unsigned char 
  3440 ;; Return value:  Size  Location     Type
  3441 ;;		None               void
  3442 ;; Registers used:
  3443 ;;		wreg, status,2, status,0, cstack
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3449 ;;      Params:         0       5       0       0
  3450 ;;      Locals:         0       3       0       0
  3451 ;;      Temps:          0       4       0       0
  3452 ;;      Totals:         0      12       0       0
  3453 ;;Total ram usage:       12 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; Hardware stack levels required when called:    6
  3456 ;; This function calls:
  3457 ;;		_CANOperationMode
  3458 ;;		_CANSetFilter
  3459 ;;		_CANSetMask
  3460 ;; This function is called by:
  3461 ;;		_configurazione_iniziale
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text7
  3466  00222A                     __ptext7:
  3467                           	opt stack 0
  3468  00222A                     _CANInitialize:
  3469                           	opt stack 23
  3470                           
  3471                           ;incstack = 0
  3472                           ;CANInitialize@propSeg stored from wreg
  3473  00222A  0100               	movlb	0	; () banked
  3474  00222C  6F8D               	movwf	CANInitialize@propSeg& (0+255),b
  3475                           
  3476                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  3477                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  3478                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  3479  00222E  0E80               	movlw	128
  3480  002230  EC24  F014         	call	_CANOperationMode
  3481                           
  3482                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  3483  002234  0E00               	movlw	0
  3484  002236  6E70               	movwf	3952,c	;volatile
  3485                           
  3486                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  3487  002238  0E00               	movlw	0
  3488  00223A  6E71               	movwf	3953,c	;volatile
  3489                           
  3490                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  3491  00223C  0E00               	movlw	0
  3492  00223E  6E72               	movwf	3954,c	;volatile
  3493                           
  3494                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  3495  002240  0100               	movlb	0	; () banked
  3496  002242  4186               	rrncf	CANInitialize@SJW& (0+255),w,b
  3497  002244  42E8               	rrncf	wreg,f,c
  3498  002246  0BC0               	andlw	192
  3499  002248  0100               	movlb	0	; () banked
  3500  00224A  6F86               	movwf	CANInitialize@SJW& (0+255),b
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  3504  00224C  0100               	movlb	0	; () banked
  3505  00224E  5186               	movf	CANInitialize@SJW& (0+255),w,b
  3506  002250  1270               	iorwf	3952,f,c	;volatile
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  3510  002252  0100               	movlb	0	; () banked
  3511  002254  5187               	movf	CANInitialize@BRP& (0+255),w,b
  3512  002256  1270               	iorwf	3952,f,c	;volatile
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  3516  002258  0100               	movlb	0	; () banked
  3517  00225A  518D               	movf	CANInitialize@propSeg& (0+255),w,b
  3518  00225C  1271               	iorwf	3953,f,c	;volatile
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  3522  00225E  0100               	movlb	0	; () banked
  3523  002260  3984               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  3524  002262  42E8               	rrncf	wreg,f,c
  3525  002264  0BF8               	andlw	248
  3526  002266  0100               	movlb	0	; () banked
  3527  002268  6F84               	movwf	CANInitialize@phaseSeg1& (0+255),b
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  3531  00226A  0100               	movlb	0	; () banked
  3532  00226C  5184               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  3533  00226E  1271               	iorwf	3953,f,c	;volatile
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  3537  002270  0100               	movlb	0	; () banked
  3538  002272  A588               	btfss	CANInitialize@flags& (0+255),2,b
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  3542  002274  8C71               	bsf	3953,6,c	;volatile
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  3546  002276  0100               	movlb	0	; () banked
  3547  002278  B188               	btfsc	CANInitialize@flags& (0+255),0,b
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  3551  00227A  8E71               	bsf	3953,7,c	;volatile
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  3555                           
  3556                           ; BSR set to: 0
  3557  00227C  0100               	movlb	0	; () banked
  3558  00227E  5185               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  3559  002280  1272               	iorwf	3954,f,c	;volatile
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  3563  002282  0100               	movlb	0	; () banked
  3564  002284  B388               	btfsc	CANInitialize@flags& (0+255),1,b
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  3568  002286  8C72               	bsf	3954,6,c	;volatile
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  3572                           
  3573                           ; BSR set to: 0
  3574  002288  0100               	movlb	0	; () banked
  3575  00228A  5188               	movf	CANInitialize@flags& (0+255),w,b
  3576  00228C  0B60               	andlw	96
  3577  00228E  6E60               	movwf	3936,c	;volatile
  3578                           
  3579                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  3580  002290  0100               	movlb	0	; () banked
  3581  002292  5188               	movf	CANInitialize@flags& (0+255),w,b
  3582  002294  0B10               	andlw	16
  3583  002296  0AFF               	xorlw	255
  3584  002298  B4D8               	btfsc	status,2,c
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  3588  00229A  8460               	bsf	3936,2,c	;volatile
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
  3592  00229C  CF60 FF50          	movff	3936,3920	;volatile
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  3596  0022A0  0E00               	movlw	0
  3597  0022A2  0100               	movlb	0	; () banked
  3598  0022A4  6F76               	movwf	CANSetMask@mask& (0+255),b
  3599  0022A6  0E00               	movlw	0
  3600  0022A8  6F77               	movwf	(CANSetMask@mask+1)& (0+255),b
  3601  0022AA  0E00               	movlw	0
  3602  0022AC  6F78               	movwf	(CANSetMask@mask+2)& (0+255),b
  3603  0022AE  0E00               	movlw	0
  3604  0022B0  6F79               	movwf	(CANSetMask@mask+3)& (0+255),b
  3605  0022B2  0EF7               	movlw	247
  3606  0022B4  0100               	movlb	0	; () banked
  3607  0022B6  6F7A               	movwf	CANSetMask@type& (0+255),b
  3608  0022B8  0E01               	movlw	1
  3609  0022BA  EC46  F00F         	call	_CANSetMask
  3610                           
  3611                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  3612  0022BE  0E00               	movlw	0
  3613  0022C0  0100               	movlb	0	; () banked
  3614  0022C2  6F76               	movwf	CANSetMask@mask& (0+255),b
  3615  0022C4  0E00               	movlw	0
  3616  0022C6  6F77               	movwf	(CANSetMask@mask+1)& (0+255),b
  3617  0022C8  0E00               	movlw	0
  3618  0022CA  6F78               	movwf	(CANSetMask@mask+2)& (0+255),b
  3619  0022CC  0E00               	movlw	0
  3620  0022CE  6F79               	movwf	(CANSetMask@mask+3)& (0+255),b
  3621  0022D0  0EF7               	movlw	247
  3622  0022D2  0100               	movlb	0	; () banked
  3623  0022D4  6F7A               	movwf	CANSetMask@type& (0+255),b
  3624  0022D6  0E02               	movlw	2
  3625  0022D8  EC46  F00F         	call	_CANSetMask
  3626                           
  3627                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  3628  0022DC  D00F               	goto	l3053
  3629  0022DE                     l3047:
  3630                           
  3631                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  3632  0022DE  0EF7               	movlw	247
  3633  0022E0  0100               	movlb	0	; () banked
  3634  0022E2  6F8E               	movwf	CANInitialize@FilterConfig1& (0+255),b
  3635  0022E4  D007               	goto	l3049
  3636  0022E6                     l350:
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3640  0022E6  0100               	movlb	0	; () banked
  3641  0022E8  698E               	setf	CANInitialize@FilterConfig1& (0+255),b
  3642                           
  3643                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
  3644  0022EA  0100               	movlb	0	; () banked
  3645  0022EC  698F               	setf	CANInitialize@FilterConfig2& (0+255),b
  3646                           
  3647                           ;inc\CANlib.h: 273: break;
  3648  0022EE  D028               	goto	l3055
  3649  0022F0                     l351:
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
  3653  0022F0  0100               	movlb	0	; () banked
  3654  0022F2  698E               	setf	CANInitialize@FilterConfig1& (0+255),b
  3655  0022F4                     l3049:
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  3659  0022F4  0EF7               	movlw	247
  3660  0022F6  0100               	movlb	0	; () banked
  3661  0022F8  6F8F               	movwf	CANInitialize@FilterConfig2& (0+255),b
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;inc\CANlib.h: 278: }
  3665                           
  3666                           ;inc\CANlib.h: 277: break;
  3667  0022FA  D022               	goto	l3055
  3668  0022FC                     l3053:
  3669  0022FC  0E9F               	movlw	159
  3670  0022FE  0100               	movlb	0	; () banked
  3671  002300  6F89               	movwf	??_CANInitialize& (0+255),b
  3672  002302  0EFF               	movlw	255
  3673  002304  0100               	movlb	0	; () banked
  3674  002306  6F8A               	movwf	(??_CANInitialize+1)& (0+255),b
  3675  002308  0100               	movlb	0	; () banked
  3676  00230A  5188               	movf	CANInitialize@flags& (0+255),w,b
  3677  00230C  0B60               	andlw	96
  3678  00230E  0100               	movlb	0	; () banked
  3679  002310  6F8B               	movwf	(??_CANInitialize+2)& (0+255),b
  3680  002312  6B8C               	clrf	(??_CANInitialize+3)& (0+255),b
  3681  002314  0100               	movlb	0	; () banked
  3682  002316  5189               	movf	??_CANInitialize& (0+255),w,b
  3683  002318  0100               	movlb	0	; () banked
  3684  00231A  138B               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  3685  00231C  0100               	movlb	0	; () banked
  3686  00231E  518A               	movf	(??_CANInitialize+1)& (0+255),w,b
  3687  002320  0100               	movlb	0	; () banked
  3688  002322  138C               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  3689                           
  3690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3691                           ; Switch size 1, requested type "space"
  3692                           ; Number of cases is 1, Range of values is 0 to 0
  3693                           ; switch strategies available:
  3694                           ; Name         Instructions Cycles
  3695                           ; simple_byte            4     3 (average)
  3696                           ;	Chosen strategy is simple_byte
  3697  002324  0100               	movlb	0	; () banked
  3698  002326  518C               	movf	(??_CANInitialize+3)& (0+255),w,b
  3699  002328  0A00               	xorlw	0	; case 0
  3700  00232A  A4D8               	btfss	status,2,c
  3701  00232C  D7E1               	goto	l351
  3702                           
  3703                           ; BSR set to: 0
  3704                           ; Switch size 1, requested type "space"
  3705                           ; Number of cases is 2, Range of values is 191 to 223
  3706                           ; switch strategies available:
  3707                           ; Name         Instructions Cycles
  3708                           ; simple_byte            7     4 (average)
  3709                           ;	Chosen strategy is simple_byte
  3710  00232E  0100               	movlb	0	; () banked
  3711  002330  518B               	movf	(??_CANInitialize+2)& (0+255),w,b
  3712  002332  0ABF               	xorlw	191	; case 191
  3713  002334  B4D8               	btfsc	status,2,c
  3714  002336  D7D7               	goto	l350
  3715  002338  0A60               	xorlw	96	; case 223
  3716  00233A  B4D8               	btfsc	status,2,c
  3717  00233C  D7D0               	goto	l3047
  3718  00233E  D7D8               	goto	l351
  3719  002340                     l3055:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  3723  002340  0E00               	movlw	0
  3724  002342  0100               	movlb	0	; () banked
  3725  002344  6F76               	movwf	CANSetFilter@filter& (0+255),b
  3726  002346  0E00               	movlw	0
  3727  002348  6F77               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3728  00234A  0E00               	movlw	0
  3729  00234C  6F78               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3730  00234E  0E00               	movlw	0
  3731  002350  6F79               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3732  002352  C08E  F07A         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3733  002356  0E00               	movlw	0
  3734  002358  ECD1  F000         	call	_CANSetFilter
  3735                           
  3736                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  3737  00235C  0E00               	movlw	0
  3738  00235E  0100               	movlb	0	; () banked
  3739  002360  6F76               	movwf	CANSetFilter@filter& (0+255),b
  3740  002362  0E00               	movlw	0
  3741  002364  6F77               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3742  002366  0E00               	movlw	0
  3743  002368  6F78               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3744  00236A  0E00               	movlw	0
  3745  00236C  6F79               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3746  00236E  C08E  F07A         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  3747  002372  0E01               	movlw	1
  3748  002374  ECD1  F000         	call	_CANSetFilter
  3749                           
  3750                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  3751  002378  0E00               	movlw	0
  3752  00237A  0100               	movlb	0	; () banked
  3753  00237C  6F76               	movwf	CANSetFilter@filter& (0+255),b
  3754  00237E  0E00               	movlw	0
  3755  002380  6F77               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3756  002382  0E00               	movlw	0
  3757  002384  6F78               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3758  002386  0E00               	movlw	0
  3759  002388  6F79               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3760  00238A  C08F  F07A         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3761  00238E  0E02               	movlw	2
  3762  002390  ECD1  F000         	call	_CANSetFilter
  3763                           
  3764                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  3765  002394  0E00               	movlw	0
  3766  002396  0100               	movlb	0	; () banked
  3767  002398  6F76               	movwf	CANSetFilter@filter& (0+255),b
  3768  00239A  0E00               	movlw	0
  3769  00239C  6F77               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3770  00239E  0E00               	movlw	0
  3771  0023A0  6F78               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3772  0023A2  0E00               	movlw	0
  3773  0023A4  6F79               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3774  0023A6  C08F  F07A         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3775  0023AA  0E03               	movlw	3
  3776  0023AC  ECD1  F000         	call	_CANSetFilter
  3777                           
  3778                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  3779  0023B0  0E00               	movlw	0
  3780  0023B2  0100               	movlb	0	; () banked
  3781  0023B4  6F76               	movwf	CANSetFilter@filter& (0+255),b
  3782  0023B6  0E00               	movlw	0
  3783  0023B8  6F77               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3784  0023BA  0E00               	movlw	0
  3785  0023BC  6F78               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3786  0023BE  0E00               	movlw	0
  3787  0023C0  6F79               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3788  0023C2  C08F  F07A         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3789  0023C6  0E04               	movlw	4
  3790  0023C8  ECD1  F000         	call	_CANSetFilter
  3791                           
  3792                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  3793  0023CC  0E00               	movlw	0
  3794  0023CE  0100               	movlb	0	; () banked
  3795  0023D0  6F76               	movwf	CANSetFilter@filter& (0+255),b
  3796  0023D2  0E00               	movlw	0
  3797  0023D4  6F77               	movwf	(CANSetFilter@filter+1)& (0+255),b
  3798  0023D6  0E00               	movlw	0
  3799  0023D8  6F78               	movwf	(CANSetFilter@filter+2)& (0+255),b
  3800  0023DA  0E00               	movlw	0
  3801  0023DC  6F79               	movwf	(CANSetFilter@filter+3)& (0+255),b
  3802  0023DE  C08F  F07A         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  3803  0023E2  0E05               	movlw	5
  3804  0023E4  ECD1  F000         	call	_CANSetFilter
  3805                           
  3806                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
  3807  0023E8  0E00               	movlw	0
  3808  0023EA  EC24  F014         	call	_CANOperationMode
  3809  0023EE  0012               	return		;funcret
  3810  0023F0                     __end_of_CANInitialize:
  3811                           	opt stack 0
  3812                           tblptru	equ	0xFF8
  3813                           tblptrh	equ	0xFF7
  3814                           tblptrl	equ	0xFF6
  3815                           tablat	equ	0xFF5
  3816                           prodh	equ	0xFF4
  3817                           prodl	equ	0xFF3
  3818                           intcon	equ	0xFF2
  3819                           intcon2	equ	0xFF1
  3820                           postinc0	equ	0xFEE
  3821                           wreg	equ	0xFE8
  3822                           indf2	equ	0xFDF
  3823                           fsr2h	equ	0xFDA
  3824                           fsr2l	equ	0xFD9
  3825                           status	equ	0xFD8
  3826                           
  3827 ;; *************** function _CANSetMask *****************
  3828 ;; Defined at:
  3829 ;;		line 640 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  numBuffer       1    wreg     enum E16878
  3832 ;;  mask            4   22[BANK0 ] unsigned long 
  3833 ;;  type            1   26[BANK0 ] enum E16844
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;  numBuffer       1   31[BANK0 ] enum E16878
  3836 ;;  tamp            4   32[BANK0 ] unsigned long 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;		None               void
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3846 ;;      Params:         0       5       0       0
  3847 ;;      Locals:         0       5       0       0
  3848 ;;      Temps:          0       4       0       0
  3849 ;;      Totals:         0      14       0       0
  3850 ;;Total ram usage:       14 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:    5
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_CANInitialize
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text8
  3861  001E8C                     __ptext8:
  3862                           	opt stack 0
  3863  001E8C                     _CANSetMask:
  3864                           	opt stack 23
  3865                           
  3866                           ;incstack = 0
  3867                           ;CANSetMask@numBuffer stored from wreg
  3868  001E8C  0100               	movlb	0	; () banked
  3869  001E8E  6F7F               	movwf	CANSetMask@numBuffer& (0+255),b
  3870                           
  3871                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  3872  001E90  0100               	movlb	0	; () banked
  3873  001E92  057F               	decf	CANSetMask@numBuffer& (0+255),w,b
  3874  001E94  A4D8               	btfss	status,2,c
  3875  001E96  D056               	goto	l2611
  3876                           
  3877                           ; BSR set to: 0
  3878  001E98  0100               	movlb	0	; () banked
  3879  001E9A  297A               	incf	CANSetMask@type& (0+255),w,b
  3880  001E9C  A4D8               	btfss	status,2,c
  3881  001E9E  D052               	goto	l2611
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;inc\CANlib.h: 644: {
  3885                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
  3886  001EA0  C076  F07B         	movff	CANSetMask@mask,??_CANSetMask
  3887  001EA4  C077  F07C         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3888  001EA8  C078  F07D         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3889  001EAC  C079  F07E         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3890  001EB0  0E04               	movlw	4
  3891  001EB2  D006               	goto	u2290
  3892  001EB4                     u2295:
  3893  001EB4  0100               	movlb	0	; () banked
  3894  001EB6  90D8               	bcf	status,0,c
  3895  001EB8  337E               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3896  001EBA  337D               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3897  001EBC  337C               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  3898  001EBE  337B               	rrcf	??_CANSetMask& (0+255),f,b
  3899  001EC0                     u2290:
  3900  001EC0  2EE8               	decfsz	wreg,f,c
  3901  001EC2  D7F8               	goto	u2295
  3902  001EC4  C07B  F080         	movff	??_CANSetMask,CANSetMask@tamp
  3903  001EC8  C07C  F081         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3904  001ECC  C07D  F082         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3905  001ED0  C07E  F083         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
  3909  001ED4  0100               	movlb	0	; () banked
  3910  001ED6  5180               	movf	CANSetMask@tamp& (0+255),w,b
  3911  001ED8  0100               	movlb	0	; () banked
  3912  001EDA  6F80               	movwf	CANSetMask@tamp& (0+255),b
  3913  001EDC  6B81               	clrf	(CANSetMask@tamp+1)& (0+255),b
  3914  001EDE  6B82               	clrf	(CANSetMask@tamp+2)& (0+255),b
  3915  001EE0  6B83               	clrf	(CANSetMask@tamp+3)& (0+255),b
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
  3919  001EE2  C080  FF18         	movff	CANSetMask@tamp,3864	;volatile
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
  3923  001EE6  0E07               	movlw	7
  3924  001EE8  0100               	movlb	0	; () banked
  3925  001EEA  1576               	andwf	CANSetMask@mask& (0+255),w,b
  3926  001EEC  0100               	movlb	0	; () banked
  3927  001EEE  6F80               	movwf	CANSetMask@tamp& (0+255),b
  3928  001EF0  0E00               	movlw	0
  3929  001EF2  0100               	movlb	0	; () banked
  3930  001EF4  1577               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  3931  001EF6  0100               	movlb	0	; () banked
  3932  001EF8  6F81               	movwf	(CANSetMask@tamp+1)& (0+255),b
  3933  001EFA  0E00               	movlw	0
  3934  001EFC  0100               	movlb	0	; () banked
  3935  001EFE  1578               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  3936  001F00  0100               	movlb	0	; () banked
  3937  001F02  6F82               	movwf	(CANSetMask@tamp+2)& (0+255),b
  3938  001F04  0E00               	movlw	0
  3939  001F06  0100               	movlb	0	; () banked
  3940  001F08  1579               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  3941  001F0A  0100               	movlb	0	; () banked
  3942  001F0C  6F83               	movwf	(CANSetMask@tamp+3)& (0+255),b
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;inc\CANlib.h: 650: tamp = tamp << 5;
  3946  001F0E  C080  F07B         	movff	CANSetMask@tamp,??_CANSetMask
  3947  001F12  C081  F07C         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  3948  001F16  C082  F07D         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  3949  001F1A  C083  F07E         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  3950  001F1E  0E05               	movlw	5
  3951  001F20                     u2305:
  3952  001F20  90D8               	bcf	status,0,c
  3953  001F22  0100               	movlb	0	; () banked
  3954  001F24  377B               	rlcf	??_CANSetMask& (0+255),f,b
  3955  001F26  377C               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  3956  001F28  377D               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  3957  001F2A  377E               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  3958  001F2C  2EE8               	decfsz	wreg,f,c
  3959  001F2E  D7F8               	goto	u2305
  3960  001F30  C07B  F080         	movff	??_CANSetMask,CANSetMask@tamp
  3961  001F34  C07C  F081         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  3962  001F38  C07D  F082         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  3963  001F3C  C07E  F083         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
  3967  001F40  C080  FF19         	movff	CANSetMask@tamp,3865	;volatile
  3968  001F44                     l2611:
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;inc\CANlib.h: 652: }
  3972                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  3973  001F44  0E02               	movlw	2
  3974  001F46  0100               	movlb	0	; () banked
  3975  001F48  197F               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  3976  001F4A  A4D8               	btfss	status,2,c
  3977  001F4C  D056               	goto	l2627
  3978                           
  3979                           ; BSR set to: 0
  3980  001F4E  0100               	movlb	0	; () banked
  3981  001F50  297A               	incf	CANSetMask@type& (0+255),w,b
  3982  001F52  A4D8               	btfss	status,2,c
  3983  001F54  D052               	goto	l2627
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;inc\CANlib.h: 655: {
  3987                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
  3988  001F56  C076  F07B         	movff	CANSetMask@mask,??_CANSetMask
  3989  001F5A  C077  F07C         	movff	CANSetMask@mask+1,??_CANSetMask+1
  3990  001F5E  C078  F07D         	movff	CANSetMask@mask+2,??_CANSetMask+2
  3991  001F62  C079  F07E         	movff	CANSetMask@mask+3,??_CANSetMask+3
  3992  001F66  0E04               	movlw	4
  3993  001F68  D006               	goto	u2330
  3994  001F6A                     u2335:
  3995  001F6A  0100               	movlb	0	; () banked
  3996  001F6C  90D8               	bcf	status,0,c
  3997  001F6E  337E               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  3998  001F70  337D               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  3999  001F72  337C               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4000  001F74  337B               	rrcf	??_CANSetMask& (0+255),f,b
  4001  001F76                     u2330:
  4002  001F76  2EE8               	decfsz	wreg,f,c
  4003  001F78  D7F8               	goto	u2335
  4004  001F7A  C07B  F080         	movff	??_CANSetMask,CANSetMask@tamp
  4005  001F7E  C07C  F081         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4006  001F82  C07D  F082         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4007  001F86  C07E  F083         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
  4011  001F8A  0100               	movlb	0	; () banked
  4012  001F8C  5180               	movf	CANSetMask@tamp& (0+255),w,b
  4013  001F8E  0100               	movlb	0	; () banked
  4014  001F90  6F80               	movwf	CANSetMask@tamp& (0+255),b
  4015  001F92  6B81               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4016  001F94  6B82               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4017  001F96  6B83               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
  4021  001F98  C080  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
  4025  001F9C  0E07               	movlw	7
  4026  001F9E  0100               	movlb	0	; () banked
  4027  001FA0  1576               	andwf	CANSetMask@mask& (0+255),w,b
  4028  001FA2  0100               	movlb	0	; () banked
  4029  001FA4  6F80               	movwf	CANSetMask@tamp& (0+255),b
  4030  001FA6  0E00               	movlw	0
  4031  001FA8  0100               	movlb	0	; () banked
  4032  001FAA  1577               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4033  001FAC  0100               	movlb	0	; () banked
  4034  001FAE  6F81               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4035  001FB0  0E00               	movlw	0
  4036  001FB2  0100               	movlb	0	; () banked
  4037  001FB4  1578               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4038  001FB6  0100               	movlb	0	; () banked
  4039  001FB8  6F82               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4040  001FBA  0E00               	movlw	0
  4041  001FBC  0100               	movlb	0	; () banked
  4042  001FBE  1579               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4043  001FC0  0100               	movlb	0	; () banked
  4044  001FC2  6F83               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;inc\CANlib.h: 661: tamp = tamp << 5;
  4048  001FC4  C080  F07B         	movff	CANSetMask@tamp,??_CANSetMask
  4049  001FC8  C081  F07C         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4050  001FCC  C082  F07D         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4051  001FD0  C083  F07E         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4052  001FD4  0E05               	movlw	5
  4053  001FD6                     u2345:
  4054  001FD6  90D8               	bcf	status,0,c
  4055  001FD8  0100               	movlb	0	; () banked
  4056  001FDA  377B               	rlcf	??_CANSetMask& (0+255),f,b
  4057  001FDC  377C               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  4058  001FDE  377D               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  4059  001FE0  377E               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  4060  001FE2  2EE8               	decfsz	wreg,f,c
  4061  001FE4  D7F8               	goto	u2345
  4062  001FE6  C07B  F080         	movff	??_CANSetMask,CANSetMask@tamp
  4063  001FEA  C07C  F081         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4064  001FEE  C07D  F082         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4065  001FF2  C07E  F083         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4066                           
  4067                           ; BSR set to: 0
  4068                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
  4069  001FF6  C080  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  4070  001FFA                     l2627:
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;inc\CANlib.h: 663: }
  4074                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  4075  001FFA  0100               	movlb	0	; () banked
  4076  001FFC  057F               	decf	CANSetMask@numBuffer& (0+255),w,b
  4077  001FFE  A4D8               	btfss	status,2,c
  4078  002000  D087               	goto	l2659
  4079                           
  4080                           ; BSR set to: 0
  4081  002002  0EF7               	movlw	247
  4082  002004  0100               	movlb	0	; () banked
  4083  002006  197A               	xorwf	CANSetMask@type& (0+255),w,b
  4084  002008  A4D8               	btfss	status,2,c
  4085  00200A  D082               	goto	l2659
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;inc\CANlib.h: 666: {
  4089                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
  4090  00200C  0100               	movlb	0	; () banked
  4091  00200E  5176               	movf	CANSetMask@mask& (0+255),w,b
  4092  002010  0100               	movlb	0	; () banked
  4093  002012  6F80               	movwf	CANSetMask@tamp& (0+255),b
  4094  002014  6B81               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4095  002016  6B82               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4096  002018  6B83               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
  4100  00201A  C080  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
  4104  00201E  0E00               	movlw	0
  4105  002020  0100               	movlb	0	; () banked
  4106  002022  1576               	andwf	CANSetMask@mask& (0+255),w,b
  4107  002024  0100               	movlb	0	; () banked
  4108  002026  6F80               	movwf	CANSetMask@tamp& (0+255),b
  4109  002028  0EFF               	movlw	255
  4110  00202A  0100               	movlb	0	; () banked
  4111  00202C  1577               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4112  00202E  0100               	movlb	0	; () banked
  4113  002030  6F81               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4114  002032  0E00               	movlw	0
  4115  002034  0100               	movlb	0	; () banked
  4116  002036  1578               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4117  002038  0100               	movlb	0	; () banked
  4118  00203A  6F82               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4119  00203C  0E00               	movlw	0
  4120  00203E  0100               	movlb	0	; () banked
  4121  002040  1579               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4122  002042  0100               	movlb	0	; () banked
  4123  002044  6F83               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
  4127  002046  C080  F07B         	movff	CANSetMask@tamp,??_CANSetMask
  4128  00204A  C081  F07C         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4129  00204E  C082  F07D         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4130  002052  C083  F07E         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4131  002056  C07C  F07B         	movff	??_CANSetMask+1,??_CANSetMask
  4132  00205A  C07D  F07C         	movff	??_CANSetMask+2,??_CANSetMask+1
  4133  00205E  C07E  F07D         	movff	??_CANSetMask+3,??_CANSetMask+2
  4134  002062  0100               	movlb	0	; () banked
  4135  002064  6B7E               	clrf	(??_CANSetMask+3)& (0+255),b
  4136  002066  C07B  F080         	movff	??_CANSetMask,CANSetMask@tamp
  4137  00206A  C07C  F081         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4138  00206E  C07D  F082         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4139  002072  C07E  F083         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
  4143  002076  C080  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
  4147  00207A  0100               	movlb	0	; () banked
  4148  00207C  A178               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4149  00207E  D003               	goto	l424
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
  4153  002080  010F               	movlb	15	; () banked
  4154  002082  8119               	bsf	25,0,b	;volatile
  4155  002084  D002               	goto	l425
  4156  002086                     l424:
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;inc\CANlib.h: 676: else
  4160                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
  4161  002086  010F               	movlb	15	; () banked
  4162  002088  9119               	bcf	25,0,b	;volatile
  4163  00208A                     l425:
  4164                           
  4165                           ; BSR set to: 15
  4166                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
  4167  00208A  0100               	movlb	0	; () banked
  4168  00208C  A378               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4169  00208E  D003               	goto	l426
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
  4173  002090  010F               	movlb	15	; () banked
  4174  002092  8319               	bsf	25,1,b	;volatile
  4175  002094  D002               	goto	l427
  4176  002096                     l426:
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;inc\CANlib.h: 681: else
  4180                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
  4181  002096  010F               	movlb	15	; () banked
  4182  002098  9319               	bcf	25,1,b	;volatile
  4183  00209A                     l427:
  4184                           
  4185                           ; BSR set to: 15
  4186                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
  4187  00209A  0100               	movlb	0	; () banked
  4188  00209C  A578               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4189  00209E  D003               	goto	l428
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
  4193  0020A0  010F               	movlb	15	; () banked
  4194  0020A2  8B19               	bsf	25,5,b	;volatile
  4195  0020A4  D002               	goto	l429
  4196  0020A6                     l428:
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;inc\CANlib.h: 686: else
  4200                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
  4201  0020A6  010F               	movlb	15	; () banked
  4202  0020A8  9B19               	bcf	25,5,b	;volatile
  4203  0020AA                     l429:
  4204                           
  4205                           ; BSR set to: 15
  4206                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
  4207  0020AA  0100               	movlb	0	; () banked
  4208  0020AC  A778               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4209  0020AE  D003               	goto	l430
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
  4213  0020B0  010F               	movlb	15	; () banked
  4214  0020B2  8D19               	bsf	25,6,b	;volatile
  4215  0020B4  D002               	goto	l431
  4216  0020B6                     l430:
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;inc\CANlib.h: 691: else
  4220                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
  4221  0020B6  010F               	movlb	15	; () banked
  4222  0020B8  9D19               	bcf	25,6,b	;volatile
  4223  0020BA                     l431:
  4224                           
  4225                           ; BSR set to: 15
  4226                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
  4227  0020BA  0100               	movlb	0	; () banked
  4228  0020BC  A978               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4229  0020BE  D003               	goto	l432
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
  4233  0020C0  010F               	movlb	15	; () banked
  4234  0020C2  8F19               	bsf	25,7,b	;volatile
  4235  0020C4  D002               	goto	l2653
  4236  0020C6                     l432:
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;inc\CANlib.h: 696: else
  4240                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
  4241  0020C6  010F               	movlb	15	; () banked
  4242  0020C8  9F19               	bcf	25,7,b	;volatile
  4243  0020CA                     l2653:
  4244                           
  4245                           ; BSR set to: 15
  4246                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
  4247  0020CA  C076  F07B         	movff	CANSetMask@mask,??_CANSetMask
  4248  0020CE  C077  F07C         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4249  0020D2  C078  F07D         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4250  0020D6  C079  F07E         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4251  0020DA  0E16               	movlw	22
  4252  0020DC  D006               	goto	u2420
  4253  0020DE                     u2425:
  4254  0020DE  0100               	movlb	0	; () banked
  4255  0020E0  90D8               	bcf	status,0,c
  4256  0020E2  337E               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4257  0020E4  337D               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4258  0020E6  337C               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4259  0020E8  337B               	rrcf	??_CANSetMask& (0+255),f,b
  4260  0020EA                     u2420:
  4261  0020EA  2EE8               	decfsz	wreg,f,c
  4262  0020EC  D7F8               	goto	u2425
  4263  0020EE  C07B  F080         	movff	??_CANSetMask,CANSetMask@tamp
  4264  0020F2  C07C  F081         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4265  0020F6  C07D  F082         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4266  0020FA  C07E  F083         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
  4270  0020FE  0100               	movlb	0	; () banked
  4271  002100  5180               	movf	CANSetMask@tamp& (0+255),w,b
  4272  002102  0100               	movlb	0	; () banked
  4273  002104  6F80               	movwf	CANSetMask@tamp& (0+255),b
  4274  002106  6B81               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4275  002108  6B82               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4276  00210A  6B83               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
  4280  00210C  C080  FF18         	movff	CANSetMask@tamp,3864	;volatile
  4281  002110                     l2659:
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;inc\CANlib.h: 702: }
  4285                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  4286  002110  0E02               	movlw	2
  4287  002112  0100               	movlb	0	; () banked
  4288  002114  197F               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  4289  002116  A4D8               	btfss	status,2,c
  4290  002118  0012               	return	
  4291                           
  4292                           ; BSR set to: 0
  4293  00211A  0EF7               	movlw	247
  4294  00211C  0100               	movlb	0	; () banked
  4295  00211E  197A               	xorwf	CANSetMask@type& (0+255),w,b
  4296  002120  A4D8               	btfss	status,2,c
  4297  002122  0012               	return	
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;inc\CANlib.h: 705: {
  4301                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
  4302  002124  0100               	movlb	0	; () banked
  4303  002126  5176               	movf	CANSetMask@mask& (0+255),w,b
  4304  002128  0100               	movlb	0	; () banked
  4305  00212A  6F80               	movwf	CANSetMask@tamp& (0+255),b
  4306  00212C  6B81               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4307  00212E  6B82               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4308  002130  6B83               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
  4312  002132  C080  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
  4316  002136  0E00               	movlw	0
  4317  002138  0100               	movlb	0	; () banked
  4318  00213A  1576               	andwf	CANSetMask@mask& (0+255),w,b
  4319  00213C  0100               	movlb	0	; () banked
  4320  00213E  6F80               	movwf	CANSetMask@tamp& (0+255),b
  4321  002140  0EFF               	movlw	255
  4322  002142  0100               	movlb	0	; () banked
  4323  002144  1577               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  4324  002146  0100               	movlb	0	; () banked
  4325  002148  6F81               	movwf	(CANSetMask@tamp+1)& (0+255),b
  4326  00214A  0E00               	movlw	0
  4327  00214C  0100               	movlb	0	; () banked
  4328  00214E  1578               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  4329  002150  0100               	movlb	0	; () banked
  4330  002152  6F82               	movwf	(CANSetMask@tamp+2)& (0+255),b
  4331  002154  0E00               	movlw	0
  4332  002156  0100               	movlb	0	; () banked
  4333  002158  1579               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  4334  00215A  0100               	movlb	0	; () banked
  4335  00215C  6F83               	movwf	(CANSetMask@tamp+3)& (0+255),b
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
  4339  00215E  C080  F07B         	movff	CANSetMask@tamp,??_CANSetMask
  4340  002162  C081  F07C         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  4341  002166  C082  F07D         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  4342  00216A  C083  F07E         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  4343  00216E  C07C  F07B         	movff	??_CANSetMask+1,??_CANSetMask
  4344  002172  C07D  F07C         	movff	??_CANSetMask+2,??_CANSetMask+1
  4345  002176  C07E  F07D         	movff	??_CANSetMask+3,??_CANSetMask+2
  4346  00217A  0100               	movlb	0	; () banked
  4347  00217C  6B7E               	clrf	(??_CANSetMask+3)& (0+255),b
  4348  00217E  C07B  F080         	movff	??_CANSetMask,CANSetMask@tamp
  4349  002182  C07C  F081         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4350  002186  C07D  F082         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4351  00218A  C07E  F083         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
  4355  00218E  C080  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
  4359  002192  0100               	movlb	0	; () banked
  4360  002194  A178               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  4361  002196  D003               	goto	l435
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
  4365  002198  010F               	movlb	15	; () banked
  4366  00219A  811D               	bsf	29,0,b	;volatile
  4367  00219C  D002               	goto	l436
  4368  00219E                     l435:
  4369                           
  4370                           ; BSR set to: 0
  4371                           ;inc\CANlib.h: 715: else
  4372                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
  4373  00219E  010F               	movlb	15	; () banked
  4374  0021A0  911D               	bcf	29,0,b	;volatile
  4375  0021A2                     l436:
  4376                           
  4377                           ; BSR set to: 15
  4378                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
  4379  0021A2  0100               	movlb	0	; () banked
  4380  0021A4  A378               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  4381  0021A6  D003               	goto	l437
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
  4385  0021A8  010F               	movlb	15	; () banked
  4386  0021AA  831D               	bsf	29,1,b	;volatile
  4387  0021AC  D002               	goto	l438
  4388  0021AE                     l437:
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;inc\CANlib.h: 720: else
  4392                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
  4393  0021AE  010F               	movlb	15	; () banked
  4394  0021B0  931D               	bcf	29,1,b	;volatile
  4395  0021B2                     l438:
  4396                           
  4397                           ; BSR set to: 15
  4398                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
  4399  0021B2  0100               	movlb	0	; () banked
  4400  0021B4  A578               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  4401  0021B6  D003               	goto	l439
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
  4405  0021B8  010F               	movlb	15	; () banked
  4406  0021BA  8B1D               	bsf	29,5,b	;volatile
  4407  0021BC  D002               	goto	l440
  4408  0021BE                     l439:
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;inc\CANlib.h: 725: else
  4412                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
  4413  0021BE  010F               	movlb	15	; () banked
  4414  0021C0  9B1D               	bcf	29,5,b	;volatile
  4415  0021C2                     l440:
  4416                           
  4417                           ; BSR set to: 15
  4418                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
  4419  0021C2  0100               	movlb	0	; () banked
  4420  0021C4  A778               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  4421  0021C6  D003               	goto	l441
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
  4425  0021C8  010F               	movlb	15	; () banked
  4426  0021CA  8D1D               	bsf	29,6,b	;volatile
  4427  0021CC  D002               	goto	l442
  4428  0021CE                     l441:
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;inc\CANlib.h: 730: else
  4432                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
  4433  0021CE  010F               	movlb	15	; () banked
  4434  0021D0  9D1D               	bcf	29,6,b	;volatile
  4435  0021D2                     l442:
  4436                           
  4437                           ; BSR set to: 15
  4438                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
  4439  0021D2  0100               	movlb	0	; () banked
  4440  0021D4  A978               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  4441  0021D6  D003               	goto	l443
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
  4445  0021D8  010F               	movlb	15	; () banked
  4446  0021DA  8F1D               	bsf	29,7,b	;volatile
  4447  0021DC  D002               	goto	l2685
  4448  0021DE                     l443:
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;inc\CANlib.h: 735: else
  4452                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
  4453  0021DE  010F               	movlb	15	; () banked
  4454  0021E0  9F1D               	bcf	29,7,b	;volatile
  4455  0021E2                     l2685:
  4456                           
  4457                           ; BSR set to: 15
  4458                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
  4459  0021E2  C076  F07B         	movff	CANSetMask@mask,??_CANSetMask
  4460  0021E6  C077  F07C         	movff	CANSetMask@mask+1,??_CANSetMask+1
  4461  0021EA  C078  F07D         	movff	CANSetMask@mask+2,??_CANSetMask+2
  4462  0021EE  C079  F07E         	movff	CANSetMask@mask+3,??_CANSetMask+3
  4463  0021F2  0E16               	movlw	22
  4464  0021F4  D006               	goto	u2500
  4465  0021F6                     u2505:
  4466  0021F6  0100               	movlb	0	; () banked
  4467  0021F8  90D8               	bcf	status,0,c
  4468  0021FA  337E               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  4469  0021FC  337D               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  4470  0021FE  337C               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  4471  002200  337B               	rrcf	??_CANSetMask& (0+255),f,b
  4472  002202                     u2500:
  4473  002202  2EE8               	decfsz	wreg,f,c
  4474  002204  D7F8               	goto	u2505
  4475  002206  C07B  F080         	movff	??_CANSetMask,CANSetMask@tamp
  4476  00220A  C07C  F081         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  4477  00220E  C07D  F082         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  4478  002212  C07E  F083         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
  4482  002216  0100               	movlb	0	; () banked
  4483  002218  5180               	movf	CANSetMask@tamp& (0+255),w,b
  4484  00221A  0100               	movlb	0	; () banked
  4485  00221C  6F80               	movwf	CANSetMask@tamp& (0+255),b
  4486  00221E  6B81               	clrf	(CANSetMask@tamp+1)& (0+255),b
  4487  002220  6B82               	clrf	(CANSetMask@tamp+2)& (0+255),b
  4488  002222  6B83               	clrf	(CANSetMask@tamp+3)& (0+255),b
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
  4492  002224  C080  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  4493  002228  0012               	return	
  4494  00222A                     __end_of_CANSetMask:
  4495                           	opt stack 0
  4496                           tblptru	equ	0xFF8
  4497                           tblptrh	equ	0xFF7
  4498                           tblptrl	equ	0xFF6
  4499                           tablat	equ	0xFF5
  4500                           prodh	equ	0xFF4
  4501                           prodl	equ	0xFF3
  4502                           intcon	equ	0xFF2
  4503                           intcon2	equ	0xFF1
  4504                           postinc0	equ	0xFEE
  4505                           wreg	equ	0xFE8
  4506                           indf2	equ	0xFDF
  4507                           fsr2h	equ	0xFDA
  4508                           fsr2l	equ	0xFD9
  4509                           status	equ	0xFD8
  4510                           
  4511 ;; *************** function _CANSetFilter *****************
  4512 ;; Defined at:
  4513 ;;		line 748 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  numBuffer       1    wreg     enum E16881
  4516 ;;  filter          4   22[BANK0 ] unsigned long 
  4517 ;;  type            1   26[BANK0 ] enum E16844
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  numBuffer       1   31[BANK0 ] enum E16881
  4520 ;;  tamp            4   32[BANK0 ] unsigned long 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;		None               void
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, status,0
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4530 ;;      Params:         0       5       0       0
  4531 ;;      Locals:         0       5       0       0
  4532 ;;      Temps:          0       4       0       0
  4533 ;;      Totals:         0      14       0       0
  4534 ;;Total ram usage:       14 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    5
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_CANInitialize
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text9
  4545  0001A2                     __ptext9:
  4546                           	opt stack 0
  4547  0001A2                     _CANSetFilter:
  4548                           	opt stack 23
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;incstack = 0
  4552                           ;CANSetFilter@numBuffer stored from wreg
  4553  0001A2  0100               	movlb	0	; () banked
  4554  0001A4  6F7F               	movwf	CANSetFilter@numBuffer& (0+255),b
  4555                           
  4556                           ;inc\CANlib.h: 750: unsigned long tamp;
  4557                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  4558  0001A6  0100               	movlb	0	; () banked
  4559  0001A8  517F               	movf	CANSetFilter@numBuffer& (0+255),w,b
  4560  0001AA  0100               	movlb	0	; () banked
  4561  0001AC  A4D8               	btfss	status,2,c
  4562  0001AE  D058               	goto	l2709
  4563                           
  4564                           ; BSR set to: 0
  4565  0001B0  0100               	movlb	0	; () banked
  4566  0001B2  297A               	incf	CANSetFilter@type& (0+255),w,b
  4567  0001B4  A4D8               	btfss	status,2,c
  4568  0001B6  D054               	goto	l2709
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;inc\CANlib.h: 753: {
  4572                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
  4573  0001B8  010F               	movlb	15	; () banked
  4574  0001BA  9701               	bcf	1,3,b	;volatile
  4575                           
  4576                           ; BSR set to: 15
  4577                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
  4578  0001BC  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  4579  0001C0  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4580  0001C4  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4581  0001C8  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4582  0001CC  0E04               	movlw	4
  4583  0001CE  D006               	goto	u2530
  4584  0001D0                     u2535:
  4585  0001D0  0100               	movlb	0	; () banked
  4586  0001D2  90D8               	bcf	status,0,c
  4587  0001D4  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4588  0001D6  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4589  0001D8  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4590  0001DA  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  4591  0001DC                     u2530:
  4592  0001DC  2EE8               	decfsz	wreg,f,c
  4593  0001DE  D7F8               	goto	u2535
  4594  0001E0  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4595  0001E4  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4596  0001E8  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4597  0001EC  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
  4601  0001F0  0100               	movlb	0	; () banked
  4602  0001F2  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  4603  0001F4  0100               	movlb	0	; () banked
  4604  0001F6  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4605  0001F8  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4606  0001FA  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4607  0001FC  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
  4611  0001FE  C080  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
  4615  000202  0E07               	movlw	7
  4616  000204  0100               	movlb	0	; () banked
  4617  000206  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  4618  000208  0100               	movlb	0	; () banked
  4619  00020A  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4620  00020C  0E00               	movlw	0
  4621  00020E  0100               	movlb	0	; () banked
  4622  000210  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4623  000212  0100               	movlb	0	; () banked
  4624  000214  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4625  000216  0E00               	movlw	0
  4626  000218  0100               	movlb	0	; () banked
  4627  00021A  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4628  00021C  0100               	movlb	0	; () banked
  4629  00021E  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4630  000220  0E00               	movlw	0
  4631  000222  0100               	movlb	0	; () banked
  4632  000224  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4633  000226  0100               	movlb	0	; () banked
  4634  000228  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;inc\CANlib.h: 761: tamp = tamp << 5;
  4638  00022A  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  4639  00022E  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4640  000232  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4641  000236  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4642  00023A  0E05               	movlw	5
  4643  00023C                     u2545:
  4644  00023C  90D8               	bcf	status,0,c
  4645  00023E  0100               	movlb	0	; () banked
  4646  000240  377B               	rlcf	??_CANSetFilter& (0+255),f,b
  4647  000242  377C               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4648  000244  377D               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4649  000246  377E               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4650  000248  2EE8               	decfsz	wreg,f,c
  4651  00024A  D7F8               	goto	u2545
  4652  00024C  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4653  000250  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4654  000254  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4655  000258  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
  4659  00025C  C080  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  4660  000260                     l2709:
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;inc\CANlib.h: 763: }
  4664                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  4665  000260  0100               	movlb	0	; () banked
  4666  000262  057F               	decf	CANSetFilter@numBuffer& (0+255),w,b
  4667  000264  A4D8               	btfss	status,2,c
  4668  000266  D058               	goto	l2727
  4669                           
  4670                           ; BSR set to: 0
  4671  000268  0100               	movlb	0	; () banked
  4672  00026A  297A               	incf	CANSetFilter@type& (0+255),w,b
  4673  00026C  A4D8               	btfss	status,2,c
  4674  00026E  D054               	goto	l2727
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;inc\CANlib.h: 766: {
  4678                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
  4679  000270  010F               	movlb	15	; () banked
  4680  000272  9705               	bcf	5,3,b	;volatile
  4681                           
  4682                           ; BSR set to: 15
  4683                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
  4684  000274  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  4685  000278  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4686  00027C  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4687  000280  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4688  000284  0E04               	movlw	4
  4689  000286  D006               	goto	u2570
  4690  000288                     u2575:
  4691  000288  0100               	movlb	0	; () banked
  4692  00028A  90D8               	bcf	status,0,c
  4693  00028C  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4694  00028E  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4695  000290  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4696  000292  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  4697  000294                     u2570:
  4698  000294  2EE8               	decfsz	wreg,f,c
  4699  000296  D7F8               	goto	u2575
  4700  000298  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4701  00029C  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4702  0002A0  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4703  0002A4  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
  4707  0002A8  0100               	movlb	0	; () banked
  4708  0002AA  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  4709  0002AC  0100               	movlb	0	; () banked
  4710  0002AE  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4711  0002B0  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4712  0002B2  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4713  0002B4  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
  4717  0002B6  C080  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
  4721  0002BA  0E07               	movlw	7
  4722  0002BC  0100               	movlb	0	; () banked
  4723  0002BE  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  4724  0002C0  0100               	movlb	0	; () banked
  4725  0002C2  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4726  0002C4  0E00               	movlw	0
  4727  0002C6  0100               	movlb	0	; () banked
  4728  0002C8  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4729  0002CA  0100               	movlb	0	; () banked
  4730  0002CC  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4731  0002CE  0E00               	movlw	0
  4732  0002D0  0100               	movlb	0	; () banked
  4733  0002D2  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4734  0002D4  0100               	movlb	0	; () banked
  4735  0002D6  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4736  0002D8  0E00               	movlw	0
  4737  0002DA  0100               	movlb	0	; () banked
  4738  0002DC  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4739  0002DE  0100               	movlb	0	; () banked
  4740  0002E0  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;inc\CANlib.h: 774: tamp = tamp << 5;
  4744  0002E2  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  4745  0002E6  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4746  0002EA  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4747  0002EE  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4748  0002F2  0E05               	movlw	5
  4749  0002F4                     u2585:
  4750  0002F4  90D8               	bcf	status,0,c
  4751  0002F6  0100               	movlb	0	; () banked
  4752  0002F8  377B               	rlcf	??_CANSetFilter& (0+255),f,b
  4753  0002FA  377C               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4754  0002FC  377D               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4755  0002FE  377E               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4756  000300  2EE8               	decfsz	wreg,f,c
  4757  000302  D7F8               	goto	u2585
  4758  000304  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4759  000308  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4760  00030C  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4761  000310  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
  4765  000314  C080  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  4766  000318                     l2727:
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;inc\CANlib.h: 776: }
  4770                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  4771  000318  0E02               	movlw	2
  4772  00031A  0100               	movlb	0	; () banked
  4773  00031C  197F               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4774  00031E  A4D8               	btfss	status,2,c
  4775  000320  D058               	goto	l2745
  4776                           
  4777                           ; BSR set to: 0
  4778  000322  0100               	movlb	0	; () banked
  4779  000324  297A               	incf	CANSetFilter@type& (0+255),w,b
  4780  000326  A4D8               	btfss	status,2,c
  4781  000328  D054               	goto	l2745
  4782                           
  4783                           ; BSR set to: 0
  4784                           ;inc\CANlib.h: 779: {
  4785                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
  4786  00032A  010F               	movlb	15	; () banked
  4787  00032C  9709               	bcf	9,3,b	;volatile
  4788                           
  4789                           ; BSR set to: 15
  4790                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
  4791  00032E  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  4792  000332  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4793  000336  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4794  00033A  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4795  00033E  0E04               	movlw	4
  4796  000340  D006               	goto	u2610
  4797  000342                     u2615:
  4798  000342  0100               	movlb	0	; () banked
  4799  000344  90D8               	bcf	status,0,c
  4800  000346  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4801  000348  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4802  00034A  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4803  00034C  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  4804  00034E                     u2610:
  4805  00034E  2EE8               	decfsz	wreg,f,c
  4806  000350  D7F8               	goto	u2615
  4807  000352  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4808  000356  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4809  00035A  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4810  00035E  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
  4814  000362  0100               	movlb	0	; () banked
  4815  000364  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  4816  000366  0100               	movlb	0	; () banked
  4817  000368  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4818  00036A  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4819  00036C  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4820  00036E  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
  4824  000370  C080  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
  4828  000374  0E07               	movlw	7
  4829  000376  0100               	movlb	0	; () banked
  4830  000378  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  4831  00037A  0100               	movlb	0	; () banked
  4832  00037C  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4833  00037E  0E00               	movlw	0
  4834  000380  0100               	movlb	0	; () banked
  4835  000382  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4836  000384  0100               	movlb	0	; () banked
  4837  000386  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4838  000388  0E00               	movlw	0
  4839  00038A  0100               	movlb	0	; () banked
  4840  00038C  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4841  00038E  0100               	movlb	0	; () banked
  4842  000390  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4843  000392  0E00               	movlw	0
  4844  000394  0100               	movlb	0	; () banked
  4845  000396  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4846  000398  0100               	movlb	0	; () banked
  4847  00039A  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;inc\CANlib.h: 787: tamp = tamp << 5;
  4851  00039C  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  4852  0003A0  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4853  0003A4  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4854  0003A8  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4855  0003AC  0E05               	movlw	5
  4856  0003AE                     u2625:
  4857  0003AE  90D8               	bcf	status,0,c
  4858  0003B0  0100               	movlb	0	; () banked
  4859  0003B2  377B               	rlcf	??_CANSetFilter& (0+255),f,b
  4860  0003B4  377C               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4861  0003B6  377D               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4862  0003B8  377E               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4863  0003BA  2EE8               	decfsz	wreg,f,c
  4864  0003BC  D7F8               	goto	u2625
  4865  0003BE  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4866  0003C2  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4867  0003C6  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4868  0003CA  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
  4872  0003CE  C080  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  4873  0003D2                     l2745:
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;inc\CANlib.h: 789: }
  4877                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  4878  0003D2  0E03               	movlw	3
  4879  0003D4  0100               	movlb	0	; () banked
  4880  0003D6  197F               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4881  0003D8  A4D8               	btfss	status,2,c
  4882  0003DA  D058               	goto	l2763
  4883                           
  4884                           ; BSR set to: 0
  4885  0003DC  0100               	movlb	0	; () banked
  4886  0003DE  297A               	incf	CANSetFilter@type& (0+255),w,b
  4887  0003E0  A4D8               	btfss	status,2,c
  4888  0003E2  D054               	goto	l2763
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;inc\CANlib.h: 792: {
  4892                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
  4893  0003E4  010F               	movlb	15	; () banked
  4894  0003E6  970D               	bcf	13,3,b	;volatile
  4895                           
  4896                           ; BSR set to: 15
  4897                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
  4898  0003E8  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  4899  0003EC  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  4900  0003F0  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  4901  0003F4  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  4902  0003F8  0E04               	movlw	4
  4903  0003FA  D006               	goto	u2650
  4904  0003FC                     u2655:
  4905  0003FC  0100               	movlb	0	; () banked
  4906  0003FE  90D8               	bcf	status,0,c
  4907  000400  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  4908  000402  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  4909  000404  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  4910  000406  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  4911  000408                     u2650:
  4912  000408  2EE8               	decfsz	wreg,f,c
  4913  00040A  D7F8               	goto	u2655
  4914  00040C  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4915  000410  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4916  000414  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4917  000418  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
  4921  00041C  0100               	movlb	0	; () banked
  4922  00041E  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  4923  000420  0100               	movlb	0	; () banked
  4924  000422  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4925  000424  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  4926  000426  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  4927  000428  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
  4931  00042A  C080  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
  4935  00042E  0E07               	movlw	7
  4936  000430  0100               	movlb	0	; () banked
  4937  000432  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  4938  000434  0100               	movlb	0	; () banked
  4939  000436  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  4940  000438  0E00               	movlw	0
  4941  00043A  0100               	movlb	0	; () banked
  4942  00043C  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  4943  00043E  0100               	movlb	0	; () banked
  4944  000440  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  4945  000442  0E00               	movlw	0
  4946  000444  0100               	movlb	0	; () banked
  4947  000446  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  4948  000448  0100               	movlb	0	; () banked
  4949  00044A  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  4950  00044C  0E00               	movlw	0
  4951  00044E  0100               	movlb	0	; () banked
  4952  000450  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  4953  000452  0100               	movlb	0	; () banked
  4954  000454  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;inc\CANlib.h: 800: tamp = tamp << 5;
  4958  000456  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  4959  00045A  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  4960  00045E  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  4961  000462  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  4962  000466  0E05               	movlw	5
  4963  000468                     u2665:
  4964  000468  90D8               	bcf	status,0,c
  4965  00046A  0100               	movlb	0	; () banked
  4966  00046C  377B               	rlcf	??_CANSetFilter& (0+255),f,b
  4967  00046E  377C               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  4968  000470  377D               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  4969  000472  377E               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  4970  000474  2EE8               	decfsz	wreg,f,c
  4971  000476  D7F8               	goto	u2665
  4972  000478  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  4973  00047C  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  4974  000480  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  4975  000484  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  4976                           
  4977                           ; BSR set to: 0
  4978                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
  4979  000488  C080  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  4980  00048C                     l2763:
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;inc\CANlib.h: 802: }
  4984                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  4985  00048C  0E04               	movlw	4
  4986  00048E  0100               	movlb	0	; () banked
  4987  000490  197F               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  4988  000492  A4D8               	btfss	status,2,c
  4989  000494  D058               	goto	l2781
  4990                           
  4991                           ; BSR set to: 0
  4992  000496  0100               	movlb	0	; () banked
  4993  000498  297A               	incf	CANSetFilter@type& (0+255),w,b
  4994  00049A  A4D8               	btfss	status,2,c
  4995  00049C  D054               	goto	l2781
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;inc\CANlib.h: 805: {
  4999                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
  5000  00049E  010F               	movlb	15	; () banked
  5001  0004A0  9711               	bcf	17,3,b	;volatile
  5002                           
  5003                           ; BSR set to: 15
  5004                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
  5005  0004A2  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  5006  0004A6  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5007  0004AA  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5008  0004AE  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5009  0004B2  0E04               	movlw	4
  5010  0004B4  D006               	goto	u2690
  5011  0004B6                     u2695:
  5012  0004B6  0100               	movlb	0	; () banked
  5013  0004B8  90D8               	bcf	status,0,c
  5014  0004BA  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5015  0004BC  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5016  0004BE  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5017  0004C0  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  5018  0004C2                     u2690:
  5019  0004C2  2EE8               	decfsz	wreg,f,c
  5020  0004C4  D7F8               	goto	u2695
  5021  0004C6  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5022  0004CA  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5023  0004CE  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5024  0004D2  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5025                           
  5026                           ; BSR set to: 0
  5027                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
  5028  0004D6  0100               	movlb	0	; () banked
  5029  0004D8  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  5030  0004DA  0100               	movlb	0	; () banked
  5031  0004DC  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5032  0004DE  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5033  0004E0  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5034  0004E2  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
  5038  0004E4  C080  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
  5042  0004E8  0E07               	movlw	7
  5043  0004EA  0100               	movlb	0	; () banked
  5044  0004EC  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  5045  0004EE  0100               	movlb	0	; () banked
  5046  0004F0  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5047  0004F2  0E00               	movlw	0
  5048  0004F4  0100               	movlb	0	; () banked
  5049  0004F6  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5050  0004F8  0100               	movlb	0	; () banked
  5051  0004FA  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5052  0004FC  0E00               	movlw	0
  5053  0004FE  0100               	movlb	0	; () banked
  5054  000500  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5055  000502  0100               	movlb	0	; () banked
  5056  000504  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5057  000506  0E00               	movlw	0
  5058  000508  0100               	movlb	0	; () banked
  5059  00050A  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5060  00050C  0100               	movlb	0	; () banked
  5061  00050E  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;inc\CANlib.h: 813: tamp = tamp << 5;
  5065  000510  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  5066  000514  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5067  000518  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5068  00051C  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5069  000520  0E05               	movlw	5
  5070  000522                     u2705:
  5071  000522  90D8               	bcf	status,0,c
  5072  000524  0100               	movlb	0	; () banked
  5073  000526  377B               	rlcf	??_CANSetFilter& (0+255),f,b
  5074  000528  377C               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5075  00052A  377D               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5076  00052C  377E               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5077  00052E  2EE8               	decfsz	wreg,f,c
  5078  000530  D7F8               	goto	u2705
  5079  000532  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5080  000536  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5081  00053A  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5082  00053E  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5083                           
  5084                           ; BSR set to: 0
  5085                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
  5086  000542  C080  FF11         	movff	CANSetFilter@tamp,3857	;volatile
  5087  000546                     l2781:
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;inc\CANlib.h: 815: }
  5091                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
  5092  000546  0E05               	movlw	5
  5093  000548  0100               	movlb	0	; () banked
  5094  00054A  197F               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5095  00054C  A4D8               	btfss	status,2,c
  5096  00054E  D058               	goto	l2799
  5097                           
  5098                           ; BSR set to: 0
  5099  000550  0100               	movlb	0	; () banked
  5100  000552  297A               	incf	CANSetFilter@type& (0+255),w,b
  5101  000554  A4D8               	btfss	status,2,c
  5102  000556  D054               	goto	l2799
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;inc\CANlib.h: 818: {
  5106                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
  5107  000558  010F               	movlb	15	; () banked
  5108  00055A  9715               	bcf	21,3,b	;volatile
  5109                           
  5110                           ; BSR set to: 15
  5111                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
  5112  00055C  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  5113  000560  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5114  000564  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5115  000568  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5116  00056C  0E04               	movlw	4
  5117  00056E  D006               	goto	u2730
  5118  000570                     u2735:
  5119  000570  0100               	movlb	0	; () banked
  5120  000572  90D8               	bcf	status,0,c
  5121  000574  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5122  000576  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5123  000578  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5124  00057A  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  5125  00057C                     u2730:
  5126  00057C  2EE8               	decfsz	wreg,f,c
  5127  00057E  D7F8               	goto	u2735
  5128  000580  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5129  000584  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5130  000588  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5131  00058C  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
  5135  000590  0100               	movlb	0	; () banked
  5136  000592  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  5137  000594  0100               	movlb	0	; () banked
  5138  000596  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5139  000598  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5140  00059A  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5141  00059C  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
  5145  00059E  C080  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
  5149  0005A2  0E07               	movlw	7
  5150  0005A4  0100               	movlb	0	; () banked
  5151  0005A6  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  5152  0005A8  0100               	movlb	0	; () banked
  5153  0005AA  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5154  0005AC  0E00               	movlw	0
  5155  0005AE  0100               	movlb	0	; () banked
  5156  0005B0  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5157  0005B2  0100               	movlb	0	; () banked
  5158  0005B4  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5159  0005B6  0E00               	movlw	0
  5160  0005B8  0100               	movlb	0	; () banked
  5161  0005BA  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5162  0005BC  0100               	movlb	0	; () banked
  5163  0005BE  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5164  0005C0  0E00               	movlw	0
  5165  0005C2  0100               	movlb	0	; () banked
  5166  0005C4  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5167  0005C6  0100               	movlb	0	; () banked
  5168  0005C8  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;inc\CANlib.h: 826: tamp = tamp << 5;
  5172  0005CA  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  5173  0005CE  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5174  0005D2  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5175  0005D6  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5176  0005DA  0E05               	movlw	5
  5177  0005DC                     u2745:
  5178  0005DC  90D8               	bcf	status,0,c
  5179  0005DE  0100               	movlb	0	; () banked
  5180  0005E0  377B               	rlcf	??_CANSetFilter& (0+255),f,b
  5181  0005E2  377C               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  5182  0005E4  377D               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  5183  0005E6  377E               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  5184  0005E8  2EE8               	decfsz	wreg,f,c
  5185  0005EA  D7F8               	goto	u2745
  5186  0005EC  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5187  0005F0  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5188  0005F4  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5189  0005F8  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
  5193  0005FC  C080  FF15         	movff	CANSetFilter@tamp,3861	;volatile
  5194  000600                     l2799:
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;inc\CANlib.h: 828: }
  5198                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
  5199  000600  0100               	movlb	0	; () banked
  5200  000602  517F               	movf	CANSetFilter@numBuffer& (0+255),w,b
  5201  000604  0100               	movlb	0	; () banked
  5202  000606  A4D8               	btfss	status,2,c
  5203  000608  D089               	goto	l2833
  5204                           
  5205                           ; BSR set to: 0
  5206  00060A  0EF7               	movlw	247
  5207  00060C  0100               	movlb	0	; () banked
  5208  00060E  197A               	xorwf	CANSetFilter@type& (0+255),w,b
  5209  000610  A4D8               	btfss	status,2,c
  5210  000612  D084               	goto	l2833
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;inc\CANlib.h: 832: {
  5214                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
  5215  000614  010F               	movlb	15	; () banked
  5216  000616  8701               	bsf	1,3,b	;volatile
  5217                           
  5218                           ; BSR set to: 15
  5219                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
  5220  000618  0100               	movlb	0	; () banked
  5221  00061A  5176               	movf	CANSetFilter@filter& (0+255),w,b
  5222  00061C  0100               	movlb	0	; () banked
  5223  00061E  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5224  000620  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5225  000622  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5226  000624  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
  5230  000626  C080  FF03         	movff	CANSetFilter@tamp,3843	;volatile
  5231                           
  5232                           ; BSR set to: 0
  5233                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
  5234  00062A  0E00               	movlw	0
  5235  00062C  0100               	movlb	0	; () banked
  5236  00062E  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  5237  000630  0100               	movlb	0	; () banked
  5238  000632  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5239  000634  0EFF               	movlw	255
  5240  000636  0100               	movlb	0	; () banked
  5241  000638  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5242  00063A  0100               	movlb	0	; () banked
  5243  00063C  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5244  00063E  0E00               	movlw	0
  5245  000640  0100               	movlb	0	; () banked
  5246  000642  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5247  000644  0100               	movlb	0	; () banked
  5248  000646  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5249  000648  0E00               	movlw	0
  5250  00064A  0100               	movlb	0	; () banked
  5251  00064C  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5252  00064E  0100               	movlb	0	; () banked
  5253  000650  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
  5257  000652  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  5258  000656  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5259  00065A  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5260  00065E  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5261  000662  C07C  F07B         	movff	??_CANSetFilter+1,??_CANSetFilter
  5262  000666  C07D  F07C         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5263  00066A  C07E  F07D         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5264  00066E  0100               	movlb	0	; () banked
  5265  000670  6B7E               	clrf	(??_CANSetFilter+3)& (0+255),b
  5266  000672  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5267  000676  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5268  00067A  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5269  00067E  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
  5273  000682  C080  FF02         	movff	CANSetFilter@tamp,3842	;volatile
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
  5277  000686  0100               	movlb	0	; () banked
  5278  000688  A178               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5279  00068A  D003               	goto	l455
  5280                           
  5281                           ; BSR set to: 0
  5282                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
  5283  00068C  010F               	movlb	15	; () banked
  5284  00068E  8101               	bsf	1,0,b	;volatile
  5285  000690  D002               	goto	l456
  5286  000692                     l455:
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;inc\CANlib.h: 844: else
  5290                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
  5291  000692  010F               	movlb	15	; () banked
  5292  000694  9101               	bcf	1,0,b	;volatile
  5293  000696                     l456:
  5294                           
  5295                           ; BSR set to: 15
  5296                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
  5297  000696  0100               	movlb	0	; () banked
  5298  000698  A378               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5299  00069A  D003               	goto	l457
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
  5303  00069C  010F               	movlb	15	; () banked
  5304  00069E  8301               	bsf	1,1,b	;volatile
  5305  0006A0  D002               	goto	l458
  5306  0006A2                     l457:
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;inc\CANlib.h: 849: else
  5310                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
  5311  0006A2  010F               	movlb	15	; () banked
  5312  0006A4  9301               	bcf	1,1,b	;volatile
  5313  0006A6                     l458:
  5314                           
  5315                           ; BSR set to: 15
  5316                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
  5317  0006A6  0100               	movlb	0	; () banked
  5318  0006A8  A578               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5319  0006AA  D003               	goto	l459
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
  5323  0006AC  010F               	movlb	15	; () banked
  5324  0006AE  8B01               	bsf	1,5,b	;volatile
  5325  0006B0  D002               	goto	l460
  5326  0006B2                     l459:
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;inc\CANlib.h: 854: else
  5330                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
  5331  0006B2  010F               	movlb	15	; () banked
  5332  0006B4  9B01               	bcf	1,5,b	;volatile
  5333  0006B6                     l460:
  5334                           
  5335                           ; BSR set to: 15
  5336                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
  5337  0006B6  0100               	movlb	0	; () banked
  5338  0006B8  A778               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5339  0006BA  D003               	goto	l461
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
  5343  0006BC  010F               	movlb	15	; () banked
  5344  0006BE  8D01               	bsf	1,6,b	;volatile
  5345  0006C0  D002               	goto	l462
  5346  0006C2                     l461:
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;inc\CANlib.h: 859: else
  5350                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
  5351  0006C2  010F               	movlb	15	; () banked
  5352  0006C4  9D01               	bcf	1,6,b	;volatile
  5353  0006C6                     l462:
  5354                           
  5355                           ; BSR set to: 15
  5356                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
  5357  0006C6  0100               	movlb	0	; () banked
  5358  0006C8  A978               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5359  0006CA  D003               	goto	l463
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
  5363  0006CC  010F               	movlb	15	; () banked
  5364  0006CE  8F01               	bsf	1,7,b	;volatile
  5365  0006D0  D002               	goto	l2827
  5366  0006D2                     l463:
  5367                           
  5368                           ; BSR set to: 0
  5369                           ;inc\CANlib.h: 864: else
  5370                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
  5371  0006D2  010F               	movlb	15	; () banked
  5372  0006D4  9F01               	bcf	1,7,b	;volatile
  5373  0006D6                     l2827:
  5374                           
  5375                           ; BSR set to: 15
  5376                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
  5377  0006D6  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  5378  0006DA  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5379  0006DE  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5380  0006E2  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5381  0006E6  0E16               	movlw	22
  5382  0006E8  D006               	goto	u2820
  5383  0006EA                     u2825:
  5384  0006EA  0100               	movlb	0	; () banked
  5385  0006EC  90D8               	bcf	status,0,c
  5386  0006EE  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5387  0006F0  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5388  0006F2  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5389  0006F4  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  5390  0006F6                     u2820:
  5391  0006F6  2EE8               	decfsz	wreg,f,c
  5392  0006F8  D7F8               	goto	u2825
  5393  0006FA  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5394  0006FE  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5395  000702  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5396  000706  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5397                           
  5398                           ; BSR set to: 0
  5399                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
  5400  00070A  0100               	movlb	0	; () banked
  5401  00070C  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  5402  00070E  0100               	movlb	0	; () banked
  5403  000710  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5404  000712  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5405  000714  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5406  000716  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
  5410  000718  C080  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  5411  00071C                     l2833:
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;inc\CANlib.h: 870: }
  5415                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
  5416  00071C  0100               	movlb	0	; () banked
  5417  00071E  057F               	decf	CANSetFilter@numBuffer& (0+255),w,b
  5418  000720  A4D8               	btfss	status,2,c
  5419  000722  D089               	goto	l2867
  5420                           
  5421                           ; BSR set to: 0
  5422  000724  0EF7               	movlw	247
  5423  000726  0100               	movlb	0	; () banked
  5424  000728  197A               	xorwf	CANSetFilter@type& (0+255),w,b
  5425  00072A  A4D8               	btfss	status,2,c
  5426  00072C  D084               	goto	l2867
  5427                           
  5428                           ; BSR set to: 0
  5429                           ;inc\CANlib.h: 873: {
  5430                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
  5431  00072E  010F               	movlb	15	; () banked
  5432  000730  8705               	bsf	5,3,b	;volatile
  5433                           
  5434                           ; BSR set to: 15
  5435                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
  5436  000732  0100               	movlb	0	; () banked
  5437  000734  5176               	movf	CANSetFilter@filter& (0+255),w,b
  5438  000736  0100               	movlb	0	; () banked
  5439  000738  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5440  00073A  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5441  00073C  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5442  00073E  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
  5446  000740  C080  FF07         	movff	CANSetFilter@tamp,3847	;volatile
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
  5450  000744  0E00               	movlw	0
  5451  000746  0100               	movlb	0	; () banked
  5452  000748  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  5453  00074A  0100               	movlb	0	; () banked
  5454  00074C  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5455  00074E  0EFF               	movlw	255
  5456  000750  0100               	movlb	0	; () banked
  5457  000752  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5458  000754  0100               	movlb	0	; () banked
  5459  000756  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5460  000758  0E00               	movlw	0
  5461  00075A  0100               	movlb	0	; () banked
  5462  00075C  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5463  00075E  0100               	movlb	0	; () banked
  5464  000760  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5465  000762  0E00               	movlw	0
  5466  000764  0100               	movlb	0	; () banked
  5467  000766  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5468  000768  0100               	movlb	0	; () banked
  5469  00076A  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
  5473  00076C  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  5474  000770  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5475  000774  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5476  000778  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5477  00077C  C07C  F07B         	movff	??_CANSetFilter+1,??_CANSetFilter
  5478  000780  C07D  F07C         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5479  000784  C07E  F07D         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5480  000788  0100               	movlb	0	; () banked
  5481  00078A  6B7E               	clrf	(??_CANSetFilter+3)& (0+255),b
  5482  00078C  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5483  000790  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5484  000794  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5485  000798  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
  5489  00079C  C080  FF06         	movff	CANSetFilter@tamp,3846	;volatile
  5490                           
  5491                           ; BSR set to: 0
  5492                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
  5493  0007A0  0100               	movlb	0	; () banked
  5494  0007A2  A178               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5495  0007A4  D003               	goto	l466
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
  5499  0007A6  010F               	movlb	15	; () banked
  5500  0007A8  8105               	bsf	5,0,b	;volatile
  5501  0007AA  D002               	goto	l467
  5502  0007AC                     l466:
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;inc\CANlib.h: 885: else
  5506                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
  5507  0007AC  010F               	movlb	15	; () banked
  5508  0007AE  9105               	bcf	5,0,b	;volatile
  5509  0007B0                     l467:
  5510                           
  5511                           ; BSR set to: 15
  5512                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
  5513  0007B0  0100               	movlb	0	; () banked
  5514  0007B2  A378               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5515  0007B4  D003               	goto	l468
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
  5519  0007B6  010F               	movlb	15	; () banked
  5520  0007B8  8305               	bsf	5,1,b	;volatile
  5521  0007BA  D002               	goto	l469
  5522  0007BC                     l468:
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;inc\CANlib.h: 890: else
  5526                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
  5527  0007BC  010F               	movlb	15	; () banked
  5528  0007BE  9305               	bcf	5,1,b	;volatile
  5529  0007C0                     l469:
  5530                           
  5531                           ; BSR set to: 15
  5532                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
  5533  0007C0  0100               	movlb	0	; () banked
  5534  0007C2  A578               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5535  0007C4  D003               	goto	l470
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
  5539  0007C6  010F               	movlb	15	; () banked
  5540  0007C8  8B05               	bsf	5,5,b	;volatile
  5541  0007CA  D002               	goto	l471
  5542  0007CC                     l470:
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;inc\CANlib.h: 895: else
  5546                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
  5547  0007CC  010F               	movlb	15	; () banked
  5548  0007CE  9B05               	bcf	5,5,b	;volatile
  5549  0007D0                     l471:
  5550                           
  5551                           ; BSR set to: 15
  5552                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
  5553  0007D0  0100               	movlb	0	; () banked
  5554  0007D2  A778               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5555  0007D4  D003               	goto	l472
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
  5559  0007D6  010F               	movlb	15	; () banked
  5560  0007D8  8D05               	bsf	5,6,b	;volatile
  5561  0007DA  D002               	goto	l473
  5562  0007DC                     l472:
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;inc\CANlib.h: 900: else
  5566                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
  5567  0007DC  010F               	movlb	15	; () banked
  5568  0007DE  9D05               	bcf	5,6,b	;volatile
  5569  0007E0                     l473:
  5570                           
  5571                           ; BSR set to: 15
  5572                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
  5573  0007E0  0100               	movlb	0	; () banked
  5574  0007E2  A978               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5575  0007E4  D003               	goto	l474
  5576                           
  5577                           ; BSR set to: 0
  5578                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
  5579  0007E6  010F               	movlb	15	; () banked
  5580  0007E8  8F05               	bsf	5,7,b	;volatile
  5581  0007EA  D002               	goto	l2861
  5582  0007EC                     l474:
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;inc\CANlib.h: 905: else
  5586                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
  5587  0007EC  010F               	movlb	15	; () banked
  5588  0007EE  9F05               	bcf	5,7,b	;volatile
  5589  0007F0                     l2861:
  5590                           
  5591                           ; BSR set to: 15
  5592                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
  5593  0007F0  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  5594  0007F4  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5595  0007F8  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5596  0007FC  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5597  000800  0E16               	movlw	22
  5598  000802  D006               	goto	u2900
  5599  000804                     u2905:
  5600  000804  0100               	movlb	0	; () banked
  5601  000806  90D8               	bcf	status,0,c
  5602  000808  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5603  00080A  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5604  00080C  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5605  00080E  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  5606  000810                     u2900:
  5607  000810  2EE8               	decfsz	wreg,f,c
  5608  000812  D7F8               	goto	u2905
  5609  000814  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5610  000818  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5611  00081C  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5612  000820  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
  5616  000824  0100               	movlb	0	; () banked
  5617  000826  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  5618  000828  0100               	movlb	0	; () banked
  5619  00082A  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5620  00082C  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5621  00082E  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5622  000830  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
  5626  000832  C080  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  5627  000836                     l2867:
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;inc\CANlib.h: 911: }
  5631                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
  5632  000836  0E02               	movlw	2
  5633  000838  0100               	movlb	0	; () banked
  5634  00083A  197F               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5635  00083C  A4D8               	btfss	status,2,c
  5636  00083E  D089               	goto	l2901
  5637                           
  5638                           ; BSR set to: 0
  5639  000840  0EF7               	movlw	247
  5640  000842  0100               	movlb	0	; () banked
  5641  000844  197A               	xorwf	CANSetFilter@type& (0+255),w,b
  5642  000846  A4D8               	btfss	status,2,c
  5643  000848  D084               	goto	l2901
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;inc\CANlib.h: 915: {
  5647                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
  5648  00084A  010F               	movlb	15	; () banked
  5649  00084C  8709               	bsf	9,3,b	;volatile
  5650                           
  5651                           ; BSR set to: 15
  5652                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
  5653  00084E  0100               	movlb	0	; () banked
  5654  000850  5176               	movf	CANSetFilter@filter& (0+255),w,b
  5655  000852  0100               	movlb	0	; () banked
  5656  000854  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5657  000856  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5658  000858  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5659  00085A  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
  5663  00085C  C080  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
  5667  000860  0E00               	movlw	0
  5668  000862  0100               	movlb	0	; () banked
  5669  000864  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  5670  000866  0100               	movlb	0	; () banked
  5671  000868  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5672  00086A  0EFF               	movlw	255
  5673  00086C  0100               	movlb	0	; () banked
  5674  00086E  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5675  000870  0100               	movlb	0	; () banked
  5676  000872  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5677  000874  0E00               	movlw	0
  5678  000876  0100               	movlb	0	; () banked
  5679  000878  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5680  00087A  0100               	movlb	0	; () banked
  5681  00087C  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5682  00087E  0E00               	movlw	0
  5683  000880  0100               	movlb	0	; () banked
  5684  000882  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5685  000884  0100               	movlb	0	; () banked
  5686  000886  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
  5690  000888  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  5691  00088C  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5692  000890  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5693  000894  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5694  000898  C07C  F07B         	movff	??_CANSetFilter+1,??_CANSetFilter
  5695  00089C  C07D  F07C         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5696  0008A0  C07E  F07D         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5697  0008A4  0100               	movlb	0	; () banked
  5698  0008A6  6B7E               	clrf	(??_CANSetFilter+3)& (0+255),b
  5699  0008A8  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5700  0008AC  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5701  0008B0  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5702  0008B4  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
  5706  0008B8  C080  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
  5710  0008BC  0100               	movlb	0	; () banked
  5711  0008BE  A178               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5712  0008C0  D003               	goto	l477
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
  5716  0008C2  010F               	movlb	15	; () banked
  5717  0008C4  8109               	bsf	9,0,b	;volatile
  5718  0008C6  D002               	goto	l478
  5719  0008C8                     l477:
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;inc\CANlib.h: 927: else
  5723                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
  5724  0008C8  010F               	movlb	15	; () banked
  5725  0008CA  9109               	bcf	9,0,b	;volatile
  5726  0008CC                     l478:
  5727                           
  5728                           ; BSR set to: 15
  5729                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
  5730  0008CC  0100               	movlb	0	; () banked
  5731  0008CE  A378               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5732  0008D0  D003               	goto	l479
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
  5736  0008D2  010F               	movlb	15	; () banked
  5737  0008D4  8309               	bsf	9,1,b	;volatile
  5738  0008D6  D002               	goto	l480
  5739  0008D8                     l479:
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;inc\CANlib.h: 932: else
  5743                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
  5744  0008D8  010F               	movlb	15	; () banked
  5745  0008DA  9309               	bcf	9,1,b	;volatile
  5746  0008DC                     l480:
  5747                           
  5748                           ; BSR set to: 15
  5749                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
  5750  0008DC  0100               	movlb	0	; () banked
  5751  0008DE  A578               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5752  0008E0  D003               	goto	l481
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
  5756  0008E2  010F               	movlb	15	; () banked
  5757  0008E4  8B09               	bsf	9,5,b	;volatile
  5758  0008E6  D002               	goto	l482
  5759  0008E8                     l481:
  5760                           
  5761                           ; BSR set to: 0
  5762                           ;inc\CANlib.h: 937: else
  5763                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
  5764  0008E8  010F               	movlb	15	; () banked
  5765  0008EA  9B09               	bcf	9,5,b	;volatile
  5766  0008EC                     l482:
  5767                           
  5768                           ; BSR set to: 15
  5769                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
  5770  0008EC  0100               	movlb	0	; () banked
  5771  0008EE  A778               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5772  0008F0  D003               	goto	l483
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
  5776  0008F2  010F               	movlb	15	; () banked
  5777  0008F4  8D09               	bsf	9,6,b	;volatile
  5778  0008F6  D002               	goto	l484
  5779  0008F8                     l483:
  5780                           
  5781                           ; BSR set to: 0
  5782                           ;inc\CANlib.h: 942: else
  5783                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
  5784  0008F8  010F               	movlb	15	; () banked
  5785  0008FA  9D09               	bcf	9,6,b	;volatile
  5786  0008FC                     l484:
  5787                           
  5788                           ; BSR set to: 15
  5789                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
  5790  0008FC  0100               	movlb	0	; () banked
  5791  0008FE  A978               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  5792  000900  D003               	goto	l485
  5793                           
  5794                           ; BSR set to: 0
  5795                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
  5796  000902  010F               	movlb	15	; () banked
  5797  000904  8F09               	bsf	9,7,b	;volatile
  5798  000906  D002               	goto	l2895
  5799  000908                     l485:
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;inc\CANlib.h: 947: else
  5803                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
  5804  000908  010F               	movlb	15	; () banked
  5805  00090A  9F09               	bcf	9,7,b	;volatile
  5806  00090C                     l2895:
  5807                           
  5808                           ; BSR set to: 15
  5809                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
  5810  00090C  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  5811  000910  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  5812  000914  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  5813  000918  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  5814  00091C  0E16               	movlw	22
  5815  00091E  D006               	goto	u2980
  5816  000920                     u2985:
  5817  000920  0100               	movlb	0	; () banked
  5818  000922  90D8               	bcf	status,0,c
  5819  000924  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  5820  000926  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  5821  000928  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  5822  00092A  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  5823  00092C                     u2980:
  5824  00092C  2EE8               	decfsz	wreg,f,c
  5825  00092E  D7F8               	goto	u2985
  5826  000930  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5827  000934  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5828  000938  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5829  00093C  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
  5833  000940  0100               	movlb	0	; () banked
  5834  000942  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  5835  000944  0100               	movlb	0	; () banked
  5836  000946  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5837  000948  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5838  00094A  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5839  00094C  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
  5843  00094E  C080  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  5844  000952                     l2901:
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;inc\CANlib.h: 953: }
  5848                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
  5849  000952  0E03               	movlw	3
  5850  000954  0100               	movlb	0	; () banked
  5851  000956  197F               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  5852  000958  A4D8               	btfss	status,2,c
  5853  00095A  D089               	goto	l2935
  5854                           
  5855                           ; BSR set to: 0
  5856  00095C  0EF7               	movlw	247
  5857  00095E  0100               	movlb	0	; () banked
  5858  000960  197A               	xorwf	CANSetFilter@type& (0+255),w,b
  5859  000962  A4D8               	btfss	status,2,c
  5860  000964  D084               	goto	l2935
  5861                           
  5862                           ; BSR set to: 0
  5863                           ;inc\CANlib.h: 956: {
  5864                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
  5865  000966  010F               	movlb	15	; () banked
  5866  000968  870D               	bsf	13,3,b	;volatile
  5867                           
  5868                           ; BSR set to: 15
  5869                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
  5870  00096A  0100               	movlb	0	; () banked
  5871  00096C  5176               	movf	CANSetFilter@filter& (0+255),w,b
  5872  00096E  0100               	movlb	0	; () banked
  5873  000970  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5874  000972  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  5875  000974  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  5876  000976  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
  5880  000978  C080  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
  5881                           
  5882                           ; BSR set to: 0
  5883                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
  5884  00097C  0E00               	movlw	0
  5885  00097E  0100               	movlb	0	; () banked
  5886  000980  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  5887  000982  0100               	movlb	0	; () banked
  5888  000984  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  5889  000986  0EFF               	movlw	255
  5890  000988  0100               	movlb	0	; () banked
  5891  00098A  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  5892  00098C  0100               	movlb	0	; () banked
  5893  00098E  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  5894  000990  0E00               	movlw	0
  5895  000992  0100               	movlb	0	; () banked
  5896  000994  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  5897  000996  0100               	movlb	0	; () banked
  5898  000998  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  5899  00099A  0E00               	movlw	0
  5900  00099C  0100               	movlb	0	; () banked
  5901  00099E  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  5902  0009A0  0100               	movlb	0	; () banked
  5903  0009A2  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
  5907  0009A4  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  5908  0009A8  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  5909  0009AC  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  5910  0009B0  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  5911  0009B4  C07C  F07B         	movff	??_CANSetFilter+1,??_CANSetFilter
  5912  0009B8  C07D  F07C         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  5913  0009BC  C07E  F07D         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  5914  0009C0  0100               	movlb	0	; () banked
  5915  0009C2  6B7E               	clrf	(??_CANSetFilter+3)& (0+255),b
  5916  0009C4  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  5917  0009C8  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  5918  0009CC  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  5919  0009D0  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
  5923  0009D4  C080  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
  5927  0009D8  0100               	movlb	0	; () banked
  5928  0009DA  A178               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  5929  0009DC  D003               	goto	l488
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
  5933  0009DE  010F               	movlb	15	; () banked
  5934  0009E0  810D               	bsf	13,0,b	;volatile
  5935  0009E2  D002               	goto	l489
  5936  0009E4                     l488:
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;inc\CANlib.h: 968: else
  5940                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
  5941  0009E4  010F               	movlb	15	; () banked
  5942  0009E6  910D               	bcf	13,0,b	;volatile
  5943  0009E8                     l489:
  5944                           
  5945                           ; BSR set to: 15
  5946                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
  5947  0009E8  0100               	movlb	0	; () banked
  5948  0009EA  A378               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  5949  0009EC  D003               	goto	l490
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
  5953  0009EE  010F               	movlb	15	; () banked
  5954  0009F0  830D               	bsf	13,1,b	;volatile
  5955  0009F2  D002               	goto	l491
  5956  0009F4                     l490:
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;inc\CANlib.h: 973: else
  5960                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
  5961  0009F4  010F               	movlb	15	; () banked
  5962  0009F6  930D               	bcf	13,1,b	;volatile
  5963  0009F8                     l491:
  5964                           
  5965                           ; BSR set to: 15
  5966                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
  5967  0009F8  0100               	movlb	0	; () banked
  5968  0009FA  A578               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  5969  0009FC  D003               	goto	l492
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
  5973  0009FE  010F               	movlb	15	; () banked
  5974  000A00  8B0D               	bsf	13,5,b	;volatile
  5975  000A02  D002               	goto	l493
  5976  000A04                     l492:
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;inc\CANlib.h: 978: else
  5980                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
  5981  000A04  010F               	movlb	15	; () banked
  5982  000A06  9B0D               	bcf	13,5,b	;volatile
  5983  000A08                     l493:
  5984                           
  5985                           ; BSR set to: 15
  5986                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
  5987  000A08  0100               	movlb	0	; () banked
  5988  000A0A  A778               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  5989  000A0C  D003               	goto	l494
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
  5993  000A0E  010F               	movlb	15	; () banked
  5994  000A10  8D0D               	bsf	13,6,b	;volatile
  5995  000A12  D002               	goto	l495
  5996  000A14                     l494:
  5997                           
  5998                           ; BSR set to: 0
  5999                           ;inc\CANlib.h: 983: else
  6000                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
  6001  000A14  010F               	movlb	15	; () banked
  6002  000A16  9D0D               	bcf	13,6,b	;volatile
  6003  000A18                     l495:
  6004                           
  6005                           ; BSR set to: 15
  6006                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
  6007  000A18  0100               	movlb	0	; () banked
  6008  000A1A  A978               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6009  000A1C  D003               	goto	l496
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
  6013  000A1E  010F               	movlb	15	; () banked
  6014  000A20  8F0D               	bsf	13,7,b	;volatile
  6015  000A22  D002               	goto	l2929
  6016  000A24                     l496:
  6017                           
  6018                           ; BSR set to: 0
  6019                           ;inc\CANlib.h: 988: else
  6020                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
  6021  000A24  010F               	movlb	15	; () banked
  6022  000A26  9F0D               	bcf	13,7,b	;volatile
  6023  000A28                     l2929:
  6024                           
  6025                           ; BSR set to: 15
  6026                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
  6027  000A28  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  6028  000A2C  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6029  000A30  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6030  000A34  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6031  000A38  0E16               	movlw	22
  6032  000A3A  D006               	goto	u3060
  6033  000A3C                     u3065:
  6034  000A3C  0100               	movlb	0	; () banked
  6035  000A3E  90D8               	bcf	status,0,c
  6036  000A40  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6037  000A42  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6038  000A44  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6039  000A46  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  6040  000A48                     u3060:
  6041  000A48  2EE8               	decfsz	wreg,f,c
  6042  000A4A  D7F8               	goto	u3065
  6043  000A4C  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  6044  000A50  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6045  000A54  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6046  000A58  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
  6050  000A5C  0100               	movlb	0	; () banked
  6051  000A5E  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  6052  000A60  0100               	movlb	0	; () banked
  6053  000A62  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  6054  000A64  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6055  000A66  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6056  000A68  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
  6060  000A6A  C080  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  6061  000A6E                     l2935:
  6062                           
  6063                           ; BSR set to: 0
  6064                           ;inc\CANlib.h: 994: }
  6065                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
  6066  000A6E  0E04               	movlw	4
  6067  000A70  0100               	movlb	0	; () banked
  6068  000A72  197F               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6069  000A74  A4D8               	btfss	status,2,c
  6070  000A76  D089               	goto	l2969
  6071                           
  6072                           ; BSR set to: 0
  6073  000A78  0EF7               	movlw	247
  6074  000A7A  0100               	movlb	0	; () banked
  6075  000A7C  197A               	xorwf	CANSetFilter@type& (0+255),w,b
  6076  000A7E  A4D8               	btfss	status,2,c
  6077  000A80  D084               	goto	l2969
  6078                           
  6079                           ; BSR set to: 0
  6080                           ;inc\CANlib.h: 997: {
  6081                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
  6082  000A82  010F               	movlb	15	; () banked
  6083  000A84  8711               	bsf	17,3,b	;volatile
  6084                           
  6085                           ; BSR set to: 15
  6086                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
  6087  000A86  0100               	movlb	0	; () banked
  6088  000A88  5176               	movf	CANSetFilter@filter& (0+255),w,b
  6089  000A8A  0100               	movlb	0	; () banked
  6090  000A8C  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  6091  000A8E  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6092  000A90  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6093  000A92  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
  6097  000A94  C080  FF13         	movff	CANSetFilter@tamp,3859	;volatile
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
  6101  000A98  0E00               	movlw	0
  6102  000A9A  0100               	movlb	0	; () banked
  6103  000A9C  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  6104  000A9E  0100               	movlb	0	; () banked
  6105  000AA0  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  6106  000AA2  0EFF               	movlw	255
  6107  000AA4  0100               	movlb	0	; () banked
  6108  000AA6  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6109  000AA8  0100               	movlb	0	; () banked
  6110  000AAA  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6111  000AAC  0E00               	movlw	0
  6112  000AAE  0100               	movlb	0	; () banked
  6113  000AB0  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6114  000AB2  0100               	movlb	0	; () banked
  6115  000AB4  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6116  000AB6  0E00               	movlw	0
  6117  000AB8  0100               	movlb	0	; () banked
  6118  000ABA  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6119  000ABC  0100               	movlb	0	; () banked
  6120  000ABE  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
  6124  000AC0  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  6125  000AC4  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6126  000AC8  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6127  000ACC  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6128  000AD0  C07C  F07B         	movff	??_CANSetFilter+1,??_CANSetFilter
  6129  000AD4  C07D  F07C         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6130  000AD8  C07E  F07D         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6131  000ADC  0100               	movlb	0	; () banked
  6132  000ADE  6B7E               	clrf	(??_CANSetFilter+3)& (0+255),b
  6133  000AE0  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  6134  000AE4  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6135  000AE8  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6136  000AEC  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
  6140  000AF0  C080  FF12         	movff	CANSetFilter@tamp,3858	;volatile
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
  6144  000AF4  0100               	movlb	0	; () banked
  6145  000AF6  A178               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6146  000AF8  D003               	goto	l499
  6147                           
  6148                           ; BSR set to: 0
  6149                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
  6150  000AFA  010F               	movlb	15	; () banked
  6151  000AFC  8111               	bsf	17,0,b	;volatile
  6152  000AFE  D002               	goto	l500
  6153  000B00                     l499:
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;inc\CANlib.h: 1009: else
  6157                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
  6158  000B00  010F               	movlb	15	; () banked
  6159  000B02  9111               	bcf	17,0,b	;volatile
  6160  000B04                     l500:
  6161                           
  6162                           ; BSR set to: 15
  6163                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
  6164  000B04  0100               	movlb	0	; () banked
  6165  000B06  A378               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6166  000B08  D003               	goto	l501
  6167                           
  6168                           ; BSR set to: 0
  6169                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
  6170  000B0A  010F               	movlb	15	; () banked
  6171  000B0C  8311               	bsf	17,1,b	;volatile
  6172  000B0E  D002               	goto	l502
  6173  000B10                     l501:
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;inc\CANlib.h: 1014: else
  6177                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
  6178  000B10  010F               	movlb	15	; () banked
  6179  000B12  9311               	bcf	17,1,b	;volatile
  6180  000B14                     l502:
  6181                           
  6182                           ; BSR set to: 15
  6183                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
  6184  000B14  0100               	movlb	0	; () banked
  6185  000B16  A578               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6186  000B18  D003               	goto	l503
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
  6190  000B1A  010F               	movlb	15	; () banked
  6191  000B1C  8B11               	bsf	17,5,b	;volatile
  6192  000B1E  D002               	goto	l504
  6193  000B20                     l503:
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;inc\CANlib.h: 1019: else
  6197                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
  6198  000B20  010F               	movlb	15	; () banked
  6199  000B22  9B11               	bcf	17,5,b	;volatile
  6200  000B24                     l504:
  6201                           
  6202                           ; BSR set to: 15
  6203                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
  6204  000B24  0100               	movlb	0	; () banked
  6205  000B26  A778               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6206  000B28  D003               	goto	l505
  6207                           
  6208                           ; BSR set to: 0
  6209                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
  6210  000B2A  010F               	movlb	15	; () banked
  6211  000B2C  8D11               	bsf	17,6,b	;volatile
  6212  000B2E  D002               	goto	l506
  6213  000B30                     l505:
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;inc\CANlib.h: 1024: else
  6217                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
  6218  000B30  010F               	movlb	15	; () banked
  6219  000B32  9D11               	bcf	17,6,b	;volatile
  6220  000B34                     l506:
  6221                           
  6222                           ; BSR set to: 15
  6223                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
  6224  000B34  0100               	movlb	0	; () banked
  6225  000B36  A978               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6226  000B38  D003               	goto	l507
  6227                           
  6228                           ; BSR set to: 0
  6229                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
  6230  000B3A  010F               	movlb	15	; () banked
  6231  000B3C  8F11               	bsf	17,7,b	;volatile
  6232  000B3E  D002               	goto	l2963
  6233  000B40                     l507:
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;inc\CANlib.h: 1029: else
  6237                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
  6238  000B40  010F               	movlb	15	; () banked
  6239  000B42  9F11               	bcf	17,7,b	;volatile
  6240  000B44                     l2963:
  6241                           
  6242                           ; BSR set to: 15
  6243                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
  6244  000B44  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  6245  000B48  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6246  000B4C  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6247  000B50  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6248  000B54  0E16               	movlw	22
  6249  000B56  D006               	goto	u3140
  6250  000B58                     u3145:
  6251  000B58  0100               	movlb	0	; () banked
  6252  000B5A  90D8               	bcf	status,0,c
  6253  000B5C  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6254  000B5E  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6255  000B60  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6256  000B62  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  6257  000B64                     u3140:
  6258  000B64  2EE8               	decfsz	wreg,f,c
  6259  000B66  D7F8               	goto	u3145
  6260  000B68  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  6261  000B6C  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6262  000B70  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6263  000B74  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
  6267  000B78  0100               	movlb	0	; () banked
  6268  000B7A  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  6269  000B7C  0100               	movlb	0	; () banked
  6270  000B7E  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  6271  000B80  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6272  000B82  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6273  000B84  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
  6277  000B86  C080  FF10         	movff	CANSetFilter@tamp,3856	;volatile
  6278  000B8A                     l2969:
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;inc\CANlib.h: 1035: }
  6282                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
  6283  000B8A  0E05               	movlw	5
  6284  000B8C  0100               	movlb	0	; () banked
  6285  000B8E  197F               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  6286  000B90  A4D8               	btfss	status,2,c
  6287  000B92  0012               	return	
  6288                           
  6289                           ; BSR set to: 0
  6290  000B94  0EF7               	movlw	247
  6291  000B96  0100               	movlb	0	; () banked
  6292  000B98  197A               	xorwf	CANSetFilter@type& (0+255),w,b
  6293  000B9A  A4D8               	btfss	status,2,c
  6294  000B9C  0012               	return	
  6295                           
  6296                           ; BSR set to: 0
  6297                           ;inc\CANlib.h: 1038: {
  6298                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
  6299  000B9E  010F               	movlb	15	; () banked
  6300  000BA0  8715               	bsf	21,3,b	;volatile
  6301                           
  6302                           ; BSR set to: 15
  6303                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
  6304  000BA2  0100               	movlb	0	; () banked
  6305  000BA4  5176               	movf	CANSetFilter@filter& (0+255),w,b
  6306  000BA6  0100               	movlb	0	; () banked
  6307  000BA8  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  6308  000BAA  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6309  000BAC  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6310  000BAE  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
  6314  000BB0  C080  FF17         	movff	CANSetFilter@tamp,3863	;volatile
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
  6318  000BB4  0E00               	movlw	0
  6319  000BB6  0100               	movlb	0	; () banked
  6320  000BB8  1576               	andwf	CANSetFilter@filter& (0+255),w,b
  6321  000BBA  0100               	movlb	0	; () banked
  6322  000BBC  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  6323  000BBE  0EFF               	movlw	255
  6324  000BC0  0100               	movlb	0	; () banked
  6325  000BC2  1577               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  6326  000BC4  0100               	movlb	0	; () banked
  6327  000BC6  6F81               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  6328  000BC8  0E00               	movlw	0
  6329  000BCA  0100               	movlb	0	; () banked
  6330  000BCC  1578               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  6331  000BCE  0100               	movlb	0	; () banked
  6332  000BD0  6F82               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  6333  000BD2  0E00               	movlw	0
  6334  000BD4  0100               	movlb	0	; () banked
  6335  000BD6  1579               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  6336  000BD8  0100               	movlb	0	; () banked
  6337  000BDA  6F83               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  6338                           
  6339                           ; BSR set to: 0
  6340                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
  6341  000BDC  C080  F07B         	movff	CANSetFilter@tamp,??_CANSetFilter
  6342  000BE0  C081  F07C         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  6343  000BE4  C082  F07D         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  6344  000BE8  C083  F07E         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  6345  000BEC  C07C  F07B         	movff	??_CANSetFilter+1,??_CANSetFilter
  6346  000BF0  C07D  F07C         	movff	??_CANSetFilter+2,??_CANSetFilter+1
  6347  000BF4  C07E  F07D         	movff	??_CANSetFilter+3,??_CANSetFilter+2
  6348  000BF8  0100               	movlb	0	; () banked
  6349  000BFA  6B7E               	clrf	(??_CANSetFilter+3)& (0+255),b
  6350  000BFC  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  6351  000C00  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6352  000C04  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6353  000C08  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6354                           
  6355                           ; BSR set to: 0
  6356                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
  6357  000C0C  C080  FF16         	movff	CANSetFilter@tamp,3862	;volatile
  6358                           
  6359                           ; BSR set to: 0
  6360                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
  6361  000C10  0100               	movlb	0	; () banked
  6362  000C12  A178               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
  6363  000C14  D003               	goto	l510
  6364                           
  6365                           ; BSR set to: 0
  6366                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
  6367  000C16  010F               	movlb	15	; () banked
  6368  000C18  8115               	bsf	21,0,b	;volatile
  6369  000C1A  D002               	goto	l511
  6370  000C1C                     l510:
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;inc\CANlib.h: 1050: else
  6374                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
  6375  000C1C  010F               	movlb	15	; () banked
  6376  000C1E  9115               	bcf	21,0,b	;volatile
  6377  000C20                     l511:
  6378                           
  6379                           ; BSR set to: 15
  6380                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
  6381  000C20  0100               	movlb	0	; () banked
  6382  000C22  A378               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
  6383  000C24  D003               	goto	l512
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
  6387  000C26  010F               	movlb	15	; () banked
  6388  000C28  8315               	bsf	21,1,b	;volatile
  6389  000C2A  D002               	goto	l513
  6390  000C2C                     l512:
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;inc\CANlib.h: 1055: else
  6394                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
  6395  000C2C  010F               	movlb	15	; () banked
  6396  000C2E  9315               	bcf	21,1,b	;volatile
  6397  000C30                     l513:
  6398                           
  6399                           ; BSR set to: 15
  6400                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
  6401  000C30  0100               	movlb	0	; () banked
  6402  000C32  A578               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
  6403  000C34  D003               	goto	l514
  6404                           
  6405                           ; BSR set to: 0
  6406                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
  6407  000C36  010F               	movlb	15	; () banked
  6408  000C38  8B15               	bsf	21,5,b	;volatile
  6409  000C3A  D002               	goto	l515
  6410  000C3C                     l514:
  6411                           
  6412                           ; BSR set to: 0
  6413                           ;inc\CANlib.h: 1060: else
  6414                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
  6415  000C3C  010F               	movlb	15	; () banked
  6416  000C3E  9B15               	bcf	21,5,b	;volatile
  6417  000C40                     l515:
  6418                           
  6419                           ; BSR set to: 15
  6420                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
  6421  000C40  0100               	movlb	0	; () banked
  6422  000C42  A778               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
  6423  000C44  D003               	goto	l516
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
  6427  000C46  010F               	movlb	15	; () banked
  6428  000C48  8D15               	bsf	21,6,b	;volatile
  6429  000C4A  D002               	goto	l517
  6430  000C4C                     l516:
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;inc\CANlib.h: 1065: else
  6434                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
  6435  000C4C  010F               	movlb	15	; () banked
  6436  000C4E  9D15               	bcf	21,6,b	;volatile
  6437  000C50                     l517:
  6438                           
  6439                           ; BSR set to: 15
  6440                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
  6441  000C50  0100               	movlb	0	; () banked
  6442  000C52  A978               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
  6443  000C54  D003               	goto	l518
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
  6447  000C56  010F               	movlb	15	; () banked
  6448  000C58  8F15               	bsf	21,7,b	;volatile
  6449  000C5A  D002               	goto	l2997
  6450  000C5C                     l518:
  6451                           
  6452                           ; BSR set to: 0
  6453                           ;inc\CANlib.h: 1070: else
  6454                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
  6455  000C5C  010F               	movlb	15	; () banked
  6456  000C5E  9F15               	bcf	21,7,b	;volatile
  6457  000C60                     l2997:
  6458                           
  6459                           ; BSR set to: 15
  6460                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
  6461  000C60  C076  F07B         	movff	CANSetFilter@filter,??_CANSetFilter
  6462  000C64  C077  F07C         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  6463  000C68  C078  F07D         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  6464  000C6C  C079  F07E         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  6465  000C70  0E16               	movlw	22
  6466  000C72  D006               	goto	u3220
  6467  000C74                     u3225:
  6468  000C74  0100               	movlb	0	; () banked
  6469  000C76  90D8               	bcf	status,0,c
  6470  000C78  337E               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  6471  000C7A  337D               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  6472  000C7C  337C               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  6473  000C7E  337B               	rrcf	??_CANSetFilter& (0+255),f,b
  6474  000C80                     u3220:
  6475  000C80  2EE8               	decfsz	wreg,f,c
  6476  000C82  D7F8               	goto	u3225
  6477  000C84  C07B  F080         	movff	??_CANSetFilter,CANSetFilter@tamp
  6478  000C88  C07C  F081         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  6479  000C8C  C07D  F082         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  6480  000C90  C07E  F083         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  6481                           
  6482                           ; BSR set to: 0
  6483                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
  6484  000C94  0100               	movlb	0	; () banked
  6485  000C96  5180               	movf	CANSetFilter@tamp& (0+255),w,b
  6486  000C98  0100               	movlb	0	; () banked
  6487  000C9A  6F80               	movwf	CANSetFilter@tamp& (0+255),b
  6488  000C9C  6B81               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  6489  000C9E  6B82               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  6490  000CA0  6B83               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
  6494  000CA2  C080  FF14         	movff	CANSetFilter@tamp,3860	;volatile
  6495  000CA6  0012               	return	
  6496  000CA8                     __end_of_CANSetFilter:
  6497                           	opt stack 0
  6498                           tblptru	equ	0xFF8
  6499                           tblptrh	equ	0xFF7
  6500                           tblptrl	equ	0xFF6
  6501                           tablat	equ	0xFF5
  6502                           prodh	equ	0xFF4
  6503                           prodl	equ	0xFF3
  6504                           intcon	equ	0xFF2
  6505                           intcon2	equ	0xFF1
  6506                           postinc0	equ	0xFEE
  6507                           wreg	equ	0xFE8
  6508                           indf2	equ	0xFDF
  6509                           fsr2h	equ	0xFDA
  6510                           fsr2l	equ	0xFD9
  6511                           status	equ	0xFD8
  6512                           
  6513 ;; *************** function _CANOperationMode *****************
  6514 ;; Defined at:
  6515 ;;		line 206 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6516 ;; Parameters:    Size  Location     Type
  6517 ;;  mode            1    wreg     enum E16838
  6518 ;; Auto vars:     Size  Location     Type
  6519 ;;  mode            1   22[BANK0 ] enum E16838
  6520 ;; Return value:  Size  Location     Type
  6521 ;;		None               void
  6522 ;; Registers used:
  6523 ;;		wreg, status,2, status,0
  6524 ;; Tracked objects:
  6525 ;;		On entry : 0/0
  6526 ;;		On exit  : 0/0
  6527 ;;		Unchanged: 0/0
  6528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6529 ;;      Params:         0       0       0       0
  6530 ;;      Locals:         0       1       0       0
  6531 ;;      Temps:          0       0       0       0
  6532 ;;      Totals:         0       1       0       0
  6533 ;;Total ram usage:        1 bytes
  6534 ;; Hardware stack levels used:    1
  6535 ;; Hardware stack levels required when called:    5
  6536 ;; This function calls:
  6537 ;;		Nothing
  6538 ;; This function is called by:
  6539 ;;		_CANInitialize
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           	psect	text10
  6544  002848                     __ptext10:
  6545                           	opt stack 0
  6546  002848                     _CANOperationMode:
  6547                           	opt stack 23
  6548                           
  6549                           ; BSR set to: 0
  6550                           ;incstack = 0
  6551                           ;CANOperationMode@mode stored from wreg
  6552  002848  0100               	movlb	0	; () banked
  6553  00284A  6F76               	movwf	CANOperationMode@mode& (0+255),b
  6554                           
  6555                           ;inc\CANlib.h: 208: CANCON = mode;
  6556  00284C  C076  FF6F         	movff	CANOperationMode@mode,3951	;volatile
  6557  002850                     l2593:
  6558  002850  506E               	movf	3950,w,c	;volatile
  6559  002852  0BE0               	andlw	224
  6560  002854  0100               	movlb	0	; () banked
  6561  002856  1976               	xorwf	CANOperationMode@mode& (0+255),w,b
  6562  002858  B4D8               	btfsc	status,2,c
  6563  00285A  0012               	return	
  6564  00285C  D7F9               	goto	l2593
  6565  00285E                     __end_of_CANOperationMode:
  6566                           	opt stack 0
  6567                           tblptru	equ	0xFF8
  6568                           tblptrh	equ	0xFF7
  6569                           tblptrl	equ	0xFF6
  6570                           tablat	equ	0xFF5
  6571                           prodh	equ	0xFF4
  6572                           prodl	equ	0xFF3
  6573                           intcon	equ	0xFF2
  6574                           intcon2	equ	0xFF1
  6575                           postinc0	equ	0xFEE
  6576                           wreg	equ	0xFE8
  6577                           indf2	equ	0xFDF
  6578                           fsr2h	equ	0xFDA
  6579                           fsr2l	equ	0xFD9
  6580                           status	equ	0xFD8
  6581                           
  6582 ;; *************** function ___awdiv *****************
  6583 ;; Defined at:
  6584 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;  dividend        2   22[BANK0 ] int 
  6587 ;;  divisor         2   24[BANK0 ] int 
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  quotient        2   28[BANK0 ] int 
  6590 ;;  sign            1   27[BANK0 ] unsigned char 
  6591 ;;  counter         1   26[BANK0 ] unsigned char 
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  2   22[BANK0 ] int 
  6594 ;; Registers used:
  6595 ;;		wreg, status,2, status,0
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6601 ;;      Params:         0       4       0       0
  6602 ;;      Locals:         0       4       0       0
  6603 ;;      Temps:          0       0       0       0
  6604 ;;      Totals:         0       8       0       0
  6605 ;;Total ram usage:        8 bytes
  6606 ;; Hardware stack levels used:    1
  6607 ;; Hardware stack levels required when called:    5
  6608 ;; This function calls:
  6609 ;;		Nothing
  6610 ;; This function is called by:
  6611 ;;		_main
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           	psect	text11
  6616  0023F0                     __ptext11:
  6617                           	opt stack 0
  6618  0023F0                     ___awdiv:
  6619                           	opt stack 25
  6620                           
  6621                           ; BSR set to: 0
  6622                           ;incstack = 0
  6623  0023F0  0E00               	movlw	0
  6624  0023F2  0100               	movlb	0	; () banked
  6625  0023F4  6F7B               	movwf	___awdiv@sign& (0+255),b
  6626                           
  6627                           ; BSR set to: 0
  6628  0023F6  0100               	movlb	0	; () banked
  6629  0023F8  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6630  0023FA  D008               	goto	l3591
  6631                           
  6632                           ; BSR set to: 0
  6633  0023FC  0100               	movlb	0	; () banked
  6634  0023FE  6D78               	negf	___awdiv@divisor& (0+255),b
  6635  002400  1F79               	comf	(___awdiv@divisor+1)& (0+255),f,b
  6636  002402  B0D8               	btfsc	status,0,c
  6637  002404  2B79               	incf	(___awdiv@divisor+1)& (0+255),f,b
  6638                           
  6639                           ; BSR set to: 0
  6640  002406  0E01               	movlw	1
  6641  002408  0100               	movlb	0	; () banked
  6642  00240A  6F7B               	movwf	___awdiv@sign& (0+255),b
  6643  00240C                     l3591:
  6644                           
  6645                           ; BSR set to: 0
  6646  00240C  0100               	movlb	0	; () banked
  6647  00240E  AF77               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  6648  002410  D008               	goto	l3597
  6649                           
  6650                           ; BSR set to: 0
  6651  002412  0100               	movlb	0	; () banked
  6652  002414  6D76               	negf	___awdiv@dividend& (0+255),b
  6653  002416  1F77               	comf	(___awdiv@dividend+1)& (0+255),f,b
  6654  002418  B0D8               	btfsc	status,0,c
  6655  00241A  2B77               	incf	(___awdiv@dividend+1)& (0+255),f,b
  6656                           
  6657                           ; BSR set to: 0
  6658  00241C  0E01               	movlw	1
  6659  00241E  0100               	movlb	0	; () banked
  6660  002420  1B7B               	xorwf	___awdiv@sign& (0+255),f,b
  6661  002422                     l3597:
  6662                           
  6663                           ; BSR set to: 0
  6664  002422  0E00               	movlw	0
  6665  002424  0100               	movlb	0	; () banked
  6666  002426  6F7D               	movwf	(___awdiv@quotient+1)& (0+255),b
  6667  002428  0E00               	movlw	0
  6668  00242A  6F7C               	movwf	___awdiv@quotient& (0+255),b
  6669                           
  6670                           ; BSR set to: 0
  6671  00242C  0100               	movlb	0	; () banked
  6672  00242E  5178               	movf	___awdiv@divisor& (0+255),w,b
  6673  002430  0100               	movlb	0	; () banked
  6674  002432  1179               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  6675  002434  B4D8               	btfsc	status,2,c
  6676  002436  D02C               	goto	l3619
  6677                           
  6678                           ; BSR set to: 0
  6679  002438  0E01               	movlw	1
  6680  00243A  0100               	movlb	0	; () banked
  6681  00243C  6F7A               	movwf	___awdiv@counter& (0+255),b
  6682  00243E  D006               	goto	l3605
  6683  002440                     l3603:
  6684                           
  6685                           ; BSR set to: 0
  6686  002440  0100               	movlb	0	; () banked
  6687  002442  90D8               	bcf	status,0,c
  6688  002444  3778               	rlcf	___awdiv@divisor& (0+255),f,b
  6689  002446  3779               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  6690  002448  0100               	movlb	0	; () banked
  6691  00244A  2B7A               	incf	___awdiv@counter& (0+255),f,b
  6692  00244C                     l3605:
  6693                           
  6694                           ; BSR set to: 0
  6695  00244C  0100               	movlb	0	; () banked
  6696  00244E  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  6697  002450  D7F7               	goto	l3603
  6698  002452                     l3607:
  6699                           
  6700                           ; BSR set to: 0
  6701  002452  0100               	movlb	0	; () banked
  6702  002454  90D8               	bcf	status,0,c
  6703  002456  377C               	rlcf	___awdiv@quotient& (0+255),f,b
  6704  002458  377D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  6705                           
  6706                           ; BSR set to: 0
  6707  00245A  0100               	movlb	0	; () banked
  6708  00245C  5178               	movf	___awdiv@divisor& (0+255),w,b
  6709  00245E  0100               	movlb	0	; () banked
  6710  002460  5D76               	subwf	___awdiv@dividend& (0+255),w,b
  6711  002462  0100               	movlb	0	; () banked
  6712  002464  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6713  002466  0100               	movlb	0	; () banked
  6714  002468  5977               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  6715  00246A  A0D8               	btfss	status,0,c
  6716  00246C  D00A               	goto	l3615
  6717                           
  6718                           ; BSR set to: 0
  6719  00246E  0100               	movlb	0	; () banked
  6720  002470  5178               	movf	___awdiv@divisor& (0+255),w,b
  6721  002472  0100               	movlb	0	; () banked
  6722  002474  5F76               	subwf	___awdiv@dividend& (0+255),f,b
  6723  002476  0100               	movlb	0	; () banked
  6724  002478  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
  6725  00247A  0100               	movlb	0	; () banked
  6726  00247C  5B77               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  6727                           
  6728                           ; BSR set to: 0
  6729  00247E  0100               	movlb	0	; () banked
  6730  002480  817C               	bsf	___awdiv@quotient& (0+255),0,b
  6731  002482                     l3615:
  6732                           
  6733                           ; BSR set to: 0
  6734  002482  0100               	movlb	0	; () banked
  6735  002484  90D8               	bcf	status,0,c
  6736  002486  3379               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  6737  002488  3378               	rrcf	___awdiv@divisor& (0+255),f,b
  6738                           
  6739                           ; BSR set to: 0
  6740  00248A  0100               	movlb	0	; () banked
  6741  00248C  2F7A               	decfsz	___awdiv@counter& (0+255),f,b
  6742  00248E  D7E1               	goto	l3607
  6743  002490                     l3619:
  6744                           
  6745                           ; BSR set to: 0
  6746  002490  0100               	movlb	0	; () banked
  6747  002492  517B               	movf	___awdiv@sign& (0+255),w,b
  6748  002494  0100               	movlb	0	; () banked
  6749  002496  B4D8               	btfsc	status,2,c
  6750  002498  D005               	goto	l3623
  6751                           
  6752                           ; BSR set to: 0
  6753  00249A  0100               	movlb	0	; () banked
  6754  00249C  6D7C               	negf	___awdiv@quotient& (0+255),b
  6755  00249E  1F7D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  6756  0024A0  B0D8               	btfsc	status,0,c
  6757  0024A2  2B7D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  6758  0024A4                     l3623:
  6759                           
  6760                           ; BSR set to: 0
  6761  0024A4  C07C  F076         	movff	___awdiv@quotient,?___awdiv
  6762  0024A8  C07D  F077         	movff	___awdiv@quotient+1,?___awdiv+1
  6763  0024AC  0012               	return	
  6764  0024AE                     __end_of___awdiv:
  6765                           	opt stack 0
  6766                           tblptru	equ	0xFF8
  6767                           tblptrh	equ	0xFF7
  6768                           tblptrl	equ	0xFF6
  6769                           tablat	equ	0xFF5
  6770                           prodh	equ	0xFF4
  6771                           prodl	equ	0xFF3
  6772                           intcon	equ	0xFF2
  6773                           intcon2	equ	0xFF1
  6774                           postinc0	equ	0xFEE
  6775                           wreg	equ	0xFE8
  6776                           indf2	equ	0xFDF
  6777                           fsr2h	equ	0xFDA
  6778                           fsr2l	equ	0xFD9
  6779                           status	equ	0xFD8
  6780                           
  6781 ;; *************** function _SetOutputEPWM1 *****************
  6782 ;; Defined at:
  6783 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setoc.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  outputconfig    1    wreg     unsigned char 
  6786 ;;  outputmode      1   22[BANK0 ] unsigned char 
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;  outputconfig    1   23[BANK0 ] unsigned char 
  6789 ;; Return value:  Size  Location     Type
  6790 ;;		None               void
  6791 ;; Registers used:
  6792 ;;		wreg, status,2, status,0
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6798 ;;      Params:         0       1       0       0
  6799 ;;      Locals:         0       1       0       0
  6800 ;;      Temps:          0       0       0       0
  6801 ;;      Totals:         0       2       0       0
  6802 ;;Total ram usage:        2 bytes
  6803 ;; Hardware stack levels used:    1
  6804 ;; Hardware stack levels required when called:    5
  6805 ;; This function calls:
  6806 ;;		Nothing
  6807 ;; This function is called by:
  6808 ;;		_main
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           	psect	text12
  6813  002640                     __ptext12:
  6814                           	opt stack 0
  6815  002640                     _SetOutputEPWM1:
  6816                           	opt stack 25
  6817                           
  6818                           ; BSR set to: 0
  6819                           ;incstack = 0
  6820                           ;SetOutputEPWM1@outputconfig stored from wreg
  6821  002640  0100               	movlb	0	; () banked
  6822  002642  6F77               	movwf	SetOutputEPWM1@outputconfig& (0+255),b
  6823  002644  50BA               	movf	4026,w,c	;volatile
  6824  002646  09C0               	iorlw	192
  6825  002648  0100               	movlb	0	; () banked
  6826  00264A  1577               	andwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  6827  00264C  6EBA               	movwf	4026,c	;volatile
  6828  00264E  50BA               	movf	4026,w,c	;volatile
  6829  002650  090F               	iorlw	15
  6830  002652  0100               	movlb	0	; () banked
  6831  002654  1576               	andwf	SetOutputEPWM1@outputmode& (0+255),w,b
  6832  002656  6EBA               	movwf	4026,c	;volatile
  6833  002658  0E3F               	movlw	63
  6834  00265A  0100               	movlb	0	; () banked
  6835  00265C  1977               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  6836  00265E  A4D8               	btfss	status,2,c
  6837  002660  D002               	goto	l3551
  6838                           
  6839                           ; BSR set to: 0
  6840  002662  9895               	bcf	3989,4,c	;volatile
  6841  002664  0012               	return	
  6842  002666                     l3551:
  6843                           
  6844                           ; BSR set to: 0
  6845  002666  0EBF               	movlw	191
  6846  002668  0100               	movlb	0	; () banked
  6847  00266A  1977               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  6848  00266C  A4D8               	btfss	status,2,c
  6849  00266E  D003               	goto	l3555
  6850                           
  6851                           ; BSR set to: 0
  6852  002670  9895               	bcf	3989,4,c	;volatile
  6853  002672  9A95               	bcf	3989,5,c	;volatile
  6854  002674  0012               	return	
  6855  002676                     l3555:
  6856                           
  6857                           ; BSR set to: 0
  6858  002676  0E7F               	movlw	127
  6859  002678  0100               	movlb	0	; () banked
  6860  00267A  1977               	xorwf	SetOutputEPWM1@outputconfig& (0+255),w,b
  6861  00267C  B4D8               	btfsc	status,2,c
  6862  00267E  D004               	goto	l705
  6863                           
  6864                           ; BSR set to: 0
  6865  002680  0100               	movlb	0	; () banked
  6866  002682  2977               	incf	SetOutputEPWM1@outputconfig& (0+255),w,b
  6867  002684  A4D8               	btfss	status,2,c
  6868  002686  0012               	return	
  6869  002688                     l705:
  6870                           
  6871                           ; BSR set to: 0
  6872  002688  9895               	bcf	3989,4,c	;volatile
  6873  00268A  9A95               	bcf	3989,5,c	;volatile
  6874  00268C  9C95               	bcf	3989,6,c	;volatile
  6875  00268E  9E95               	bcf	3989,7,c	;volatile
  6876                           
  6877                           ; BSR set to: 0
  6878                           
  6879                           ; BSR set to: 0
  6880  002690  0012               	return	
  6881  002692                     __end_of_SetOutputEPWM1:
  6882                           	opt stack 0
  6883                           tblptru	equ	0xFF8
  6884                           tblptrh	equ	0xFF7
  6885                           tblptrl	equ	0xFF6
  6886                           tablat	equ	0xFF5
  6887                           prodh	equ	0xFF4
  6888                           prodl	equ	0xFF3
  6889                           intcon	equ	0xFF2
  6890                           intcon2	equ	0xFF1
  6891                           postinc0	equ	0xFEE
  6892                           wreg	equ	0xFE8
  6893                           indf2	equ	0xFDF
  6894                           fsr2h	equ	0xFDA
  6895                           fsr2l	equ	0xFD9
  6896                           status	equ	0xFD8
  6897                           
  6898 ;; *************** function _SetDCEPWM1 *****************
  6899 ;; Defined at:
  6900 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1setdc.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;  dutycycle       2   22[BANK0 ] unsigned int 
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;  DCycle          2   26[BANK0 ] struct PWMDC
  6905 ;; Return value:  Size  Location     Type
  6906 ;;		None               void
  6907 ;; Registers used:
  6908 ;;		wreg, status,2, status,0
  6909 ;; Tracked objects:
  6910 ;;		On entry : 0/0
  6911 ;;		On exit  : 0/0
  6912 ;;		Unchanged: 0/0
  6913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6914 ;;      Params:         0       2       0       0
  6915 ;;      Locals:         0       2       0       0
  6916 ;;      Temps:          0       2       0       0
  6917 ;;      Totals:         0       6       0       0
  6918 ;;Total ram usage:        6 bytes
  6919 ;; Hardware stack levels used:    1
  6920 ;; Hardware stack levels required when called:    5
  6921 ;; This function calls:
  6922 ;;		Nothing
  6923 ;; This function is called by:
  6924 ;;		_main
  6925 ;; This function uses a non-reentrant model
  6926 ;;
  6927                           
  6928                           	psect	text13
  6929  0026DE                     __ptext13:
  6930                           	opt stack 0
  6931  0026DE                     _SetDCEPWM1:
  6932                           	opt stack 25
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;incstack = 0
  6936  0026DE  C076  F078         	movff	SetDCEPWM1@dutycycle,??_SetDCEPWM1
  6937  0026E2  C077  F079         	movff	SetDCEPWM1@dutycycle+1,??_SetDCEPWM1+1
  6938  0026E6  0E06               	movlw	6
  6939  0026E8                     u4035:
  6940  0026E8  90D8               	bcf	status,0,c
  6941  0026EA  0100               	movlb	0	; () banked
  6942  0026EC  3778               	rlcf	??_SetDCEPWM1& (0+255),f,b
  6943  0026EE  3779               	rlcf	(??_SetDCEPWM1+1)& (0+255),f,b
  6944  0026F0  2EE8               	decfsz	wreg,f,c
  6945  0026F2  D7FA               	goto	u4035
  6946  0026F4  C078  F07A         	movff	??_SetDCEPWM1,SetDCEPWM1@DCycle
  6947  0026F8  C079  F07B         	movff	??_SetDCEPWM1+1,SetDCEPWM1@DCycle+1
  6948                           
  6949                           ; BSR set to: 0
  6950  0026FC  C07B  FFBB         	movff	SetDCEPWM1@DCycle+1,4027	;volatile
  6951  002700  C07A  F078         	movff	SetDCEPWM1@DCycle,??_SetDCEPWM1
  6952  002704  0100               	movlb	0	; () banked
  6953  002706  90D8               	bcf	status,0,c
  6954  002708  3378               	rrcf	??_SetDCEPWM1& (0+255),f,b
  6955  00270A  0100               	movlb	0	; () banked
  6956  00270C  90D8               	bcf	status,0,c
  6957  00270E  3378               	rrcf	??_SetDCEPWM1& (0+255),f,b
  6958  002710  0E30               	movlw	48
  6959  002712  0100               	movlb	0	; () banked
  6960  002714  1778               	andwf	??_SetDCEPWM1& (0+255),f,b
  6961  002716  50BA               	movf	4026,w,c	;volatile
  6962  002718  0BCF               	andlw	207
  6963  00271A  0100               	movlb	0	; () banked
  6964  00271C  1178               	iorwf	??_SetDCEPWM1& (0+255),w,b
  6965  00271E  6EBA               	movwf	4026,c	;volatile
  6966                           
  6967                           ; BSR set to: 0
  6968  002720  0012               	return		;funcret
  6969  002722                     __end_of_SetDCEPWM1:
  6970                           	opt stack 0
  6971                           tblptru	equ	0xFF8
  6972                           tblptrh	equ	0xFF7
  6973                           tblptrl	equ	0xFF6
  6974                           tablat	equ	0xFF5
  6975                           prodh	equ	0xFF4
  6976                           prodl	equ	0xFF3
  6977                           intcon	equ	0xFF2
  6978                           intcon2	equ	0xFF1
  6979                           postinc0	equ	0xFEE
  6980                           wreg	equ	0xFE8
  6981                           indf2	equ	0xFDF
  6982                           fsr2h	equ	0xFDA
  6983                           fsr2l	equ	0xFD9
  6984                           status	equ	0xFD8
  6985                           
  6986 ;; *************** function _OpenTimer2 *****************
  6987 ;; Defined at:
  6988 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\Timers\t2open.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;  config          1    wreg     unsigned char 
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;  config          1   22[BANK0 ] unsigned char 
  6993 ;; Return value:  Size  Location     Type
  6994 ;;		None               void
  6995 ;; Registers used:
  6996 ;;		wreg, status,2, status,0
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7002 ;;      Params:         0       0       0       0
  7003 ;;      Locals:         0       1       0       0
  7004 ;;      Temps:          0       0       0       0
  7005 ;;      Totals:         0       1       0       0
  7006 ;;Total ram usage:        1 bytes
  7007 ;; Hardware stack levels used:    1
  7008 ;; Hardware stack levels required when called:    5
  7009 ;; This function calls:
  7010 ;;		Nothing
  7011 ;; This function is called by:
  7012 ;;		_main
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016                           	psect	text14
  7017  002826                     __ptext14:
  7018                           	opt stack 0
  7019  002826                     _OpenTimer2:
  7020                           	opt stack 25
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;incstack = 0
  7024                           ;OpenTimer2@config stored from wreg
  7025  002826  0100               	movlb	0	; () banked
  7026  002828  6F76               	movwf	OpenTimer2@config& (0+255),b
  7027  00282A  0100               	movlb	0	; () banked
  7028  00282C  5176               	movf	OpenTimer2@config& (0+255),w,b
  7029  00282E  0BFB               	andlw	251
  7030  002830  6ECA               	movwf	4042,c	;volatile
  7031                           
  7032                           ; BSR set to: 0
  7033  002832  0E00               	movlw	0
  7034  002834  6ECC               	movwf	4044,c	;volatile
  7035                           
  7036                           ; BSR set to: 0
  7037  002836  929E               	bcf	3998,1,c	;volatile
  7038                           
  7039                           ; BSR set to: 0
  7040  002838  0100               	movlb	0	; () banked
  7041  00283A  AF76               	btfss	OpenTimer2@config& (0+255),7,b
  7042  00283C  D002               	goto	l719
  7043                           
  7044                           ; BSR set to: 0
  7045  00283E  829D               	bsf	3997,1,c	;volatile
  7046  002840  D001               	goto	l720
  7047  002842                     l719:
  7048                           
  7049                           ; BSR set to: 0
  7050  002842  929D               	bcf	3997,1,c	;volatile
  7051  002844                     l720:
  7052                           
  7053                           ; BSR set to: 0
  7054  002844  84CA               	bsf	4042,2,c	;volatile
  7055                           
  7056                           ; BSR set to: 0
  7057  002846  0012               	return		;funcret
  7058  002848                     __end_of_OpenTimer2:
  7059                           	opt stack 0
  7060                           tblptru	equ	0xFF8
  7061                           tblptrh	equ	0xFF7
  7062                           tblptrl	equ	0xFF6
  7063                           tablat	equ	0xFF5
  7064                           prodh	equ	0xFF4
  7065                           prodl	equ	0xFF3
  7066                           intcon	equ	0xFF2
  7067                           intcon2	equ	0xFF1
  7068                           postinc0	equ	0xFEE
  7069                           wreg	equ	0xFE8
  7070                           indf2	equ	0xFDF
  7071                           fsr2h	equ	0xFDA
  7072                           fsr2l	equ	0xFD9
  7073                           status	equ	0xFD8
  7074                           
  7075 ;; *************** function _OpenEPWM1 *****************
  7076 ;; Defined at:
  7077 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\pic18\plib\PWM\ew1open.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;  period          1    wreg     unsigned char 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;  period          1   22[BANK0 ] unsigned char 
  7082 ;; Return value:  Size  Location     Type
  7083 ;;		None               void
  7084 ;; Registers used:
  7085 ;;		wreg, status,2
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7091 ;;      Params:         0       0       0       0
  7092 ;;      Locals:         0       1       0       0
  7093 ;;      Temps:          0       0       0       0
  7094 ;;      Totals:         0       1       0       0
  7095 ;;Total ram usage:        1 bytes
  7096 ;; Hardware stack levels used:    1
  7097 ;; Hardware stack levels required when called:    5
  7098 ;; This function calls:
  7099 ;;		Nothing
  7100 ;; This function is called by:
  7101 ;;		_main
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           
  7105                           	psect	text15
  7106  002874                     __ptext15:
  7107                           	opt stack 0
  7108  002874                     _OpenEPWM1:
  7109                           	opt stack 25
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;incstack = 0
  7113                           ;OpenEPWM1@period stored from wreg
  7114  002874  0100               	movlb	0	; () banked
  7115  002876  6F76               	movwf	OpenEPWM1@period& (0+255),b
  7116  002878  0E0C               	movlw	12
  7117  00287A  6EBA               	movwf	4026,c	;volatile
  7118  00287C  94CA               	bcf	4042,2,c	;volatile
  7119  00287E  C076  FFCB         	movff	OpenEPWM1@period,4043	;volatile
  7120  002882  84CA               	bsf	4042,2,c	;volatile
  7121  002884  0012               	return		;funcret
  7122  002886                     __end_of_OpenEPWM1:
  7123                           	opt stack 0
  7124                           tblptru	equ	0xFF8
  7125                           tblptrh	equ	0xFF7
  7126                           tblptrl	equ	0xFF6
  7127                           tablat	equ	0xFF5
  7128                           prodh	equ	0xFF4
  7129                           prodl	equ	0xFF3
  7130                           intcon	equ	0xFF2
  7131                           intcon2	equ	0xFF1
  7132                           postinc0	equ	0xFEE
  7133                           wreg	equ	0xFE8
  7134                           indf2	equ	0xFDF
  7135                           fsr2h	equ	0xFDA
  7136                           fsr2l	equ	0xFD9
  7137                           status	equ	0xFD8
  7138                           
  7139 ;; *************** function _CANisTXwarningON *****************
  7140 ;; Defined at:
  7141 ;;		line 1119 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;		None
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;		None
  7146 ;; Return value:  Size  Location     Type
  7147 ;;                  1    wreg      unsigned char 
  7148 ;; Registers used:
  7149 ;;		wreg
  7150 ;; Tracked objects:
  7151 ;;		On entry : 0/0
  7152 ;;		On exit  : 0/0
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7155 ;;      Params:         0       0       0       0
  7156 ;;      Locals:         0       0       0       0
  7157 ;;      Temps:          0       0       0       0
  7158 ;;      Totals:         0       0       0       0
  7159 ;;Total ram usage:        0 bytes
  7160 ;; Hardware stack levels used:    1
  7161 ;; Hardware stack levels required when called:    5
  7162 ;; This function calls:
  7163 ;;		Nothing
  7164 ;; This function is called by:
  7165 ;;		_main
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           	psect	text16
  7170  002886                     __ptext16:
  7171                           	opt stack 0
  7172  002886                     _CANisTXwarningON:
  7173                           	opt stack 25
  7174                           
  7175                           ;inc\CANlib.h: 1121: return (COMSTATbits.TXWARN);
  7176                           
  7177                           ;incstack = 0
  7178  002886  A474               	btfss	3956,2,c	;volatile
  7179  002888  D002               	goto	u3940
  7180  00288A  0E01               	movlw	1
  7181  00288C  0012               	return	
  7182  00288E                     u3940:
  7183  00288E  0E00               	movlw	0
  7184  002890  0012               	return	
  7185  002892                     __end_of_CANisTXwarningON:
  7186                           	opt stack 0
  7187                           tblptru	equ	0xFF8
  7188                           tblptrh	equ	0xFF7
  7189                           tblptrl	equ	0xFF6
  7190                           tablat	equ	0xFF5
  7191                           prodh	equ	0xFF4
  7192                           prodl	equ	0xFF3
  7193                           intcon	equ	0xFF2
  7194                           intcon2	equ	0xFF1
  7195                           postinc0	equ	0xFEE
  7196                           wreg	equ	0xFE8
  7197                           indf2	equ	0xFDF
  7198                           fsr2h	equ	0xFDA
  7199                           fsr2l	equ	0xFD9
  7200                           status	equ	0xFD8
  7201                           
  7202 ;; *************** function _CANisRXwarningON *****************
  7203 ;; Defined at:
  7204 ;;		line 1127 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;		None
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;		None
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      unsigned char 
  7211 ;; Registers used:
  7212 ;;		wreg
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7218 ;;      Params:         0       0       0       0
  7219 ;;      Locals:         0       0       0       0
  7220 ;;      Temps:          0       0       0       0
  7221 ;;      Totals:         0       0       0       0
  7222 ;;Total ram usage:        0 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; Hardware stack levels required when called:    5
  7225 ;; This function calls:
  7226 ;;		Nothing
  7227 ;; This function is called by:
  7228 ;;		_main
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           	psect	text17
  7233  002892                     __ptext17:
  7234                           	opt stack 0
  7235  002892                     _CANisRXwarningON:
  7236                           	opt stack 25
  7237                           
  7238                           ;inc\CANlib.h: 1129: return (COMSTATbits.RXWARN);
  7239                           
  7240                           ;incstack = 0
  7241  002892  A274               	btfss	3956,1,c	;volatile
  7242  002894  D002               	goto	u3950
  7243  002896  0E01               	movlw	1
  7244  002898  0012               	return	
  7245  00289A                     u3950:
  7246  00289A  0E00               	movlw	0
  7247  00289C  0012               	return	
  7248  00289E                     __end_of_CANisRXwarningON:
  7249                           	opt stack 0
  7250                           tblptru	equ	0xFF8
  7251                           tblptrh	equ	0xFF7
  7252                           tblptrl	equ	0xFF6
  7253                           tablat	equ	0xFF5
  7254                           prodh	equ	0xFF4
  7255                           prodl	equ	0xFF3
  7256                           intcon	equ	0xFF2
  7257                           intcon2	equ	0xFF1
  7258                           postinc0	equ	0xFEE
  7259                           wreg	equ	0xFE8
  7260                           indf2	equ	0xFDF
  7261                           fsr2h	equ	0xFDA
  7262                           fsr2l	equ	0xFD9
  7263                           status	equ	0xFD8
  7264                           
  7265 ;; *************** function _ISR_bassa *****************
  7266 ;; Defined at:
  7267 ;;		line 71 in file "motore.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;		None
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;		None
  7272 ;; Return value:  Size  Location     Type
  7273 ;;		None               void
  7274 ;; Registers used:
  7275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7276 ;; Tracked objects:
  7277 ;;		On entry : 0/0
  7278 ;;		On exit  : 0/0
  7279 ;;		Unchanged: 0/0
  7280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7281 ;;      Params:         0       0       0       0
  7282 ;;      Locals:         0       0       0       0
  7283 ;;      Temps:         17       0       0       0
  7284 ;;      Totals:        17       0       0       0
  7285 ;;Total ram usage:       17 bytes
  7286 ;; Hardware stack levels used:    1
  7287 ;; Hardware stack levels required when called:    4
  7288 ;; This function calls:
  7289 ;;		_CANisRxReady
  7290 ;;		_CANreceiveMessage
  7291 ;; This function is called by:
  7292 ;;		Interrupt level 1
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           	psect	intcodelo
  7297  000018                     __pintcodelo:
  7298                           	opt stack 0
  7299  000018                     _ISR_bassa:
  7300                           	opt stack 23
  7301                           
  7302                           ;incstack = 0
  7303  000018  8047               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  7304  00001A  CFD8 F034          	movff	status,??_ISR_bassa
  7305  00001E  CFE8 F035          	movff	wreg,??_ISR_bassa+1
  7306  000022  CFE0 F036          	movff	bsr,??_ISR_bassa+2
  7307  000026  CFFA F037          	movff	pclath,??_ISR_bassa+3
  7308  00002A  CFFB F038          	movff	pclatu,??_ISR_bassa+4
  7309  00002E  CFE9 F039          	movff	fsr0l,??_ISR_bassa+5
  7310  000032  CFEA F03A          	movff	fsr0h,??_ISR_bassa+6
  7311  000036  CFE1 F03B          	movff	fsr1l,??_ISR_bassa+7
  7312  00003A  CFE2 F03C          	movff	fsr1h,??_ISR_bassa+8
  7313  00003E  CFD9 F03D          	movff	fsr2l,??_ISR_bassa+9
  7314  000042  CFDA F03E          	movff	fsr2h,??_ISR_bassa+10
  7315  000046  CFF3 F03F          	movff	prodl,??_ISR_bassa+11
  7316  00004A  CFF4 F040          	movff	prodh,??_ISR_bassa+12
  7317  00004E  CFF6 F041          	movff	tblptrl,??_ISR_bassa+13
  7318  000052  CFF7 F042          	movff	tblptrh,??_ISR_bassa+14
  7319  000056  CFF8 F043          	movff	tblptru,??_ISR_bassa+15
  7320  00005A  CFF5 F044          	movff	tablat,??_ISR_bassa+16
  7321                           
  7322                           ;motore.c: 72: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
  7323  00005E  A0A4               	btfss	4004,0,c	;volatile
  7324  000060  B2A4               	btfsc	4004,1,c	;volatile
  7325  000062  D001               	goto	i1l3657
  7326  000064  D06B               	goto	i1l619
  7327  000066                     i1l3657:
  7328                           
  7329                           ;motore.c: 73: if (CANisRxReady()) {
  7330  000066  EC2F  F014         	call	_CANisRxReady	;wreg free
  7331  00006A  0900               	iorlw	0
  7332  00006C  B4D8               	btfsc	status,2,c
  7333  00006E  D064               	goto	i1l622
  7334                           
  7335                           ;motore.c: 74: CANreceiveMessage(&msg);
  7336  000070  0E11               	movlw	low _msg
  7337  000072  6E28               	movwf	CANreceiveMessage@msg,c
  7338  000074  0E00               	movlw	high _msg
  7339  000076  6E29               	movwf	CANreceiveMessage@msg+1,c
  7340  000078  ECC0  F00C         	call	_CANreceiveMessage	;wreg free
  7341                           
  7342                           ;motore.c: 75: if (msg.RTR == 1) {
  7343  00007C  041F               	decf	_msg+14,w,c
  7344  00007E  A4D8               	btfss	status,2,c
  7345  000080  D00D               	goto	i1l3665
  7346                           
  7347                           ;motore.c: 76: id = msg.identifier;
  7348  000082  C011  F0A1         	movff	_msg,_id
  7349  000086  C012  F0A2         	movff	_msg+1,_id+1
  7350  00008A  C013  F0A3         	movff	_msg+2,_id+2
  7351  00008E  C014  F0A4         	movff	_msg+3,_id+3
  7352                           
  7353                           ;motore.c: 77: remote_frame = msg.RTR;
  7354  000092  A01F               	btfss	_msg+14,0,c
  7355  000094  D002               	goto	i1u423_20
  7356  000096  8245               	bsf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7357  000098  D001               	goto	i1l3665
  7358  00009A                     i1u423_20:
  7359  00009A  9245               	bcf	_remote_frame/(0+8),_remote_frame& (0+7),c
  7360  00009C                     i1l3665:
  7361                           
  7362                           ;motore.c: 78: }
  7363                           ;motore.c: 79: if (msg.identifier == 0b00000000000000000000000000110) {
  7364  00009C  0E06               	movlw	6
  7365  00009E  1811               	xorwf	_msg,w,c
  7366  0000A0  1012               	iorwf	_msg+1,w,c
  7367  0000A2  1013               	iorwf	_msg+2,w,c
  7368  0000A4  1014               	iorwf	_msg+3,w,c
  7369  0000A6  B4D8               	btfsc	status,2,c
  7370                           
  7371                           ;motore.c: 80: misura = 1;
  7372  0000A8  8045               	bsf	_misura/(0+8),_misura& (0+7),c
  7373                           
  7374                           ;motore.c: 81: }
  7375                           ;motore.c: 82: if (msg.identifier == 0b00000000000000000000000000101) {
  7376  0000AA  0E05               	movlw	5
  7377  0000AC  1811               	xorwf	_msg,w,c
  7378  0000AE  1012               	iorwf	_msg+1,w,c
  7379  0000B0  1013               	iorwf	_msg+2,w,c
  7380  0000B2  1014               	iorwf	_msg+3,w,c
  7381  0000B4  A4D8               	btfss	status,2,c
  7382  0000B6  D00F               	goto	i1l3675
  7383                           
  7384                           ;motore.c: 83: misura = 0;
  7385  0000B8  9045               	bcf	_misura/(0+8),_misura& (0+7),c
  7386                           
  7387                           ;motore.c: 84: data_array[0] = counter;
  7388  0000BA  C009  F020         	movff	_counter,_data_array
  7389                           
  7390                           ;motore.c: 85: data_array[1] = counter >> 8;
  7391  0000BE  C00A  F021         	movff	_counter+1,_data_array+1
  7392                           
  7393                           ;motore.c: 86: data_array[2] = counter >> 8;
  7394  0000C2  C00A  F022         	movff	_counter+1,_data_array+2
  7395                           
  7396                           ;motore.c: 87: counter = 0;
  7397  0000C6  0E00               	movlw	0
  7398  0000C8  6E09               	movwf	_counter,c
  7399  0000CA  0E00               	movlw	0
  7400  0000CC  6E0A               	movwf	_counter+1,c
  7401  0000CE  0E00               	movlw	0
  7402  0000D0  6E0B               	movwf	_counter+2,c
  7403  0000D2  0E00               	movlw	0
  7404  0000D4  6E0C               	movwf	_counter+3,c
  7405  0000D6                     i1l3675:
  7406                           
  7407                           ;motore.c: 88: }
  7408                           ;motore.c: 89: if (msg.identifier == 0b00000000000000000000000001000) {
  7409  0000D6  0E08               	movlw	8
  7410  0000D8  1811               	xorwf	_msg,w,c
  7411  0000DA  1012               	iorwf	_msg+1,w,c
  7412  0000DC  1013               	iorwf	_msg+2,w,c
  7413  0000DE  1014               	iorwf	_msg+3,w,c
  7414  0000E0  B4D8               	btfsc	status,2,c
  7415                           
  7416                           ;motore.c: 90: data_array[0] = currentSpeed;
  7417  0000E2  C046  F020         	movff	_currentSpeed,_data_array
  7418                           
  7419                           ;motore.c: 91: }
  7420                           ;motore.c: 92: if (msg.identifier == 0b00000000000000000000000000010) {
  7421  0000E6  0E02               	movlw	2
  7422  0000E8  1811               	xorwf	_msg,w,c
  7423  0000EA  1012               	iorwf	_msg+1,w,c
  7424  0000EC  1013               	iorwf	_msg+2,w,c
  7425  0000EE  1014               	iorwf	_msg+3,w,c
  7426  0000F0  A4D8               	btfss	status,2,c
  7427  0000F2  D00E               	goto	i1l3683
  7428                           
  7429                           ;motore.c: 93: currentSpeed = msg.data[0];
  7430  0000F4  C015  F046         	movff	_msg+4,_currentSpeed
  7431                           
  7432                           ;motore.c: 94: dir = msg.data[1];
  7433  0000F8  C016  F0AF         	movff	_msg+5,_dir
  7434  0000FC  0100               	movlb	0	; () banked
  7435  0000FE  6BB0               	clrf	(_dir+1)& (0+255),b
  7436                           
  7437                           ;motore.c: 95: previousTimeCounter = timeCounter;
  7438  000100  C00D  F0A5         	movff	_timeCounter,_previousTimeCounter
  7439  000104  C00E  F0A6         	movff	_timeCounter+1,_previousTimeCounter+1
  7440  000108  C00F  F0A7         	movff	_timeCounter+2,_previousTimeCounter+2
  7441  00010C  C010  F0A8         	movff	_timeCounter+3,_previousTimeCounter+3
  7442  000110                     i1l3683:
  7443                           
  7444                           ;motore.c: 96: }
  7445                           ;motore.c: 97: if (msg.identifier == 0b00000000000000000000000000001) {
  7446  000110  0411               	decf	_msg,w,c
  7447  000112  1012               	iorwf	_msg+1,w,c
  7448  000114  1013               	iorwf	_msg+2,w,c
  7449  000116  1014               	iorwf	_msg+3,w,c
  7450  000118  A4D8               	btfss	status,2,c
  7451  00011A  D003               	goto	i1l3689
  7452                           
  7453                           ;motore.c: 98: currentSpeed = 0;
  7454  00011C  0E00               	movlw	0
  7455  00011E  6E46               	movwf	_currentSpeed,c
  7456                           
  7457                           ;motore.c: 99: PORTAbits.RA1 = 1;
  7458  000120  8280               	bsf	3968,1,c	;volatile
  7459  000122                     i1l3689:
  7460                           
  7461                           ;motore.c: 100: }
  7462                           ;motore.c: 101: if (msg.identifier == 0b00000000000000000000000000010) {
  7463  000122  0E02               	movlw	2
  7464  000124  1811               	xorwf	_msg,w,c
  7465  000126  1012               	iorwf	_msg+1,w,c
  7466  000128  1013               	iorwf	_msg+2,w,c
  7467  00012A  1014               	iorwf	_msg+3,w,c
  7468  00012C  A4D8               	btfss	status,2,c
  7469  00012E  D004               	goto	i1l622
  7470                           
  7471                           ;motore.c: 102: left_speed = msg.data[0];
  7472  000130  C015  F0B4         	movff	_msg+4,_left_speed
  7473                           
  7474                           ;motore.c: 103: right_speed = msg.data[1];
  7475  000134  C016  F0B7         	movff	_msg+5,_right_speed
  7476  000138                     i1l622:
  7477                           
  7478                           ;motore.c: 104: }
  7479                           ;motore.c: 105: }
  7480                           ;motore.c: 106: PIR3bits.RXB0IF = 0;
  7481  000138  90A4               	bcf	4004,0,c	;volatile
  7482                           
  7483                           ;motore.c: 107: PIR3bits.RXB1IF = 0;
  7484  00013A  92A4               	bcf	4004,1,c	;volatile
  7485  00013C                     i1l619:
  7486                           
  7487                           ;motore.c: 108: }
  7488                           ;motore.c: 109: if (PIR2bits.TMR3IF) {
  7489  00013C  A2A1               	btfss	4001,1,c	;volatile
  7490  00013E  D00B               	goto	i1l631
  7491                           
  7492                           ;motore.c: 110: timeCounter++;
  7493  000140  0E01               	movlw	1
  7494  000142  260D               	addwf	_timeCounter,f,c
  7495  000144  0E00               	movlw	0
  7496  000146  220E               	addwfc	_timeCounter+1,f,c
  7497  000148  220F               	addwfc	_timeCounter+2,f,c
  7498  00014A  2210               	addwfc	_timeCounter+3,f,c
  7499                           
  7500                           ;motore.c: 111: TMR3H = 0x63;
  7501  00014C  0E63               	movlw	99
  7502  00014E  6EB3               	movwf	4019,c	;volatile
  7503                           
  7504                           ;motore.c: 112: TMR3L = 0xC0;
  7505  000150  0EC0               	movlw	192
  7506  000152  6EB2               	movwf	4018,c	;volatile
  7507                           
  7508                           ;motore.c: 113: PIR2bits.TMR3IF = 0;
  7509  000154  92A1               	bcf	4001,1,c	;volatile
  7510  000156                     i1l631:
  7511  000156  C044  FFF5         	movff	??_ISR_bassa+16,tablat
  7512  00015A  C043  FFF8         	movff	??_ISR_bassa+15,tblptru
  7513  00015E  C042  FFF7         	movff	??_ISR_bassa+14,tblptrh
  7514  000162  C041  FFF6         	movff	??_ISR_bassa+13,tblptrl
  7515  000166  C040  FFF4         	movff	??_ISR_bassa+12,prodh
  7516  00016A  C03F  FFF3         	movff	??_ISR_bassa+11,prodl
  7517  00016E  C03E  FFDA         	movff	??_ISR_bassa+10,fsr2h
  7518  000172  C03D  FFD9         	movff	??_ISR_bassa+9,fsr2l
  7519  000176  C03C  FFE2         	movff	??_ISR_bassa+8,fsr1h
  7520  00017A  C03B  FFE1         	movff	??_ISR_bassa+7,fsr1l
  7521  00017E  C03A  FFEA         	movff	??_ISR_bassa+6,fsr0h
  7522  000182  C039  FFE9         	movff	??_ISR_bassa+5,fsr0l
  7523  000186  C038  FFFB         	movff	??_ISR_bassa+4,pclatu
  7524  00018A  C037  FFFA         	movff	??_ISR_bassa+3,pclath
  7525  00018E  C036  FFE0         	movff	??_ISR_bassa+2,bsr
  7526  000192  C035  FFE8         	movff	??_ISR_bassa+1,wreg
  7527  000196  C034  FFD8         	movff	??_ISR_bassa,status
  7528  00019A  9047               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  7529  00019C  0010               	retfie	
  7530  00019E                     __end_of_ISR_bassa:
  7531                           	opt stack 0
  7532                           pclatu	equ	0xFFB
  7533                           pclath	equ	0xFFA
  7534                           tblptru	equ	0xFF8
  7535                           tblptrh	equ	0xFF7
  7536                           tblptrl	equ	0xFF6
  7537                           tablat	equ	0xFF5
  7538                           prodh	equ	0xFF4
  7539                           prodl	equ	0xFF3
  7540                           intcon	equ	0xFF2
  7541                           intcon2	equ	0xFF1
  7542                           postinc0	equ	0xFEE
  7543                           fsr0h	equ	0xFEA
  7544                           fsr0l	equ	0xFE9
  7545                           wreg	equ	0xFE8
  7546                           fsr1h	equ	0xFE2
  7547                           fsr1l	equ	0xFE1
  7548                           bsr	equ	0xFE0
  7549                           indf2	equ	0xFDF
  7550                           fsr2h	equ	0xFDA
  7551                           fsr2l	equ	0xFD9
  7552                           status	equ	0xFD8
  7553                           
  7554 ;; *************** function _CANreceiveMessage *****************
  7555 ;; Defined at:
  7556 ;;		line 528 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  msg             2    0[COMRAM] PTR struct .
  7559 ;;		 -> msg(15), 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;  tamp            1   11[COMRAM] unsigned char 
  7562 ;;  error           1   10[COMRAM] unsigned char 
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  1    wreg      unsigned char 
  7565 ;; Registers used:
  7566 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7572 ;;      Params:         2       0       0       0
  7573 ;;      Locals:         2       0       0       0
  7574 ;;      Temps:          8       0       0       0
  7575 ;;      Totals:        12       0       0       0
  7576 ;;Total ram usage:       12 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; Hardware stack levels required when called:    3
  7579 ;; This function calls:
  7580 ;;		Nothing
  7581 ;; This function is called by:
  7582 ;;		_ISR_bassa
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           	psect	text19
  7587  001980                     __ptext19:
  7588                           	opt stack 0
  7589  001980                     _CANreceiveMessage:
  7590                           	opt stack 23
  7591                           
  7592                           ;inc\CANlib.h: 530: BYTE tamp;
  7593                           ;inc\CANlib.h: 531: BYTE error = 0;
  7594                           
  7595                           ;incstack = 0
  7596  001980  0E00               	movlw	0
  7597  001982  6E32               	movwf	CANreceiveMessage@error,c
  7598                           
  7599                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
  7600  001984  BE74               	btfsc	3956,7,c	;volatile
  7601                           
  7602                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
  7603  001986  8032               	bsf	CANreceiveMessage@error,0,c
  7604                           
  7605                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
  7606  001988  BC74               	btfsc	3956,6,c	;volatile
  7607                           
  7608                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
  7609  00198A  8232               	bsf	CANreceiveMessage@error,1,c
  7610                           
  7611                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
  7612  00198C  010F               	movlb	15	; () banked
  7613  00198E  AF50               	btfss	80,7,b	;volatile
  7614  001990  D143               	goto	i1l402
  7615                           
  7616                           ; BSR set to: 15
  7617                           ;inc\CANlib.h: 541: {
  7618                           ;inc\CANlib.h: 542: msg->identifier = 0;
  7619  001992  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7620  001996  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7621  00199A  6ADE               	clrf	postinc2,c
  7622  00199C  6ADE               	clrf	postinc2,c
  7623  00199E  6ADE               	clrf	postinc2,c
  7624  0019A0  6ADD               	clrf	postdec2,c
  7625                           
  7626                           ; BSR set to: 15
  7627                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
  7628  0019A2  EE20 F004          	lfsr	2,4
  7629  0019A6  5028               	movf	CANreceiveMessage@msg,w,c
  7630  0019A8  26D9               	addwf	fsr2l,f,c
  7631  0019AA  5029               	movf	CANreceiveMessage@msg+1,w,c
  7632  0019AC  22DA               	addwfc	fsr2h,f,c
  7633  0019AE  CF56 FFDF          	movff	3926,indf2	;volatile
  7634                           
  7635                           ; BSR set to: 15
  7636                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
  7637  0019B2  EE20 F005          	lfsr	2,5
  7638  0019B6  5028               	movf	CANreceiveMessage@msg,w,c
  7639  0019B8  26D9               	addwf	fsr2l,f,c
  7640  0019BA  5029               	movf	CANreceiveMessage@msg+1,w,c
  7641  0019BC  22DA               	addwfc	fsr2h,f,c
  7642  0019BE  CF57 FFDF          	movff	3927,indf2	;volatile
  7643                           
  7644                           ; BSR set to: 15
  7645                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
  7646  0019C2  EE20 F006          	lfsr	2,6
  7647  0019C6  5028               	movf	CANreceiveMessage@msg,w,c
  7648  0019C8  26D9               	addwf	fsr2l,f,c
  7649  0019CA  5029               	movf	CANreceiveMessage@msg+1,w,c
  7650  0019CC  22DA               	addwfc	fsr2h,f,c
  7651  0019CE  CF58 FFDF          	movff	3928,indf2	;volatile
  7652                           
  7653                           ; BSR set to: 15
  7654                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
  7655  0019D2  EE20 F007          	lfsr	2,7
  7656  0019D6  5028               	movf	CANreceiveMessage@msg,w,c
  7657  0019D8  26D9               	addwf	fsr2l,f,c
  7658  0019DA  5029               	movf	CANreceiveMessage@msg+1,w,c
  7659  0019DC  22DA               	addwfc	fsr2h,f,c
  7660  0019DE  CF59 FFDF          	movff	3929,indf2	;volatile
  7661                           
  7662                           ; BSR set to: 15
  7663                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
  7664  0019E2  EE20 F008          	lfsr	2,8
  7665  0019E6  5028               	movf	CANreceiveMessage@msg,w,c
  7666  0019E8  26D9               	addwf	fsr2l,f,c
  7667  0019EA  5029               	movf	CANreceiveMessage@msg+1,w,c
  7668  0019EC  22DA               	addwfc	fsr2h,f,c
  7669  0019EE  CF5A FFDF          	movff	3930,indf2	;volatile
  7670                           
  7671                           ; BSR set to: 15
  7672                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
  7673  0019F2  EE20 F009          	lfsr	2,9
  7674  0019F6  5028               	movf	CANreceiveMessage@msg,w,c
  7675  0019F8  26D9               	addwf	fsr2l,f,c
  7676  0019FA  5029               	movf	CANreceiveMessage@msg+1,w,c
  7677  0019FC  22DA               	addwfc	fsr2h,f,c
  7678  0019FE  CF5B FFDF          	movff	3931,indf2	;volatile
  7679                           
  7680                           ; BSR set to: 15
  7681                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
  7682  001A02  EE20 F00A          	lfsr	2,10
  7683  001A06  5028               	movf	CANreceiveMessage@msg,w,c
  7684  001A08  26D9               	addwf	fsr2l,f,c
  7685  001A0A  5029               	movf	CANreceiveMessage@msg+1,w,c
  7686  001A0C  22DA               	addwfc	fsr2h,f,c
  7687  001A0E  CF5C FFDF          	movff	3932,indf2	;volatile
  7688                           
  7689                           ; BSR set to: 15
  7690                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
  7691  001A12  EE20 F00B          	lfsr	2,11
  7692  001A16  5028               	movf	CANreceiveMessage@msg,w,c
  7693  001A18  26D9               	addwf	fsr2l,f,c
  7694  001A1A  5029               	movf	CANreceiveMessage@msg+1,w,c
  7695  001A1C  22DA               	addwfc	fsr2h,f,c
  7696  001A1E  CF5D FFDF          	movff	3933,indf2	;volatile
  7697                           
  7698                           ; BSR set to: 15
  7699                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
  7700  001A22  EE20 F00E          	lfsr	2,14
  7701  001A26  5028               	movf	CANreceiveMessage@msg,w,c
  7702  001A28  26D9               	addwf	fsr2l,f,c
  7703  001A2A  5029               	movf	CANreceiveMessage@msg+1,w,c
  7704  001A2C  22DA               	addwfc	fsr2h,f,c
  7705  001A2E  010F               	movlb	15	; () banked
  7706  001A30  AD55               	btfss	85,6,b	;volatile
  7707  001A32  D002               	goto	i1u373_20
  7708  001A34  0E01               	movlw	1
  7709  001A36  D001               	goto	i1u373_26
  7710  001A38                     i1u373_20:
  7711  001A38  0E00               	movlw	0
  7712  001A3A                     i1u373_26:
  7713  001A3A  6EDF               	movwf	indf2,c
  7714                           
  7715                           ; BSR set to: 15
  7716                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
  7717  001A3C  EE20 F00D          	lfsr	2,13
  7718  001A40  5028               	movf	CANreceiveMessage@msg,w,c
  7719  001A42  26D9               	addwf	fsr2l,f,c
  7720  001A44  5029               	movf	CANreceiveMessage@msg+1,w,c
  7721  001A46  22DA               	addwfc	fsr2h,f,c
  7722  001A48  010F               	movlb	15	; () banked
  7723  001A4A  5155               	movf	85,w,b	;volatile
  7724  001A4C  0B0F               	andlw	15
  7725  001A4E  6EDF               	movwf	indf2,c
  7726                           
  7727                           ; BSR set to: 15
  7728                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
  7729  001A50  EE20 F00C          	lfsr	2,12
  7730  001A54  5028               	movf	CANreceiveMessage@msg,w,c
  7731  001A56  26D9               	addwf	fsr2l,f,c
  7732  001A58  5029               	movf	CANreceiveMessage@msg+1,w,c
  7733  001A5A  22DA               	addwfc	fsr2h,f,c
  7734  001A5C  010F               	movlb	15	; () banked
  7735  001A5E  A752               	btfss	82,3,b	;volatile
  7736  001A60  D002               	goto	i1u374_20
  7737  001A62  0E01               	movlw	1
  7738  001A64  D001               	goto	i1u374_26
  7739  001A66                     i1u374_20:
  7740  001A66  0E00               	movlw	0
  7741  001A68                     i1u374_26:
  7742  001A68  6EDF               	movwf	indf2,c
  7743                           
  7744                           ; BSR set to: 15
  7745                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
  7746  001A6A  010F               	movlb	15	; () banked
  7747  001A6C  B752               	btfsc	82,3,b	;volatile
  7748  001A6E  D044               	goto	i1l3359
  7749                           
  7750                           ; BSR set to: 15
  7751                           ;inc\CANlib.h: 559: {
  7752                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
  7753  001A70  CF51 F02A          	movff	3921,??_CANreceiveMessage	;volatile
  7754  001A74  6A2B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7755  001A76  6A2C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7756  001A78  6A2D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7757  001A7A  0E03               	movlw	3
  7758  001A7C                     i1u376_25:
  7759  001A7C  90D8               	bcf	status,0,c
  7760  001A7E  362A               	rlcf	??_CANreceiveMessage,f,c
  7761  001A80  362B               	rlcf	??_CANreceiveMessage+1,f,c
  7762  001A82  362C               	rlcf	??_CANreceiveMessage+2,f,c
  7763  001A84  362D               	rlcf	??_CANreceiveMessage+3,f,c
  7764  001A86  2EE8               	decfsz	wreg,f,c
  7765  001A88  D7F9               	goto	i1u376_25
  7766  001A8A  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7767  001A8E  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7768  001A92  C02A  FFDE         	movff	??_CANreceiveMessage,postinc2
  7769  001A96  C02B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7770  001A9A  C02C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7771  001A9E  C02D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7772                           
  7773                           ; BSR set to: 15
  7774                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
  7775  001AA2  010F               	movlb	15	; () banked
  7776  001AA4  3952               	swapf	82,w,b	;volatile
  7777  001AA6  42E8               	rrncf	wreg,f,c
  7778  001AA8  0B07               	andlw	7
  7779  001AAA  0B07               	andlw	7
  7780  001AAC  6E33               	movwf	CANreceiveMessage@tamp,c
  7781                           
  7782                           ; BSR set to: 15
  7783                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
  7784  001AAE  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7785  001AB2  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7786  001AB6  CFDE F02A          	movff	postinc2,??_CANreceiveMessage
  7787  001ABA  CFDE F02B          	movff	postinc2,??_CANreceiveMessage+1
  7788  001ABE  CFDE F02C          	movff	postinc2,??_CANreceiveMessage+2
  7789  001AC2  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+3
  7790  001AC6  5033               	movf	CANreceiveMessage@tamp,w,c
  7791  001AC8  242A               	addwf	??_CANreceiveMessage,w,c
  7792  001ACA  6E2E               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  7793  001ACC  0E00               	movlw	0
  7794  001ACE  202B               	addwfc	??_CANreceiveMessage+1,w,c
  7795  001AD0  6E2F               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  7796  001AD2  0E00               	movlw	0
  7797  001AD4  202C               	addwfc	??_CANreceiveMessage+2,w,c
  7798  001AD6  6E30               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  7799  001AD8  0E00               	movlw	0
  7800  001ADA  202D               	addwfc	??_CANreceiveMessage+3,w,c
  7801  001ADC  6E31               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  7802  001ADE  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7803  001AE2  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7804  001AE6  C02E  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  7805  001AEA  C02F  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  7806  001AEE  C030  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  7807  001AF2  C031  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  7808                           
  7809                           ;inc\CANlib.h: 563: }
  7810  001AF6  D08D               	goto	i1l3385
  7811  001AF8                     i1l3359:
  7812                           
  7813                           ; BSR set to: 15
  7814                           ;inc\CANlib.h: 564: else
  7815                           ;inc\CANlib.h: 565: {
  7816                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
  7817  001AF8  CF54 F02A          	movff	3924,??_CANreceiveMessage	;volatile
  7818  001AFC  6A2B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7819  001AFE  6A2C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7820  001B00  6A2D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7821  001B02  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7822  001B06  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7823  001B0A  C02A  FFDE         	movff	??_CANreceiveMessage,postinc2
  7824  001B0E  C02B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  7825  001B12  C02C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  7826  001B16  C02D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  7827                           
  7828                           ; BSR set to: 15
  7829                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
  7830  001B1A  CF53 F02A          	movff	3923,??_CANreceiveMessage	;volatile
  7831  001B1E  6A2B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7832  001B20  6A2C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7833  001B22  6A2D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7834  001B24  C02C  F02D         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  7835  001B28  C02B  F02C         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  7836  001B2C  C02A  F02B         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  7837  001B30  6A2A               	clrf	??_CANreceiveMessage,c
  7838  001B32  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7839  001B36  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7840  001B3A  502A               	movf	??_CANreceiveMessage,w,c
  7841  001B3C  26DE               	addwf	postinc2,f,c
  7842  001B3E  502B               	movf	??_CANreceiveMessage+1,w,c
  7843  001B40  22DE               	addwfc	postinc2,f,c
  7844  001B42  502C               	movf	??_CANreceiveMessage+2,w,c
  7845  001B44  22DE               	addwfc	postinc2,f,c
  7846  001B46  502D               	movf	??_CANreceiveMessage+3,w,c
  7847  001B48  22DE               	addwfc	postinc2,f,c
  7848                           
  7849                           ; BSR set to: 15
  7850                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
  7851  001B4A  010F               	movlb	15	; () banked
  7852  001B4C  A152               	btfss	82,0,b	;volatile
  7853  001B4E  D00C               	goto	i1l3367
  7854                           
  7855                           ; BSR set to: 15
  7856                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
  7857  001B50  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7858  001B54  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7859  001B58  0E00               	movlw	0
  7860  001B5A  12DE               	iorwf	postinc2,f,c
  7861  001B5C  0E00               	movlw	0
  7862  001B5E  12DE               	iorwf	postinc2,f,c
  7863  001B60  0E01               	movlw	1
  7864  001B62  12DE               	iorwf	postinc2,f,c
  7865  001B64  0E00               	movlw	0
  7866  001B66  12DE               	iorwf	postinc2,f,c
  7867  001B68                     i1l3367:
  7868                           
  7869                           ; BSR set to: 15
  7870                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
  7871  001B68  010F               	movlb	15	; () banked
  7872  001B6A  A352               	btfss	82,1,b	;volatile
  7873  001B6C  D00C               	goto	i1l3371
  7874                           
  7875                           ; BSR set to: 15
  7876                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
  7877  001B6E  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7878  001B72  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7879  001B76  0E00               	movlw	0
  7880  001B78  12DE               	iorwf	postinc2,f,c
  7881  001B7A  0E00               	movlw	0
  7882  001B7C  12DE               	iorwf	postinc2,f,c
  7883  001B7E  0E02               	movlw	2
  7884  001B80  12DE               	iorwf	postinc2,f,c
  7885  001B82  0E00               	movlw	0
  7886  001B84  12DE               	iorwf	postinc2,f,c
  7887  001B86                     i1l3371:
  7888                           
  7889                           ; BSR set to: 15
  7890                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
  7891  001B86  010F               	movlb	15	; () banked
  7892  001B88  AB52               	btfss	82,5,b	;volatile
  7893  001B8A  D00C               	goto	i1l3375
  7894                           
  7895                           ; BSR set to: 15
  7896                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
  7897  001B8C  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7898  001B90  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7899  001B94  0E00               	movlw	0
  7900  001B96  12DE               	iorwf	postinc2,f,c
  7901  001B98  0E00               	movlw	0
  7902  001B9A  12DE               	iorwf	postinc2,f,c
  7903  001B9C  0E04               	movlw	4
  7904  001B9E  12DE               	iorwf	postinc2,f,c
  7905  001BA0  0E00               	movlw	0
  7906  001BA2  12DE               	iorwf	postinc2,f,c
  7907  001BA4                     i1l3375:
  7908                           
  7909                           ; BSR set to: 15
  7910                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
  7911  001BA4  010F               	movlb	15	; () banked
  7912  001BA6  AD52               	btfss	82,6,b	;volatile
  7913  001BA8  D00C               	goto	i1l3379
  7914                           
  7915                           ; BSR set to: 15
  7916                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
  7917  001BAA  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7918  001BAE  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7919  001BB2  0E00               	movlw	0
  7920  001BB4  12DE               	iorwf	postinc2,f,c
  7921  001BB6  0E00               	movlw	0
  7922  001BB8  12DE               	iorwf	postinc2,f,c
  7923  001BBA  0E08               	movlw	8
  7924  001BBC  12DE               	iorwf	postinc2,f,c
  7925  001BBE  0E00               	movlw	0
  7926  001BC0  12DE               	iorwf	postinc2,f,c
  7927  001BC2                     i1l3379:
  7928                           
  7929                           ; BSR set to: 15
  7930                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
  7931  001BC2  010F               	movlb	15	; () banked
  7932  001BC4  AF52               	btfss	82,7,b	;volatile
  7933  001BC6  D00C               	goto	i1l3383
  7934                           
  7935                           ; BSR set to: 15
  7936                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
  7937  001BC8  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7938  001BCC  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7939  001BD0  0E00               	movlw	0
  7940  001BD2  12DE               	iorwf	postinc2,f,c
  7941  001BD4  0E00               	movlw	0
  7942  001BD6  12DE               	iorwf	postinc2,f,c
  7943  001BD8  0E10               	movlw	16
  7944  001BDA  12DE               	iorwf	postinc2,f,c
  7945  001BDC  0E00               	movlw	0
  7946  001BDE  12DE               	iorwf	postinc2,f,c
  7947  001BE0                     i1l3383:
  7948                           
  7949                           ; BSR set to: 15
  7950                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
  7951  001BE0  CF51 F02A          	movff	3921,??_CANreceiveMessage	;volatile
  7952  001BE4  6A2B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  7953  001BE6  6A2C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  7954  001BE8  6A2D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  7955  001BEA  0E15               	movlw	21
  7956  001BEC                     i1u382_25:
  7957  001BEC  90D8               	bcf	status,0,c
  7958  001BEE  362A               	rlcf	??_CANreceiveMessage,f,c
  7959  001BF0  362B               	rlcf	??_CANreceiveMessage+1,f,c
  7960  001BF2  362C               	rlcf	??_CANreceiveMessage+2,f,c
  7961  001BF4  362D               	rlcf	??_CANreceiveMessage+3,f,c
  7962  001BF6  2EE8               	decfsz	wreg,f,c
  7963  001BF8  D7F9               	goto	i1u382_25
  7964  001BFA  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7965  001BFE  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7966  001C02  502A               	movf	??_CANreceiveMessage,w,c
  7967  001C04  12DE               	iorwf	postinc2,f,c
  7968  001C06  502B               	movf	??_CANreceiveMessage+1,w,c
  7969  001C08  12DE               	iorwf	postinc2,f,c
  7970  001C0A  502C               	movf	??_CANreceiveMessage+2,w,c
  7971  001C0C  12DE               	iorwf	postinc2,f,c
  7972  001C0E  502D               	movf	??_CANreceiveMessage+3,w,c
  7973  001C10  12DE               	iorwf	postinc2,f,c
  7974  001C12                     i1l3385:
  7975                           
  7976                           ; BSR set to: 15
  7977                           ;inc\CANlib.h: 581: }
  7978                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
  7979  001C12  010F               	movlb	15	; () banked
  7980  001C14  9F50               	bcf	80,7,b	;volatile
  7981                           
  7982                           ; BSR set to: 15
  7983                           ;inc\CANlib.h: 584: return (error);
  7984                           ;	Return value of _CANreceiveMessage is never used
  7985  001C16  0012               	return	
  7986  001C18                     i1l402:
  7987                           
  7988                           ; BSR set to: 15
  7989                           ;inc\CANlib.h: 585: }
  7990                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
  7991  001C18  AE60               	btfss	3936,7,c	;volatile
  7992  001C1A  0012               	return	
  7993                           
  7994                           ; BSR set to: 15
  7995                           ;inc\CANlib.h: 588: {
  7996                           ;inc\CANlib.h: 589: msg->identifier = 0;
  7997  001C1C  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  7998  001C20  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  7999  001C24  6ADE               	clrf	postinc2,c
  8000  001C26  6ADE               	clrf	postinc2,c
  8001  001C28  6ADE               	clrf	postinc2,c
  8002  001C2A  6ADD               	clrf	postdec2,c
  8003                           
  8004                           ; BSR set to: 15
  8005                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
  8006  001C2C  EE20 F004          	lfsr	2,4
  8007  001C30  5028               	movf	CANreceiveMessage@msg,w,c
  8008  001C32  26D9               	addwf	fsr2l,f,c
  8009  001C34  5029               	movf	CANreceiveMessage@msg+1,w,c
  8010  001C36  22DA               	addwfc	fsr2h,f,c
  8011  001C38  CF66 FFDF          	movff	3942,indf2	;volatile
  8012                           
  8013                           ; BSR set to: 15
  8014                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
  8015  001C3C  EE20 F005          	lfsr	2,5
  8016  001C40  5028               	movf	CANreceiveMessage@msg,w,c
  8017  001C42  26D9               	addwf	fsr2l,f,c
  8018  001C44  5029               	movf	CANreceiveMessage@msg+1,w,c
  8019  001C46  22DA               	addwfc	fsr2h,f,c
  8020  001C48  CF67 FFDF          	movff	3943,indf2	;volatile
  8021                           
  8022                           ; BSR set to: 15
  8023                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
  8024  001C4C  EE20 F006          	lfsr	2,6
  8025  001C50  5028               	movf	CANreceiveMessage@msg,w,c
  8026  001C52  26D9               	addwf	fsr2l,f,c
  8027  001C54  5029               	movf	CANreceiveMessage@msg+1,w,c
  8028  001C56  22DA               	addwfc	fsr2h,f,c
  8029  001C58  CF68 FFDF          	movff	3944,indf2	;volatile
  8030                           
  8031                           ; BSR set to: 15
  8032                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
  8033  001C5C  EE20 F007          	lfsr	2,7
  8034  001C60  5028               	movf	CANreceiveMessage@msg,w,c
  8035  001C62  26D9               	addwf	fsr2l,f,c
  8036  001C64  5029               	movf	CANreceiveMessage@msg+1,w,c
  8037  001C66  22DA               	addwfc	fsr2h,f,c
  8038  001C68  CF69 FFDF          	movff	3945,indf2	;volatile
  8039                           
  8040                           ; BSR set to: 15
  8041                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
  8042  001C6C  EE20 F008          	lfsr	2,8
  8043  001C70  5028               	movf	CANreceiveMessage@msg,w,c
  8044  001C72  26D9               	addwf	fsr2l,f,c
  8045  001C74  5029               	movf	CANreceiveMessage@msg+1,w,c
  8046  001C76  22DA               	addwfc	fsr2h,f,c
  8047  001C78  CF6A FFDF          	movff	3946,indf2	;volatile
  8048                           
  8049                           ; BSR set to: 15
  8050                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
  8051  001C7C  EE20 F009          	lfsr	2,9
  8052  001C80  5028               	movf	CANreceiveMessage@msg,w,c
  8053  001C82  26D9               	addwf	fsr2l,f,c
  8054  001C84  5029               	movf	CANreceiveMessage@msg+1,w,c
  8055  001C86  22DA               	addwfc	fsr2h,f,c
  8056  001C88  CF6B FFDF          	movff	3947,indf2	;volatile
  8057                           
  8058                           ; BSR set to: 15
  8059                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
  8060  001C8C  EE20 F00A          	lfsr	2,10
  8061  001C90  5028               	movf	CANreceiveMessage@msg,w,c
  8062  001C92  26D9               	addwf	fsr2l,f,c
  8063  001C94  5029               	movf	CANreceiveMessage@msg+1,w,c
  8064  001C96  22DA               	addwfc	fsr2h,f,c
  8065  001C98  CF6C FFDF          	movff	3948,indf2	;volatile
  8066                           
  8067                           ; BSR set to: 15
  8068                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
  8069  001C9C  EE20 F00B          	lfsr	2,11
  8070  001CA0  5028               	movf	CANreceiveMessage@msg,w,c
  8071  001CA2  26D9               	addwf	fsr2l,f,c
  8072  001CA4  5029               	movf	CANreceiveMessage@msg+1,w,c
  8073  001CA6  22DA               	addwfc	fsr2h,f,c
  8074  001CA8  CF6D FFDF          	movff	3949,indf2	;volatile
  8075                           
  8076                           ; BSR set to: 15
  8077                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
  8078  001CAC  EE20 F00E          	lfsr	2,14
  8079  001CB0  5028               	movf	CANreceiveMessage@msg,w,c
  8080  001CB2  26D9               	addwf	fsr2l,f,c
  8081  001CB4  5029               	movf	CANreceiveMessage@msg+1,w,c
  8082  001CB6  22DA               	addwfc	fsr2h,f,c
  8083  001CB8  AC65               	btfss	3941,6,c	;volatile
  8084  001CBA  D002               	goto	i1u384_20
  8085  001CBC  0E01               	movlw	1
  8086  001CBE  D001               	goto	i1u384_26
  8087  001CC0                     i1u384_20:
  8088  001CC0  0E00               	movlw	0
  8089  001CC2                     i1u384_26:
  8090  001CC2  6EDF               	movwf	indf2,c
  8091                           
  8092                           ; BSR set to: 15
  8093                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
  8094  001CC4  EE20 F00D          	lfsr	2,13
  8095  001CC8  5028               	movf	CANreceiveMessage@msg,w,c
  8096  001CCA  26D9               	addwf	fsr2l,f,c
  8097  001CCC  5029               	movf	CANreceiveMessage@msg+1,w,c
  8098  001CCE  22DA               	addwfc	fsr2h,f,c
  8099  001CD0  5065               	movf	3941,w,c	;volatile
  8100  001CD2  0B0F               	andlw	15
  8101  001CD4  6EDF               	movwf	indf2,c
  8102                           
  8103                           ; BSR set to: 15
  8104                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
  8105  001CD6  EE20 F00C          	lfsr	2,12
  8106  001CDA  5028               	movf	CANreceiveMessage@msg,w,c
  8107  001CDC  26D9               	addwf	fsr2l,f,c
  8108  001CDE  5029               	movf	CANreceiveMessage@msg+1,w,c
  8109  001CE0  22DA               	addwfc	fsr2h,f,c
  8110  001CE2  A662               	btfss	3938,3,c	;volatile
  8111  001CE4  D002               	goto	i1u385_20
  8112  001CE6  0E01               	movlw	1
  8113  001CE8  D001               	goto	i1u385_26
  8114  001CEA                     i1u385_20:
  8115  001CEA  0E00               	movlw	0
  8116  001CEC                     i1u385_26:
  8117  001CEC  6EDF               	movwf	indf2,c
  8118                           
  8119                           ; BSR set to: 15
  8120                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
  8121  001CEE  B662               	btfsc	3938,3,c	;volatile
  8122  001CF0  D043               	goto	i1l3421
  8123                           
  8124                           ; BSR set to: 15
  8125                           ;inc\CANlib.h: 606: {
  8126                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
  8127  001CF2  CF61 F02A          	movff	3937,??_CANreceiveMessage	;volatile
  8128  001CF6  6A2B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8129  001CF8  6A2C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8130  001CFA  6A2D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8131  001CFC  0E03               	movlw	3
  8132  001CFE                     i1u387_25:
  8133  001CFE  90D8               	bcf	status,0,c
  8134  001D00  362A               	rlcf	??_CANreceiveMessage,f,c
  8135  001D02  362B               	rlcf	??_CANreceiveMessage+1,f,c
  8136  001D04  362C               	rlcf	??_CANreceiveMessage+2,f,c
  8137  001D06  362D               	rlcf	??_CANreceiveMessage+3,f,c
  8138  001D08  2EE8               	decfsz	wreg,f,c
  8139  001D0A  D7F9               	goto	i1u387_25
  8140  001D0C  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8141  001D10  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8142  001D14  C02A  FFDE         	movff	??_CANreceiveMessage,postinc2
  8143  001D18  C02B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8144  001D1C  C02C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8145  001D20  C02D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8146                           
  8147                           ; BSR set to: 15
  8148                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
  8149  001D24  3862               	swapf	3938,w,c	;volatile
  8150  001D26  42E8               	rrncf	wreg,f,c
  8151  001D28  0B07               	andlw	7
  8152  001D2A  0B07               	andlw	7
  8153  001D2C  6E33               	movwf	CANreceiveMessage@tamp,c
  8154                           
  8155                           ; BSR set to: 15
  8156                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
  8157  001D2E  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8158  001D32  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8159  001D36  CFDE F02A          	movff	postinc2,??_CANreceiveMessage
  8160  001D3A  CFDE F02B          	movff	postinc2,??_CANreceiveMessage+1
  8161  001D3E  CFDE F02C          	movff	postinc2,??_CANreceiveMessage+2
  8162  001D42  CFDE F02D          	movff	postinc2,??_CANreceiveMessage+3
  8163  001D46  5033               	movf	CANreceiveMessage@tamp,w,c
  8164  001D48  242A               	addwf	??_CANreceiveMessage,w,c
  8165  001D4A  6E2E               	movwf	(??_CANreceiveMessage+4)& (0+255),c
  8166  001D4C  0E00               	movlw	0
  8167  001D4E  202B               	addwfc	??_CANreceiveMessage+1,w,c
  8168  001D50  6E2F               	movwf	(??_CANreceiveMessage+5)& (0+255),c
  8169  001D52  0E00               	movlw	0
  8170  001D54  202C               	addwfc	??_CANreceiveMessage+2,w,c
  8171  001D56  6E30               	movwf	(??_CANreceiveMessage+6)& (0+255),c
  8172  001D58  0E00               	movlw	0
  8173  001D5A  202D               	addwfc	??_CANreceiveMessage+3,w,c
  8174  001D5C  6E31               	movwf	(??_CANreceiveMessage+7)& (0+255),c
  8175  001D5E  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8176  001D62  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8177  001D66  C02E  FFDE         	movff	??_CANreceiveMessage+4,postinc2
  8178  001D6A  C02F  FFDE         	movff	??_CANreceiveMessage+5,postinc2
  8179  001D6E  C030  FFDE         	movff	??_CANreceiveMessage+6,postinc2
  8180  001D72  C031  FFDE         	movff	??_CANreceiveMessage+7,postinc2
  8181                           
  8182                           ;inc\CANlib.h: 610: }
  8183  001D76  D088               	goto	i1l3447
  8184  001D78                     i1l3421:
  8185                           
  8186                           ; BSR set to: 15
  8187                           ;inc\CANlib.h: 611: else
  8188                           ;inc\CANlib.h: 612: {
  8189                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
  8190  001D78  CF64 F02A          	movff	3940,??_CANreceiveMessage	;volatile
  8191  001D7C  6A2B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8192  001D7E  6A2C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8193  001D80  6A2D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8194  001D82  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8195  001D86  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8196  001D8A  C02A  FFDE         	movff	??_CANreceiveMessage,postinc2
  8197  001D8E  C02B  FFDE         	movff	??_CANreceiveMessage+1,postinc2
  8198  001D92  C02C  FFDE         	movff	??_CANreceiveMessage+2,postinc2
  8199  001D96  C02D  FFDE         	movff	??_CANreceiveMessage+3,postinc2
  8200                           
  8201                           ; BSR set to: 15
  8202                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
  8203  001D9A  CF63 F02A          	movff	3939,??_CANreceiveMessage	;volatile
  8204  001D9E  6A2B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8205  001DA0  6A2C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8206  001DA2  6A2D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8207  001DA4  C02C  F02D         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
  8208  001DA8  C02B  F02C         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
  8209  001DAC  C02A  F02B         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
  8210  001DB0  6A2A               	clrf	??_CANreceiveMessage,c
  8211  001DB2  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8212  001DB6  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8213  001DBA  502A               	movf	??_CANreceiveMessage,w,c
  8214  001DBC  26DE               	addwf	postinc2,f,c
  8215  001DBE  502B               	movf	??_CANreceiveMessage+1,w,c
  8216  001DC0  22DE               	addwfc	postinc2,f,c
  8217  001DC2  502C               	movf	??_CANreceiveMessage+2,w,c
  8218  001DC4  22DE               	addwfc	postinc2,f,c
  8219  001DC6  502D               	movf	??_CANreceiveMessage+3,w,c
  8220  001DC8  22DE               	addwfc	postinc2,f,c
  8221                           
  8222                           ; BSR set to: 15
  8223                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
  8224  001DCA  A062               	btfss	3938,0,c	;volatile
  8225  001DCC  D00C               	goto	i1l3429
  8226                           
  8227                           ; BSR set to: 15
  8228                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
  8229  001DCE  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8230  001DD2  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8231  001DD6  0E00               	movlw	0
  8232  001DD8  12DE               	iorwf	postinc2,f,c
  8233  001DDA  0E00               	movlw	0
  8234  001DDC  12DE               	iorwf	postinc2,f,c
  8235  001DDE  0E01               	movlw	1
  8236  001DE0  12DE               	iorwf	postinc2,f,c
  8237  001DE2  0E00               	movlw	0
  8238  001DE4  12DE               	iorwf	postinc2,f,c
  8239  001DE6                     i1l3429:
  8240                           
  8241                           ; BSR set to: 15
  8242                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
  8243  001DE6  A262               	btfss	3938,1,c	;volatile
  8244  001DE8  D00C               	goto	i1l3433
  8245                           
  8246                           ; BSR set to: 15
  8247                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
  8248  001DEA  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8249  001DEE  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8250  001DF2  0E00               	movlw	0
  8251  001DF4  12DE               	iorwf	postinc2,f,c
  8252  001DF6  0E00               	movlw	0
  8253  001DF8  12DE               	iorwf	postinc2,f,c
  8254  001DFA  0E02               	movlw	2
  8255  001DFC  12DE               	iorwf	postinc2,f,c
  8256  001DFE  0E00               	movlw	0
  8257  001E00  12DE               	iorwf	postinc2,f,c
  8258  001E02                     i1l3433:
  8259                           
  8260                           ; BSR set to: 15
  8261                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
  8262  001E02  AA62               	btfss	3938,5,c	;volatile
  8263  001E04  D00C               	goto	i1l3437
  8264                           
  8265                           ; BSR set to: 15
  8266                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
  8267  001E06  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8268  001E0A  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8269  001E0E  0E00               	movlw	0
  8270  001E10  12DE               	iorwf	postinc2,f,c
  8271  001E12  0E00               	movlw	0
  8272  001E14  12DE               	iorwf	postinc2,f,c
  8273  001E16  0E04               	movlw	4
  8274  001E18  12DE               	iorwf	postinc2,f,c
  8275  001E1A  0E00               	movlw	0
  8276  001E1C  12DE               	iorwf	postinc2,f,c
  8277  001E1E                     i1l3437:
  8278                           
  8279                           ; BSR set to: 15
  8280                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
  8281  001E1E  AC62               	btfss	3938,6,c	;volatile
  8282  001E20  D00C               	goto	i1l3441
  8283                           
  8284                           ; BSR set to: 15
  8285                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
  8286  001E22  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8287  001E26  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8288  001E2A  0E00               	movlw	0
  8289  001E2C  12DE               	iorwf	postinc2,f,c
  8290  001E2E  0E00               	movlw	0
  8291  001E30  12DE               	iorwf	postinc2,f,c
  8292  001E32  0E08               	movlw	8
  8293  001E34  12DE               	iorwf	postinc2,f,c
  8294  001E36  0E00               	movlw	0
  8295  001E38  12DE               	iorwf	postinc2,f,c
  8296  001E3A                     i1l3441:
  8297                           
  8298                           ; BSR set to: 15
  8299                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
  8300  001E3A  AE62               	btfss	3938,7,c	;volatile
  8301  001E3C  D00C               	goto	i1l3445
  8302                           
  8303                           ; BSR set to: 15
  8304                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
  8305  001E3E  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8306  001E42  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8307  001E46  0E00               	movlw	0
  8308  001E48  12DE               	iorwf	postinc2,f,c
  8309  001E4A  0E00               	movlw	0
  8310  001E4C  12DE               	iorwf	postinc2,f,c
  8311  001E4E  0E10               	movlw	16
  8312  001E50  12DE               	iorwf	postinc2,f,c
  8313  001E52  0E00               	movlw	0
  8314  001E54  12DE               	iorwf	postinc2,f,c
  8315  001E56                     i1l3445:
  8316                           
  8317                           ; BSR set to: 15
  8318                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
  8319  001E56  CF61 F02A          	movff	3937,??_CANreceiveMessage	;volatile
  8320  001E5A  6A2B               	clrf	(??_CANreceiveMessage+1)& (0+255),c
  8321  001E5C  6A2C               	clrf	(??_CANreceiveMessage+2)& (0+255),c
  8322  001E5E  6A2D               	clrf	(??_CANreceiveMessage+3)& (0+255),c
  8323  001E60  0E15               	movlw	21
  8324  001E62                     i1u393_25:
  8325  001E62  90D8               	bcf	status,0,c
  8326  001E64  362A               	rlcf	??_CANreceiveMessage,f,c
  8327  001E66  362B               	rlcf	??_CANreceiveMessage+1,f,c
  8328  001E68  362C               	rlcf	??_CANreceiveMessage+2,f,c
  8329  001E6A  362D               	rlcf	??_CANreceiveMessage+3,f,c
  8330  001E6C  2EE8               	decfsz	wreg,f,c
  8331  001E6E  D7F9               	goto	i1u393_25
  8332  001E70  C028  FFD9         	movff	CANreceiveMessage@msg,fsr2l
  8333  001E74  C029  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
  8334  001E78  502A               	movf	??_CANreceiveMessage,w,c
  8335  001E7A  12DE               	iorwf	postinc2,f,c
  8336  001E7C  502B               	movf	??_CANreceiveMessage+1,w,c
  8337  001E7E  12DE               	iorwf	postinc2,f,c
  8338  001E80  502C               	movf	??_CANreceiveMessage+2,w,c
  8339  001E82  12DE               	iorwf	postinc2,f,c
  8340  001E84  502D               	movf	??_CANreceiveMessage+3,w,c
  8341  001E86  12DE               	iorwf	postinc2,f,c
  8342  001E88                     i1l3447:
  8343                           
  8344                           ; BSR set to: 15
  8345                           ;inc\CANlib.h: 629: }
  8346                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
  8347  001E88  9E60               	bcf	3936,7,c	;volatile
  8348                           
  8349                           ; BSR set to: 15
  8350                           ;inc\CANlib.h: 632: return (error);
  8351                           ;	Return value of _CANreceiveMessage is never used
  8352  001E8A  0012               	return	
  8353  001E8C                     __end_of_CANreceiveMessage:
  8354                           	opt stack 0
  8355                           pclatu	equ	0xFFB
  8356                           pclath	equ	0xFFA
  8357                           tblptru	equ	0xFF8
  8358                           tblptrh	equ	0xFF7
  8359                           tblptrl	equ	0xFF6
  8360                           tablat	equ	0xFF5
  8361                           prodh	equ	0xFF4
  8362                           prodl	equ	0xFF3
  8363                           intcon	equ	0xFF2
  8364                           intcon2	equ	0xFF1
  8365                           postinc0	equ	0xFEE
  8366                           fsr0h	equ	0xFEA
  8367                           fsr0l	equ	0xFE9
  8368                           wreg	equ	0xFE8
  8369                           fsr1h	equ	0xFE2
  8370                           fsr1l	equ	0xFE1
  8371                           bsr	equ	0xFE0
  8372                           indf2	equ	0xFDF
  8373                           postinc2	equ	0xFDE
  8374                           postdec2	equ	0xFDD
  8375                           fsr2h	equ	0xFDA
  8376                           fsr2l	equ	0xFD9
  8377                           status	equ	0xFD8
  8378                           
  8379 ;; *************** function _CANisRxReady *****************
  8380 ;; Defined at:
  8381 ;;		line 1163 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;		None
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;		None
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  1    wreg      unsigned char 
  8388 ;; Registers used:
  8389 ;;		wreg, status,2
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8395 ;;      Params:         0       0       0       0
  8396 ;;      Locals:         1       0       0       0
  8397 ;;      Temps:          0       0       0       0
  8398 ;;      Totals:         1       0       0       0
  8399 ;;Total ram usage:        1 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:    3
  8402 ;; This function calls:
  8403 ;;		Nothing
  8404 ;; This function is called by:
  8405 ;;		_ISR_bassa
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           	psect	text20
  8410  00285E                     __ptext20:
  8411                           	opt stack 0
  8412  00285E                     _CANisRxReady:
  8413                           	opt stack 23
  8414                           
  8415                           ;inc\CANlib.h: 1165: return (RXB0CONbits.RXFUL || RXB1CONbits.RXFUL);
  8416                           
  8417                           ; BSR set to: 15
  8418                           ;incstack = 0
  8419  00285E  0E01               	movlw	1
  8420  002860  6E28               	movwf	_CANisRxReady$2800,c
  8421  002862  BE60               	btfsc	3936,7,c	;volatile
  8422  002864  D005               	goto	i1l553
  8423  002866  010F               	movlb	15	; () banked
  8424  002868  BF50               	btfsc	80,7,b	;volatile
  8425  00286A  D002               	goto	i1l553
  8426                           
  8427                           ; BSR set to: 15
  8428  00286C  0E00               	movlw	0
  8429  00286E  6E28               	movwf	_CANisRxReady$2800,c
  8430  002870                     i1l553:
  8431  002870  5028               	movf	_CANisRxReady$2800,w,c
  8432  002872  0012               	return	
  8433  002874                     __end_of_CANisRxReady:
  8434                           	opt stack 0
  8435                           pclatu	equ	0xFFB
  8436                           pclath	equ	0xFFA
  8437                           tblptru	equ	0xFF8
  8438                           tblptrh	equ	0xFF7
  8439                           tblptrl	equ	0xFF6
  8440                           tablat	equ	0xFF5
  8441                           prodh	equ	0xFF4
  8442                           prodl	equ	0xFF3
  8443                           intcon	equ	0xFF2
  8444                           intcon2	equ	0xFF1
  8445                           postinc0	equ	0xFEE
  8446                           fsr0h	equ	0xFEA
  8447                           fsr0l	equ	0xFE9
  8448                           wreg	equ	0xFE8
  8449                           fsr1h	equ	0xFE2
  8450                           fsr1l	equ	0xFE1
  8451                           bsr	equ	0xFE0
  8452                           indf2	equ	0xFDF
  8453                           postinc2	equ	0xFDE
  8454                           postdec2	equ	0xFDD
  8455                           fsr2h	equ	0xFDA
  8456                           fsr2l	equ	0xFD9
  8457                           status	equ	0xFD8
  8458                           
  8459 ;; *************** function _ISR_alta *****************
  8460 ;; Defined at:
  8461 ;;		line 57 in file "motore.c"
  8462 ;; Parameters:    Size  Location     Type
  8463 ;;		None
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;		None
  8466 ;; Return value:  Size  Location     Type
  8467 ;;		None               void
  8468 ;; Registers used:
  8469 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8470 ;; Tracked objects:
  8471 ;;		On entry : 0/0
  8472 ;;		On exit  : 0/0
  8473 ;;		Unchanged: 0/0
  8474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8475 ;;      Params:         0       0       0       0
  8476 ;;      Locals:         0       0       0       0
  8477 ;;      Temps:          0      14       0       0
  8478 ;;      Totals:         0      14       0       0
  8479 ;;Total ram usage:       14 bytes
  8480 ;; Hardware stack levels used:    1
  8481 ;; Hardware stack levels required when called:    2
  8482 ;; This function calls:
  8483 ;;		i2_delay_ms
  8484 ;; This function is called by:
  8485 ;;		Interrupt level 2
  8486 ;; This function uses a non-reentrant model
  8487 ;;
  8488                           
  8489                           	psect	intcode
  8490  000008                     __pintcode:
  8491                           	opt stack 0
  8492  000008                     _ISR_alta:
  8493                           	opt stack 23
  8494                           
  8495                           ;incstack = 0
  8496  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8497  00000A  CFFA F068          	movff	pclath,??_ISR_alta
  8498  00000E  CFFB F069          	movff	pclatu,??_ISR_alta+1
  8499  000012  ED57  F012         	call	int_func,f	;refresh shadow registers
  8500                           pclatu	equ	0xFFB
  8501                           pclath	equ	0xFFA
  8502                           tblptru	equ	0xFF8
  8503                           tblptrh	equ	0xFF7
  8504                           tblptrl	equ	0xFF6
  8505                           tablat	equ	0xFF5
  8506                           prodh	equ	0xFF4
  8507                           prodl	equ	0xFF3
  8508                           intcon	equ	0xFF2
  8509                           intcon2	equ	0xFF1
  8510                           postinc0	equ	0xFEE
  8511                           fsr0h	equ	0xFEA
  8512                           fsr0l	equ	0xFE9
  8513                           wreg	equ	0xFE8
  8514                           fsr1h	equ	0xFE2
  8515                           fsr1l	equ	0xFE1
  8516                           bsr	equ	0xFE0
  8517                           indf2	equ	0xFDF
  8518                           postinc2	equ	0xFDE
  8519                           postdec2	equ	0xFDD
  8520                           fsr2h	equ	0xFDA
  8521                           fsr2l	equ	0xFD9
  8522                           status	equ	0xFD8
  8523                           
  8524                           	psect	intcode_body
  8525  0024AE                     __pintcode_body:
  8526                           	opt stack 23
  8527  0024AE                     int_func:
  8528                           	opt stack 23
  8529  0024AE  0006               	pop		; remove dummy address from shadow register refresh
  8530  0024B0  CFE9 F06A          	movff	fsr0l,??_ISR_alta+2
  8531  0024B4  CFEA F06B          	movff	fsr0h,??_ISR_alta+3
  8532  0024B8  CFE1 F06C          	movff	fsr1l,??_ISR_alta+4
  8533  0024BC  CFE2 F06D          	movff	fsr1h,??_ISR_alta+5
  8534  0024C0  CFD9 F06E          	movff	fsr2l,??_ISR_alta+6
  8535  0024C4  CFDA F06F          	movff	fsr2h,??_ISR_alta+7
  8536  0024C8  CFF3 F070          	movff	prodl,??_ISR_alta+8
  8537  0024CC  CFF4 F071          	movff	prodh,??_ISR_alta+9
  8538  0024D0  CFF6 F072          	movff	tblptrl,??_ISR_alta+10
  8539  0024D4  CFF7 F073          	movff	tblptrh,??_ISR_alta+11
  8540  0024D8  CFF8 F074          	movff	tblptru,??_ISR_alta+12
  8541  0024DC  CFF5 F075          	movff	tablat,??_ISR_alta+13
  8542                           
  8543                           ;motore.c: 58: if (INTCONbits.INT0IF == 1) {
  8544  0024E0  A2F2               	btfss	intcon,1,c	;volatile
  8545  0024E2  D010               	goto	i2l616
  8546                           
  8547                           ;motore.c: 59: delay_ms(1);
  8548  0024E4  0E00               	movlw	0
  8549  0024E6  0100               	movlb	0	; () banked
  8550  0024E8  6F67               	movwf	(i2delay_ms@value_ms+1)& (0+255),b
  8551  0024EA  0E01               	movlw	1
  8552  0024EC  6F66               	movwf	i2delay_ms@value_ms& (0+255),b
  8553  0024EE  ECAE  F013         	call	i2_delay_ms	;wreg free
  8554                           
  8555                           ;motore.c: 60: if (misura == 1) {
  8556  0024F2  A045               	btfss	_misura/(0+8),_misura& (0+7),c
  8557  0024F4  D006               	goto	i2l3845
  8558                           
  8559                           ;motore.c: 61: counter++;
  8560  0024F6  0E01               	movlw	1
  8561  0024F8  2609               	addwf	_counter,f,c
  8562  0024FA  0E00               	movlw	0
  8563  0024FC  220A               	addwfc	_counter+1,f,c
  8564  0024FE  220B               	addwfc	_counter+2,f,c
  8565  002500  220C               	addwfc	_counter+3,f,c
  8566  002502                     i2l3845:
  8567                           
  8568                           ;motore.c: 62: }
  8569                           ;motore.c: 63: INTCONbits.INT0IF = 0;
  8570  002502  92F2               	bcf	intcon,1,c	;volatile
  8571  002504                     i2l616:
  8572  002504  C075  FFF5         	movff	??_ISR_alta+13,tablat
  8573  002508  C074  FFF8         	movff	??_ISR_alta+12,tblptru
  8574  00250C  C073  FFF7         	movff	??_ISR_alta+11,tblptrh
  8575  002510  C072  FFF6         	movff	??_ISR_alta+10,tblptrl
  8576  002514  C071  FFF4         	movff	??_ISR_alta+9,prodh
  8577  002518  C070  FFF3         	movff	??_ISR_alta+8,prodl
  8578  00251C  C06F  FFDA         	movff	??_ISR_alta+7,fsr2h
  8579  002520  C06E  FFD9         	movff	??_ISR_alta+6,fsr2l
  8580  002524  C06D  FFE2         	movff	??_ISR_alta+5,fsr1h
  8581  002528  C06C  FFE1         	movff	??_ISR_alta+4,fsr1l
  8582  00252C  C06B  FFEA         	movff	??_ISR_alta+3,fsr0h
  8583  002530  C06A  FFE9         	movff	??_ISR_alta+2,fsr0l
  8584  002534  C069  FFFB         	movff	??_ISR_alta+1,pclatu
  8585  002538  C068  FFFA         	movff	??_ISR_alta,pclath
  8586  00253C  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8587  00253E  0011               	retfie		f
  8588  002540                     __end_of_ISR_alta:
  8589                           	opt stack 0
  8590                           pclatu	equ	0xFFB
  8591                           pclath	equ	0xFFA
  8592                           tblptru	equ	0xFF8
  8593                           tblptrh	equ	0xFF7
  8594                           tblptrl	equ	0xFF6
  8595                           tablat	equ	0xFF5
  8596                           prodh	equ	0xFF4
  8597                           prodl	equ	0xFF3
  8598                           intcon	equ	0xFF2
  8599                           intcon2	equ	0xFF1
  8600                           postinc0	equ	0xFEE
  8601                           fsr0h	equ	0xFEA
  8602                           fsr0l	equ	0xFE9
  8603                           wreg	equ	0xFE8
  8604                           fsr1h	equ	0xFE2
  8605                           fsr1l	equ	0xFE1
  8606                           bsr	equ	0xFE0
  8607                           indf2	equ	0xFDF
  8608                           postinc2	equ	0xFDE
  8609                           postdec2	equ	0xFDD
  8610                           fsr2h	equ	0xFDA
  8611                           fsr2l	equ	0xFD9
  8612                           status	equ	0xFD8
  8613                           
  8614 ;; *************** function i2_delay_ms *****************
  8615 ;; Defined at:
  8616 ;;		line 61 in file "K:/Tesina/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  value_ms        2    6[BANK0 ] unsigned int 
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;		None
  8621 ;; Return value:  Size  Location     Type
  8622 ;;		None               void
  8623 ;; Registers used:
  8624 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8630 ;;      Params:         0       2       0       0
  8631 ;;      Locals:         0       0       0       0
  8632 ;;      Temps:          0       0       0       0
  8633 ;;      Totals:         0       2       0       0
  8634 ;;Total ram usage:        2 bytes
  8635 ;; Hardware stack levels used:    1
  8636 ;; Hardware stack levels required when called:    1
  8637 ;; This function calls:
  8638 ;;		i2___wmul
  8639 ;; This function is called by:
  8640 ;;		_ISR_alta
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           	psect	text22
  8645  00275C                     __ptext22:
  8646                           	opt stack 0
  8647  00275C                     i2_delay_ms:
  8648                           	opt stack 23
  8649                           
  8650                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  8651                           
  8652                           ;incstack = 0
  8653  00275C  C0B8  F060         	movff	_delay_quartz_frequency_value,i2___wmul@multiplier	;volatile
  8654  002760  0100               	movlb	0	; () banked
  8655  002762  6B61               	clrf	(i2___wmul@multiplier+1)& (0+255),b
  8656  002764  C066  F062         	movff	i2delay_ms@value_ms,i2___wmul@multiplicand
  8657  002768  C067  F063         	movff	i2delay_ms@value_ms+1,i2___wmul@multiplicand+1
  8658  00276C  ECE6  F013         	call	i2___wmul	;wreg free
  8659  002770  C060  F0AD         	movff	?i2___wmul,_clock_counter_reference	;volatile
  8660  002774  C061  F0AE         	movff	?i2___wmul+1,_clock_counter_reference+1	;volatile
  8661                           
  8662                           ;src\delay.c: 75: while (clock_counter_reference) {
  8663  002778  D007               	goto	i2l561
  8664  00277A                     i2l3833:
  8665                           
  8666                           ;src\delay.c: 85: _delay(240);
  8667  00277A  0E50               	movlw	80
  8668  00277C                     i2u455_47:
  8669  00277C  2EE8               	decfsz	wreg,f,c
  8670  00277E  D7FE               	goto	i2u455_47
  8671                           
  8672                           ;src\delay.c: 88: clock_counter_reference--;
  8673  002780  0100               	movlb	0	; () banked
  8674  002782  07AD               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  8675  002784  A0D8               	btfss	status,0,c
  8676  002786  07AE               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  8677  002788                     i2l561:
  8678  002788  0100               	movlb	0	; () banked
  8679  00278A  51AD               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  8680  00278C  0100               	movlb	0	; () banked
  8681  00278E  11AE               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  8682  002790  B4D8               	btfsc	status,2,c
  8683  002792  0012               	return	
  8684  002794  D7F2               	goto	i2l3833
  8685  002796                     __end_ofi2_delay_ms:
  8686                           	opt stack 0
  8687                           pclatu	equ	0xFFB
  8688                           pclath	equ	0xFFA
  8689                           tblptru	equ	0xFF8
  8690                           tblptrh	equ	0xFF7
  8691                           tblptrl	equ	0xFF6
  8692                           tablat	equ	0xFF5
  8693                           prodh	equ	0xFF4
  8694                           prodl	equ	0xFF3
  8695                           intcon	equ	0xFF2
  8696                           intcon2	equ	0xFF1
  8697                           postinc0	equ	0xFEE
  8698                           fsr0h	equ	0xFEA
  8699                           fsr0l	equ	0xFE9
  8700                           wreg	equ	0xFE8
  8701                           fsr1h	equ	0xFE2
  8702                           fsr1l	equ	0xFE1
  8703                           bsr	equ	0xFE0
  8704                           indf2	equ	0xFDF
  8705                           postinc2	equ	0xFDE
  8706                           postdec2	equ	0xFDD
  8707                           fsr2h	equ	0xFDA
  8708                           fsr2l	equ	0xFD9
  8709                           status	equ	0xFD8
  8710                           
  8711 ;; *************** function i2___wmul *****************
  8712 ;; Defined at:
  8713 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8716 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;  __wmul          2    4[BANK0 ] unsigned int 
  8719 ;; Return value:  Size  Location     Type
  8720 ;;                  2    0[BANK0 ] unsigned int 
  8721 ;; Registers used:
  8722 ;;		wreg, status,2, status,0, prodl, prodh
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8728 ;;      Params:         0       4       0       0
  8729 ;;      Locals:         0       2       0       0
  8730 ;;      Temps:          0       0       0       0
  8731 ;;      Totals:         0       6       0       0
  8732 ;;Total ram usage:        6 bytes
  8733 ;; Hardware stack levels used:    1
  8734 ;; This function calls:
  8735 ;;		Nothing
  8736 ;; This function is called by:
  8737 ;;		i2_delay_ms
  8738 ;; This function uses a non-reentrant model
  8739 ;;
  8740                           
  8741                           	psect	text23
  8742  0027CC                     __ptext23:
  8743                           	opt stack 0
  8744  0027CC                     i2___wmul:
  8745                           	opt stack 23
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;incstack = 0
  8749  0027CC  0100               	movlb	0	; () banked
  8750  0027CE  5160               	movf	i2___wmul@multiplier& (0+255),w,b
  8751  0027D0  0100               	movlb	0	; () banked
  8752  0027D2  0362               	mulwf	i2___wmul@multiplicand& (0+255),b
  8753  0027D4  CFF3 F064          	movff	prodl,i2___wmul@product
  8754  0027D8  CFF4 F065          	movff	prodh,i2___wmul@product+1
  8755  0027DC  0100               	movlb	0	; () banked
  8756  0027DE  5160               	movf	i2___wmul@multiplier& (0+255),w,b
  8757  0027E0  0100               	movlb	0	; () banked
  8758  0027E2  0363               	mulwf	(i2___wmul@multiplicand+1)& (0+255),b
  8759  0027E4  50F3               	movf	prodl,w,c
  8760  0027E6  0100               	movlb	0	; () banked
  8761  0027E8  2765               	addwf	(i2___wmul@product+1)& (0+255),f,b
  8762  0027EA  0100               	movlb	0	; () banked
  8763  0027EC  5161               	movf	(i2___wmul@multiplier+1)& (0+255),w,b
  8764  0027EE  0100               	movlb	0	; () banked
  8765  0027F0  0362               	mulwf	i2___wmul@multiplicand& (0+255),b
  8766  0027F2  50F3               	movf	prodl,w,c
  8767  0027F4  0100               	movlb	0	; () banked
  8768  0027F6  2765               	addwf	(i2___wmul@product+1)& (0+255),f,b
  8769                           
  8770                           ; BSR set to: 0
  8771  0027F8  C064  F060         	movff	i2___wmul@product,?i2___wmul
  8772  0027FC  C065  F061         	movff	i2___wmul@product+1,?i2___wmul+1
  8773  002800  0012               	return	
  8774  002802                     __end_ofi2___wmul:
  8775                           	opt stack 0
  8776  0000                     pclatu	equ	0xFFB
  8777                           pclath	equ	0xFFA
  8778                           tblptru	equ	0xFF8
  8779                           tblptrh	equ	0xFF7
  8780                           tblptrl	equ	0xFF6
  8781                           tablat	equ	0xFF5
  8782                           prodh	equ	0xFF4
  8783                           prodl	equ	0xFF3
  8784                           intcon	equ	0xFF2
  8785                           intcon2	equ	0xFF1
  8786                           postinc0	equ	0xFEE
  8787                           fsr0h	equ	0xFEA
  8788                           fsr0l	equ	0xFE9
  8789                           wreg	equ	0xFE8
  8790                           fsr1h	equ	0xFE2
  8791                           fsr1l	equ	0xFE1
  8792                           bsr	equ	0xFE0
  8793                           indf2	equ	0xFDF
  8794                           postinc2	equ	0xFDE
  8795                           postdec2	equ	0xFDD
  8796                           fsr2h	equ	0xFDA
  8797                           fsr2l	equ	0xFD9
  8798                           status	equ	0xFD8
  8799                           pclatu	equ	0xFFB
  8800                           pclath	equ	0xFFA
  8801                           tblptru	equ	0xFF8
  8802                           tblptrh	equ	0xFF7
  8803                           tblptrl	equ	0xFF6
  8804                           tablat	equ	0xFF5
  8805                           prodh	equ	0xFF4
  8806                           prodl	equ	0xFF3
  8807                           intcon	equ	0xFF2
  8808                           intcon2	equ	0xFF1
  8809                           postinc0	equ	0xFEE
  8810                           fsr0h	equ	0xFEA
  8811                           fsr0l	equ	0xFE9
  8812                           wreg	equ	0xFE8
  8813                           fsr1h	equ	0xFE2
  8814                           fsr1l	equ	0xFE1
  8815                           bsr	equ	0xFE0
  8816                           indf2	equ	0xFDF
  8817                           postinc2	equ	0xFDE
  8818                           postdec2	equ	0xFDD
  8819                           fsr2h	equ	0xFDA
  8820                           fsr2l	equ	0xFD9
  8821                           status	equ	0xFD8
  8822                           
  8823                           	psect	param0
  8824  0000                     pclatu	equ	0xFFB
  8825                           pclath	equ	0xFFA
  8826                           tblptru	equ	0xFF8
  8827                           tblptrh	equ	0xFF7
  8828                           tblptrl	equ	0xFF6
  8829                           tablat	equ	0xFF5
  8830                           prodh	equ	0xFF4
  8831                           prodl	equ	0xFF3
  8832                           intcon	equ	0xFF2
  8833                           intcon2	equ	0xFF1
  8834                           postinc0	equ	0xFEE
  8835                           fsr0h	equ	0xFEA
  8836                           fsr0l	equ	0xFE9
  8837                           wreg	equ	0xFE8
  8838                           fsr1h	equ	0xFE2
  8839                           fsr1l	equ	0xFE1
  8840                           bsr	equ	0xFE0
  8841                           indf2	equ	0xFDF
  8842                           postinc2	equ	0xFDE
  8843                           postdec2	equ	0xFDD
  8844                           fsr2h	equ	0xFDA
  8845                           fsr2l	equ	0xFD9
  8846                           status	equ	0xFD8
  8847                           
  8848                           	psect	temp
  8849  000047                     btemp:
  8850                           	opt stack 0
  8851  000047                     	ds	1
  8852  0000                     int$flags	set	btemp
  8853                           pclatu	equ	0xFFB
  8854                           pclath	equ	0xFFA
  8855                           tblptru	equ	0xFF8
  8856                           tblptrh	equ	0xFF7
  8857                           tblptrl	equ	0xFF6
  8858                           tablat	equ	0xFF5
  8859                           prodh	equ	0xFF4
  8860                           prodl	equ	0xFF3
  8861                           intcon	equ	0xFF2
  8862                           intcon2	equ	0xFF1
  8863                           postinc0	equ	0xFEE
  8864                           fsr0h	equ	0xFEA
  8865                           fsr0l	equ	0xFE9
  8866                           wreg	equ	0xFE8
  8867                           fsr1h	equ	0xFE2
  8868                           fsr1l	equ	0xFE1
  8869                           bsr	equ	0xFE0
  8870                           indf2	equ	0xFDF
  8871                           postinc2	equ	0xFDE
  8872                           postdec2	equ	0xFDD
  8873                           fsr2h	equ	0xFDA
  8874                           fsr2l	equ	0xFD9
  8875                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         70
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      70
    BANK0           160     57      89
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(COMRAM[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> NULL(NULL[0]), data_array(COMRAM[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_alta in COMRAM

    None.

Critical Paths under _ISR_bassa in COMRAM

    _ISR_bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _send_data->_CANsendMessage
    _delay_ms->___wmul
    _configurazione_iniziale->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_alta in BANK0

    _ISR_alta->i2_delay_ms
    i2_delay_ms->i2___wmul

Critical Paths under _ISR_bassa in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_alta in BANK1

    None.

Critical Paths under _ISR_bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_alta in BANK2

    None.

Critical Paths under _ISR_bassa in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   14531
                                             48 BANK0      9     9      0
                   _CANisRXwarningON
                   _CANisTXwarningON
                     _CANsendMessage
                          _OpenEPWM1
                         _OpenTimer2
                         _SetDCEPWM1
                     _SetOutputEPWM1
                            ___awdiv
            _configurazione_iniziale
                           _delay_ms
                          _send_data
 ---------------------------------------------------------------------------------
 (1) _send_data                                            0     0      0    3792
                       _CANisTxReady
                     _CANsendMessage
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2     861
                                             28 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     289
                                             22 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _CANsendMessage                                      16     8      8    2907
                                             22 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) _CANisTxReady                                         1     1      0      24
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione_iniziale                              0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             36 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             22 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             22 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     428
                                             22 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _SetOutputEPWM1                                       2     1      1     260
                                             22 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _SetDCEPWM1                                           6     4      2     260
                                             22 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer2                                           1     1      0      44
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenEPWM1                                            1     1      0      22
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CANisTXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANisRXwarningON                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_bassa                                           17    17      0    1161
                                             12 COMRAM    17    17      0
                       _CANisRxReady
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (5) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (5) _CANisRxReady                                         1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR_alta                                            14    14      0     362
                                              8 BANK0     14    14      0
                         i2_delay_ms
 ---------------------------------------------------------------------------------
 (7) i2_delay_ms                                           2     0      2     362
                                              6 BANK0      2     0      2
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) i2___wmul                                             6     2      4     296
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisRXwarningON
   _CANisTXwarningON
   _CANsendMessage
   _OpenEPWM1
   _OpenTimer2
   _SetDCEPWM1
   _SetOutputEPWM1
   ___awdiv
   _configurazione_iniziale
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul
   _send_data
     _CANisTxReady
     _CANsendMessage
     _delay_ms
       ___wmul

 _ISR_bassa (ROOT)
   _CANisRxReady
   _CANreceiveMessage

 _ISR_alta (ROOT)
   i2_delay_ms
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     39      59       4       55.6%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1D      46       1       74.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9F       9        0.0%
DATA                 0      0      9F      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Dec 06 15:27:52 2015

              ??_CANisTXwarningON 0076              __end_of_CANSetFilter 0CA8  
                    ___awdiv@sign 007B                                _id 00A1  
                              bsr 000FE0               ___wmul@multiplicand 0078  
                     __CFG_BORV$3 000000                    _SetOutputEPWM1 2640  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                     __CFG_OSC$HS 000000              _previousTimeCounter1 00A9  
                             l500 0B04                               l501 0B10  
                             l510 0C1C                               l502 0B14  
                             l430 20B6                               l350 22E6  
                             l511 0C20                               l503 0B20  
                             l431 20BA                               l351 22F0  
                             l512 0C2C                               l504 0B24  
                             l440 21C2                               l432 20C6  
                             l424 2086                               l360 0D54  
                             l513 0C30                               l505 0B30  
                             l441 21CE                               l425 208A  
                             l361 0D5E                               l514 0C3C  
                             l506 0B34                               l442 21D2  
                             l426 2096                               l370 11B0  
                             l362 0D68                               l515 0C40  
                             l507 0B40                               l443 21DE  
                             l435 219E                               l427 209A  
                             l371 0F42                               l355 0F2C  
                             l516 0C4C                               l460 06B6  
                             l436 21A2                               l428 20A6  
                             l380 10FC                               l372 0F46  
                             l356 0CBE                               l517 0C50  
                             l461 06C2                               l437 21AE  
                             l429 20AA                               l381 1100  
                             l373 103E                               l365 0E78  
                             l357 0CC2                               l518 0C5C  
                             l470 07CC                               l462 06C6  
                             l438 21B2                               l390 1266  
                             l382 110C                               l374 0FCE  
                             l366 0E7C                               l358 0DBA  
                             l471 07D0                               l463 06D2  
                             l455 0692                               l439 21BE  
                             l391 1270                               l375 0FD8  
                             l367 0E88                               l359 0D4A  
                             l720 2844                               l480 08DC  
                             l472 07DC                               l456 0696  
                             l376 0FE2                               l705 2688  
                             l481 08E8                               l473 07E0  
                             l457 06A2                               l385 11C6  
                             l377 0FEC                               l561 274E  
                             l490 09F4                               l482 08EC  
                             l474 07EC                               l466 07AC  
                             l458 06A6                               l394 1380  
                             l386 11CA                               l634 1490  
                             l491 09F8                               l483 08F8  
                             l467 07B0                               l459 06B2  
                             l395 1384                               l387 12C2  
                             l492 0A04                               l484 08FC  
                             l468 07BC                               l548 2820  
                             l396 1390                               l388 1252  
                             l493 0A08                               l485 0908  
                             l477 08C8                               l469 07C0  
                             l389 125C                               l494 0A14  
                             l478 08CC                               l719 2842  
                             l495 0A18                               l479 08D8  
                             l647 18A0                               l496 0A24  
                             l488 09E4                               l489 09E8  
                             l499 0B00                      __CFG_CPB$OFF 000000  
                             _PR2 000FCB                      __CFG_CPD$OFF 000000  
                             _dir 00AF                               _msg 0011  
                             wreg 000FE8                        i2_delay_ms 275C  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
                            l3113 0E6C                              l3053 22FC  
                            l3055 2340                              l3047 22DE  
                            l3119 0E8C                              l3049 22F4  
                            l3305 2740                              l2611 1F44  
                            l3245 127A                              l3093 0D72  
                            l3271 1394                              l3265 1374  
                            l3169 0FF6                              l3603 2440  
                            l2627 1FFA                              l3195 1110  
                            l3605 244C                              l2901 0952  
                            l2709 0260                              l2653 20CA  
                            l3189 10F0                              l3551 2666  
                            l3623 24A4                              l3615 2482  
                            l3607 2452                              l2727 0318  
                            l2593 2850                              l2833 071C  
                            l2745 03D2                              l3555 2676  
                            l3619 2490                              l2827 06D6  
                            l2763 048C                              l2659 2110  
                            l3571 257A                              l3803 191A  
                            l2861 07F0                              l2781 0546  
                            l2685 21E2                              l3725 14A8  
                            l3591 240C                              l2935 0A6E  
                            l3575 2586                              l2929 0A28  
                            l3753 16C6                              l3745 1642  
                            l3729 14C0                              l2963 0B44  
                            l2867 0836                              l3771 181C  
                            l3763 1784                              l3755 1700  
                            l3597 2422                              l3773 185E  
                            l3749 1684                              l2895 090C  
                            l2799 0600                              l3767 17CE  
                            l3759 173A                              l2969 0B8A  
                            l3793 18EC                              l3785 18C6  
                            l2997 0C60                              l3789 18DA  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              _LATD 000F8C  
                            u2305 1F20                              _LATE 000F8D  
                            u2330 1F76                              u3220 0C80  
                            u3140 0B64                              u3060 0A48  
                            u2500 2202                              u2420 20EA  
                            u2335 1F6A                              u3225 0C74  
                            u3145 0B58                              u3065 0A3C  
                            u2505 21F6                              u2425 20DE  
                            u2345 1FD6                              u2610 034E  
                            u2530 01DC                              u2290 1EC0  
                            u4035 26E8                              u3350 0D92  
                            u2615 0342                              u2535 01D0  
                            u2295 1EB4                              u3360 0DDE  
                            u2705 0522                              u2625 03AE  
                            u2545 023C                              u3505 10C2  
                            u4401 16FE                              u2730 057C  
                            u2650 0408                              u2570 0294  
                            u3610 129A                              u4410 1738  
                            u3355 0D86                              u2900 0810  
                            u2820 06F6                              u3620 12E6  
                            u4420 177C                              u4340 1524  
                            u3365 0DD2                              u4430 17C6  
                            u4350 15BA                              u2735 0570  
                            u2655 03FC                              u2575 0288  
                            u3615 128E                              u3375 0E3E  
                            u3480 1016                              u4440 1810  
                            u4360 1600                              u2905 0804  
                            u2825 06EA                              u2745 05DC  
                            u2665 0468                              u2585 02F4  
                            u3625 12DA                              u2690 04C2  
                            u3490 1062                              u4370 163A  
                            u3635 1346                              u4460 189C  
                            u4380 167C                              u3485 100A  
                            u4390 16BE                              u2695 04B6  
                            u3495 1056                              u4547 2742  
                            u3940 288E                              u2980 092C  
                            u3950 289A                              u2985 0920  
                            _TMR2 000FCC               __size_of_CANSetMask 039E  
                            _main 1434                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 0047                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 019E                     __CFG_IESO$OFF 000000  
                   __CFG_MCLRE$ON 000000                      ___param_bank 000000  
                _CANOperationMode 2848            __end_of_SetOutputEPWM1 2692  
      __size_of_CANreceiveMessage 050C                             ?_main 0028  
                 __end_of___awdiv 24AE                   ___awdiv@divisor 0078  
                           _T2CON 000FCA                             _T3CON 000FB1  
                           i1l402 1C18                             i1l622 0138  
                           i1l631 0156                             i1l553 2870  
                           i1l619 013C                             i2l616 2504  
                           i2l561 2788                   ___awdiv@counter 007A  
                           _TMR3H 000FB3                             _TMR3L 000FB2  
                           _PORTD 000F83                 _CANisRxReady$2800 0028  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISD 000F95  
                           _TRISE 000F96                     __CFG_PWRT$OFF 000000  
                   __CFG_WRT0$OFF 000000                     __CFG_WRT1$OFF 000000  
              __size_of_ISR_bassa 0186                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              CANInitialize@flags 0088                  __end_of_ISR_alta 2540  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                    __CFG_EBTRB$OFF 000000  
                  __pbitbssCOMRAM 0228              __end_of_CANisRxReady 2874  
                           tablat 000FF5              __end_of_CANisTxReady 2826  
                __end_ofi2___wmul 2802                             status 000FD8  
                  __CFG_PBADEN$ON 000000                        _SetDCEPWM1 26DE  
                 __initialization 2692                      __end_of_main 1980  
                 ?_SetOutputEPWM1 0076                            ??_main 0090  
                   __activetblptr 000002                 _CANisTxReady$2798 0076  
                     ?i2_delay_ms 0066                     _counter_array 0001  
                          _ADCON1 000FC1                            _CANCON 000F6F  
                ___awdiv@dividend 0076                   __CFG_BBSIZ$1024 000000  
                          i1l3421 1D78                            i1l3441 1E3A  
                          i1l3433 1E02                            i1l3371 1B86  
                          i1l3445 1E56                            i1l3437 1E1E  
                          i1l3429 1DE6                            i1l3447 1E88  
                          i1l3383 1BE0                            i1l3375 1BA4  
                          i1l3367 1B68                            i1l3359 1AF8  
                          i1l3385 1C12                            i1l3379 1BC2  
                          i1l3665 009C                            i1l3657 0066  
                          i1l3683 0110                            i1l3675 00D6  
                          i1l3689 0122                        _OpenTimer2 2826  
                          i2l3833 277A                            i2l3845 2502  
                          _RXB0D0 000F66                            _RXB0D1 000F67  
                          _RXB0D2 000F68                            _RXB0D3 000F69  
                          _RXB0D4 000F6A                            _RXB1D0 000F56  
                          _RXB0D5 000F6B                            _RXB1D1 000F57  
                          _RXB0D6 000F6C                            _RXB1D2 000F58  
                          _RXB0D7 000F6D                            _RXB1D3 000F59  
                          _RXB1D4 000F5A                            _RXB1D5 000F5B  
                          _RXB1D6 000F5C                            _RXB1D7 000F5D  
                          _TXB0D0 000F46                            _TXB0D1 000F47  
                          _TXB0D2 000F48                            _TXB0D3 000F49  
                          _TXB1D0 000F36                            _TXB0D4 000F4A  
                          _TXB1D1 000F37                            _TXB0D5 000F4B  
                          _TXB1D2 000F38                            _TXB0D6 000F4C  
                          _TXB1D3 000F39                            _TXB0D7 000F4D  
                          _TXB2D0 000F26                            _TXB1D4 000F3A  
                          _TXB2D1 000F27                            _TXB1D5 000F3B  
                          _TXB2D2 000F28                            _TXB1D6 000F3C  
                          _TXB2D3 000F29                            _TXB1D7 000F3D  
                          _TXB2D4 000F2A                            _TXB2D5 000F2B  
                          _TXB2D6 000F2C                            _TXB2D7 000F2D  
              CANsendMessage@data 007A                CANsendMessage@tamp 0082  
                __end_of_delay_ms 275C             __size_of_CANSetFilter 0B06  
                  __CFG_XINST$OFF 000000                __size_of_OpenEPWM1 0012  
               __end_of_ISR_bassa 019E                            ___wmul 2796  
                       ??___awdiv 007A                    __CFG_STVREN$ON 000000  
                    ??_CANSetMask 007B                  OpenTimer2@config 0076  
                          clear_0 2698                            clear_1 26A6  
                ___awdiv@quotient 007C                            _misura 0228  
        ?_configurazione_iniziale 0028                   __CFG_BOREN$BOHW 000000  
                    __pdataCOMRAM 0046                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                    _CANSetFilter 01A2                        __accesstop 0060  
         __end_of__initialization 26D0                __end_of_CANSetMask 222A  
                   ___rparam_used 000000         __size_of_CANisRXwarningON 000C  
                     ?_SetDCEPWM1 0076                    __pcstackCOMRAM 0028  
             __size_ofi2_delay_ms 003A                      __pidataBANK0 289F  
                       ?_ISR_alta 0028             CANSetFilter@numBuffer 007F  
                       ?i2___wmul 0060                   OpenEPWM1@period 0076  
       __size_of_CANisTXwarningON 000C             __size_of_CANisRxReady 0016  
           __size_of_CANisTxReady 0024                 __end_of_OpenEPWM1 2886  
        __end_of_CANOperationMode 285E                        __pbssBANK0 0099  
                     ?_OpenTimer2 0028                        _data_array 0020  
         __size_of_CANsendMessage 078C                           ?___wmul 0076  
                      ??_ISR_alta 0068                __size_of_send_data 0088  
                    _CANisRxReady 285E                           _ECCPR1L 000FBB  
                         _CANSTAT 000F6E                      _CANisTxReady 2802  
                         _BRGCON1 000F70                           _BRGCON2 000F71  
                         _BRGCON3 000F72                        ??i2___wmul 0064  
          __size_of_CANInitialize 01C6                         ?_delay_ms 007C  
                         _RXB0DLC 000F65                           _RXB1DLC 000F55  
                         _RXB0CON 000F60               __size_of_SetDCEPWM1 0044  
                         _RXB1CON 000F50                           _TXB0DLC 000F45  
                         _TXB1DLC 000F35                           _TXB2DLC 000F25  
             CANsendMessage@flags 007D          SetOutputEPWM1@outputmode 0076  
                ??_SetOutputEPWM1 0077                           __Hparam 0000  
                      _left_speed 00B4                           __Lparam 0000  
                delay_ms@value_ms 007C                           ___awdiv 23F0  
                 __size_of___wmul 0036              CANInitialize@propSeg 008D  
                         __pcinit 2692                           __ramtop 0300  
             __size_of_OpenTimer2 0022                           __ptext0 1434  
                         __ptext1 2540                           __ptext2 2722  
                         __ptext3 2796                           __ptext4 0CA8  
                         __ptext5 2802                           __ptext6 25C8  
                         __ptext7 222A                           __ptext8 1E8C  
                         __ptext9 01A2                           _counter 0009  
                       _T2CONbits 000FCA                        _duty_cycle 00B1  
                    ??i2_delay_ms 0068                        ??_delay_ms 007E  
          CANreceiveMessage@error 0032                    __pintcode_body 24AE  
            end_of_initialization 26D0                 __end_of_send_data 25C8  
                   __Lmediumconst 0000                           int_func 24AE  
             i2___wmul@multiplier 0060                  _CANisRXwarningON 2892  
                   _CANInitialize 222A                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
              __end_ofi2_delay_ms 2796                         _ISR_bassa 0018  
                       _PORTAbits 000F80                    CANSetMask@mask 0076  
                  CANSetMask@tamp 0080                    CANSetMask@type 007A  
                _CANisTXwarningON 2886                         _TRISDbits 000F95  
__size_of_configurazione_iniziale 0078               _previousTimeCounter 00A5  
         _clock_counter_reference 00AD                    _CANsendMessage 0CA8  
                CANInitialize@BRP 0087                  CANInitialize@SJW 0086  
                  ?_CANInitialize 0084                        main@period 0098  
                    ??_SetDCEPWM1 0078                        ?_ISR_bassa 0028  
                  __end_of___wmul 27CC                     __pidataCOMRAM 289E  
               __size_of_ISR_alta 2538                  i2___wmul@product 0064  
             start_initialization 2692                 __size_ofi2___wmul 0036  
              __end_of_SetDCEPWM1 2722               CANSetMask@numBuffer 007F  
          __end_of_CANsendMessage 1434                 ?_CANOperationMode 0028  
                    ??_OpenTimer2 0076                         _OpenEPWM1 2874  
              ??_CANOperationMode 0076        CANInitialize@FilterConfig1 008E  
      CANInitialize@FilterConfig2 008F                          ??___wmul 007A  
                     __pdataBANK0 00B8                  __CFG_LPT1OSC$OFF 000000  
              __end_of_OpenTimer2 2848            CANInitialize@phaseSeg1 0084  
          CANInitialize@phaseSeg2 0085                       __pbssCOMRAM 0001  
                   __pcstackBANK0 0060                       _BRGCON2bits 000F71  
                     _BRGCON3bits 000F72               SetDCEPWM1@dutycycle 0076  
               __size_of_delay_ms 003A                   ?_CANsendMessage 0076  
                      ?_OpenEPWM1 0028                   ??_CANInitialize 0089  
                    _currentSpeed 0046                CANSetFilter@filter 0076  
                       __pintcode 0008                          ?___awdiv 0076  
                     ??_ISR_bassa 0034                       __pintcodelo 0018  
                        _ECCP1CON 000FBA          __end_of_CANisRXwarningON 289E  
                     _COMSTATbits 000F74        SetOutputEPWM1@outputconfig 0077  
         _configurazione_iniziale 25C8             CANreceiveMessage@tamp 0033  
                  ___wmul@product 007A                          _IPR2bits 000FA2  
    _delay_quartz_frequency_value 00B8                          _PIE1bits 000F9D  
                        _IPR3bits 000FA5                          _PIE2bits 000FA0  
                       _send_data 2540                          _PIE3bits 000FA3  
        __end_of_CANisTXwarningON 2892                          i1u423_20 009A  
                        i1u373_20 1A38                          i1u373_26 1A3A  
                        i1u374_20 1A66                          i1u382_25 1BEC  
                        i1u374_26 1A68                          i1u384_20 1CC0  
                        i1u376_25 1A7C                          i1u384_26 1CC2  
                        i1u385_20 1CEA                          i1u393_25 1E62  
                        i1u385_26 1CEC                          i1u387_25 1CFE  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        _PIR3bits 000FA4                          i2u455_47 277C  
                        _RXB0EIDH 000F63                          _RXB0EIDL 000F64  
                        _RXB1EIDH 000F53                          _RXB1EIDL 000F54  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                        _RXB0SIDH 000F61                          _RXB0SIDL 000F62  
                        _RXF0EIDH 000F02                          _RXB1SIDH 000F51  
                        _RXF0EIDL 000F03                          _RXB1SIDL 000F52  
                        _RXF1EIDH 000F06                          _RXF1EIDL 000F07  
                        _RXF2EIDH 000F0A                          _RXF2EIDL 000F0B  
                        _RXF3EIDH 000F0E                          _RXF3EIDL 000F0F  
                        _RXF4EIDH 000F12                          _RXF4EIDL 000F13  
                        _RXF5EIDH 000F16                          _RXF5EIDL 000F17  
                        _RXF0SIDH 000F00                          _RXF0SIDL 000F01  
                        _TXB0EIDH 000F43                          _RXF1SIDH 000F04  
                        _TXB0EIDL 000F44                          _RXF1SIDL 000F05  
                        _TXB1EIDH 000F33                          _RXF2SIDH 000F08  
                        _TXB1EIDL 000F34                          _RXF2SIDL 000F09  
                        _ISR_alta 0008                          _TXB2EIDH 000F23  
                        _RXF3SIDH 000F0C                          _TXB2EIDL 000F24  
                        _RXF3SIDL 000F0D                          _RXF4SIDH 000F10  
                        _RXF4SIDL 000F11                          _RXF5SIDH 000F14  
                        _RXF5SIDL 000F15                          _RXM0EIDH 000F1A  
                        _RXM0EIDL 000F1B                          _TXB0SIDH 000F41  
                        _RXM1EIDH 000F1E                          _TXB0SIDL 000F42  
                        _RXM1EIDL 000F1F                          _TXB1SIDH 000F31  
                        _TXB1SIDL 000F32                          _TXB2SIDH 000F21  
                        _TXB2SIDL 000F22                          _RXM0SIDH 000F18  
                        _RXM0SIDL 000F19                          _RXM1SIDH 000F1C  
                        _RXM1SIDL 000F1D                          _RXERRCNT 000F75  
              i2delay_ms@value_ms 0066                          _TXERRCNT 000F76  
               ___wmul@multiplier 0076                          i2___wmul 27CC  
                   ?_CANSetFilter 0076                       _INTCON2bits 000FF1  
                      _CANCONbits 000F6F                       ??_OpenEPWM1 0076  
                        __Hparam0 0000                        ?_send_data 0028  
                        __Lparam0 0000                      _RXB0SIDLbits 000F62  
                SetDCEPWM1@DCycle 007A                      _RXB1SIDLbits 000F52  
                      _CANSetMask 1E8C                  __size_of___awdiv 00BE  
           i2___wmul@multiplicand 0062           __size_of_SetOutputEPWM1 0052  
              _currentSpeed_array 0099         ??_configurazione_iniziale 0090  
                    _RXF0SIDLbits 000F01                          _delay_ms 2722  
                    _RXF1SIDLbits 000F05                    ??_CANSetFilter 007B  
                        __ptext10 2848                          __ptext11 23F0  
                        __ptext20 285E                          __ptext12 2640  
                        __ptext13 26DE                          __ptext22 275C  
                        __ptext14 2826                          __ptext23 27CC  
                        __ptext15 2874                          __ptext16 2886  
                        __ptext17 2892                          __ptext19 1980  
                    _RXF2SIDLbits 000F09                      _RXF3SIDLbits 000F0D  
                    _RXF4SIDLbits 000F11                      _RXF5SIDLbits 000F15  
        CANsendMessage@dataLength 007C                      _remote_frame 0229  
                   __size_of_main 054C                          _duty_set 00B3  
            CANreceiveMessage@msg 0028                      _TXB0SIDLbits 000F42  
                    _TXB1SIDLbits 000F32                      _TXB2SIDLbits 000F22  
                        int$flags 0047         __size_of_CANOperationMode 0016  
                   ?_CANisRxReady 0028                     ?_CANisTxReady 0028  
                     _RXB0DLCbits 000F65                       _RXB1DLCbits 000F55  
                    _RXM0SIDLbits 000F19                       _RXB0CONbits 000F60  
                     _RXB1CONbits 000F50                 _CANreceiveMessage 1980  
                    _RXM1SIDLbits 000F1D                        _INTCONbits 000FF2  
                ??_CANsendMessage 007E                      _requestSpeed 00B6  
              ?_CANreceiveMessage 0028          CANsendMessage@identifier 0076  
                        intlevel1 0000                          intlevel2 0000  
                CANSetFilter@tamp 0080                  CANSetFilter@type 007A  
             ??_CANreceiveMessage 002A                       _TXB0DLCbits 000F45  
                     _right_speed 00B7                       _TXB1DLCbits 000F35  
                     _TXB0CONbits 000F40                       ??_send_data 0086  
                     _TXB2DLCbits 000F25   __end_of_configurazione_iniziale 2640  
                     _TXB1CONbits 000F30                       _TXB2CONbits 000F20  
                     _timeCounter 000D              CANOperationMode@mode 0076  
                  ??_CANisRxReady 0028                       ?_CANSetMask 0076  
                  ??_CANisTxReady 0076         __end_of_CANreceiveMessage 1E8C  
               ?_CANisRXwarningON 0028                ??_CANisRXwarningON 0076  
                     _previousPwm 00B5             __end_of_CANInitialize 23F0  
               ?_CANisTXwarningON 0028  
